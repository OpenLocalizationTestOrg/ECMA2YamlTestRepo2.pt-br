### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackageDigitalSignature
  id: PackageDigitalSignature
  children:
  - System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
  - System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)
  - System.IO.Packaging.PackageDigitalSignature.Signature
  - System.IO.Packaging.PackageDigitalSignature.SignaturePart
  - System.IO.Packaging.PackageDigitalSignature.SignatureType
  - System.IO.Packaging.PackageDigitalSignature.SignatureValue
  - System.IO.Packaging.PackageDigitalSignature.SignedParts
  - System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
  - System.IO.Packaging.PackageDigitalSignature.Signer
  - System.IO.Packaging.PackageDigitalSignature.SigningTime
  - System.IO.Packaging.PackageDigitalSignature.TimeFormat
  - System.IO.Packaging.PackageDigitalSignature.Verify
  - System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)
  langs:
  - csharp
  name: PackageDigitalSignature
  nameWithType: PackageDigitalSignature
  fullName: System.IO.Packaging.PackageDigitalSignature
  type: Class
  summary: "Representa uma assinatura digital é aplicada a um conjunto de partes do pacote e relações."
  remarks: "Um objeto PackageDigitalSignature é imutável e não pode ser alterado depois que ela é criada.       Para segurança, um PackageDigitalSignature pode ser associada a partes em <xref:System.IO.Packaging.Package>.</xref:System.IO.Packaging.Package> Um PackageDigitalSignature incorpora um certificado x.&509; que fornece dois recursos: - identifica e autentica a origem da parte.      -Valida que a parte não foi modificada.       A assinatura digital não impeçam a parte que está sendo modificada, mas uma verificação de validação em relação à assinatura falhará se a parte foi alterado de alguma forma. O aplicativo pode adotar a ação adequada — por exemplo, ele pode impedir que a parte de abertura ou pode notificar o usuário que a parte foi modificada e não é segura.       Para obter mais informações sobre assinaturas digitais de pacote, consulte o artigo do MSDN [estrutura de assinaturas digitais de Open Packaging Conventions](http://go.microsoft.com/fwlink/?LinkId=74494)."
  syntax:
    content: public class PackageDigitalSignature
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
  id: CertificateEmbeddingOption
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: CertificateEmbeddingOption
  nameWithType: PackageDigitalSignature.CertificateEmbeddingOption
  fullName: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém o certificado x.&509; incorporação de opção."
  remarks: "Certificados x.&509; usados para validar um pacote podem ser armazenados em um dos três locais: | | |   |-|-|   | <xref:System.IO.Packaging.CertificateEmbeddingOption>| Em seu próprio certificado <xref:System.IO.Packaging.PackagePart>no pacote.</xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.CertificateEmbeddingOption><br /><br /> O certificado x.&509; pode ser obtido por meio da propriedade <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A>. |   | <xref:System.IO.Packaging.CertificateEmbeddingOption>| No conteúdo do <xref:System.IO.Packaging.PackageDigitalSignature.SignaturePart%2A>no pacote.</xref:System.IO.Packaging.PackageDigitalSignature.SignaturePart%2A> </xref:System.IO.Packaging.CertificateEmbeddingOption> </xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A><br /><br /> O certificado x.&509; pode ser obtido por meio da propriedade <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A>. |   | <xref:System.IO.Packaging.CertificateEmbeddingOption>| Externos ao pacote em um local conhecido, o aplicativo que cria a assinatura e o aplicativo que usa mais tarde a assinatura para validação. |</xref:System.IO.Packaging.CertificateEmbeddingOption> </xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A>"
  syntax:
    content: public System.IO.Packaging.CertificateEmbeddingOption CertificateEmbeddingOption { get; }
    return:
      type: System.IO.Packaging.CertificateEmbeddingOption
      description: "Uma da <xref href=&quot;System.IO.Packaging.CertificateEmbeddingOption&quot;> </xref> valores que especifica a opção para a assinatura digital."
  overload: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>foi excluído.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)
  id: GetPartTransformList(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: GetPartTransformList(Uri)
  nameWithType: PackageDigitalSignature.GetPartTransformList(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Retorna uma lista ordenada do <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> operações aplicado a uma determinada peça."
  syntax:
    content: public System.Collections.Generic.List<string> GetPartTransformList (Uri partName);
    parameters:
    - id: partName
      type: System.Uri
      description: "O <xref:System.Uri>do <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> para retornar a lista de transformação de loop for</xref:System.Uri>"
    return:
      type: System.Collections.Generic.List{System.String}
      description: "Uma lista ordenada de URI cadeias de caracteres, como <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&quot;> </xref> ou <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot;> </xref>, que representa as transformações XML canônicas aplicadas à parte com o determinado <code> partName </code> URI."
  overload: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>foi excluído.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.Signature
  id: Signature
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: Signature
  nameWithType: PackageDigitalSignature.Signature
  fullName: System.IO.Packaging.PackageDigitalSignature.Signature
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém ou define a assinatura digital XML."
  remarks: "Assinatura fornece acesso para a classe base que executa a serialização e funções de criptografia de assinatura de um tipo específico de e para o <xref:System.IO.Packaging.PackagePart>que hospeda a assinatura.</xref:System.IO.Packaging.PackagePart>"
  syntax:
    content: public System.Security.Cryptography.Xml.Signature Signature { get; set; }
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "A assinatura digital XML."
  overload: System.IO.Packaging.PackageDigitalSignature.Signature*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A assinatura digital foi excluída."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignaturePart
  id: SignaturePart
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignaturePart
  nameWithType: PackageDigitalSignature.SignaturePart
  fullName: System.IO.Packaging.PackageDigitalSignature.SignaturePart
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém o <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> que contém a assinatura."
  remarks: "Parte do pacote da assinatura é acessado com frequência quando a assinatura é referendada."
  syntax:
    content: public System.IO.Packaging.PackagePart SignaturePart { get; }
    return:
      type: System.IO.Packaging.PackagePart
      description: "A parte do pacote que contém a assinatura."
  overload: System.IO.Packaging.PackageDigitalSignature.SignaturePart*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>foi excluído.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureType
  id: SignatureType
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignatureType
  nameWithType: PackageDigitalSignature.SignatureType
  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém o [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] cadeia de caracteres que identifica o tipo de assinatura."
  syntax:
    content: public string SignatureType { get; }
    return:
      type: System.String
      description: "Um [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] cadeia de caracteres que identifica o tipo de assinatura. O padrão é <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot;> </xref>."
  overload: System.IO.Packaging.PackageDigitalSignature.SignatureType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>foi excluído.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureValue
  id: SignatureValue
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignatureValue
  nameWithType: PackageDigitalSignature.SignatureValue
  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureValue
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém o valor de hash criptografado de <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  syntax:
    content: public byte[] SignatureValue { get; }
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que contém o valor de hash criptografado de <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  overload: System.IO.Packaging.PackageDigitalSignature.SignatureValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>foi excluído.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignedParts
  id: SignedParts
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignedParts
  nameWithType: PackageDigitalSignature.SignedParts
  fullName: System.IO.Packaging.PackageDigitalSignature.SignedParts
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém uma coleção de todos os <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> objetos assinado com a assinatura."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<Uri> SignedParts { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
      description: "Uma coleção que contém todas as partes do pacote é assinado com a assinatura."
  overload: System.IO.Packaging.PackageDigitalSignature.SignedParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>foi excluído.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
  id: SignedRelationshipSelectors
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignedRelationshipSelectors
  nameWithType: PackageDigitalSignature.SignedRelationshipSelectors
  fullName: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém a lista da <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> partes que foram assinados com a assinatura."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageRelationshipSelector> SignedRelationshipSelectors { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageRelationshipSelector}
      description: "A lista da <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> partes que foram assinados com a assinatura."
  overload: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>foi excluído.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.Signer
  id: Signer
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: Signer
  nameWithType: PackageDigitalSignature.Signer
  fullName: System.IO.Packaging.PackageDigitalSignature.Signer
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém o certificado x.&509; do assinante."
  remarks: "Signatário retorna o certificado x.&509; do assinante quando o certificado digital é armazenado dentro do pacote (isto é, quando <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A>é <xref:System.IO.Packaging.CertificateEmbeddingOption>ou <xref:System.IO.Packaging.CertificateEmbeddingOption>).</xref:System.IO.Packaging.CertificateEmbeddingOption> </xref:System.IO.Packaging.CertificateEmbeddingOption> </xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A>       Retorna signatário `null` quando o certificado x.&509; não é armazenado no pacote (isto é, quando <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A>é <xref:System.IO.Packaging.CertificateEmbeddingOption>).</xref:System.IO.Packaging.CertificateEmbeddingOption> </xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate Signer { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O certificado digital do assinante, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o certificado não é armazenado no <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>."
  overload: System.IO.Packaging.PackageDigitalSignature.Signer*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>foi excluído.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SigningTime
  id: SigningTime
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SigningTime
  nameWithType: PackageDigitalSignature.SigningTime
  fullName: System.IO.Packaging.PackageDigitalSignature.SigningTime
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém a data e a hora em que a assinatura foi criada."
  remarks: "O <xref:System.IO.Packaging.PackageDigitalSignature.TimeFormat%2A>propriedade especifica o formato da data.</xref:System.IO.Packaging.PackageDigitalSignature.TimeFormat%2A>  O formato da cadeia de caracteres SigningTime se baseia o <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A?displayProperty=fullName>propriedade em vigor quando a assinatura foi criada.</xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A?displayProperty=fullName>       SigningTime baseia-se na hora do sistema do computador em que a assinatura foi feita.       SigningTime não é um &quot;carimbo de hora seguro&quot; e não é de autoridade confiável de carimbo de data / hora.  Um carimbo de hora seguro deve ser obtido e aplicado por meio de uma autoridade confiável de carimbo de data / hora."
  syntax:
    content: public DateTime SigningTime { get; }
    return:
      type: System.DateTime
      description: "A data e hora em que a assinatura foi criada."
  overload: System.IO.Packaging.PackageDigitalSignature.SigningTime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>foi excluído.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.TimeFormat
  id: TimeFormat
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: TimeFormat
  nameWithType: PackageDigitalSignature.TimeFormat
  fullName: System.IO.Packaging.PackageDigitalSignature.TimeFormat
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém o formato de data e hora retornados pelo <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>propriedade.</xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>"
  remarks: "Data/hora formatos seguem a sintaxe do W3C [formatos de data e hora](http://go.microsoft.com/fwlink/?LinkId=84446) Observação.  Os componentes mostrados na tabela a seguir devem usar a sintaxe e pontuação mostrado.      | TimeFormat | Descrição | Exemplo |   |----------------|-----------------|-------------|   | AAAA | Ano | 2005 |   | AAAA-MM | Ano e mês | 2005-07 |   | AAAA-MM-DD | Data de conclusão | 2005-07-28 |   | AAAA-MM-DDThh:mmTZD | Concluir a data mais horas e minutos | 2005-07-28T19:20-01:00 |   | AAAA-MM-DDThh:mm:ssTZD | Concluir a data mais horas, minutos e segundos | 2005-07-28T19:20:45-01:00 |   | AAAA-MM-DDThh:mm:ss.sTZD| Concluir a data mais horas, minutos e segundos com uma fração decimal | 2005-07-28T19:20:45.75-01:00 |       onde: | | |   |-|-|   | AAAA | ano de quatro dígitos (por exemplo, 2006) |   | MM | mês de dois dígitos (01 = janeiro) |   | DD | dia de dois dígitos do mês (01 a 31) |   | Thh | hora de dois dígitos (de 00 a 23, 24 horas) |   | mm | dois dígitos de minutos (de 00 a 59) |   | ss | dois dígitos de segundos (de 00 a 59) |   | s | um ou mais dígitos que representa uma fração decimal de um segundo |   | TZD | designador de fuso horário (Z ou + hh: mm ou - hh: mm) |"
  syntax:
    content: public string TimeFormat { get; }
    return:
      type: System.String
      description: "O formato de data e hora retornados pelo <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>propriedade.</xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>"
  overload: System.IO.Packaging.PackageDigitalSignature.TimeFormat*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>foi excluído.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.Verify
  id: Verify
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: Verify()
  nameWithType: PackageDigitalSignature.Verify()
  fullName: System.IO.Packaging.PackageDigitalSignature.Verify()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Verifica a assinatura digital em um certificado x.&509;."
  remarks: "Este método verifica a assinatura em um certificado x.&509; incorporado armazenado em <xref:System.IO.Packaging.Package>.</xref:System.IO.Packaging.Package>"
  syntax:
    content: public System.IO.Packaging.VerifyResult Verify ();
    parameters: []
    return:
      type: System.IO.Packaging.VerifyResult
      description: "<xref href=&quot;System.IO.Packaging.VerifyResult&quot;></xref>Se a verificação for bem-sucedida; Caso contrário, uma da <xref href=&quot;System.IO.Packaging.VerifyResult&quot;> </xref> valores que identifica um problema."
  overload: System.IO.Packaging.PackageDigitalSignature.Verify*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>foi excluído.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Verify(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: Verify(X509Certificate)
  nameWithType: PackageDigitalSignature.Verify(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignature.Verify(X509Certificate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Verifica a assinatura digital em um determinado certificado x.&509;."
  syntax:
    content: public System.IO.Packaging.VerifyResult Verify (System.Security.Cryptography.X509Certificates.X509Certificate signingCertificate);
    parameters:
    - id: signingCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O certificado do assinante x.&509; para verificar a assinatura digital em."
    return:
      type: System.IO.Packaging.VerifyResult
      description: "<xref href=&quot;System.IO.Packaging.VerifyResult&quot;></xref>Se a verificação for bem-sucedida; Caso contrário, uma da <xref href=&quot;System.IO.Packaging.VerifyResult&quot;> </xref> valores que identifica um problema."
  overload: System.IO.Packaging.PackageDigitalSignature.Verify*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>foi excluído.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: CertificateEmbeddingOption
  nameWithType: PackageDigitalSignature.CertificateEmbeddingOption
  fullName: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
- uid: System.IO.Packaging.CertificateEmbeddingOption
  parent: System.IO.Packaging
  isExternal: false
  name: CertificateEmbeddingOption
  nameWithType: CertificateEmbeddingOption
  fullName: System.IO.Packaging.CertificateEmbeddingOption
- uid: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: GetPartTransformList(Uri)
  nameWithType: PackageDigitalSignature.GetPartTransformList(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(Uri)
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.PackageDigitalSignature.Signature
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Signature
  nameWithType: PackageDigitalSignature.Signature
  fullName: System.IO.Packaging.PackageDigitalSignature.Signature
- uid: System.Security.Cryptography.Xml.Signature
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Signature
  nameWithType: Signature
  fullName: System.Security.Cryptography.Xml.Signature
- uid: System.IO.Packaging.PackageDigitalSignature.SignaturePart
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignaturePart
  nameWithType: PackageDigitalSignature.SignaturePart
  fullName: System.IO.Packaging.PackageDigitalSignature.SignaturePart
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureType
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignatureType
  nameWithType: PackageDigitalSignature.SignatureType
  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureValue
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignatureValue
  nameWithType: PackageDigitalSignature.SignatureValue
  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Packaging.PackageDigitalSignature.SignedParts
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignedParts
  nameWithType: PackageDigitalSignature.SignedParts
  fullName: System.IO.Packaging.PackageDigitalSignature.SignedParts
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Uri>
  nameWithType: ReadOnlyCollection<Uri>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Uri>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignedRelationshipSelectors
  nameWithType: PackageDigitalSignature.SignedRelationshipSelectors
  fullName: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageRelationshipSelector}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PackageRelationshipSelector>
  nameWithType: ReadOnlyCollection<PackageRelationshipSelector>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageRelationshipSelector>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.Packaging.PackageRelationshipSelector>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Packaging.PackageRelationshipSelector
    name: PackageRelationshipSelector
    nameWithType: PackageRelationshipSelector
    fullName: PackageRelationshipSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignature.Signer
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Signer
  nameWithType: PackageDigitalSignature.Signer
  fullName: System.IO.Packaging.PackageDigitalSignature.Signer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.IO.Packaging.PackageDigitalSignature.SigningTime
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SigningTime
  nameWithType: PackageDigitalSignature.SigningTime
  fullName: System.IO.Packaging.PackageDigitalSignature.SigningTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IO.Packaging.PackageDigitalSignature.TimeFormat
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: TimeFormat
  nameWithType: PackageDigitalSignature.TimeFormat
  fullName: System.IO.Packaging.PackageDigitalSignature.TimeFormat
- uid: System.IO.Packaging.PackageDigitalSignature.Verify
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Verify()
  nameWithType: PackageDigitalSignature.Verify()
  fullName: System.IO.Packaging.PackageDigitalSignature.Verify()
- uid: System.IO.Packaging.VerifyResult
  parent: System.IO.Packaging
  isExternal: false
  name: VerifyResult
  nameWithType: VerifyResult
  fullName: System.IO.Packaging.VerifyResult
- uid: System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Verify(X509Certificate)
  nameWithType: PackageDigitalSignature.Verify(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignature.Verify(X509Certificate)
- uid: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: CertificateEmbeddingOption
  nameWithType: PackageDigitalSignature.CertificateEmbeddingOption
- uid: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: GetPartTransformList
  nameWithType: PackageDigitalSignature.GetPartTransformList
- uid: System.IO.Packaging.PackageDigitalSignature.Signature*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Signature
  nameWithType: PackageDigitalSignature.Signature
- uid: System.IO.Packaging.PackageDigitalSignature.SignaturePart*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignaturePart
  nameWithType: PackageDigitalSignature.SignaturePart
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureType*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignatureType
  nameWithType: PackageDigitalSignature.SignatureType
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureValue*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignatureValue
  nameWithType: PackageDigitalSignature.SignatureValue
- uid: System.IO.Packaging.PackageDigitalSignature.SignedParts*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignedParts
  nameWithType: PackageDigitalSignature.SignedParts
- uid: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignedRelationshipSelectors
  nameWithType: PackageDigitalSignature.SignedRelationshipSelectors
- uid: System.IO.Packaging.PackageDigitalSignature.Signer*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Signer
  nameWithType: PackageDigitalSignature.Signer
- uid: System.IO.Packaging.PackageDigitalSignature.SigningTime*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SigningTime
  nameWithType: PackageDigitalSignature.SigningTime
- uid: System.IO.Packaging.PackageDigitalSignature.TimeFormat*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: TimeFormat
  nameWithType: PackageDigitalSignature.TimeFormat
- uid: System.IO.Packaging.PackageDigitalSignature.Verify*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Verify
  nameWithType: PackageDigitalSignature.Verify
