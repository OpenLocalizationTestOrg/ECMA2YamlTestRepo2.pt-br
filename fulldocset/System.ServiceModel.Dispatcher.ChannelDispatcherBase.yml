### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  id: ChannelDispatcherBase
  children:
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  langs:
  - csharp
  name: ChannelDispatcherBase
  nameWithType: ChannelDispatcherBase
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  type: Class
  summary: "Classe base abstrata para o distribuidor de canal que aceita os canais e as associa com um serviço."
  remarks: "Isso é usado por desenvolvedores que desejam manter a [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] programação de modelo, mas substituir o tempo de execução fornecida pelo sistema. Esses aplicativos serão pull das mensagens fora de canais e tratá-los diretamente com distribuidores definido pelo usuário. Para usar ChannelDispatcherBase, crie uma classe derivada, estender <xref:System.ServiceModel.ServiceHost>e substituir <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adicionando instâncias de sua classe derivada de ChannelDispatcherBase para <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A> </xref:System.ServiceModel.ServiceHost>       O <xref:System.ServiceModel.Channels.IChannelListener>e o <xref:System.ServiceModel.ServiceHost>, associado com o objeto ChannelDispatcherBase estão disponíveis para a inspeção ou modificação por meio de <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A>e <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>respectivamente.</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> </xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Channels.IChannelListener>       <xref:System.ServiceModel.ServiceHost>chamadas de <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29>ou <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29>métodos ao adicionar ou remover um item de ChannelDispatcherBase do seu <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>coleção.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29></xref:System.ServiceModel.ServiceHost>       <xref:System.ServiceModel.ServiceHost>chamadas de <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A>durante o desligamento antes de fechar InstanceContexts.</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A></xref:System.ServiceModel.ServiceHost> [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]usa essa chamada para fechar canais de datagrama e aguarde até que todas as mensagens obter um InstanceContext."
  syntax:
    content: 'public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: ChannelDispatcherBase()
  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.ChannelDispatcherBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcherBase&quot;> </xref> classe."
  syntax:
    content: protected ChannelDispatcherBase ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)
  id: Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando substituído em uma classe derivada, anexa o dispatcher do canal para um host específico."
  remarks: "Esse método só pode ser definido quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>está no <xref:System.ServiceModel.CommunicationState>state, pois esse é o único estado que é mutável e não descartado.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>       Um <xref:System.ServiceModel.ServiceHost>chama este método quando o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>é adicionado ao seu <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>coleção.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> </xref:System.ServiceModel.ServiceHost>  Isso fornece o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>a chance de vincular eventos e inspecione o <xref:System.ServiceModel.ServiceHost>e fornece o valor que deve ser retornado o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>propriedade.</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> </xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>"
  syntax:
    content: protected virtual void Attach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "O <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> para o serviço."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>host</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O objeto de comunicação está em um <xref:System.ServiceModel.CommunicationState>ou <xref:System.ServiceModel.CommunicationState>estado ou o host já está definido.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto de comunicação está em um <xref:System.ServiceModel.CommunicationState>ou <xref:System.ServiceModel.CommunicationState>estado.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "O objeto de comunicação está em um <xref:System.ServiceModel.CommunicationState>estado.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput
  id: CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: CloseInput()
  nameWithType: ChannelDispatcherBase.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando substituído em uma classe derivada, remove os distribuidores de ponto de extremidade associados com o distribuidor de canal."
  remarks: "<xref:System.ServiceModel.ServiceHost>chama esse método durante o desligamento para dar o dispatcher uma chance para que as mensagens.</xref:System.ServiceModel.ServiceHost> <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>usa essa chamada para fechar canais de datagrama.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  syntax:
    content: public virtual void CloseInput ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)
  id: Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando substituído em uma classe derivada, desanexa o dispatcher do canal de um host específico."
  remarks: "O <xref:System.ServiceModel.ServiceHostBase>só pode ser desanexado quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>está no <xref:System.ServiceModel.CommunicationState>state, pois esse é o único estado que é mutável e não descartado.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.ServiceHostBase>       Deve definir o <xref:System.ServiceModel.ServiceHostBase>associado com o distribuidor de canal para `null`.</xref:System.ServiceModel.ServiceHostBase>       <xref:System.ServiceModel.ServiceHost>chama esse método quando o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>é removido do seu <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>coleção.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase></xref:System.ServiceModel.ServiceHost> Isso fornece a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>uma chance de remover eventos e inspecionar <xref:System.ServiceModel.ServiceHost>.</xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>"
  syntax:
    content: protected virtual void Detach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "The <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;></xref>."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>host</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O objeto de comunicação está em um <xref:System.ServiceModel.CommunicationState>ou <xref:System.ServiceModel.CommunicationState>estado ou o host já está definido.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto de comunicação está em um <xref:System.ServiceModel.CommunicationState>ou <xref:System.ServiceModel.CommunicationState>estado.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "O objeto de comunicação está em um <xref:System.ServiceModel.CommunicationState>estado.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  id: Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Host
  nameWithType: ChannelDispatcherBase.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando substituído em uma classe derivada, obtém o host de serviço associado com o distribuidor de canal."
  remarks: "Cada <xref:System.ServiceModel.ServiceHost>objeto pode ter muitos <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>objetos, cada um associado com outro <xref:System.ServiceModel.Channels.IChannelListener>para esse serviço.</xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.ServiceHost> O host mantém uma lista desses <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>objetos no <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>coleção.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>"
  syntax:
    content: public abstract System.ServiceModel.ServiceHostBase Host { get; }
    return:
      type: System.ServiceModel.ServiceHostBase
      description: "O <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> para o serviço associado com o distribuidor."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  id: Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Listener
  nameWithType: ChannelDispatcherBase.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando substituído em uma classe derivada, obtém a escuta de canal associada com o distribuidor de canal."
  remarks: "Um <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>associa um <xref:System.ServiceModel.Channels.IChannelListener>cujo canais e mensagens isso <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>está distribuindo.</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> </xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  syntax:
    content: public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }
    return:
      type: System.ServiceModel.Channels.IChannelListener
      description: "O <xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref> associado com o distribuidor de canal."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: System.ServiceModel.Channels.CommunicationObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  isExternal: true
  name: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: ChannelDispatcherBase()
  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.ChannelDispatcherBase()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(ServiceHostBase)
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: CloseInput()
  nameWithType: ChannelDispatcherBase.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(ServiceHostBase)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcherBase.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcherBase.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
- uid: System.ServiceModel.Channels.IChannelListener
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: ChannelDispatcherBase
  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Attach
  nameWithType: ChannelDispatcherBase.Attach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: CloseInput
  nameWithType: ChannelDispatcherBase.CloseInput
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Detach
  nameWithType: ChannelDispatcherBase.Detach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcherBase.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcherBase.Listener
