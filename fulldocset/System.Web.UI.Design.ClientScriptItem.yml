### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.ClientScriptItem
  id: ClientScriptItem
  children:
  - System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.Design.ClientScriptItem.Id
  - System.Web.UI.Design.ClientScriptItem.Language
  - System.Web.UI.Design.ClientScriptItem.Source
  - System.Web.UI.Design.ClientScriptItem.Text
  - System.Web.UI.Design.ClientScriptItem.Type
  langs:
  - csharp
  name: ClientScriptItem
  nameWithType: ClientScriptItem
  fullName: System.Web.UI.Design.ClientScriptItem
  type: Class
  summary: "Representa um elemento de script de cliente em um formulário da Web ou controle de usuário em tempo de design. Essa classe não pode ser herdada."
  remarks: "ClientScriptItem classe representa um `script` elemento que está contido em um documento da Web em tempo de design. Uma implementação de designer de controle personalizado pode usar um objeto ClientScriptItem para adicionar elementos de script de cliente a um controle de formulário da Web ou de usuário.       Em tempo de design, use o <xref:System.Web.UI.Design.WebFormsRootDesigner>classe para definir ou examinar os elementos de script de cliente que estão contidos em um documento, como um formulário da Web, um controle de servidor Web, uma página de conteúdo ou uma página mestra, na superfície de design.</xref:System.Web.UI.Design.WebFormsRootDesigner> Recuperar a coleção de elementos de script de cliente que estão contidos dentro do documento da Web usando o <xref:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument%2A>método.</xref:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument%2A> Adicionar um elemento de script de cliente para o documento da Web usando o <xref:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument%2A>método.</xref:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument%2A>       Normalmente, um `script` elemento contém instruções de script ou especifica um local externo para instruções de script. O `script` elemento pode, opcionalmente, definir o idioma das instruções de script. Use o <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A>construtor para inicializar as propriedades para um novo objeto de script.</xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> Use as propriedades ClientScriptItem para examinar o `script` atributos e conteúdo do objeto. O <xref:System.Web.UI.Design.ClientScriptItem.Language%2A>propriedade representa o `language` atributo o `script` elemento.</xref:System.Web.UI.Design.ClientScriptItem.Language%2A> O <xref:System.Web.UI.Design.ClientScriptItem.Source%2A>propriedade representa o `src` atributo.</xref:System.Web.UI.Design.ClientScriptItem.Source%2A> O <xref:System.Web.UI.Design.ClientScriptItem.Text%2A>propriedade representa as instruções de script a ser executado no cliente que estão contidos no `script` elemento.</xref:System.Web.UI.Design.ClientScriptItem.Text%2A>       Use a classe ClientScriptItem para gerenciar scripts que serão executadas em tempo de design.       Para gerenciar os elementos de script de cliente em tempo de execução, use a <xref:System.Web.UI.ClientScriptManager>classe.</xref:System.Web.UI.ClientScriptManager> Para obter mais informações sobre como usar scripts de cliente em tempo de execução, consulte [Script de cliente em páginas da Web do ASP.NET](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > ClientScriptItem a classe representa `script` elementos em tempo de design que, por fim, analisado e executado no navegador cliente. Porque o `script` elementos que são gerados para os objetos ClientScriptItem não são executados no servidor, os elementos não contêm o `runat=&quot;server&quot;` atributo."
  syntax:
    content: public sealed class ClientScriptItem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: System.Web.UI.Design.ClientScriptItem
  langs:
  - csharp
  name: ClientScriptItem(String,String,String,String,String)
  nameWithType: ClientScriptItem.ClientScriptItem(String,String,String,String,String)
  fullName: System.Web.UI.Design.ClientScriptItem.ClientScriptItem(String,String,String,String,String)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.Design.ClientScriptItem&quot;> </xref> classe usando os parâmetros fornecidos."
  remarks: "Inicializar as instruções para o <xref:System.Web.UI.Design.ClientScriptItem>objeto usando o `text` ou `source` parâmetro (não ambos).</xref:System.Web.UI.Design.ClientScriptItem> Use `text` para inicializar o script usando uma cadeia de caracteres de entrada que contém as instruções. Como alternativa, use `source` para inicializar um script usando um caminho que contém as instruções de script.       Você pode especificar qualquer um dos parâmetros de entrada como `null` ou uma cadeia de caracteres vazia (&quot;&quot;); a propriedade correspondente é definida usando o valor de entrada e o `script` elemento é gerado sem essa propriedade. Usando `null` ou uma cadeia de caracteres vazia (&quot;&quot;) gera os seguintes resultados: - para `text`, correspondente `script` elemento não contém instruções de script.      -Para `source`, o `src` atributo não está definido no `script` elemento.      -Para `language`, o `language` atributo não está definido no `script` elemento.           Quando um bloco de script de cliente não especifica a linguagem de script, o navegador do cliente determina o idioma.      -Para `type`, o `type` atributo não está definido no elemento do script.           Quando um bloco de script de cliente não especifica o tipo de script, o navegador do cliente determina o tipo.      -Para `id`, o host de design (por exemplo, [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]) lançará um <xref:System.ArgumentNullException>.</xref:System.ArgumentNullException>"
  syntax:
    content: public ClientScriptItem (string text, string source, string language, string type, string id);
    parameters:
    - id: text
      type: System.String
      description: "O conteúdo para o <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elemento; uma cadeia de caracteres de instruções de script para ser executado no cliente."
    - id: source
      type: System.String
      description: "O <xref uid=&quot;langword_csharp_src&quot; name=&quot;src&quot; href=&quot;&quot;> </xref> atributo de valor para o <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elemento, especificando um local de fonte externa para o conteúdo do script de cliente."
    - id: language
      type: System.String
      description: "O <xref uid=&quot;langword_csharp_language&quot; name=&quot;language&quot; href=&quot;&quot;> </xref> atributo de valor para o <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elemento, especificando o idioma das instruções de script."
    - id: type
      type: System.String
      description: "O valor do atributo de tipo para o <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elemento, que indica o tipo MIME para o mecanismo de script associado."
    - id: id
      type: System.String
      description: "A ID para o <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elemento. Esse argumento é necessário para o host de design (por exemplo, [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)])."
  overload: System.Web.UI.Design.ClientScriptItem.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>é nulo (lançada pelo host de design)."
  platform:
  - net462
- uid: System.Web.UI.Design.ClientScriptItem.Id
  id: Id
  parent: System.Web.UI.Design.ClientScriptItem
  langs:
  - csharp
  name: Id
  nameWithType: ClientScriptItem.Id
  fullName: System.Web.UI.Design.ClientScriptItem.Id
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Obtém o <xref uid=&quot;langword_csharp_ID&quot; name=&quot;ID&quot; href=&quot;&quot;> </xref> valor do elemento de script de cliente do atributo."
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "O <xref uid=&quot;langword_csharp_ID&quot; name=&quot;ID&quot; href=&quot;&quot;> </xref> valor o <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Web.UI.Design.ClientScriptItem.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ClientScriptItem.Language
  id: Language
  parent: System.Web.UI.Design.ClientScriptItem
  langs:
  - csharp
  name: Language
  nameWithType: ClientScriptItem.Language
  fullName: System.Web.UI.Design.ClientScriptItem.Language
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Obtém o <xref uid=&quot;langword_csharp_language&quot; name=&quot;language&quot; href=&quot;&quot;> </xref> valor do elemento de script de cliente do atributo."
  remarks: "A propriedade de idioma representa o idioma no qual as instruções de script são gravadas. Se a propriedade de idioma é `null` ou uma cadeia de caracteres vazia (&quot;&quot;), o `language` atributo não está definido no `script` elemento. Quando um bloco de script de cliente não especifica a linguagem de script, o navegador do cliente determina o idioma.       A propriedade de idioma é inicializada, o <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A>construtor.</xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A>"
  syntax:
    content: public string Language { get; }
    return:
      type: System.String
      description: "O nome do idioma especificado para o <xref uid=&quot;langword_csharp_language&quot; name=&quot;language&quot; href=&quot;&quot;> </xref> atributo o <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Web.UI.Design.ClientScriptItem.Language*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ClientScriptItem.Source
  id: Source
  parent: System.Web.UI.Design.ClientScriptItem
  langs:
  - csharp
  name: Source
  nameWithType: ClientScriptItem.Source
  fullName: System.Web.UI.Design.ClientScriptItem.Source
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Obtém o <xref uid=&quot;langword_csharp_src&quot; name=&quot;src&quot; href=&quot;&quot;> </xref> valor do elemento de script de cliente do atributo."
  remarks: "A propriedade de origem Especifica um local de fonte externa para o conteúdo do script de cliente. Normalmente, as instruções de script para um `script` elemento são especificados usando o <xref:System.Web.UI.Design.ClientScriptItem.Text%2A>ou propriedade de origem.</xref:System.Web.UI.Design.ClientScriptItem.Text%2A>       Se a propriedade de origem for `null` ou uma cadeia de caracteres vazia (&quot;&quot;), o `src` atributo não está definido no `script` elemento.       A propriedade de origem é inicializada por <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A>.</xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A>"
  syntax:
    content: public string Source { get; }
    return:
      type: System.String
      description: "O caminho para o arquivo de origem especificado para o <xref uid=&quot;langword_csharp_src&quot; name=&quot;src&quot; href=&quot;&quot;> </xref> atributo o <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Web.UI.Design.ClientScriptItem.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ClientScriptItem.Text
  id: Text
  parent: System.Web.UI.Design.ClientScriptItem
  langs:
  - csharp
  name: Text
  nameWithType: ClientScriptItem.Text
  fullName: System.Web.UI.Design.ClientScriptItem.Text
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Obtém as instruções de script contidas no elemento de script de cliente."
  remarks: "A propriedade de texto representa as instruções contidas no `script` elemento. Normalmente, as instruções de script para um `script` elemento são especificados usando o texto ou <xref:System.Web.UI.Design.ClientScriptItem.Source%2A>propriedade.</xref:System.Web.UI.Design.ClientScriptItem.Source%2A>       Se a propriedade Text é `null` ou uma cadeia de caracteres vazia (&quot;&quot;), o `script` elemento não contém quaisquer instruções de script.       O <xref:System.Web.UI.Design.ClientScriptItem.Source%2A>propriedade é inicializada através de <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A>construtor.</xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> </xref:System.Web.UI.Design.ClientScriptItem.Source%2A>"
  syntax:
    content: public string Text { get; }
    return:
      type: System.String
      description: "As instruções de script contidas no <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Web.UI.Design.ClientScriptItem.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ClientScriptItem.Type
  id: Type
  parent: System.Web.UI.Design.ClientScriptItem
  langs:
  - csharp
  name: Type
  nameWithType: ClientScriptItem.Type
  fullName: System.Web.UI.Design.ClientScriptItem.Type
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Obtém o <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> valor do elemento de script de cliente do atributo."
  syntax:
    content: public string Type { get; }
    return:
      type: System.String
      description: "O nome do tipo de MIME associado a <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Web.UI.Design.ClientScriptItem.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.Design.ClientScriptItem
  isExternal: false
  name: ClientScriptItem(String,String,String,String,String)
  nameWithType: ClientScriptItem.ClientScriptItem(String,String,String,String,String)
  fullName: System.Web.UI.Design.ClientScriptItem.ClientScriptItem(String,String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Design.ClientScriptItem.Id
  parent: System.Web.UI.Design.ClientScriptItem
  isExternal: false
  name: Id
  nameWithType: ClientScriptItem.Id
  fullName: System.Web.UI.Design.ClientScriptItem.Id
- uid: System.Web.UI.Design.ClientScriptItem.Language
  parent: System.Web.UI.Design.ClientScriptItem
  isExternal: false
  name: Language
  nameWithType: ClientScriptItem.Language
  fullName: System.Web.UI.Design.ClientScriptItem.Language
- uid: System.Web.UI.Design.ClientScriptItem.Source
  parent: System.Web.UI.Design.ClientScriptItem
  isExternal: false
  name: Source
  nameWithType: ClientScriptItem.Source
  fullName: System.Web.UI.Design.ClientScriptItem.Source
- uid: System.Web.UI.Design.ClientScriptItem.Text
  parent: System.Web.UI.Design.ClientScriptItem
  isExternal: false
  name: Text
  nameWithType: ClientScriptItem.Text
  fullName: System.Web.UI.Design.ClientScriptItem.Text
- uid: System.Web.UI.Design.ClientScriptItem.Type
  parent: System.Web.UI.Design.ClientScriptItem
  isExternal: false
  name: Type
  nameWithType: ClientScriptItem.Type
  fullName: System.Web.UI.Design.ClientScriptItem.Type
- uid: System.Web.UI.Design.ClientScriptItem.#ctor*
  parent: System.Web.UI.Design.ClientScriptItem
  isExternal: false
  name: ClientScriptItem
  nameWithType: ClientScriptItem.ClientScriptItem
- uid: System.Web.UI.Design.ClientScriptItem.Id*
  parent: System.Web.UI.Design.ClientScriptItem
  isExternal: false
  name: Id
  nameWithType: ClientScriptItem.Id
- uid: System.Web.UI.Design.ClientScriptItem.Language*
  parent: System.Web.UI.Design.ClientScriptItem
  isExternal: false
  name: Language
  nameWithType: ClientScriptItem.Language
- uid: System.Web.UI.Design.ClientScriptItem.Source*
  parent: System.Web.UI.Design.ClientScriptItem
  isExternal: false
  name: Source
  nameWithType: ClientScriptItem.Source
- uid: System.Web.UI.Design.ClientScriptItem.Text*
  parent: System.Web.UI.Design.ClientScriptItem
  isExternal: false
  name: Text
  nameWithType: ClientScriptItem.Text
- uid: System.Web.UI.Design.ClientScriptItem.Type*
  parent: System.Web.UI.Design.ClientScriptItem
  isExternal: false
  name: Type
  nameWithType: ClientScriptItem.Type
