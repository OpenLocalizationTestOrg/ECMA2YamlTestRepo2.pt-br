### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeMethodReferenceExpression
  id: CodeMethodReferenceExpression
  children:
  - System.CodeDom.CodeMethodReferenceExpression.#ctor
  - System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)
  - System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])
  - System.CodeDom.CodeMethodReferenceExpression.MethodName
  - System.CodeDom.CodeMethodReferenceExpression.TargetObject
  - System.CodeDom.CodeMethodReferenceExpression.TypeArguments
  langs:
  - csharp
  name: CodeMethodReferenceExpression
  nameWithType: CodeMethodReferenceExpression
  fullName: System.CodeDom.CodeMethodReferenceExpression
  type: Class
  summary: "Representa uma referência a um método."
  remarks: "Um CodeMethodReferenceExpression pode ser usado para representar uma expressão de formato Object. Method.       O <xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A>propriedade indica o objeto que contém o método.</xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A> O <xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A>propriedade indica o nome do método.</xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A>       Um CodeMethodReferenceExpression é usado com um <xref:System.CodeDom.CodeMethodInvokeExpression>para indicar o método a ser invocado e com um <xref:System.CodeDom.CodeDelegateCreateExpression>para indicar o método para manipular o evento.</xref:System.CodeDom.CodeDelegateCreateExpression> </xref:System.CodeDom.CodeMethodInvokeExpression>"
  example:
  - "The following code example uses a CodeMethodReferenceExpression to refer to a method:  \n  \n [!code-cs[CodeMethodReferenceExample#3](~/add/codesnippet/csharp/t-system.codedom.codemet_1_1.cs)]\n [!code-vb[CodeMethodReferenceExample#3](~/add/codesnippet/visualbasic/t-system.codedom.codemet_1_1.vb)]\n [!code-cpp[CodeMethodReferenceExample#3](~/add/codesnippet/cpp/t-system.codedom.codemet_1_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeMethodReferenceExpression : System.CodeDom.CodeExpression
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeExpression
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: CodeMethodReferenceExpression()
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression()
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;> </xref> classe."
  syntax:
    content: public CodeMethodReferenceExpression ();
    parameters: []
  overload: System.CodeDom.CodeMethodReferenceExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)
  id: '#ctor(System.CodeDom.CodeExpression,System.String)'
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: CodeMethodReferenceExpression(CodeExpression,String)
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;> </xref> classe usando o nome de objeto e o método de destino especificado."
  syntax:
    content: public CodeMethodReferenceExpression (System.CodeDom.CodeExpression targetObject, string methodName);
    parameters:
    - id: targetObject
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que indica o objeto de destino."
    - id: methodName
      type: System.String
      description: "O nome do método a ser chamado."
  overload: System.CodeDom.CodeMethodReferenceExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])
  id: '#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])'
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;> </xref> classe usando o objeto de destino especificado, o nome do método e argumentos de tipo genérico."
  remarks: "O `typeParameters` parâmetro representa uma coleção de referências de tipo a ser substituído para as referências de parâmetro de tipo do método genérico atual."
  example:
  - "The following code example shows the use of this constructor.  \n  \n [!code-cs[System.CodeDom.CodeMethodReferenceExpression#1](~/add/codesnippet/csharp/c13bd512-df02-4e88-9c27-_1.cs)]\n [!code-vb[System.CodeDom.CodeMethodReferenceExpression#1](~/add/codesnippet/visualbasic/c13bd512-df02-4e88-9c27-_1.vb)]\n [!code-cpp[System.CodeDom.CodeMethodReferenceExpression#1](~/add/codesnippet/cpp/c13bd512-df02-4e88-9c27-_1.cpp)]"
  syntax:
    content: public CodeMethodReferenceExpression (System.CodeDom.CodeExpression targetObject, string methodName, System.CodeDom.CodeTypeReference[] typeParameters);
    parameters:
    - id: targetObject
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que indica o objeto de destino."
    - id: methodName
      type: System.String
      description: "O nome do método a ser chamado."
    - id: typeParameters
      type: System.CodeDom.CodeTypeReference[]
      description: "Uma matriz de <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> valores que especificam o <xref:System.CodeDom.CodeMethodReferenceExpression.TypeArguments*>para este <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;> </xref>.</xref:System.CodeDom.CodeMethodReferenceExpression.TypeArguments*>"
  overload: System.CodeDom.CodeMethodReferenceExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.MethodName
  id: MethodName
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: MethodName
  nameWithType: CodeMethodReferenceExpression.MethodName
  fullName: System.CodeDom.CodeMethodReferenceExpression.MethodName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define o nome do método para fazer referência."
  syntax:
    content: public string MethodName { get; set; }
    return:
      type: System.String
      description: "O nome do método para fazer referência."
  overload: System.CodeDom.CodeMethodReferenceExpression.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.TargetObject
  id: TargetObject
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: TargetObject
  nameWithType: CodeMethodReferenceExpression.TargetObject
  fullName: System.CodeDom.CodeMethodReferenceExpression.TargetObject
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define a expressão que indica o método para fazer referência."
  syntax:
    content: public System.CodeDom.CodeExpression TargetObject { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que representa o método para fazer referência."
  overload: System.CodeDom.CodeMethodReferenceExpression.TargetObject*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.TypeArguments
  id: TypeArguments
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: TypeArguments
  nameWithType: CodeMethodReferenceExpression.TypeArguments
  fullName: System.CodeDom.CodeMethodReferenceExpression.TypeArguments
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém os argumentos de tipo para a expressão de referência de método genérico atual."
  remarks: "A propriedade TypeArguments representa uma coleção de referências de tipo a ser substituído para as referências de parâmetro de tipo do método genérico atual."
  syntax:
    content: public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }
    return:
      type: System.CodeDom.CodeTypeReferenceCollection
      description: "Um <xref href=&quot;System.CodeDom.CodeTypeReferenceCollection&quot;> </xref> que contém os argumentos de tipo para o código atual <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;> </xref>."
  overload: System.CodeDom.CodeMethodReferenceExpression.TypeArguments*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeExpression
  isExternal: false
  name: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: CodeMethodReferenceExpression()
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression()
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression()
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: CodeMethodReferenceExpression(CodeExpression,String)
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
- uid: System.CodeDom.CodeTypeReference[]
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference[]
  spec.csharp:
  - uid: System.CodeDom.CodeTypeReference
    name: CodeTypeReference
    nameWithType: CodeTypeReference
    fullName: CodeTypeReference[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.CodeMethodReferenceExpression.MethodName
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: MethodName
  nameWithType: CodeMethodReferenceExpression.MethodName
  fullName: System.CodeDom.CodeMethodReferenceExpression.MethodName
- uid: System.CodeDom.CodeMethodReferenceExpression.TargetObject
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: TargetObject
  nameWithType: CodeMethodReferenceExpression.TargetObject
  fullName: System.CodeDom.CodeMethodReferenceExpression.TargetObject
- uid: System.CodeDom.CodeMethodReferenceExpression.TypeArguments
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: TypeArguments
  nameWithType: CodeMethodReferenceExpression.TypeArguments
  fullName: System.CodeDom.CodeMethodReferenceExpression.TypeArguments
- uid: System.CodeDom.CodeTypeReferenceCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceCollection
  nameWithType: CodeTypeReferenceCollection
  fullName: System.CodeDom.CodeTypeReferenceCollection
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor*
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: CodeMethodReferenceExpression
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression
- uid: System.CodeDom.CodeMethodReferenceExpression.MethodName*
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: MethodName
  nameWithType: CodeMethodReferenceExpression.MethodName
- uid: System.CodeDom.CodeMethodReferenceExpression.TargetObject*
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: TargetObject
  nameWithType: CodeMethodReferenceExpression.TargetObject
- uid: System.CodeDom.CodeMethodReferenceExpression.TypeArguments*
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: TypeArguments
  nameWithType: CodeMethodReferenceExpression.TypeArguments
