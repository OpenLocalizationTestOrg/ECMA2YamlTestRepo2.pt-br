### YamlMime:ManagedReference
items:
- uid: System.EntryPointNotFoundException
  id: EntryPointNotFoundException
  children:
  - System.EntryPointNotFoundException.#ctor
  - System.EntryPointNotFoundException.#ctor(System.String)
  - System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: EntryPointNotFoundException
  nameWithType: EntryPointNotFoundException
  fullName: System.EntryPointNotFoundException
  type: Class
  summary: "A exceção que é lançada quando uma tentativa de carregar uma classe falhar devido à ausência de um método de entrada."
  remarks: "Exceção EntryPointNotFoundException é lançada quando o common language runtime não pode carregar um assembly porque ele não pode identificar o ponto de entrada do assembly.  Essa exceção pode ser lançada sob as seguintes condições:-o common language runtime é não é possível localizar um ponto de entrada do aplicativo (normalmente um `Main` método) em um assembly. O ponto de entrada do aplicativo deve ser global ou `static` método que tem uma matriz de cadeia de caracteres como seu único parâmetro ou sem parâmetros. O ponto de entrada pode retornar `void`, ou ele pode retornar um <xref:System.Int32>ou <xref:System.UInt32>código de saída.</xref:System.UInt32> </xref:System.Int32> Um assembly de aplicativo não é possível definir mais de um ponto de entrada.      -A chamada para uma função em uma DLL do Windows não pode ser resolvida porque a função não pode ser encontrada. No exemplo a seguir, uma exceção EntryPointNotFoundException é lançada porque User32. dll não inclui uma função chamada `GetMyNumber`.           [!code-cs[System.EntryPointNotFoundException.Class#1](~/add/codesnippet/csharp/t-system.entrypointnotfo_1.cs)][!code-vb[System.EntryPointNotFoundException.Class#1](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_1.vb) ] -a chamada para uma função em uma DLL do Windows não pode ser resolvida porque o nome usado na chamada do método não coincide com um nome foi encontrado no assembly.       Geralmente, isso ocorre porque o <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName>campo é definido implicitamente ou explicitamente como `true`, o método chamado inclui um ou mais parâmetros de cadeia de caracteres e não tem um ANSI e uma versão de Unicode e o nome usado na chamada do método não corresponde ao nome dessa versão ANSI ou Unicode.</xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName> O exemplo a seguir fornece uma ilustração, as tentativas de chamar o Windows `MessageBox` função na User32. dll. Como a primeira definição de método especifica <xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName>para empacotamento de cadeia de caracteres, o common language procura a versão de caractere largo da função, `MessageBoxW`, em vez do nome usado na chamada do método, `MessageBox`.</xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName>  A segunda definição de método corrige esse problema, chamando o `MessageBoxW` em vez do `MessageBox` função.           [!code-vb[System.EntryPointNotFoundException.Class#2](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_2.vb)][!code-cs[System.EntryPointNotFoundException.Class#2](~/add/codesnippet/csharp/t-system.entrypointnotfo_2.cs) ] -você está tentando chamar uma função em uma biblioteca de vínculo dinâmico por seu nome simple em vez de seu nome decorado.       Normalmente, o compilador do C++ gera um nome decorado para funções DLL. Por exemplo, o código C++ a seguir define uma função chamada `Double` em uma biblioteca denominada TestDll.dll.           [!code-cpp[System.EntryPointNotFoundException.Class#6](~/add/codesnippet/cpp/testdll/testdll.cpp#6) ] quando o código no exemplo a seguir tenta chamar a função, uma exceção EntryPointNotFoundException foi lançada porque o `Double` função não pode ser encontrada.           [!code-cs[System.EntryPointNotFoundException.Class#7](~/add/codesnippet/csharp/t-system.entrypointnotfo_4.cs)][!code-vb[System.EntryPointNotFoundException.Class#7](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_4.vb) ] no entanto, se a função é chamada usando seu nome decorado (nesse caso, `?Double@@YAHH@Z`), a chamada de função tiver êxito, como mostra o exemplo a seguir.                 [!code-cs[System.EntryPointNotFoundException.Class#8](~/add/codesnippet/csharp/t-system.entrypointnotfo_5.cs)][!code-vb[System.EntryPointNotFoundException.Class#8](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_5.vb) ] você pode encontrar os nomes decorados das funções exportadas por uma DLL usando um utilitário como Dumpbin.exe.            -Você está tentando chamar um método em um assembly gerenciado como se fosse uma biblioteca de vínculo dinâmico não gerenciado. Para ver isso em ação, compile o exemplo a seguir em um assembly denominado StringUtilities.dll.           [!code-cs[System.EntryPointNotFoundException.Class#3](~/add/codesnippet/csharp/t-system.entrypointnotfo_6.cs)][!code-vb[System.EntryPointNotFoundException.Class#3](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_6.vb) ] , em seguida, compilar e executar o exemplo a seguir, que tenta chamar o `StringUtilities.SayGoodMorning` método na biblioteca de vínculo dinâmico StringUtilities.dll como se fosse o código não gerenciado.       O resultado é uma exceção EntryPointNotFoundException.           [!code-cs[System.EntryPointNotFoundException.Class#4](~/add/codesnippet/csharp/t-system.entrypointnotfo_7.cs)][!code-vb[System.EntryPointNotFoundException.Class#4](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_7.vb) ] para eliminar a exceção, adicione uma referência ao assembly gerenciado e acesso a `StringUtilities.SayGoodMorning` método exatamente como você acessaria qualquer outro método no código gerenciado, como o exemplo a seguir.                 [!code-cs[System.EntryPointNotFoundException.Class#5](~/add/codesnippet/csharp/t-system.entrypointnotfo_8.cs)][!code-vb[System.EntryPointNotFoundException.Class#5](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_8.vb) ] -você está tentando chamar um método em uma DLL COM, como se fosse uma DLL do Windows.       Para acessar uma DLL COM, selecione a **adicionar referência** opção no Visual Studio para adicionar uma referência ao projeto e, em seguida, selecione a biblioteca de tipos do **COM** guia.       Para obter uma lista de valores de propriedade inicial para uma instância de EntryPointNotFoundException, consulte o <xref:System.EntryPointNotFoundException.%23ctor%2A>construtores.</xref:System.EntryPointNotFoundException.%23ctor%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class EntryPointNotFoundException : TypeLoadException
  inheritance:
  - System.TypeLoadException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor
  id: '#ctor'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException()
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException()
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> classe."
  remarks: "Este construtor inicializa a <xref:System.Exception.Message%2A>propriedade da nova instância para uma mensagem fornecida pelo sistema que descreve o erro, como &quot;Não foi encontrado ponto de entrada.&quot;</xref:System.Exception.Message%2A> Esta mensagem leva em conta a cultura atual do sistema.       A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.EntryPointNotFoundException>.</xref:System.EntryPointNotFoundException>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Uma referência nula (`Nothing` no Visual Basic). |   | <xref:System.TypeLoadException.Message%2A>| A cadeia de caracteres de mensagem de erro localizada. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException ();
    parameters: []
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(String)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> classe com uma mensagem de erro especificada."
  remarks: "O conteúdo de `message` se destina a ser compreendidos por humanos. O chamador desse construtor é necessário para garantir que essa cadeia de caracteres foi localizada para a cultura atual do sistema.       A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.EntryPointNotFoundException>.</xref:System.EntryPointNotFoundException>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Uma referência nula (`Nothing` no Visual Basic). |   | <xref:System.TypeLoadException.Message%2A>| A cadeia de caracteres de mensagem de erro. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException (string message);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem de erro que explica o motivo da exceção."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> classe com os dados serializados."
  remarks: "Este construtor é chamado durante a desserialização para reconstituir o objeto de exceção transmitido em um fluxo."
  syntax:
    content: protected EntryPointNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O objeto que contém os dados do objeto serializado."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "As informações contextuais sobre a origem ou destino."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(String,Exception)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> classe com uma mensagem de erro especificada e uma referência à exceção interna que é a causa dessa exceção."
  remarks: "Uma exceção que é lançada como um resultado direto de uma exceção anterior deve incluir uma referência à exceção anterior no <xref:System.Exception.InnerException%2A>propriedade.</xref:System.Exception.InnerException%2A> O <xref:System.Exception.InnerException%2A>propriedade retorna o mesmo valor que é passado para o construtor, ou uma referência nula (`Nothing` no Visual Basic) se o <xref:System.Exception.InnerException%2A>propriedade não fornecer o valor da exceção interna para o construtor.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.EntryPointNotFoundException>.</xref:System.EntryPointNotFoundException>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| A referência à exceção interna. |   | <xref:System.TypeLoadException.Message%2A>| A cadeia de caracteres de mensagem de erro. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem de erro que explica o motivo da exceção."
    - id: inner
      type: System.Exception
      description: "A exceção que é a causa da exceção atual. Se o `inner` parâmetro não é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic), a exceção atual é gerada em um <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> bloco que manipula a exceção interna."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.TypeLoadException
  isExternal: false
  name: System.TypeLoadException
- uid: System.EntryPointNotFoundException.#ctor
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException()
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException()
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException()
- uid: System.EntryPointNotFoundException.#ctor(System.String)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(String)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(String,Exception)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.EntryPointNotFoundException.#ctor*
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException
