### YamlMime:ManagedReference
items:
- uid: System.IO.DriveInfo
  id: DriveInfo
  children:
  - System.IO.DriveInfo.#ctor(System.String)
  - System.IO.DriveInfo.AvailableFreeSpace
  - System.IO.DriveInfo.DriveFormat
  - System.IO.DriveInfo.DriveType
  - System.IO.DriveInfo.GetDrives
  - System.IO.DriveInfo.IsReady
  - System.IO.DriveInfo.Name
  - System.IO.DriveInfo.RootDirectory
  - System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.DriveInfo.ToString
  - System.IO.DriveInfo.TotalFreeSpace
  - System.IO.DriveInfo.TotalSize
  - System.IO.DriveInfo.VolumeLabel
  langs:
  - csharp
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo
  type: Class
  summary: "Fornece acesso às informações em uma unidade."
  remarks: "Esta classe modela uma unidade e fornece métodos e propriedades para consultar informações sobre a unidade. Use DriveInfo para determinar quais unidades estão disponíveis e o tipo de unidades são. Você também pode consultar para determinar a capacidade e o espaço livre disponível na unidade."
  example:
  - "The following code example demonstrates the use of the DriveInfo class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/t-system.io.driveinfo_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/t-system.io.driveinfo_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class DriveInfo : System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.DriveInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: DriveInfo(String)
  nameWithType: DriveInfo.DriveInfo(String)
  fullName: System.IO.DriveInfo.DriveInfo(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Fornece acesso às informações na unidade especificada."
  remarks: "Use essa classe para obter informações sobre unidades. O nome da unidade deve ser uma letra em maiuscula ou minúscula de &quot;a&quot; a &quot;z&quot;. Você não pode usar esse método para obter informações sobre nomes de unidades que são `null` ou usar UNC (\\\\\\server\\share) caminhos."
  syntax:
    content: public DriveInfo (string driveName);
    parameters:
    - id: driveName
      type: System.String
      description: "Um caminho válido ou a letra da unidade. Isso pode ser em letras maiusculas ou minúsculas, &quot;a&quot; a &quot;z&quot;. Um valor nulo não é válido."
  overload: System.IO.DriveInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A letra da unidade não pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A primeira letra de <code> driveName </code> não é uma letra em maiuscula ou minúscula de &quot;a&quot; a &quot;z&quot;.       - ou - <code> driveName </code> não faz referência a uma unidade válida."
  platform:
  - net462
- uid: System.IO.DriveInfo.AvailableFreeSpace
  id: AvailableFreeSpace
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: AvailableFreeSpace
  nameWithType: DriveInfo.AvailableFreeSpace
  fullName: System.IO.DriveInfo.AvailableFreeSpace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Indica a quantidade de espaço livre disponível em uma unidade, em bytes."
  remarks: "Essa propriedade indica a quantidade de espaço livre disponível na unidade. Observe que esse número pode ser diferente de <xref:System.IO.DriveInfo.TotalFreeSpace%2A>número porque essa propriedade leva em cotas de disco de conta.</xref:System.IO.DriveInfo.TotalFreeSpace%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.av_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.av_1.vb)]"
  syntax:
    content: public long AvailableFreeSpace { get; }
    return:
      type: System.Int64
      description: "A quantidade de espaço livre disponível na unidade, em bytes."
  overload: System.IO.DriveInfo.AvailableFreeSpace*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Acesso a informações de unidade é negado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s (por exemplo, um erro de disco ou uma unidade não estava pronta)."
  platform:
  - net462
- uid: System.IO.DriveInfo.DriveFormat
  id: DriveFormat
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: DriveFormat
  nameWithType: DriveInfo.DriveFormat
  fullName: System.IO.DriveInfo.DriveFormat
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém o nome do sistema de arquivos, como NTFS ou FAT32."
  remarks: "Use DriveFormat para determinar qual formatar uma unidade usa."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.dr_0_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.dr_0_1.vb)]"
  syntax:
    content: public string DriveFormat { get; }
    return:
      type: System.String
      description: "O nome do sistema de arquivos na unidade especificada."
  overload: System.IO.DriveInfo.DriveFormat*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Acesso a informações de unidade é negado."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "A unidade não existe ou não está mapeada."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s (por exemplo, um erro de disco ou uma unidade não estava pronta)."
  platform:
  - net462
- uid: System.IO.DriveInfo.DriveType
  id: DriveType
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: DriveType
  nameWithType: DriveInfo.DriveType
  fullName: System.IO.DriveInfo.DriveType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém o tipo de unidade, como rede de removíveis, CD-ROM, ou fixo."
  remarks: 'A propriedade DriveType indica se uma unidade é um dos seguintes: `CDRom`, `Fixed`, `Network`, `NoRootDirectory`, `Ram`, `Removable`, ou `Unknown`. Esses valores são descritos no <xref:System.IO.DriveType>enumeração.</xref:System.IO.DriveType>'
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.dr_1_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.dr_1_1.vb)]"
  syntax:
    content: public System.IO.DriveType DriveType { get; }
    return:
      type: System.IO.DriveType
      description: "Um dos valores de enumeração que especifica um tipo de unidade."
  overload: System.IO.DriveInfo.DriveType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.GetDrives
  id: GetDrives
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: GetDrives()
  nameWithType: DriveInfo.GetDrives()
  fullName: System.IO.DriveInfo.GetDrives()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Recupera os nomes de unidade de todas as unidades lógicas em um computador."
  remarks: "Esse método recupera todos os nomes de unidades lógicas em um computador. Você pode usar essas informações para iterar por meio da matriz e obter informações sobre as unidades usando outros <xref:System.IO.DriveInfo>métodos e propriedades.</xref:System.IO.DriveInfo> Use a <xref:System.IO.DriveInfo.IsReady%2A>propriedade para testar se uma unidade está pronta porque usando esse método em uma unidade que não está pronto gerará <xref:System.IO.IOException>.</xref:System.IO.IOException> </xref:System.IO.DriveInfo.IsReady%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/m-system.io.driveinfo.ge_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/m-system.io.driveinfo.ge_1.vb)]"
  syntax:
    content: public static System.IO.DriveInfo[] GetDrives ();
    parameters: []
    return:
      type: System.IO.DriveInfo[]
      description: "Uma matriz do tipo <xref href=&quot;System.IO.DriveInfo&quot;> </xref> que representa as unidades lógicas em um computador."
  overload: System.IO.DriveInfo.GetDrives*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s (por exemplo, um erro de disco ou uma unidade não estava pronta)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.DriveInfo.IsReady
  id: IsReady
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: IsReady
  nameWithType: DriveInfo.IsReady
  fullName: System.IO.DriveInfo.IsReady
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém um valor que indica se uma unidade está pronta."
  remarks: "IsReady indica se uma unidade está pronta. Por exemplo, indica se um CD está em uma unidade de CD ou se um dispositivo de armazenamento removível está pronto para operações de leitura/gravação. Se você não testar se uma unidade está pronta e não está pronto, consultando a unidade usando <xref:System.IO.DriveInfo>irá gerar um <xref:System.IO.IOException>.</xref:System.IO.IOException> </xref:System.IO.DriveInfo>       Não confie na IsReady para evitar capturar exceções de outros membros, como <xref:System.IO.DriveInfo.TotalSize%2A>, <xref:System.IO.DriveInfo.TotalFreeSpace%2A>e <xref:System.IO.DriveInfo.DriveFormat%2A>.</xref:System.IO.DriveInfo.DriveFormat%2A> </xref:System.IO.DriveInfo.TotalFreeSpace%2A> </xref:System.IO.DriveInfo.TotalSize%2A> Entre a hora em que o código verifica IsReady e, em seguida, acessa uma das outras propriedades (mesmo se o acesso ocorre imediatamente após a verificação), uma unidade pode ter sido desconectada ou um disco pode ter sido removido."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.is_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.is_1.vb)]"
  syntax:
    content: public bool IsReady { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a unidade está pronta; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se a unidade não está pronta."
  overload: System.IO.DriveInfo.IsReady*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.Name
  id: Name
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: Name
  nameWithType: DriveInfo.Name
  fullName: System.IO.DriveInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém o nome de uma unidade, como c:\\\\."
  remarks: "Essa propriedade é o nome atribuído à unidade, como C:\\ ou e:\\\\."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.name_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.name_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "O nome da unidade."
  overload: System.IO.DriveInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.RootDirectory
  id: RootDirectory
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: RootDirectory
  nameWithType: DriveInfo.RootDirectory
  fullName: System.IO.DriveInfo.RootDirectory
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém o diretório raiz de uma unidade."
  syntax:
    content: public System.IO.DirectoryInfo RootDirectory { get; }
    return:
      type: System.IO.DirectoryInfo
      description: "Um objeto que contém o diretório raiz da unidade."
  overload: System.IO.DriveInfo.RootDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Preenche uma <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto com os dados necessários para serializar o objeto de destino."
  remarks: "Todos os objetos incluídos no <xref:System.Runtime.Serialization.SerializationInfo>objeto automaticamente são rastreadas e serializado pelo formatador.</xref:System.Runtime.Serialization.SerializationInfo>       Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.IO.DriveInfo>instância é convertida em um <xref:System.Runtime.Serialization.ISerializable>interface.</xref:System.Runtime.Serialization.ISerializable> </xref:System.IO.DriveInfo>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O objeto a ser populado com dados."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O destino (consulte <xref:System.Runtime.Serialization.StreamingContext>) desta serialização.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.ToString
  id: ToString
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: DriveInfo.ToString()
  fullName: System.IO.DriveInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Retorna um nome de unidade como uma cadeia de caracteres."
  remarks: "Esse método retorna o <xref:System.IO.DriveInfo.Name%2A>propriedade.</xref:System.IO.DriveInfo.Name%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "O nome da unidade."
  overload: System.IO.DriveInfo.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.TotalFreeSpace
  id: TotalFreeSpace
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: TotalFreeSpace
  nameWithType: DriveInfo.TotalFreeSpace
  fullName: System.IO.DriveInfo.TotalFreeSpace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém a quantidade total de espaço livre disponível em uma unidade, em bytes."
  remarks: "Essa propriedade indica a quantidade total de espaço livre disponível na unidade, não apenas o que está disponível para o usuário atual."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.to_0_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.to_0_1.vb)]"
  syntax:
    content: public long TotalFreeSpace { get; }
    return:
      type: System.Int64
      description: "O total espaço livre disponível em uma unidade, em bytes."
  overload: System.IO.DriveInfo.TotalFreeSpace*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Acesso a informações de unidade é negado."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "A unidade não está mapeada ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s (por exemplo, um erro de disco ou uma unidade não estava pronta)."
  platform:
  - net462
- uid: System.IO.DriveInfo.TotalSize
  id: TotalSize
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: TotalSize
  nameWithType: DriveInfo.TotalSize
  fullName: System.IO.DriveInfo.TotalSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém o tamanho total de espaço de armazenamento em uma unidade, em bytes."
  remarks: "Essa propriedade indica o tamanho total da unidade em bytes, não apenas o que está disponível para o usuário atual."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.to_1_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.to_1_1.vb)]"
  syntax:
    content: public long TotalSize { get; }
    return:
      type: System.Int64
      description: "O tamanho total da unidade, em bytes."
  overload: System.IO.DriveInfo.TotalSize*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Acesso a informações de unidade é negado."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "A unidade não está mapeada ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s (por exemplo, um erro de disco ou uma unidade não estava pronta)."
  platform:
  - net462
- uid: System.IO.DriveInfo.VolumeLabel
  id: VolumeLabel
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: VolumeLabel
  nameWithType: DriveInfo.VolumeLabel
  fullName: System.IO.DriveInfo.VolumeLabel
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém ou define o rótulo do volume de uma unidade."
  remarks: "O tamanho do rótulo é determinado pelo sistema operacional. Por exemplo, o NTFS permite que um rótulo de volume para ser até 32 caracteres. Observe que `null` é um VolumeLabel válido."
  example:
  - "The following example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.vo_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.vo_1.vb)]"
  syntax:
    content: public string VolumeLabel { get; set; }
    return:
      type: System.String
      description: "O rótulo do volume."
  overload: System.IO.DriveInfo.VolumeLabel*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s (por exemplo, um erro de disco ou uma unidade não estava pronta)."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "A unidade não está mapeada ou não existe."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O rótulo do volume está sendo definido em uma rede ou unidade de CD-ROM.       - ou - acesso negado às informações da unidade."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.DriveNotFoundException
  parent: System.IO
  isExternal: false
  name: DriveNotFoundException
  nameWithType: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.DriveInfo.#ctor(System.String)
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveInfo(String)
  nameWithType: DriveInfo.DriveInfo(String)
  fullName: System.IO.DriveInfo.DriveInfo(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.DriveInfo.AvailableFreeSpace
  parent: System.IO.DriveInfo
  isExternal: false
  name: AvailableFreeSpace
  nameWithType: DriveInfo.AvailableFreeSpace
  fullName: System.IO.DriveInfo.AvailableFreeSpace
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.DriveInfo.DriveFormat
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveFormat
  nameWithType: DriveInfo.DriveFormat
  fullName: System.IO.DriveInfo.DriveFormat
- uid: System.IO.DriveInfo.DriveType
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveType
  nameWithType: DriveInfo.DriveType
  fullName: System.IO.DriveInfo.DriveType
- uid: System.IO.DriveType
  parent: System.IO
  isExternal: false
  name: DriveType
  nameWithType: DriveType
  fullName: System.IO.DriveType
- uid: System.IO.DriveInfo.GetDrives
  parent: System.IO.DriveInfo
  isExternal: false
  name: GetDrives()
  nameWithType: DriveInfo.GetDrives()
  fullName: System.IO.DriveInfo.GetDrives()
- uid: System.IO.DriveInfo[]
  parent: System.IO
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo[]
  spec.csharp:
  - uid: System.IO.DriveInfo
    name: DriveInfo
    nameWithType: DriveInfo
    fullName: DriveInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.DriveInfo.IsReady
  parent: System.IO.DriveInfo
  isExternal: false
  name: IsReady
  nameWithType: DriveInfo.IsReady
  fullName: System.IO.DriveInfo.IsReady
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.DriveInfo.Name
  parent: System.IO.DriveInfo
  isExternal: false
  name: Name
  nameWithType: DriveInfo.Name
  fullName: System.IO.DriveInfo.Name
- uid: System.IO.DriveInfo.RootDirectory
  parent: System.IO.DriveInfo
  isExternal: false
  name: RootDirectory
  nameWithType: DriveInfo.RootDirectory
  fullName: System.IO.DriveInfo.RootDirectory
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.DriveInfo
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IO.DriveInfo.ToString
  parent: System.IO.DriveInfo
  isExternal: false
  name: ToString()
  nameWithType: DriveInfo.ToString()
  fullName: System.IO.DriveInfo.ToString()
- uid: System.IO.DriveInfo.TotalFreeSpace
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalFreeSpace
  nameWithType: DriveInfo.TotalFreeSpace
  fullName: System.IO.DriveInfo.TotalFreeSpace
- uid: System.IO.DriveInfo.TotalSize
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalSize
  nameWithType: DriveInfo.TotalSize
  fullName: System.IO.DriveInfo.TotalSize
- uid: System.IO.DriveInfo.VolumeLabel
  parent: System.IO.DriveInfo
  isExternal: false
  name: VolumeLabel
  nameWithType: DriveInfo.VolumeLabel
  fullName: System.IO.DriveInfo.VolumeLabel
- uid: System.IO.DriveInfo.#ctor*
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo.DriveInfo
- uid: System.IO.DriveInfo.AvailableFreeSpace*
  parent: System.IO.DriveInfo
  isExternal: false
  name: AvailableFreeSpace
  nameWithType: DriveInfo.AvailableFreeSpace
- uid: System.IO.DriveInfo.DriveFormat*
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveFormat
  nameWithType: DriveInfo.DriveFormat
- uid: System.IO.DriveInfo.DriveType*
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveType
  nameWithType: DriveInfo.DriveType
- uid: System.IO.DriveInfo.GetDrives*
  parent: System.IO.DriveInfo
  isExternal: false
  name: GetDrives
  nameWithType: DriveInfo.GetDrives
- uid: System.IO.DriveInfo.IsReady*
  parent: System.IO.DriveInfo
  isExternal: false
  name: IsReady
  nameWithType: DriveInfo.IsReady
- uid: System.IO.DriveInfo.Name*
  parent: System.IO.DriveInfo
  isExternal: false
  name: Name
  nameWithType: DriveInfo.Name
- uid: System.IO.DriveInfo.RootDirectory*
  parent: System.IO.DriveInfo
  isExternal: false
  name: RootDirectory
  nameWithType: DriveInfo.RootDirectory
- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.IO.DriveInfo
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.IO.DriveInfo.ToString*
  parent: System.IO.DriveInfo
  isExternal: false
  name: ToString
  nameWithType: DriveInfo.ToString
- uid: System.IO.DriveInfo.TotalFreeSpace*
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalFreeSpace
  nameWithType: DriveInfo.TotalFreeSpace
- uid: System.IO.DriveInfo.TotalSize*
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalSize
  nameWithType: DriveInfo.TotalSize
- uid: System.IO.DriveInfo.VolumeLabel*
  parent: System.IO.DriveInfo
  isExternal: false
  name: VolumeLabel
  nameWithType: DriveInfo.VolumeLabel
