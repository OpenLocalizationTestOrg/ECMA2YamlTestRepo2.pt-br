### YamlMime:ManagedReference
items:
- uid: System.Configuration.IPersistComponentSettings
  id: IPersistComponentSettings
  children:
  - System.Configuration.IPersistComponentSettings.LoadComponentSettings
  - System.Configuration.IPersistComponentSettings.ResetComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveSettings
  - System.Configuration.IPersistComponentSettings.SettingsKey
  langs:
  - csharp
  name: IPersistComponentSettings
  nameWithType: IPersistComponentSettings
  fullName: System.Configuration.IPersistComponentSettings
  type: Interface
  summary: "Define a funcionalidade padrão para controles ou bibliotecas que armazenam e recuperam as configurações do aplicativo."
  remarks: "Normalmente, você pode adicionar suporte de configurações de aplicativo para um aplicativo, criando uma classe de invólucro de configurações, que é derivada de <xref:System.Configuration.ApplicationSettingsBase>e, em seguida, acrescentar propriedades especiais para essa classe.</xref:System.Configuration.ApplicationSettingsBase> No entanto, essa abordagem não suficientemente encapsular as configurações de aplicativo para um controle para que seu contêiner está protegido contra os detalhes. A interface IPersistComponentSettings fornece um aplicativo com uma interface padrão para solicitações de alteração de estado de configurações de aplicativo para um módulo de controle, do componente ou biblioteca de comunicação. Ferramentas de tempo de design também dependem dessa interface para gerenciar adequadamente os controles e componentes."
  syntax:
    content: public interface IPersistComponentSettings
  implements: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  id: LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Lê as configurações de aplicativo do controle em suas propriedades correspondentes e atualiza o estado do controle."
  remarks: "Em geral, o método LoadComponentSettings executa duas operações essenciais:-faz com que cada instância de configurações do aplicativo contida no controle para atualizar os valores de suas propriedades de configurações do aplicativo, normalmente chamando seus <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>métodos.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>      -Conforme necessário, ele atualiza as propriedades gerais que dependem dessas configurações recarregadas propriedades. Por exemplo, se a classe de configurações continha um `location` propriedade de configurações, LoadComponentSettings deve garantir que o controle <xref:System.Windows.Forms.Control.Location%2A>propriedade é atualizada para refletir essa configuração recarregada.</xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: public void LoadComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  id: ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Redefine as propriedades de configurações do aplicativo do controle para seus valores padrão."
  remarks: "A implementação do método ResetComponentSettings normalmente chama o <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>método em cada instância de uma classe de configurações de aplicativo contém.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  syntax:
    content: public void ResetComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  id: SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Mantém as propriedades de configurações do aplicativo do controle."
  remarks: "O método SaveComponentSettings grava os valores das propriedades de configurações do aplicativo do controle para o repositório de dados associado. A técnica de serialização e armazenamento de dados que usa o método é determinada pelo provedor de configurações associado a cada classe de configurações por meio de <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute> Você pode substituir a opção de provedor de configurações usando o <xref:System.Configuration.ISettingsProviderService>interface.</xref:System.Configuration.ISettingsProviderService>      > [!NOTE] > Se o <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>é de propriedade `true`, o controle deve chamar SaveComponentSettings seu próprio <xref:System.Windows.Forms.Control.Dispose%2A>método para que os dados de configuração do controle são armazenados automaticamente antes do aplicativo terminar.</xref:System.Windows.Forms.Control.Dispose%2A> </xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>"
  syntax:
    content: public void SaveComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  id: SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define um valor que indica se o controle deve persistir automaticamente suas propriedades de configurações do aplicativo."
  remarks: "Se um controle contém dados de configuração, isso geralmente será mantido esses dados em resposta a uma chamada explícita para o <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>método ou implicitamente, às vezes, quando o controle <xref:System.Windows.Forms.Control.Dispose%2A>método é invocado.</xref:System.Windows.Forms.Control.Dispose%2A> </xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> A propriedade SaveSettings determina se um controle persiste automaticamente os dados de configuração quando ele é descartado.       O valor padrão de SaveSettings depende a implementação do controle. A documentação para o controle deve indicar se ele usa as configurações do aplicativo, quais dados são persistentes e o que é o valor padrão da propriedade SaveSettings."
  example:
  - "The following code example shows the proper way for a control to check the value of the SaveSettings property before it attempts to automatically persist its configuration data.  \n  \n `protected override void Dispose( bool disposing ) {`  \n  \n `if(disposing) {`  \n  \n `try {`  \n  \n `if (SaveSettings) {`  \n  \n `SaveComponentSettings();`  \n  \n `}`  \n  \n `}`  \n  \n `finally {`  \n  \n `//...`  \n  \n `}`  \n  \n `}`"
  syntax:
    content: public bool SaveSettings { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle deve persistir automaticamente seu estado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.IPersistComponentSettings.SaveSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  id: SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define o valor da chave de configurações do aplicativo para a instância atual do controle."
  remarks: "Use a propriedade SettingsKey para resolver a ambiguidade de grupos de propriedades de configurações do aplicativo quando há várias instâncias da mesma classe wrapper. Por exemplo, se um controle contém uma classe wrapper associados, em seguida, colocar as várias instâncias do mesmo controle no mesmo aplicativo normalmente resultará em várias instâncias da classe wrapper. É necessária uma chave de configurações somente quando os dados de configuração é diferente em uma base por instância; Por exemplo, o local dos controles dinamicamente posicionados.       As seguintes regras gerais se aplicam ao uso de SettingsKey:-um controle, como qualquer classe pode conter zero ou mais classes configurações do aplicativo, derivada de <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> Cada classe de configurações contém sua própria <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>propriedade, que ajuda a resolver a ambiguidade de várias instâncias dessa classe.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>      -Um controle deve separar seus dados por instância e seus dados compartilhados em classes de configurações diferentes.      -Para um controle com os dados de configuração por instância, o `get` acessador da propriedade SettingsKey deve usar como padrão para o <xref:System.Windows.Forms.Control.Name%2A>do controle.</xref:System.Windows.Forms.Control.Name%2A> Na maioria dos casos, o nome do controle será exclusivo dentro de um aplicativo. Se o controle contém apenas dados de configuração, compartilhados `get` devem padrão `null`.      -A `set` acessador para essa propriedade deve ser implementado para distinguir entre classes de configurações que contém dados de configuração compartilhada e por instância. Para cada classe de configurações que contêm dados por instância, `set` devem passagem apenas para a <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>propriedade de classe de configurações.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName> Para classes de configurações que contém dados compartilhados, `set` não devem executar nenhuma ação para essa classe de configurações."
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "Um <xref:System.String>que contém a chave de configurações para a instância atual do controle.</xref:System.String>"
  overload: System.Configuration.IPersistComponentSettings.SettingsKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings
  nameWithType: IPersistComponentSettings.LoadComponentSettings
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings
  nameWithType: IPersistComponentSettings.ResetComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings
  nameWithType: IPersistComponentSettings.SaveComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
- uid: System.Configuration.IPersistComponentSettings.SettingsKey*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
