### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient
  id: UdpSingleSourceMulticastClient
  children:
  - System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  - System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient
  type: Class
  summary: "Um destinatário de cliente para o tráfego de difusão seletiva de uma única fonte, também conhecido como origem específica Multicast (SSM)."
  remarks: "O endereço de multicast de grupo e o endereço de origem do remetente devem ser conhecidas.       Além de receber dados de multicast de um remetente específico, o cliente UdpSingleSourceMulticastClient também pode enviar dados de unicast volta ao remetente.       Para receber multicast de várias fontes, ou quando as fontes não são conhecidas com antecedência, use a classe UdpSingleSourceMulticastClient."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public class UdpSingleSourceMulticastClient : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Cria um novo <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> cliente UDP que pode se inscrever para um endereço de grupo e receber datagramas de uma única fonte."
  remarks: "O construtor UdpSingleSourceMulticastClient associa um soquete de multicast UDP com um endereço de grupo e a porta, mas não associar ou caso contrário, use o soquete.       O `groupAddress` parâmetro pode ser um IPv4 ou IPv6 multicast endereço. No entanto, a família de endereços do `sourceAddress` e `groupAddress` parâmetros devem ser o mesmo.       O `localPort` parâmetro não deve especificar uma porta com menos de 1.024."
  syntax:
    content: public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "O endereço de origem do remetente para esse destinatário assinar."
    - id: groupAddress
      type: System.Net.IPAddress
      description: "O endereço de multicast de grupo para esse destinatário assinar."
    - id: localPort
      type: System.Int32
      description: "A porta local para esse destinatário associar a."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceAddress</code>e <code>groupAddress</code> devem ser da mesma família de endereço."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceAddress</code>é uma referência nula (Nothing no Visual Basic).       - ou - <code>groupAddress</code> é uma referência nula (Nothing no Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>localPort</code>é menor que 0 - ou - <code>localPort</code> é maior que 65.535."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>localPort</code>é menor que 1024"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  id: BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Associa o soquete e começa uma operação de associação ao grupo de multicast para permitir datagramas ser recebida de um endereço de origem única."
  remarks: "O método BeginJoinGroup vincula um soquete de multicast UDP para uma porta local e ingressa em um grupo de multicast para permitir datagramas ser recebida de um endereço de origem única. O endereço de multicast de grupo, endereço de origem única e porta local para vincular a são especificados no <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>construtor.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>       O método especificado no `callback` parâmetro é invocado quando a conclusão da operação para unir o grupo de multicast.       Se necessário, o tempo de execução, o método BeginJoinGroup também executa uma verificação de política para verificar se o cliente tem permissão para acessar o grupo de multicast. Se o cliente não tem permissão de acesso, um <xref:System.Net.Sockets.SocketException>será lançada com <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>"
  syntax:
    content: public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Um método de retorno de chamada a ser invocada quando a operação for concluída."
    - id: state
      type: System.Object
      description: "Informações de estado opcional para passar para o `callback` método para esta operação."
    return:
      type: System.IAsyncResult
      description: "Retorna <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Um <xref:System.IAsyncResult>que faz referência a esta operação.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast já ingressou ou uma operação de junção está em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi descartado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar acessar o soquete. Consulte a seção de comentários para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Inicia a operação de recepção de um pacote a partir do grupo de difusão seletiva associado e invoca o retorno de chamada especificado quando um pacote foi recebido no grupo de um remetente especificado."
  remarks: "O método BeginReceiveFromSource inicia uma operação de recepção de um pacote UDP do grupo de difusão seletiva associado de um único remetente. A porta local, o grupo de multicast e o endereço de origem do remetente são especificados no <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>construtor.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> O cliente multicast também deve ter concluído uma associação ao grupo de multicast.       O método especificado no `callback` parâmetro é chamado quando um pacote foi recebido.       É possível que haja uma falha do soquete se uma operação de recebimento falhar de forma síncrona, embora isso é comum com UDP. Se ocorrer uma falha de soquete, um <xref:System.Net.Sockets.SocketException>é gerada.</xref:System.Net.Sockets.SocketException> O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "O buffer para armazenar os dados recebidos."
    - id: offset
      type: System.Int32
      description: "O deslocamento, em bytes, do início do `buffer` onde os dados devem ser armazenados."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes para receber e armazenar no `buffer`."
    - id: callback
      type: System.AsyncCallback
      description: "O método de retorno de chamada a ser invocada quando a operação for concluída."
    - id: state
      type: System.Object
      description: "Informações de estado opcional para passar para o `callback` método para esta operação."
    return:
      type: System.IAsyncResult
      description: "Retorna <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Um <xref:System.IAsyncResult>que faz referência a esta operação.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>é uma referência nula (Nothing no Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>é menor que 0 - ou - <code>offset</code> é maior que o comprimento do <code>buffer</code>.       - ou - <code>count</code> é menor que 0 - ou - <code>offset</code> mais a contagem é maior que o comprimento do <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi Unido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi descartado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar acessar o soquete de recebimento. Consulte a seção de comentários para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Inicia a operação de envio de um pacote de unicast para a origem especificada anteriormente."
  remarks: "O método BeginSendToSource inicia uma operação de envio de um pacote UDP para a origem especificada anteriormente.       Alguns protocolos usam essas informações para transmitir o controle de fluxo, qualidade de serviço estatísticas ou mensagens de recuperação.       O método especificado no `callback` parâmetro é chamado quando um pacote foi enviado.       O cliente deve ter concluído uma associação ao grupo de multicast.       Se a porta de destino especificado no `remotePort` parâmetro é inferior a 1.024, um <xref:System.Net.Sockets.SocketException>será lançada com <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>       É possível que haja uma falha do soquete se uma operação de envio falhar de forma síncrona, embora isso é comum com UDP. Se ocorrer uma falha de soquete, um <xref:System.Net.Sockets.SocketException>é gerada.</xref:System.Net.Sockets.SocketException> O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "O buffer que contém os dados a serem enviados."
    - id: offset
      type: System.Int32
      description: "O deslocamento, em bytes, do início do `buffer` para ler os dados a ser enviado."
    - id: count
      type: System.Int32
      description: "O número de bytes para enviar a partir de `buffer`."
    - id: remotePort
      type: System.Int32
      description: "A porta remota para o qual o pacote será enviado. O endereço remoto é especificado pelo &lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt; construtor."
    - id: callback
      type: System.AsyncCallback
      description: "O método de retorno de chamada a ser invocada quando a operação for concluída."
    - id: state
      type: System.Object
      description: "Informações de estado opcional para passar para o `callback` método para esta operação."
    return:
      type: System.IAsyncResult
      description: "Retorna <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Um <xref:System.IAsyncResult>que faz referência a esta operação.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>é uma referência nula (Nothing no Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>é menor que 0 - ou - <code>offset</code> é maior que o comprimento do <code>buffer</code>.       - ou - <code>count</code> é menor que 0 - ou - <code>offset</code> mais a contagem é maior que o comprimento do <code>buffer</code>.       - ou - <code>remotePort</code> é menor que 0 ou maior que 65.535."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi Unido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi descartado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar acessar o soquete. Consulte a seção de comentários para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Deixa o grupo de multicast e libera todos os recursos usados pela instância atual do <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> classe e <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket> subjacente"
  remarks: "Chamar Dispose quando terminar de usar o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> O método Dispose deixa a <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>em um estado inutilizável.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> Depois de chamar Dispose, você deve liberar todas as referências para o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>para o coletor de lixo possa recuperar a memória que o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>estava ocupando.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient>       Sempre chamar Dispose antes de liberar sua última referência a <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>do objeto <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  id: EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Conclui a operação de grupo assíncrona de associação a um grupo de multicast."
  remarks: "O método EndJoinGroup conclui uma ligação assíncrona para uma operação de soquete e associação a um grupo de multicast.       Se necessário, o tempo de execução, o método EndJoinGroup também executa uma verificação de política para verificar se o cliente tem permissão para acessar o grupo de multicast. Se o cliente não tem permissão de acesso, um <xref:System.Net.Sockets.SocketException>será lançada com <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>       Se houver uma falha de soquete ao executar a operação de grupo de junção, um <xref:System.Net.Sockets.SocketException>é gerada.</xref:System.Net.Sockets.SocketException> O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndJoinGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O resultado da operação join assíncrona."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>é uma referência nula (Nothing no Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi descartado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar acessar o soquete. Consulte a seção de comentários para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  id: EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Conclui a operação assíncrona de recebimento de um pacote a partir do grupo de difusão seletiva associado e fornece as informações recebidas."
  remarks: "O método EndReceiveFromSource conclui uma operação assíncrona para receber um pacote de uma única fonte em um grupo de multicast.       Se houver uma falha de soquete ao executar a operação de recebimento, um <xref:System.Net.Sockets.SocketException>é gerada.</xref:System.Net.Sockets.SocketException> O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O resultado de assíncrona a operação de recebimento."
    - id: sourcePort
      type: System.Int32
      description: "O ponto de extremidade de origem onde o pacote foi recebido do."
    return:
      type: System.Int32
      description: "Retorna <xref:System.Int32>.</xref:System.Int32>       O comprimento, em bytes, da mensagem armazenada no <code> buffer </code> parâmetro passado para o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>método.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>é uma referência nula (Nothing no Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi Unido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi descartado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar acessar o soquete. Consulte a seção de comentários para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  id: EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Conclui a operação de envio de um pacote de unicast para uma única fonte."
  remarks: "O método EndSendToSource conclui uma operação assíncrona para enviar um pacote a única fonte especificado anteriormente.       Se houver uma falha de soquete ao executar a operação de recebimento, um <xref:System.Net.Sockets.SocketException>é gerada.</xref:System.Net.Sockets.SocketException> O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndSendToSource (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O resultado da operação de envio assíncrono."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>é uma referência nula (Nothing no Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi Unido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi descartado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar acessar o soquete. Consulte a seção de comentários para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Obtém ou define o tamanho, em bytes, do buffer de recebimento de <xref:System.Net.Sockets.Socket>usado para operações de recebimento multicast neste <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> instância.</xref:System.Net.Sockets.Socket>"
  remarks: "O `ReceiveBufferSize` propriedade obtém ou define o tamanho, em bytes, do buffer de recebimento de subjacente <xref:System.Net.Sockets.Socket>usado para operações de recebimento multicast neste <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>instância.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.Socket> Especificamente, o `ReceiveBufferSize` propriedade controla o tamanho do buffer usado pela pilha de quando um pacote chegar, mas o aplicativo ainda não foi chamado o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>método.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> Se esse buffer fique preenchido e pacotes mantenham vem antes do aplicativo chama o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>e <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A>métodos, pacotes antigos serão descartados.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> O aplicativo nunca será capaz de receber os pacotes antigos e em vez disso, receberá pacotes mais recentes quando ele chama o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>método.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>       O tamanho padrão do buffer de recebimento no Windows é 8.192."
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Retorna <xref:System.Int32>.</xref:System.Int32>       O tamanho, em bytes, do buffer de recepção."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O tamanho de buffer especificado é menor que 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi Unido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi descartado."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Obtém ou define o tamanho, em bytes, do buffer de envio de <xref:System.Net.Sockets.Socket>usado para operações de envio multicast neste <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> instância.</xref:System.Net.Sockets.Socket>"
  remarks: "A propriedade SendBufferSize obtém ou define o tamanho, em bytes, do buffer de envio de subjacente <xref:System.Net.Sockets.Socket>usado para operações de envio multicast neste <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>instância.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.Socket>       No Mac OS X, a propriedade SendBufferSize controla pode ser o número de bytes no buffer de espera para enviada da pilha de rede antes de uma chamada adicional para o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>método começam a falhar.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> Aplicativos no Mac OS X precisará se preocupar com essa propriedade se eles estão enviando um grande número de pacotes UDP em um curto período de tempo.       No Windows, chama o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>método levará mais tempo para chamar o retorno de chamada, dependendo do valor da propriedade SendBufferSize se o buffer de envio está cheio.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> A propriedade SendBufferSize apenas controla se permanece de buffer do usuário bloqueada na memória física até que o envio esteja concluída.       O tamanho padrão do buffer de envio no Windows é 8.192."
  syntax:
    content: public int SendBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Retorna <xref:System.Int32>.</xref:System.Int32>       O tamanho, em bytes, do buffer de envio."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O tamanho de buffer especificado é menor que 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi Unido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi descartado."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose
  nameWithType: UdpSingleSourceMulticastClient.Dispose
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
