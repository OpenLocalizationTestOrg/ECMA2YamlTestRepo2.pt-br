### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext
  id: LogicalCallContext
  children:
  - System.Runtime.Remoting.Messaging.LogicalCallContext.Clone
  - System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(System.String)
  - System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(System.String)
  - System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
  - System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(System.String,System.Object)
  langs:
  - csharp
  name: LogicalCallContext
  nameWithType: LogicalCallContext
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext
  type: Class
  summary: "Fornece um conjunto de propriedades que são executadas com o caminho de código de execução durante as chamadas de método remoto."
  remarks: "A classe LogicalCallContext é uma versão do <xref:System.Runtime.Remoting.Messaging.CallContext>classe que é usado durante o método chamadas para os domínios de aplicativo remoto.</xref:System.Runtime.Remoting.Messaging.CallContext> O <xref:System.Runtime.Remoting.Messaging.CallContext>é um objeto de coleção especializada semelhante a um armazenamento local de thread para chamadas de método e fornece os slots de dados que são exclusivos para cada thread lógica de execução.</xref:System.Runtime.Remoting.Messaging.CallContext> Os slots não são compartilhados entre contextos de chamada em outros threads de lógicas. Objetos podem ser adicionados ao <xref:System.Runtime.Remoting.Messaging.CallContext>conforme ele passa para baixo e o caminho de código de execução e examinados através de vários objetos ao longo do caminho.</xref:System.Runtime.Remoting.Messaging.CallContext>       Quando uma chamada de método remoto é feita em um objeto em outro <xref:System.AppDomain>, o <xref:System.Runtime.Remoting.Messaging.CallContext>classe gera uma LogicalCallContext que viaja junto com a chamada remota.</xref:System.Runtime.Remoting.Messaging.CallContext> </xref:System.AppDomain> Somente objetos que expõem o <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative>interface e são armazenados na <xref:System.Runtime.Remoting.Messaging.CallContext>são propagadas fora o <xref:System.AppDomain>em um LogicalCallContext.</xref:System.AppDomain> </xref:System.Runtime.Remoting.Messaging.CallContext> </xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> Objetos que não dão suporte a esta interface não são transmitidos em instâncias LogicalCallContext com chamadas de método remoto.      > [!NOTE] > Essa classe faz uma demanda de link. Um SecurityException é gerada se o chamador imediato não tem permissão de infraestrutura. Consulte [demandas de Link](~/add/includes/ajax-current-ext-md.md) para obter mais informações."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public sealed class LogicalCallContext : ICloneable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone
  id: Clone
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: Clone()
  nameWithType: LogicalCallContext.Clone()
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Cria um novo objeto que é uma cópia da instância atual."
  remarks: "O método Clone produz uma cópia profunda da atual <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um novo objeto que é uma cópia desta instância."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(System.String)
  id: FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: FreeNamedDataSlot(String)
  nameWithType: LogicalCallContext.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Esvazia um slot de dados com o nome especificado."
  syntax:
    content: public void FreeNamedDataSlot (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do slot de dados como vazio."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(System.String)
  id: GetData(System.String)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: GetData(String)
  nameWithType: LogicalCallContext.GetData(String)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Recupera um objeto associado com o nome especificado da instância atual."
  syntax:
    content: public object GetData (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do item no contexto da chamada."
    return:
      type: System.Object
      description: "O objeto no contexto da chamada lógico associado com o nome especificado."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LogicalCallContext.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Preenche uma especificado <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> com os dados necessários para serializar atual <xref href=&quot;System.Runtime.Remoting.Messaging.LogicalCallContext&quot;> </xref>."
  remarks: "O método atual preenche o fornecido <xref:System.Runtime.Serialization.SerializationInfo>com todos os dados necessários para recriar o <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext> </xref:System.Runtime.Serialization.SerializationInfo>       O método atual é uma implementação de <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>"
  syntax:
    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> para popular com dados."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "As informações contextuais sobre a origem ou destino da serialização."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão comoSerializationFormatter."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
  id: HasInfo
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: HasInfo
  nameWithType: LogicalCallContext.HasInfo
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Obtém um valor que indica se o atual <xref href=&quot;System.Runtime.Remoting.Messaging.LogicalCallContext&quot;> </xref> contém informações."
  syntax:
    content: public bool HasInfo { get; }
    return:
      type: System.Boolean
      description: "Um valor booliano que indica se o atual <xref href=&quot;System.Runtime.Remoting.Messaging.LogicalCallContext&quot;> </xref> contém informações."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: LogicalCallContext.SetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Armazena o objeto especificado na instância atual e o associa com o nome especificado."
  syntax:
    content: public void SetData (string name, object data);
    parameters:
    - id: name
      type: System.String
      description: "O nome ao qual associar o novo item no contexto da chamada."
    - id: data
      type: System.Object
      description: "O objeto para armazenar no contexto da chamada."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: Clone()
  nameWithType: LogicalCallContext.Clone()
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone()
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: FreeNamedDataSlot(String)
  nameWithType: LogicalCallContext.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(System.String)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: GetData(String)
  nameWithType: LogicalCallContext.GetData(String)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(String)
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LogicalCallContext.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: HasInfo
  nameWithType: LogicalCallContext.HasInfo
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: SetData(String,Object)
  nameWithType: LogicalCallContext.SetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(String,Object)
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: Clone
  nameWithType: LogicalCallContext.Clone
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: FreeNamedDataSlot
  nameWithType: LogicalCallContext.FreeNamedDataSlot
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: GetData
  nameWithType: LogicalCallContext.GetData
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: GetObjectData
  nameWithType: LogicalCallContext.GetObjectData
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: HasInfo
  nameWithType: LogicalCallContext.HasInfo
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: SetData
  nameWithType: LogicalCallContext.SetData
