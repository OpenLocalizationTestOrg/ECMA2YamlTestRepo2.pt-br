### YamlMime:ManagedReference
items:
- uid: System.Globalization.SortVersion
  id: SortVersion
  children:
  - System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  - System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  - System.Globalization.SortVersion.Equals(System.Object)
  - System.Globalization.SortVersion.FullVersion
  - System.Globalization.SortVersion.GetHashCode
  - System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  - System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  - System.Globalization.SortVersion.SortId
  langs:
  - csharp
  name: SortVersion
  nameWithType: SortVersion
  fullName: System.Globalization.SortVersion
  type: Class
  summary: "Fornece informações sobre a versão do Unicode usados para comparar e ordem de cadeias de caracteres."
  remarks: "Do [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] por meio de [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], cada versão do.NET Framework inclui tabelas que contêm os pesos de classificação e dados de normalização de cadeia de caracteres e que são baseados em uma versão específica do Unicode. No [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)], a presença dessas tabelas depende do sistema operacional: - no [!INCLUDE[win7](~/add/includes/win7-md.md)] e versões anteriores do sistema operacional Windows, as tabelas continuam a ser usado para comparação e ordenação cadeias de caracteres.      -Em [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)], o .NET Framework delega a comparação de cadeia de caracteres e a ordenação de operações para o sistema operacional.       Consequentemente, o resultado de uma comparação de cadeia de caracteres pode depende não apenas a versão do .NET Framework, mas também a versão de sistema operacional, como mostra a tabela a seguir. Observe que esta lista de versões com suporte de Unicode aplica-se a comparação de caracteres e a classificação. ele não se aplica a classificação de caracteres Unicode por categoria.      |. NET Framework versão | Sistema operacional | Versão Unicode |   |----------------------------|----------------------|---------------------|   | [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]| Todos os sistemas operacionais | Unicode 5.0 |   | [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] e versões posteriores do .NET Framework | [!INCLUDE[win7](~/add/includes/win7-md.md)]| Unicode 5.0 |   | [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] e versões posteriores do .NET Framework | [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)] e versões posteriores do sistema operacional Windows | Unicode 6.0 |       Em [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)], porque a versão do Unicode usada na comparação de cadeia de caracteres e ordenação depende da versão do sistema operacional, os resultados da comparação de cadeia de caracteres podem ser diferentes até mesmo para aplicativos que são executados em uma versão específica do .NET Framework.       A classe SortVersion fornece informações sobre a versão Unicode usado pelo .NET Framework para comparação de cadeia de caracteres e a ordenação. Ele permite que os desenvolvedores criem aplicativos que podem detectar e tratar com êxito as alterações na versão do Unicode que é usado para comparar e classificar cadeias de caracteres de um aplicativo.       Você pode instanciar um objeto SortVersion de duas maneiras: - chamando o <xref:System.Globalization.SortVersion.%23ctor%2A>construtor, que cria um novo SortVersion com base em um número de versão do objeto e classificar ID.</xref:System.Globalization.SortVersion.%23ctor%2A> Este construtor é mais útil quando a recriação de um objeto de SortVersion de dados salvos.      -Por recuperar o valor da <xref:System.Globalization.CompareInfo.Version%2A?displayProperty=fullName>propriedade.</xref:System.Globalization.CompareInfo.Version%2A?displayProperty=fullName> Esta propriedade fornece informações sobre a versão Unicode usada pelo .NET Framework na qual o aplicativo está em execução.       A classe SortVersion tem duas propriedades, <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>, que indicam a versão Unicode e a cultura específica usada para comparação de cadeia de caracteres.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> O <xref:System.Globalization.SortVersion.FullVersion%2A>propriedade é um valor numérico arbitrário que reflete a versão de Unicode usada para comparação de cadeia de caracteres, e o <xref:System.Globalization.SortVersion.SortId%2A>propriedade é um arbitrária <xref:System.Guid>que reflete a cultura cujas convenções são usadas para comparação de cadeia de caracteres.</xref:System.Guid> </xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> Os valores dessas propriedades são importantes somente quando você compara dois objetos SortVersion usando o <xref:System.Globalization.SortVersion.Equals%2A>método, o <xref:System.Globalization.SortVersion.op_Equality%2A>operador, ou o <xref:System.Globalization.SortVersion.op_Inequality%2A>operador.</xref:System.Globalization.SortVersion.op_Inequality%2A> </xref:System.Globalization.SortVersion.op_Equality%2A> </xref:System.Globalization.SortVersion.Equals%2A>       Normalmente, você usa um objeto de SortVersion ao salvar ou recuperar de alguma forma de dados de cadeia de caracteres sensíveis à cultura, ordenado, como índices ou o literal cadeias de caracteres de si mesmos. Isso exige as seguintes etapas: 1.  Quando os dados de cadeia de caracteres ordenado é salvo, o <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>valores de propriedade também são salvas.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A>      2.  Quando os dados de cadeia de caracteres ordenado são recuperados, você pode recriar o objeto de SortVersion usado para ordenar as cadeias de caracteres chamando o <xref:System.Globalization.SortVersion.%23ctor%2A>construtor.</xref:System.Globalization.SortVersion.%23ctor%2A>      3.  Este objeto SortVersion recém-instanciado é comparado com um objeto de SortVersion que reflete a cultura cujas convenções são usadas para solicitar os dados de cadeia de caracteres.      4.  Se os dois objetos SortVersion não forem iguais, os dados de cadeia de caracteres devem ser ordenados.       O exemplo fornece uma ilustração."
  example:
  - "The following example contains a portion of the source code from an application that uses the SortVersion class to ensure that the native names of <xref:System.Globalization.RegionInfo> objects are ordered appropriately for the current system and current culture. It uses the <xref:System.IO.BinaryReader> and <xref:System.IO.BinaryWriter> objects to store and retrieve ordered data from a data file named `Regions.dat` rather than retrieving and ordering data each time the application is run. The example first checks to determine whether the data file exists. If it does not, it creates the data and sets the `reindex` flag, which indicates that the data must be resorted and saved again. Otherwise, it retrieves the data and compares the saved SortVersion object with the SortVersion object for the current culture on the current system. If they are not equal, or if the `reindex` flag had been set previously, it resorts the <xref:System.Globalization.RegionInfo> data.  \n  \n [!code-cs[System.Globalization.SortVersion#1](~/add/codesnippet/csharp/t-system.globalization.s_0_1.cs)]\n [!code-vb[System.Globalization.SortVersion#1](~/add/codesnippet/visualbasic/t-system.globalization.s_0_1.vb)]"
  syntax:
    content: 'public sealed class SortVersion : IEquatable<System.Globalization.SortVersion>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Globalization.SortVersion>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  id: '#ctor(System.Int32,System.Guid)'
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: SortVersion(Int32,Guid)
  nameWithType: SortVersion.SortVersion(Int32,Guid)
  fullName: System.Globalization.SortVersion.SortVersion(Int32,Guid)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Cria uma nova instância do <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> classe."
  remarks: "Este construtor instancia um <xref:System.Globalization.SortVersion>objeto com a versão especificada e a classificação ID.</xref:System.Globalization.SortVersion> O `fullVersion` argumento é atribuído para o <xref:System.Globalization.SortVersion.FullVersion%2A>propriedade.</xref:System.Globalization.SortVersion.FullVersion%2A> O `sortId` argumento é atribuído para o <xref:System.Globalization.SortVersion.SortId%2A>propriedade.</xref:System.Globalization.SortVersion.SortId%2A>       Esse construtor é útil para a recriação de um <xref:System.Globalization.SortVersion>objeto de dados que foi serializados ou salvados.</xref:System.Globalization.SortVersion> Nesta versão, em seguida, pode ser comparada com a versão atual do aplicativo para determinar se a versão do Unicode usada para exibir e solicitar cadeias de caracteres do aplicativo está disponível."
  syntax:
    content: public SortVersion (int fullVersion, Guid sortId);
    parameters:
    - id: fullVersion
      type: System.Int32
      description: "Um número de versão."
    - id: sortId
      type: System.Guid
      description: "Uma ID de classificação."
  overload: System.Globalization.SortVersion.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  id: Equals(System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: Equals(SortVersion)
  nameWithType: SortVersion.Equals(SortVersion)
  fullName: System.Globalization.SortVersion.Equals(SortVersion)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna um valor que indica se este <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> instância é igual a um especificado <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> objeto."
  remarks: "Dois <xref:System.Globalization.SortVersion>objetos são iguais se seus <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>propriedades são iguais.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public bool Equals (System.Globalization.SortVersion other);
    parameters:
    - id: other
      type: System.Globalization.SortVersion
      description: "O objeto a ser comparado com esta instância."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> other </code> representa a mesma versão que esta instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortVersion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SortVersion.Equals(Object)
  fullName: System.Globalization.SortVersion.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna um valor que indica se este <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> instância é igual ao objeto especificado."
  remarks: "Dois <xref:System.Globalization.SortVersion>objetos são iguais se seus <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>propriedades são iguais.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Um objeto a ser comparado com esta instância."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> obj </code> é um <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> objeto que representa a mesma versão que esta instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortVersion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.FullVersion
  id: FullVersion
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: FullVersion
  nameWithType: SortVersion.FullVersion
  fullName: System.Globalization.SortVersion.FullVersion
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém o número de versão completo a <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> objeto."
  remarks: "O valor da propriedade FullVersion reflete a versão Unicode usada para normalizar e comparar cadeias de caracteres."
  syntax:
    content: public int FullVersion { get; }
    return:
      type: System.Int32
      description: "O número de versão deste <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> objeto."
  overload: System.Globalization.SortVersion.FullVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.GetHashCode
  id: GetHashCode
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SortVersion.GetHashCode()
  fullName: System.Globalization.SortVersion.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna um código hash para essa instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código de hash de inteiro de 32 bits."
  overload: System.Globalization.SortVersion.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  id: op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: op_Equality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Equality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Equality(SortVersion,SortVersion)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Indica se dois <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> instâncias são iguais."
  remarks: "Dois <xref:System.Globalization.SortVersion>objetos são iguais se ambos estiverem `null`, ou se seus <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>propriedades são iguais.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public static bool op_Equality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);
    parameters:
    - id: left
      type: System.Globalization.SortVersion
      description: "A primeira instância a ser comparado."
    - id: right
      type: System.Globalization.SortVersion
      description: "A segunda instância a ser comparado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the values of <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Globalization.SortVersion.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  id: op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: op_Inequality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Inequality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Inequality(SortVersion,SortVersion)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Indica se dois <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> instâncias não são iguais."
  remarks: "Dois <xref:System.Globalization.SortVersion>objetos não são iguais se houver um `null` e o outro não, ou se eles têm diferentes <xref:System.Globalization.SortVersion.FullVersion%2A>ou <xref:System.Globalization.SortVersion.SortId%2A>valores de propriedade.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public static bool op_Inequality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);
    parameters:
    - id: left
      type: System.Globalization.SortVersion
      description: "A primeira instância a ser comparado."
    - id: right
      type: System.Globalization.SortVersion
      description: "A segunda instância a ser comparado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os valores de <code> left </code> e <code> right </code> não forem iguais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortVersion.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.SortId
  id: SortId
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: SortId
  nameWithType: SortVersion.SortId
  fullName: System.Globalization.SortVersion.SortId
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém um identificador globalmente exclusivo para este <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> objeto."
  remarks: "O valor da propriedade SortId reflete a cultura cujas convenções influenciam a comparação de cadeia de caracteres e classificação."
  syntax:
    content: public Guid SortId { get; }
    return:
      type: System.Guid
      description: "Um identificador exclusivo para este <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> objeto."
  overload: System.Globalization.SortVersion.SortId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortVersion(Int32,Guid)
  nameWithType: SortVersion.SortVersion(Int32,Guid)
  fullName: System.Globalization.SortVersion.SortVersion(Int32,Guid)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals(SortVersion)
  nameWithType: SortVersion.Equals(SortVersion)
  fullName: System.Globalization.SortVersion.Equals(SortVersion)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.SortVersion
  parent: System.Globalization
  isExternal: false
  name: SortVersion
  nameWithType: SortVersion
  fullName: System.Globalization.SortVersion
- uid: System.Globalization.SortVersion.Equals(System.Object)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals(Object)
  nameWithType: SortVersion.Equals(Object)
  fullName: System.Globalization.SortVersion.Equals(Object)
- uid: System.Globalization.SortVersion.FullVersion
  parent: System.Globalization.SortVersion
  isExternal: false
  name: FullVersion
  nameWithType: SortVersion.FullVersion
  fullName: System.Globalization.SortVersion.FullVersion
- uid: System.Globalization.SortVersion.GetHashCode
  parent: System.Globalization.SortVersion
  isExternal: false
  name: GetHashCode()
  nameWithType: SortVersion.GetHashCode()
  fullName: System.Globalization.SortVersion.GetHashCode()
- uid: System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Equality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Equality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Equality(SortVersion,SortVersion)
- uid: System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Inequality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Inequality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Inequality(SortVersion,SortVersion)
- uid: System.Globalization.SortVersion.SortId
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortId
  nameWithType: SortVersion.SortId
  fullName: System.Globalization.SortVersion.SortId
- uid: System.Globalization.SortVersion.#ctor*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortVersion
  nameWithType: SortVersion.SortVersion
- uid: System.Globalization.SortVersion.Equals*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals
  nameWithType: SortVersion.Equals
- uid: System.Globalization.SortVersion.FullVersion*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: FullVersion
  nameWithType: SortVersion.FullVersion
- uid: System.Globalization.SortVersion.GetHashCode*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: GetHashCode
  nameWithType: SortVersion.GetHashCode
- uid: System.Globalization.SortVersion.op_Equality*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Equality
  nameWithType: SortVersion.op_Equality
- uid: System.Globalization.SortVersion.op_Inequality*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Inequality
  nameWithType: SortVersion.op_Inequality
- uid: System.Globalization.SortVersion.SortId*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortId
  nameWithType: SortVersion.SortId
