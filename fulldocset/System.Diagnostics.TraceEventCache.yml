### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceEventCache
  id: TraceEventCache
  children:
  - System.Diagnostics.TraceEventCache.#ctor
  - System.Diagnostics.TraceEventCache.Callstack
  - System.Diagnostics.TraceEventCache.DateTime
  - System.Diagnostics.TraceEventCache.LogicalOperationStack
  - System.Diagnostics.TraceEventCache.ProcessId
  - System.Diagnostics.TraceEventCache.ThreadId
  - System.Diagnostics.TraceEventCache.Timestamp
  langs:
  - csharp
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
  type: Class
  summary: "Fornece dados de evento de rastreamento específicos para um thread e um processo."
  remarks: "> [!NOTE]> A classe TraceEventCache, projetada como uma otimização de desempenho para chamadas de ouvinte de rastreamento, é interessante apenas para os desenvolvedores que criam ouvintes de rastreamento personalizada.       A classe TraceEventCache é usada como um parâmetro em métodos de rastreamento para identificar com precisão a origem do evento de rastreamento. Exemplos de métodos que usam TraceEventCache são <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=fullName>e <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=fullName>.</xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=fullName> </xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=fullName> O <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A>propriedade contém dados que podem ser usados para correlacionar o rastreamento com os rastreamentos relacionados.</xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A>"
  syntax:
    content: public class TraceEventCache
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.#ctor
  id: '#ctor'
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: TraceEventCache()
  nameWithType: TraceEventCache.TraceEventCache()
  fullName: System.Diagnostics.TraceEventCache.TraceEventCache()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> classe."
  syntax:
    content: public TraceEventCache ();
    parameters: []
  overload: System.Diagnostics.TraceEventCache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.Callstack
  id: Callstack
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: Callstack
  nameWithType: TraceEventCache.Callstack
  fullName: System.Diagnostics.TraceEventCache.Callstack
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém a pilha de chamadas do thread atual."
  remarks: "A propriedade de pilha de chamadas obtém a pilha de chamadas da <xref:System.Environment.StackTrace%2A>propriedade de <xref:System.Environment>classe.</xref:System.Environment> </xref:System.Environment.StackTrace%2A> O valor da propriedade listas chamadas de método em ordem cronológica inversa. Ou seja, a chamada de método mais recente é descrita pela primeira vez. Uma linha de informações de rastreamento de pilha é listada para cada chamada de método na pilha. Para obter mais informações, consulte <xref:System.Environment.StackTrace%2A>.</xref:System.Environment.StackTrace%2A>"
  syntax:
    content: public string Callstack { get; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém informações de rastreamento de pilha. Esse valor pode ser uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Diagnostics.TraceEventCache.Callstack*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.DateTime
  id: DateTime
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: DateTime
  nameWithType: TraceEventCache.DateTime
  fullName: System.Diagnostics.TraceEventCache.DateTime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém a data e a hora em que o rastreamento de evento ocorreu."
  remarks: "Na primeira vez em que a propriedade é acessada em uma instância do <xref:System.Diagnostics.TraceEventCache>classe atual é retornada.</xref:System.Diagnostics.TraceEventCache> Mesmas que as consultas subsequentes dessa propriedade nessa instância retornam <xref:System.DateTime>valor, permitindo que ele seja usado como um carimbo de hora.</xref:System.DateTime>"
  syntax:
    content: public DateTime DateTime { get; }
    return:
      type: System.DateTime
      description: "Um <xref:System.DateTime>estrutura cujo valor é uma data e hora, expressada em tempo Universal Coordenado (UTC).</xref:System.DateTime>"
  overload: System.Diagnostics.TraceEventCache.DateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.LogicalOperationStack
  id: LogicalOperationStack
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: LogicalOperationStack
  nameWithType: TraceEventCache.LogicalOperationStack
  fullName: System.Diagnostics.TraceEventCache.LogicalOperationStack
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém os dados de correlação, contidos em uma pilha."
  remarks: "Os dados de correlação são armazenados como um objeto no contexto da chamada com o nome &quot;System.Diagnostics.Trace.CorrelationManagerSlot&quot;. O <xref:System.Diagnostics.CorrelationManager>classe fornece métodos usados para armazenar uma identidade de operação lógica em um contexto de thread associado e identificar automaticamente a cada evento de rastreamento gerado pelo thread com a identidade armazenada.</xref:System.Diagnostics.CorrelationManager> O <xref:System.Diagnostics.CorrelationManager>é acessada por meio de <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=fullName>propriedade.</xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=fullName> </xref:System.Diagnostics.CorrelationManager> Cada chamada para o <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A>método envia uma nova identidade da operação lógica para a pilha.</xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> Cada chamada para o <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>método aparece uma identidade de operação lógica da pilha</xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>"
  syntax:
    content: public System.Collections.Stack LogicalOperationStack { get; }
    return:
      type: System.Collections.Stack
      description: "Um <xref href=&quot;System.Collections.Stack&quot;> </xref> que contém dados de correlação."
  overload: System.Diagnostics.TraceEventCache.LogicalOperationStack*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.ProcessId
  id: ProcessId
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: ProcessId
  nameWithType: TraceEventCache.ProcessId
  fullName: System.Diagnostics.TraceEventCache.ProcessId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o identificador exclusivo do processo atual."
  remarks: "Até que o processo termina, o identificador de processo identifica exclusivamente o processo em todo o sistema."
  syntax:
    content: public int ProcessId { get; }
    return:
      type: System.Int32
      description: "O identificador exclusivo gerado pelo sistema do processo atual."
  overload: System.Diagnostics.TraceEventCache.ProcessId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.ThreadId
  id: ThreadId
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: ThreadId
  nameWithType: TraceEventCache.ThreadId
  fullName: System.Diagnostics.TraceEventCache.ThreadId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um identificador exclusivo para o thread gerenciado atual."
  remarks: "O identificador de thread é o valor da <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=fullName>propriedade formatada como uma cadeia de caracteres.</xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=fullName>"
  syntax:
    content: public string ThreadId { get; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o identificador inteiro exclusivo para esse thread gerenciado."
  overload: System.Diagnostics.TraceEventCache.ThreadId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.Timestamp
  id: Timestamp
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: Timestamp
  nameWithType: TraceEventCache.Timestamp
  fullName: System.Diagnostics.TraceEventCache.Timestamp
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o número atual de tiques no mecanismo de temporizador."
  remarks: "As chamadas de acessador get o <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=fullName>método para obter o carimbo de hora.</xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=fullName> Se o <xref:System.Diagnostics.Stopwatch>classe usa um contador de desempenho de alta resolução, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>retorna o valor atual do contador.</xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> </xref:System.Diagnostics.Stopwatch> Se a <xref:System.Diagnostics.Stopwatch>classe usa o timer do sistema, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>retorna a <xref:System.DateTime.Ticks%2A>propriedade de <xref:System.DateTime.Now%2A?displayProperty=fullName>.</xref:System.DateTime.Now%2A?displayProperty=fullName> </xref:System.DateTime.Ticks%2A> </xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> </xref:System.Diagnostics.Stopwatch>"
  syntax:
    content: public long Timestamp { get; }
    return:
      type: System.Int64
      description: "O valor do contador de escala do mecanismo de temporizador subjacente."
  overload: System.Diagnostics.TraceEventCache.Timestamp*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.TraceEventCache.#ctor
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: TraceEventCache()
  nameWithType: TraceEventCache.TraceEventCache()
  fullName: System.Diagnostics.TraceEventCache.TraceEventCache()
- uid: System.Diagnostics.TraceEventCache.Callstack
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: Callstack
  nameWithType: TraceEventCache.Callstack
  fullName: System.Diagnostics.TraceEventCache.Callstack
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceEventCache.DateTime
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: DateTime
  nameWithType: TraceEventCache.DateTime
  fullName: System.Diagnostics.TraceEventCache.DateTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Diagnostics.TraceEventCache.LogicalOperationStack
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: LogicalOperationStack
  nameWithType: TraceEventCache.LogicalOperationStack
  fullName: System.Diagnostics.TraceEventCache.LogicalOperationStack
- uid: System.Collections.Stack
  parent: System.Collections
  isExternal: false
  name: Stack
  nameWithType: Stack
  fullName: System.Collections.Stack
- uid: System.Diagnostics.TraceEventCache.ProcessId
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: ProcessId
  nameWithType: TraceEventCache.ProcessId
  fullName: System.Diagnostics.TraceEventCache.ProcessId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceEventCache.ThreadId
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: ThreadId
  nameWithType: TraceEventCache.ThreadId
  fullName: System.Diagnostics.TraceEventCache.ThreadId
- uid: System.Diagnostics.TraceEventCache.Timestamp
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: Timestamp
  nameWithType: TraceEventCache.Timestamp
  fullName: System.Diagnostics.TraceEventCache.Timestamp
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.TraceEventCache.#ctor*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache.TraceEventCache
- uid: System.Diagnostics.TraceEventCache.Callstack*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: Callstack
  nameWithType: TraceEventCache.Callstack
- uid: System.Diagnostics.TraceEventCache.DateTime*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: DateTime
  nameWithType: TraceEventCache.DateTime
- uid: System.Diagnostics.TraceEventCache.LogicalOperationStack*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: LogicalOperationStack
  nameWithType: TraceEventCache.LogicalOperationStack
- uid: System.Diagnostics.TraceEventCache.ProcessId*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: ProcessId
  nameWithType: TraceEventCache.ProcessId
- uid: System.Diagnostics.TraceEventCache.ThreadId*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: ThreadId
  nameWithType: TraceEventCache.ThreadId
- uid: System.Diagnostics.TraceEventCache.Timestamp*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: Timestamp
  nameWithType: TraceEventCache.Timestamp
