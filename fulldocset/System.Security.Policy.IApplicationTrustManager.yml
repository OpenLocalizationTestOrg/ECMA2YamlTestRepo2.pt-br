### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.IApplicationTrustManager
  id: IApplicationTrustManager
  children:
  - System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  langs:
  - csharp
  name: IApplicationTrustManager
  nameWithType: IApplicationTrustManager
  fullName: System.Security.Policy.IApplicationTrustManager
  type: Interface
  summary: "Determina se um aplicativo deve ser executado e qual conjunto de permissões deve ser concedido a ele."
  remarks: "Gerenciadores de confiança devem implementar a interface IApplicationTrustManager. O host chama o <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName>método para determinar se um aplicativo deve ser executado e quais permissões devem ser concedidas ao aplicativo.</xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName>       No [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] e posterior, há apenas um Gerenciador de confiança, que pode ser uma implementação personalizada da interface IApplicationTrustManager. A implementação do Gerenciador de confiança padrão solicita ao usuário permissão para instalar o aplicativo e elevar as permissões concedidas ao aplicativo. Outras implementações do Gerenciador de confiança podem fornecer experiências de usuário diferente. Por exemplo, uma implementação pode consultar uma lista de enterprise para aplicativos confiáveis em vez de solicitar ao usuário essas informações."
  example:
  - "The following example shows a simple implementation of IApplicationTrustManager.  \n  \n [!code-cs[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/csharp/t-system.security.policy_3_1.cs)]\n [!code-vb[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/visualbasic/t-system.security.policy_3_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IApplicationTrustManager : System.Security.ISecurityEncodable
  implements:
  - System.Security.ISecurityEncodable
  platform:
  - net462
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.IApplicationTrustManager
  langs:
  - csharp
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Determina se um aplicativo deve ser executado e qual conjunto de permissões deve ser concedido a ele."
  remarks: "O método DetermineApplicationTrust é chamado pelo host para determinar se um aplicativo deve ser executado e o conjunto de permissões que ele deve ser concedido. DetermineApplicationTrust retorna um <xref:System.Security.Policy.ApplicationTrust>do objeto com um <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A>que contém uma permissão definida que representa as permissões para ser concedida a cada assembly em execução dentro do contexto do aplicativo.</xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> </xref:System.Security.Policy.ApplicationTrust> Não se aplicam as permissões concedidas a assemblies no cache de assembly global. O <xref:System.Security.Policy.ApplicationTrust>objeto também tem um <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A>propriedade que define o Gerenciador de confiança para indicar se o aplicativo deve ser confiável.</xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> </xref:System.Security.Policy.ApplicationTrust> Se o Gerenciador de confiança indica que o aplicativo pode ser confiável, o host ativa o aplicativo e concede o conjunto de permissões fornecidas de seus assemblies de <xref:System.Security.Policy.ApplicationTrust>coleção.</xref:System.Security.Policy.ApplicationTrust>"
  example:
  - "The following example shows an implementation of the DetermineApplicationTrust method for a custom trust manager. This code example is part of a larger example provided for the <xref:System.Security.Policy.IApplicationTrustManager> interface.  \n  \n [!code-cs[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/csharp/24b6db65-f82b-47e4-ac93-_1.cs)]\n [!code-vb[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/visualbasic/24b6db65-f82b-47e4-ac93-_1.vb)]"
  syntax:
    content: public System.Security.Policy.ApplicationTrust DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "O contexto de ativação para o aplicativo."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "O contexto do Gerenciador de confiança para o aplicativo."
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "Um objeto que contém as decisões de segurança sobre o aplicativo."
  overload: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.IApplicationTrustManager
  isExternal: false
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*
  parent: System.Security.Policy.IApplicationTrustManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust
