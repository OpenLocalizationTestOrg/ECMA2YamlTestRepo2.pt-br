### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil
  id: ComManagedImportUtil
  children:
  - System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor
  - System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)
  - System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)
  langs:
  - csharp
  name: ComManagedImportUtil
  nameWithType: ComManagedImportUtil
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil
  type: Class
  summary: "Identifica e instala os componentes no catálogo COM+."
  remarks: "ComManagedImportUtil é usado internamente pelo .NET Framework. Você não precisa usar a classe diretamente no seu código."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("3b0398c9-7812-4007-85cb-18c771f2206f")]

      public class ComManagedImportUtil : System.EnterpriseServices.Internal.IComManagedImportUtil
  inheritance:
  - System.Object
  implements:
  - System.EnterpriseServices.Internal.IComManagedImportUtil
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  langs:
  - csharp
  name: ComManagedImportUtil()
  nameWithType: ComManagedImportUtil.ComManagedImportUtil()
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.ComManagedImportUtil()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Inicializa uma nova instância do <xref href=&quot;System.EnterpriseServices.Internal.ComManagedImportUtil&quot;> </xref> classe."
  syntax:
    content: public ComManagedImportUtil ();
    parameters: []
  overload: System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)
  id: GetComponentInfo(System.String,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  langs:
  - csharp
  name: GetComponentInfo(String,String,String)
  nameWithType: ComManagedImportUtil.GetComponentInfo(String,String,String)
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Obtém as informações de componente do assembly."
  remarks: "Este método é chamado pelo catálogo de COM+ para identificar os identificadores de classe (CLSIDs) e ProgIDs dos componentes em uma DLL antes que ele está registrado."
  syntax:
    content: public void GetComponentInfo (string assemblyPath, out string numComponents, out string componentInfo);
    parameters:
    - id: assemblyPath
      type: System.String
      description: "O caminho para o assembly."
    - id: numComponents
      type: System.String
      description: "Quando este método retorna, este parâmetro contém o número de componentes no assembly."
    - id: componentInfo
      type: System.String
      description: "Quando este método retorna, este parâmetro contém as informações sobre os componentes."
  overload: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>assemblyPath</code>é uma cadeia de caracteres vazia, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>.       - ou - o sistema não pôde recuperar o caminho absoluto."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem as permissões necessárias."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>assemblyPath</code>contém dois-pontos (&quot;:&quot;)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)
  id: InstallAssembly(System.String,System.String,System.String)
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  langs:
  - csharp
  name: InstallAssembly(String,String,String)
  nameWithType: ComManagedImportUtil.InstallAssembly(String,String,String)
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Instala um assembly em um aplicativo COM+."
  remarks: "Chamadas de InstallAssembly <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=fullName>, que executa as seguintes etapas: 1.</xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=fullName>  Registro do assembly.      2.  Geração de uma biblioteca de tipos.      3.  Registro da biblioteca de tipos.      4.  Instalação da biblioteca de tipos com o aplicativo especificado.      5.  Configuração de componentes contidos na biblioteca de tipos.       Esse método requer que o chamador tenha privilégios administrativos no computador local."
  syntax:
    content: public void InstallAssembly (string asmpath, string parname, string appname);
    parameters:
    - id: asmpath
      type: System.String
      description: "O caminho para o assembly."
    - id: parname
      type: System.String
      description: "O nome da partição COM+."
    - id: appname
      type: System.String
      description: "O nome do aplicativo COM+."
  overload: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Um chamador na cadeia de chamada não tem permissão para acessar código não gerenciado."
  - type: System.EnterpriseServices.RegistrationException
    commentId: T:System.EnterpriseServices.RegistrationException
    description: "O assembly de entrada não tem um nome forte."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.EnterpriseServices.RegistrationException
  parent: System.EnterpriseServices
  isExternal: false
  name: RegistrationException
  nameWithType: RegistrationException
  fullName: System.EnterpriseServices.RegistrationException
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  isExternal: false
  name: ComManagedImportUtil()
  nameWithType: ComManagedImportUtil.ComManagedImportUtil()
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.ComManagedImportUtil()
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  isExternal: false
  name: GetComponentInfo(String,String,String)
  nameWithType: ComManagedImportUtil.GetComponentInfo(String,String,String)
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  isExternal: false
  name: InstallAssembly(String,String,String)
  nameWithType: ComManagedImportUtil.InstallAssembly(String,String,String)
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(String,String,String)
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor*
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  isExternal: false
  name: ComManagedImportUtil
  nameWithType: ComManagedImportUtil.ComManagedImportUtil
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo*
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  isExternal: false
  name: GetComponentInfo
  nameWithType: ComManagedImportUtil.GetComponentInfo
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly*
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  isExternal: false
  name: InstallAssembly
  nameWithType: ComManagedImportUtil.InstallAssembly
