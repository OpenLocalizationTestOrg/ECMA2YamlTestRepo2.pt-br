### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleBFile
  id: OracleBFile
  children:
  - System.Data.OracleClient.OracleBFile.CanRead
  - System.Data.OracleClient.OracleBFile.CanSeek
  - System.Data.OracleClient.OracleBFile.CanWrite
  - System.Data.OracleClient.OracleBFile.Clone
  - System.Data.OracleClient.OracleBFile.Connection
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  - System.Data.OracleClient.OracleBFile.DirectoryName
  - System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleBFile.FileExists
  - System.Data.OracleClient.OracleBFile.FileName
  - System.Data.OracleClient.OracleBFile.Flush
  - System.Data.OracleClient.OracleBFile.IsNull
  - System.Data.OracleClient.OracleBFile.Length
  - System.Data.OracleClient.OracleBFile.Null
  - System.Data.OracleClient.OracleBFile.Position
  - System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  - System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  - System.Data.OracleClient.OracleBFile.Value
  - System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
  type: Class
  summary: "Representa um objeto gerenciado de OracleBFile projetado para trabalhar com o Oracle <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> tipo de dados. Essa classe não pode ser herdada."
  remarks: "O Oracle `BFILE` tipo de dados é um Oracle `LOB` tipo de dados que contém uma referência a dados binários com um tamanho máximo de 4 gigabytes. Um Oracle `BFILE` difere de outros Oracle `LOB` tipos de dados em que seus dados são armazenados em um arquivo físico no sistema operacional, em vez de no servidor. Observe que o `BFILE` tipo de dados fornece acesso somente leitura aos dados. Portanto, os métodos orientados a gravação herdado da <xref:System.IO.Stream>não há suporte para a classe.</xref:System.IO.Stream>       Outras características de um `BFILE` tipo de dados que distingui-lo de um `LOB` tipo de dados são:-contém dados não estruturados.      -Oferece suporte a particionamento do lado do servidor.      -Usa referência a semântica de cópia. Por exemplo, se você executar uma operação de cópia em um `BFILE`, somente o `BFILE` localizador (que é uma referência ao arquivo) é copiado. Os dados no arquivo não são copiados.       O `BFILE` tipo de dados deve ser usado para fazer referência a `LOB`que são grandes e, portanto, não é prático armazenar no banco de dados. Há sobrecarga de comunicação, servidor e cliente para usar um `BFILE` tipo de dados em comparação com o `LOB` tipo de dados. É mais eficiente para acessar um `BFILE` se você precisar obter uma pequena quantidade de dados. É mais eficiente para acessar o banco de dados residentes `LOB`s se você precisar obter todo o objeto.       Cada objeto OracleBFile não nulo é associado com duas entidades que definem o local do arquivo físico subjacente:-objeto de um diretório do Oracle, que é um alias de banco de dados para um diretório no sistema de arquivos e - o nome do arquivo do arquivo físico subjacente, que está localizado no diretório associado ao objeto de diretório.       Após um `BFILE` é criado, você pode recuperar seu localizador na forma de um objeto OracleBFile usando o <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>ou <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>métodos.</xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       Para obter um objeto OracleBFile, chame o <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>método.</xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>       O arquivo físico que um objeto OracleBFile associado não precisa existir até que você tentar acessá-lo. Um aplicativo pode associar um OracleBFile para um arquivo inexistente, criar o arquivo físico no local esperado e, em seguida, chame <xref:System.Data.OracleClient.OracleBFile.Read%2A>.</xref:System.Data.OracleClient.OracleBFile.Read%2A>       Qualquer tentativa de acessar um OracleBFile fechado usando o <xref:System.Data.OracleClient.OracleBFile.Read%2A>ou <xref:System.Data.OracleClient.OracleBFile.Seek%2A>métodos é reaberto automaticamente um fluxo OracleBFile.</xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile.Read%2A>       O exemplo c# a seguir demonstra como você pode criar um `BFILE` em um Oracle de tabela e, em seguida, recuperá-la na forma de um objeto OracleBFile. O exemplo demonstra o uso do <xref:System.Data.OracleClient.OracleDataReader>objeto e o OracleBFile<xref:System.Data.OracleClient.OracleBFile.Seek%2A> e <xref:System.Data.OracleClient.OracleBFile.Read%2A>métodos.</xref:System.Data.OracleClient.OracleBFile.Read%2A> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleDataReader>       [!code-cs[DataWorks OracleClient.BFile#1](~/add/codesnippet/csharp/t-system.data.oracleclie_3_1.cs) ] para obter mais informações sobre como criar e usar um Oracle `BFILE`, consulte o tópico apropriado na documentação do Oracle.      > [!NOTE] > O `BeginWrite`, `EndWrite`, e `WriteByte` métodos, que são herdados a `System.IO.Stream` da classe, não têm suporte porque o `BFILE` tipo de dados é somente leitura."
  syntax:
    content: 'public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.IO.Stream
  implements:
  - System.Data.SqlTypes.INullable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanRead
  id: CanRead
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se o <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> fluxo pode ser lido."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se um <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> está fechado ou descartado; caso contrário <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  id: CanSeek
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se a busca de avanço e operações de busca com versões anteriores pode ser executadas."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se um <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> está fechado ou descartado; caso contrário <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  id: CanWrite
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se o objeto oferece suporte à gravação."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "Sempre retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> porque o Oracle <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> tipo de dados é somente leitura."
  overload: System.Data.OracleClient.OracleBFile.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cria uma cópia deste <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objeto associado com o mesmo arquivo físico que o original."
  remarks: "As propriedades do novo <xref:System.Data.OracleClient.OracleBFile>objeto inicialmente ter os mesmos valores do objeto original.</xref:System.Data.OracleClient.OracleBFile> No entanto, depois que o Clone for concluído, cada <xref:System.Data.OracleClient.OracleBFile>objeto é independente dos outros.</xref:System.Data.OracleClient.OracleBFile> Por exemplo, alterar o valor da <xref:System.Data.OracleClient.OracleBFile.Position%2A>propriedade original <xref:System.Data.OracleClient.OracleBFile>não altera o valor de <xref:System.Data.OracleClient.OracleBFile.Position%2A>na cópia.</xref:System.Data.OracleClient.OracleBFile.Position%2A> </xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Position%2A>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um novo <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objeto associado com o mesmo arquivo físico que o original <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> objeto."
  overload: System.Data.OracleClient.OracleBFile.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém o <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> usado por esta instância do <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "A conexão a uma fonte de dados. O padrão é um valor nulo."
  overload: System.Data.OracleClient.OracleBFile.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  id: CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Copia todo o conteúdo deste <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> para o início de um destino de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Os tipos de dados subjacente da fonte de <xref:System.Data.OracleClient.OracleBFile>e o destino <xref:System.Data.OracleClient.OracleLob>devem ser compatíveis.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Por exemplo, você não pode copiar os dados binários para um destino <xref:System.Data.OracleClient.OracleLob>que tem um tipo de dados de caractere.</xref:System.Data.OracleClient.OracleLob>       Você deve ter acesso de gravação para o destino <xref:System.Data.OracleClient.OracleLob>para a operação de CopyTo seja executado corretamente.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "O destino<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>"
    return:
      type: System.Int64
      description: "O número de bytes copiados."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O destino <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> é uma referência de objeto nulo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O destino é um valor nulo <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       a conexão com o qual este - ou - <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> associado está fechado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> objeto foi fechado ou descartado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Copia todo o conteúdo deste <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> para um destino <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> no deslocamento especificado."
  remarks: "Os tipos de dados subjacente da fonte de <xref:System.Data.OracleClient.OracleBFile>e o destino <xref:System.Data.OracleClient.OracleLob>devem ser compatíveis.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Por exemplo, você não pode copiar os dados binários para um destino <xref:System.Data.OracleClient.OracleLob>que tem um tipo de dados de caractere.</xref:System.Data.OracleClient.OracleLob>       Você deve ter acesso de gravação para o destino <xref:System.Data.OracleClient.OracleLob>para o <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>operação a ser executada corretamente.</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "O destino <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    - id: destinationOffset
      type: System.Int64
      description: "O deslocamento no qual copiar."
    return:
      type: System.Int64
      description: "O número de bytes copiados."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O destino <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> é uma referência de objeto nulo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O destino é um valor nulo <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       a conexão com o qual este - ou - <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> associado está fechado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> objeto foi fechado ou descartado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cópias deste <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> para um destino <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> com a quantidade especificada de dados, o deslocamento de origem e o deslocamento de destino."
  remarks: "Os tipos de dados subjacente da fonte de <xref:System.Data.OracleClient.OracleBFile>e o destino <xref:System.Data.OracleClient.OracleLob>devem ser compatíveis.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Por exemplo, você não pode copiar os dados binários para um destino <xref:System.Data.OracleClient.OracleLob>que tem um tipo de dados de caractere.</xref:System.Data.OracleClient.OracleLob>       Você deve ter acesso de gravação para o destino <xref:System.Data.OracleClient.OracleLob>para o <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>operação a ser executada corretamente.</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);
    parameters:
    - id: sourceOffset
      type: System.Int64
      description: "O deslocamento da qual copiar."
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "O destino <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    - id: destinationOffset
      type: System.Int64
      description: "O deslocamento no qual copiar."
    - id: amount
      type: System.Int64
      description: "A quantidade de dados, em bytes, para copiar."
    return:
      type: System.Int64
      description: "O número de bytes copiados."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor do parâmetro de valor é menor que zero ou maior que 4 gigabytes."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O destino <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> é uma referência de objeto nulo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O destino é um valor nulo <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       a conexão com o qual este - ou - <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> associado está fechado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> objeto foi fechado ou descartado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  id: DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém o nome do objeto de diretório, com a qual um <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objeto está associado."
  remarks: "Cada nulas <xref:System.Data.OracleClient.OracleBFile>objeto é associado com duas entidades que definem o local do arquivo físico subjacente:-objeto de um diretório do Oracle, que é um alias de banco de dados para um diretório no sistema de arquivos e - o nome do arquivo do arquivo físico subjacente, que está localizado no diretório associado ao objeto de diretório.</xref:System.Data.OracleClient.OracleBFile>       A propriedade DirectoryName retorna o nome do objeto de diretório do banco de dados Oracle.       Para obter mais informações sobre como criar e usar um Oracle `BFILE`, consulte o tópico apropriado na documentação do Oracle."
  syntax:
    content: public string DirectoryName { get; }
    return:
      type: System.String
      description: "O nome do objeto de diretório."
  overload: System.Data.OracleClient.OracleBFile.DirectoryName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Tentativa de chamar <xref uid=&quot;langword_csharp_DirectoryName&quot; name=&quot;DirectoryName&quot; href=&quot;&quot;> </xref> em um fechado ou descartado <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> objeto."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Data.OracleClient.OracleBFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileExists
  id: FileExists
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se um arquivo físico que contém <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> dados existem no sistema operacional."
  syntax:
    content: public bool FileExists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um arquivo físico que contém <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> dados existirem; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleBFile.FileExists*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objeto foi fechado ou descartado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão com o qual um <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> associado está fechado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileName
  id: FileName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém o nome do <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> sem o caminho."
  remarks: "Para <xref:System.Data.OracleClient.OracleBFile.Null>, uma cadeia de caracteres vazia é retornada.</xref:System.Data.OracleClient.OracleBFile.Null>"
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: "O nome do BFILE."
  overload: System.Data.OracleClient.OracleBFile.FileName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objeto foi fechado ou descartado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Flush
  id: Flush
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Atualmente não há suporte."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.OracleClient.OracleBFile.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> é um <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;> </xref> fluxo."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref> is a <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref> stream; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Length
  id: Length
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que retorna o comprimento em bytes do arquivo físico com a qual o <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objeto está associado."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "Um valor longo que representa o comprimento do arquivo físico em bytes."
  overload: System.Data.OracleClient.OracleBFile.Length*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Métodos foram chamados depois que o fluxo foi fechado ou descartado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Representa um valor nulo <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objeto que não está associado a um arquivo físico."
  remarks: "NULL pode ser útil quando você deseja executar uma operação de comparação em um <xref:System.Data.OracleClient.OracleBFile>para determinar a nulidade.</xref:System.Data.OracleClient.OracleBFile>       Qualquer tentativa de executar uma operação de leitura em um objeto Null for bem-sucedida, mas não retornou nenhum dado. Qualquer tentativa de executar uma operação de gravação em um objeto nulo gera uma exceção. Selecionando um `BFILE` coluna que contém um valor null retorna Null."
  syntax:
    content: public static readonly System.Data.OracleClient.OracleBFile Null;
    return:
      type: System.Data.OracleClient.OracleBFile
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Position
  id: Position
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém a atual posição de leitura de <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> fluxo."
  remarks: "Não há suporte para busca em qualquer local além do comprimento do fluxo.       O `Position` propriedade não manter o controle do número de bytes do fluxo que tiverem sido consumidos, ignorado, ou ambos."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A posição atual dentro do <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> fluxo."
  overload: System.Data.OracleClient.OracleBFile.Position*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Tentativa de definir uma posição com um valor negativo ou maior que o comprimento do fluxo."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Métodos foram chamados depois que o fluxo foi fechado ou descartado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lê uma sequência de bytes do atual <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> fluxo e avança a posição dentro do fluxo pelo número de bytes lidos."
  remarks: "O método de leitura ler um máximo de `count` bytes do atual fluxo e armazená-los em `buffer` começando no `offset`. A posição atual dentro do fluxo for avançada pelo número de bytes lido; No entanto, se ocorrer uma exceção, a posição atual dentro do fluxo permanece inalterada. Leitura retorna o número de bytes lidos. O valor de retorno é zero apenas se a posição do final do fluxo. Leitura será bloqueado até que pelo menos um byte de dados podem ser lidos, que não há dados disponíveis. Retorna 0 de leitura somente quando o fim do arquivo foi atingido. Leitura está livre para retornar menos bytes que solicitado, mesmo que não foi atingido o fim do fluxo.       Qualquer tentativa de acessar um fechado <xref:System.Data.OracleClient.OracleBFile>usando a leitura ou <xref:System.Data.OracleClient.OracleBFile.Seek%2A>métodos reabre um <xref:System.Data.OracleClient.OracleBFile>fluxo automaticamente.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile>       O exemplo c# a seguir supõe que esse esquema em uma tabela de Oracle: ```   (col1 number, col2 BFILE)   ``` o exemplo demonstra como usar a leitura e <xref:System.Data.OracleClient.OracleBFile.Seek%2A>métodos para acessar uma <xref:System.Data.OracleClient.OracleBFile>objeto.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Uma matriz de bytes. Quando este método retorna, o buffer contém a matriz de bytes especificada com os valores entre `offset` e (`offset` + `count`) substituídos pelos bytes lidos da origem atual."
    - id: offset
      type: System.Int32
      description: "O deslocamento de bytes baseado em zero em `buffer` no qual começar a armazenar os dados lidos do fluxo atual."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes a serem lidos do fluxo atual."
    return:
      type: System.Int32
      description: "O número total de bytes lidos no buffer. Isso pode ser menor que o número de bytes solicitado se que muitos bytes não estão disponíveis no momento ou zero se o final do arquivo foi atingido."
  overload: System.Data.OracleClient.OracleBFile.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A soma de <code> offset </code> e <code> count </code> é maior do que o comprimento do buffer."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>ou <code>count</code> é negativo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão com o qual um <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> associado está fechado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Métodos foram chamados depois que o fluxo foi fechado ou descartado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Define a posição atual <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> fluxo."
  remarks: "Se `offset` é negativo, a nova posição deve preceder a posição especificada pelo `origin` pelo número de bytes especificado por `offset`. Se `offset` for zero, a nova posição é necessária para ser a posição especificada pelo `origin`. Se `offset` for positivo, a nova posição é necessária para acompanhar a posição especificada pelo `origin` pelo número de bytes especificado por `offset`.       Não há suporte para busca em qualquer local além do comprimento do fluxo.       Qualquer tentativa de acessar um fechado <xref:System.Data.OracleClient.OracleBFile>usando o <xref:System.Data.OracleClient.OracleBFile.Read%2A>ou reabre métodos de busca um <xref:System.Data.OracleClient.OracleBFile>fluxo automaticamente.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Read%2A> </xref:System.Data.OracleClient.OracleBFile>       O exemplo c# a seguir supõe que esse esquema em uma tabela de Oracle: ```   (col1 number, col2 BFILE)   ``` o exemplo demonstra como usar o <xref:System.Data.OracleClient.OracleBFile.Read%2A>e busca de métodos para acessar uma <xref:System.Data.OracleClient.OracleBFile>objeto.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Read%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Um deslocamento de bytes em relação a origem. Se `offset` é negativo, a nova posição precederá a posição especificada pelo `origin` pelo número de bytes especificado por `offset`. Se `offset` for zero, a nova posição será a posição especificada pelo `origin`. Se `offset` for positivo, a nova posição seguirão a posição especificada pelo `origin` pelo número de bytes especificado por `offset`."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Um valor do tipo <xref uid=&quot;langword_csharp_System.IO.SeekOrigin&quot; name=&quot;System.IO.SeekOrigin&quot; href=&quot;&quot;> </xref> que indica o ponto de referência usado para obter a nova posição."
    return:
      type: System.Int64
      description: "A nova posição dentro do fluxo atual."
  overload: System.Data.OracleClient.OracleBFile.Seek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Tentativa de definir uma posição com um valor negativo ou maior que o comprimento do fluxo."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Métodos foram chamados depois que o fluxo foi fechado ou descartado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  id: SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Associa o <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objeto para um arquivo diferente no sistema operacional."
  remarks: "A operação de SetFileName deve estar dentro de uma transação tenha êxito. Basta chamar SetFileName em uma `BFILE` associa o <xref:System.Data.OracleClient.OracleBFile>objeto com um arquivo diferente, mas não atualiza a tabela de Oracle.</xref:System.Data.OracleClient.OracleBFile> Para atualizar a tabela de Oracle após chamar SetFileName, você deve chamar o `Update` método o <xref:System.Data.OracleClient.OracleDataAdapter>e, em seguida, confirme a transação.</xref:System.Data.OracleClient.OracleDataAdapter>       Depois de recuperar o <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>ou <xref:System.Data.OracleClient.OracleBFile.FileName%2A>propriedade, eles são armazenados em cache o <xref:System.Data.OracleClient.OracleBFile>do objeto e não são afetadas por nenhuma clonado <xref:System.Data.OracleClient.OracleBFile>chamadas de objetos para SetFileName ou pelas alterações para o `BFILE` no banco de dados.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.FileName%2A> </xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> Em outras palavras, ele não podem representar os valores reais do `BFILE` objeto no servidor.       Além disso, a recuperação de qualquer uma das propriedades (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> ou <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) faz com que os dois valores de propriedade a ser recuperado do servidor e armazenados em cache o <xref:System.Data.OracleClient.OracleBFile>objeto.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.FileName%2A> </xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>       O exemplo c# a seguir supõe que esse esquema em uma tabela de Oracle: ```   (col1 number, col2 BFILE)   ``` o exemplo demonstra como usar o SetFileName <xref:System.Data.OracleClient.OracleBFile.Read%2A>e <xref:System.Data.OracleClient.OracleBFile.Seek%2A>métodos para acessar uma <xref:System.Data.OracleClient.OracleBFile>objeto.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile.Read%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {           OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);               command.Transaction = connection.BeginTransaction();               BFile.SetFileName(&quot;TESTDIR&quot;, &quot;File1.jpg&quot;);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public void SetFileName (string directory, string file);
    parameters:
    - id: directory
      type: System.String
      description: "O alias do objeto de diretório que contém um arquivo físico."
    - id: file
      type: System.String
      description: "O nome do arquivo no sistema operacional."
  overload: System.Data.OracleClient.OracleBFile.SetFileName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação deve estar dentro de uma transação."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Atualmente não há suporte."
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Atualmente não há suporte."
  overload: System.Data.OracleClient.OracleBFile.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A exceção que é lançada quando um método invocado não tem suporte ou quando há uma tentativa de leitura, busca ou gravação em um fluxo que não oferece suporte à funcionalidade invocada."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Value
  id: Value
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um <xref:System.Array>do tipo <xref:System.Byte>que contém o <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> dados.</xref:System.Byte> </xref:System.Array>"
  remarks: "A propriedade de valor lê todo o `BFILE` ao mesmo tempo.      > [!NOTE] > Uma vantagem de usar `BFILE`s é a capacidade de recuperar grandes quantidades de dados em partes no cliente. No entanto, quando você usa o valor, você obter todos os dados para a coluna BFILE como uma parte de contígua, que pode aumentar significativamente a sobrecarga de aplicativo."
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "Um <xref:System.Array>do tipo <xref:System.Byte>que contém o <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> dados.</xref:System.Byte> </xref:System.Array>"
  overload: System.Data.OracleClient.OracleBFile.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Atualmente não há suporte."
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Atualmente não há suporte."
    - id: offset
      type: System.Int32
      description: "Atualmente não há suporte."
    - id: count
      type: System.Int32
      description: "Atualmente não há suporte."
  overload: System.Data.OracleClient.OracleBFile.Write*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A exceção que é lançada quando um método invocado não tem suporte ou quando há uma tentativa de leitura, busca ou gravação em um fluxo que não oferece suporte à funcionalidade invocada."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.OracleClient.OracleBFile.CanRead
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleBFile.Connection
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
- uid: System.Data.OracleClient.OracleBFile.FileExists
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
- uid: System.Data.OracleClient.OracleBFile.IsNull
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Null
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
- uid: System.Data.OracleClient.OracleBFile
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
- uid: System.Data.OracleClient.OracleBFile.Position
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
- uid: System.Data.OracleClient.OracleBFile.Value
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
- uid: System.Data.OracleClient.OracleBFile.CanRead*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
- uid: System.Data.OracleClient.OracleBFile.CanSeek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone
  nameWithType: OracleBFile.Clone
- uid: System.Data.OracleClient.OracleBFile.Connection*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
- uid: System.Data.OracleClient.OracleBFile.CopyTo*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo
  nameWithType: OracleBFile.CopyTo
- uid: System.Data.OracleClient.OracleBFile.DirectoryName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
- uid: System.Data.OracleClient.OracleBFile.Dispose*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose
  nameWithType: OracleBFile.Dispose
- uid: System.Data.OracleClient.OracleBFile.FileExists*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush
  nameWithType: OracleBFile.Flush
- uid: System.Data.OracleClient.OracleBFile.IsNull*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Position*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read
  nameWithType: OracleBFile.Read
- uid: System.Data.OracleClient.OracleBFile.Seek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek
  nameWithType: OracleBFile.Seek
- uid: System.Data.OracleClient.OracleBFile.SetFileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName
  nameWithType: OracleBFile.SetFileName
- uid: System.Data.OracleClient.OracleBFile.SetLength*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength
  nameWithType: OracleBFile.SetLength
- uid: System.Data.OracleClient.OracleBFile.Value*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write
  nameWithType: OracleBFile.Write
