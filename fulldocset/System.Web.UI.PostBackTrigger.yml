### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PostBackTrigger
  id: PostBackTrigger
  children:
  - System.Web.UI.PostBackTrigger.#ctor
  - System.Web.UI.PostBackTrigger.ControlID
  - System.Web.UI.PostBackTrigger.HasTriggered
  - System.Web.UI.PostBackTrigger.Initialize
  - System.Web.UI.PostBackTrigger.ToString
  langs:
  - csharp
  name: PostBackTrigger
  nameWithType: PostBackTrigger
  fullName: System.Web.UI.PostBackTrigger
  type: Class
  summary: "Define um controle dentro de um <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle como um controle de postagem."
  remarks: "Use o controle de PostBackTrigger para ativar os controles dentro de um <xref:System.Web.UI.UpdatePanel>para causar um postback em vez de executar um postback assíncrono.</xref:System.Web.UI.UpdatePanel>       Use o <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A>método o <xref:System.Web.UI.ScriptManager>controle programaticamente registrar um controle de postagem.</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> Em seguida, você pode chamar o <xref:System.Web.UI.UpdatePanel.Update%2A>método do <xref:System.Web.UI.UpdatePanel>controlar quando o controle de gatilho executa um postback.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.Update%2A>      > [!NOTE] > Adição programaticamente PostBackTrigger controles não é suportada.       Se um controle é definido como ambos um PostBackTrigger e <xref:System.Web.UI.AsyncPostBackTrigger>controle, uma exceção será lançada.</xref:System.Web.UI.AsyncPostBackTrigger>"
  example:
  - "The following example shows how to declaratively define a PostBackTrigger control for an <xref:System.Web.UI.UpdatePanel> control. In the panel, a <xref:System.Web.UI.WebControls.FileUpload> control enables users to upload a file. Users must first check whether the file to upload exists. The <xref:System.Web.UI.WebControls.Button> control that calls the event handler to check the file name causes an asynchronous postback. However, the <xref:System.Web.UI.WebControls.Button> control that uploads the file is registered as a PostBackTrigger, because files cannot be uploaded asynchronously.  \n  \n [!code-vb[System.Web.UI.PostBackTrigger#1](~/add/codesnippet/visualbasic/t-system.web.ui.postback_1_1.aspx)]\n [!code-cs[System.Web.UI.PostBackTrigger#1](~/add/codesnippet/csharp/t-system.web.ui.postback_1_1.aspx)]"
  syntax:
    content: 'public class PostBackTrigger : System.Web.UI.UpdatePanelControlTrigger'
  inheritance:
  - System.Object
  - System.Web.UI.UpdatePanelTrigger
  - System.Web.UI.UpdatePanelControlTrigger
  implements: []
  inheritedMembers:
  - System.Web.UI.UpdatePanelControlTrigger.FindTargetControl(System.Boolean)
  - System.Web.UI.UpdatePanelTrigger.Owner
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.#ctor
  id: '#ctor'
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: PostBackTrigger()
  nameWithType: PostBackTrigger.PostBackTrigger()
  fullName: System.Web.UI.PostBackTrigger.PostBackTrigger()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> classe."
  remarks: "Para criar um novo <xref:System.Web.UI.PostBackTrigger>de objeto, use o **Coleção UpdatePanelTrigger** caixa de diálogo caixa no designer ou criar um `<Triggers>` elemento declarativamente no <xref:System.Web.UI.UpdatePanel>controle.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.PostBackTrigger> Adicionando programaticamente <xref:System.Web.UI.PostBackTrigger>não há suporte para controles.</xref:System.Web.UI.PostBackTrigger>"
  syntax:
    content: public PostBackTrigger ();
    parameters: []
  overload: System.Web.UI.PostBackTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.ControlID
  id: ControlID
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: ControlID
  nameWithType: PostBackTrigger.ControlID
  fullName: System.Web.UI.PostBackTrigger.ControlID
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define o nome do controle que é um <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> controlar para uma <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle."
  syntax:
    content: public string ControlID { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa uma ID de controle de servidor."
  overload: System.Web.UI.PostBackTrigger.ControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.HasTriggered
  id: HasTriggered
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: HasTriggered()
  nameWithType: PostBackTrigger.HasTriggered()
  fullName: System.Web.UI.PostBackTrigger.HasTriggered()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Retorna um valor que indica se o disparador foi ativado."
  remarks: "Os desenvolvedores de controle podem substituir a propriedade HasTriggered para fornecer lógica personalizada para determinar se o disparador foi ativado. Para ver o disparador personalizado em tempo de design a `<Triggers>` elemento o <xref:System.Web.UI.UpdatePanel>controle, você pode adicionar uma diretiva de página ou na seção do arquivo Web. config.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override bool HasTriggered ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o disparador foi ativado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.PostBackTrigger.HasTriggered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.Initialize
  id: Initialize
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: Initialize()
  nameWithType: PostBackTrigger.Initialize()
  fullName: System.Web.UI.PostBackTrigger.Initialize()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa o <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> objeto."
  syntax:
    content: protected override void Initialize ();
    parameters: []
  overload: System.Web.UI.PostBackTrigger.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.ToString
  id: ToString
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: ToString()
  nameWithType: PostBackTrigger.ToString()
  fullName: System.Web.UI.PostBackTrigger.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Retorna uma cadeia de caracteres que representa o atual <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> objeto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o atual <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> objeto."
  overload: System.Web.UI.PostBackTrigger.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.UpdatePanelControlTrigger
  isExternal: false
  name: System.Web.UI.UpdatePanelControlTrigger
- uid: System.Web.UI.PostBackTrigger.#ctor
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: PostBackTrigger()
  nameWithType: PostBackTrigger.PostBackTrigger()
  fullName: System.Web.UI.PostBackTrigger.PostBackTrigger()
- uid: System.Web.UI.PostBackTrigger.ControlID
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: ControlID
  nameWithType: PostBackTrigger.ControlID
  fullName: System.Web.UI.PostBackTrigger.ControlID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.PostBackTrigger.HasTriggered
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: HasTriggered()
  nameWithType: PostBackTrigger.HasTriggered()
  fullName: System.Web.UI.PostBackTrigger.HasTriggered()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.PostBackTrigger.Initialize
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: Initialize()
  nameWithType: PostBackTrigger.Initialize()
  fullName: System.Web.UI.PostBackTrigger.Initialize()
- uid: System.Web.UI.PostBackTrigger.ToString
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: ToString()
  nameWithType: PostBackTrigger.ToString()
  fullName: System.Web.UI.PostBackTrigger.ToString()
- uid: System.Web.UI.PostBackTrigger.#ctor*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: PostBackTrigger
  nameWithType: PostBackTrigger.PostBackTrigger
- uid: System.Web.UI.PostBackTrigger.ControlID*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: ControlID
  nameWithType: PostBackTrigger.ControlID
- uid: System.Web.UI.PostBackTrigger.HasTriggered*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: HasTriggered
  nameWithType: PostBackTrigger.HasTriggered
- uid: System.Web.UI.PostBackTrigger.Initialize*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: Initialize
  nameWithType: PostBackTrigger.Initialize
- uid: System.Web.UI.PostBackTrigger.ToString*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: ToString
  nameWithType: PostBackTrigger.ToString
