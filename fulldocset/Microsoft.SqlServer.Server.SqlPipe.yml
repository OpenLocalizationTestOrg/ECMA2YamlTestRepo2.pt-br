### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlPipe
  id: SqlPipe
  children:
  - Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  - Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  - Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  - Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  - Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  langs:
  - csharp
  name: SqlPipe
  nameWithType: SqlPipe
  fullName: Microsoft.SqlServer.Server.SqlPipe
  type: Class
  summary: "Permite que os procedimentos armazenados gerenciados no processo em execução em um banco de dados do SQL Server para retornar resultados de volta para o chamador. Essa classe não pode ser herdada."
  remarks: "Uma instância dessa classe é disponibilizada para os procedimentos armazenados gerenciados por meio da <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A>propriedade de <xref:Microsoft.SqlServer.Server.SqlContext>classe.</xref:Microsoft.SqlServer.Server.SqlContext> </xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A>"
  example:
  - "The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure. The example then uses a SqlPipe to execute the command and send the results back to the client.  \n  \n [!code-cs[DataWorks SqlPipe#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_10_1.cs)]\n [!code-vb[DataWorks SqlPipe#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_10_1.vb)]"
  syntax:
    content: public sealed class SqlPipe
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  id: ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: ExecuteAndSend(SqlCommand)
  nameWithType: SqlPipe.ExecuteAndSend(SqlCommand)
  fullName: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(SqlCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Executa o comando passado como um parâmetro e envia os resultados ao cliente."
  remarks: "Além de todos os resultados reais, os outros erros e mensagens também são enviados diretamente para o cliente.       Parâmetros de saída e valores de retorno não são enviados ao cliente; eles estão disponíveis para o chamador, através da coleção de parâmetros de objeto de comando.       Se o comando não está associado a uma conexão em processo, um <xref:System.InvalidOperationException>é gerada.</xref:System.InvalidOperationException> Esse método não tem suporte em comandos associados a conexões de saída do processo.       Se houver erros no <xref:System.Data.SqlClient.SqlCommand>objeto que foi enviado, exceções são enviadas ao pipe, mas uma cópia também é enviada para chamar código gerenciado.</xref:System.Data.SqlClient.SqlCommand> Se o código de chamada não capturar a exceção, ela será propagada até a pilha no código Transact-SQL e aparecer duas vezes na saída. Se o código de chamada capturar a exceção, o consumidor de pipe ainda verá o erro, mas não haverá erro duplicado."
  example:
  - "The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure. The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.  \n  \n [!code-cs[DataWorks SqlPipe.ExecuteAndSend#1](~/add/codesnippet/csharp/8520fc47-4500-47d0-87b3-_1.cs)]\n [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/add/codesnippet/visualbasic/8520fc47-4500-47d0-87b3-_1.vb)]"
  syntax:
    content: public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "O <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto a ser executado."
  overload: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>command</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Esse método não tem suporte em comandos associados a conexões de saída do processo."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  id: IsSendingResults
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
  fullName: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Obtém um valor que indica se o <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref> está no modo de enviar conjuntos de resultados único para o cliente. Essa propriedade é somente leitura."
  syntax:
    content: public bool IsSendingResults { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>método foi chamado e o <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref> está no modo de enviar conjuntos de resultados único para o cliente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  overload: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  id: Send(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(SqlDataRecord)
  nameWithType: SqlPipe.Send(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Envia um resultado de única linha definido diretamente para o cliente ou consumidor de saída atual."
  syntax:
    content: public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: 'O conjunto de resultados de uma linha enviado ao cliente: um <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref> objeto.'
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  id: Send(System.Data.SqlClient.SqlDataReader)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(SqlDataReader)
  nameWithType: SqlPipe.Send(SqlDataReader)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Envia um resultado de multilinha definido diretamente para o cliente ou consumidor de saída atual."
  remarks: "Se o <xref:System.Data.SqlClient.SqlDataReader>objeto passado como um parâmetro tem ocultos colunas, as colunas não são propagadas para o conjunto de resultados enviado ao cliente.</xref:System.Data.SqlClient.SqlDataReader>"
  syntax:
    content: public void Send (System.Data.SqlClient.SqlDataReader reader);
    parameters:
    - id: reader
      type: System.Data.SqlClient.SqlDataReader
      description: 'O resultado multilinha definidas para serem enviadas para o cliente: um <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> objeto.'
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  id: Send(System.String)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(String)
  nameWithType: SqlPipe.Send(String)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(String)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Envia uma mensagem de cadeia de caracteres diretamente para o cliente ou consumidor de saída atual."
  remarks: "A cadeia de caracteres de mensagem é enviada como uma mensagem informativa ao cliente. Aplicativos cliente podem escutar mensagens por meio de mecanismos diferentes, dependendo de dados acesso aplicativo interface de programação (API) que eles usam. Por exemplo, se o cliente está usando ADO.NET, as mensagens de transmissão por meio de <xref:System.Data.SqlClient.SqlConnection.InfoMessage>evento.</xref:System.Data.SqlClient.SqlConnection.InfoMessage>"
  example:
  - "The following example uses the Send method to send a message string directly to the client.  \n  \n [!code-vb[DataWorks SqlPipe.Send#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_4_1.vb)]\n [!code-cs[DataWorks SqlPipe.Send#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_4_1.cs)]"
  syntax:
    content: public void Send (string message);
    parameters:
    - id: message
      type: System.String
      description: "A cadeia de caracteres de mensagem a ser enviada ao cliente."
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> message </code> é maior do que 4.000 caracteres."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  id: SendResultsEnd
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsEnd()
  nameWithType: SqlPipe.SendResultsEnd()
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd()
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Marca o fim de um conjunto de resultados e retorna o <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref> instância para o estado inicial."
  remarks: "Procedimentos armazenados gerenciados podem enviar conjuntos de resultados para os clientes que não estão implementando um <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> Esse método, juntamente com <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>e <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, permitir que os procedimentos armazenados enviar conjuntos de resultados personalizados ao cliente.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the SendResultsEnd method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_3_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsEnd#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_3_1.cs)]"
  syntax:
    content: public void SendResultsEnd ();
    parameters: []
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>método não foi chamado anteriormente.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  id: SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsRow(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsRow(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Envia uma única linha de dados de volta ao cliente."
  remarks: "Procedimentos armazenados gerenciados podem enviar conjuntos de resultados para os clientes que não estão implementando um <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> Esse método, juntamente com <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>e <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, permite que procedimentos armazenados enviar conjuntos de resultados personalizados ao cliente.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>       O método SendResultsRow envia uma única linha de dados de volta ao cliente. Linhas subsequentemente podem ser retornadas ao chamador chamando SendResultsRow, uma vez para cada linha que está sendo enviada. Depois que todas as linhas forem enviadas, uma chamada para o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>método é necessário para marcar o fim do conjunto de resultados.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the SendResultsRow method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/visualbasic/ddfb48e8-078f-4be8-b690-_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/csharp/ddfb48e8-078f-4be8-b690-_1.cs)]"
  syntax:
    content: public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: "Um <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref> objeto com os valores de coluna para a linha a ser enviado ao cliente. O esquema para o registro deve corresponder ao esquema descrito por metadados do <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref> passado para o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>método.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>método não foi chamado anteriormente.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  id: SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsStart(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsStart(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Marca o início de um conjunto de resultados a ser enviada de volta para o cliente e usa o parâmetro de registro para criar os metadados que descrevem o conjunto de resultados."
  remarks: "Procedimentos armazenados gerenciados podem enviar conjuntos de resultados para os clientes que não estão implementando um <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> Esse método, juntamente com <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>e <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, permitir que os procedimentos armazenados enviar conjuntos de resultados personalizados ao cliente.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>       O método SendResultsStart marca o início de um conjunto de resultados e usa o parâmetro de registro para criar os metadados que descrevem o conjunto de resultados. Todas as linhas subsequentes, enviadas usando o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>método, deve corresponder àquela definição de metadados.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>       Observe que depois de chamar SendResultsStart, apenas <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>e <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>pode ser chamado.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> Qualquer outro método na mesma instância de <xref:Microsoft.SqlServer.Server.SqlPipe>lança um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:Microsoft.SqlServer.Server.SqlPipe> <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>define <xref:Microsoft.SqlServer.Server.SqlPipe>volta para o estado inicial onde outros métodos podem ser chamados.</xref:Microsoft.SqlServer.Server.SqlPipe></xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>       Depois que o controle retorna para o Transact-SQL de execução de CLR, não tente usar uma variável estática ou local inicializada para a memória do CLR. Por exemplo, armazenamento não de uma instância de um processo na classe, por exemplo `SQLDataRecord`, que será usado depois que o controle retorna do CLR. Uma exceção é o `SQLMetaData` na classe de processo."
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the SendResultsStart method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/add/codesnippet/visualbasic/7934d20a-2ed7-4876-a001-_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsStart#1](~/add/codesnippet/csharp/7934d20a-2ed7-4876-a001-_1.cs)]"
  syntax:
    content: public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: "Um <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref> objeto do qual os metadados são extraídos e usados para descrever o conjunto de resultados."
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> record </code> não tem colunas ou não foi inicializado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um método diferente do <> </> *> ou <> </> *> foi chamado depois do método SendResultsStart."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: ExecuteAndSend(SqlCommand)
  nameWithType: SqlPipe.ExecuteAndSend(SqlCommand)
  fullName: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
  fullName: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(SqlDataRecord)
  nameWithType: SqlPipe.Send(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlDataRecord
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: SqlDataRecord
  nameWithType: SqlDataRecord
  fullName: Microsoft.SqlServer.Server.SqlDataRecord
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(SqlDataReader)
  nameWithType: SqlPipe.Send(SqlDataReader)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataReader)
- uid: System.Data.SqlClient.SqlDataReader
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(String)
  nameWithType: SqlPipe.Send(String)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsEnd()
  nameWithType: SqlPipe.SendResultsEnd()
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd()
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsRow(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsRow(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsStart(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsStart(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: ExecuteAndSend
  nameWithType: SqlPipe.ExecuteAndSend
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
- uid: Microsoft.SqlServer.Server.SqlPipe.Send*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send
  nameWithType: SqlPipe.Send
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsEnd
  nameWithType: SqlPipe.SendResultsEnd
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsRow
  nameWithType: SqlPipe.SendResultsRow
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsStart
  nameWithType: SqlPipe.SendResultsStart
