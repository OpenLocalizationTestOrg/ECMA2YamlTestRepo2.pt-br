### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.CacheRequest
  id: CacheRequest
  children:
  - System.Windows.Automation.CacheRequest.#ctor
  - System.Windows.Automation.CacheRequest.Activate
  - System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  - System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  - System.Windows.Automation.CacheRequest.AutomationElementMode
  - System.Windows.Automation.CacheRequest.Clone
  - System.Windows.Automation.CacheRequest.Current
  - System.Windows.Automation.CacheRequest.Pop
  - System.Windows.Automation.CacheRequest.Push
  - System.Windows.Automation.CacheRequest.TreeFilter
  - System.Windows.Automation.CacheRequest.TreeScope
  langs:
  - csharp
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
  type: Class
  summary: "Especifica as propriedades e padrões que o [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] framework armazena em cache quando um <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> é obtido."
  remarks: "Recuperando propriedades e padrões por meio de [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] exige chamadas entre processos que lento o desempenho. Armazenando valores de propriedades e padrões em uma operação em lote, você pode melhorar o desempenho do seu aplicativo.       Crie uma nova solicitação de cache chamando o construtor da classe. A solicitação é preenchida por chamadas repetidas para o <xref:System.Windows.Automation.CacheRequest.Add%2A>método.</xref:System.Windows.Automation.CacheRequest.Add%2A>       Somente uma CacheRequest único pode estar ativa. Para ativar uma solicitação de duas maneiras:-chamar <xref:System.Windows.Automation.CacheRequest.Activate%2A>na solicitação.</xref:System.Windows.Automation.CacheRequest.Activate%2A> Isso envia a solicitação para a pilha e a solicitação é exibida quando o objeto é descartado. Para garantir o descarte mesmo se uma exceção é gerada, use o valor de retorno <xref:System.Windows.Automation.CacheRequest.Activate%2A>dentro de um `using` bloco (`Using` em [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]).</xref:System.Windows.Automation.CacheRequest.Activate%2A>      -Colocar a solicitação para a pilha interna chamando <xref:System.Windows.Automation.CacheRequest.Push%2A>.</xref:System.Windows.Automation.CacheRequest.Push%2A> Somente a solicitação mais alta na pilha está ativa e deve ser um removida da pilha por <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</xref:System.Windows.Automation.CacheRequest.Pop%2A> Exibir a solicitação desativa a ele.       [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]elementos obtidos enquanto a solicitação está ativa serão armazenaram em cache os valores para as propriedades e os padrões especificados."
  example:
  - "The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]  \n  \n The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public sealed class CacheRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.#ctor
  id: '#ctor'
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: CacheRequest()
  nameWithType: CacheRequest.CacheRequest()
  fullName: System.Windows.Automation.CacheRequest.CacheRequest()
  type: Constructor
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> classe."
  remarks: "Quando um <xref:System.Windows.Automation.CacheRequest>é criado, o <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>identificador é adicionado como uma propriedade padrão para o cache.</xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> </xref:System.Windows.Automation.CacheRequest>"
  syntax:
    content: public CacheRequest ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Activate
  id: Activate
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Activate()
  nameWithType: CacheRequest.Activate()
  fullName: System.Windows.Automation.CacheRequest.Activate()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Define esta <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> como a especificação de ativa para os itens que são retornadas quando uma <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> for solicitada no mesmo thread."
  remarks: "Usando esse método é geralmente preferível a usar <xref:System.Windows.Automation.CacheRequest.Push%2A>e <xref:System.Windows.Automation.CacheRequest.Pop%2A>como um meio de ativação de <xref:System.Windows.Automation.CacheRequest>.</xref:System.Windows.Automation.CacheRequest> </xref:System.Windows.Automation.CacheRequest.Pop%2A> </xref:System.Windows.Automation.CacheRequest.Push%2A> O objeto é inserido na pilha quando ativar é chamado e, em seguida, retirado quando ele é descartado. Para garantir o descarte, coloque o valor de retorno dentro de um `using` bloco (`Using` em [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])."
  example:
  - "The following example shows how to use Activate to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]"
  syntax:
    content: public IDisposable Activate ();
    parameters: []
    return:
      type: System.IDisposable
      description: "O objeto que pode ser usado para descartar o <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>."
  overload: System.Windows.Automation.CacheRequest.Activate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  id: Add(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Add(AutomationPattern)
  nameWithType: CacheRequest.Add(AutomationPattern)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationPattern)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Adiciona o <xref href=&quot;System.Windows.Automation.AutomationPattern&quot;> </xref> identificador para esse <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>."
  remarks: "Adicionar um padrão que já está na solicitação de cache não tem nenhum efeito."
  example:
  - "The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a pattern to be cached.  \n  \n [!code-vb[UIAClient_snip#202](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#202)]\n [!code-cs[UIAClient_snip#202](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#202)]"
  syntax:
    content: public void Add (System.Windows.Automation.AutomationPattern pattern);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "Um identificador que especifica um padrão para o cache."
  overload: System.Windows.Automation.CacheRequest.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> está ativa."
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  id: Add(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Add(AutomationProperty)
  nameWithType: CacheRequest.Add(AutomationProperty)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationProperty)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Adiciona o <xref href=&quot;System.Windows.Automation.AutomationProperty&quot;> </xref> identificador para esse <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>."
  remarks: "Quando um <xref:System.Windows.Automation.CacheRequest>é criado, o <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>identificador é adicionado como uma propriedade padrão para o cache.</xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> </xref:System.Windows.Automation.CacheRequest>       Adicionando uma propriedade que já está na solicitação de cache não tem nenhum efeito."
  example:
  - "The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a property to be cached.  \n  \n [!code-vb[UIAClient_snip#202](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#202)]\n [!code-cs[UIAClient_snip#202](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#202)]"
  syntax:
    content: public void Add (System.Windows.Automation.AutomationProperty property);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "Um identificador que especifica um valor de propriedade em cache."
  overload: System.Windows.Automation.CacheRequest.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> está ativa."
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode
  id: AutomationElementMode
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
  fullName: System.Windows.Automation.CacheRequest.AutomationElementMode
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Obtém ou define um valor que especifica se os elementos retornados devem conter referências completas para subjacente [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)], ou apenas informações em cache."
  remarks: "<xref:System.Windows.Automation.AutomationElementMode>é o valor padrão e especifica que os elementos retornados contém uma referência completa a subjacente [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)].</xref:System.Windows.Automation.AutomationElementMode> <xref:System.Windows.Automation.AutomationElementMode>Especifica que os elementos retornados não tem nenhuma referência de subjacente [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]e contêm somente informações armazenadas em cache.</xref:System.Windows.Automation.AutomationElementMode>       Algumas operações nos elementos, incluindo <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, e <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, exigem uma referência completa; tentando executar estas em um elemento que não possui nenhum resulta em um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Windows.Automation.AutomationElement.SetFocus%2A> </xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> </xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>       Usando <xref:System.Windows.Automation.AutomationElementMode>pode ser mais eficiente quando são necessárias apenas as propriedades, pois evita a sobrecarga envolvida na configuração de referências completas.</xref:System.Windows.Automation.AutomationElementMode>"
  example:
  - "In the following example, AutomationElementMode is set to <xref:System.Windows.Automation.AutomationElementMode>, with the result that only cached properties and patterns are available for the retrieved object.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }
    return:
      type: System.Windows.Automation.AutomationElementMode
      description: "<xref href=&quot;System.Windows.Automation.AutomationElementMode&quot;></xref>Se os elementos retornados tiverem uma referência completa a subjacente [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]; caso contrário, <xref href=&quot;System.Windows.Automation.AutomationElementMode&quot;> </xref>."
  overload: System.Windows.Automation.CacheRequest.AutomationElementMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Clone
  id: Clone
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Clone()
  nameWithType: CacheRequest.Clone()
  fullName: System.Windows.Automation.CacheRequest.Clone()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Cria uma cópia deste <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>."
  syntax:
    content: public System.Windows.Automation.CacheRequest Clone ();
    parameters: []
    return:
      type: System.Windows.Automation.CacheRequest
      description: "Uma cópia modificável do objeto atual."
  overload: System.Windows.Automation.CacheRequest.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Current
  id: Current
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Current
  nameWithType: CacheRequest.Current
  fullName: System.Windows.Automation.CacheRequest.Current
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Obtém o <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> que está ativa no thread atual."
  syntax:
    content: public static System.Windows.Automation.CacheRequest Current { get; }
    return:
      type: System.Windows.Automation.CacheRequest
      description: "Ativo <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>."
  overload: System.Windows.Automation.CacheRequest.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Pop
  id: Pop
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Pop()
  nameWithType: CacheRequest.Pop()
  fullName: System.Windows.Automation.CacheRequest.Pop()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Remove o ativo <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> da pilha interna para o thread atual."
  remarks: "Somente a solicitação ativa no momento pode ser removida usando o método Pop. Tentativa de remover uma solicitação que é não os resultados de um atual em uma exceção.       A menos que o aninhamento de solicitações de cache, é preferível usar <xref:System.Windows.Automation.CacheRequest.Activate%2A>para fazer a solicitação na pilha.</xref:System.Windows.Automation.CacheRequest.Activate%2A> O motivo é que você pode usar <xref:System.Windows.Automation.CacheRequest.Activate%2A>dentro de um `using` bloco (`Using` em [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]), garantindo que a solicitação é retirada da pilha mesmo se uma exceção é gerada.</xref:System.Windows.Automation.CacheRequest.Activate%2A>"
  example:
  - "The following example shows how to deactivate a <xref:System.Windows.Automation.CacheRequest> by using Pop.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public void Pop ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.Pop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa de remover uma solicitação de cache que não era o último deles inserido na pilha."
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Push
  id: Push
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Push()
  nameWithType: CacheRequest.Push()
  fullName: System.Windows.Automation.CacheRequest.Push()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Locais de <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> na pilha de estado interno, tornando-a solicitação ativa no thread atual."
  remarks: "Vários <xref:System.Windows.Automation.CacheRequest>objetos podem ser colocados na pilha do estado.</xref:System.Windows.Automation.CacheRequest> Solicitações de cache devem ser removidas da pilha na ordem em que elas foram enviadas. Caso contrário, um <xref:System.InvalidOperationException>exceção será gerada.</xref:System.InvalidOperationException>       A menos que o aninhamento de solicitações de cache, é preferível usar <xref:System.Windows.Automation.CacheRequest.Activate%2A>para fazer a solicitação na pilha.</xref:System.Windows.Automation.CacheRequest.Activate%2A> O motivo é que você pode usar <xref:System.Windows.Automation.CacheRequest.Activate%2A>dentro de um `using` bloco (`Using` em [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]), garantindo que a solicitação é retirada da pilha mesmo se uma exceção é gerada.</xref:System.Windows.Automation.CacheRequest.Activate%2A>"
  example:
  - "The following example shows how to activate a <xref:System.Windows.Automation.CacheRequest> by using Push.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public void Push ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.Push*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.TreeFilter
  id: TreeFilter
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
  fullName: System.Windows.Automation.CacheRequest.TreeFilter
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Obtém ou define um valor que especifica o modo de exibição do [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] árvore do elemento a ser usado ao armazenar em cache."
  remarks: "Para obter informações adicionais sobre modos de exibição da [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] árvore de elementos, consulte [visão geral de árvore de automação de interface do usuário](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "In the following example, TreeFilter is set to <xref:System.Windows.Automation.Automation.RawViewCondition> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public System.Windows.Automation.Condition TreeFilter { get; set; }
    return:
      type: System.Windows.Automation.Condition
      description: "O modo de exibição do [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] árvore do elemento. A exibição padrão é <xref href=&quot;System.Windows.Automation.Automation.ControlViewCondition&quot;> </xref>."
  overload: System.Windows.Automation.CacheRequest.TreeFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.TreeScope
  id: TreeScope
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
  fullName: System.Windows.Automation.CacheRequest.TreeScope
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Obtém ou define um valor que especifica se o cache é feito apenas para a raiz da subárvore ou também para seus filhos ou descendentes."
  remarks: "O escopo de armazenamento em cache é em relação a um ou mais objetos que estão sendo buscado, não em relação ao objeto no qual <xref:System.Windows.Automation.AutomationElement.FindFirst%2A>ou <xref:System.Windows.Automation.AutomationElement.FindAll%2A>é chamado.</xref:System.Windows.Automation.AutomationElement.FindAll%2A> </xref:System.Windows.Automation.AutomationElement.FindFirst%2A> Consulte o exemplo."
  example:
  - "In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and TreeScope is <xref:System.Windows.Automation.TreeScope>. The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> of the list box.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.TreeScope TreeScope { get; set; }
    return:
      type: System.Windows.Automation.TreeScope
      description: "One or more of <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, or <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>. O valor padrão é <xref href=&quot;System.Windows.Automation.TreeScope&quot;> </xref>."
  overload: System.Windows.Automation.CacheRequest.TreeScope*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Foi feita uma tentativa de definir a propriedade <xref href=&quot;System.Windows.Automation.TreeScope&quot;> </xref> ou <xref href=&quot;System.Windows.Automation.TreeScope&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Automation.CacheRequest.#ctor
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: CacheRequest()
  nameWithType: CacheRequest.CacheRequest()
  fullName: System.Windows.Automation.CacheRequest.CacheRequest()
- uid: System.Windows.Automation.CacheRequest.Activate
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Activate()
  nameWithType: CacheRequest.Activate()
  fullName: System.Windows.Automation.CacheRequest.Activate()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add(AutomationPattern)
  nameWithType: CacheRequest.Add(AutomationPattern)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationPattern)
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add(AutomationProperty)
  nameWithType: CacheRequest.Add(AutomationProperty)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationProperty)
- uid: System.Windows.Automation.AutomationProperty
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
  fullName: System.Windows.Automation.CacheRequest.AutomationElementMode
- uid: System.Windows.Automation.AutomationElementMode
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElementMode
  nameWithType: AutomationElementMode
  fullName: System.Windows.Automation.AutomationElementMode
- uid: System.Windows.Automation.CacheRequest.Clone
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Clone()
  nameWithType: CacheRequest.Clone()
  fullName: System.Windows.Automation.CacheRequest.Clone()
- uid: System.Windows.Automation.CacheRequest
  parent: System.Windows.Automation
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
- uid: System.Windows.Automation.CacheRequest.Current
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Current
  nameWithType: CacheRequest.Current
  fullName: System.Windows.Automation.CacheRequest.Current
- uid: System.Windows.Automation.CacheRequest.Pop
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Pop()
  nameWithType: CacheRequest.Pop()
  fullName: System.Windows.Automation.CacheRequest.Pop()
- uid: System.Windows.Automation.CacheRequest.Push
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Push()
  nameWithType: CacheRequest.Push()
  fullName: System.Windows.Automation.CacheRequest.Push()
- uid: System.Windows.Automation.CacheRequest.TreeFilter
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
  fullName: System.Windows.Automation.CacheRequest.TreeFilter
- uid: System.Windows.Automation.Condition
  parent: System.Windows.Automation
  isExternal: false
  name: Condition
  nameWithType: Condition
  fullName: System.Windows.Automation.Condition
- uid: System.Windows.Automation.CacheRequest.TreeScope
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
  fullName: System.Windows.Automation.CacheRequest.TreeScope
- uid: System.Windows.Automation.TreeScope
  parent: System.Windows.Automation
  isExternal: false
  name: TreeScope
  nameWithType: TreeScope
  fullName: System.Windows.Automation.TreeScope
- uid: System.Windows.Automation.CacheRequest.#ctor*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest.CacheRequest
- uid: System.Windows.Automation.CacheRequest.Activate*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Activate
  nameWithType: CacheRequest.Activate
- uid: System.Windows.Automation.CacheRequest.Add*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add
  nameWithType: CacheRequest.Add
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
- uid: System.Windows.Automation.CacheRequest.Clone*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Clone
  nameWithType: CacheRequest.Clone
- uid: System.Windows.Automation.CacheRequest.Current*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Current
  nameWithType: CacheRequest.Current
- uid: System.Windows.Automation.CacheRequest.Pop*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Pop
  nameWithType: CacheRequest.Pop
- uid: System.Windows.Automation.CacheRequest.Push*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Push
  nameWithType: CacheRequest.Push
- uid: System.Windows.Automation.CacheRequest.TreeFilter*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
- uid: System.Windows.Automation.CacheRequest.TreeScope*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
