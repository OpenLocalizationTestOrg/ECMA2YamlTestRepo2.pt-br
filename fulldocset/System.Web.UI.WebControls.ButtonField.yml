### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ButtonField
  id: ButtonField
  children:
  - System.Web.UI.WebControls.ButtonField.#ctor
  - System.Web.UI.WebControls.ButtonField.CommandName
  - System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.ButtonField.CreateField
  - System.Web.UI.WebControls.ButtonField.DataTextField
  - System.Web.UI.WebControls.ButtonField.DataTextFormatString
  - System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  - System.Web.UI.WebControls.ButtonField.ImageUrl
  - System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.ButtonField.Text
  - System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  langs:
  - csharp
  name: ButtonField
  nameWithType: ButtonField
  fullName: System.Web.UI.WebControls.ButtonField
  type: Class
  summary: "Representa um campo que é exibido como um botão em um controle associado a dados."
  remarks: "A classe ButtonField é usada por controles de associação de dados (como <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>) para exibir um botão para cada registro que é exibido.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> O objeto ButtonField é exibido diferente dependendo do controle associado a dados no qual ele é usado. Por exemplo, o <xref:System.Web.UI.WebControls.GridView>controle exibe um objeto ButtonField como uma coluna, enquanto o <xref:System.Web.UI.WebControls.DetailsView>controle exibe como uma linha.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Clicar em um botão em um campo de botão gera o evento de comando do controle de associação de dados pai. Você pode fornecer uma rotina personalizada para executar quando um botão de comando é clicado, fornecendo um manipulador de eventos para o evento de comando.      > [!NOTE] > O <xref:System.Web.UI.WebControls.GridView>controlar gera o <xref:System.Web.UI.WebControls.GridView.RowCommand>evento, enquanto o <xref:System.Web.UI.WebControls.DetailsView>controlar gera o <xref:System.Web.UI.WebControls.DetailsView.ItemCommand>evento.</xref:System.Web.UI.WebControls.DetailsView.ItemCommand> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView.RowCommand> </xref:System.Web.UI.WebControls.GridView>       Para determinar o índice do registro que gera o evento de comando, use o <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>propriedade do argumento do evento que é passado para o evento de comando para o controle associado a dados.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> A classe ButtonField preenche automaticamente o <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>propriedade com o valor de índice apropriado.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>       Para especificar o tipo de botão para exibir, use o <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>propriedade.</xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Ao exibir um link ou botão de comando, use o <xref:System.Web.UI.WebControls.ButtonField.Text%2A>propriedade para especificar a legenda a ser exibida nos botões.</xref:System.Web.UI.WebControls.ButtonField.Text%2A>      > [!NOTE] > Se você definir o <xref:System.Web.UI.WebControls.ButtonField.Text%2A>propriedade, todos os botões em um compartilhamento de ButtonField a mesma legenda.</xref:System.Web.UI.WebControls.ButtonField.Text%2A>       Como alternativa, você pode vincular o objeto ButtonField para um campo em uma fonte de dados. Isso permite que você exibir legendas diferentes para os botões no objeto ButtonField. Os valores que estão no campo especificado são usados para as legendas dos botões de texto. Definir o <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>propriedade para associar um objeto ButtonField a um campo em uma fonte de dados.</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       Ao exibir um botão de imagem, use o <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>propriedade para especificar a imagem a ser exibida para os botões no objeto ButtonField.</xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>      > [!NOTE] > Todos os botões de um objeto ButtonField compartilham a mesma imagem.       Você pode ocultar um objeto ButtonField em um controle associado a dados, definindo o <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>propriedade `false`.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A>       O objeto ButtonField permite que você personalize suas seções de cabeçalho e rodapé. Para exibir uma legenda na seção de cabeçalho ou rodapé de página, defina o <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>ou <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>Propriedades, respectivamente.</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> Em vez de exibir o texto na seção de cabeçalho, você pode exibir uma imagem, definindo o <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>propriedade.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> Para ocultar a seção de cabeçalho em um objeto ButtonField, defina o <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>propriedade `false`.</xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>      > [!NOTE] > Alguns controles associados a dados (como o <xref:System.Web.UI.WebControls.GridView>controle) pode mostrar ou ocultar apenas a seção de cabeçalho inteiro do controle.</xref:System.Web.UI.WebControls.GridView> Esses controles associados a dados não oferecem suporte a <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>propriedade para um campo individual do botão.</xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> Para mostrar ou ocultar a seção de cabeçalho inteiro de um controle associado a dados (se disponível), use o `ShowHeader` propriedade do controle.       Você também pode personalizar a aparência do objeto ButtonField (cor da fonte, cor do plano de fundo e assim por diante), definindo as propriedades de estilo para as diferentes partes do campo. A tabela a seguir lista as propriedades de estilo diferente.      | Propriedade de estilo | As configurações de estilo para |   |--------------------|----------------------------|   | <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>| Os controles de servidor Web filho do ButtonField. |   | <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>| Seção de rodapé o ButtonField. |   | <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>| A seção de cabeçalho do ButtonField. |   | <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>| Os itens de dados em que o ButtonField. |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to use a ButtonField object to display a column of command buttons in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_176_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_176_1.aspx)]"
  syntax:
    content: 'public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  - System.Web.UI.WebControls.ButtonFieldBase
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.ButtonFieldBase.ButtonType
  - System.Web.UI.WebControls.ButtonFieldBase.CausesValidation
  - System.Web.UI.WebControls.ButtonFieldBase.ShowHeader
  - System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ButtonField()
  nameWithType: ButtonField.ButtonField()
  fullName: System.Web.UI.WebControls.ButtonField.ButtonField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> classe."
  remarks: "Use o construtor de ButtonField para inicializar uma nova instância de <xref:System.Web.UI.WebControls.ButtonField>classe.</xref:System.Web.UI.WebControls.ButtonField> Este construtor é comumente usado ao adicionar campos a um controle de associação de dados criado dinamicamente.       Para adicionar um <xref:System.Web.UI.WebControls.ButtonField>dinamicamente o objeto para um controle associado a dados, crie um novo <xref:System.Web.UI.WebControls.ButtonField>do objeto, defina suas propriedades e, em seguida, adicioná-lo à coleção de campo para o controle associado a dados.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> Por exemplo, se você estiver usando o <xref:System.Web.UI.WebControls.GridView>de controle, adicione o <xref:System.Web.UI.WebControls.ButtonField>do objeto para o <xref:System.Web.UI.WebControls.GridView.Columns%2A>coleção.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > Embora você possa adicionar campos dinamicamente a um controle associado a dados, campos devem ser declarados estaticamente, e, em seguida, mostrados ou ocultados, conforme apropriado. Declarar estaticamente todos os campos de reduz o tamanho do estado de exibição para o controle de associação de dados pai."
  example:
  - "The following code example demonstrates how to use the M:System.Web.UI.WebControls.ButtonField.#ctor constructor to add a <xref:System.Web.UI.WebControls.ButtonField> object dynamically to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[ButtonFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public ButtonField ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CommandName
  nameWithType: ButtonField.CommandName
  fullName: System.Web.UI.WebControls.ButtonField.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma cadeia de caracteres que representa a ação a ser executada quando um botão em um <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> objeto é clicado."
  remarks: "Use a propriedade CommandName para associar um nome de comando, como `&quot;Add&quot;` ou `&quot;Remove&quot;`, com os botões de <xref:System.Web.UI.WebControls.ButtonField>objeto.</xref:System.Web.UI.WebControls.ButtonField> Você pode definir a propriedade CommandName para qualquer cadeia de caracteres que identifica a ação a ser executada quando o botão de comando é clicado. Em seguida, você pode determinar o nome do comando em um manipulador de eventos-las programaticamente e executar as ações adequadas.      > [!NOTE] > Todos os botões em uma <xref:System.Web.UI.WebControls.ButtonField>objeto compartilham o mesmo nome de comando.</xref:System.Web.UI.WebControls.ButtonField>       Controles associados a dados reconhecem certos nomes de comando e automaticamente geram e manipulam os eventos adequados para o controle. Os seguintes nomes de comando são reconhecidos:- `&quot;Cancel&quot;`       -    `&quot;Delete&quot;`       -    `&quot;Edit&quot;`       -    `&quot;Insert&quot;`       -    `&quot;New&quot;`       -    `&quot;Page&quot;`       -    `&quot;Select&quot;`       -    `&quot;Sort&quot;`       -    `&quot;Update&quot;` para invocar a paginação, definir o CommandName `&quot;Page&quot;` e <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>de independente <xref:System.Web.UI.WebControls.Button>controle `&quot;First&quot;`, `&quot;Last&quot;`, `&quot;Prev&quot;`, `&quot;Next&quot;`, ou um número de página.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> No entanto, como o <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>para um <xref:System.Web.UI.WebControls.ButtonField>controle sempre é o índice de linha de inteiro, um <xref:System.Web.UI.WebControls.ButtonField>controle não é adequado para invocar a paginação.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Da mesma forma, enquanto você pode chamar a classificação definindo o CommandName `&quot;Sort&quot;`, o <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>propriedade para um <xref:System.Web.UI.WebControls.ButtonField>controle sempre é o índice de linha de número inteiro.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Por esse motivo, um <xref:System.Web.UI.WebControls.ButtonField>controle não é adequado para invocar a classificação.</xref:System.Web.UI.WebControls.ButtonField> Para personalizar comando nomes, como `&quot;Add&quot;` e `&quot;Remove&quot;`, você precisa para escrever o código de evento para verificar o nome do comando e executar alguma ação personalizada. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.DataControlCommands>.</xref:System.Web.UI.WebControls.DataControlCommands>      > [!NOTE] > Nem todos os nomes de comando são reconhecidos por todos os controles de associação de dados. Por exemplo, `&quot;New&quot;` não é reconhecido pelo <xref:System.Web.UI.WebControls.GridView>controle e `&quot;Select&quot;` não é reconhecido pelo <xref:System.Web.UI.WebControls.DetailsView>controle.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       O valor dessa propriedade é armazenado em estado de exibição."
  example:
  - "The following code example demonstrates how to use the CommandName property to specify a command name for the buttons in a <xref:System.Web.UI.WebControls.ButtonField> object of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_922_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_922_1.aspx)]"
  syntax:
    content: public virtual string CommandName { get; set; }
    return:
      type: System.String
      description: "O nome da ação para executar quando um botão de <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> é clicado."
  overload: System.Web.UI.WebControls.ButtonField.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: ButtonField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ButtonField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia as propriedades do atual <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> objeto especificado <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> objeto."
  remarks: "O <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>é um método auxiliar que é usado pelo <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>método para copiar as propriedades do atual <xref:System.Web.UI.WebControls.ButtonFieldBase>-derivados do objeto para o <xref:System.Web.UI.WebControls.DataControlField>objeto criado pelo <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>método.</xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.ButtonFieldBase> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "O <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> para o qual copiar as propriedades do atual <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>."
  overload: System.Web.UI.WebControls.ButtonField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CreateField()
  nameWithType: ButtonField.CreateField()
  fullName: System.Web.UI.WebControls.ButtonField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria e retorna uma nova instância do <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> classe."
  remarks: "O método CreateField é um método auxiliar que é usado pelo <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>método da classe base para criar um vazio <xref:System.Web.UI.WebControls.ButtonField>objeto ao qual copiar as propriedades do atual <xref:System.Web.UI.WebControls.ButtonField>-objeto derivado.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "Uma nova instância do <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> classe."
  overload: System.Web.UI.WebControls.ButtonField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.DataTextField
  id: DataTextField
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: DataTextField
  nameWithType: ButtonField.DataTextField
  fullName: System.Web.UI.WebControls.ButtonField.DataTextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do campo de dados para o qual o valor é associado ao <xref:System.Web.UI.WebControls.Button.Text*>propriedade o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle que é processado pelo <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> objeto.</xref:System.Web.UI.WebControls.Button.Text*>"
  remarks: "Quando o <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>propriedade de um <xref:System.Web.UI.WebControls.ButtonField>objeto é definido como o <xref:System.Web.UI.WebControls.ButtonType>ou <xref:System.Web.UI.WebControls.ButtonType>valor, use a propriedade DataTextField para especificar o nome do campo para associar ao <xref:System.Web.UI.WebControls.ButtonField>objeto.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Os valores do campo são exibidos como o texto para os botões de <xref:System.Web.UI.WebControls.ButtonField>objeto.</xref:System.Web.UI.WebControls.ButtonField> Opcionalmente, você pode formatar o texto exibido, definindo a <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>propriedade.</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>       Em vez de usar a propriedade DataTextField para associar um <xref:System.Web.UI.WebControls.ButtonField>do objeto para um campo de uma fonte de dados, você pode usar o <xref:System.Web.UI.WebControls.ButtonField.Text%2A>propriedade para exibir texto estático para o texto dos botões de <xref:System.Web.UI.WebControls.ButtonField>objeto.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField.Text%2A> </xref:System.Web.UI.WebControls.ButtonField> Quando o <xref:System.Web.UI.WebControls.ButtonField.Text%2A>propriedade é usada, cada botão compartilha a mesma legenda.</xref:System.Web.UI.WebControls.ButtonField.Text%2A>      > [!NOTE] > Se o DataTextField e <xref:System.Web.UI.WebControls.ButtonField.Text%2A>propriedades são definidas, a propriedade DataTextField terá precedência.</xref:System.Web.UI.WebControls.ButtonField.Text%2A>       O valor dessa propriedade é armazenado em estado de exibição."
  example:
  - "The following code example demonstrates how to use the DataTextField property to specify which field to display in a <xref:System.Web.UI.WebControls.ButtonField> column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[ButtonFieldDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1139_1.aspx)]\n [!code-vb[ButtonFieldDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1139_1.aspx)]"
  syntax:
    content: public virtual string DataTextField { get; set; }
    return:
      type: System.String
      description: "O nome do campo para associar o <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica que a propriedade DataTextField não está definida."
  overload: System.Web.UI.WebControls.ButtonField.DataTextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  id: DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia de caracteres que especifica o formato de exibição para o valor do campo."
  remarks: "Use a propriedade DataTextFormatString para especificar um formato de exibição personalizado para os valores que são exibidos no <xref:System.Web.UI.WebControls.ButtonField>objeto.</xref:System.Web.UI.WebControls.ButtonField> Se a propriedade DataTextFormatString não está definida, o valor do campo será exibido sem qualquer formatação especial.      > [!NOTE] > A cadeia de caracteres de formato é aplicada apenas quando o <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>está definida.</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       A cadeia de caracteres de formato pode ser qualquer cadeia de caracteres literal e geralmente inclui um espaço reservado para o valor do campo. Por exemplo, na cadeia de formato `&quot;Item Value: {0}&quot;`, o `{0}` espaço reservado é substituído com o valor do campo quando ele for exibido no <xref:System.Web.UI.WebControls.ButtonField>objeto.</xref:System.Web.UI.WebControls.ButtonField> O restante da cadeia de caracteres de formato é exibido como texto literal.      > [!NOTE] > Se a cadeia de caracteres de formato não incluir um espaço reservado, o valor do campo da fonte de dados não está incluído no texto da exibição final.       O espaço reservado consiste em duas partes, separadas por dois-pontos e encapsulado entre chaves, na forma { `A` : `Bxx` }. O valor antes de dois-pontos (`A` no exemplo geral) Especifica o índice para o valor do campo em uma lista com base em zero de parâmetros.      > [!NOTE] > Isso `A` parâmetro faz parte da sintaxe de formatação. Porque não há valor de apenas um campo em cada célula, esse valor só pode ser definido como 0.       Os dois-pontos e os valores após os dois-pontos são opcionais. O caractere após os dois-pontos (`B` no exemplo geral) Especifica o formato no qual exibir o valor. A tabela a seguir lista os formatos comuns.      | Formato de caractere | Descrição |   |----------------------|-----------------|   | `C`| Exibe valores numéricos em formato de moeda. |   | `D`| Exibe valores numéricos em formato decimal. |   | `E`| Exibe valores numéricos em formato científico de (exponencial). |   | `F`| Exibe valores numéricos em um formato fixo. |   | `G`| Exibe valores numéricos em formato geral. |   | `N`| Exibe valores numéricos em formato de número. |   | `X`| Exibe valores numéricos em formato hexadecimal. |      > [!NOTE] > Exceto `X`, os caracteres de formato não diferenciam maiusculas de minúsculas. O `X` caracteres de formato exibe os caracteres hexadecimais que é especificado.       O valor após o caractere de formato (`xx` no exemplo geral) Especifica o número de dígitos significativos ou casas decimais a serem exibidas. Por exemplo, a cadeia de caracteres de formato `&quot;{0:F2}&quot;` exibe um número de ponto fixo com duas casas decimais.       Para obter mais informações sobre cadeias de caracteres de formatação, consulte [tipos de formatação](~/add/includes/ajax-current-ext-md.md).       O valor dessa propriedade é armazenado em estado de exibição."
  example:
  - "The following code example demonstrates how to use the DataTextFormatString property to specify a custom display format for the values of a field.  \n  \n [!code-cs[ButtonFieldDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_654_1.aspx)]\n [!code-vb[ButtonFieldDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_654_1.aspx)]"
  syntax:
    content: public virtual string DataTextFormatString { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres de formato que especifica o formato de exibição para o valor do campo. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica que nenhuma formatação especial é aplicado para o valor do campo."
  overload: System.Web.UI.WebControls.ButtonField.DataTextFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  id: FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: FormatDataTextValue(Object)
  nameWithType: ButtonField.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Formata o valor do campo especificado para uma célula de <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> objeto."
  remarks: "O método FormatDataTextValue é um método auxiliar que é usado para transformar um valor de campo para o formato especificado pelo <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>propriedade.</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>"
  syntax:
    content: protected virtual string FormatDataTextValue (object dataTextValue);
    parameters:
    - id: dataTextValue
      type: System.Object
      description: "O valor do campo para formatar."
    return:
      type: System.String
      description: "O valor do campo convertido para o formato especificado pelo <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString*>propriedade.</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString*>"
  overload: System.Web.UI.WebControls.ButtonField.FormatDataTextValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
  fullName: System.Web.UI.WebControls.ButtonField.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a imagem a ser exibida para cada botão de <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> objeto."
  remarks: "Quando o <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>propriedade de um <xref:System.Web.UI.WebControls.ButtonField>objeto é definido como o <xref:System.Web.UI.WebControls.ButtonType>valor, use a propriedade ImageUrl para especificar a imagem a ser exibida para cada botão.</xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Essa imagem pode ser em qualquer formato de arquivo (. jpg,. gif,. bmp e assim por diante), desde que o navegador do cliente oferece suporte a esse formato.       O valor dessa propriedade é armazenado em estado de exibição."
  example:
  - "The following code example demonstrates how to use the ImageUrl property to specify an image to display for each button in the <xref:System.Web.UI.WebControls.ButtonField> object. For this code example to display, you must provide your own image.  \n  \n [!code-vb[ButtonFieldImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_99_1.aspx)]\n [!code-cs[ButtonFieldImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_99_1.aspx)]"
  syntax:
    content: public virtual string ImageUrl { get; set; }
    return:
      type: System.String
      description: "A imagem a ser exibida para cada botão de <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica que a propriedade ImageUrl não está definida."
  overload: System.Web.UI.WebControls.ButtonField.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: ButtonField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ButtonField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa o atual <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> objeto."
  remarks: "O método Initialize é chamado pelo controle de dados com o qual o <xref:System.Web.UI.WebControls.ButtonField>objeto está associado ao executar a inicialização do objeto básico para instâncias do campo, antes do campo nunca é adicionado a uma coleção de linhas.</xref:System.Web.UI.WebControls.ButtonField> Controles de dados, como <xref:System.Web.UI.WebControls.DetailsView>e <xref:System.Web.UI.WebControls.GridView>, chame o <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>método em seus `CreateChildControls` métodos antes de outros métodos, como `CreateRow`, são chamados para criar linhas específicas com dados.</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       Chame o método Initialize quando você estiver escrevendo um controle associado a dados personalizado que usa <xref:System.Web.UI.WebControls.TableCell>objetos para executar a inicialização básica para um <xref:System.Web.UI.WebControls.ButtonField>objeto.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.TableCell> Implementar esse método se sua <xref:System.Web.UI.WebControls.ButtonField>-tipo derivado requer qualquer inicialização do objeto antes que ela popula <xref:System.Web.UI.WebControls.TableCell>objetos com dados ou controles no <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A>método.</xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.ButtonField>"
  syntax:
    content: public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);
    parameters:
    - id: sortingEnabled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para habilitar a classificação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: control
      type: System.Web.UI.Control
      description: "O controle de dados que possui o <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, que indica que o controle não é necessário associar novamente os dados."
  overload: System.Web.UI.WebControls.ButtonField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa especificado <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> objeto para o estado de linha especificado."
  remarks: "O método InitializeCell cria o tipo de botão que é especificado pelo <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>propriedade e adiciona-o para o <xref:System.Web.UI.Control.Controls%2A>coleção do <xref:System.Web.UI.WebControls.DataControlFieldCell>objeto.</xref:System.Web.UI.WebControls.DataControlFieldCell> </xref:System.Web.UI.Control.Controls%2A> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> O <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>propriedade o <xref:System.Web.UI.WebControls.Button>controle é definido como `rowIndex`.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "O <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> ao inicializar."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "Um <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> valor que indica o tipo de linha (cabeçalho, rodapé ou dados)."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> valores."
    - id: rowIndex
      type: System.Int32
      description: "Índice da linha de base zero."
  overload: System.Web.UI.WebControls.ButtonField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.Text
  id: Text
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: Text
  nameWithType: ButtonField.Text
  fullName: System.Web.UI.WebControls.ButtonField.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a legenda estática que é exibida para cada botão de <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> objeto."
  remarks: "Quando a <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>propriedade de um <xref:System.Web.UI.WebControls.ButtonField>objeto é definido como o <xref:System.Web.UI.WebControls.ButtonType> <xref:System.Web.UI.WebControls.ButtonType>valor, use a propriedade de texto para exibir texto estático para a legenda dos botões <xref:System.Web.UI.WebControls.ButtonField>.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonType> ou</xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Cada botão compartilha a mesma legenda.       Em vez de usar a propriedade de texto para exibir texto estático em um <xref:System.Web.UI.WebControls.ButtonField>do objeto, você pode usar o <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>propriedade para associar o <xref:System.Web.UI.WebControls.ButtonField>a um campo em uma fonte de dados.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> </xref:System.Web.UI.WebControls.ButtonField> Os valores do campo são exibidos como a legenda dos botões.      > [!NOTE] > Se o <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>e propriedades de texto são definidas, o <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>propriedade prevalece.</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> </xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       O valor dessa propriedade é armazenado em estado de exibição.       O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption to display for each button in a <xref:System.Web.UI.WebControls.ButtonField> object.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_489_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_489_1.aspx)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "A legenda exibida para cada botão de <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ButtonField.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: ButtonField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se os controles que estão contidos em um <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> retornos de chamada do suporte do objeto."
  remarks: "O ValidateSupportsCallback é um método auxiliar que é usado para determinar se os controles que estão contidos em um <xref:System.Web.UI.WebControls.ButtonField>retornos de chamada do suporte do objeto.</xref:System.Web.UI.WebControls.ButtonField> Esse método é implementado como um método vazio (um método que não contém nenhum código) para indicar que os retornos de chamada são suportados.      > [!NOTE] > ValidateSupportsCallback o método é usado principalmente por desenvolvedores de controle."
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.ButtonFieldBase
  isExternal: false
  name: System.Web.UI.WebControls.ButtonFieldBase
- uid: System.Web.UI.WebControls.ButtonField.#ctor
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ButtonField()
  nameWithType: ButtonField.ButtonField()
  fullName: System.Web.UI.WebControls.ButtonField.ButtonField()
- uid: System.Web.UI.WebControls.ButtonField.CommandName
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CommandName
  nameWithType: ButtonField.CommandName
  fullName: System.Web.UI.WebControls.ButtonField.CommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: ButtonField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ButtonField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.ButtonField.CreateField
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CreateField()
  nameWithType: ButtonField.CreateField()
  fullName: System.Web.UI.WebControls.ButtonField.CreateField()
- uid: System.Web.UI.WebControls.ButtonField.DataTextField
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextField
  nameWithType: ButtonField.DataTextField
  fullName: System.Web.UI.WebControls.ButtonField.DataTextField
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonField.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: FormatDataTextValue(Object)
  nameWithType: ButtonField.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
  fullName: System.Web.UI.WebControls.ButtonField.ImageUrl
- uid: System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: ButtonField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ButtonField.Initialize(Boolean,Control)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ButtonField.Text
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Text
  nameWithType: ButtonField.Text
  fullName: System.Web.UI.WebControls.ButtonField.Text
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: ButtonField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.ButtonField.#ctor*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ButtonField
  nameWithType: ButtonField.ButtonField
- uid: System.Web.UI.WebControls.ButtonField.CommandName*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CommandName
  nameWithType: ButtonField.CommandName
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CopyProperties
  nameWithType: ButtonField.CopyProperties
- uid: System.Web.UI.WebControls.ButtonField.CreateField*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CreateField
  nameWithType: ButtonField.CreateField
- uid: System.Web.UI.WebControls.ButtonField.DataTextField*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextField
  nameWithType: ButtonField.DataTextField
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: FormatDataTextValue
  nameWithType: ButtonField.FormatDataTextValue
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
- uid: System.Web.UI.WebControls.ButtonField.Initialize*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Initialize
  nameWithType: ButtonField.Initialize
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: InitializeCell
  nameWithType: ButtonField.InitializeCell
- uid: System.Web.UI.WebControls.ButtonField.Text*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Text
  nameWithType: ButtonField.Text
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: ButtonField.ValidateSupportsCallback
