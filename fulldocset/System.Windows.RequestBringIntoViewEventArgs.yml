### YamlMime:ManagedReference
items:
- uid: System.Windows.RequestBringIntoViewEventArgs
  id: RequestBringIntoViewEventArgs
  children:
  - System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.RequestBringIntoViewEventArgs.TargetObject
  - System.Windows.RequestBringIntoViewEventArgs.TargetRect
  langs:
  - csharp
  name: RequestBringIntoViewEventArgs
  nameWithType: RequestBringIntoViewEventArgs
  fullName: System.Windows.RequestBringIntoViewEventArgs
  type: Class
  summary: "Fornece dados para o <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> eventos roteados."
  remarks: "O <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>é gerado por elementos ao chamar <xref:System.Windows.FrameworkElement.BringIntoView%2A>desse elemento.</xref:System.Windows.FrameworkElement.BringIntoView%2A> </xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> Geralmente, esse evento roteado não é tratado pela origem. Classes intermediárias que não implementam roláveis regiões ou conceitos semelhantes que corta o conteúdo não devem manipular o evento.  O evento deve ter permissão para bolhas para elementos pai que implementam uma região de rolagem ou especifiquem <xref:System.Windows.UIElement.ClipToBounds%2A> `false`.</xref:System.Windows.UIElement.ClipToBounds%2A> Esses elementos pai normalmente fornecem manipulação de classe para o <xref:System.Windows.FrameworkElement.RequestBringIntoView>evento, que é onde a lógica de processamento necessário ocorre sempre que um determinado elemento solicita que ele se tornar visíveis dentro da região de recorte.</xref:System.Windows.FrameworkElement.RequestBringIntoView>       Elementos de conteúdo podem fazer com que o evento a ser gerado por seus hosts de conteúdo (chamando <xref:System.Windows.FrameworkContentElement.BringIntoView%2A>e gerando <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>do host de conteúdo).</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.BringIntoView%2A> Da mesma forma, você pode solicitar os elementos de árvore lógica para ser colocado em modo de exibição com o método auxiliar <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.</xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>       Um que <xref:System.Windows.Controls.ListBox>implementa um método relacionado, mas diferente <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</xref:System.Windows.Controls.ListBox.ScrollIntoView%2A> </xref:System.Windows.Controls.ListBox>"
  syntax:
    content: 'public class RequestBringIntoViewEventArgs : System.Windows.RoutedEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Invoca manipuladores de eventos de uma maneira de um tipo específico, que pode aumentar a eficiência do sistema de eventos."
  remarks: "Essa implementação converte o manipulador genérico como um <xref:System.Windows.RequestBringIntoViewEventHandler>e, em seguida, invoca o proprietário.</xref:System.Windows.RequestBringIntoViewEventHandler> Para obter detalhes sobre esse padrão de implementação e os motivos para ele, consulte <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>e [visão geral sobre eventos roteados](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>"
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "O manipulador genérico para chamar em uma forma de um tipo específico."
    - id: genericTarget
      type: System.Object
      description: "O destino para chamar o manipulador no."
  overload: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  id: TargetObject
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém o objeto que deve ficar visível em resposta ao evento."
  remarks: "Esse objeto normalmente é o mesmo objeto, como retornado por <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>.</xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.DependencyObject TargetObject { get; }
    return:
      type: System.Windows.DependencyObject
      description: "O objeto que chamou <xref:System.Windows.FrameworkElement.BringIntoView*>.</xref:System.Windows.FrameworkElement.BringIntoView*>"
  overload: System.Windows.RequestBringIntoViewEventArgs.TargetObject*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  id: TargetRect
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém a região retangular no espaço de coordenadas do objeto que deve ficar visível."
  remarks: "Se a assinatura de <xref:System.Windows.FrameworkElement.BringIntoView%2A>que foi chamado gerar o evento não especificou um retângulo de destino, essa propriedade pode ser o <xref:System.Windows.Rect.Empty%2A>valor o <xref:System.Windows.Rect>estrutura.</xref:System.Windows.Rect> </xref:System.Windows.Rect.Empty%2A> </xref:System.Windows.FrameworkElement.BringIntoView%2A>"
  syntax:
    content: public System.Windows.Rect TargetRect { get; }
    return:
      type: System.Windows.Rect
      description: "O espaço retangular solicitado."
  overload: System.Windows.RequestBringIntoViewEventArgs.TargetRect*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.RoutedEventArgs
  isExternal: false
  name: System.Windows.RoutedEventArgs
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetObject
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetRect
- uid: System.Windows.Rect
  parent: System.Windows
  isExternal: false
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
