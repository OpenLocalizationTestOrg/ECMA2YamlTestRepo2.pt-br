### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ICallbackEventHandler
  id: ICallbackEventHandler
  children:
  - System.Web.UI.ICallbackEventHandler.GetCallbackResult
  - System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  langs:
  - csharp
  name: ICallbackEventHandler
  nameWithType: ICallbackEventHandler
  fullName: System.Web.UI.ICallbackEventHandler
  type: Interface
  summary: "Usado para indicar que um controle pode ser o destino de um evento de retorno de chamada no servidor."
  remarks: "Implemente a interface ICallbackEventHandler para qualquer controle personalizado que precisa receber eventos de retorno de chamada. Para obter mais informações, consulte [implementando retornos de chamada de cliente sem Postbacks](~/add/includes/ajax-current-ext-md.md).       Exemplos de controles que implementam a interface ICallbackEventHandler o <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.TreeView>controles.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Quando um evento de retorno de chamada tem como alvo um controle que implementa a interface ICallbackEventHandler, o <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>método é chamado para manipular o evento, passando o argumento do evento como um parâmetro e o <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>retorna o resultado da chamada de retorno.</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> </xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>       Controles que recuperam dados de um controle de fonte de dados durante o retorno de chamada podem fazer isso forma síncrona ou assíncrona. Controles do ASP.NET, como <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.TreeView>são implementadas de forma síncrona.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Retornos de chamada síncronos não impedem que o usuário trabalhando no navegador. No modo síncrono, somente um retorno de chamada por vez pode ser executado, com o retorno de chamada última tendo precedência. Quando um controle da Web é implementado para dar suporte ao comportamento assíncrono, vários retornos de chamada podem ser gerados simultaneamente. Para obter detalhes sobre a programação assíncrona, consulte [padrão assíncrono baseado em evento (EAP)](~/add/includes/ajax-current-ext-md.md).       Você pode especificar se os eventos de retorno de chamada de origem da interface do usuário processada por um controle que implementa a interface ICallbackEventHandler são validados. Validação de eventos é uma boa prática de segurança. No entanto, por motivos de desempenho você pode desabilitá-lo. Para controlar se eventos de validação é executado em eventos de retorno de chamada, defina o `enableEventValidation` atributo do [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) diretiva ou o `enableEventValidation` atributo do [páginas Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/4123bb66-3fe4-4d62-b70e-33758656b458) do arquivo Web. config. Se você definir o <xref:System.Web.UI.Page.EnableEventValidation%2A>propriedade no código, defina-o `Page_Init` fase do processamento da página.</xref:System.Web.UI.Page.EnableEventValidation%2A> Para obter mais informações sobre o balanceamento do benefício da segurança do evento de validação com o custo de desempenho, consulte [visão geral de desempenho do ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public interface ICallbackEventHandler
  implements: []
  platform:
  - net462
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.ICallbackEventHandler
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Retorna os resultados de um evento de retorno de chamada que tem como alvo um controle."
  remarks: "Exceções geradas <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>não impedirá que GetCallbackResult que está sendo chamada e retornar um resultado.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Para impedir que GetCallbackResult retornar um resultado, definir um sinalizador quando uma exceção será lançada <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>e retornar uma cadeia de caracteres vazia de GetCallbackResult.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>"
  syntax:
    content: public string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "O resultado de retorno de chamada."
  overload: System.Web.UI.ICallbackEventHandler.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.ICallbackEventHandler
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Processa um evento de retorno de chamada que tem como alvo um controle."
  remarks: "Quando `null` é usado como o parâmetro de argumento de evento, a cadeia de caracteres é serializada como &quot;null&quot; e enviada de volta para o servidor. Como não há nenhuma forma de distinguir entre `null` e &quot;null&quot;, você deve evitar usar `null` parâmetros de argumento com retornos de chamada.       Exceções geradas em RaiseCallbackEvent não impedirá que <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>do que está sendo chamada e retornar um resultado.</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> Para impedir que <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>retornem um resultado, definir um sinalizador quando uma exceção será lançada em RaiseCallbackEvent e retornar uma cadeia de caracteres vazia de <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> </xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>"
  syntax:
    content: public void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Uma cadeia de caracteres que representa um argumento do evento para passar para o manipulador de eventos."
  overload: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: GetCallbackResult()
  nameWithType: ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult*
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: GetCallbackResult
  nameWithType: ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent
