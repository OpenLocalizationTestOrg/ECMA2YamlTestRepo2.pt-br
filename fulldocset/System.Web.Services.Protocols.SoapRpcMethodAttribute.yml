### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute
  id: SoapRpcMethodAttribute
  children:
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor(System.String)
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.Action
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.Use
  langs:
  - csharp
  name: SoapRpcMethodAttribute
  nameWithType: SoapRpcMethodAttribute
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute
  type: Class
  summary: "Especifica que as mensagens SOAP enviadas para e do uso do método <xref uid=&quot;langword_csharp_RPC&quot; name=&quot;RPC&quot; href=&quot;&quot;> </xref> formatação."
  remarks: "Web Services Description Language (WSDL) defines two styles for how an XML Web service method, or operation, can be formatted in a SOAP message: `RPC` and `Document`. `RPC` formatting refers to formatting the operation according to the SOAP specification for using SOAP for RPC; otherwise known as Section 7 of the SOAP specification. `RPC` formatting states that all parameters are encapsulated within a single XML element named after the XML Web service method and that each XML element within that XML element represents a parameter named after the parameter it is representing.  \n  \n SOAP messages formatted in both the `RPC` and `Document` styles can be used to communicate with an XML Web service in a Remote Procedure Call (RPC) manner; however the `Document` style can also easily be used to communicate in a loosely coupled manner. Therefore, `Document` style XML Web services is recommended. For more details, see the `Customizing SOAP Messages` topic.  \n  \n For more details, see [&#91;\\<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients>&#93;](http://msdn.microsoft.com/en-us/1d777288-c0d9-4e6a-b638-f010da031952).  \n  \n This attribute can be applied to an XML Web service method on the server and a proxy class on the client. XML Web service methods that have the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> property set to `true` do not have access to their <xref:System.Web.HttpContext>. As such, accessing any of the properties of the <xref:System.Web.Services.WebService> class return `null`."
  example:
  - "The following code example sets the message style to `Rpc` for the `GetUserName` XML Web service method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class SoapRpcMethodAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: SoapRpcMethodAttribute()
  nameWithType: SoapRpcMethodAttribute.SoapRpcMethodAttribute()
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.SoapRpcMethodAttribute()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Services.Protocols.SoapRpcMethodAttribute&quot;> </xref> classe, definir todas as propriedades para seus valores padrão."
  syntax:
    content: public SoapRpcMethodAttribute ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: SoapRpcMethodAttribute(String)
  nameWithType: SoapRpcMethodAttribute.SoapRpcMethodAttribute(String)
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.SoapRpcMethodAttribute(String)
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Services.Protocols.SoapRpcMethodAttribute&quot;> </xref> classe, definindo o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action*>o valor da propriedade a <code> action </code> parâmetro.</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action*>"
  syntax:
    content: public SoapRpcMethodAttribute (string action);
    parameters:
    - id: action
      type: System.String
      description: "A intenção da solicitação SOAP. Conjuntos de <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action*>propriedade.</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action*>"
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Action
  id: Action
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: Action
  nameWithType: SoapRpcMethodAttribute.Action
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.Action
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o <xref uid=&quot;langword_csharp_SOAPAction&quot; name=&quot;SOAPAction&quot; href=&quot;&quot;> </xref> campo do cabeçalho HTTP da solicitação SOAP."
  remarks: "Normalmente, a propriedade Action é um URI que indica a intenção da solicitação SOAP. No entanto, a especificação de SOAP coloca nenhuma restrição sobre o formato e se o URI se refere a um documento existente. A presença e o conteúdo da propriedade de ação podem ser usados por servidores Web, como firewalls para adequadamente filtrar mensagens de solicitação SOAP em HTTP.       Por padrão, o .NET Framework versão 1.1 publica a propriedade de ação no `soapAction` atributo o `soap:operation` elemento para cada suporte para a associação de SOAP em documentos WSDL gerados para um serviço Web XML. A associação de SOAP com suporte é SOAP 1.1.       Para obter mais informações sobre a especificação de SOAP, consulte o site do W3C (http://www.w3.org/TR/SOAP)."
  example:
  - "The following code example sets the Action property to `http://www.contoso.com/Sample`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Action { get; set; }
    return:
      type: System.String
      description: "O <xref uid=&quot;langword_csharp_SOAPAction&quot; name=&quot;SOAPAction&quot; href=&quot;&quot;> </xref> campo do cabeçalho HTTP da solicitação SOAP. O padrão é http://tempuri.org/MethodName onde MethodName é o nome do método de serviço da Web em XML."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding
  id: Binding
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: Binding
  nameWithType: SoapRpcMethodAttribute.Binding
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define a associação que um método de serviço Web XML implementa uma operação."
  remarks: "Uma associação, conforme definido pelo WSDL Web Services Description Language (), é semelhante a uma interface que define um conjunto concreto de operações. Com relação ao ASP.NET, cada método de serviço Web XML é uma operação em uma associação. Métodos de serviço da Web em XML são membros da associação padrão para um serviço Web XML ou uma associação especificada dentro de uma <xref:System.Web.Services.WebServiceBindingAttribute>aplicada a um serviço Web XML.</xref:System.Web.Services.WebServiceBindingAttribute> Um serviço Web XML pode implementar várias associações, se vários <xref:System.Web.Services.WebServiceBindingAttribute>atributos são aplicados a um serviço Web XML.</xref:System.Web.Services.WebServiceBindingAttribute>       Uma vez um ou mais <xref:System.Web.Services.WebServiceBindingAttribute>atributos são aplicados a um serviço Web XML, um <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>ou <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>pode ser aplicado a métodos do serviço Web XML individuais para indicar a operação de associação implementada por um método específico de serviço da Web em XML.</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.WebServiceBindingAttribute> Defina a <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding%2A>propriedade de <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>ou <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>que para especificar a associação de um método de serviço Web XML implementa um loop for de operação</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding%2A> Apenas um <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>ou <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>pode ser aplicado a um método de serviço da Web em XML.</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> Portanto, um método de serviço Web XML somente pode implementar uma operação para uma associação."
  example:
  - "The following code example demonstrates how to implement multiple bindings within an XML Web service.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Binding { get; set; }
    return:
      type: System.String
      description: "A associação de que um método de serviço Web XML implementa uma operação. O padrão é o nome do serviço da Web em XML com &quot;Soap&quot; acrescentada."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay
  id: OneWay
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: OneWay
  nameWithType: SoapRpcMethodAttribute.OneWay
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define se um cliente de serviço Web XML aguarda o servidor Web concluir o processamento de um método de serviço da Web em XML."
  remarks: "Quando um método de serviço Web XML tem a propriedade OneWay definida como `true`, o cliente do serviço Web XML não precisa esperar o servidor Web concluir o processamento do método de serviço da Web em XML. Assim que o servidor Web tem desserializado a <xref:System.Web.Services.Protocols.SoapServerMessage>, mas antes de invocar o método de serviço da Web em XML, o servidor retornará um código de status HTTP 202.</xref:System.Web.Services.Protocols.SoapServerMessage> Um código de status HTTP 202 indica ao cliente que o servidor Web foi iniciada de processamento da mensagem. Portanto, um cliente de serviço Web XML não recebe nenhuma confirmação de que o servidor da Web processou a mensagem.       Métodos unidirecionais não podem ter um valor de retorno ou qualquer `out` parâmetros.       Se você estiver usando métodos do .NET Framework versão 1.0 XML Web Services que tenham o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>ou <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>atributo aplicado a eles com o <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>propriedade definida como `true`, não permitir o acesso a seus <xref:System.Web.HttpContext>usando estático <xref:System.Web.HttpContext.Current%2A>propriedade.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> Para acessar o <xref:System.Web.HttpContext>, derive a classe que implementa o método de serviço da Web em XML de <xref:System.Web.Services.WebService>e acessar o <xref:System.Web.Services.WebService.Context%2A>propriedade.</xref:System.Web.Services.WebService.Context%2A> </xref:System.Web.Services.WebService> </xref:System.Web.HttpContext>"
  example:
  - "The following code example sets the OneWay property to `true`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool OneWay { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cliente do serviço Web XML não espera para o servidor Web processar completamente um método de serviço Web XML; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName
  id: RequestElementName
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: RequestElementName
  nameWithType: SoapRpcMethodAttribute.RequestElementName
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o elemento XML associado à solicitação SOAP para um método de serviço da Web em XML."
  remarks: "Esta propriedade está obsoleta. Ele não afeta qualquer comportamento."
  example:
  - "The following code example sets the RequestElementName property to `MyCustomRequestElement`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string RequestElementName { get; set; }
    return:
      type: System.String
      description: "O elemento XML associado à solicitação SOAP para um método de serviço da Web em XML. O valor padrão é o nome do método de serviço da Web em XML."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace
  id: RequestNamespace
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: RequestNamespace
  nameWithType: SoapRpcMethodAttribute.RequestNamespace
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o namespace XML associado à solicitação SOAP para um método de serviço da Web em XML."
  remarks: ''
  example:
  - "The following code example sets the RequestNamespace property to `http://www.contoso.com`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string RequestNamespace { get; set; }
    return:
      type: System.String
      description: "O namespace XML associado à solicitação SOAP para um método de serviço da Web em XML. O padrão é http://tempuri.org/."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName
  id: ResponseElementName
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: ResponseElementName
  nameWithType: SoapRpcMethodAttribute.ResponseElementName
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o elemento XML associado à resposta SOAP para um método de serviço da Web em XML."
  remarks: "A propriedade ResponseElementName define o elemento XML usado para encapsular os parâmetros dentro de `Body` elemento da resposta SOAP."
  example:
  - "The following code example sets the ResponseElementName property to `MyCustomResponseElement`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string ResponseElementName { get; set; }
    return:
      type: System.String
      description: "O elemento XML associado à solicitação SOAP para um método de serviço da Web em XML. O valor padrão é `WebServiceNameResult`, onde `WebServiceName` é o nome do método de serviço da Web em XML."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace
  id: ResponseNamespace
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: ResponseNamespace
  nameWithType: SoapRpcMethodAttribute.ResponseNamespace
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o namespace XML associado à resposta SOAP para um método de serviço da Web em XML."
  remarks: "A propriedade ResponseNamespace é usada no esquema XSD para o método de serviço da Web em XML em sua descrição de serviço."
  example:
  - "The following code example sets the ResponseNamespace property to `http://www.contoso.com`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string ResponseNamespace { get; set; }
    return:
      type: System.String
      description: "O namespace XML associado à resposta SOAP para um método de serviço da Web em XML. O padrão é http://tempuri.org/."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Use
  id: Use
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: Use
  nameWithType: SoapRpcMethodAttribute.Use
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.Use
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define a associação usada ao chamar o método."
  remarks: "O valor padrão dessa propriedade é <xref:System.Web.Services.Description.SoapBindingUse>.</xref:System.Web.Services.Description.SoapBindingUse>"
  syntax:
    content: public System.Web.Services.Description.SoapBindingUse Use { get; set; }
    return:
      type: System.Web.Services.Description.SoapBindingUse
      description: "Membro de <xref href=&quot;System.Web.Services.Description.SoapBindingUse&quot;> </xref> enumeração que especifica a associação usada ao chamar o método."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.Use*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: SoapRpcMethodAttribute()
  nameWithType: SoapRpcMethodAttribute.SoapRpcMethodAttribute()
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.SoapRpcMethodAttribute()
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor(System.String)
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: SoapRpcMethodAttribute(String)
  nameWithType: SoapRpcMethodAttribute.SoapRpcMethodAttribute(String)
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.SoapRpcMethodAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Action
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: Action
  nameWithType: SoapRpcMethodAttribute.Action
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.Action
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: Binding
  nameWithType: SoapRpcMethodAttribute.Binding
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: OneWay
  nameWithType: SoapRpcMethodAttribute.OneWay
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: RequestElementName
  nameWithType: SoapRpcMethodAttribute.RequestElementName
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: RequestNamespace
  nameWithType: SoapRpcMethodAttribute.RequestNamespace
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: ResponseElementName
  nameWithType: SoapRpcMethodAttribute.ResponseElementName
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: ResponseNamespace
  nameWithType: SoapRpcMethodAttribute.ResponseNamespace
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Use
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: Use
  nameWithType: SoapRpcMethodAttribute.Use
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.Use
- uid: System.Web.Services.Description.SoapBindingUse
  parent: System.Web.Services.Description
  isExternal: false
  name: SoapBindingUse
  nameWithType: SoapBindingUse
  fullName: System.Web.Services.Description.SoapBindingUse
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: SoapRpcMethodAttribute
  nameWithType: SoapRpcMethodAttribute.SoapRpcMethodAttribute
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Action*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: Action
  nameWithType: SoapRpcMethodAttribute.Action
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: Binding
  nameWithType: SoapRpcMethodAttribute.Binding
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: OneWay
  nameWithType: SoapRpcMethodAttribute.OneWay
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: RequestElementName
  nameWithType: SoapRpcMethodAttribute.RequestElementName
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: RequestNamespace
  nameWithType: SoapRpcMethodAttribute.RequestNamespace
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: ResponseElementName
  nameWithType: SoapRpcMethodAttribute.ResponseElementName
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: ResponseNamespace
  nameWithType: SoapRpcMethodAttribute.ResponseNamespace
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Use*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: Use
  nameWithType: SoapRpcMethodAttribute.Use
