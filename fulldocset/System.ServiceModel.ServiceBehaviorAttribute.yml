### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceBehaviorAttribute
  id: ServiceBehaviorAttribute
  children:
  - System.ServiceModel.ServiceBehaviorAttribute.#ctor
  - System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  - System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  - System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  - System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  - System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  - System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  - System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  - System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  - System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  - System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  - System.ServiceModel.ServiceBehaviorAttribute.Name
  - System.ServiceModel.ServiceBehaviorAttribute.Namespace
  - System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  - System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  - System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  - System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  langs:
  - csharp
  name: ServiceBehaviorAttribute
  nameWithType: ServiceBehaviorAttribute
  fullName: System.ServiceModel.ServiceBehaviorAttribute
  type: Class
  summary: "Especifica o comportamento de execução interna de uma implementação do contrato de serviço."
  remarks: "Aplique o atributo de ServiceBehaviorAttribute uma implementação de serviço para especificar o comportamento de execução de todo o serviço. (Para especificar o comportamento de execução no nível de método, use o <xref:System.ServiceModel.OperationBehaviorAttribute>atributo.)</xref:System.ServiceModel.OperationBehaviorAttribute> Esse atributo pode ser aplicado somente para implementações de serviço. Para obter exemplos de funcionamento, consulte o [exemplos de comportamentos de serviço](http://msdn.microsoft.com/en-us/4e3c6513-a7ff-4b35-8dcf-b5506c6f39a7).       Propriedades da classe ServiceBehaviorAttribute são um [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] recurso de modelo de programação que habilita os recursos comuns que os desenvolvedores precisam implementar. Para obter mais informações sobre esses e outros comportamentos, consulte [especificando comportamento de tempo de execução do serviço](~/add/includes/ajax-current-ext-md.md). Para obter mais informações sobre as propriedades de tempo de execução subjacente que alguns do seguinte conjunto de propriedades, consulte [estendendo ServiceHost e a camada de modelo de serviço](~/add/includes/ajax-current-ext-md.md).      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A>propriedade especifica o tipo de filtro que o sistema do dispatcher usa para localizar o ponto de extremidade que manipula solicitações.</xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>propriedade fecha automaticamente a sessão quando o canal é fechado e o serviço terminou de processar qualquer mensagem restante.</xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>propriedade controla o modelo de threading interno, habilitar o suporte para serviços reentrantes ou multi-threaded.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>propriedade é usada para declarar um nome para uso no `name` atributo o `<service>` elemento em um arquivo de configuração.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>propriedade permite que o tempo de execução para ignorar as informações de serialização adicional que não é necessário para processar a mensagem.</xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>propriedade especifica se as exceções sem tratamento em um serviço são retornadas como falhas de SOAP.</xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> Isso é apenas para fins de depuração.      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>propriedade especifica se e quando os serviços e seus objetos de serviço devem ser reciclado durante uma troca com um cliente.</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>propriedade para limitar o número de itens em um gráfico de objeto que são serializados.</xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>e <xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A>propriedades que controlam o nome e o namespace para a expressão de WSDL do elemento de serviço.</xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A> </xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>propriedade especifica se o objeto de serviço será reciclado quando uma transação seja concluída.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>propriedade especifica se transações pendentes serão concluídas quando a sessão for fechada.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>propriedade especifica o nível de isolamento de transação que tem suporte no contrato.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>propriedade especifica o período de tempo no qual uma transação deve ser concluída ou anular.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>propriedade indica se deseja sincronizar chamadas de método de entrada com o thread de interface do usuário automaticamente.</xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>propriedade informa o sistema se deve confirmar que os cabeçalhos SOAP marcada como `MustUnderstand` tem, na verdade, foi entendida.</xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>       O <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>propriedade também pode ser definida usando um arquivo de configuração do aplicativo.</xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> Para obter detalhes, consulte <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>.</xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>"
  example:
  - "The following code example demonstrates the ServiceBehaviorAttribute properties. The `BehaviorService` class uses the ServiceBehaviorAttribute attribute to indicate that:  \n  \n-   The service object is recycled when the transaction completes.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public sealed class ServiceBehaviorAttribute : Attribute, System.ServiceModel.Description.IServiceBehavior
  inheritance:
  - System.Attribute
  implements:
  - System.ServiceModel.Description.IServiceBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ServiceBehaviorAttribute()
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.ServiceBehaviorAttribute&quot;> </xref> classe."
  remarks: "Os valores padrão para o <xref:System.ServiceModel.ServiceBehaviorAttribute>são:-o que <xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A>é definida como <xref:System.ServiceModel.AddressFilterMode>.</xref:System.ServiceModel.AddressFilterMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A> </xref:System.ServiceModel.ServiceBehaviorAttribute>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>é de propriedade `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>      -O que <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>é definida como <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>propriedade é o nome qualificado de namespace do tipo sem as informações de assembly.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>é de propriedade `false`.</xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>propriedade for definida como 64KB.</xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>propriedade é o nome do tipo de serviço, sem informações de namespace ou assembly.</xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A>propriedade é &quot;http://tempuri.org&quot;.</xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>é de propriedade `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>      -   <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> is `false`.</xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>      -   <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A> is `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>é de propriedade `false`.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>propriedade é <xref:System.Transactions.IsolationLevel>.</xref:System.Transactions.IsolationLevel> </xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>propriedade é definida como <xref:System.TimeSpan.Zero>.</xref:System.TimeSpan.Zero> </xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>é de propriedade `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>"
  syntax:
    content: public ServiceBehaviorAttribute ();
    parameters: []
  overload: System.ServiceModel.ServiceBehaviorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  id: AddressFilterMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o <xref href=&quot;System.ServiceModel.AddressFilterMode&quot;> </xref> que é usado pelo dispatcher para rotear mensagens de entrada para o ponto de extremidade correto."
  syntax:
    content: public System.ServiceModel.AddressFilterMode AddressFilterMode { get; set; }
    return:
      type: System.ServiceModel.AddressFilterMode
      description: "O <xref href=&quot;System.ServiceModel.AddressFilterMode&quot;> </xref> objeto que é usado pelo dispatcher para rotear mensagens de entrada para o ponto de extremidade correto."
  overload: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor não é um do <xref href=&quot;System.ServiceModel.AddressFilterMode&quot;> </xref> valores."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  id: AutomaticSessionShutdown
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Especifica se deve fechar automaticamente uma sessão quando um cliente fechar uma sessão de saída."
  remarks: "Por padrão quando um cliente fecha uma sessão de saída e o serviço terminou de processar qualquer mensagem restante o servidor fecha a sessão. Definindo AutomaticSessionShutdown como `false` impede que o servidor de fechar automaticamente a sessão e habilita o controle personalizado de tempos de vida da sessão."
  syntax:
    content: public bool AutomaticSessionShutdown { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os serviços automaticamente fechar uma sessão quando o cliente fecha uma sessão de saída; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  id: ConcurrencyMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define se um serviço oferece suporte a um thread, vários threads ou chamadas reentrantes."
  remarks: "Essa propriedade indica se uma instância de um serviço pode lidar com um thread ou vários threads executadas simultaneamente e se thread único, se reentrada tem suporte.      > [!NOTE] > O ConcurrencyMode propriedade interage com outras configurações. Por exemplo, se o <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>valor é definido como <xref:System.ServiceModel.InstanceContextMode>o resultado é que o serviço só pode processar uma mensagem por vez, a menos que você também definir o valor de ConcurrencyMode para <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.InstanceContextMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> Essa propriedade também produz o comportamento em combinação com o <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName>propriedade.</xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> Para obter detalhes, consulte [sessões, Instancing e simultaneidade](~/add/includes/ajax-current-ext-md.md).       Definindo <xref:System.ServiceModel.ConcurrencyMode>para <xref:System.ServiceModel.ConcurrencyMode>instrui o sistema para restringir as instâncias do serviço para um thread de execução em um tempo, o que libera você de lidar com problemas de threading.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ConcurrencyMode> Um valor de <xref:System.ServiceModel.ConcurrencyMode>significa que os objetos de serviço pode ser executada por vários threads ao mesmo tempo.</xref:System.ServiceModel.ConcurrencyMode> Nesse caso, você deve garantir acesso thread-safe.       <xref:System.ServiceModel.ConcurrencyMode>também restringe o acesso a um único thread por vez; durante a operação de processamento, nenhuma outra mensagem pode inserir a operação.</xref:System.ServiceModel.ConcurrencyMode> Se durante a operação de uma chamada para outro serviço deixa, a mensagem atual perde o bloqueio na operação, o que é livre para processar outras mensagens. Ao chamar o serviço retorna, o bloqueio é restabelecido e a mensagem original pode continuar o processamento até sua conclusão ou até ocorre outra chamada fora de operação.      > [!IMPORTANT] >, Embora <xref:System.ServiceModel.ConcurrencyMode>restringe as instâncias do serviço para um thread de execução em um momento, você também deve definir <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A>como 1 para não assegurar nenhuma mensagem fora de ordem.</xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> </xref:System.ServiceModel.ConcurrencyMode>   >> Além disso, é sua responsabilidade para deixar o estado do objeto consistente antes de textos explicativos e você deve confirmar que os dados do local de operação são válidos após textos explicativos. Observe que a instância do serviço é desbloqueada apenas por chama outro serviço em um [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] canal. Nesse caso, o serviço chamado pode reinserir o primeiro serviço por meio de um retorno de chamada. Se o primeiro serviço não for reentrante, a sequência de chamadas resulta em um deadlock. Para obter detalhes, consulte <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode>       Durante qualquer chamada de saída de uma operação de processamento, dados locais a operação não podem ser modificados. (Os dados de estado local são garantidos para ser válida quando a mensagem original continua o processamento). Como resultado, antes da chamada de saída, você deve garantir que os dados de local não é válidos para outras chamadas de entrada e revalide dados não local após a chamada de saída retorna.       O pseudocódigo a seguir ilustra o padrão necessário para suporte reentrante bem-sucedido.      ```c#   public void MyMethod()   {     this.SomeNonLocalDataState;     // Here you need to clean nonlocal state for other users     OutboundProxy proxy = new OutboundProxy();     int returnValue = proxy.CallOutOfOperation();     // Ensure that this.SomeNonLocalDataState is valid for continued use.     this.ModifyNonLocalState;     return returnValue;   }      ```Usando o padrão de chamada assíncrona Begin/End para uma chamada de saída quando o ConcurrencyMode <xref:System.ServiceModel.ConcurrencyMode>aciona uma exceção.</xref:System.ServiceModel.ConcurrencyMode> Chamadas assíncronas requerem uma operação na qual o ConcurrencyMode é <xref:System.ServiceModel.ConcurrencyMode>, caso em que você deve tratar problemas de sincronização.</xref:System.ServiceModel.ConcurrencyMode>       Em geral, se uma mensagem chega para uma instância que viola o modo de simultaneidade, a mensagem aguarda até que a instância está disponível ou o tempo limite.       Além disso, se o <xref:System.ServiceModel.ConcurrencyMode>é definido como <xref:System.ServiceModel.ConcurrencyMode>e uma chamada reentrante é bloqueada enquanto aguarda a instância a ser liberado, o sistema detecta o deadlock e lançará uma exceção.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ConcurrencyMode>      > [!NOTE] > Um <xref:System.InvalidOperationException>é gerada em tempo de execução se <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>é `true` quando a propriedade ConcurrencyMode é definida como <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> </xref:System.InvalidOperationException>       Observe que você deve definir explicitamente <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>para `false` se há uma operação com <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName>definido como true e definir ConcurrencyMode para <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> </xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> Caso contrário, uma exceção de validação foi lançada porque o valor padrão de <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>é `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>       Há uma interação entre o ConcurrencyMode e outras propriedades que podem alterar o comportamento de tempo de execução. Para obter uma descrição completa dessas interações, consulte [sessões, Instancing e simultaneidade](../Topic/Sessions,%20Instancing,%20and%20Concurrency.md)."
  example:
  - "The following code example demonstrates the different between using <xref:System.ServiceModel.ConcurrencyMode>, <xref:System.ServiceModel.ConcurrencyMode>, and <xref:System.ServiceModel.ConcurrencyMode>. This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] makes and what that means for your operation code.  \n  \n [!code-cs[C_BestPractices-Concurrency#1](~/add/codesnippet/csharp/reentrantandmultiple/reentrantandmultiple.cs#1)]"
  syntax:
    content: public System.ServiceModel.ConcurrencyMode ConcurrencyMode { get; set; }
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Uma da <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;> </xref> valores; o padrão é <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor não é um do <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;> </xref> valores."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  id: ConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o valor usado para localizar o elemento de serviço em um arquivo de configuração do aplicativo."
  remarks: "Use esse valor para especificar um serviço específico no arquivo de configuração."
  syntax:
    content: public string ConfigurationName { get; set; }
    return:
      type: System.String
      description: "O valor a ser localizado no arquivo de configuração. O valor padrão é o nome totalmente qualificado do tipo sem informações de assembly."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor é nulo."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor é uma cadeia de caracteres vazia."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  id: EnsureOrderedDispatch
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
  fullName: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que indica se o serviço ordenados expedição é garantido."
  syntax:
    content: public bool EnsureOrderedDispatch { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o serviço de pedido de expedição é garantido; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  id: GetWellKnownSingleton
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: GetWellKnownSingleton()
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Recupera um objeto que implementa o serviço e que é usado como a instância singleton do serviço, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhuma instância singleton."
  remarks: "Não`null` valor fornece a instância de serviço para o qual todas as mensagens endereçadas para o serviço serão enviadas."
  syntax:
    content: public object GetWellKnownSingleton ();
    parameters: []
    return:
      type: System.Object
      description: "Uma implementação do serviço. O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  id: IgnoreExtensionDataObject
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que especifica se deve enviar dados de serialização desconhecidos na conexão."
  remarks: "If a type implements the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface, it stores any extra data it doesn’t know about that comes over the wire when deserializing into that type. For example, if a type `Person` has members `FirstName` and `LastName`, and an element called `PhoneNumber` comes in, it is stored. When later serializing the type, `PhoneNumber` will be re-emitted. The problem is that the schema for `Person` exported by that service only has `FirstName` and `LastName`, so [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] generates a schema-invalid instance! If strict schema compliance is important, you can set IgnoreExtensionDataObject to `true` to turn this re-emitting behavior off.  \n  \n Regardless IgnoreExtensionDataObject setting, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] always processes known data (both in and out) and does not throw exceptions when extra data comes in. You can also set this property using the [\\&lt;dataContractSerializer\\&gt;](../Topic/%3CdataContractSerializer%3E.md) element in an application configuration file."
  example:
  - "The following example shows the use of IgnoreExtensionDataObject and an implementation of <xref:System.Runtime.Serialization.IExtensibleDataObject>. In this sample, with IgnoreExtensionDataObject set to `false`, the extra data that the client knows about is round-tripped back to the client.  \n  \n [!code-cs[DCAContainerNoValidation#1](~/add/codesnippet/csharp/dcacontainernovalidation.client/services.cs#1)]"
  syntax:
    content: public bool IgnoreExtensionDataObject { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dados de serialização desconhecidos nunca são enviados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  id: IncludeExceptionDetailInFaults
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que especifica que exceções sem tratamento geral de execução devem ser convertidos em um &lt;xref:System.ServiceModel.FaultException%601?displayProperty=fullName&gt; do tipo &lt;xref:System.ServiceModel.ExceptionDetail?displayProperty=fullName&gt; e enviado como uma mensagem de falha. Defina como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> somente durante o desenvolvimento para solucionar problemas de um serviço."
  remarks: "Set IncludeExceptionDetailInFaults to `true` to enable exception information to flow to clients for debugging purposes. This property requires a binding that supports either request-response or duplex messaging.  \n  \n In all managed applications, processing errors are represented by <xref:System.Exception> objects. In SOAP-based applications such as [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] applications, methods that implement service operations communicate error information using SOAP fault messages. Because [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] applications execute under both types of error systems, any managed exception information that needs to be sent to the client must be converted from exceptions into SOAP faults. For more information, see [Specifying and Handling Faults in Contracts and Services](~/add/includes/ajax-current-ext-md.md).  \n  \n During development, you may want your service to also send other exceptions back to the client to assist you in debugging. This is a development-only feature and should not be employed in deployed services.  \n  \n To facilitate debugging development, set the IncludeExceptionDetailInFaults to `true` either in code or using an application configuration file.  \n  \n When enabled, the service automatically returns safer exception information to the caller. These faults appear to the client as <xref:System.ServiceModel.FaultException%601> objects of type <xref:System.ServiceModel.ExceptionDetail>.  \n  \n> [!IMPORTANT]\n>  Setting IncludeExceptionDetailInFaultsto `true` enables clients to obtain information about internal service method exceptions; it is only recommended as a way of temporarily debugging a service application. In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <xref:System.ServiceModel.FaultException%601> of type <xref:System.ServiceModel.ExceptionDetail>. Clients must expect the possibility of an unknown SOAP fault to obtain the debugging information properly.  \n  \n Setting this property to `true` can also be done using an application configuration file and the [\\&lt;serviceDebug\\&gt;](../Topic/%3CserviceDebug%3E.md) element, as the following code example shows.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  example:
  - "The following code example demonstrates the <xref:System.ServiceModel.ServiceBehaviorAttribute> properties. The `BehaviorService` class uses the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to indicate that:  \n  \n-   Implementation methods are invoked on the UI thread.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool IncludeExceptionDetailInFaults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as exceções não tratadas serão retornados como falhas SOAP. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  id: InstanceContextMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o valor que indica a criação de novos objetos de serviço."
  remarks: "Use o <xref:System.ServiceModel.InstanceContextMode>propriedade para especificar a criação de novos objetos de serviço.</xref:System.ServiceModel.InstanceContextMode> Como o objeto de serviço não estiver diretamente conectado ao canal de comunicação, o tempo de vida dos objetos de serviço é independente do tempo de vida do canal entre um cliente e o aplicativo de serviço. O valor padrão, <xref:System.ServiceModel.InstanceContextMode>, instrui o aplicativo de serviço para criar um novo objeto de serviço quando é estabelecida uma nova sessão de comunicação entre um cliente e o aplicativo de serviço.</xref:System.ServiceModel.InstanceContextMode> Chamadas subsequentes na mesma sessão são manipuladas pelo mesmo objeto.       <xref:System.ServiceModel.InstanceContextMode>indica que cada objeto de serviço lida com solicitações de canal de um cliente.</xref:System.ServiceModel.InstanceContextMode>      > [!NOTE] > InstanceContextMode a propriedade interage com outras configurações. Por exemplo, se o valor de InstanceContextMode é definido como <xref:System.ServiceModel.InstanceContextMode>o resultado é que o serviço pode apenas a mensagem processo um por vez, a menos que você também definir o <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>valor para <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> </xref:System.ServiceModel.InstanceContextMode> Essa propriedade também produz o comportamento em combinação com o <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName>propriedade.</xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> Para obter detalhes, consulte [sessões, Instancing e simultaneidade](~/add/includes/ajax-current-ext-md.md).       Para o comportamento de tempo de vida de singleton (por exemplo, se o aplicativo host chama o <xref:System.ServiceModel.ServiceHost.%23ctor%2A>construtor e passa um objeto a ser usado como o serviço), a classe de serviço deve definir InstanceContextMode `Single`, ou uma exceção será lançada em tempo de execução.</xref:System.ServiceModel.ServiceHost.%23ctor%2A>"
  example:
  - "The following code example demonstrates the <xref:System.ServiceModel.ServiceBehaviorAttribute> properties. The `BehaviorService` class uses the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to indicate that:  \n  \n-   Implementation methods are invoked on the UI thread.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.InstanceContextMode InstanceContextMode { get; set; }
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "Uma da <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref> valores; o valor padrão é <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor não é um do <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref> valores."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  id: MaxItemsInObjectGraph
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
  fullName: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o número máximo de itens permitidos em um objeto serializado."
  remarks: "Use a propriedade definir um limite no número de itens em um gráfico de objeto que são serializados de MaxItemsInObjectGraph. Você também pode definir essa propriedade usando o [ \\&lt; dataContractSerializer\\&gt;](../Topic/%3CdataContractSerializer%3E.md) elemento em um arquivo de configuração do aplicativo."
  syntax:
    content: public int MaxItemsInObjectGraph { get; set; }
    return:
      type: System.Int32
      description: "O número máximo de itens permitidos em um objeto. O padrão é 65536 bytes (64KB)."
  overload: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name
  id: Name
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o valor do atributo name no elemento de serviço em WSDL Web Services Description Language ()."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O valor do atributo name no <xref uid=&quot;langword_csharp_&lt;wsdl:service&gt;&quot; name=&quot;&lt;wsdl:service&gt;&quot; href=&quot;&quot;> </xref> elemento quando exportados."
  overload: System.ServiceModel.ServiceBehaviorAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  id: Namespace
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o valor do namespace de destino para o serviço em WSDL Web Services Description Language ()."
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "O valor da <xref uid=&quot;langword_csharp_targetNamespace&quot; name=&quot;targetNamespace&quot; href=&quot;&quot;> </xref> de atributo para o <xref uid=&quot;langword_csharp_&lt;wsdl:definitions&gt;&quot; name=&quot;&lt;wsdl:definitions&gt;&quot; href=&quot;&quot;> </xref> elemento que contém o <xref uid=&quot;langword_csharp_&lt;wsdl:service&gt;&quot; name=&quot;&lt;wsdl:service&gt;&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.ServiceModel.ServiceBehaviorAttribute.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  id: ReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que especifica se o objeto de serviço é liberado quando a transação atual seja concluída."
  remarks: "Note that you must explicitly set ReleaseServiceInstanceOnTransactionComplete to `false` if there is an operation with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> set to true and you set <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> to <xref:System.ServiceModel.ConcurrencyMode>. Otherwise a validation exception is thrown because the default value of ReleaseServiceInstanceOnTransactionComplete is `true`.  \n  \n In addition, it is important to realize that if the service is created by passing a service object to the [ServiceHost.ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=True&autoUpgrade=False) constructor, the value of this property is treated as if it were `false`."
  example:
  - "The following code example sets the transaction isolation level to <xref:System.Transactions.IsolationLevel>, disables support for concurrent transactions, requires a flowed transaction from the operation call, and commits the transaction on the service automatically if no unhandled exception occurs.  \n  \n [!code-vb[SBA.Transactions#2](~/add/codesnippet/visualbasic/sba.transactions.client/services.vb#2)]\n [!code-cs[SBA.Transactions#2](~/add/codesnippet/csharp/sba.transactions.client/services.cs#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows a configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool ReleaseServiceInstanceOnTransactionComplete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto de serviço deve ser liberados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  id: SetWellKnownSingleton(System.Object)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: SetWellKnownSingleton(Object)
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Especifica um objeto que implementa o serviço e que é usado como a instância singleton do serviço."
  remarks: "Isso fornece a instância de serviço para o qual todas as mensagens endereçadas para o serviço serão enviadas.       Se SetWellKnownSingleton for definido como não`null` valor, em seguida, o <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>deve ser definido como <xref:System.ServiceModel.InstanceContextMode>ou um <xref:System.InvalidOperationException>é gerada.</xref:System.InvalidOperationException> </xref:System.ServiceModel.InstanceContextMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>"
  syntax:
    content: public void SetWellKnownSingleton (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A instância singleton do serviço."
  overload: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor definido for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  id: ShouldSerializeConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeConfigurationName()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retorna um valor que indica se o <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>propriedade foi alterado do valor padrão e deve ser serializada.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>"
  syntax:
    content: public bool ShouldSerializeConfigurationName ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>o valor da propriedade deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  id: ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retorna um valor que indica se o <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>propriedade foi alterado do valor padrão e deve ser serializada.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>"
  syntax:
    content: public bool ShouldSerializeReleaseServiceInstanceOnTransactionComplete ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>o valor da propriedade deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  id: ShouldSerializeTransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retorna um valor que indica se o <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>propriedade foi alterado do valor padrão e deve ser serializada.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>"
  syntax:
    content: public bool ShouldSerializeTransactionAutoCompleteOnSessionClose ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>o valor da propriedade deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  id: ShouldSerializeTransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionIsolationLevel()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retorna um valor que indica se o <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>propriedade foi alterado do valor padrão e deve ser serializada.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>"
  syntax:
    content: public bool ShouldSerializeTransactionIsolationLevel ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>o valor da propriedade deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  id: ShouldSerializeTransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionTimeout()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retorna um valor que indica se o <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>propriedade foi alterado do valor padrão e deve ser serializada.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>"
  syntax:
    content: public bool ShouldSerializeTransactionTimeout ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>o valor da propriedade deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  id: System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Passa os objetos de dados personalizados para as associações que suportam as propriedades de comportamento."
  syntax:
    content: void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "A descrição do serviço."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "O host de serviço."
    - id: endpoints
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "Os pontos de extremidade de serviço."
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "Os objetos de dados necessários por associações para suporte ao comportamento."
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Personaliza o serviço de tempo para oferecer suporte as propriedades de comportamento de execução."
  syntax:
    content: void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "A descrição do serviço."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "O host de serviço."
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Confirma que a descrição do serviço e o host de serviço são capazes de suportar o comportamento."
  syntax:
    content: void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "A descrição do serviço."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "O host de serviço."
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  id: TransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que especifica se as transações pendentes são foi concluída quando a sessão atual for fechada sem erro."
  syntax:
    content: public bool TransactionAutoCompleteOnSessionClose { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as transações pendentes devem ser concluídas quando a sessão atual for fechada sem erro. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  id: TransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Especifica o nível de isolamento de transação para novas transações criadas dentro do serviço e o fluxo de transações de entrada de um cliente."
  remarks: "O nível de isolamento nas quais a execução de transações determina como os dados são tratados quando alterações são feitas em outras transações e quanto tempo a transação deve manter bloqueios para proteger contra essas alterações. Por exemplo, o valor padrão, <xref:System.Transactions.IsolationLevel>, especifica que nenhuma atualização ou inserção pode ocorrer até que a transação seja concluída.</xref:System.Transactions.IsolationLevel>       Essa propriedade também pode ser usada para restringir o isolamento de fluxo de nível de transações de entrada de um cliente."
  example:
  - "The following code example sets the transaction isolation level to <xref:System.Transactions.IsolationLevel>, does not support concurrent transactions, requires a flowed transaction from the method call, and commits the transaction automatically if no unhandled exception occurs.  \n  \n [!code-vb[SBA.Transactions#2](~/add/codesnippet/visualbasic/sba.transactions.client/services.vb#2)]\n [!code-cs[SBA.Transactions#2](~/add/codesnippet/csharp/sba.transactions.client/services.cs#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows a configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }
    return:
      type: System.Transactions.IsolationLevel
      description: "Um <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref> valor que especifica o nível de isolamento da transação. O padrão é <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor não é um do <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref> valores."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  id: TransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o período no qual uma transação deve ser concluída."
  remarks: "Esse valor define a <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=fullName>propriedade.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=fullName> Você também pode definir essa propriedade usando o [ \\&lt; serviceTimeouts\\&gt;](../Topic/%3CserviceTimeouts%3E.md) elemento em um arquivo de configuração do aplicativo."
  example:
  - "The following configuration file specifies a transaction timeout period of three minutes.  \n  \n [!code-cs[SBA.TransactionTimeout#2](~/add/codesnippet/csharp/sba.transactiontimeout.client/services.cs#2)]\n [!code-vb[SBA.TransactionTimeout#2](~/add/codesnippet/visualbasic/sba.transactiontimeout.client/services.vb#2)]"
  syntax:
    content: public string TransactionTimeout { get; set; }
    return:
      type: System.String
      description: "Um <xref:System.TimeSpan>objeto que representa o tempo dentro do qual transações devem ser completadas ou automaticamente anuladas.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor é nulo."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor é menor que &lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt; ou maior que &lt;xref:System.TimeSpan.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  id: UseSynchronizationContext
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
  fullName: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que especifica se deve usar o contexto de sincronização atual para escolher o thread de execução."
  remarks: "Use essa propriedade para fornecer a afinidade de thread de interface do usuário que alguns aplicativos exigem. Por exemplo, um aplicativo Windows Forms pode ser registrado como um objeto de serviço singleton. Nesse caso, todas as chamadas para o serviço devem executar no thread de formulários do Windows. No caso de padrão UseSynchronizationContext é definido como `true`, sincroniza todas as chamadas para o serviço para ser executado no thread capturada de <xref:System.Threading.SynchronizationContext?displayProperty=fullName>.</xref:System.Threading.SynchronizationContext?displayProperty=fullName>"
  syntax:
    content: public bool UseSynchronizationContext { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o thread especificado pelo execute todas as chamadas para o serviço de <xref:System.Threading.SynchronizationContext>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Threading.SynchronizationContext> O valor padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  id: ValidateMustUnderstand
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que especifica se o sistema ou o aplicativo reforça SOAP <xref uid=&quot;langword_csharp_MustUnderstand&quot; name=&quot;MustUnderstand&quot; href=&quot;&quot;> </xref> processamento de cabeçalho."
  remarks: "Use a propriedade ValidateMustUnderstand para desativar a validação de imposto de cabeçalhos de mensagens que chegam. No modo de execução normal, os cabeçalhos de mensagem são comparados com o <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A>propriedade para confirmar que os cabeçalhos que chegam explicitamente são manipulados pelo serviço.</xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A> Defina isso para `false` desativar essa verificação. Quando definido como `false`, o aplicativo deve verificar se há cabeçalhos marcados com MustUnderstand = &quot;true&quot; e retornar uma falha se um ou mais deles não foram entendidas. Isso é útil quando o aplicativo deve aceitar qualquer mensagens SOAP de entrada (por exemplo, quando usar digitado ou mensagens sem tipo) e executar o processamento de cabeçalho personalizado."
  syntax:
    content: public bool ValidateMustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o sistema executar o cabeçalho SOAP <xref uid=&quot;langword_csharp_MustUnderstand&quot; name=&quot;MustUnderstand&quot; href=&quot;&quot;> </xref> processamento; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, que indica que o aplicativo executa esse processamento. O valor padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ServiceBehaviorAttribute()
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ServiceBehaviorAttribute()
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
- uid: System.ServiceModel.AddressFilterMode
  parent: System.ServiceModel
  isExternal: false
  name: AddressFilterMode
  nameWithType: AddressFilterMode
  fullName: System.ServiceModel.AddressFilterMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
- uid: System.ServiceModel.ConcurrencyMode
  parent: System.ServiceModel
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
  fullName: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: GetWellKnownSingleton()
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
- uid: System.ServiceModel.InstanceContextMode
  parent: System.ServiceModel
  isExternal: false
  name: InstanceContextMode
  nameWithType: InstanceContextMode
  fullName: System.ServiceModel.InstanceContextMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
  fullName: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Name
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Namespace
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: SetWellKnownSingleton(Object)
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeConfigurationName()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionIsolationLevel()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionTimeout()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ServiceEndpoint>
  nameWithType: Collection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
  fullName: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ServiceBehaviorAttribute
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: GetWellKnownSingleton
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: SetWellKnownSingleton
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeConfigurationName
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionTimeout
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
