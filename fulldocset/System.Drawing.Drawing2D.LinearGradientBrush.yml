### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.LinearGradientBrush
  id: LinearGradientBrush
  children:
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  - System.Drawing.Drawing2D.LinearGradientBrush.Blend
  - System.Drawing.Drawing2D.LinearGradientBrush.Clone
  - System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  - System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  - System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  - System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  - System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform
  - System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.Transform
  - System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  langs:
  - csharp
  name: LinearGradientBrush
  nameWithType: LinearGradientBrush
  fullName: System.Drawing.Drawing2D.LinearGradientBrush
  type: Class
  summary: "Encapsula um <xref href=&quot;System.Drawing.Brush&quot;> </xref> com um gradiente linear. Essa classe não pode ser herdada."
  remarks: "Essa classe encapsula gradientes duas cores e gradientes várias cores personalizadas.       Todos os gradientes lineares são definidos ao longo da linha especificada pela largura de um retângulo ou por dois pontos.       Por padrão, um gradiente linear de duas cores é uma combinação linear mesmo horizontal da cor inicial para a cor final ao longo da linha especificada. Personalizar o padrão de mesclagem usando o <xref:System.Drawing.Drawing2D.Blend>classe, o <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>métodos, ou o <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>métodos.</xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> </xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> </xref:System.Drawing.Drawing2D.Blend> Personalizar a direção do gradiente especificando o <xref:System.Drawing.Drawing2D.LinearGradientMode>de enumeração ou o ângulo no construtor.</xref:System.Drawing.Drawing2D.LinearGradientMode>       Use o <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A>propriedade para criar um gradiente de várias cores.</xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A>       O <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A>propriedade especifica uma transformação geométrica local aplicada ao gradiente.</xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A>"
  example:
  - "The following example creates a horizontal LinearGradientBrush; the color components change linearly as you move from a horizontal coordinate of 0 to a horizontal coordinate of 200. For example, a point whose first coordinate is halfway between 0 and 200 will have a blue component that is halfway between 0 and 255. This example is designed for use with Windows Forms. The following code example is designed for use with Windows Forms, and it requires the <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>.  \n  \n [!code-vb[System.Drawing.UsingaGradientBrush#21](~/add/codesnippet/visualbasic/t-system.drawing.drawing_3_1.vb)]\n [!code-cs[System.Drawing.UsingaGradientBrush#21](~/add/codesnippet/csharp/t-system.drawing.drawing_3_1.cs)]"
  syntax:
    content: 'public sealed class LinearGradientBrush : System.Drawing.Brush'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Drawing.Brush
  implements: []
  inheritedMembers:
  - System.Drawing.Brush.Dispose
  - System.Drawing.Brush.Dispose(System.Boolean)
  - System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  id: '#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Point,Point,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe com as cores e pontos especificados."
  syntax:
    content: public LinearGradientBrush (System.Drawing.Point point1, System.Drawing.Point point2, System.Drawing.Color color1, System.Drawing.Color color2);
    parameters:
    - id: point1
      type: System.Drawing.Point
      description: "Um <xref href=&quot;System.Drawing.Point&quot;> </xref> estrutura que representa o ponto inicial do gradiente linear."
    - id: point2
      type: System.Drawing.Point
      description: "Um <xref href=&quot;System.Drawing.Point&quot;> </xref> estrutura que representa o ponto de extremidade do gradiente linear."
    - id: color1
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor inicial do gradiente linear."
    - id: color2
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor final do gradiente linear."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)
  id: '#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(PointF,PointF,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe com as cores e pontos especificados."
  syntax:
    content: public LinearGradientBrush (System.Drawing.PointF point1, System.Drawing.PointF point2, System.Drawing.Color color1, System.Drawing.Color color2);
    parameters:
    - id: point1
      type: System.Drawing.PointF
      description: "Um <xref href=&quot;System.Drawing.PointF&quot;> </xref> estrutura que representa o ponto inicial do gradiente linear."
    - id: point2
      type: System.Drawing.PointF
      description: "Um <xref href=&quot;System.Drawing.PointF&quot;> </xref> estrutura que representa o ponto de extremidade do gradiente linear."
    - id: color1
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor inicial do gradiente linear."
    - id: color2
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor final do gradiente linear."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Cria uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe com base em um retângulo, inicial e final de cores e orientação."
  syntax:
    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> estrutura que especifica os limites de gradiente linear."
    - id: color1
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor inicial do gradiente."
    - id: color2
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor final do gradiente."
    - id: linearGradientMode
      type: System.Drawing.Drawing2D.LinearGradientMode
      description: "Um <xref href=&quot;System.Drawing.Drawing2D.LinearGradientMode&quot;> </xref> elemento de enumeração que especifica a orientação do gradiente. A orientação determina os pontos iniciais e final do gradiente. Por exemplo, <xref uid=&quot;langword_csharp_LinearGradientMode.ForwardDiagonal&quot; name=&quot;LinearGradientMode.ForwardDiagonal&quot; href=&quot;&quot;> </xref> Especifica que o ponto de partida é o canto superior esquerdo do retângulo e o ponto final é o canto inferior direito do retângulo."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Rectangle,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Cria uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe com base em um retângulo, inicial e final de um ângulo de orientação e cores."
  remarks: "Todos os pontos ao longo de qualquer linha perpendicular à linha de orientação são da mesma cor.       A linha inicial perpendicular à linha de orientação e passa por um dos cantos do retângulo. Todos os pontos na linha de início são a cor inicial. Terminando linha perpendicular à linha de orientação e passa por um dos cantos do retângulo. Todos os pontos na linha final são a cor final.       O ângulo da linha de orientação determina quais cantos o início e término linhas de passagem. Por exemplo, se o ângulo estiver entre 0 e 90 graus, a linha inicial transmite o canto superior esquerdo e a linha final transmite o canto inferior direito."
  syntax:
    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> estrutura que especifica os limites de gradiente linear."
    - id: color1
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor inicial do gradiente."
    - id: color2
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor final do gradiente."
    - id: angle
      type: System.Single
      description: "O ângulo, medido em graus no sentido horário de eixo x da linha de orientação do gradiente."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Cria uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> com base em um retângulo, inicial e final de cores e um modo de orientação."
  syntax:
    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Um <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura que especifica os limites de gradiente linear."
    - id: color1
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor inicial do gradiente."
    - id: color2
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor final do gradiente."
    - id: linearGradientMode
      type: System.Drawing.Drawing2D.LinearGradientMode
      description: "Um <xref href=&quot;System.Drawing.Drawing2D.LinearGradientMode&quot;> </xref> elemento de enumeração que especifica a orientação do gradiente. A orientação determina os pontos iniciais e final do gradiente. Por exemplo, <xref uid=&quot;langword_csharp_LinearGradientMode.ForwardDiagonal&quot; name=&quot;LinearGradientMode.ForwardDiagonal&quot; href=&quot;&quot;> </xref> Especifica que o ponto de partida é o canto superior esquerdo do retângulo e o ponto final é o canto inferior direito do retângulo."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(RectangleF,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Cria uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe com base em um retângulo, inicial e final de um ângulo de orientação e cores."
  remarks: "Todos os pontos ao longo de qualquer linha perpendicular à linha de orientação são da mesma cor.       A linha inicial perpendicular à linha de orientação e passa por um dos cantos do retângulo. Todos os pontos na linha de início são a cor inicial. Terminando linha perpendicular à linha de orientação e passa por um dos cantos do retângulo. Todos os pontos na linha final são a cor final.       O ângulo da linha de orientação determina quais cantos o início e término linhas de passagem. Por exemplo, se o ângulo estiver entre 0 e 90 graus, a linha inicial transmite o canto superior esquerdo e a linha final transmite o canto inferior direito."
  syntax:
    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Um <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura que especifica os limites de gradiente linear."
    - id: color1
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor inicial do gradiente."
    - id: color2
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor final do gradiente."
    - id: angle
      type: System.Single
      description: "O ângulo, medido em graus no sentido horário de eixo x da linha de orientação do gradiente."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Cria uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe com base em um retângulo, inicial e final de um ângulo de orientação e cores."
  remarks: "Todos os pontos ao longo de qualquer linha perpendicular à linha de orientação são da mesma cor.       A linha inicial perpendicular à linha de orientação e passa por um dos cantos do retângulo. Todos os pontos na linha de início são a cor inicial. Terminando linha perpendicular à linha de orientação e passa por um dos cantos do retângulo. Todos os pontos na linha final são a cor final.       O ângulo da linha de orientação determina quais cantos o início e término linhas de passagem. Por exemplo, se o ângulo estiver entre 0 e 90 graus, a linha inicial transmite o canto superior esquerdo e a linha final transmite o canto inferior direito."
  syntax:
    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> estrutura que especifica os limites de gradiente linear."
    - id: color1
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor inicial do gradiente."
    - id: color2
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor final do gradiente."
    - id: angle
      type: System.Single
      description: "O ângulo, medido em graus no sentido horário de eixo x da linha de orientação do gradiente."
    - id: isAngleScaleable
      type: System.Boolean
      description: "Definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> para especificar que o ângulo é afetado pela transformação associada a esta <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Cria uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe com base em um retângulo, inicial e final de um ângulo de orientação e cores."
  remarks: "Todos os pontos ao longo de qualquer linha perpendicular à linha de orientação são da mesma cor.       A linha inicial perpendicular à linha de orientação e passa por um dos cantos do retângulo. Todos os pontos na linha de início são a cor inicial. Terminando linha perpendicular à linha de orientação e passa por um dos cantos do retângulo. Todos os pontos na linha final são a cor final.       O ângulo da linha de orientação determina quais cantos o início e término linhas de passagem. Por exemplo, se o ângulo estiver entre 0 e 90 graus, a linha inicial transmite o canto superior esquerdo e a linha final transmite o canto inferior direito."
  syntax:
    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Um <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura que especifica os limites de gradiente linear."
    - id: color1
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor inicial do gradiente."
    - id: color2
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor final do gradiente."
    - id: angle
      type: System.Single
      description: "O ângulo, medido em graus no sentido horário de eixo x da linha de orientação do gradiente."
    - id: isAngleScaleable
      type: System.Boolean
      description: "Definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> para especificar que o ângulo é afetado pela transformação associada a esta <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend
  id: Blend
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Blend
  nameWithType: LinearGradientBrush.Blend
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Blend
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obtém ou define um <xref href=&quot;System.Drawing.Drawing2D.Blend&quot;> </xref> que especifica posições e os fatores que definem uma queda personalizada para o gradiente."
  remarks: "Um <xref:System.Drawing.Drawing2D.Blend>contém matrizes correspondentes de posições e fatores de mesclagem.</xref:System.Drawing.Drawing2D.Blend> Os fatores blend especificam as porcentagens da cor inicial e final a cor a ser usada na posição correspondente. As posições são fornecidas como uma porcentagem da distância ao longo da linha de gradação."
  syntax:
    content: public System.Drawing.Drawing2D.Blend Blend { get; set; }
    return:
      type: System.Drawing.Drawing2D.Blend
      description: "Um <xref href=&quot;System.Drawing.Drawing2D.Blend&quot;> </xref> que representa uma queda personalizada para o gradiente."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Blend*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone
  id: Clone
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Clone()
  nameWithType: LinearGradientBrush.Clone()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Cria uma cópia exata desta <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Clones the <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`).  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the cloned brush.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/add/codesnippet/visualbasic/m-system.drawing.drawing_18_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/add/codesnippet/cpp/m-system.drawing.drawing_18_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/add/codesnippet/csharp/m-system.drawing.drawing_18_1.cs)]"
  syntax:
    content: public override object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "O <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> esse método cria, usado como um objeto."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  id: GammaCorrection
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: GammaCorrection
  nameWithType: LinearGradientBrush.GammaCorrection
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obtém ou define um valor que indica se a correção gama está habilitada para este <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  syntax:
    content: public bool GammaCorrection { get; set; }
    return:
      type: System.Boolean
      description: "O valor é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a correção gama está habilitada para esta <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  id: InterpolationColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: InterpolationColors
  nameWithType: LinearGradientBrush.InterpolationColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obtém ou define um <xref href=&quot;System.Drawing.Drawing2D.ColorBlend&quot;> </xref> que define um gradiente linear várias cores."
  remarks: "Um <xref:System.Drawing.Drawing2D.ColorBlend>contém matrizes correspondentes de cores e de posições.</xref:System.Drawing.Drawing2D.ColorBlend> As posições são valores entre 0 e 1 que especifica a porcentagem da distância ao longo da linha de gradação onde se encontra a cor correspondente.       A definição dessa propriedade cria um gradiente de várias cores com uma cor em cada posição ao longo da linha de gradação. A definição dessa propriedade anula todas as configurações de cor, a posição e queda anteriores para este <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</xref:System.Drawing.Drawing2D.LinearGradientBrush>"
  syntax:
    content: public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }
    return:
      type: System.Drawing.Drawing2D.ColorBlend
      description: "Um <xref href=&quot;System.Drawing.Drawing2D.ColorBlend&quot;> </xref> que define um gradiente linear várias cores."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  id: LinearColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearColors
  nameWithType: LinearGradientBrush.LinearColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obtém ou define as cores iniciais e final do gradiente."
  syntax:
    content: public System.Drawing.Color[] LinearColors { get; set; }
    return:
      type: System.Drawing.Color[]
      description: "Uma matriz de dois <xref href=&quot;System.Drawing.Color&quot;> </xref> estruturas que representa o início e fim cores de gradiente."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Multiplica o <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> que representa a transformação geométrica local deste <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> por especificado <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> acrescentando especificado <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>.
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "O <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> pela qual multiplicar a transformação geométrica."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Multiplica o <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> que representa a transformação geométrica local deste <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> por especificado <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> na ordem especificada."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method, to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.  \n  \n Notice that the lower ellipse is stretched in the horizontal direction, and that the gradient is stretched to match the new shape.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/add/codesnippet/visualbasic/90c76832-46c2-4578-8b9f-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/add/codesnippet/cpp/90c76832-46c2-4578-8b9f-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/add/codesnippet/csharp/90c76832-46c2-4578-8b9f-_1.cs)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "O <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> pela qual multiplicar a transformação geométrica."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Um <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> que especifica a ordem na qual multiplicar duas matrizes."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  id: Rectangle
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Rectangle
  nameWithType: LinearGradientBrush.Rectangle
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obtém uma região retangular que define os pontos iniciais e final do gradiente."
  remarks: "O lado esquerdo do retângulo Especifica o ponto inicial do gradiente linear e à direita do retângulo Especifica o ponto de extremidade."
  syntax:
    content: public System.Drawing.RectangleF Rectangle { get; }
    return:
      type: System.Drawing.RectangleF
      description: "Um <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura que especifica o início e término pontos do gradiente."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: LinearGradientBrush.ResetTransform()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Redefine o <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform*>propriedade de identidade.</xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform*>"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.  \n  \n-   Resets the transform.  \n  \n-   Draws a third ellipse to the screen below the first two.  \n  \n Notice that the lowest ellipse is drawn the same size as the first, and that, due to the call to the ResetTransform method, the gradient has been reduced to match.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/add/codesnippet/visualbasic/m-system.drawing.drawing_6_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/add/codesnippet/cpp/m-system.drawing.drawing_6_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/add/codesnippet/csharp/m-system.drawing.drawing_6_1.cs)]"
  syntax:
    content: public void ResetTransform ();
    parameters: []
  overload: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: LinearGradientBrush.RotateTransform(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Gira a transformação geométrica local pelo valor especificado. Esse método precede a rotação à transformação."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>.
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "O ângulo de rotação."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: LinearGradientBrush.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Gira a transformação geométrica local a quantidade especificada na ordem especificada."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> 45 degrees by calling the <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A> method.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the rotated brush.  \n  \n Notice that the gradient of the lower ellipse is at a 45 degree angle to the x-axis of the top ellipse. Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of the lower ellipse.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/add/codesnippet/visualbasic/6302de64-3f75-4fc9-b2c4-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/add/codesnippet/cpp/6302de64-3f75-4fc9-b2c4-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/add/codesnippet/csharp/6302de64-3f75-4fc9-b2c4-_1.cs)]"
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "O ângulo de rotação."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Um <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> que especifica se deve ser acrescentam ou precedem a matriz de rotação."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Escalas local Geométrico transform os valores especificados. Esse método precede a matriz de dimensionamento para a transformação."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>.
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: "O valor pelo qual a escala para a transformação a direção do eixo x."
    - id: sy
      type: System.Single
      description: "O valor pelo qual a escala para a transformação a direção do eixo y."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Escalas local Geométrico transform os valores especificados na ordem especificada."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draw an ellipse to the screen using this brush.  \n  \n-   Scales the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by a factor of two in the x-axis.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the scaled brush.  \n  \n Notice that the gradient of the lower ellipse is stretched by a factor of two. Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of ellipse.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/add/codesnippet/visualbasic/e0c3e704-6b4f-48bc-83d2-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/add/codesnippet/cpp/e0c3e704-6b4f-48bc-83d2-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/add/codesnippet/csharp/e0c3e704-6b4f-48bc-83d2-_1.cs)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: "O valor pelo qual a escala para a transformação a direção do eixo x."
    - id: sy
      type: System.Single
      description: "O valor pelo qual a escala para a transformação a direção do eixo y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Um <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> que especifica se deve ser acrescentam ou precedem a matriz de escala."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)
  id: SetBlendTriangularShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetBlendTriangularShape(Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Cria um gradiente linear com uma cor central e uma queda linear para uma única cor em ambas as extremidades."
  remarks: "Esse método Especifica um `focus`, que é o ponto em que o gradiente é composto apenas da cor final. O `focus` parâmetro representa um local como uma proporção da distância ao longo da linha de gradação. Gradiente fica para a cor inicial linearmente para ambos os lados."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>.
  syntax:
    content: public void SetBlendTriangularShape (float focus);
    parameters:
    - id: focus
      type: System.Single
      description: "Um valor entre 0 e 1 que especifica o centro do gradiente (o ponto em que o gradiente é composto de apenas a cor final)."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  id: SetBlendTriangularShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetBlendTriangularShape(Single,Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Cria um gradiente linear com uma cor central e uma queda linear para uma única cor em ambas as extremidades."
  remarks: "Esse método Especifica um `focus`, que é o ponto em que o gradiente é composto apenas da cor final. O `focus` parâmetro representa um local como uma proporção da distância ao longo da linha de gradação. Gradiente fica para a cor inicial linearmente para ambos os lados."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.  \n  \n-   Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> into a triangular shape with its peak in the center.  \n  \n-   Draws a second ellipse to the screen using the transformed brush.  \n  \n Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/add/codesnippet/visualbasic/e6c3d0c9-aed2-4364-946f-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/add/codesnippet/cpp/e6c3d0c9-aed2-4364-946f-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/add/codesnippet/csharp/e6c3d0c9-aed2-4364-946f-_1.cs)]"
  syntax:
    content: public void SetBlendTriangularShape (float focus, float scale);
    parameters:
    - id: focus
      type: System.Single
      description: "Um valor entre 0 e 1 que especifica o centro do gradiente (o ponto em que o gradiente é composto de apenas a cor final)."
    - id: scale
      type: System.Single
      description: "Um valor de 0 through1 que especifica a rapidez com que a queda de cores da cor inicial para `focus` (terminando cor)"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)
  id: SetSigmaBellShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetSigmaBellShape(Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Cria uma queda de gradiente com base em uma curva em forma de sino."
  remarks: "Esse método Especifica um `focus`, que é o ponto em que o gradiente é composto apenas da cor final. O `focus` parâmetro representa um local como uma proporção da distância ao longo da linha de gradação. Gradiente fica para a cor inicial com base em uma forma de curva de sino (distribuição normal) para um dos lados."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`
  syntax:
    content: public void SetSigmaBellShape (float focus);
    parameters:
    - id: focus
      type: System.Single
      description: "Um valor entre 0 e 1 que especifica o centro do gradiente (o ponto onde a cor inicial e final de cor são mesclados igualmente)."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  id: SetSigmaBellShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetSigmaBellShape(Single,Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Cria uma queda de gradiente com base em uma curva em forma de sino."
  remarks: "Esse método Especifica um `focus`, que é o ponto em que o gradiente é composto apenas da cor final. O `focus` parâmetro representa um local como uma proporção da distância ao longo da linha de gradação. Gradiente fica para a cor inicial com base em uma forma de curva de sino (distribuição normal) para um dos lados."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.  \n  \n-   Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> to have a bell shaped curve with its peak in the center.  \n  \n-   Draws a second ellipse to the screen using the bell-shaped brush.  \n  \n Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/add/codesnippet/visualbasic/06854fcf-f315-4b99-b3db-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/add/codesnippet/cpp/06854fcf-f315-4b99-b3db-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/add/codesnippet/csharp/06854fcf-f315-4b99-b3db-_1.cs)]"
  syntax:
    content: public void SetSigmaBellShape (float focus, float scale);
    parameters:
    - id: focus
      type: System.Single
      description: "Um valor entre 0 e 1 que especifica o centro do gradiente (o ponto em que o gradiente é composto de apenas a cor final)."
    - id: scale
      type: System.Single
      description: "Um valor entre 0 e 1 que especifica a rapidez com que a queda de cores do `focus`."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform
  id: Transform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Transform
  nameWithType: LinearGradientBrush.Transform
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obtém ou define uma cópia <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> que define uma transformação geométrica local para este <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  remarks: "Uma transformação geométrica pode ser usada para traduzir, dimensionar, girar ou inclinar o preenchimento de gradiente. Como a matriz retornada e pela transformação de propriedade é uma cópia da transformação geométrica do pincel, descarte da matriz quando você não precisa mais dela."
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "Uma cópia do <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> que define uma transformação geométrica que só se aplica a preenchimentos desenhados com essa <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Converte a transformação geométrica local, as dimensões especificadas. Esse método precede a tradução para a transformação."
  remarks: ''
  example:
  - For an example, see TranslateTransform.
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "O valor da conversão em x."
    - id: dy
      type: System.Single
      description: "O valor da conversão em y."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Converte a transformação geométrica local, as dimensões especificadas na ordem especificada."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Uses this brush to draw a rectangle to the screen that has a linear, left-to-right transition of colors.  \n  \n-   Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by 90 degrees and scales the gradient.  \n  \n-   Draws the rectangle, with the rotated and scaled gradient, to the screen.  \n  \n-   Translates the rectangle so that it has a linear gradient running from top to bottom.  \n  \n-   Draws the translated rectangle to the screen.  \n  \n Notice that there are three rectangles displayed the top one showing the left-to-right gradient, the middle one showing the rotated and scaled gradient, and the bottom one showing the final, translated gradient.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/add/codesnippet/visualbasic/245473a1-ce62-4749-b877-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/add/codesnippet/cpp/245473a1-ce62-4749-b877-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/add/codesnippet/csharp/245473a1-ce62-4749-b877-_1.cs)]"
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: "O valor da conversão em x."
    - id: dy
      type: System.Single
      description: "O valor da conversão em y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A ordem (preceda ou acrescentar) na qual aplicar a conversão."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  id: WrapMode
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: WrapMode
  nameWithType: LinearGradientBrush.WrapMode
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obtém ou define um <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> enumeração que indica o modo de quebra para este <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  syntax:
    content: public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.WrapMode
      description: "Um <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> que especifica como preenchimentos desenhados com essa <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> colocadas lado a lado."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Drawing.Brush
  isExternal: false
  name: System.Drawing.Brush
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Point,Point,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(PointF,PointF,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.Drawing2D.LinearGradientMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LinearGradientMode
  nameWithType: LinearGradientMode
  fullName: System.Drawing.Drawing2D.LinearGradientMode
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Rectangle,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(RectangleF,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Blend
  nameWithType: LinearGradientBrush.Blend
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Blend
- uid: System.Drawing.Drawing2D.Blend
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Blend
  nameWithType: Blend
  fullName: System.Drawing.Drawing2D.Blend
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Clone()
  nameWithType: LinearGradientBrush.Clone()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: GammaCorrection
  nameWithType: LinearGradientBrush.GammaCorrection
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: InterpolationColors
  nameWithType: LinearGradientBrush.InterpolationColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
- uid: System.Drawing.Drawing2D.ColorBlend
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: ColorBlend
  nameWithType: ColorBlend
  fullName: System.Drawing.Drawing2D.ColorBlend
- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearColors
  nameWithType: LinearGradientBrush.LinearColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
- uid: System.Drawing.Color[]
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color[]
  spec.csharp:
  - uid: System.Drawing.Color
    name: Color
    nameWithType: Color
    fullName: Color[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Rectangle
  nameWithType: LinearGradientBrush.Rectangle
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ResetTransform()
  nameWithType: LinearGradientBrush.ResetTransform()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform()
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: LinearGradientBrush.RotateTransform(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: LinearGradientBrush.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetBlendTriangularShape(Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetBlendTriangularShape(Single,Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetSigmaBellShape(Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetSigmaBellShape(Single,Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Transform
  nameWithType: LinearGradientBrush.Transform
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Transform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: WrapMode
  nameWithType: LinearGradientBrush.WrapMode
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
- uid: System.Drawing.Drawing2D.WrapMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: WrapMode
  nameWithType: WrapMode
  fullName: System.Drawing.Drawing2D.WrapMode
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush
  nameWithType: LinearGradientBrush.LinearGradientBrush
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Blend
  nameWithType: LinearGradientBrush.Blend
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Clone
  nameWithType: LinearGradientBrush.Clone
- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: GammaCorrection
  nameWithType: LinearGradientBrush.GammaCorrection
- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: InterpolationColors
  nameWithType: LinearGradientBrush.InterpolationColors
- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearColors
  nameWithType: LinearGradientBrush.LinearColors
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: MultiplyTransform
  nameWithType: LinearGradientBrush.MultiplyTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Rectangle
  nameWithType: LinearGradientBrush.Rectangle
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ResetTransform
  nameWithType: LinearGradientBrush.ResetTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: RotateTransform
  nameWithType: LinearGradientBrush.RotateTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ScaleTransform
  nameWithType: LinearGradientBrush.ScaleTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetBlendTriangularShape
  nameWithType: LinearGradientBrush.SetBlendTriangularShape
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetSigmaBellShape
  nameWithType: LinearGradientBrush.SetSigmaBellShape
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Transform
  nameWithType: LinearGradientBrush.Transform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: TranslateTransform
  nameWithType: LinearGradientBrush.TranslateTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: WrapMode
  nameWithType: LinearGradientBrush.WrapMode
