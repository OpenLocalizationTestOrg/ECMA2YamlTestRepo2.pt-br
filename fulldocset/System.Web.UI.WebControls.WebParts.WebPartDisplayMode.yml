### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  id: WebPartDisplayMode
  children:
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor(System.String)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
  langs:
  - csharp
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  type: Class
  summary: "Define um conjunto comum de propriedades para os vários modos de exibição que pode inserir uma página de Web Parts."
  remarks: "Uma página de Web Parts pode inserir vários modos de exibição diferentes. Em cada modo de exibição, determinados elementos da interface do usuário de Web Parts (UI) ou estão ocultos ou exibidos e determinados tipos de modificações de usuário para uma página estão habilitados ou desabilitados. O <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controle contém a implementação para os modos de exibição que estão disponíveis no conjunto de controle de Web Parts e gerencia os modos de exibição para uma página.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       A tabela a seguir lista os campos que representam os modos de exibição disponíveis.      | Modo de exibição | Descrição |   |------------------|-----------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>| Exibe os controles de Web Parts e elementos de interface do usuário no modo normal no qual os usuários finais exibir uma página. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>| Exibe os elementos de interface do usuário de zona e permite que os usuários arraste os controles de Web Parts para alterar o layout de uma página. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>| Exibe os elementos de interface do usuário de edição especiais e permite que os usuários finais editar os controles em uma página. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>| Exibe os elementos de interface do usuário do catálogo especial e permite que os usuários finais adicionar e remover controles de página. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>| Exibe conexões especiais de elementos de interface do usuário e permite que os usuários finais se conectem aos controles de Web Parts. |</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>"
  example:
  - "The following code examples demonstrate the declarative use of display modes on a Web Parts page. Each of these display modes, as implemented by the Web Parts control set, is derived from the WebPartDisplayMode class.  \n  \n This code example has four parts:  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page with a zone to host the custom control.  \n  \n-   A user control that enables users to change display modes on the Web page.  \n  \n-   An explanation of how the page works in a browser.  \n  \n The first part of the example is a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, `TextDisplayWebPart`. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a demonstration of both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPartDisplayMode_Overview#9](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_266_1.vb)]\n [!code-cs[WebParts_WebPartDisplayMode_Overview#9](~/add/codesnippet/csharp/t-system.web.ui.webcontr_266_1.cs)]  \n  \n The second part of the code example is a Web page that references a standard ASP.NET <xref:System.Web.UI.WebControls.Calendar> control within an `<asp:webpartzone>` element, so that the control is wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control and given basic Web Parts functionality at run time. The page also references the `TextDisplayWebPart` control within an `<asp:catalogzone>` element, which demonstrates the end user's ability to switch to catalog mode and add controls to the page. The page also includes an `<asp:editorzone>` element, which enables users to edit the controls contained in the `<asp:webpartzone>` when the page is in edit mode. Near the top of the page are a `register` directive for the custom control and another one for the user control.  \n  \n [!code-cs[WebParts_WebPartDisplayMode_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_266_2.aspx)]\n [!code-vb[WebParts_WebPartDisplayMode_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_266_2.aspx)]  \n  \n The third part of the code example is a user control that enables users to switch display modes on a Web page. Save the source code for this control in a file named DisplayModeMenuCS.ascx or DisplayModeMenuVB.ascx (depending on which language you use for the code example), and put it in the same directory as the Web page. For more details about display modes and a description of the source code in this control, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartDisplayMode_Overview#5](~/add/codesnippet/csharp/t-system.web.ui.webcontr_266_3.ascx)]\n [!code-vb[WebParts_WebPartDisplayMode_Overview#5](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_266_3.ascx)]  \n  \n When you load the page in a browser, you can use the **Display Mode** drop-down list control to switch to different display modes. To edit controls, select **Edit** in the drop-down list control. To edit a specific control, expose its verbs menu by clicking the arrow in the control's title bar, and then clicking **Edit** in the verbs menu. When a control is in edit mode, the editing controls added to this page enable you to change the edited control's appearance and layout. When you are finished, select **Browse** in the **Display Mode** drop-down list control to return the page to a normal view. To add controls to the page, switch to catalog mode. Notice that you can either use the **Display Mode** drop-down list control, or click the button near the bottom of the page. The inline code for the `Button1_Click` method demonstrates how to change display modes programmatically. While you are in catalog mode, you can add the custom `TextDisplayWebPart` control to the page."
  syntax:
    content: public abstract class WebPartDisplayMode
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: WebPartDisplayMode(String)
  nameWithType: WebPartDisplayMode.WebPartDisplayMode(String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.WebPartDisplayMode(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicializa um valor para o nome do modo de exibição."
  remarks: "Um <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objeto nunca é criado, porque a classe é abstrata.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Em tempo de execução, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlar usa o <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>classe como a classe base para criar objetos para cada um dos vários modos de exibição de página.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected WebPartDisplayMode (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do modo de exibição."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
  id: AllowPageDesign
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: AllowPageDesign
  nameWithType: WebPartDisplayMode.AllowPageDesign
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém um valor que determina se os usuários podem alterar o layout de uma página de Web Parts quando a página estiver em um determinado modo de exibição."
  syntax:
    content: public virtual bool AllowPageDesign { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os usuários podem alterar o layout de página; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
  id: AssociatedWithToolZone
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: AssociatedWithToolZone
  nameWithType: WebPartDisplayMode.AssociatedWithToolZone
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém um valor que indica se um determinado modo de exibição está associado uma classe que deriva de <xref href=&quot;System.Web.UI.WebControls.WebParts.ToolZone&quot;> </xref> classe."
  remarks: "Quando uma página de Web Parts entra em um modo de exibição cuja propriedade AssociatedWithToolZone está definida como `true`, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controle interpreta que isso significa que uma classe associada deriva de <xref:System.Web.UI.WebControls.WebParts.ToolZone>classe e elementos de interface do usuário adicional do usuário precisam ser exibidos.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Por exemplo, quando uma página entra em modo de edição, zonas especiais que contêm elementos de interface do usuário para a edição de controles de Web Parts aparecem na página. Esse comportamento é possibilitado porque a propriedade AssociatedWithToolZone valor sobre o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>campo é definido como `true`.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>"
  syntax:
    content: public virtual bool AssociatedWithToolZone { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o modo de exibição é associado com um <xref href=&quot;System.Web.UI.WebControls.WebParts.ToolZone&quot;> </xref> classe; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)
  id: IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: IsEnabled(WebPartManager)
  nameWithType: WebPartDisplayMode.IsEnabled(WebPartManager)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(WebPartManager)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém um valor que indica se os usuários podem personalizar uma página enquanto a página estiver em um determinado modo de exibição."
  syntax:
    content: public virtual bool IsEnabled (System.Web.UI.WebControls.WebParts.WebPartManager webPartManager);
    parameters:
    - id: webPartManager
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: "O <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> instância de controle na página atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os usuários podem personalizar uma página. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. No entanto, quando <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization*>está definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>e a personalização está desabilitada na página, o padrão será <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization*>"
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
  id: Name
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: Name
  nameWithType: WebPartDisplayMode.Name
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém o nome de um modo de exibição."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém o nome de um modo de exibição."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
  id: RequiresPersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: RequiresPersonalization
  nameWithType: WebPartDisplayMode.RequiresPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém um valor que indica se um modo de exibição específico requer personalização esteja habilitado."
  syntax:
    content: public virtual bool RequiresPersonalization { get; }
    return:
      type: System.Boolean
      description: "Um valor booliano que indica se a personalização é necessária. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
  id: ShowHiddenWebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: ShowHiddenWebParts
  nameWithType: WebPartDisplayMode.ShowHiddenWebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém um valor que indica se os controles que têm suas <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden*>propriedade definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> devem ser exibidos.</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden*>"
  syntax:
    content: public virtual bool ShowHiddenWebParts { get; }
    return:
      type: System.Boolean
      description: "Um valor booliano que indica se os controles ocultos devem ser exibidos. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor(System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: WebPartDisplayMode(String)
  nameWithType: WebPartDisplayMode.WebPartDisplayMode(String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.WebPartDisplayMode(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: AllowPageDesign
  nameWithType: WebPartDisplayMode.AllowPageDesign
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: AssociatedWithToolZone
  nameWithType: WebPartDisplayMode.AssociatedWithToolZone
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: IsEnabled(WebPartManager)
  nameWithType: WebPartDisplayMode.IsEnabled(WebPartManager)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(WebPartManager)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: Name
  nameWithType: WebPartDisplayMode.Name
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: RequiresPersonalization
  nameWithType: WebPartDisplayMode.RequiresPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: ShowHiddenWebParts
  nameWithType: WebPartDisplayMode.ShowHiddenWebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode.WebPartDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: AllowPageDesign
  nameWithType: WebPartDisplayMode.AllowPageDesign
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: AssociatedWithToolZone
  nameWithType: WebPartDisplayMode.AssociatedWithToolZone
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: IsEnabled
  nameWithType: WebPartDisplayMode.IsEnabled
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: Name
  nameWithType: WebPartDisplayMode.Name
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: RequiresPersonalization
  nameWithType: WebPartDisplayMode.RequiresPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: ShowHiddenWebParts
  nameWithType: WebPartDisplayMode.ShowHiddenWebParts
