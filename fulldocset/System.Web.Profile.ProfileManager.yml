### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileManager
  id: ProfileManager
  children:
  - System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  - System.Web.Profile.ProfileManager.ApplicationName
  - System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  - System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  - System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  - System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  - System.Web.Profile.ProfileManager.Enabled
  - System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  - System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  - System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  - System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  - System.Web.Profile.ProfileManager.Provider
  - System.Web.Profile.ProfileManager.Providers
  langs:
  - csharp
  name: ProfileManager
  nameWithType: ProfileManager
  fullName: System.Web.Profile.ProfileManager
  type: Class
  summary: "Gerencia as configurações e dados de perfil de usuário."
  remarks: "O perfil do ASP.NET é usado para armazenar e recuperar configurações de usuário de uma fonte de dados como um banco de dados. O perfil de usuário é acessado usando a <xref:System.Web.HttpContext.Profile%2A>propriedade <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext.Profile%2A> Valores de propriedade e informações de perfil são gerenciados usando um provedor de perfil.       A classe do Gerenciador de perfis é usada para gerenciar configurações de perfil, procure os perfis de usuário e excluir perfis de usuário que não estão mais em uso. A classe do Gerenciador de perfis fornece métodos estáticos e propriedades que podem ser acessadas pela referência à classe do Gerenciador de perfis no código do aplicativo. Para obter um exemplo, consulte a seção de exemplo neste tópico e outros exemplos nos tópicos para membros da classe de Gerenciador de perfis.       Por padrão, o perfil de usuário está desabilitado para todos os aplicativos ASP.NET. Para habilitar o perfil de usuário, defina o `enabled` atributo do elemento de configuração como true, conforme mostrado no exemplo a seguir.      ```   <configuration>     <system.web>       <profile enabled=&quot;true&quot; />     </system.web>   </configuration>   ```Para obter mais informações sobre o perfil de usuário, consulte [visão geral de propriedades de perfil ASP.NET](~/add/includes/ajax-current-ext-md.md).       Um provedor de perfil é usado para armazenar e recuperar as propriedades no perfil do usuário. O .NET Framework inclui uma <xref:System.Web.Profile.SqlProfileProvider>classe que armazena as propriedades de perfil de usuário em um banco de dados do SQL Server.</xref:System.Web.Profile.SqlProfileProvider> Um <xref:System.Web.Profile.SqlProfileProvider>instância nomeada `AspNetSqlProvider` é especificado na configuração do computador como o provedor de perfil padrão.</xref:System.Web.Profile.SqlProfileProvider> O `AspNetSqlProvider` instância se conecta ao banco de dados do SQL Server no servidor Web local. Você pode especificar um <xref:System.Web.Profile.SqlProfileProvider>que conecta-se para outro SQL Server como o provedor de perfil padrão usando o elemento de configuração e o `defaultProvider` atributo do elemento de configuração, conforme mostrado no exemplo a seguir.</xref:System.Web.Profile.SqlProfileProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=         &quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <profile defaultProvider=&quot;SqlProvider&quot;>         <providers>           <clear />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Profile.SqlProfileProvider&quot;             connectionStringName=&quot;SqlServices&quot;             applicationName=&quot;MyApplication&quot; />         </providers>       </profile>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows an ASP.NET page that uses the ProfileManager class to manage inactive profiles.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/t-system.web.profile.pro_1_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/t-system.web.profile.pro_1_1.aspx)]"
  syntax:
    content: public static class ProfileManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  id: AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: AddDynamicProfileProperty(ProfilePropertySettings)
  nameWithType: ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  fullName: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Adiciona uma propriedade de perfil por meio de programação."
  remarks: "Esse método é funcionalmente equivalente à adição da propriedade para o `profile` seção do arquivo de configuração. Para chamar esse método para adicionar a propriedade de perfil, você deve fazer a chamada em um método marcado com o <xref:System.Web.PreApplicationStartMethodAttribute>atributo.</xref:System.Web.PreApplicationStartMethodAttribute>"
  syntax:
    content: public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);
    parameters:
    - id: property
      type: System.Web.Configuration.ProfilePropertySettings
      description: "As configurações de propriedade a ser adicionado."
  overload: System.Web.Profile.ProfileManager.AddDynamicProfileProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.ApplicationName
  id: ApplicationName
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
  fullName: System.Web.Profile.ProfileManager.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém ou define o nome do aplicativo para armazenar e recuperar informações de perfil."
  remarks: "O <xref:System.Web.Profile.ProfileManager>usa a propriedade ApplicationName para associar informações de perfil com diferentes aplicativos.</xref:System.Web.Profile.ProfileManager> Isso permite que vários aplicativos usar o mesmo banco de dados para armazenar informações do usuário sem exibir conflitos entre os usuários duplicados. Vários aplicativos ASP.NET podem usar o mesmo banco de dados de usuário, especificando o mesmo valor na propriedade ApplicationName. A propriedade ApplicationName pode ser definida programaticamente, ou ele pode ser definido declarativamente no arquivo de configuração para o aplicativo Web usando o `applicationName` atributo.       Se um valor não for especificado para o `applicationName` atributo no arquivo de configuração para o aplicativo Web, em seguida, usam os provedores de perfil incluídos com o .NET Framework a <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A>valor de propriedade para aplicativos ASP.NET.</xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> Para aplicativos não-ASP.NET, o valor padrão é o <xref:System.Diagnostics.ProcessModule.ModuleName%2A>valor de propriedade, sem a extensão de arquivo.</xref:System.Diagnostics.ProcessModule.ModuleName%2A>       O expõe de propriedade ApplicationName o <xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName>propriedade do provedor de perfil padrão.</xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName> O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, eles podem ser configurados com um nome de aplicativo diferente. Para acessar o nome do aplicativo de um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A>propriedade e o acesso a <xref:System.Configuration.SettingsProvider.ApplicationName%2A>propriedade do provedor diretamente.</xref:System.Configuration.SettingsProvider.ApplicationName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>      > [!CAUTION] > Como uma instância do provedor de perfil padrão único é usada para todas as solicitações atendidas por um <xref:System.Web.HttpApplication>do objeto, você pode ter várias solicitações de execução simultaneamente e a tentativa de definir o valor da propriedade ApplicationName.</xref:System.Web.HttpApplication> A propriedade ApplicationName não é thread-safe para várias gravações e alterar o valor da propriedade ApplicationName pode resultar em comportamento inesperado para vários usuários de um aplicativo. É recomendável que você evite escrever código que permite aos usuários definir a propriedade ApplicationName, a menos que necessário. Um exemplo de um aplicativo em que pode ser necessário definir a propriedade ApplicationName é um aplicativo administrativo que gerencia os dados de perfil para vários aplicativos. Esse aplicativo deve ser um aplicativo de usuário único e não é um aplicativo Web."
  example:
  - "The following configuration file excerpt shows the  element in the  section of the Web.config file for an ASP.NET application. It sets the application's default profile provider to a <xref:System.Web.Profile.SqlProfileProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<profile enabled=\"true\" defaultProvider=\"SqlProvider\">  \n  <providers>  \n  <add name=\"SqlProvider\"  \n    type=\"System.Web.Profile.SqlProfileProvider\"  \n    connectionStringName=\"SqlServices\"  \n    applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "O nome do aplicativo para armazenar e recuperar informações de perfil."
  overload: System.Web.Profile.ProfileManager.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  id: AutomaticSaveEnabled
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
  fullName: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém um valor que indica se o perfil de usuário serão salvas automaticamente no final da execução de uma página ASP.NET."
  remarks: "A propriedade AutomaticSaveEnabled indica se o salvamento automático do perfil de usuário está habilitado para o aplicativo. Se o salvamento automático estiver habilitado, o <xref:System.Web.Profile.ProfileModule>objeto gera o <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>eventos e chamadas de <xref:System.Web.Profile.ProfileBase.Save%2A>método durante o <xref:System.Web.HttpApplication.EndRequest>evento no final da execução de uma página ASP.NET.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.Profile.ProfileBase.Save%2A> </xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> </xref:System.Web.Profile.ProfileModule>       A propriedade AutomaticSaveEnabled é definida usando o `automaticSaveEnabled` atributo do elemento no arquivo Web. config para um aplicativo ASP.NET."
  example:
  - "The following configuration file excerpt shows the  element in the  section of the Web.config file for an ASP.NET application. It specifies the application's default profile provider to a <xref:System.Web.Profile.SqlProfileProvider> instance and sets the `automaticSaveEnabled` attribute to `true`.  \n  \n```  \n<profile enabled=\"true\"  \n  automaticSaveEnabled=\"true\"  \n  defaultProvider=\"SqlProvider\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Profile.SqlProfileProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static bool AutomaticSaveEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o perfil de usuário serão salvas automaticamente no final da execução de uma página ASP.NET. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileManager.AutomaticSaveEnabled*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Foi feita uma tentativa de obter o valor da propriedade AutomaticSaveEnabled pelo menos <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> permissão."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Exclui os dados de perfil de usuário para o qual a última data de atividade e hora ocorreram antes da data e hora especificadas."
  remarks: "O método DeleteInactiveProfiles é usado para remover dados de perfil não usados da fonte de dados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas. Perfis pesquisados, de qualquer perfil com um <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>que ocorre em ou antes especificado `userInactiveSinceDate` o valor do parâmetro é excluído.</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       As chamadas de método DeleteInactiveProfiles o <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>método do provedor de perfil padrão.</xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, as informações de perfil na fonte de dados não serão excluídas. Para excluir perfis inativos que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A>propriedade e chame o <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>método do provedor diretamente.</xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all profiles that have been unused for the specified number of days and are therefore considered inactive.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/32807c48-d028-41c4-938b-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/32807c48-d028-41c4-938b-_1.aspx)]"
  syntax:
    content: public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Uma da <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> valores de enumeração, especificando se anônimo, autenticado ou ambos os tipos de perfis são excluídos."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "Um <xref:System.DateTime>que identifica quais perfis de usuário são consideradas inativas.</xref:System.DateTime> Se o <xref:System.Web.Profile.ProfileInfo.LastActivityDate*>de um usuário de perfil ocorre em ou antes dessa data e hora, o perfil será considerado inativo.</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Int32
      description: "O número de perfis excluídos da fonte de dados."
  overload: System.Web.Profile.ProfileManager.DeleteInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  id: DeleteProfile(System.String)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfile(String)
  nameWithType: ProfileManager.DeleteProfile(String)
  fullName: System.Web.Profile.ProfileManager.DeleteProfile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Exclui o perfil para o nome de usuário especificado da fonte de dados."
  remarks: "O método DeleteProfile exclui todas as informações de perfil e propriedades para o perfil de usuário especificado `username` da fonte de dados para o <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>.</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> especificado       As chamadas de método DeleteProfile o <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>método do provedor de perfil padrão para executar a operação de exclusão.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, eles não são excluídos. Para excluir propriedades de perfil que são gerenciadas por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A>propriedade e chame o <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>método do provedor diretamente.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. The DeleteProfile method is called when a single profile is selected to be deleted. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter value passed to the <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#10](~/add/codesnippet/csharp/m-system.web.profile.pro_0_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#10](~/add/codesnippet/visualbasic/m-system.web.profile.pro_0_1.aspx)]"
  syntax:
    content: public static bool DeleteProfile (string username);
    parameters:
    - id: username
      type: System.String
      description: "O nome de usuário para o perfil a ser excluído."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o perfil de usuário foi encontrado e excluído; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileManager.DeleteProfile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>é uma cadeia de caracteres vazia (&quot;&quot;) ou contiver uma vírgula."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  id: DeleteProfiles(System.String[])
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfiles(String[])
  nameWithType: ProfileManager.DeleteProfiles(String[])
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Exclui as informações para a lista fornecida de nomes de usuário e propriedades de perfil."
  remarks: "O método DeleteProfiles exclui todas as informações de perfil e propriedades para os perfis específicos da fonte de dados para o aplicativo especificado pelo <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>propriedade.</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> A lista de perfis a serem excluídos é especificada como uma matriz de cadeia de caracteres de nomes de usuário. Se as propriedades de perfil e as informações existem na fonte de dados para um nome de usuário na `usernames` parâmetro, eles são excluídos.       O valor de retorno pode ser diferente do que o comprimento da matriz especificada de `usernames`. Isso indica que alguns dos perfis na matriz especificada de `usernames` já foram excluídos do armazenamento de dados.       As chamadas de método DeleteProfiles o <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>método do provedor de perfil padrão.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, eles não são excluídos. Para excluir propriedades de perfil que são gerenciadas por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A>propriedade e chame o <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>método do provedor diretamente.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A <xref:System.Web.UI.WebControls.GridView> control displays the inactive profiles returned. Each row of the <xref:System.Web.UI.WebControls.GridView> control includes a button that deletes the profile for that row from the data source with a call to the DeleteProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/m-system.web.profile.pro_4_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/m-system.web.profile.pro_4_1.aspx)]"
  syntax:
    content: public static int DeleteProfiles (string[] usernames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Uma matriz de cadeia de caracteres de nomes de usuário para os perfis a serem excluídos."
    return:
      type: System.Int32
      description: "O número de perfis excluídos da fonte de dados."
  overload: System.Web.Profile.ProfileManager.DeleteProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The length of <code>usernames</code> is zero.  \n  \n \\- or -  \n  \n One of the items in <code>usernames</code> is an empty string (\"\") or contains a comma.  \n  \n \\- or -  \n  \n Two or more items in <code>usernames</code> have the same value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernames</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n One of the items in <code>usernames</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  id: DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: ProfileManager.DeleteProfiles(ProfileInfoCollection)
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(ProfileInfoCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Exclui as propriedades de perfil e as informações da fonte de dados para a lista de perfis fornecida."
  remarks: "O método DeleteProfiles exclui todas as informações de perfil e propriedades para os perfis específicos da fonte de dados para o aplicativo especificado pelo <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>propriedade.</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> A lista de perfis a serem excluídos é especificada usando um <xref:System.Web.Profile.ProfileInfoCollection>que é passado como o `profiles` parâmetro.</xref:System.Web.Profile.ProfileInfoCollection> Um <xref:System.Web.Profile.ProfileInfoCollection>pode ser retornado do <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>, e <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>métodos.</xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileInfoCollection>       Observe que o valor de retorno pode ser diferente do <xref:System.Web.Profile.ProfileInfoCollection.Count%2A>valor fornecido <xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection> </xref:System.Web.Profile.ProfileInfoCollection.Count%2A> Isso indica que alguns dos perfis do <xref:System.Web.Profile.ProfileInfoCollection>já foram excluídos do armazenamento de dados.</xref:System.Web.Profile.ProfileInfoCollection>       As chamadas de método DeleteProfiles o <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName>método do provedor de perfil padrão.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName> O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, eles não são excluídos. Para excluir propriedades de perfil que são gerenciadas por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A>propriedade e chame o <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>método do provedor diretamente.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to search for profiles using the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> and <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> methods. The user can then delete the returned profiles with a call to the DeleteProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/dbbefae3-6297-4bf8-9680-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/dbbefae3-6297-4bf8-9680-_1.aspx)]"
  syntax:
    content: public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);
    parameters:
    - id: profiles
      type: System.Web.Profile.ProfileInfoCollection
      description: "Um <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> que contém informações de perfil de perfis a serem excluídos."
    return:
      type: System.Int32
      description: "O número de perfis excluídos da fonte de dados."
  overload: System.Web.Profile.ProfileManager.DeleteProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>profiles</code> has a <xref:System.Web.Profile.ProfileInfoCollection.Count*> value of zero.  \n  \n \\- or -  \n  \n One of the <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects in <code>profiles</code> has a <xref:System.Web.Profile.ProfileInfo.UserName*> that is an empty string (\"\") or contains a comma."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>profiles</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n One of the <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects in <code>profiles</code> has a <xref:System.Web.Profile.ProfileInfo.UserName*> that is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Enabled
  id: Enabled
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Enabled
  nameWithType: ProfileManager.Enabled
  fullName: System.Web.Profile.ProfileManager.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém um valor que indica se o perfil de usuário está habilitado para o aplicativo."
  remarks: "O perfil de usuário está habilitado para um aplicativo usando o `enabled` atributo do elemento de configuração."
  example:
  - "The following code example shows the  element in the  section of the Web.config file for an ASP.NET application where the user profile has been enabled.  \n  \n```  \n<profile enabled=\"true\" defaultProvider=\"SqlProvider\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Profile.SqlProfileProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static bool Enabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o perfil de usuário estiver habilitado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileManager.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Recupera as informações de perfil para todos os perfis, em que a data da última atividade ocorreu em ou antes da data especificada e hora e o nome de usuário para o perfil corresponde ao nome especificado."
  remarks: "O método FindInactiveProfilesByUserName é usado para recuperar informações de perfil para todos os perfis de usuário não utilizados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Esse método só irá recuperar perfis para o qual o nome de usuário de perfil corresponde fornecido `usernameToMatch` o valor do parâmetro. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas. Perfis pesquisados, de qualquer perfil com um <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>que ocorre em ou antes especificado `userInactiveSinceDate` o valor do parâmetro será retornado.</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       Você pode recuperar essas informações nas páginas de dados usando a sobrecarga para o <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29>método que utiliza adicional `pageIndex` e `pageSize` parâmetros.</xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29>      > [!NOTE] > Seu provedor de perfil pode oferecer suporte a caracteres curinga a `usernameToMatch` parâmetro. Por exemplo, o <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>método o <xref:System.Web.Profile.SqlProfileProvider>classe oferece suporte a caracteres curinga no `usernameToMatch` parâmetro.</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>       As chamadas de método FindInactiveProfilesByUserName o <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName>método do provedor de perfil padrão.</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName> O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis inativos que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A>propriedade e chame o <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>método do provedor diretamente.</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> enumeration value and retrieves profile information for any matching profiles. The sample allows the user to specify whether to return only inactive profiles. If the user specifies only inactive profiles, the FindInactiveProfilesByUserName method is called; otherwise, the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#8](~/add/codesnippet/csharp/02c1131d-855c-4e58-af67-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#8](~/add/codesnippet/visualbasic/02c1131d-855c-4e58-af67-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Uma da <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> valores de enumeração, especificando se anônimo, autenticado ou ambos os tipos de perfis são retornados."
    - id: usernameToMatch
      type: System.String
      description: "O nome de usuário que deseja pesquisar."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "Um <xref:System.DateTime>que identifica quais perfis de usuário são consideradas inativas.</xref:System.DateTime> Se o <xref:System.Web.Profile.ProfileInfo.LastActivityDate*>de um usuário de perfil ocorre em ou antes dessa data e hora, o perfil será considerado inativo.</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Um <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> que contém informações de perfil de usuário de perfis inativos na qual o nome de usuário corresponde fornecido <code> usernameToMatch </code> parâmetro."
  overload: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>é uma cadeia de caracteres vazia (&quot;&quot;)."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Recupera informações de perfil em páginas de dados de perfis em que a data da última atividade ocorreu em ou antes da data especificada e a hora e o nome de usuário para o perfil corresponde ao nome especificado."
  remarks: "O método FindInactiveProfilesByUserName é usado para recuperar informações de perfil para perfis de usuário não utilizados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Esse método só irá recuperar perfis para o qual o nome de usuário corresponde fornecido `usernameToMatch` o valor do parâmetro. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas. Dos perfis de pesquisa, nenhum perfil é retornado, que tem um <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>que ocorre em ou antes especificado `userInactiveSinceDate` o valor do parâmetro.</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       Os resultados retornados por FindInactiveProfilesByUserName são restritas pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Profile.ProfileInfo>objetos para retornar o <xref:System.Web.Profile.ProfileInfoCollection>coleção.</xref:System.Web.Profile.ProfileInfoCollection> </xref:System.Web.Profile.ProfileInfo> O `pageIndex` parâmetro identifica qual página de resultados para retornar; 0 identifica a primeira página. O `totalRecords` parâmetro é um `out` parâmetro que é definido como o número total de perfis de usuário inativo configurado `applicationName`, com base no `authenticationOption` e `userInactiveSinceDate` parâmetros. Por exemplo, se houver 13 usuários configurado `applicationName`e o `pageIndex` valor é 1, com um `pageSize` de 5, o <xref:System.Web.Profile.ProfileInfoCollection>retornado será contém da sexta os perfis inativos décimo.</xref:System.Web.Profile.ProfileInfoCollection> O `totalRecords` parâmetro será definido como 13.       Observe que o provedor de perfil pode oferecer suporte a caracteres curinga no `usernameToMatch` parâmetro. Por exemplo, o <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>método o <xref:System.Web.Profile.SqlProfileProvider>classe oferece suporte a caracteres curinga no `usernameToMatch` parâmetro.</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>       As chamadas de método FindInactiveProfilesByUserName o <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>método do provedor de perfil padrão.</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis inativos que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A>propriedade e chame o <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>método do provedor diretamente.</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> value and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the FindInactiveProfilesByUserName method is called; otherwise, the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/8901892e-7654-4efd-b373-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/8901892e-7654-4efd-b373-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Uma da <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> valores, especificando se anônimo, autenticado ou ambos os tipos de perfis são retornados."
    - id: usernameToMatch
      type: System.String
      description: "O nome de usuário que deseja pesquisar."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "Um <xref:System.DateTime>que identifica quais perfis de usuário são consideradas inativas.</xref:System.DateTime> Se o <xref:System.Web.Profile.ProfileInfo.LastActivityDate*>de um usuário de perfil ocorre em ou antes dessa data e hora, o perfil será considerado inativo.</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    - id: pageIndex
      type: System.Int32
      description: "O índice da página de resultados a serem retornados. `pageIndex`é baseado em zero."
    - id: pageSize
      type: System.Int32
      description: "O tamanho da página de resultados a serem retornados."
    - id: totalRecords
      type: System.Int32
      description: "Quando este método retorna, contém um número inteiro que identifica o número total de perfis. Esse parâmetro é passado não inicializado."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Um <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> que contém informações de perfil de usuário de perfis inativos em que o nome de usuário corresponde fornecido <code> usernameToMatch </code> parâmetro."
  overload: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindProfilesByUserName(ProfileAuthenticationOption,String)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Recupera todas as informações de perfil para perfis de que o nome de usuário corresponde ao nome especificado."
  remarks: "O método FindProfilesByUserName retorna uma lista de todas as informações de perfil para o qual o nome de usuário corresponde fornecido `usernameToMatch` valor do parâmetro configurado <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>valor da propriedade.</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas.       Você pode recuperar informações de perfil para perfis de usuário em páginas de dados usando a sobrecarga para o <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>método que utiliza adicional `pageIndex` e `pageSize` parâmetros.</xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>       Observe que o provedor de perfil pode oferecer suporte a caracteres curinga no `usernameToMatch` parâmetro. Por exemplo, o <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>método o <xref:System.Web.Profile.SqlProfileProvider>classe oferece suporte a caracteres curinga no `usernameToMatch` parâmetro.</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>       As chamadas de método FindProfilesByUserName o <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>método do provedor de perfil padrão.</xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A>propriedade e chame o <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>método do provedor diretamente.</xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> enumeration value and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method is called; otherwise, the FindProfilesByUserName method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#8](~/add/codesnippet/csharp/31ac7eb6-b35d-45af-a76d-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#8](~/add/codesnippet/visualbasic/31ac7eb6-b35d-45af-a76d-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Uma da <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> valores de enumeração, especificando se anônimo, autenticado ou ambos os tipos de perfis são retornados."
    - id: usernameToMatch
      type: System.String
      description: "O nome de usuário que deseja pesquisar."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Um <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> contendo informações de perfil de usuário para perfis de onde o nome de usuário corresponde fornecido <code> usernameToMatch </code> parâmetro."
  overload: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>é uma cadeia de caracteres vazia (&quot;&quot;)."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Recupera informações de perfil em páginas de dados para os perfis na qual o nome de usuário corresponde o nome especificado."
  remarks: "O <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>método retorna uma lista de informações de perfil para o qual o nome de usuário de perfil corresponde fornecido `usernameToMatch` valor do parâmetro de configurado <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>.</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> </xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas.       Observe que o provedor de perfil pode oferecer suporte a caracteres curinga no `usernameToMatch` parâmetro. Por exemplo, o <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>método o <xref:System.Web.Profile.SqlProfileProvider>classe oferece suporte a caracteres curinga no `usernameToMatch` parâmetro.</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>       Os resultados retornados por FindProfilesByUserName são restritas pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Profile.ProfileInfo>objetos a serem retornadas em <xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection> </xref:System.Web.Profile.ProfileInfo> O `pageIndex` parâmetro identifica qual página de resultados para retornar; zero identifica a primeira página. O `totalRecords` parâmetro é um `out` que é definido como o número total de perfis de usuário inativo para o aplicativo especificado pelo parâmetro de `applicationName` atributo no arquivo de configuração, com base em fornecido `authenticationOption`. Por exemplo, se houver 13 usuários configurado `applicationName`e o `pageIndex` valor é 1, com um `pageSize` de 5, o <xref:System.Web.Profile.ProfileInfoCollection>retornado será contêm o perfis sexto até os décimo.</xref:System.Web.Profile.ProfileInfoCollection> O `totalRecords` parâmetro será definido como 13.       O <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>chamadas de método de <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>método do provedor de perfil padrão.</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A>propriedade e chame o <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>método do provedor diretamente.</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method is called; otherwise, the FindProfilesByUserName method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/3375ceaa-fae5-498d-b74c-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/3375ceaa-fae5-498d-b74c-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Uma da <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> valores de enumeração, especificando se anônimo, autenticado ou ambos os tipos de perfis são retornados."
    - id: usernameToMatch
      type: System.String
      description: "O nome de usuário que deseja pesquisar."
    - id: pageIndex
      type: System.Int32
      description: "O índice da página de resultados a serem retornados. `pageIndex`é baseado em zero."
    - id: pageSize
      type: System.Int32
      description: "O tamanho da página de resultados a serem retornados."
    - id: totalRecords
      type: System.Int32
      description: "Quando este método retorna, contém um número inteiro que identifica o número total de perfis. Esse parâmetro é passado não inicializado."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Um <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> contendo informações de perfil de usuário para perfis de onde o nome de usuário corresponde fornecido <code> usernameToMatch </code> parâmetro."
  overload: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Recupera todos os dados de perfil de usuário para os perfis em que a data da última atividade ocorreu em ou antes da data e hora especificadas."
  remarks: "O método GetAllInactiveProfiles é usado para recuperar informações de perfil da fonte de dados para todos os perfis de usuário não utilizados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas. Dos perfis de pesquisa, nenhum perfil é retornado, que tem um <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>que ocorre em ou antes especificado `userInactiveSinceDate` o valor do parâmetro.</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       Você pode recuperar informações de perfil para perfis de usuário inativo em páginas de dados usando a sobrecarga para o <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>método que utiliza adicional `pageIndex` e `pageSize` parâmetros.</xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>       As chamadas de método GetAllInactiveProfiles o <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>método do provedor de perfil padrão.</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis não utilizados que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A>propriedade e chame o <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>método do provedor diretamente.</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all inactive profiles. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#7](~/add/codesnippet/csharp/12596197-85de-46bb-89a0-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#7](~/add/codesnippet/visualbasic/12596197-85de-46bb-89a0-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Uma da <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> valores de enumeração, especificando se anônimo, autenticado ou ambos os tipos de perfis são retornados."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "Um <xref:System.DateTime>que identifica quais perfis de usuário são consideradas inativas.</xref:System.DateTime> Se o <xref:System.Web.Profile.ProfileInfo.LastActivityDate*>de um usuário de perfil ocorre em ou antes dessa data e hora, o perfil será considerado inativo.</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Um <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> que contém informações de perfil do usuário sobre os perfis inativos."
  overload: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Recupera uma página de <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> objetos para perfis de usuário em que a data da última atividade ocorreu em ou antes da data e hora especificadas."
  remarks: "O método GetAllInactiveProfiles é usado para recuperar informações de perfil da fonte de dados não utilizados para perfis de usuário para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas. Dos perfis de pesquisa, nenhum perfil é retornado, que tem um <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>que ocorre antes do especificado `userInactiveSinceDate` o valor do parâmetro.</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       Os resultados retornados por GetAllInactiveProfiles são restritas pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Profile.ProfileInfo>objetos a serem retornadas em <xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection> </xref:System.Web.Profile.ProfileInfo> O `pageIndex` parâmetro identifica qual página de resultados para retornar; zero identifica a primeira página. O `totalRecords` parâmetro é um `out` parâmetro que é definido como o número total de perfis de usuário inativo configurado `applicationName`, com base no `authenticationOption` e `userInactiveSinceDate` parâmetros. Por exemplo, se houver 13 usuários configurado `applicationName`e o `pageIndex` valor é uma com um `pageSize` de 5, o <xref:System.Web.Profile.ProfileInfoCollection>retornado será contém da sexta os perfis inativos décimo.</xref:System.Web.Profile.ProfileInfoCollection> O `totalRecords` parâmetro será definido como 13.       As chamadas de método GetAllInactiveProfiles o <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>método do provedor de perfil padrão.</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A>propriedade e chame o <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>método do provedor diretamente.</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET Web page that manages inactive profiles. A button is provided to delete all inactive profiles. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/40315987-b58d-4459-883e-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/40315987-b58d-4459-883e-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Uma da <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> valores de enumeração, especificando se anônimo, autenticado ou ambos os tipos de perfis são retornados."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "Um <xref:System.DateTime>que identifica quais perfis de usuário são consideradas inativas.</xref:System.DateTime> Se o <xref:System.Web.Profile.ProfileInfo.LastActivityDate*>de um usuário de perfil ocorre em ou antes dessa data e hora, o perfil será considerado inativo.</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    - id: pageIndex
      type: System.Int32
      description: "O índice da página de resultados a serem retornados. `pageIndex`é baseado em zero."
    - id: pageSize
      type: System.Int32
      description: "O tamanho da página de resultados a serem retornados."
    - id: totalRecords
      type: System.Int32
      description: "Quando este método retorna, contém um número inteiro que identifica o número total de perfis. Esse parâmetro é passado não inicializado."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Um <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> que contém informações de perfil do usuário sobre os perfis inativos."
  overload: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Recupera dados de perfil de usuário para os perfis na fonte de dados."
  remarks: "O método GetAllProfiles é usado para recuperar informações de perfil da fonte de dados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas.       Você pode recuperar as páginas de <xref:System.Web.Profile.ProfileInfo>objetos para perfis de usuário usando a sobrecarga para o <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>método que utiliza adicional `pageIndex` e `pageSize` parâmetros.</xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileInfo>       As chamadas de método GetAllProfiles o <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>método do provedor de perfil padrão.</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A>propriedade e chame o <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>método do provedor diretamente.</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName`.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#6](~/add/codesnippet/csharp/14cc8f0b-52b7-434e-bc19-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#6](~/add/codesnippet/visualbasic/14cc8f0b-52b7-434e-bc19-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Uma da <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> valores de enumeração, especificando se anônimo, autenticado ou ambos os tipos de perfis são retornados."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Um <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> contendo informações de perfil de usuário para todos os perfis na fonte de dados."
  overload: System.Web.Profile.ProfileManager.GetAllProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Recupera as páginas de dados de perfil de usuário."
  remarks: "O método GetAllProfiles é usado para recuperar informações de perfil da fonte de dados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas.       Os resultados retornados por <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>são restritas pelo `pageIndex` e `pageSize` parâmetros.</xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Profile.ProfileInfo>objetos a serem retornadas em <xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection> </xref:System.Web.Profile.ProfileInfo> O `pageIndex` parâmetro identifica qual página de resultados para retornar; zero identifica a primeira página. O `totalRecords` parâmetro é um `out` parâmetro que é definido como o número total de perfis de usuário inativo configurado `applicationName`, com base no fornecido `authenticationOption`. Por exemplo, se houver 13 usuários configurado `applicationName`e o `pageIndex` valor é uma com um `pageSize` de 5, o <xref:System.Web.Profile.ProfileInfoCollection>retornado será contêm o perfis sexto até os décimo.</xref:System.Web.Profile.ProfileInfoCollection> O `totalRecords` parâmetro será definido como 13.       As chamadas de método GetAllProfiles o <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>método do provedor de perfil padrão.</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A>propriedade e chame o <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>método do provedor diretamente.</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName` in pages of data.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#3](~/add/codesnippet/csharp/3142f281-fd51-44c5-967b-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#3](~/add/codesnippet/visualbasic/3142f281-fd51-44c5-967b-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Uma da <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> valores de enumeração, especificando se anônimo, autenticado ou ambos os tipos de perfis são retornados."
    - id: pageIndex
      type: System.Int32
      description: "O índice da página de resultados a serem retornados. `pageIndex`é baseado em zero."
    - id: pageSize
      type: System.Int32
      description: "O tamanho da página de resultados a serem retornados."
    - id: totalRecords
      type: System.Int32
      description: "Quando este método retorna, contém um número inteiro que identifica o número total de perfis. Esse parâmetro é passado não inicializado."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Um <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> contendo informações de perfil de usuário para todos os perfis na fonte de dados."
  overload: System.Web.Profile.ProfileManager.GetAllProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém o número de perfis no qual ocorreu a última data de atividade em ou antes da data especificada."
  remarks: "O método GetNumberOfInactiveProfiles é usado para recuperar a contagem de todos os perfis de usuário não utilizados da fonte de dados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas. Perfis pesquisados, de todos os perfis são contados que têm um <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>que ocorre em ou antes especificado `userInactiveSinceDate` o valor do parâmetro.</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>"
  example:
  - "The following code example allows a user to view and delete information for active and inactive profiles based on search criteria. A count of inactive profiles is displayed using the results of the GetNumberOfInactiveProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/456bb4d7-dc47-48d9-b96d-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/456bb4d7-dc47-48d9-b96d-_1.aspx)]"
  syntax:
    content: public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Uma da <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> valores de enumeração, especificando se anônimo, autenticado ou ambos os tipos de perfis são retornados."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "Um <xref:System.DateTime>objeto que identifica quais perfis de usuário são consideradas inativas.</xref:System.DateTime> Se o <xref:System.Web.Profile.ProfileInfo.LastActivityDate*>de um usuário de perfil ocorre em ou antes dessa data e hora, o perfil será considerado inativo.</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Int32
      description: "O número de perfis na fonte de dados para o qual a data da última atividade ocorreu antes da data e hora especificadas."
  overload: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  id: GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetNumberOfProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém o número de perfis na fonte de dados."
  remarks: "O método GetNumberOfProfiles é usado para recuperar a contagem de todos os perfis de usuário da fonte de dados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas."
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName` and also returns the number of profiles.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#6](~/add/codesnippet/csharp/754e4c9f-e8cb-4da5-b2cc-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#6](~/add/codesnippet/visualbasic/754e4c9f-e8cb-4da5-b2cc-_1.aspx)]"
  syntax:
    content: public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Uma da <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> valores de enumeração, especificando se anônimo, autenticado ou ambos os tipos de perfis são retornados."
    return:
      type: System.Int32
      description: "O número de perfis na fonte de dados."
  overload: System.Web.Profile.ProfileManager.GetNumberOfProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Provider
  id: Provider
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Provider
  nameWithType: ProfileManager.Provider
  fullName: System.Web.Profile.ProfileManager.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém uma referência para o provedor de perfil padrão para o aplicativo."
  remarks: "A propriedade do provedor permite que você referenciar o provedor de perfil padrão para um aplicativo diretamente. Isso é normalmente usado para acessar membros personalizados do provedor de perfil que não fazem parte de <xref:System.Web.Profile.ProfileProvider>classe base abstrata.</xref:System.Web.Profile.ProfileProvider>"
  example:
  - "The following code example lists properties of the default profile provider.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_6_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#2](~/add/codesnippet/csharp/p-system.web.profile.pro_6_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileProvider Provider { get; }
    return:
      type: System.Web.Profile.ProfileProvider
      description: "O provedor de perfil padrão para o aplicativo."
  overload: System.Web.Profile.ProfileManager.Provider*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Foi feita uma tentativa de obter o valor da propriedade de provedor pelo menos <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> permissão."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Providers
  id: Providers
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Providers
  nameWithType: ProfileManager.Providers
  fullName: System.Web.Profile.ProfileManager.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém uma coleção de provedores de perfil para o aplicativo ASP.NET."
  remarks: "A propriedade provedores faz referência a todos os provedores de perfil habilitados para um aplicativo, incluindo provedores adicionada na configuração de máquina e provedores adicionados em todos os arquivos Web. config. Você pode controlar qual perfil provedores estão disponíveis para um aplicativo usando o elemento da seção no arquivo de configuração. Por exemplo, o arquivo Web. config a seguir remove os provedores de perfil especificados nos arquivos de configuração pai e adiciona um <xref:System.Web.Profile.SqlProfileProvider>instância como o provedor de perfil para o aplicativo.</xref:System.Web.Profile.SqlProfileProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=         &quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <profile enabled=&quot;true&quot; defaultProvider=&quot;SqlProvider&quot;>         <providers>           <clear />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Profile.SqlProfileProvider&quot;             connectionStringName=&quot;SqlServices&quot;             applicationName=&quot;MyApplication&quot; />         </providers>       </profile>     </system.web>   </configuration>   ```Ao especificar a seção, você deve especificar um provedor padrão definindo o `defaultProvider` atributo. Se você não especificar uma seção no arquivo Web. config, os valores de configuração do computador são usados e o <xref:System.Web.Profile.SqlProfileProvider>instância nomeada AspNetSqlProvider for estabelecida como o provedor padrão.</xref:System.Web.Profile.SqlProfileProvider>       Você pode obter uma referência com rigidez de tipos para um provedor da coleção de provedores por indexação o provedor de perfil por nome e convertê-la como o tipo desejado."
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#9](~/add/codesnippet/visualbasic/p-system.web.profile.pro_5_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#9](~/add/codesnippet/csharp/p-system.web.profile.pro_5_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileProviderCollection Providers { get; }
    return:
      type: System.Web.Profile.ProfileProviderCollection
      description: "Um <xref href=&quot;System.Web.Profile.ProfileProviderCollection&quot;> </xref> dos provedores de perfil configurados para o aplicativo ASP.NET."
  overload: System.Web.Profile.ProfileManager.Providers*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Foi feita uma tentativa de obter o valor da propriedade provedores pelo menos <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> permissão."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AddDynamicProfileProperty(ProfilePropertySettings)
  nameWithType: ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  fullName: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
- uid: System.Web.Configuration.ProfilePropertySettings
  parent: System.Web.Configuration
  isExternal: false
  name: ProfilePropertySettings
  nameWithType: ProfilePropertySettings
  fullName: System.Web.Configuration.ProfilePropertySettings
- uid: System.Web.Profile.ProfileManager.ApplicationName
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
  fullName: System.Web.Profile.ProfileManager.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
  fullName: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Profile.ProfileAuthenticationOption
  parent: System.Web.Profile
  isExternal: false
  name: ProfileAuthenticationOption
  nameWithType: ProfileAuthenticationOption
  fullName: System.Web.Profile.ProfileAuthenticationOption
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfile(String)
  nameWithType: ProfileManager.DeleteProfile(String)
  fullName: System.Web.Profile.ProfileManager.DeleteProfile(String)
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles(String[])
  nameWithType: ProfileManager.DeleteProfiles(String[])
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: ProfileManager.DeleteProfiles(ProfileInfoCollection)
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(ProfileInfoCollection)
- uid: System.Web.Profile.ProfileInfoCollection
  parent: System.Web.Profile
  isExternal: false
  name: ProfileInfoCollection
  nameWithType: ProfileInfoCollection
  fullName: System.Web.Profile.ProfileInfoCollection
- uid: System.Web.Profile.ProfileManager.Enabled
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Enabled
  nameWithType: ProfileManager.Enabled
  fullName: System.Web.Profile.ProfileManager.Enabled
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName(ProfileAuthenticationOption,String)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
- uid: System.Web.Profile.ProfileManager.Provider
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Provider
  nameWithType: ProfileManager.Provider
  fullName: System.Web.Profile.ProfileManager.Provider
- uid: System.Web.Profile.ProfileProvider
  parent: System.Web.Profile
  isExternal: false
  name: ProfileProvider
  nameWithType: ProfileProvider
  fullName: System.Web.Profile.ProfileProvider
- uid: System.Web.Profile.ProfileManager.Providers
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Providers
  nameWithType: ProfileManager.Providers
  fullName: System.Web.Profile.ProfileManager.Providers
- uid: System.Web.Profile.ProfileProviderCollection
  parent: System.Web.Profile
  isExternal: false
  name: ProfileProviderCollection
  nameWithType: ProfileProviderCollection
  fullName: System.Web.Profile.ProfileProviderCollection
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AddDynamicProfileProperty
  nameWithType: ProfileManager.AddDynamicProfileProperty
- uid: System.Web.Profile.ProfileManager.ApplicationName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteInactiveProfiles
  nameWithType: ProfileManager.DeleteInactiveProfiles
- uid: System.Web.Profile.ProfileManager.DeleteProfile*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfile
  nameWithType: ProfileManager.DeleteProfile
- uid: System.Web.Profile.ProfileManager.DeleteProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles
  nameWithType: ProfileManager.DeleteProfiles
- uid: System.Web.Profile.ProfileManager.Enabled*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Enabled
  nameWithType: ProfileManager.Enabled
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName
  nameWithType: ProfileManager.FindInactiveProfilesByUserName
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName
  nameWithType: ProfileManager.FindProfilesByUserName
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles
  nameWithType: ProfileManager.GetAllInactiveProfiles
- uid: System.Web.Profile.ProfileManager.GetAllProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles
  nameWithType: ProfileManager.GetAllProfiles
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfInactiveProfiles
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfProfiles
  nameWithType: ProfileManager.GetNumberOfProfiles
- uid: System.Web.Profile.ProfileManager.Provider*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Provider
  nameWithType: ProfileManager.Provider
- uid: System.Web.Profile.ProfileManager.Providers*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Providers
  nameWithType: ProfileManager.Providers
