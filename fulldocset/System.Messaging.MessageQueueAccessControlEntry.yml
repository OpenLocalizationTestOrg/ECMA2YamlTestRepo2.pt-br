### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessageQueueAccessControlEntry
  id: MessageQueueAccessControlEntry
  children:
  - System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)
  - System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)
  - System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
  langs:
  - csharp
  name: MessageQueueAccessControlEntry
  nameWithType: MessageQueueAccessControlEntry
  fullName: System.Messaging.MessageQueueAccessControlEntry
  type: Class
  summary: "Especifica os direitos de acesso para um objeto de confiança (usuário, grupo ou computador) para executar tarefas de enfileiramento de mensagens."
  remarks: "Use the MessageQueueAccessControlEntry class to specify rights to apply to a trustee. These rights include peeking, receiving, or sending messages; viewing or modifying queue properties or permissions; and deleting queues. The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.SetPermissions%2A> method provides overloads for passing an instance of this class directly into the method, or adding it to an instance of <xref:System.Messaging.AccessControlList> so that you can add rights for more than one trustee at a time. The new access right is appended to the end of the queue's discretionary access control list (DACL), which identifies the users and groups that can access the queue.  \n  \n There are some exceptions to this generalization about where the new right is added and its effects. For more information, see <xref:System.Messaging>.  \n  \n An overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor allows you specify a <xref:System.Messaging.AccessControlEntryType> member to indicate whether to allow or deny rights to the trustee. The order in which rights are allowed or denied in the resource's DACL affects whether the trustee has the specified rights. For example, if rights have already been granted to the trustee and you later add an entry that denies them, the system finds the granted rights first, so the user is granted rights you might have intended they be denied. You can use two entry types to override this behavior: `Set` and `Revoke`. For more information about controlling the way in which access rights are determined, see the <xref:System.Messaging.AccessControlEntryType> enumeration topic.  \n  \n The MessageQueueAccessControlEntry class is associated with security based on access control lists (ACLs), which you can use to give users access to the Message Queuing system itself. This is different from code access security, which is implemented through the <xref:System.Messaging.MessageQueuePermission> and related classes. Message Queuing code access security defines queue-specific operations or queue access that an application might require which is subject to security control; it does not represent a right for the application to perform these operations or receive access in and of itself. See the topic [&#91;\\<topic://cpconcodeaccesssecurity>&#93;](http://msdn.microsoft.com/en-us/23a20143-241d-4fe5-9d9f-3933fd594c03) for more information about code access security.  \n  \n To set message queue permissions for a trustee, create a new instance of the <xref:System.Messaging.AccessControlEntry.Trustee%2A> class and pass it into an overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor. Specify the message queue access rights either by passing an instance of <xref:System.Messaging.MessageQueueAccessRights> into the constructor or by setting the <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property on an existing MessageQueueAccessControlEntry instance.  \n  \n You can then pass the MessageQueueAccessControlEntry instance directly to the <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName> method, or alternately add the entry to an instance of <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A>."
  syntax:
    content: 'public class MessageQueueAccessControlEntry : System.Messaging.AccessControlEntry'
  inheritance:
  - System.Object
  - System.Messaging.AccessControlEntry
  implements: []
  inheritedMembers:
  - System.Messaging.AccessControlEntry.CustomAccessRights
  - System.Messaging.AccessControlEntry.EntryType
  - System.Messaging.AccessControlEntry.GenericAccessRights
  - System.Messaging.AccessControlEntry.StandardAccessRights
  - System.Messaging.AccessControlEntry.Trustee
  platform:
  - net462
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)
  id: '#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)'
  parent: System.Messaging.MessageQueueAccessControlEntry
  langs:
  - csharp
  name: MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Messaging.MessageQueueAccessControlEntry&quot;> </xref> classe, concedendo direitos de acesso a especificado enfileiramento de mensagens para o objeto de confiança especificado."
  remarks: "Use essa sobrecarga de construtor para conceder direitos para o objeto de confiança especificado. Os direitos que você especificar na `rights` parâmetro são uma combinação bit a bit de membros a <xref:System.Messaging.MessageQueueAccessRights>sinalizador de bit, o que inclui esses direitos de recebimento de mensagens, excluir filas e definir propriedades de fila.</xref:System.Messaging.MessageQueueAccessRights> O construtor usa os direitos que você transmitir para definir essa instância <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A>propriedade.</xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A>       Passar essa instância de <xref:System.Messaging.MessageQueueAccessControlEntry>diretamente em uma sobrecarga o <xref:System.Messaging.MessageQueue.SetPermissions%2A>método para conceder direitos somente para esse objeto de confiança ou adicionar essa instância para um <xref:System.Messaging.AccessControlList>antes de chamar <xref:System.Messaging.MessageQueue.SetPermissions%2A>para conceder ou negar direitos para vários objetos de confiança ao mesmo tempo.</xref:System.Messaging.MessageQueue.SetPermissions%2A> </xref:System.Messaging.AccessControlList> </xref:System.Messaging.MessageQueue.SetPermissions%2A> </xref:System.Messaging.MessageQueueAccessControlEntry>"
  syntax:
    content: public MessageQueueAccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.MessageQueueAccessRights rights);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "Um <xref href=&quot;System.Messaging.Trustee&quot;> </xref> que especifica um usuário, grupo, computador, domínio ou alias."
    - id: rights
      type: System.Messaging.MessageQueueAccessRights
      description: "Uma combinação bit a bit do <xref href=&quot;System.Messaging.MessageQueueAccessRights&quot;> </xref> valores que define a combinação de direitos de conceder ao objeto de confiança."
  overload: System.Messaging.MessageQueueAccessControlEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)
  id: '#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)'
  parent: System.Messaging.MessageQueueAccessControlEntry
  langs:
  - csharp
  name: MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Messaging.MessageQueueAccessControlEntry&quot;> </xref> classe com o objeto de confiança especificado e direitos de acesso de enfileiramento de mensagens. O tipo de acesso (como <xref uid=&quot;langword_csharp_Allow&quot; name=&quot;Allow&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_Deny&quot; name=&quot;Deny&quot; href=&quot;&quot;> </xref>) é definido pelo tipo de entrada que você transmitir."
  remarks: "Use essa sobrecarga de construtor para conceder ou negar direitos para o objeto de confiança especificado. Os direitos que você especificar na `rights` parâmetro são uma combinação bit a bit de membros a <xref:System.Messaging.MessageQueueAccessRights>sinalizador de bit, o que inclui esses direitos de recebimento de mensagens, excluir filas e definir propriedades de fila.</xref:System.Messaging.MessageQueueAccessRights> O construtor usa os direitos que você transmitir para definir essa instância <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A>propriedade.</xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A>       Para obter mais informações sobre como conceder ou negar direitos, consulte o <xref:System.Messaging.AccessControlEntryType>tópico.</xref:System.Messaging.AccessControlEntryType> Para dois membros, `Allow` e `Deny`, pode haver preexistentes e possivelmente contraditório os direitos de acesso, portanto a ordem na qual os direitos aparecem na lista de controle de acesso discricionário (DACL) da fila afeta se o direito é concedido, por fim. Dois membros, `Set` e `Revoke`, substituir quaisquer direitos existentes. Use o membro cujo comportamento é aplicável ao seu aplicativo.       Passar essa instância de <xref:System.Messaging.MessageQueueAccessControlEntry>diretamente em uma sobrecarga o <xref:System.Messaging.MessageQueue.SetPermissions%2A>método para conceder ou negar direitos somente para esse objeto de confiança ou adicionar essa instância para um <xref:System.Messaging.AccessControlList>antes de chamar <xref:System.Messaging.MessageQueue.SetPermissions%2A>para conceder ou negar direitos para vários objetos de confiança ao mesmo tempo.</xref:System.Messaging.MessageQueue.SetPermissions%2A> </xref:System.Messaging.AccessControlList> </xref:System.Messaging.MessageQueue.SetPermissions%2A> </xref:System.Messaging.MessageQueueAccessControlEntry>"
  syntax:
    content: public MessageQueueAccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.MessageQueueAccessRights rights, System.Messaging.AccessControlEntryType entryType);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "Um <xref href=&quot;System.Messaging.Trustee&quot;> </xref> que especifica um usuário, grupo, computador, domínio ou alias."
    - id: rights
      type: System.Messaging.MessageQueueAccessRights
      description: "Uma combinação bit a bit do <xref href=&quot;System.Messaging.MessageQueueAccessRights&quot;> </xref> valores que define a combinação de direitos de conceder ao objeto de confiança."
    - id: entryType
      type: System.Messaging.AccessControlEntryType
      description: "Uma da <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> valores, que especifica se deve permitir, negar, defina ou revogar os direitos especificados."
  overload: System.Messaging.MessageQueueAccessControlEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
  id: MessageQueueAccessRights
  parent: System.Messaging.MessageQueueAccessControlEntry
  langs:
  - csharp
  name: MessageQueueAccessRights
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessRights
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define o conjunto de direitos específicos de enfileiramento de mensagens de mensagem para aplicar ao objeto de confiança."
  remarks: "A propriedade MessageQueueAccessRights permite que você especifique o Message Queuing direitos de objeto específicos como receber, inspecionar, ou gravar mensagens ou definir propriedades de fila. O valor dessa propriedade é definido pelo <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A>construtor, mas você pode alterá-la a qualquer momento antes de usar essa instância <xref:System.Messaging.MessageQueueAccessControlEntry>em uma chamada para <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName>.</xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName> </xref:System.Messaging.MessageQueueAccessControlEntry> </xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A>"
  syntax:
    content: public System.Messaging.MessageQueueAccessRights MessageQueueAccessRights { get; set; }
    return:
      type: System.Messaging.MessageQueueAccessRights
      description: "Uma combinação bit a bit do <xref href=&quot;System.Messaging.MessageQueueAccessRights&quot;> </xref> membros. O padrão é definido pelo <code> rights </code> parâmetro passado para o construtor."
  overload: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Messaging.AccessControlEntry
  isExternal: false
  name: System.Messaging.AccessControlEntry
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
- uid: System.Messaging.Trustee
  parent: System.Messaging
  isExternal: false
  name: Trustee
  nameWithType: Trustee
  fullName: System.Messaging.Trustee
- uid: System.Messaging.MessageQueueAccessRights
  parent: System.Messaging
  isExternal: false
  name: MessageQueueAccessRights
  nameWithType: MessageQueueAccessRights
  fullName: System.Messaging.MessageQueueAccessRights
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
- uid: System.Messaging.AccessControlEntryType
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntryType
  nameWithType: AccessControlEntryType
  fullName: System.Messaging.AccessControlEntryType
- uid: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessRights
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessRights
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor*
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessControlEntry
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry
- uid: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights*
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessRights
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessRights
