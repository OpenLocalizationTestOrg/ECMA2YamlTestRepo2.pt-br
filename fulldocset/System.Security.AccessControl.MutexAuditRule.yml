### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.MutexAuditRule
  id: MutexAuditRule
  children:
  - System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.MutexAuditRule.MutexRights
  langs:
  - csharp
  name: MutexAuditRule
  nameWithType: MutexAuditRule
  fullName: System.Security.AccessControl.MutexAuditRule
  type: Class
  summary: "Representa um conjunto de direitos de acesso a serem auditados para um usuário ou grupo. Essa classe não pode ser herdada."
  remarks: "A classe MutexAuditRule é parte de um conjunto de classes do .NET Framework fornece para gerenciar a segurança de controle de acesso do Windows no sistema nomeado mutexes. Para obter uma visão geral dessas classes e suas relações com as estruturas de controle de acesso subjacentes do Windows, consulte <xref:System.Security.AccessControl.MutexSecurity>.</xref:System.Security.AccessControl.MutexSecurity>      > [!NOTE] > Windows segurança de controle de acesso é significativa apenas para denominado mutexes do sistema. Se um <xref:System.Threading.Mutex>objeto representa um mutex local, o controle de acesso é irrelevante.</xref:System.Threading.Mutex>       Para obter uma lista das regras de auditoria aplicadas a um mutex nomeado, use o <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=fullName>método para obter um <xref:System.Security.AccessControl.MutexSecurity>objeto e, em seguida, use seu <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A>método para obter uma coleção de objetos MutexAuditRule.</xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> </xref:System.Security.AccessControl.MutexSecurity> </xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=fullName>       Objetos MutexAuditRule não mapeiam um para um com entradas de controle de acesso na lista de controle de acesso discricionário (DACL) subjacente. Ao obter o conjunto de todas as regras para um mutex de auditoria, o conjunto contém o número mínimo de regras necessárias no momento para expressar todas as entradas de controle de acesso.      > [!NOTE] > As entradas de controle de acesso subjacente alterar como aplicar e remover regras. As informações nas regras são mescladas se possível, para manter o menor número de entradas de controle de acesso. Assim, ao ler a lista atual de regras, ele pode não ser exatamente igual a lista de todas as regras que você adicionou.       Use objetos de MutexAuditRule para especificar os direitos de acesso a serem auditados para um usuário ou grupo. Para aplicar uma regra a um mutex do sistema nomeado, use o <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName>método para obter o <xref:System.Security.AccessControl.MutexSecurity>objeto.</xref:System.Security.AccessControl.MutexSecurity> </xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> Modificar o <xref:System.Security.AccessControl.MutexSecurity>objeto por meio de seus métodos para adicionar a regra e, em seguida, use o <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName>método para anexar novamente o objeto de segurança.</xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.MutexSecurity>      > [!IMPORTANT] > Alterações feitas em um <xref:System.Security.AccessControl.MutexSecurity>objeto não afetam os níveis de acesso do mutex nomeado até que você chamar o <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName>método para atribuir o objeto de segurança alterado o mutex nomeado.</xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.MutexSecurity>       Objetos MutexAuditRule são imutáveis. Segurança para um mutex é modificada usando os métodos do <xref:System.Security.AccessControl.MutexSecurity>classe para adicionar ou remover regras; como você faz isso, as entradas de controle de acesso subjacentes são modificadas.</xref:System.Security.AccessControl.MutexSecurity>      > [!NOTE] > Segurança em objetos de sincronização não é suportada para Windows 98 ou Windows Millennium Edition."
  syntax:
    content: 'public sealed class MutexAuditRule : System.Security.AccessControl.AuditRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.MutexAuditRule
  langs:
  - csharp
  name: MutexAuditRule(IdentityReference,MutexRights,AuditFlags)
  nameWithType: MutexAuditRule.MutexAuditRule(IdentityReference,MutexRights,AuditFlags)
  fullName: System.Security.AccessControl.MutexAuditRule.MutexAuditRule(IdentityReference,MutexRights,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.MutexAuditRule&quot;> </xref> classe, especificando o usuário ou grupo de auditoria, os direitos de auditoria e se a auditoria de êxito, falha ou ambos."
  remarks: "Para criar um <xref:System.Security.Principal.NTAccount>do objeto de uma cadeia de caracteres que representa um nome de usuário ou grupo, use o <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName>construtor.</xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> </xref:System.Security.Principal.NTAccount>"
  syntax:
    content: public MutexAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "O usuário ou grupo que a regra se aplica. Deve ser do tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> ou um tipo, como <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> que pode ser convertido no tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
    - id: eventRights
      type: System.Security.AccessControl.MutexRights
      description: "Uma combinação bit a bit de <xref href=&quot;System.Security.AccessControl.MutexRights&quot;> </xref> valores que especificam os tipos de acesso para auditoria."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Uma combinação bit a bit de <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> valores que especificam se a auditoria de êxito, falha ou ambos."
  overload: System.Security.AccessControl.MutexAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>Especifica um valor inválido.       - ou - <code>flags</code> Especifica um valor inválido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>eventRights</code> é zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>não é nem do tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> nem de um tipo como <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> que pode ser convertido no tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.MutexAuditRule.MutexRights
  id: MutexRights
  parent: System.Security.AccessControl.MutexAuditRule
  langs:
  - csharp
  name: MutexRights
  nameWithType: MutexAuditRule.MutexRights
  fullName: System.Security.AccessControl.MutexAuditRule.MutexRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Obtém os direitos de acesso afetados pela regra de auditoria."
  remarks: "<xref:System.Security.AccessControl.MutexAuditRule>os objetos são imutáveis.</xref:System.Security.AccessControl.MutexAuditRule> Você pode criar uma nova regra de auditoria que representa um usuário diferente, direitos diferentes ou uma combinação diferente de <xref:System.Security.AccessControl.AuditFlags>sinalizadores, mas você não pode modificar uma regra de auditoria existente.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public System.Security.AccessControl.MutexRights MutexRights { get; }
    return:
      type: System.Security.AccessControl.MutexRights
      description: "Uma combinação bit a bit de <xref href=&quot;System.Security.AccessControl.MutexRights&quot;> </xref> valores que indicam os direitos afetados pela regra de auditoria."
  overload: System.Security.AccessControl.MutexAuditRule.MutexRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AuditRule
  isExternal: false
  name: System.Security.AccessControl.AuditRule
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.MutexAuditRule
  isExternal: false
  name: MutexAuditRule(IdentityReference,MutexRights,AuditFlags)
  nameWithType: MutexAuditRule.MutexAuditRule(IdentityReference,MutexRights,AuditFlags)
  fullName: System.Security.AccessControl.MutexAuditRule.MutexAuditRule(IdentityReference,MutexRights,AuditFlags)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.MutexRights
  parent: System.Security.AccessControl
  isExternal: false
  name: MutexRights
  nameWithType: MutexRights
  fullName: System.Security.AccessControl.MutexRights
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.MutexAuditRule.MutexRights
  parent: System.Security.AccessControl.MutexAuditRule
  isExternal: false
  name: MutexRights
  nameWithType: MutexAuditRule.MutexRights
  fullName: System.Security.AccessControl.MutexAuditRule.MutexRights
- uid: System.Security.AccessControl.MutexAuditRule.#ctor*
  parent: System.Security.AccessControl.MutexAuditRule
  isExternal: false
  name: MutexAuditRule
  nameWithType: MutexAuditRule.MutexAuditRule
- uid: System.Security.AccessControl.MutexAuditRule.MutexRights*
  parent: System.Security.AccessControl.MutexAuditRule
  isExternal: false
  name: MutexRights
  nameWithType: MutexAuditRule.MutexRights
