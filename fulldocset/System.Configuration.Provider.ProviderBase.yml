### YamlMime:ManagedReference
items:
- uid: System.Configuration.Provider.ProviderBase
  id: ProviderBase
  children:
  - System.Configuration.Provider.ProviderBase.#ctor
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  langs:
  - csharp
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase
  type: Class
  summary: "Fornece uma implementação básica para o modelo de provedor extensível."
  remarks: "O modelo de provedor destina-se para encapsular toda ou parte da funcionalidade de vários recursos do ASP.NET, como associação, perfis e configuração protegida. Ele permite que o desenvolvedor crie classes de suporte que fornecem várias implementações da funcionalidade encapsulada. Além disso, os desenvolvedores podem escrever novos recursos usando o modelo de provedor. Isso pode ser uma maneira eficiente para dar suporte a várias implementações de funcionalidade do recurso sem duplicar o código de recurso ou recodificar a camada de aplicativo se o método de implementação deve ser alterado.       A classe ProviderBase é simple, que contém apenas alguns métodos básicos e as propriedades que são comuns a todos os provedores. Provedores de recursos específicos (como <xref:System.Web.Security.MembershipProvider>) herdam ProviderBase e estabelecer os métodos necessários e as propriedades que os provedores específicos de implementação para o recurso devem dar suporte.</xref:System.Web.Security.MembershipProvider> Provedores específicos de implementação (como <xref:System.Web.Security.SqlMembershipProvider>) por sua vez herdar de um provedor de recursos específicos (nesse caso, <xref:System.Web.Security.MembershipProvider>).</xref:System.Web.Security.MembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>       O aspecto mais importante do modelo do provedor é que a implementação (por exemplo, se os dados são mantidos como um arquivo de texto ou em um banco de dados) é abstraída do código do aplicativo. O tipo de provedor específica da implementação para determinado recurso designado em um arquivo de configuração. O provedor de nível de recurso, em seguida, lê o tipo do arquivo de configuração e atua como uma fábrica para o código de recurso. O desenvolvedor do aplicativo, em seguida, pode usar as classes de recurso no código do aplicativo. O tipo de implementação pode ser trocado no arquivo de configuração, eliminando a necessidade de reescrever o código para acomodar a metodologia de implementação diferentes.       Os provedores incluídos no ASP.NET são principalmente abstrações de implementações de persistência de dados para recursos, como perfis ou associação. No entanto, esse modelo pode ser aplicado a qualquer outro tipo de funcionalidade que pode ser abstraída e implementado de várias maneiras."
  example:
  - For an example of how to use the ProviderBase class, see [Profile Provider Implementation Example](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract class ProviderBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.#ctor
  id: '#ctor'
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: ProviderBase()
  nameWithType: ProviderBase.ProviderBase()
  fullName: System.Configuration.Provider.ProviderBase.ProviderBase()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.Provider.ProviderBase&quot;> </xref> classe."
  syntax:
    content: protected ProviderBase ();
    parameters: []
  overload: System.Configuration.Provider.ProviderBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Description
  id: Description
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Description
  nameWithType: ProviderBase.Description
  fullName: System.Configuration.Provider.ProviderBase.Description
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Obtém uma breve descrição amigável adequado para exibição em Ferramentas administrativas ou outras interfaces de usuário (UIs)."
  remarks: "Se um provedor configurado não fornece uma descrição, o valor de <xref:System.Configuration.Provider.ProviderBase.Name%2A>propriedade é retornada como um padrão.</xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "Uma descrição breve, amigável adequada para exibição em Ferramentas administrativas ou outras interfaces do usuário."
  overload: System.Configuration.Provider.ProviderBase.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: ProviderBase.Initialize(String,NameValueCollection)
  fullName: System.Configuration.Provider.ProviderBase.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Inicializa o provedor."
  remarks: "A implementação da classe base internamente rastreia o número de vezes que o provedor `Initialize` método foi chamado. Se um provedor é inicializado em mais de uma vez, um `InvalidOperationException` é acionada indicando que o provedor já foi inicializado.       Como inicializar a maioria das chamadas de provedores de recurso antes de executar a inicialização específica do provedor, esse método é um local central para impedir a inicialização dupla."
  example:
  - For an example of how to use Initialize, see [Profile Provider Implementation Example](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public virtual void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "O nome amigável do provedor."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Uma coleção dos pares de nome/valor que representa os atributos específicos do provedor especificados na configuração para esse provedor."
  overload: System.Configuration.Provider.ProviderBase.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O nome do provedor é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome do provedor tem comprimento zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "É feita uma tentativa de chamar Initialize em um provedor, depois que o provedor já foi inicializado."
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Name
  id: Name
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Name
  nameWithType: ProviderBase.Name
  fullName: System.Configuration.Provider.ProviderBase.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Obtém o nome amigável usado para referir-se ao provedor durante a configuração."
  remarks: 'O padrão recomendado para essa cadeia de caracteres é: [*provedor criador*] [*o tipo de implementação*] [*recurso*] provedor. Embora o <xref:System.Configuration.Provider.ProviderBase.Description%2A>propriedade também fornece uma descrição amigável, a propriedade de nome é usada como um identificador para o provedor.</xref:System.Configuration.Provider.ProviderBase.Description%2A>'
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "O nome amigável usado para referir-se ao provedor durante a configuração."
  overload: System.Configuration.Provider.ProviderBase.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Configuration.Provider.ProviderBase.#ctor
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: ProviderBase()
  nameWithType: ProviderBase.ProviderBase()
  fullName: System.Configuration.Provider.ProviderBase.ProviderBase()
- uid: System.Configuration.Provider.ProviderBase.Description
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
  fullName: System.Configuration.Provider.ProviderBase.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: ProviderBase.Initialize(String,NameValueCollection)
  fullName: System.Configuration.Provider.ProviderBase.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Configuration.Provider.ProviderBase.Name
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
  fullName: System.Configuration.Provider.ProviderBase.Name
- uid: System.Configuration.Provider.ProviderBase.#ctor*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase.ProviderBase
- uid: System.Configuration.Provider.ProviderBase.Description*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
- uid: System.Configuration.Provider.ProviderBase.Initialize*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Initialize
  nameWithType: ProviderBase.Initialize
- uid: System.Configuration.Provider.ProviderBase.Name*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
