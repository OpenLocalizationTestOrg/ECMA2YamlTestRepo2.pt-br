### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbConnection
  id: OleDbConnection
  children:
  - System.Data.OleDb.OleDbConnection.#ctor
  - System.Data.OleDb.OleDbConnection.#ctor(System.String)
  - System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.OleDb.OleDbConnection.BeginTransaction
  - System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)
  - System.Data.OleDb.OleDbConnection.Close
  - System.Data.OleDb.OleDbConnection.ConnectionString
  - System.Data.OleDb.OleDbConnection.ConnectionTimeout
  - System.Data.OleDb.OleDbConnection.CreateCommand
  - System.Data.OleDb.OleDbConnection.CreateDbCommand
  - System.Data.OleDb.OleDbConnection.Database
  - System.Data.OleDb.OleDbConnection.DataSource
  - System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)
  - System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])
  - System.Data.OleDb.OleDbConnection.GetSchema
  - System.Data.OleDb.OleDbConnection.GetSchema(System.String)
  - System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])
  - System.Data.OleDb.OleDbConnection.InfoMessage
  - System.Data.OleDb.OleDbConnection.Open
  - System.Data.OleDb.OleDbConnection.Provider
  - System.Data.OleDb.OleDbConnection.ReleaseObjectPool
  - System.Data.OleDb.OleDbConnection.ResetState
  - System.Data.OleDb.OleDbConnection.ServerVersion
  - System.Data.OleDb.OleDbConnection.State
  - System.Data.OleDb.OleDbConnection.System#ICloneable#Clone
  langs:
  - csharp
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
  type: Class
  summary: "Representa uma conexão aberta com uma fonte de dados."
  remarks: "Um objeto OleDbConnection representa uma conexão exclusiva com uma fonte de dados. Com um sistema de banco de dados cliente/servidor, é equivalente a uma conexão de rede para o servidor. Dependendo da funcionalidade com suporte do provedor OLE DB nativo, alguns métodos ou propriedades de um objeto OleDbConnection podem não estar disponíveis.       Quando você cria uma instância de OleDbConnection, todas as propriedades são definidas para seus valores iniciais. Para obter uma lista desses valores, consulte o construtor OleDbConnection.       Você pode abrir mais de um DataReader em um único OleDbConnection. Se o provedor OLE DB que você usa não dá suporte a mais de um DataReader em uma única conexão, o provedor abre implicitamente uma conexão adicional para cada um.       Se o OleDbConnection sai do escopo, ele não está fechado. Portanto, você deve fechar explicitamente a conexão chamando <xref:System.Data.OleDb.OleDbConnection.Close%2A>ou **Dispose**, ou usando o objeto OleDbConnection dentro de um `Using` instrução.</xref:System.Data.OleDb.OleDbConnection.Close%2A>      > [!NOTE] > Para implantar aplicativos de alto desempenho, você deve usar o pool de conexão. Quando você usa o provedor de dados .NET Framework para OLE DB, você não precisa habilitar o pool de conexão porque o provedor gerencia isso automaticamente. Para obter mais informações sobre como usar a conexão do pool com o provedor de dados .NET Framework para OLE DB, consulte [OLE DB, ODBC e pool de Conexão do Oracle](~/add/includes/ajax-current-ext-md.md).       Se um fatal <xref:System.Data.OleDb.OleDbException>(por exemplo, uma SQL Server severidade de nível de 20 ou maior) é gerado, o método executando um <xref:System.Data.OleDb.OleDbCommand>, OleDbConnection pode ser fechada.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbException> No entanto, o usuário pode reabrir a conexão e continuar.       Um aplicativo que cria uma instância do objeto OleDbConnection pode exigir que todos os chamadores diretos e indiretos tenham permissão suficiente para o código, demandas de segurança declarativa ou obrigatório da configuração. OleDbConnection faz com que as demandas de segurança usando o <xref:System.Data.OleDb.OleDbPermission>objeto.</xref:System.Data.OleDb.OleDbPermission> Os usuários podem verificar se o seu código tem permissões suficientes, usando o <xref:System.Data.OleDb.OleDbPermissionAttribute>objeto.</xref:System.Data.OleDb.OleDbPermissionAttribute> Os usuários e administradores também podem usar o [Caspol.exe (ferramenta de política de segurança de acesso do código)](~/add/includes/ajax-current-ext-md.md) para modificar a política de segurança nos níveis de computador, usuário e enterprise. Para obter mais informações, consulte [Code Access Security e ADO.NET](~/add/includes/ajax-current-ext-md.md).       Para obter mais informações sobre o tratamento de mensagens de aviso e informativas do servidor de dados, consulte [eventos de Conexão](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > OleDbConnection o objeto não suporta a configuração ou recuperação de propriedades dinâmicas específicas para um provedor OLE DB. Há suporte para apenas as propriedades que podem ser passadas na cadeia de conexão para o provedor OLE DB."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and an OleDbConnection. The OleDbConnection is opened and set as the <xref:System.Data.OleDb.OleDbCommand.Connection%2A> for the <xref:System.Data.OleDb.OleDbCommand>. The example then calls <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> and closes the connection. To accomplish this, <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \n  \n [!code-cs[Classic WebData OleDbConnection Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_3_1.cs)]\n [!code-vb[Classic WebData OleDbConnection Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_3_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      public sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: OleDbConnection()
  nameWithType: OleDbConnection.OleDbConnection()
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> classe."
  remarks: "Quando uma nova instância da <xref:System.Data.OleDb.OleDbConnection>é criado, a leitura/gravação propriedades são definidas para os seguintes valores iniciais, a menos que eles são definidos especificamente usando palavras-chave associadas no <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>propriedade.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>| cadeia de caracteres vazia (&quot;&quot;) |   | <xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.OleDb.OleDbConnection.Database%2A>| cadeia de caracteres vazia (&quot;&quot;) |   | <xref:System.Data.OleDb.OleDbConnection.DataSource%2A>| cadeia de caracteres vazia (&quot;&quot;) |       Você pode alterar o valor dessas propriedades usando somente o <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>propriedade.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection.DataSource%2A> </xref:System.Data.OleDb.OleDbConnection.Database%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData OleDbConnection.OleDbConnection Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_7_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.OleDbConnection Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_7_1.vb)]"
  syntax:
    content: public OleDbConnection ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: OleDbConnection(String)
  nameWithType: OleDbConnection.OleDbConnection(String)
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> classe com a cadeia de caracteres de conexão especificada."
  remarks: "Quando uma nova instância da <xref:System.Data.OleDb.OleDbConnection>é criado, a leitura/gravação propriedades são definidas para os seguintes valores iniciais, a menos que eles são definidos especificamente usando palavras-chave associadas no <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>propriedade.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>| `connectionString`|   | <xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.OleDb.OleDbConnection.Database%2A>| cadeia de caracteres vazia (&quot;&quot;) |   | <xref:System.Data.OleDb.OleDbConnection.DataSource%2A>| cadeia de caracteres vazia (&quot;&quot;) |       Você pode alterar o valor dessas propriedades usando somente o <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>propriedade.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection.DataSource%2A> </xref:System.Data.OleDb.OleDbConnection.Database%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_1_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_1_1.vb)]"
  syntax:
    content: public OleDbConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "A conexão usada para abrir o banco de dados."
  overload: System.Data.OleDb.OleDbConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "A ser adicionado."
    return:
      type: System.Data.Common.DbTransaction
      description: "A ser adicionado."
  overload: System.Data.OleDb.OleDbConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: OleDbConnection.BeginTransaction()
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inicia uma transação de banco de dados com o atual <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> valor."
  remarks: "Você deve confirmar ou reverter a transação usando explicitamente a <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>ou <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A>método.</xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> </xref:System.Data.OleDb.OleDbTransaction.Commit%2A> Para certificar-se de que o provedor de dados .NET Framework para o modelo de gerenciamento de transações OLE DB executa corretamente, evite o uso de outros modelos de gerenciamento de transações, como aqueles fornecidos pela fonte de dados."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OleDbConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_23_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_23_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "Um objeto que representa a nova transação."
  overload: System.Data.OleDb.OleDbConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não há suporte para transações paralelas."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inicia uma transação de banco de dados com o nível de isolamento especificado."
  remarks: "Você deve confirmar ou reverter a transação usando explicitamente a <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>ou <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A>método.</xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> </xref:System.Data.OleDb.OleDbTransaction.Commit%2A> Para certificar-se de que o provedor de dados .NET Framework para o modelo de gerenciamento de transações OLE DB executa corretamente, evite o uso de outros modelos de gerenciamento de transações, como aqueles fornecidos pela fonte de dados.      > [!NOTE] > Se você não especificar um nível de isolamento, o nível de isolamento padrão para o provedor subjacente será usado. Para especificar um nível de isolamento com o método BeginTransaction, use a sobrecarga que utiliza o `isolationLevel` parâmetro."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>. It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, a <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_25_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_25_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "O nível de isolamento sob a qual a transação deve ser executado."
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "Um objeto que representa a nova transação."
  overload: System.Data.OleDb.OleDbConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não há suporte para transações paralelas."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: OleDbConnection.ChangeDatabase(String)
  fullName: System.Data.OleDb.OleDbConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Altera o banco de dados atual para um aberto <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>."
  remarks: "O valor fornecido no `database` parâmetro deve ser um nome de banco de dados válido. O `database` parâmetro não pode conter um valor nulo, uma cadeia de caracteres vazia ou uma cadeia de caracteres com caracteres apenas em branco."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.Database Example#2](~/add/codesnippet/csharp/m-system.data.oledb.oled_20_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.Database Example#2](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_20_1.vb)]"
  syntax:
    content: public override void ChangeDatabase (string value);
    parameters:
    - id: value
      type: System.String
      description: "Nome do banco de dados."
  overload: System.Data.OleDb.OleDbConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome do banco de dados não é válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão não está aberta."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Não é possível alterar o banco de dados."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Close
  id: Close
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Close()
  nameWithType: OleDbConnection.Close()
  fullName: System.Data.OleDb.OleDbConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Fecha a conexão à fonte de dados."
  remarks: "O método Close reverte qualquer transação pendente. Ele libera a conexão ao pool de conexão ou fecha a conexão se o pool de conexão está desabilitado. Se fechar é chamado durante a manipulação de um <xref:System.Data.Common.DbConnection.StateChange>evento, não adicional <xref:System.Data.Common.DbConnection.StateChange>os eventos são disparados.</xref:System.Data.Common.DbConnection.StateChange> </xref:System.Data.Common.DbConnection.StateChange>       Um aplicativo pode chamar fechar mais de uma vez. Nenhuma exceção é gerada.      > [!CAUTION] > Não chamar fechar ou **Dispose** em um <xref:System.Data.OleDb.OleDbConnection>, um <xref:System.Data.OleDb.OleDbDataReader>, ou qualquer outro objeto gerenciado no `Finalize` método de sua classe</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbConnection> Em um finalizador, você só deve liberar recursos não gerenciados que sua classe possui diretamente. Se sua classe não possui todos os recursos não gerenciados, não inclua um `Finalize` método em sua definição de classe. Para obter mais informações, consulte [coleta de lixo](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: OleDbConnection.ConnectionString
  fullName: System.Data.OleDb.OleDbConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém ou define a cadeia de caracteres usada para abrir um banco de dados."
  remarks: "The ConnectionString is designed to match OLE DB connection string format as closely as possible with the following exceptions:  \n  \n-   The \"Provider = `value` \" clause is required. However, you cannot use \"Provider = MSDASQL\" because the .NET Framework Data Provider for OLE DB does not support the OLE DB Provider for ODBC (MSDASQL). To access ODBC data sources, use the <xref:System.Data.Odbc.OdbcConnection> object that is in the <xref:System.Data.Odbc> namespace.  \n  \n-   Unlike ODBC or ADO, the connection string that is returned is the same as the user-set ConnectionString, minus security information if `Persist Security Info` is set to `false` (default). The .NET Framework Data Provider for OLE DB does not persist or return the password in a connection string unless you set the `Persist Security Info` keyword to `true` (not recommended). To maintain a high level of security, it is strongly recommended that you use the `Integrated Security` keyword with `Persist Security Info` set to `false`.  \n  \n You can use the ConnectionString property to connect to a variety of data sources. The following example illustrates several possible connection strings.  \n  \n```  \n\"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes\"  \n  \n\"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\\bin\\LocalAccess40.mdb\"  \n  \n\"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI\"  \n```  \n  \n If the `Data Source` keyword is not specified in the connection string, the provider will try to connect to the local server if one is available.  \n  \n For more information about connection strings, see [Using Connection String Keywords with SQL Server Native Client](http://go.microsoft.com/fwlink/?LinkId=126696).  \n  \n The ConnectionString property can be set only when the connection is closed. Many of the connection string values have corresponding read-only properties. When the connection string is set, these properties are updated, except when an error is detected. In this case, none of the properties are updated. <xref:System.Data.OleDb.OleDbConnection> properties return only those settings that are contained in the ConnectionString.  \n  \n Resetting the ConnectionString on a closed connection resets all connection string values and related properties. This includes the password. For example, if you set a connection string that includes \"Initial Catalog= AdventureWorks\", and then reset the connection string to \"Provider= SQLOLEDB;Data Source= MySQLServer;IntegratedSecurity=SSPI\", the <xref:System.Data.OleDb.OleDbConnection.Database%2A> property is no longer set to AdventureWorks. (The Initial Catalog value of the connection string corresponds to the `Database` property.)  \n  \n A preliminary validation of the connection string is performed when the property is set. If values for the `Provider`, `Connect Timeout`, `Persist Security Info`, or `OLE DB Services` are included in the string, these values are checked. When an application calls the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method, the connection string is fully validated. If the connection string contains invalid or unsupported properties, a run-time exception, such as <xref:System.ArgumentException>, is generated.  \n  \n> [!CAUTION]\n>  It is possible to supply connection information for an <xref:System.Data.OleDb.OleDbConnection> in a Universal Data Link (UDL) file; however you should avoid doing so. UDL files are not encrypted and expose connection string information in clear text. Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.  \n  \n The basic format of a connection string includes a series of keyword/value pairs separated by semicolons. The equal sign (=) connects each keyword and its value. To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks. If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks. The single quotation mark is also useful if the value starts with a double-quote character. Conversely, the double quotation mark can be used if the value starts with a single quotation mark. If the value contains both single-quote and double-quote characters, the quotation-mark character used to enclose the value must be doubled every time it occurs within the value.  \n  \n To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks. Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks. However, spaces within a string literal keyword or value are preserved. Single or double quotation marks may be used within a connection string without using delimiters (for example, `Data Source= my'Server` or `Data Source= my\"Server`) unless a quotation-mark character is the first or last character in the value.  \n  \n To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign. For example, in the hypothetical connection string  \n  \n```  \n\"key==word=value\"  \n```  \n  \n the keyword is \"key=word\" and the value is \"value\".  \n  \n If a specific keyword in a keyword=value pair occurs multiple times in a connection string, the last occurrence listed is used in the value set.  \n  \n Keywords are not case sensitive.  \n  \n> [!CAUTION]\n>  You should use caution when constructing a connection string based on user input, for example, when retrieving user ID and password information from a dialog box and appending it to the connection string. The application should make sure that a user cannot embed additional connection-string parameters in these values, for example, entering a password as \"validpassword;database= somedb\" in an attempt to attach to a different database. If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of `Persist Security Info= false` does not affect the `Extended Properties` parameter."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.  \n  \n [!code-cs[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_4_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_4_1.vb)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "A cadeia de conexão de provedor OLE DB que inclui o nome da fonte de dados e outros parâmetros necessários para estabelecer a conexão inicial. O valor padrão é uma cadeia de caracteres vazia."
  overload: System.Data.OleDb.OleDbConnection.ConnectionString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um argumento de cadeia de caracteres de conexão inválido foi fornecido ou não foi fornecido um argumento de cadeia de caracteres de conexão necessárias."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: OleDbConnection.ConnectionTimeout
  fullName: System.Data.OleDb.OleDbConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o tempo de espera durante a tentativa de estabelecer uma conexão antes de encerrar a tentativa e gerar um erro."
  remarks: "Um valor de 0 não indica nenhum limite e deve ser evitado em um <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>porque a tentativa de conexão aguardará indefinidamente.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.  \n  \n [!code-vb[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_2_1.vb)]\n [!code-cs[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_2_1.cs)]"
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "O tempo em segundos a esperar para uma conexão abrir. O valor padrão é 15 segundos."
  overload: System.Data.OleDb.OleDbConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor definido for menor que 0."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: OleDbConnection.CreateCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Cria e retorna um <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> objeto associado a <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>."
  syntax:
    content: public System.Data.OleDb.OleDbCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Um <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> objeto."
  overload: System.Data.OleDb.OleDbConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: OleDbConnection.CreateDbCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "A ser adicionado."
  overload: System.Data.OleDb.OleDbConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Database
  id: Database
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Database
  nameWithType: OleDbConnection.Database
  fullName: System.Data.OleDb.OleDbConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o nome do banco de dados atual ou o banco de dados a ser usado depois que uma conexão é aberta."
  remarks: "A propriedade de banco de dados atualiza dinamicamente. Se você alterar o banco de dados atual usando uma instrução SQL ou o <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A>método, uma mensagem informativa será enviada e a propriedade é atualizada automaticamente.</xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.Database Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_14_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.Database Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_14_1.vb)]"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "O nome do banco de dados atual ou o nome do banco de dados a ser usado depois que uma conexão é aberta. O valor padrão é uma cadeia de caracteres vazia."
  overload: System.Data.OleDb.OleDbConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.DataSource
  id: DataSource
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: OleDbConnection.DataSource
  fullName: System.Data.OleDb.OleDbConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o nome do servidor ou o nome do arquivo da fonte de dados."
  remarks: "Se a conexão ao banco de dados estiver fechado, o `DataSource` propriedade retorna o que está contido no `ConnectionString` da palavra-chave fonte de dados. Se a conexão está aberta e o `ConnectionString` valor da palavra de fonte de dados começa com &quot;| datadirectory |&quot;, a propriedade retorna o que está contido no `ConnectionString` da dados fonte palavra-chave somente. Se a conexão ao banco de dados estiver aberto, a propriedade retorna o que retorna o provedor nativo para o `DBPROP_INIT_DATASOURCE,` e se for vazio, o provedor nativo `DBPROP_DATASOURCENAME` é retornado."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_26_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_26_1.vb)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "O nome do servidor ou o nome do arquivo da fonte de dados. O valor padrão é uma cadeia de caracteres vazia."
  overload: System.Data.OleDb.OleDbConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OleDbConnection.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Data.OleDb.OleDbConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OleDbConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inscrever-se na transação especificada como uma transação distribuída."
  remarks: "Novo no ADO.NET 2.0 é suporte para usar o <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>método para se inscrever em uma transação distribuída.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Porque ele pede uma conexão em um <xref:System.Transactions.Transaction>instância, **EnlistTransaction** aproveita a funcionalidade disponível a <xref:System.Transactions>distribuídas de namespace para o gerenciamento de transações, tornando-o melhor **EnlistDistributedTransaction** para essa finalidade.</xref:System.Transactions> </xref:System.Transactions.Transaction> Para obter mais informações, consulte [transações distribuídas](~/add/includes/ajax-current-ext-md.md).       Você pode continuar a inscrever-se em uma transação distribuída existente usando o método EnlistDistributedTransaction se a inscrição automática está desabilitada. Inscrição em uma transação distribuída existente torna-se de que, se a transação é confirmada ou revertida, as modificações feitas pelo código na fonte de dados são também confirmadas ou revertidas. Para obter mais informações sobre transações distribuídas, consulte [transações distribuídas](../Topic/Distributed%20Transactions.md).       EnlistDistributedTransaction retornará uma exceção se o <xref:System.Data.OleDb.OleDbConnection>já iniciou uma transação usando <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> </xref:System.Data.OleDb.OleDbConnection> No entanto, se a transação é uma transação local iniciada na fonte de dados (por exemplo, executando explicitamente a instrução BEGIN TRANSACTION usando um <xref:System.Data.OleDbClient.OleDbCommand>objeto), EnlistDistributedTransaction reverte a transação local e se inscrever na transação distribuída existente conforme solicitado.</xref:System.Data.OleDbClient.OleDbCommand> Você não receberá o aviso que a transação local foi revertida e responsável por gerenciar todas as transações locais não é iniciadas usando<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);
    parameters:
    - id: transaction
      type: System.EnterpriseServices.ITransaction
      description: "Uma referência a um existente <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> em que a inscrição."
  overload: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: OleDbConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inscrever-se na transação especificada como uma transação distribuída."
  remarks: 'Novo no ADO.NET 2.0 é suporte para usar o <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>método para se inscrever em uma transação distribuída.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Porque ele pede uma conexão em um <xref:System.Transactions.Transaction>instância, **EnlistTransaction** tira proveito da funcionalidade disponível no <xref:System.Transactions>distribuídas de namespace para o gerenciamento de transações, tornando-o melhor **EnlistDistributedTransaction**, que usa um <xref:System.EnterpriseServices.ITransaction>objeto.</xref:System.EnterpriseServices.ITransaction> </xref:System.Transactions> </xref:System.Transactions.Transaction> Ele também tem semânticas ligeiramente diferentes: quando uma conexão é explicitamente inscrito em uma transação, ele não pode ser unenlisted ou inscrito em outra transação até que a primeira transação seja concluída. Para obter mais informações sobre transações distribuídas, consulte [transações distribuídas](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Uma referência a um existente <xref href=&quot;System.Transactions.Transaction&quot;> </xref> em que a inscrição."
  overload: System.Data.OleDb.OleDbConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])
  id: GetOleDbSchemaTable(System.Guid,System.Object[])
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetOleDbSchemaTable(Guid,Object[])
  nameWithType: OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
  fullName: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retorna informações de esquema de uma fonte de dados, conforme indicado por um GUID, e depois de aplicar as restrições especificadas."
  remarks: "A tabela de esquema é retornada como um <xref:System.Data.DataTable>que tem o mesmo formato que o conjunto de linhas de esquema OLE DB especificado pelo `schema` parâmetro.</xref:System.Data.DataTable> Use o `restrictions` parâmetro para filtrar as linhas sejam retornadas no <xref:System.Data.DataTable>(por exemplo, ao especificar restrições para o nome da tabela, tipo, proprietário ou esquema).</xref:System.Data.DataTable> Quando você passa valores na matriz, inclua cadeias de caracteres vazias ou nulos para elementos de matriz que não contenham valores. Se você passar uma matriz vazia para `restrictions`, todas as linhas (uma para cada tabela) são retornadas em default ordem. Os valores na matriz correspondem à ordem de colunas na tabela de origem e <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Cada elemento da matriz de restrições é comparado com o conteúdo da coluna correspondente no conjunto de linhas de esquema. Por exemplo, o primeiro elemento na matriz de restrições é comparado a primeira coluna no conjunto de linhas. Se um elemento de restrição não for nulo, somente linhas do conjunto de linhas de esquema que corresponde exatamente ao valor da restrição serão adicionadas ao resultante <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       O <xref:System.Data.OleDb.OleDbConnection>chamadas de método subjacente OLE DB **IDBSchemaRowset:: Getrowset** usando regras comuns de conversão de tempo de execução do idioma padrão do método.</xref:System.Data.OleDb.OleDbConnection> Para obter mais informações, consulte [tipos de dados COM](http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061).       Você pode recuperar informações sobre literais usando <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>.</xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals> Isso fornece informações equivalentes a chamar o OLE DB **IDBInfo::GetLiteralInfo** interface ou ADO **Connection.OpenSchema** método com o `adSchemaDBInfoLiterals` constante."
  example:
  - "The following sample returns a list of tables in a database.  \n  \n [!code-cs[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/add/codesnippet/csharp/da103458-7630-4900-9261-_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/add/codesnippet/visualbasic/da103458-7630-4900-9261-_1.vb)]"
  syntax:
    content: public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);
    parameters:
    - id: schema
      type: System.Guid
      description: "Uma da <xref href=&quot;System.Data.OleDb.OleDbSchemaGuid&quot;> </xref> valores que especifica a tabela de esquema para retornar."
    - id: restrictions
      type: System.Object[]
      description: "Um <xref:System.Object>matriz de valores de restrição.</xref:System.Object> Elas são aplicadas na ordem de colunas de restrição. Isto é, o primeiro valor de restrição aplica-se a primeira coluna de restrição, o segundo valor de restrição aplica-se a segunda coluna de restrição e assim por diante."
    return:
      type: System.Data.DataTable
      description: "Um <xref href=&quot;System.Data.DataTable&quot;> </xref> que contém as informações de esquema solicitada."
  overload: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable*
  exceptions:
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "O conjunto de restrições especificado é inválido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> está fechado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O conjunto de linhas do esquema especificado não é suportado pelo provedor OLE DB.       - ou - <code> schema </code> parâmetro contém um valor de <xref href=&quot;System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals&quot;> </xref> e <code> restrictions </code> parâmetro contém uma ou mais restrições."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetSchema
  id: GetSchema
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: OleDbConnection.GetSchema()
  fullName: System.Data.OleDb.OleDbConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retorna informações de esquema para a fonte de dados deste <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Um <xref href=&quot;System.Data.DataTable&quot;> </xref> que contém informações de esquema."
  overload: System.Data.OleDb.OleDbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: OleDbConnection.GetSchema(String)
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retorna informações de esquema para a fonte de dados deste <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> usando a cadeia de caracteres especificada para o nome do esquema."
  remarks: "Quando `collectionName` é especificado como null, o <xref:System.Data.DataTable>conterá informações sobre todos os metadados que estão disponíveis e suas restrições.</xref:System.Data.DataTable>"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Especifica o nome do esquema para retornar."
    return:
      type: System.Data.DataTable
      description: "Um <xref href=&quot;System.Data.DataTable&quot;> </xref> que contém informações de esquema."
  overload: System.Data.OleDb.OleDbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: OleDbConnection.GetSchema(String,String[])
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retorna informações de esquema para a fonte de dados deste <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> usando a cadeia de caracteres especificada para o nome do esquema e a matriz de cadeia de caracteres especificada para os valores de restrição."
  remarks: "Quando `collectionName` é especificado como null, o <xref:System.Data.DataTable>conterá informações sobre todos os metadados que estão disponíveis e suas restrições.</xref:System.Data.DataTable>       O `restrictionValues` parâmetro pode fornecer *n* profundidade de valores que são especificadas na coleção de restrições para uma coleção específica. Para definir valores em uma restrição de determinado e não definir os valores das outras restrições, você precisa definir as restrições anteriores para nulo e, em seguida, coloque o valor apropriado para a restrição que você deseja especificar um valor para.       Um exemplo disso é a coleção de &quot;Tabelas&quot;. Se a coleção &quot;Tabelas&quot; tem três restrições (banco de dados, proprietário e nome de tabela), e você quiser obter somente as tabelas associadas com o proprietário &quot;Carl&quot;, você deve passar os valores a seguir (no mínimo): null, &quot;Carl&quot;. Se um valor de restrição não for passado, os valores padrão são usados para essa restrição. Isso é o mesmo mapeamento como passar null, que é diferente da passagem de uma cadeia de caracteres vazia para o valor do parâmetro. Nesse caso, a cadeia de caracteres vazia (&quot;&quot;) é considerado o valor para o parâmetro especificado."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Especifica o nome do esquema para retornar."
    - id: restrictionValues
      type: System.String[]
      description: "Especifica um conjunto de valores de restrição do esquema solicitado."
    return:
      type: System.Data.DataTable
      description: "Um <xref href=&quot;System.Data.DataTable&quot;> </xref> que contém informações de esquema."
  overload: System.Data.OleDb.OleDbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: OleDbConnection.InfoMessage
  fullName: System.Data.OleDb.OleDbConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Ocorre quando o provedor envia um aviso ou uma mensagem informativa."
  remarks: "Os clientes que deseja processar avisos ou mensagens informativas enviadas pelo servidor devem criar um <xref:System.Data.OleDb.OleDbInfoMessageEventHandler>delegado para escutar esse evento.</xref:System.Data.OleDb.OleDbInfoMessageEventHandler>       O evento do InfoMessage ocorre quando uma mensagem com severidade baixa é retornada da fonte de dados. Mensagens de baixa severidade são aqueles que fazem com que uma exceção. Para o Microsoft SQL Server, isso inclui mensagens de erro que têm uma severidade de 10 ou menos para obter mais informações e um exemplo, consulte [eventos de Conexão](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.OleDb.OleDbInfoMessageEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Open
  id: Open
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Open()
  nameWithType: OleDbConnection.Open()
  fullName: System.Data.OleDb.OleDbConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Abre uma conexão de banco de dados com as configurações de propriedade especificadas por <xref:System.Data.OleDb.OleDbConnection.ConnectionString*>.</xref:System.Data.OleDb.OleDbConnection.ConnectionString*>"
  remarks: "O <xref:System.Data.OleDb.OleDbConnection>desenha uma conexão aberta do pool de conexão, se houver um disponível.</xref:System.Data.OleDb.OleDbConnection> Caso contrário, ele estabelece uma nova conexão à fonte de dados. Você pode abrir mais de um DataReader em um único <xref:System.Data.OleDb.OleDbConnection>.</xref:System.Data.OleDb.OleDbConnection> Se o provedor OLE DB que você usa não der suporte a mais de um DataReader ativa em uma única conexão, o provedor OLE DB abre implicitamente uma conexão adicional para cada um.      > [!NOTE] > Se o <xref:System.Data.OleDb.OleDbConnection>fica fora do escopo, ela não é fechada.</xref:System.Data.OleDb.OleDbConnection> Portanto, você deve fechar explicitamente a conexão chamando <xref:System.Data.OleDb.OleDbConnection.Close%2A>ou **Dispose**, ou usando a conexão em um `Using` instrução.</xref:System.Data.OleDb.OleDbConnection.Close%2A>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão já está aberto."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Ocorreu um erro no nível de conexão ao abrir a conexão."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Provider
  id: Provider
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Provider
  nameWithType: OleDbConnection.Provider
  fullName: System.Data.OleDb.OleDbConnection.Provider
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o nome do provedor OLE DB especificado no &quot;provedor =&quot; cláusula da cadeia de caracteres de conexão."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.Provider Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_1_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.Provider Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_1_1.vb)]"
  syntax:
    content: public string Provider { get; }
    return:
      type: System.String
      description: "O nome do provedor como especificado no &quot;provedor =&quot; cláusula da cadeia de caracteres de conexão. O valor padrão é uma cadeia de caracteres vazia."
  overload: System.Data.OleDb.OleDbConnection.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool
  id: ReleaseObjectPool
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ReleaseObjectPool()
  nameWithType: OleDbConnection.ReleaseObjectPool()
  fullName: System.Data.OleDb.OleDbConnection.ReleaseObjectPool()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Indica que o <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> pool de objetos pode ser liberado quando a última conexão subjacente é liberado."
  remarks: "`ReleaseObjectPool`pode ser chamado para liberar recursos caso contrário, deve ser reservados para em pool <xref:System.Data.OleDb.OleDbConnection>objetos.</xref:System.Data.OleDb.OleDbConnection> Você talvez queira chamar este método se, por exemplo, o objeto de conexão não será usado novamente para a quantidade de tempo que serviços OLE DB normalmente mantém conexões em pool ativo. Observe que chamar o método sozinho não realmente liberar que existem no pool de conexões ativas.       O seguinte deve ocorrer antes que o pool for descartado finalmente: 1.  Chamar <xref:System.Data.OleDb.OleDbConnection.Close%2A>para retornar o objeto de conexão para o pool.</xref:System.Data.OleDb.OleDbConnection.Close%2A>      2.  Permitir que cada objeto de conexão para o tempo limite do pool.      3.  Chame ReleaseObjectPool.      4.  Invocar a coleta de lixo.       Por outro lado, se você chamar <xref:System.Data.OleDb.OleDbConnection.Close%2A>em todas as conexões ativas e chamar a coleta de lixo, mas não chame ReleaseObjectPool, os recursos reservados para os objetos em pool permanecerá disponíveis.</xref:System.Data.OleDb.OleDbConnection.Close%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection>, opens it, displays some of its properties, closes the connection, and releases the object pool to conserve resources.  \n  \n [!code-cs[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_15_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_15_1.vb)]"
  syntax:
    content: public static void ReleaseObjectPool ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.ReleaseObjectPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ResetState
  id: ResetState
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ResetState()
  nameWithType: OleDbConnection.ResetState()
  fullName: System.Data.OleDb.OleDbConnection.ResetState()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Atualizações de <xref:System.Data.OleDb.OleDbConnection.State*>propriedade o <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> objeto.</xref:System.Data.OleDb.OleDbConnection.State*>"
  remarks: "Alguns provedores OLE DB podem verificar o estado atual da conexão. Por exemplo, se o servidor de banco de dados foi reciclado, pois você abriu seu <xref:System.Data.OleDb.OleDbConnection>, o <xref:System.Data.OleDb.OleDbConnection.State%2A>propriedade continuarão a retornar `Open`.</xref:System.Data.OleDb.OleDbConnection.State%2A> </xref:System.Data.OleDb.OleDbConnection> Se você estiver trabalhando com um provedor OLE DB que dá suporte a sondagem para obter essas informações em uma conexão ao vivo, chamar o método ResetState e, em seguida, verificando o <xref:System.Data.OleDb.OleDbConnection.State%2A>propriedade informará que a conexão não está mais aberto.</xref:System.Data.OleDb.OleDbConnection.State%2A> O método ResetState depende de funcionalidades em que o provedor OLE DB para verificar o estado atual da conexão. Para determinar se o provedor OLE DB dá suporte a essa funcionalidade, verifique a documentação do provedor para obter informações sobre DBPROP_CONNECTIONSTATUS."
  syntax:
    content: public void ResetState ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.ResetState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: OleDbConnection.ServerVersion
  fullName: System.Data.OleDb.OleDbConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém uma cadeia de caracteres que contém a versão do servidor ao qual o cliente está conectado."
  remarks: "A propriedade ServerVersion é mapeado para a propriedade do OLE DB DBPROP_DBMSVER. Se não há suporte para a versão do Server pelo provedor OLE DB subjacente, uma cadeia de caracteres vazia é retornada.       É a versão do formulário *# #. # #. # # #*, onde os dois primeiros dígitos são a versão principal, os dois dígitos são a versão secundária, e os quatro últimos dígitos são a versão de lançamento. O provedor deve processar a versão do produto neste formulário, mas também pode acrescentar a versão de produto em específico — por exemplo, &quot;04.01.0000 Rdb 4.1&quot;. A cadeia de caracteres está no formato *Minor*, onde principais e secundários são exatamente dois dígitos e compilação é exatamente quatro dígitos."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OleDbConnection.ServerVersion Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_6_1.vb)]\n [!code-cs[Classic WebData OleDbConnection.ServerVersion Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_6_1.cs)]"
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "A versão do servidor conectado."
  overload: System.Data.OleDb.OleDbConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão é fechada."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.State
  id: State
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: State
  nameWithType: OleDbConnection.State
  fullName: System.Data.OleDb.OleDbConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o estado atual da conexão."
  remarks: "A seguir é permitida alterações de estado: - na `Closed` para `Open`, usando o <xref:System.Data.OleDb.OleDbConnection.Open%2A>método o <xref:System.Data.OleDb.OleDbConnection>objeto.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbConnection.Open%2A>      -De `Open` para `Closed`, usando o <xref:System.Data.OleDb.OleDbConnection.Close%2A>método ou o **Dispose** método o <xref:System.Data.OleDb.OleDbConnection>objeto.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbConnection.Close%2A>      > [!NOTE] > Na versão anterior do .NET Framework, chamando a propriedade State maior sobrecarga de aplicativo porque cada chamada fez uma chamada para a propriedade DBPROP_CONNECTIONSTATUS do OLE DB para uma conexão aberta. Com a versão do .NET Framework 2.0, isso não é mais um problema."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "Uma combinação bit a bit do <xref href=&quot;System.Data.ConnectionState&quot;> </xref> valores. O padrão é fechado."
  overload: System.Data.OleDb.OleDbConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbConnection.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Data.OleDb.OleDbConnection>instância é convertida em um <xref:System.ICloneable>interface.</xref:System.ICloneable> </xref:System.Data.OleDb.OleDbConnection>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um novo <xref:System.Object>que é uma cópia dessa instância.</xref:System.Object>"
  overload: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OleDb.OleDbException
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
- uid: System.Data.OleDb.OleDbConnection.#ctor
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: OleDbConnection()
  nameWithType: OleDbConnection.OleDbConnection()
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection()
- uid: System.Data.OleDb.OleDbConnection.#ctor(System.String)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: OleDbConnection(String)
  nameWithType: OleDbConnection.OleDbConnection(String)
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: OleDbConnection.BeginTransaction()
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction()
- uid: System.Data.OleDb.OleDbTransaction
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbTransaction
  nameWithType: OleDbTransaction
  fullName: System.Data.OleDb.OleDbTransaction
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: OleDbConnection.ChangeDatabase(String)
  fullName: System.Data.OleDb.OleDbConnection.ChangeDatabase(String)
- uid: System.Data.OleDb.OleDbConnection.Close
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Close()
  nameWithType: OleDbConnection.Close()
  fullName: System.Data.OleDb.OleDbConnection.Close()
- uid: System.Data.OleDb.OleDbConnection.ConnectionString
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OleDbConnection.ConnectionString
  fullName: System.Data.OleDb.OleDbConnection.ConnectionString
- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OleDbConnection.ConnectionTimeout
  fullName: System.Data.OleDb.OleDbConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbConnection.CreateCommand
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: OleDbConnection.CreateCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateCommand()
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: OleDbConnection.CreateDbCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.OleDb.OleDbConnection.Database
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Database
  nameWithType: OleDbConnection.Database
  fullName: System.Data.OleDb.OleDbConnection.Database
- uid: System.Data.OleDb.OleDbConnection.DataSource
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: DataSource
  nameWithType: OleDbConnection.DataSource
  fullName: System.Data.OleDb.OleDbConnection.DataSource
- uid: System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OleDbConnection.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OleDbConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: OleDbConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetOleDbSchemaTable(Guid,Object[])
  nameWithType: OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
  fullName: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbConnection.GetSchema
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema()
  nameWithType: OleDbConnection.GetSchema()
  fullName: System.Data.OleDb.OleDbConnection.GetSchema()
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: OleDbConnection.GetSchema(String)
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String)
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: OleDbConnection.GetSchema(String,String[])
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbConnection.InfoMessage
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: InfoMessage
  nameWithType: OleDbConnection.InfoMessage
  fullName: System.Data.OleDb.OleDbConnection.InfoMessage
- uid: System.Data.OleDb.OleDbInfoMessageEventHandler
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbInfoMessageEventHandler
  nameWithType: OleDbInfoMessageEventHandler
  fullName: System.Data.OleDb.OleDbInfoMessageEventHandler
- uid: System.Data.OleDb.OleDbConnection.Open
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Open()
  nameWithType: OleDbConnection.Open()
  fullName: System.Data.OleDb.OleDbConnection.Open()
- uid: System.Data.OleDb.OleDbConnection.Provider
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Provider
  nameWithType: OleDbConnection.Provider
  fullName: System.Data.OleDb.OleDbConnection.Provider
- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ReleaseObjectPool()
  nameWithType: OleDbConnection.ReleaseObjectPool()
  fullName: System.Data.OleDb.OleDbConnection.ReleaseObjectPool()
- uid: System.Data.OleDb.OleDbConnection.ResetState
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ResetState()
  nameWithType: OleDbConnection.ResetState()
  fullName: System.Data.OleDb.OleDbConnection.ResetState()
- uid: System.Data.OleDb.OleDbConnection.ServerVersion
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OleDbConnection.ServerVersion
  fullName: System.Data.OleDb.OleDbConnection.ServerVersion
- uid: System.Data.OleDb.OleDbConnection.State
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: State
  nameWithType: OleDbConnection.State
  fullName: System.Data.OleDb.OleDbConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbConnection.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbConnection.#ctor*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection.OleDbConnection
- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: OleDbConnection.BeginDbTransaction
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: OleDbConnection.BeginTransaction
- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: OleDbConnection.ChangeDatabase
- uid: System.Data.OleDb.OleDbConnection.Close*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Close
  nameWithType: OleDbConnection.Close
- uid: System.Data.OleDb.OleDbConnection.ConnectionString*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OleDbConnection.ConnectionString
- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OleDbConnection.ConnectionTimeout
- uid: System.Data.OleDb.OleDbConnection.CreateCommand*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateCommand
  nameWithType: OleDbConnection.CreateCommand
- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: OleDbConnection.CreateDbCommand
- uid: System.Data.OleDb.OleDbConnection.Database*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Database
  nameWithType: OleDbConnection.Database
- uid: System.Data.OleDb.OleDbConnection.DataSource*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: DataSource
  nameWithType: OleDbConnection.DataSource
- uid: System.Data.OleDb.OleDbConnection.Dispose*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Dispose
  nameWithType: OleDbConnection.Dispose
- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: OleDbConnection.EnlistDistributedTransaction
- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: OleDbConnection.EnlistTransaction
- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetOleDbSchemaTable
  nameWithType: OleDbConnection.GetOleDbSchemaTable
- uid: System.Data.OleDb.OleDbConnection.GetSchema*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema
  nameWithType: OleDbConnection.GetSchema
- uid: System.Data.OleDb.OleDbConnection.Open*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Open
  nameWithType: OleDbConnection.Open
- uid: System.Data.OleDb.OleDbConnection.Provider*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Provider
  nameWithType: OleDbConnection.Provider
- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ReleaseObjectPool
  nameWithType: OleDbConnection.ReleaseObjectPool
- uid: System.Data.OleDb.OleDbConnection.ResetState*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ResetState
  nameWithType: OleDbConnection.ResetState
- uid: System.Data.OleDb.OleDbConnection.ServerVersion*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OleDbConnection.ServerVersion
- uid: System.Data.OleDb.OleDbConnection.State*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: State
  nameWithType: OleDbConnection.State
- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbConnection.System.ICloneable.Clone
