### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IDesignerHost
  id: IDesignerHost
  children:
  - System.ComponentModel.Design.IDesignerHost.Activate
  - System.ComponentModel.Design.IDesignerHost.Activated
  - System.ComponentModel.Design.IDesignerHost.Container
  - System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)
  - System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)
  - System.ComponentModel.Design.IDesignerHost.CreateTransaction
  - System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)
  - System.ComponentModel.Design.IDesignerHost.Deactivated
  - System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.IDesignerHost.GetType(System.String)
  - System.ComponentModel.Design.IDesignerHost.InTransaction
  - System.ComponentModel.Design.IDesignerHost.LoadComplete
  - System.ComponentModel.Design.IDesignerHost.Loading
  - System.ComponentModel.Design.IDesignerHost.RootComponent
  - System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  - System.ComponentModel.Design.IDesignerHost.TransactionClosed
  - System.ComponentModel.Design.IDesignerHost.TransactionClosing
  - System.ComponentModel.Design.IDesignerHost.TransactionDescription
  - System.ComponentModel.Design.IDesignerHost.TransactionOpened
  - System.ComponentModel.Design.IDesignerHost.TransactionOpening
  langs:
  - csharp
  name: IDesignerHost
  nameWithType: IDesignerHost
  fullName: System.ComponentModel.Design.IDesignerHost
  type: Interface
  summary: "Fornece uma interface para gerenciar componentes e transações designers."
  remarks: "IDesignerHost é uma interface que funciona com a arquitetura de designer de formulários do .NET Framework para oferecer suporte à transação de designer e o gerenciamento de componentes.       O .NET Framework não fornece uma implementação desta interface. A interface é implementada por ferramentas de desenvolvimento que oferece suporte a designers."
  example:
  - "The following example code demonstrates how to obtain the IDesignerHost service interface from a designer or sited component.  \n  \n [!code-cs[DesignerHostAcquisition#1](~/add/codesnippet/csharp/t-system.componentmodel._54_1.cs)]\n [!code-cpp[DesignerHostAcquisition#1](~/add/codesnippet/cpp/t-system.componentmodel._54_1.cpp)]\n [!code-vb[DesignerHostAcquisition#1](~/add/codesnippet/visualbasic/t-system.componentmodel._54_1.vb)]  \n  \n The following example code demonstrates using the IDesignerHost interface to list project components.  \n  \n [!code-cs[IDesignerHostExample#1](~/add/codesnippet/csharp/t-system.componentmodel._54_2.cs)]\n [!code-cpp[IDesignerHostExample#1](~/add/codesnippet/cpp/t-system.componentmodel._54_2.cpp)]\n [!code-vb[IDesignerHostExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._54_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDesignerHost : IServiceProvider, System.ComponentModel.Design.IServiceContainer
  implements:
  - System.ComponentModel.Design.IServiceContainer
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Activate
  id: Activate
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Activate()
  nameWithType: IDesignerHost.Activate()
  fullName: System.ComponentModel.Design.IDesignerHost.Activate()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Ativa o designer que hospeda este host."
  remarks: "Designers de devem ser ativados antes de exibir sua interface do usuário."
  syntax:
    content: public void Activate ();
    parameters: []
  overload: System.ComponentModel.Design.IDesignerHost.Activate*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Activated
  id: Activated
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Activated
  nameWithType: IDesignerHost.Activated
  fullName: System.ComponentModel.Design.IDesignerHost.Activated
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Ocorre quando este designer está ativado."
  remarks: "Um designer está ativado antes de ser exibido."
  syntax:
    content: public event EventHandler Activated;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Container
  id: Container
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Container
  nameWithType: IDesignerHost.Container
  fullName: System.ComponentModel.Design.IDesignerHost.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Obtém o contêiner para este host de designer."
  remarks: "Isso <xref:System.ComponentModel.IContainer>contém os componentes do documento atual do modo de design.</xref:System.ComponentModel.IContainer> Você pode listar ou qualquer um dos componentes do documento atual do modo de design de acesso por meio do <xref:System.ComponentModel.IContainer.Components%2A>membro desse <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IContainer.Components%2A>"
  syntax:
    content: public System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "O <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> para este host."
  overload: System.ComponentModel.Design.IDesignerHost.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)
  id: CreateComponent(System.Type)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateComponent(Type)
  nameWithType: IDesignerHost.CreateComponent(Type)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Cria um componente do tipo especificado e o adiciona ao documento de design."
  remarks: "Se o tipo não pode ser resolvido como um objeto que implementa <xref:System.ComponentModel.IComponent>, uma exceção será lançada.</xref:System.ComponentModel.IComponent>       Esse método não especifica um nome para o componente. O método cria o componente e o adiciona ao contêiner de designer."
  syntax:
    content: public System.ComponentModel.IComponent CreateComponent (Type componentClass);
    parameters:
    - id: componentClass
      type: System.Type
      description: "O tipo de componente a ser criado."
    return:
      type: System.ComponentModel.IComponent
      description: "O componente recém-criado."
  overload: System.ComponentModel.Design.IDesignerHost.CreateComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)
  id: CreateComponent(System.Type,System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateComponent(Type,String)
  nameWithType: IDesignerHost.CreateComponent(Type,String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Cria um componente do tipo especificado e o nome e o adiciona ao documento de design."
  remarks: "Se o tipo não pode ser resolvido como um objeto que implementa <xref:System.ComponentModel.IComponent>, uma exceção será lançada.</xref:System.ComponentModel.IComponent>       Esse método cria o componente e o adiciona ao contêiner de designer."
  syntax:
    content: public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);
    parameters:
    - id: componentClass
      type: System.Type
      description: "O tipo de componente a ser criado."
    - id: name
      type: System.String
      description: "O nome do componente."
    return:
      type: System.ComponentModel.IComponent
      description: "O componente recém-criado."
  overload: System.ComponentModel.Design.IDesignerHost.CreateComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction
  id: CreateTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateTransaction()
  nameWithType: IDesignerHost.CreateTransaction()
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Cria um <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref> que pode encapsular sequências de eventos para melhorar o desempenho e habilitar desfazer e refazer a funcionalidade de suporte."
  remarks: "Esse método cria um <xref:System.ComponentModel.Design.DesignerTransaction>que pode ser usada para encapsular uma série de operações.</xref:System.ComponentModel.Design.DesignerTransaction> Transações designers podem melhorar o desempenho, reduzir a cintilação causada por várias atualizações durante o processo de operações e habilitar a maioria das operações a serem desfeitas.       Operações longas que envolvem vários componentes podem gerar muitos eventos. Esses eventos podem causar efeitos colaterais, como cintilação ou degradação de desempenho. Quando operando em vários componentes ao mesmo tempo, ou definindo várias propriedades em um único componente, você pode melhorar o desempenho executando essas alterações em uma transação. Algumas operações de lidar com o <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>e <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>eventos e executar o trabalho somente quando uma transação não está em andamento.</xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> </xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> Para obter mais informações sobre o uso de transações, consulte a documentação para <xref:System.ComponentModel.Design.DesignerTransaction>.</xref:System.ComponentModel.Design.DesignerTransaction>"
  syntax:
    content: public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();
    parameters: []
    return:
      type: System.ComponentModel.Design.DesignerTransaction
      description: "Uma nova instância da <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref>. Quando você concluir as etapas na sua transação, você deve chamar <xref:System.ComponentModel.Design.DesignerTransaction.Commit*>neste objeto.</xref:System.ComponentModel.Design.DesignerTransaction.Commit*>"
  overload: System.ComponentModel.Design.IDesignerHost.CreateTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)
  id: CreateTransaction(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateTransaction(String)
  nameWithType: IDesignerHost.CreateTransaction(String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Cria um <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref> que pode encapsular sequências de eventos para melhorar o desempenho e habilitar desfazer e refazer a funcionalidade de suporte, usando a descrição da transação especificada."
  remarks: "Esse método cria um <xref:System.ComponentModel.Design.DesignerTransaction>que pode ser usada para encapsular uma série de operações.</xref:System.ComponentModel.Design.DesignerTransaction> Transações designers podem melhorar o desempenho, reduzir a cintilação causada por várias atualizações durante o processo de operações e habilitar a maioria das operações a serem desfeitas.       Operações longas que envolvem vários componentes podem gerar muitos eventos. Esses eventos podem causar efeitos colaterais, como cintilação ou degradação de desempenho. Quando operando em vários componentes ao mesmo tempo, ou definindo várias propriedades em um único componente, você pode melhorar o desempenho executando essas alterações em uma transação. Algumas operações de lidar com o <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>e <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>eventos e executar o trabalho somente quando uma transação não está em andamento.</xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> </xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> Para obter mais informações sobre o uso de transações, consulte a documentação para <xref:System.ComponentModel.Design.DesignerTransaction>.</xref:System.ComponentModel.Design.DesignerTransaction>"
  syntax:
    content: public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);
    parameters:
    - id: description
      type: System.String
      description: "Um título ou uma descrição para a transação recém-criado."
    return:
      type: System.ComponentModel.Design.DesignerTransaction
      description: "A new <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;></xref>. Quando você concluiu as etapas na sua transação, você deve chamar <xref:System.ComponentModel.Design.DesignerTransaction.Commit*>neste objeto.</xref:System.ComponentModel.Design.DesignerTransaction.Commit*>"
  overload: System.ComponentModel.Design.IDesignerHost.CreateTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Deactivated
  id: Deactivated
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Deactivated
  nameWithType: IDesignerHost.Deactivated
  fullName: System.ComponentModel.Design.IDesignerHost.Deactivated
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Ocorre quando este designer está desativado."
  remarks: "Um designer é desativado antes que ele não é mais exibido."
  syntax:
    content: public event EventHandler Deactivated;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)
  id: DestroyComponent(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: DestroyComponent(IComponent)
  nameWithType: IDesignerHost.DestroyComponent(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.DestroyComponent(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Destrói o componente especificado e a remove do contêiner de designer."
  syntax:
    content: public void DestroyComponent (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "O componente para destruir."
  overload: System.ComponentModel.Design.IDesignerHost.DestroyComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
  id: GetDesigner(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: GetDesigner(IComponent)
  nameWithType: IDesignerHost.GetDesigner(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.GetDesigner(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Obtém a instância do designer que contém o componente especificado."
  syntax:
    content: public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "O <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> para recuperar o designer para."
    return:
      type: System.ComponentModel.Design.IDesigner
      description: "Um <xref href=&quot;System.ComponentModel.Design.IDesigner&quot;> </xref>, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhum designer para o componente especificado."
  overload: System.ComponentModel.Design.IDesignerHost.GetDesigner*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.GetType(System.String)
  id: GetType(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: GetType(String)
  nameWithType: IDesignerHost.GetType(String)
  fullName: System.ComponentModel.Design.IDesignerHost.GetType(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Obtém uma instância do nome do tipo especificado, totalmente qualificado."
  syntax:
    content: public Type GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "O nome do tipo de carga."
    return:
      type: System.Type
      description: "O objeto de tipo para o nome do tipo especificado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o tipo não pode ser encontrado."
  overload: System.ComponentModel.Design.IDesignerHost.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.InTransaction
  id: InTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: InTransaction
  nameWithType: IDesignerHost.InTransaction
  fullName: System.ComponentModel.Design.IDesignerHost.InTransaction
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Obtém um valor que indica se o designer host está atualmente em uma transação."
  syntax:
    content: public bool InTransaction { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma transação está em andamento. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IDesignerHost.InTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.LoadComplete
  id: LoadComplete
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: LoadComplete
  nameWithType: IDesignerHost.LoadComplete
  fullName: System.ComponentModel.Design.IDesignerHost.LoadComplete
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Ocorre quando este designer conclui a carregar o documento."
  remarks: "Esse evento ocorre após a conclusão de um designer de carregar seu documento."
  syntax:
    content: public event EventHandler LoadComplete;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Loading
  id: Loading
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Loading
  nameWithType: IDesignerHost.Loading
  fullName: System.ComponentModel.Design.IDesignerHost.Loading
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Obtém um valor que indica se o designer host atualmente é carregar o documento."
  syntax:
    content: public bool Loading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o designer host atualmente é carregar o documento; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IDesignerHost.Loading*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.RootComponent
  id: RootComponent
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: RootComponent
  nameWithType: IDesignerHost.RootComponent
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponent
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Obtém a instância da classe base usada como o componente raiz para o projeto atual."
  remarks: "Essa classe base é normalmente um <xref:System.Windows.Forms.Form>ou <xref:System.Windows.Forms.UserControl>instância; ele define a classe para a qual estende a classe derivada do usuário.</xref:System.Windows.Forms.UserControl> </xref:System.Windows.Forms.Form>"
  syntax:
    content: public System.ComponentModel.IComponent RootComponent { get; }
    return:
      type: System.ComponentModel.IComponent
      description: "A instância da classe de componente raiz."
  overload: System.ComponentModel.Design.IDesignerHost.RootComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  id: RootComponentClassName
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: RootComponentClassName
  nameWithType: IDesignerHost.RootComponentClassName
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Obtém o nome totalmente qualificado da classe que está sendo criado."
  syntax:
    content: public string RootComponentClassName { get; }
    return:
      type: System.String
      description: "O nome totalmente qualificado da classe base do componente."
  overload: System.ComponentModel.Design.IDesignerHost.RootComponentClassName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosed
  id: TransactionClosed
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionClosed
  nameWithType: IDesignerHost.TransactionClosed
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosed
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adiciona um manipulador de eventos para o evento TransactionClosed."
  remarks: "Esse evento ocorre depois que uma transação é fechada.       Uma transação pode alterar algumas vezes vários valores. Os métodos de transação fornecem uma maneira de impedir o desempenho e a cintilação problemas evitando processamento repetitivo. Esses métodos adiar o processamento até depois que a transação foi fechada."
  syntax:
    content: public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;
    return:
      type: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosing
  id: TransactionClosing
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionClosing
  nameWithType: IDesignerHost.TransactionClosing
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosing
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adiciona um manipulador de eventos para o evento TransactionClosing."
  remarks: "Esse evento ocorre somente antes de uma transação é concluída.       Uma transação pode alterar algumas vezes vários valores. Os métodos de transação fornecem uma maneira de impedir o desempenho e a cintilação problemas evitando processamento repetitivo. Esses métodos adiar o processamento até depois que a transação foi fechada."
  syntax:
    content: public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;
    return:
      type: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription
  id: TransactionDescription
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionDescription
  nameWithType: IDesignerHost.TransactionDescription
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionDescription
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Obtém a descrição da transação atual."
  remarks: "A descrição é a descrição do último especificada com <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.</xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>"
  syntax:
    content: public string TransactionDescription { get; }
    return:
      type: System.String
      description: "Uma descrição da transação atual."
  overload: System.ComponentModel.Design.IDesignerHost.TransactionDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpened
  id: TransactionOpened
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionOpened
  nameWithType: IDesignerHost.TransactionOpened
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpened
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adiciona um manipulador de eventos para o evento TransactionOpened."
  remarks: "Esse evento ocorre quando uma transação foi iniciada.       Uma transação pode alterar algumas vezes vários valores. Os métodos de transação fornecem uma maneira de impedir o desempenho e a cintilação problemas evitando processamento repetitivo. Esses métodos adiar o processamento até depois que a transação foi fechada."
  syntax:
    content: public event EventHandler TransactionOpened;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpening
  id: TransactionOpening
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionOpening
  nameWithType: IDesignerHost.TransactionOpening
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpening
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adiciona um manipulador de eventos para o evento TransactionOpening."
  remarks: "Esse evento ocorre quando uma transação está prestes a começar.       Esse método permite que os clientes de designer do host executar operações antes de outros manipuladores são notificados de que uma transação foi iniciada. O manipulador especificado é chamado apenas quando a primeira chamada para <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>é feita.</xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> As chamadas subsequentes não gerar esse evento até que todos os objetos de transação tem sido descartados."
  syntax:
    content: public event EventHandler TransactionOpening;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IDesignerHost.Activate
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Activate()
  nameWithType: IDesignerHost.Activate()
  fullName: System.ComponentModel.Design.IDesignerHost.Activate()
- uid: System.ComponentModel.Design.IDesignerHost.Activated
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Activated
  nameWithType: IDesignerHost.Activated
  fullName: System.ComponentModel.Design.IDesignerHost.Activated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.IDesignerHost.Container
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Container
  nameWithType: IDesignerHost.Container
  fullName: System.ComponentModel.Design.IDesignerHost.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateComponent(Type)
  nameWithType: IDesignerHost.CreateComponent(Type)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateComponent(Type,String)
  nameWithType: IDesignerHost.CreateComponent(Type,String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateTransaction()
  nameWithType: IDesignerHost.CreateTransaction()
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction()
- uid: System.ComponentModel.Design.DesignerTransaction
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerTransaction
  nameWithType: DesignerTransaction
  fullName: System.ComponentModel.Design.DesignerTransaction
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateTransaction(String)
  nameWithType: IDesignerHost.CreateTransaction(String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction(String)
- uid: System.ComponentModel.Design.IDesignerHost.Deactivated
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Deactivated
  nameWithType: IDesignerHost.Deactivated
  fullName: System.ComponentModel.Design.IDesignerHost.Deactivated
- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: DestroyComponent(IComponent)
  nameWithType: IDesignerHost.DestroyComponent(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.DestroyComponent(IComponent)
- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetDesigner(IComponent)
  nameWithType: IDesignerHost.GetDesigner(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.GetDesigner(IComponent)
- uid: System.ComponentModel.Design.IDesigner
  parent: System.ComponentModel.Design
  isExternal: false
  name: IDesigner
  nameWithType: IDesigner
  fullName: System.ComponentModel.Design.IDesigner
- uid: System.ComponentModel.Design.IDesignerHost.GetType(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetType(String)
  nameWithType: IDesignerHost.GetType(String)
  fullName: System.ComponentModel.Design.IDesignerHost.GetType(String)
- uid: System.ComponentModel.Design.IDesignerHost.InTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: InTransaction
  nameWithType: IDesignerHost.InTransaction
  fullName: System.ComponentModel.Design.IDesignerHost.InTransaction
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.IDesignerHost.LoadComplete
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: LoadComplete
  nameWithType: IDesignerHost.LoadComplete
  fullName: System.ComponentModel.Design.IDesignerHost.LoadComplete
- uid: System.ComponentModel.Design.IDesignerHost.Loading
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Loading
  nameWithType: IDesignerHost.Loading
  fullName: System.ComponentModel.Design.IDesignerHost.Loading
- uid: System.ComponentModel.Design.IDesignerHost.RootComponent
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponent
  nameWithType: IDesignerHost.RootComponent
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponent
- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponentClassName
  nameWithType: IDesignerHost.RootComponentClassName
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosed
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionClosed
  nameWithType: IDesignerHost.TransactionClosed
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosed
- uid: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerTransactionCloseEventHandler
  nameWithType: DesignerTransactionCloseEventHandler
  fullName: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosing
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionClosing
  nameWithType: IDesignerHost.TransactionClosing
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosing
- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionDescription
  nameWithType: IDesignerHost.TransactionDescription
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionDescription
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpened
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionOpened
  nameWithType: IDesignerHost.TransactionOpened
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpened
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpening
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionOpening
  nameWithType: IDesignerHost.TransactionOpening
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpening
- uid: System.ComponentModel.Design.IDesignerHost.Activate*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Activate
  nameWithType: IDesignerHost.Activate
- uid: System.ComponentModel.Design.IDesignerHost.Container*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Container
  nameWithType: IDesignerHost.Container
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateComponent
  nameWithType: IDesignerHost.CreateComponent
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateTransaction
  nameWithType: IDesignerHost.CreateTransaction
- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: DestroyComponent
  nameWithType: IDesignerHost.DestroyComponent
- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetDesigner
  nameWithType: IDesignerHost.GetDesigner
- uid: System.ComponentModel.Design.IDesignerHost.GetType*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetType
  nameWithType: IDesignerHost.GetType
- uid: System.ComponentModel.Design.IDesignerHost.InTransaction*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: InTransaction
  nameWithType: IDesignerHost.InTransaction
- uid: System.ComponentModel.Design.IDesignerHost.Loading*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Loading
  nameWithType: IDesignerHost.Loading
- uid: System.ComponentModel.Design.IDesignerHost.RootComponent*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponent
  nameWithType: IDesignerHost.RootComponent
- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponentClassName
  nameWithType: IDesignerHost.RootComponentClassName
- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionDescription
  nameWithType: IDesignerHost.TransactionDescription
