### YamlMime:ManagedReference
items:
- uid: System.Drawing.SizeConverter
  id: SizeConverter
  children:
  - System.Drawing.SizeConverter.#ctor
  - System.Drawing.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Drawing.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.Drawing.SizeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.Drawing.SizeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: SizeConverter
  nameWithType: SizeConverter
  fullName: System.Drawing.SizeConverter
  type: Class
  summary: "A classe SizeConverter é usada para converter de um tipo de dados para outro. Essa classe por meio de acesso a <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref> objeto."
  syntax:
    content: 'public class SizeConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Drawing.SizeConverter.#ctor
  id: '#ctor'
  parent: System.Drawing.SizeConverter
  langs:
  - csharp
  name: SizeConverter()
  nameWithType: SizeConverter.SizeConverter()
  fullName: System.Drawing.SizeConverter.SizeConverter()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova <xref href=&quot;System.Drawing.SizeConverter&quot;> </xref> objeto."
  syntax:
    content: public SizeConverter ();
    parameters: []
  overload: System.Drawing.SizeConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.SizeConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: SizeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.SizeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determina se esse conversor pode converter um objeto no tipo de origem especificado para o tipo nativo do conversor."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que pode ser usado para obter informações adicionais sobre o ambiente esse conversor está sendo chamado. Isso pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, portanto, você sempre deve verificar. Além disso, as propriedades no objeto de contexto também podem retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: sourceType
      type: System.Type
      description: "O tipo que você deseja converter."
    return:
      type: System.Boolean
      description: "Este método retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se este objeto pode realizar a conversão."
  overload: System.Drawing.SizeConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.SizeConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: SizeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.SizeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém um valor que indica se esse conversor pode converter um objeto para o tipo de destino específico usando o contexto."
  remarks: "O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que pode ser usado para obter informações adicionais sobre o ambiente esse conversor está sendo chamado. Isso pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: destinationType
      type: System.Type
      description: "Um <xref:System.Type>que representa o tipo que você deseja converter.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "Este método retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se esse conversor puder realizar a conversão; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.SizeConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.SizeConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: SizeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.SizeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converte o objeto especificado em tipo nativo do conversor."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que pode ser usado para obter informações adicionais sobre o ambiente esse conversor está sendo chamado. Isso pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, portanto, você sempre deve verificar. Além disso, as propriedades no objeto de contexto também podem retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Um <xref:System.Globalization.CultureInfo>objeto que contém informações específicas de cultura, como o idioma, calendário e convenções culturais associadas a uma cultura específica.</xref:System.Globalization.CultureInfo> Ele se baseia a RFC 1766 padrão."
    - id: value
      type: System.Object
      description: "O objeto a ser convertido."
    return:
      type: System.Object
      description: "O objeto convertido."
  overload: System.Drawing.SizeConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A conversão não pode ser concluída."
  platform:
  - net462
- uid: System.Drawing.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.SizeConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: SizeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.SizeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converte o objeto especificado para o tipo especificado."
  remarks: "A conversão de tipo mais comum é para e de um tipo de cadeia de caracteres. A implementação padrão chama o <xref:System.Object.ToString%2A>método do objeto se o objeto é válido e se o tipo de destino é a cadeia de caracteres.</xref:System.Object.ToString%2A> Se esse método não é possível converter o objeto especificado para o tipo de destino, ele passa um <xref:System.NotSupportedException>exceção.</xref:System.NotSupportedException>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que pode ser usado para obter informações adicionais sobre o ambiente esse conversor está sendo chamado. Isso pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, portanto, você sempre deve verificar. Além disso, as propriedades no objeto de contexto também podem retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Um <xref:System.Globalization.CultureInfo>objeto que contém informações específicas de cultura, como o idioma, calendário e convenções culturais associadas a uma cultura específica.</xref:System.Globalization.CultureInfo> Ele se baseia a RFC 1766 padrão."
    - id: value
      type: System.Object
      description: "O objeto a ser convertido."
    - id: destinationType
      type: System.Type
      description: "O tipo para converter o objeto."
    return:
      type: System.Object
      description: "O objeto convertido."
  overload: System.Drawing.SizeConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A conversão não pode ser concluída."
  platform:
  - net462
- uid: System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  id: CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.Drawing.SizeConverter
  langs:
  - csharp
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: SizeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.Drawing.SizeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria um objeto desse tipo por meio de um conjunto especificado de valores de propriedade do objeto. Isso é útil para criar objetos imutável que tem propriedades mutáveis."
  syntax:
    content: public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref> por meio do qual o contexto adicional pode ser fornecido."
    - id: propertyValues
      type: System.Collections.IDictionary
      description: "Um dicionário de novos valores de propriedade. O dicionário contém uma série de pares nome-valor, uma para cada propriedade retornado do <xref:System.Drawing.SizeConverter.GetProperties*>método.</xref:System.Drawing.SizeConverter.GetProperties*>"
    return:
      type: System.Object
      description: "O objeto recentemente criado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o objeto não pôde ser criado. A implementação padrão retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.SizeConverter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.SizeConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: SizeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.Drawing.SizeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determina se a alteração de um valor no objeto deve exigir uma chamada para o <xref:System.Drawing.SizeConverter.CreateInstance*>método para criar um novo valor.</xref:System.Drawing.SizeConverter.CreateInstance*>"
  syntax:
    content: public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref> por meio do qual o contexto adicional pode ser fornecido."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Drawing.SizeConverter.CreateInstance*>objeto deve ser chamado quando uma alteração é feita em uma ou mais propriedades do objeto.</xref:System.Drawing.SizeConverter.CreateInstance*>"
  overload: System.Drawing.SizeConverter.GetCreateInstanceSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.Drawing.SizeConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: SizeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.Drawing.SizeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Recupera o conjunto de propriedades para este tipo. Por padrão, um tipo não tem propriedades a serem retornadas."
  remarks: "Uma simples implementação desse método pode chamar o <xref:System.ComponentModel.TypeConverter.GetProperties%2A>método para o tipo de dados correto.</xref:System.ComponentModel.TypeConverter.GetProperties%2A>"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref> por meio do qual o contexto adicional pode ser fornecido."
    - id: value
      type: System.Object
      description: "O valor do objeto para obter as propriedades."
    - id: attributes
      type: System.Attribute[]
      description: "Uma matriz de <xref:System.Attribute>objetos que descrevem as propriedades.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "O conjunto de propriedades que devem ser expostos para esse tipo de dados. Se nenhuma propriedade deve ser exposta, isso poderá retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. A implementação padrão sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.SizeConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.SizeConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: SizeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.Drawing.SizeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determina se esse objeto oferece suporte às propriedades. Por padrão, isso é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref> por meio do qual o contexto adicional pode ser fornecido."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Drawing.SizeConverter.GetProperties*>método deve ser chamado para localizar as propriedades deste objeto.</xref:System.Drawing.SizeConverter.GetProperties*>"
  overload: System.Drawing.SizeConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Drawing.SizeConverter.#ctor
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: SizeConverter()
  nameWithType: SizeConverter.SizeConverter()
  fullName: System.Drawing.SizeConverter.SizeConverter()
- uid: System.Drawing.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: SizeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.SizeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: SizeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.SizeConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Drawing.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: SizeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.SizeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Drawing.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: SizeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.SizeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: SizeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.Drawing.SizeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Drawing.SizeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: SizeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.Drawing.SizeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
- uid: System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: SizeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.Drawing.SizeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.SizeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: SizeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.Drawing.SizeConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.Drawing.SizeConverter.#ctor*
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: SizeConverter
  nameWithType: SizeConverter.SizeConverter
- uid: System.Drawing.SizeConverter.CanConvertFrom*
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: SizeConverter.CanConvertFrom
- uid: System.Drawing.SizeConverter.CanConvertTo*
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: SizeConverter.CanConvertTo
- uid: System.Drawing.SizeConverter.ConvertFrom*
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: SizeConverter.ConvertFrom
- uid: System.Drawing.SizeConverter.ConvertTo*
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: ConvertTo
  nameWithType: SizeConverter.ConvertTo
- uid: System.Drawing.SizeConverter.CreateInstance*
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: CreateInstance
  nameWithType: SizeConverter.CreateInstance
- uid: System.Drawing.SizeConverter.GetCreateInstanceSupported*
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: GetCreateInstanceSupported
  nameWithType: SizeConverter.GetCreateInstanceSupported
- uid: System.Drawing.SizeConverter.GetProperties*
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: GetProperties
  nameWithType: SizeConverter.GetProperties
- uid: System.Drawing.SizeConverter.GetPropertiesSupported*
  parent: System.Drawing.SizeConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: SizeConverter.GetPropertiesSupported
