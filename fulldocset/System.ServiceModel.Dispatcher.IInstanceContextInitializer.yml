### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  id: IInstanceContextInitializer
  children:
  - System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  langs:
  - csharp
  name: IInstanceContextInitializer
  nameWithType: IInstanceContextInitializer
  fullName: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  type: Interface
  summary: "Define os métodos necessários para inspecionar ou modificar a criação de <xref:System.ServiceModel.InstanceContext>objetos quando necessário.</xref:System.ServiceModel.InstanceContext>"
  remarks: "Para inspecionar ou modificar <xref:System.ServiceModel.InstanceContext>objetos quando eles são criados, implementar a interface IInstanceContextInitializer e usar um <xref:System.ServiceModel.Description.IContractBehavior>para adicioná-lo para o <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A>propriedade.</xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A> </xref:System.ServiceModel.Description.IContractBehavior> </xref:System.ServiceModel.InstanceContext>       Pode haver qualquer número de inicializadores de contexto para um serviço. Normalmente, o IInstanceContextInitializer é adicionado ao anexar uma extensão para o <xref:System.ServiceModel.InstanceContext>objeto como um mecanismo para passar dados em um aplicativo.</xref:System.ServiceModel.InstanceContext>       Se você deseja participar fornecendo ou selecionando o <xref:System.ServiceModel.InstanceContext>objeto que processa uma mensagem, consulte <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=fullName>.</xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=fullName> </xref:System.ServiceModel.InstanceContext>"
  syntax:
    content: public interface IInstanceContextInitializer
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  id: Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  langs:
  - csharp
  name: Initialize(InstanceContext,Message)
  nameWithType: IInstanceContextInitializer.Initialize(InstanceContext,Message)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(InstanceContext,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Fornece a capacidade de modificar recém-criado <xref:System.ServiceModel.InstanceContext>objeto.</xref:System.ServiceModel.InstanceContext>"
  remarks: "O método Initialize é chamado quando um <xref:System.ServiceModel.InstanceContext>objeto é criado.</xref:System.ServiceModel.InstanceContext> Normalmente, esse método é usado para anexar uma extensão para que os dados personalizados podem ser acessados em um aplicativo."
  syntax:
    content: public void Initialize (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "O contexto da instância fornecida pelo sistema."
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "A mensagem que disparou a criação do contexto da instância."
  overload: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  isExternal: false
  name: Initialize(InstanceContext,Message)
  nameWithType: IInstanceContextInitializer.Initialize(InstanceContext,Message)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(InstanceContext,Message)
- uid: System.ServiceModel.InstanceContext
  parent: System.ServiceModel
  isExternal: true
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize*
  parent: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  isExternal: false
  name: Initialize
  nameWithType: IInstanceContextInitializer.Initialize
