### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.FileIOPermissionAccess
  id: FileIOPermissionAccess
  children:
  - System.Security.Permissions.FileIOPermissionAccess.AllAccess
  - System.Security.Permissions.FileIOPermissionAccess.Append
  - System.Security.Permissions.FileIOPermissionAccess.NoAccess
  - System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  - System.Security.Permissions.FileIOPermissionAccess.Read
  - System.Security.Permissions.FileIOPermissionAccess.Write
  langs:
  - csharp
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
  type: Enum
  summary: "Especifica o tipo de acesso de arquivo solicitado."
  remarks: "Essa enumeração é usada com a <xref:System.Security.Permissions.FileIOPermission>classe.</xref:System.Security.Permissions.FileIOPermission>      > [!NOTE] > NoAccess embora e AllAccess são membros de FileIOPermissionAccess, eles não são válidos para uso como o parâmetro <xref:System.Security.Permissions.FileIOPermission.GetPathList%2A>porque eles descrevem nenhum tipo de acesso de arquivo ou todos os tipos de acesso de arquivo, respectivamente, e <xref:System.Security.Permissions.FileIOPermission.GetPathList%2A>espera um tipo de acesso de arquivo único.</xref:System.Security.Permissions.FileIOPermission.GetPathList%2A> </xref:System.Security.Permissions.FileIOPermission.GetPathList%2A>      > [!NOTE] > Gravar fornecendo acesso a um assembly é semelhante ao conceder a ele confiança total. Se um aplicativo não deve gravar o sistema de arquivos, ele não deve ter acesso de gravação."
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileIOPermissionAccess
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.AllAccess
  id: AllAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: AllAccess
  nameWithType: FileIOPermissionAccess.AllAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.AllAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Acrescente, acesso de leitura, gravação e PathDiscovery para um arquivo ou diretório. AllAccess representa vários valores FileIOPermissionAccess e faz com que um <xref:System.ArgumentException>quando usado como o <code> access </code> parâmetro para o <xref:System.Security.Permissions.FileIOPermission.GetPathList*>método, que espera um valor único.</xref:System.Security.Permissions.FileIOPermission.GetPathList*> </xref:System.ArgumentException>"
  syntax:
    content: AllAccess
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.Append
  id: Append
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: Append
  nameWithType: FileIOPermissionAccess.Append
  fullName: System.Security.Permissions.FileIOPermissionAccess.Append
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Acesso ao acrescentar material para um arquivo ou diretório. Acrescentar acesso inclui a capacidade de criar um novo arquivo ou diretório."
  remarks: >-
    > [!NOTE]

    >  To create files, code must also be granted both Append and either Write or Read access. For more detail see <xref:System.IO.FileMode>.
  syntax:
    content: Append
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.NoAccess
  id: NoAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: NoAccess
  nameWithType: FileIOPermissionAccess.NoAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.NoAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Sem acesso a um arquivo ou diretório. NoAccess não representa nenhum FileIOPermissionAccess os valores válidos e faz com que um <xref:System.ArgumentException>quando usado como o parâmetro <xref:System.Security.Permissions.FileIOPermission.GetPathList*>, que espera um valor único.</xref:System.Security.Permissions.FileIOPermission.GetPathList*> </xref:System.ArgumentException>"
  syntax:
    content: NoAccess
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  id: PathDiscovery
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: PathDiscovery
  nameWithType: FileIOPermissionAccess.PathDiscovery
  fullName: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Acesso às informações no caminho em si. Isso ajuda a proteger informações confidenciais no caminho, como nomes de usuário, bem como informações sobre a estrutura de diretório revelada no caminho. Esse valor não concede acesso a arquivos ou pastas representadas pelo caminho."
  remarks: >-
    > [!NOTE]

    >  For performance reasons, `PathDiscovery` should only be granted to directories, not to files. For example, `PathDiscovery` permission should be granted to paths such as C:\test and C:\test\\, not C:\test\example.txt.
  syntax:
    content: PathDiscovery
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.Read
  id: Read
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: Read
  nameWithType: FileIOPermissionAccess.Read
  fullName: System.Security.Permissions.FileIOPermissionAccess.Read
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Acesso de leitura de um arquivo ou diretório."
  syntax:
    content: Read
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.Write
  id: Write
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: Write
  nameWithType: FileIOPermissionAccess.Write
  fullName: System.Security.Permissions.FileIOPermissionAccess.Write
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Acesso para gravar ou excluir um arquivo ou diretório. Acesso de gravação inclui a exclusão e a substituição de arquivos ou diretórios."
  syntax:
    content: Write
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Permissions.FileIOPermissionAccess.AllAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: AllAccess
  nameWithType: FileIOPermissionAccess.AllAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.AllAccess
- uid: System.Security.Permissions.FileIOPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
- uid: System.Security.Permissions.FileIOPermissionAccess.Append
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: Append
  nameWithType: FileIOPermissionAccess.Append
  fullName: System.Security.Permissions.FileIOPermissionAccess.Append
- uid: System.Security.Permissions.FileIOPermissionAccess.NoAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: NoAccess
  nameWithType: FileIOPermissionAccess.NoAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.NoAccess
- uid: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: PathDiscovery
  nameWithType: FileIOPermissionAccess.PathDiscovery
  fullName: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
- uid: System.Security.Permissions.FileIOPermissionAccess.Read
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: Read
  nameWithType: FileIOPermissionAccess.Read
  fullName: System.Security.Permissions.FileIOPermissionAccess.Read
- uid: System.Security.Permissions.FileIOPermissionAccess.Write
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: Write
  nameWithType: FileIOPermissionAccess.Write
  fullName: System.Security.Permissions.FileIOPermissionAccess.Write
