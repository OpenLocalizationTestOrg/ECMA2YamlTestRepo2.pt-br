### YamlMime:ManagedReference
items:
- uid: System.Xaml.Schema.XamlMemberInvoker
  id: XamlMemberInvoker
  children:
  - System.Xaml.Schema.XamlMemberInvoker.#ctor
  - System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)
  - System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)
  - System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)
  - System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)
  - System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
  - System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
  - System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
  langs:
  - csharp
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
  type: Class
  summary: "Fornece um ponto de extensão que pode acessar características de um membro de um membro XAML por meio de técnicas diferente de reflexão."
  remarks: "A finalidade de XamlMemberInvoker é habilitar um trabalho que não depende de como totalmente os recursos CLR como atributos CLR, informações de reflexão por meio de tempo de execução de um sistema de tipo XAML extensível e esquemas <xref:System.Type>e <xref:System.Reflection.MemberInfo>, e assim por diante.</xref:System.Reflection.MemberInfo> </xref:System.Type> As subclasses de XamlMemberInvoker são usadas como parâmetros de entrada para os construtores alternativos de classes de esquema XAML como <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> Você subclasse <xref:System.Xaml.XamlMember>e passar XamlMemberInvoker por meio do construtor base.</xref:System.Xaml.XamlMember> Além de definir um XamlMemberInvoker para o construtor, você também deve fornecer substituições para pelo menos alguns do `Lookup` métodos de <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember>       XamlMemberInvoker tem uma implementação padrão. A implementação padrão segue um modelo semelhante para a implementação padrão de tipos de esquema XAML <xref:System.Xaml.XamlType>e <xref:System.Xaml.XamlMember>: o sistema de tipos CLR é usado para instanciação, valores e pesquisas, incluindo o uso de atributos CLR, <xref:System.Type>e <xref:System.Reflection.MemberInfo>, e assim por diante.</xref:System.Reflection.MemberInfo> </xref:System.Type> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlType>       XamlMemberInvoker fornece métodos para get básico e operações de conjunto (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A></xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> Ele também fornece as propriedades <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>e <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, mas eles não são virtuais.</xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> </xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>      > [!NOTE] > É possível obter um valor de XamlMemberInvoker que representa uma diretiva XAML, que é implementada como uma classe privada na implementação System. XAML. Se você tentar chamar <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>ou <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>neste chamador, uma exceção será lançada.</xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> </xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>"
  syntax:
    content: public class XamlMemberInvoker
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor
  id: '#ctor'
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: XamlMemberInvoker()
  nameWithType: XamlMemberInvoker.XamlMemberInvoker()
  fullName: System.Xaml.Schema.XamlMemberInvoker.XamlMemberInvoker()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> classe."
  remarks: "A implementação padrão está vazia.       Este construtor é chamado internamente para fornecer um valor para <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A> Para um <xref:System.Xaml.Schema.XamlMemberInvoker>subclasse, espera-se que você use o <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29>assinatura para a construção ou fornecer uma substituição que chama <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29>como base.</xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> </xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> </xref:System.Xaml.Schema.XamlMemberInvoker> Fornecendo o <xref:System.Xaml.XamlMember>implementa uma padrão padrão onde <xref:System.Xaml.Schema.XamlMemberInvoker>é imutável.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember>"
  syntax:
    content: protected XamlMemberInvoker ();
    parameters: []
  overload: System.Xaml.Schema.XamlMemberInvoker.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)
  id: '#ctor(System.Xaml.XamlMember)'
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: XamlMemberInvoker(XamlMember)
  nameWithType: XamlMemberInvoker.XamlMemberInvoker(XamlMember)
  fullName: System.Xaml.Schema.XamlMemberInvoker.XamlMemberInvoker(XamlMember)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> classe, com base em um fornecido <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Este construtor é chamado internamente com base no <xref:System.Xaml.XamlMember>onde o <xref:System.Xaml.Schema.XamlMemberInvoker>é usado para a construção.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember>"
  syntax:
    content: public XamlMemberInvoker (System.Xaml.XamlMember member);
    parameters:
    - id: member
      type: System.Xaml.XamlMember
      description: "O <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> valor para o membro específico do XAML relevante a esse <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>."
  overload: System.Xaml.Schema.XamlMemberInvoker.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>member</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: GetValue(Object)
  nameWithType: XamlMemberInvoker.GetValue(Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.GetValue(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Obtém um valor da propriedade relevante de uma instância."
  syntax:
    content: public virtual object GetValue (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Uma instância do tipo de proprietário para o membro."
    return:
      type: System.Object
      description: "O valor da propriedade solicitada."
  overload: System.Xaml.Schema.XamlMemberInvoker.GetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Chamado esse método em um <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> que se baseia no desconhecido <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>.       **- ou -** chamado esse método em um membro de somente gravação.       **-or-**       <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*>"
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: XamlMemberInvoker.SetValue(Object,Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.SetValue(Object,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Define um valor da propriedade relevante em uma instância."
  syntax:
    content: public virtual void SetValue (object instance, object value);
    parameters:
    - id: instance
      type: System.Object
      description: "Uma instância do tipo de proprietário para o membro."
    - id: value
      type: System.Object
      description: "O valor da propriedade para definir."
  overload: System.Xaml.Schema.XamlMemberInvoker.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Chamado esse método em um <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> que se baseia no desconhecido <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>.       **- ou -** chamado esse método em um membro somente leitura.       **-or-**       <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*>"
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)
  id: ShouldSerializeValue(System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: ShouldSerializeValue(Object)
  nameWithType: XamlMemberInvoker.ShouldSerializeValue(Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Indica se o valor deve ser mantido por processos de serialização."
  remarks: "A implementação padrão retorna <xref:System.Xaml.Schema.ShouldSerializeResult>se for o próprio membro XAML <xref:System.Xaml.XamlMember.IsUnknown%2A>, ou se nenhum CLR-reflexão relevante `ShouldSerialize` método foi encontrado no membro subjacente por meio de reflexão padrão.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.Schema.ShouldSerializeResult>"
  syntax:
    content: public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "A instância com a propriedade a ser examinado para persistência."
    return:
      type: System.Xaml.Schema.ShouldSerializeResult
      description: "Um valor da enumeração."
  overload: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
  id: UnderlyingGetter
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: UnderlyingGetter
  nameWithType: XamlMemberInvoker.UnderlyingGetter
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Obtém o <xref:System.Reflection.MethodInfo>para o CLR método que obtém valores de propriedade que é relevante para esse <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  remarks: "Esta propriedade depende chamando <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>em criação <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> Para desconhecido <xref:System.Xaml.XamlMember>, ou para casos onde <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>retorna `null`, essa propriedade retornará `null`.</xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> </xref:System.Xaml.XamlMember>"
  syntax:
    content: public System.Reflection.MethodInfo UnderlyingGetter { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "O <xref:System.Reflection.MethodInfo>para o CLR método que obtém valores de propriedade que é relevante para esse <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
  id: UnderlyingSetter
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: UnderlyingSetter
  nameWithType: XamlMemberInvoker.UnderlyingSetter
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Obtém o <xref:System.Reflection.MethodInfo>para o CLR o método que define valores para a propriedade que é relevante para esse <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  remarks: "Esta propriedade depende chamando <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>em criação <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> Para desconhecido <xref:System.Xaml.XamlMember>, ou para casos onde <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>retorna `null`, essa propriedade retornará `null`.</xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> </xref:System.Xaml.XamlMember>"
  syntax:
    content: public System.Reflection.MethodInfo UnderlyingSetter { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "O <xref:System.Reflection.MethodInfo>para o CLR o método que define valores para a propriedade que é relevante para esse <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
  id: UnknownInvoker
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: UnknownInvoker
  nameWithType: XamlMemberInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Fornece um valor estático que representa desconhecido, não é totalmente implementado <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>."
  remarks: "Fornecer esse valor para um <xref:System.Xaml.Schema.XamlMemberInvoker>parâmetro de System. XAML definido API geralmente fará com que o código de chamada a gerar exceções.</xref:System.Xaml.Schema.XamlMemberInvoker>"
  syntax:
    content: public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "Um valor estático que representa desconhecido, não é totalmente implementado <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>."
  overload: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: XamlMemberInvoker()
  nameWithType: XamlMemberInvoker.XamlMemberInvoker()
  fullName: System.Xaml.Schema.XamlMemberInvoker.XamlMemberInvoker()
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: XamlMemberInvoker(XamlMember)
  nameWithType: XamlMemberInvoker.XamlMemberInvoker(XamlMember)
  fullName: System.Xaml.Schema.XamlMemberInvoker.XamlMemberInvoker(XamlMember)
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: GetValue(Object)
  nameWithType: XamlMemberInvoker.GetValue(Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.GetValue(Object)
- uid: System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: XamlMemberInvoker.SetValue(Object,Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.SetValue(Object,Object)
- uid: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: ShouldSerializeValue(Object)
  nameWithType: XamlMemberInvoker.ShouldSerializeValue(Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(Object)
- uid: System.Xaml.Schema.ShouldSerializeResult
  parent: System.Xaml.Schema
  isExternal: false
  name: ShouldSerializeResult
  nameWithType: ShouldSerializeResult
  fullName: System.Xaml.Schema.ShouldSerializeResult
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnderlyingGetter
  nameWithType: XamlMemberInvoker.UnderlyingGetter
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnderlyingSetter
  nameWithType: XamlMemberInvoker.UnderlyingSetter
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
- uid: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlMemberInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
- uid: System.Xaml.Schema.XamlMemberInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker.XamlMemberInvoker
- uid: System.Xaml.Schema.XamlMemberInvoker.GetValue*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: GetValue
  nameWithType: XamlMemberInvoker.GetValue
- uid: System.Xaml.Schema.XamlMemberInvoker.SetValue*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: SetValue
  nameWithType: XamlMemberInvoker.SetValue
- uid: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: ShouldSerializeValue
  nameWithType: XamlMemberInvoker.ShouldSerializeValue
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnderlyingGetter
  nameWithType: XamlMemberInvoker.UnderlyingGetter
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnderlyingSetter
  nameWithType: XamlMemberInvoker.UnderlyingSetter
- uid: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlMemberInvoker.UnknownInvoker
