### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewUpdateEventHandler
  id: FormViewUpdateEventHandler
  langs:
  - csharp
  name: FormViewUpdateEventHandler
  nameWithType: FormViewUpdateEventHandler
  fullName: System.Web.UI.WebControls.FormViewUpdateEventHandler
  type: Delegate
  summary: "Representa o método que manipula o <xref href=&quot;System.Web.UI.WebControls.FormView.ItemUpdating&quot;> </xref> eventos de um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controlar gera o <xref:System.Web.UI.WebControls.FormView.ItemUpdating>evento quando um botão de atualização (um botão com seu `CommandName` propriedade definida como &quot;Update&quot;) dentro do controle é clicado, mas antes de <xref:System.Web.UI.WebControls.FormView>controle atualiza o registro.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView> Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como HTML codificação ou validar os valores de um registro antes de atualizá-lo na fonte de dados, sempre que esse evento ocorre.       Quando você cria um delegado FormViewUpdateEventHandler, identifica o método que manipulará o evento. Para associar o evento com o manipulador de eventos, adicione uma instância do representante ao evento. O manipulador de eventos é chamado sempre que o evento ocorre, a menos que você remova o delegado. Para obter mais informações sobre delegados de manipulador de eventos, consulte [NIB: eventos e delegados](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  example:
  - "The following example demonstrates how to programmatically add a FormViewUpdateEventHandler delegate to the <xref:System.Web.UI.WebControls.FormView.ItemUpdating> event of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormViewUpdatedEventHandler#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_198_1.aspx)]\n [!code-cs[FormViewUpdatedEventHandler#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_198_1.aspx)]  \n  \n The following example demonstrates how to declaratively add a FormViewUpdateEventHandler delegate to the <xref:System.Web.UI.WebControls.FormView.ItemUpdating> event of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-cs[FormViewUpdateEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_198_2.aspx)]\n [!code-vb[FormViewUpdateEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_198_2.aspx)]"
  syntax:
    content: public delegate void FormViewUpdateEventHandler(object sender, FormViewUpdateEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
