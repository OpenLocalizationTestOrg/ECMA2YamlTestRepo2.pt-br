### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlCollection
  id: ControlCollection
  children:
  - System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.Add(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)
  - System.Web.UI.ControlCollection.Clear
  - System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.ControlCollection.Count
  - System.Web.UI.ControlCollection.GetEnumerator
  - System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.IsReadOnly
  - System.Web.UI.ControlCollection.IsSynchronized
  - System.Web.UI.ControlCollection.Item(System.Int32)
  - System.Web.UI.ControlCollection.Owner
  - System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.RemoveAt(System.Int32)
  - System.Web.UI.ControlCollection.SyncRoot
  langs:
  - csharp
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
  type: Class
  summary: "Fornece um contêiner de coleção que permite que os controles de servidor ASP.NET manter uma lista de seus controles filhos."
  remarks: "Você pode acessar qualquer uma das propriedades e métodos da classe ControlCollection por meio de <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>propriedade.</xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> Desde o <xref:System.Web.UI.Control>classe é a classe base para todos os controles de servidor ASP.NET, todos os controles de servidor herdam essa propriedade.</xref:System.Web.UI.Control>       Para obter mais informações sobre coleções, consulte [coleções e estruturas de dados](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example overrides the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> method to create two controls, both instances of the custom class named `ChildControl`, which has a string property named `Message`. When created, the two controls are added to the ControlCollection. The <xref:System.Web.UI.ControlCollection.Add%2A> method is called on each of these controls to add them to the class that contains this version of <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName>. The <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true` so that these controls will not be created again unnecessarily.  \n  \n [!code-vb[Control_Sample_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlc_0_1.vb)]\n [!code-cs[Control_Sample_1#1](~/add/codesnippet/csharp/t-system.web.ui.controlc_0_1.cs)]"
  syntax:
    content: 'public class ControlCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)
  id: '#ctor(System.Web.UI.Control)'
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: ControlCollection(Control)
  nameWithType: ControlCollection.ControlCollection(Control)
  fullName: System.Web.UI.ControlCollection.ControlCollection(Control)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> classe para o controle de servidor pai especificado."
  remarks: ''
  example:
  - "The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the constructor to write messages (which include the name of the <xref:System.Web.UI.ControlCollection.Owner%2A> property) to the trace log when an instance of the collection is created. You must enable tracing for the page or application for this example to work.  \n  \n [!code-cs[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_10_1.cs)]\n [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_10_1.vb)]"
  syntax:
    content: public ControlCollection (System.Web.UI.Control owner);
    parameters:
    - id: owner
      type: System.Web.UI.Control
      description: "O controle de servidor ASP.NET criado para a coleção de controle."
  overload: System.Web.UI.ControlCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ocorre quando o <code> owner </code> parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Add(System.Web.UI.Control)
  id: Add(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Add(Control)
  nameWithType: ControlCollection.Add(Control)
  fullName: System.Web.UI.ControlCollection.Add(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adiciona o <xref href=&quot;System.Web.UI.Control&quot;> </xref> objeto à coleção."
  remarks: "O novo controle é adicionado ao final de uma matriz de índice ordinal. O controle pode ser uma instância de qualquer controle de servidor ASP.NET, um controle de servidor personalizado que você criar ou um controle literal.       Para adicionar um controle para a coleção em um local de índice específico, use o <xref:System.Web.UI.ControlCollection.AddAt%2A>método.</xref:System.Web.UI.ControlCollection.AddAt%2A>"
  example:
  - "The following code example uses the Add method to add a series of template items, the number of which are taken from the server control's view state, to a custom templated control.  \n  \n [!code-cs[TemplatedDataBoundControl#2](~/add/codesnippet/csharp/m-system.web.ui.controlc_5_1.cs)]\n [!code-vb[TemplatedDataBoundControl#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_5_1.vb)]"
  syntax:
    content: public virtual void Add (System.Web.UI.Control child);
    parameters:
    - id: child
      type: System.Web.UI.Control
      description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> para adicionar à coleção."
  overload: System.Web.UI.ControlCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Lançado se o <code> child </code> parâmetro não especificar um controle."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Lançado se o <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> é somente leitura."
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)
  id: AddAt(System.Int32,System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: AddAt(Int32,Control)
  nameWithType: ControlCollection.AddAt(Int32,Control)
  fullName: System.Web.UI.ControlCollection.AddAt(Int32,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adiciona o <xref href=&quot;System.Web.UI.Control&quot;> </xref> objeto à coleção no local do índice especificado."
  remarks: "O controle adicional pode ser uma instância de qualquer controle de servidor ASP.NET, um controle de servidor personalizado que você criar ou um controle literal."
  example:
  - "The following code example uses the AddAt method to create a new <xref:System.Web.UI.LiteralControl> named `ChildControl2` and add it to the `myButton` control's <xref:System.Web.UI.ControlCollection> collection at the index location of 1.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_0_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_0_1.aspx)]"
  syntax:
    content: public virtual void AddAt (int index, System.Web.UI.Control child);
    parameters:
    - id: index
      type: System.Int32
      description: "O local na matriz na qual adicionar o controle filho."
    - id: child
      type: System.Web.UI.Control
      description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> para adicionar à coleção."
  overload: System.Web.UI.ControlCollection.AddAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> child </code> parâmetro não especificar um controle."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O <code> index </code> parâmetro for menor que zero ou maior que o &lt;xref:System.Web.UI.ControlCollection.Count%2A?displayProperty=fullName&gt; propriedade."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> é somente leitura."
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Clear
  id: Clear
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ControlCollection.Clear()
  fullName: System.Web.UI.ControlCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Remove todos os controles do controle de servidor atual <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto."
  remarks: "Use esse método para esvaziar um controle personalizado <xref:System.Web.UI.ControlCollection>quando você substituir o <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName>e <xref:System.Web.UI.Control.DataBind%2A>métodos.</xref:System.Web.UI.Control.DataBind%2A> </xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> </xref:System.Web.UI.ControlCollection> Faça isso quando você desenvolve controles compostos, modelo ou controles de associação de dados de modelo."
  example:
  - "The following code example demonstrates overriding the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> method, and using the Clear method to delete all child controls previously in the <xref:System.Web.UI.ControlCollection> object. In this case, you must do this so that outdated objects in your control's <xref:System.Web.UI.ControlCollection> are not displayed inappropriately.  \n  \n [!code-cs[TemplatedDataBoundControl#2](~/add/codesnippet/csharp/m-system.web.ui.controlc_6_1.cs)]\n [!code-vb[TemplatedDataBoundControl#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_6_1.vb)]"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Web.UI.ControlCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)
  id: Contains(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Contains(Control)
  nameWithType: ControlCollection.Contains(Control)
  fullName: System.Web.UI.ControlCollection.Contains(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o controle de servidor especificado está no controle de servidor pai <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto."
  remarks: ''
  example:
  - >-
    [!code-cs[System.Web.UI.ctrlCollection_Contains#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_3_1.aspx)]
     [!code-vb[System.Web.UI.ctrlCollection_Contains#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_3_1.aspx)]
  syntax:
    content: public virtual bool Contains (System.Web.UI.Control c);
    parameters:
    - id: c
      type: System.Web.UI.Control
      description: "O controle de servidor a ser pesquisado na coleção."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle de servidor especificado existe na coleção; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ControlCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.ControlCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Copia os controles filho armazenados no <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> o objeto para um &lt;xref:System.Array?displayProperty=fullName&gt; objeto, começando no local do índice especificado no &lt;xref:System.Array?displayProperty=fullName&gt;."
  syntax:
    content: public virtual void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "O &lt;xref:System.Array?displayProperty=fullName&gt; para copiar os controles filho."
    - id: index
      type: System.Int32
      description: "O índice baseado em zero relativo no `array` onde a cópia começa."
  overload: System.Web.UI.ControlCollection.CopyTo*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>array</code>não é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e não unidimensional."
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Count
  id: Count
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Count
  nameWithType: ControlCollection.Count
  fullName: System.Web.UI.ControlCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o número de controles de servidor a <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto para o controle de servidor ASP.NET especificado."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Count property to iterate through a control's <xref:System.Web.UI.ControlCollection> object. The use of the <xref:System.Web.UI.Control.HasControls%2A?displayProperty=fullName> property verifies that the control has child controls. If <xref:System.Web.UI.Control.HasControls%2A?displayProperty=fullName> returns `false`, the remaining code does not run.  \n  \n [!code-vb[Classic Control.HasControls Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_1_1.vb)]\n [!code-cs[Classic Control.HasControls Example#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_1_1.cs)]"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "O número de controles de servidor a <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>."
  overload: System.Web.UI.ControlCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ControlCollection.GetEnumerator()
  fullName: System.Web.UI.ControlCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Recupera um enumerador que pode iterar por meio de <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto."
  remarks: ''
  example:
  - "The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe. When the enumeration is completed, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_1_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/m-system.web.ui.controlc_1_1.aspx)]"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "O enumerador para iteração pela coleção."
  overload: System.Web.UI.ControlCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)
  id: IndexOf(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: IndexOf(Control)
  nameWithType: ControlCollection.IndexOf(Control)
  fullName: System.Web.UI.ControlCollection.IndexOf(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Recupera o índice de um especificado <xref href=&quot;System.Web.UI.Control&quot;> </xref> objeto na coleção."
  remarks: "Use esse método para determinar o local do índice do controle do servidor especificado no <xref:System.Web.UI.ControlCollection>objeto.</xref:System.Web.UI.ControlCollection>"
  example:
  - "The following code example uses the IndexOf method to write the index location of a control, `myLiteralControl`, in the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control named `myButton`.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_4_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_4_1.aspx)]"
  syntax:
    content: public virtual int IndexOf (System.Web.UI.Control value);
    parameters:
    - id: value
      type: System.Web.UI.Control
      description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> para a qual o índice é retornado."
    return:
      type: System.Int32
      description: "O índice do controle do servidor especificado. Se o controle de servidor não é um membro da coleção, ele retornará -1."
  overload: System.Web.UI.ControlCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ControlCollection.IsReadOnly
  fullName: System.Web.UI.ControlCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto é somente leitura."
  remarks: ''
  example:
  - "The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the IsReadOnly property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_5_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/p-system.web.ui.controlc_5_1.aspx)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle for somente leitura; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ControlCollection.IsSynchronized
  fullName: System.Web.UI.ControlCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto foi sincronizado."
  remarks: ''
  example:
  - "The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the IsSynchronized property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_6_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/p-system.web.ui.controlc_6_1.aspx)]"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Esta propriedade é sempre <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ControlCollection.Item(Int32)
  fullName: System.Web.UI.ControlCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência para o controle de servidor no local de índice especificado do <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto."
  remarks: ''
  example:
  - "The following code example uses the Item property to specify the index location of a child control that is removed in a <xref:System.Web.UI.ControlCollection.Remove%2A> method call. This is performed by the `myButton.Controls.Remove` syntax.  \n  \n [!code-vb[ControlCollection_ReSubmit_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_2_1.aspx)]\n [!code-cs[ControlCollection_ReSubmit_2#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_2_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.Control this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O local do controle de servidor a <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>."
    return:
      type: System.Web.UI.Control
      description: "A referência ao controle."
  overload: System.Web.UI.ControlCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O <code> index </code> parâmetro for menor que zero ou maior que ou igual a &lt;xref:System.Web.UI.ControlCollection.Count%2A?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Owner
  id: Owner
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Owner
  nameWithType: ControlCollection.Owner
  fullName: System.Web.UI.ControlCollection.Owner
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o controle de servidor ASP.NET para o qual o <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto pertence."
  remarks: ''
  example:
  - "The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the <xref:System.Web.UI.ControlCollection.%23ctor%2A> method to write messages (which include the name of the Owner property) to the trace log when an instance of the collection is created. You must enable tracing for the page or application for this example to work.  \n  \n [!code-cs[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_4_1.cs)]\n [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_4_1.vb)]"
  syntax:
    content: protected System.Web.UI.Control Owner { get; }
    return:
      type: System.Web.UI.Control
      description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> ao qual o <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> pertence."
  overload: System.Web.UI.ControlCollection.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)
  id: Remove(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Remove(Control)
  nameWithType: ControlCollection.Remove(Control)
  fullName: System.Web.UI.ControlCollection.Remove(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Remove o controle de servidor especificado do controle de servidor pai <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto."
  remarks: "Para remover um controle de um local de índice, use o <xref:System.Web.UI.ControlCollection.RemoveAt%2A>método.</xref:System.Web.UI.ControlCollection.RemoveAt%2A>"
  example:
  - "The following code example uses the Remove method to delete a child control from the `myButton` server control. First the code uses the <xref:System.Web.UI.ControlCollection.Contains%2A> method to determine whether the `myChildControl` is contained in the <xref:System.Web.UI.ControlCollection> object, and, if it is, removes it.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#4](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_9_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#4](~/add/codesnippet/csharp/m-system.web.ui.controlc_9_1.aspx)]"
  syntax:
    content: public virtual void Remove (System.Web.UI.Control value);
    parameters:
    - id: value
      type: System.Web.UI.Control
      description: "O controle de servidor a ser removido."
  overload: System.Web.UI.ControlCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ControlCollection.RemoveAt(Int32)
  fullName: System.Web.UI.ControlCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Remove um controle filho, no local do índice especificado, o <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto."
  remarks: "Para remover um controle da coleção com base em seu valor, use o <xref:System.Web.UI.ControlCollection.Remove%2A>método.</xref:System.Web.UI.ControlCollection.Remove%2A>"
  example:
  - "The following code example uses the RemoveAt method to delete a child control from the `myButton` server control. The method call first specifies an index location of 1 from which the control is deleted. The example then writes to the containing page a text message saying that the control at that location has been deleted from the <xref:System.Web.UI.ControlCollection> collection.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#5](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_7_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#5](~/add/codesnippet/csharp/m-system.web.ui.controlc_7_1.aspx)]"
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice ordinal do controle de servidor a ser removido da coleção."
  overload: System.Web.UI.ControlCollection.RemoveAt*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Lançado se o <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> é somente leitura."
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ControlCollection.SyncRoot
  fullName: System.Web.UI.ControlCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um objeto que pode ser usado para sincronizar o acesso à coleção de controles."
  remarks: ''
  example:
  - "The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the SyncRoot property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_3_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/p-system.web.ui.controlc_3_1.aspx)]"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "O <xref:System.Object>usado para sincronizar a coleção.</xref:System.Object>"
  overload: System.Web.UI.ControlCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: ControlCollection(Control)
  nameWithType: ControlCollection.ControlCollection(Control)
  fullName: System.Web.UI.ControlCollection.ControlCollection(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.ControlCollection.Add(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Add(Control)
  nameWithType: ControlCollection.Add(Control)
  fullName: System.Web.UI.ControlCollection.Add(Control)
- uid: System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: AddAt(Int32,Control)
  nameWithType: ControlCollection.AddAt(Int32,Control)
  fullName: System.Web.UI.ControlCollection.AddAt(Int32,Control)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.ControlCollection.Clear
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Clear()
  nameWithType: ControlCollection.Clear()
  fullName: System.Web.UI.ControlCollection.Clear()
- uid: System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Contains(Control)
  nameWithType: ControlCollection.Contains(Control)
  fullName: System.Web.UI.ControlCollection.Contains(Control)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ControlCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.ControlCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.ControlCollection.Count
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Count
  nameWithType: ControlCollection.Count
  fullName: System.Web.UI.ControlCollection.Count
- uid: System.Web.UI.ControlCollection.GetEnumerator
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ControlCollection.GetEnumerator()
  fullName: System.Web.UI.ControlCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IndexOf(Control)
  nameWithType: ControlCollection.IndexOf(Control)
  fullName: System.Web.UI.ControlCollection.IndexOf(Control)
- uid: System.Web.UI.ControlCollection.IsReadOnly
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ControlCollection.IsReadOnly
  fullName: System.Web.UI.ControlCollection.IsReadOnly
- uid: System.Web.UI.ControlCollection.IsSynchronized
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ControlCollection.IsSynchronized
  fullName: System.Web.UI.ControlCollection.IsSynchronized
- uid: System.Web.UI.ControlCollection.Item(System.Int32)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ControlCollection.Item(Int32)
  fullName: System.Web.UI.ControlCollection.Item(Int32)
- uid: System.Web.UI.ControlCollection.Owner
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Owner
  nameWithType: ControlCollection.Owner
  fullName: System.Web.UI.ControlCollection.Owner
- uid: System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Remove(Control)
  nameWithType: ControlCollection.Remove(Control)
  fullName: System.Web.UI.ControlCollection.Remove(Control)
- uid: System.Web.UI.ControlCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ControlCollection.RemoveAt(Int32)
  fullName: System.Web.UI.ControlCollection.RemoveAt(Int32)
- uid: System.Web.UI.ControlCollection.SyncRoot
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ControlCollection.SyncRoot
  fullName: System.Web.UI.ControlCollection.SyncRoot
- uid: System.Web.UI.ControlCollection.#ctor*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection.ControlCollection
- uid: System.Web.UI.ControlCollection.Add*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Add
  nameWithType: ControlCollection.Add
- uid: System.Web.UI.ControlCollection.AddAt*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: AddAt
  nameWithType: ControlCollection.AddAt
- uid: System.Web.UI.ControlCollection.Clear*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Clear
  nameWithType: ControlCollection.Clear
- uid: System.Web.UI.ControlCollection.Contains*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Contains
  nameWithType: ControlCollection.Contains
- uid: System.Web.UI.ControlCollection.CopyTo*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: CopyTo
  nameWithType: ControlCollection.CopyTo
- uid: System.Web.UI.ControlCollection.Count*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Count
  nameWithType: ControlCollection.Count
- uid: System.Web.UI.ControlCollection.GetEnumerator*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ControlCollection.GetEnumerator
- uid: System.Web.UI.ControlCollection.IndexOf*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IndexOf
  nameWithType: ControlCollection.IndexOf
- uid: System.Web.UI.ControlCollection.IsReadOnly*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ControlCollection.IsReadOnly
- uid: System.Web.UI.ControlCollection.IsSynchronized*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ControlCollection.IsSynchronized
- uid: System.Web.UI.ControlCollection.Item*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Item
  nameWithType: ControlCollection.Item
- uid: System.Web.UI.ControlCollection.Owner*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Owner
  nameWithType: ControlCollection.Owner
- uid: System.Web.UI.ControlCollection.Remove*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Remove
  nameWithType: ControlCollection.Remove
- uid: System.Web.UI.ControlCollection.RemoveAt*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ControlCollection.RemoveAt
- uid: System.Web.UI.ControlCollection.SyncRoot*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ControlCollection.SyncRoot
