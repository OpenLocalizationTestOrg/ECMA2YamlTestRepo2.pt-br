### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaValidationFlags
  id: XmlSchemaValidationFlags
  children:
  - System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  - System.Xml.Schema.XmlSchemaValidationFlags.None
  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  - System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  langs:
  - csharp
  name: XmlSchemaValidationFlags
  nameWithType: XmlSchemaValidationFlags
  fullName: System.Xml.Schema.XmlSchemaValidationFlags
  type: Enum
  summary: "Especifica as opções de validação de esquema usadas pelo <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> e <xref:System.Xml.XmlReader>classes.</xref:System.Xml.XmlReader>"
  remarks: "A seguir estão anotações a serem considerados ao usar XmlSchemaValidationFlags valores com <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>      -Valores XmlSchemaValidationFlags definem opções de validação usadas por um esquema de validação <xref:System.Xml.XmlReader>para executar a validação de XML em um esquema.</xref:System.Xml.XmlReader> XmlSchemaValidationFlags valores para uma validação <xref:System.Xml.XmlReader>são especificados usando o <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>propriedade.</xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> </xref:System.Xml.XmlReader>       A seguir estão as anotações a serem considerados ao usar o valor de AllowXmlAttributes.      1.  Quando um esquema não importa o namespace de Xml.          1.  Se AllowXmlAttributes for definido como `true` (padrão) e o documento de instância contém atributos Xml, o mecanismo de validação carregará um instantâneo do esquema do namespace de Xml padrão e usá-lo para validação. Se os atributos Xml usados no documento da instância não forem encontrados no esquema padrão, não será validado, o documento.          2.  Se AllowXmlAttributes for definido como `false` e o documento de instância contém atributos Xml, o mecanismo de validação relatará um erro.      2.  Quando um esquema importa o namespace de Xml sem uma localização.          1.  Se AllowXmlAttributes for definido como `true` (padrão) e o documento de instância contém atributos Xml, o mecanismo de validação usará o esquema padrão do namespace Xml para validação. Se os atributos Xml usados no documento da instância não forem encontrados no esquema padrão, não será validado, o documento.          2.  Se AllowXmlAttributes for definido como `false` e o documento de instância contém atributos de Xml que não são explicitamente permitidos pelo esquema, o mecanismo de validação relatará um erro.          3.  Se AllowXmlAttributes for definido como `false` e o documento de instância contém os atributos Xml são explicitamente permitidos pelo esquema, o mecanismo de validação validar os atributos da mesma forma que ele valida outros atributos usando o esquema do namespace Xml padrão.      3.  Quando um esquema importa um esquema de namespace Xml personalizado com um schemaLocation personalizado.          1.  Se AllowXmlAttributes for definido como `true` (padrão) e o documento de instância contém atributos Xml, o mecanismo de validação usará o esquema do namespace Xml personalizado para validação. Se os atributos Xml usados no documento da instância não forem encontrados no esquema especificado, não será validado, o documento.          2.  Se AllowXmlAttributes for definido como `false` e o documento de instância contém atributos de Xml que não são explicitamente permitidos pelo esquema, o mecanismo de validação relatará um erro.          3.  Se AllowXmlAttributes for definido como `false` e o documento de instância contém os atributos Xml são explicitamente permitidos pelo esquema, o mecanismo de validação validar os atributos da mesma forma que ele valida outros atributos usando o esquema de namespace Xml especificado.      4.  Quando um esquema define um xml:* atributo com use = &quot;necessário&quot;.          1.  O seguinte se aplica quando AllowXmlAttributes está definido como `true` e `false`. Necessário xml:* atributos devem ser tratados como outros atributos e validados usando o esquema do namespace Xml especificado.      5.  Quando um esquema define um xml:* atributo com use = &quot;prohibited&quot;.          1.  O seguinte se aplica quando AllowXmlAttributes está definido como `true` e `false`. Se um documento de instância contém xml:* atributos que são explicitamente proibido pelo esquema, o mecanismo de validação relatará um erro.      6.  Quando um esquema especifica um curinga de atributo.          1.  Se um documento de instância contém um atributo Xml e o esquema especifica um curinga de atributo com processContents seja omitido ou definido como &quot;estrito&quot;, o mecanismo de validação usará o esquema do namespace de Xml presente em <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Se nenhum esquema de namespace Xml for especificada, o mecanismo de validação irão se comportar da seguinte maneira.          2.  Se AllowXmlAttributes for definido como `true`, o mecanismo de validação usará o esquema do namespace Xml padrão para executar a validação.          3.  Se AllowXmlAttributes for definido como `false`, o mecanismo de validação relatará um erro.          4.  Se um documento de instância contém um atributo Xml e o esquema especifica um curinga de atributo com processContents definido como &quot;Ignorar&quot;, o mecanismo de validação ignorará a validação do atributo.          5.  Se um documento de instância contém um atributo Xml e o esquema especifica um curinga de atributo com processContents definido como &quot;incerta&quot;, o mecanismo de validação usará o esquema do namespace de Xml presente em <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Se nenhum esquema de namespace Xml for especificada, o mecanismo de validação irão se comportar da seguinte maneira.          6.  Se AllowXmlAttributes for definido como `true`, o mecanismo de validação usará o esquema do namespace Xml padrão para executar a validação.          7.  Se AllowXmlAttributes for definido como `false`, validação de atributo não será executada.      7.  Durante a validação de tipos simples.          1.  Quando AllowXmlAttributes está definido como `true` (padrão), os atributos Xml serão permitidos em elementos de tipos simples."
  example:
  - For an example of the XmlSchemaValidationFlags class, see the <xref:System.Xml.Schema.XmlSchemaValidator> class.
  syntax:
    content: >-
      [System.Flags]

      public enum XmlSchemaValidationFlags
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  id: AllowXmlAttributes
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: AllowXmlAttributes
  nameWithType: XmlSchemaValidationFlags.AllowXmlAttributes
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Permitir que o xml: * atributos mesmo se eles não estão definidos no esquema. Os atributos serão validados com base em seu tipo de dados."
  syntax:
    content: AllowXmlAttributes
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.None
  id: None
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: None
  nameWithType: XmlSchemaValidationFlags.None
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.None
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Não processe restrições de identidade, esquemas embutidos, dicas de local de esquema ou avisos de validação de esquema de relatório."
  syntax:
    content: None
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  id: ProcessIdentityConstraints
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ProcessIdentityConstraints
  nameWithType: XmlSchemaValidationFlags.ProcessIdentityConstraints
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Restrições de identidade de processo (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, `xs:unique`) encontrados durante a validação."
  syntax:
    content: ProcessIdentityConstraints
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  id: ProcessInlineSchema
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ProcessInlineSchema
  nameWithType: XmlSchemaValidationFlags.ProcessInlineSchema
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Esquemas embutidos do processo encontradas durante a validação."
  syntax:
    content: ProcessInlineSchema
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  id: ProcessSchemaLocation
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ProcessSchemaLocation
  nameWithType: XmlSchemaValidationFlags.ProcessSchemaLocation
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Processar dicas de local de esquema (`xsi:schemaLocation`, `xsi:noNamespaceSchemaLocation`) encontrados durante a validação."
  syntax:
    content: ProcessSchemaLocation
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  id: ReportValidationWarnings
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ReportValidationWarnings
  nameWithType: XmlSchemaValidationFlags.ReportValidationWarnings
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Avisos de validação de esquema encontrados durante a validação de relatórios."
  syntax:
    content: ReportValidationWarnings
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: AllowXmlAttributes
  nameWithType: XmlSchemaValidationFlags.AllowXmlAttributes
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
- uid: System.Xml.Schema.XmlSchemaValidationFlags
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationFlags
  nameWithType: XmlSchemaValidationFlags
  fullName: System.Xml.Schema.XmlSchemaValidationFlags
- uid: System.Xml.Schema.XmlSchemaValidationFlags.None
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: None
  nameWithType: XmlSchemaValidationFlags.None
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.None
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ProcessIdentityConstraints
  nameWithType: XmlSchemaValidationFlags.ProcessIdentityConstraints
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ProcessInlineSchema
  nameWithType: XmlSchemaValidationFlags.ProcessInlineSchema
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ProcessSchemaLocation
  nameWithType: XmlSchemaValidationFlags.ProcessSchemaLocation
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ReportValidationWarnings
  nameWithType: XmlSchemaValidationFlags.ReportValidationWarnings
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
