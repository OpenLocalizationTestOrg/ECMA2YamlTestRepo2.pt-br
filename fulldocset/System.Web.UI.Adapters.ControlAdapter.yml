### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Adapters.ControlAdapter
  id: ControlAdapter
  children:
  - System.Web.UI.Adapters.ControlAdapter.#ctor
  - System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.Browser
  - System.Web.UI.Adapters.ControlAdapter.Control
  - System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  - System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  - System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  - System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.Page
  - System.Web.UI.Adapters.ControlAdapter.PageAdapter
  - System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  - System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  langs:
  - csharp
  name: ControlAdapter
  nameWithType: ControlAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter
  type: Class
  summary: "Personaliza a renderização do controle derivada à qual o adaptador está conectado, para modificar o comportamento para navegadores específicos, ou marcação padrão e é a classe base da qual controle todos os adaptadores são herdadas."
  remarks: "Adaptadores de controle são componentes que substituem certos <xref:System.Web.UI.Control>classe métodos e eventos de execução do ciclo de vida para permitir que o navegador ou tratamento específico de marcação.</xref:System.Web.UI.Control> O .NET Framework mapeia um adaptador de controle derivada única para um <xref:System.Web.UI.Control>objeto para cada solicitação de cliente.</xref:System.Web.UI.Control>       Um adaptador modifica um controle para uma classe de navegadores ou um navegador específico ou atua como um filtro arbitrário em algum recurso. Normalmente o adaptador é definido pela linguagem de marcação que usa o navegador (por exemplo, XHTML ou HTML 3.2). Grande parte da capacidade de adaptação no comportamento de renderização pode ser encapsulado nas classes especializadas que derivam da <xref:System.Web.UI.HtmlTextWriter>classe</xref:System.Web.UI.HtmlTextWriter> de Portanto, é provável que um único adaptador pode ser usado para um número de comportamentos de classe do navegador ou que inclusão de capacidade de adaptação no <xref:System.Web.UI.HtmlTextWriter>classes podem tornar o uso de um adaptador de controle desnecessária.</xref:System.Web.UI.HtmlTextWriter>       Um adaptador para uma classe de controle se aplica a todos os controles que herdam da classe, a menos que mais especializadas adaptadores estão presentes. Por exemplo, um adaptador para o <xref:System.Web.UI.WebControls.BaseValidator>classe pode ser usada para todos os `Validator` objetos.</xref:System.Web.UI.WebControls.BaseValidator>       Adaptadores normalmente não herda diretamente da classe ControlAdapter, mas de uma das classes base do adaptador de destino específico que fornecem funcionalidade adicional específica para o tipo de controle e navegador de destino ou o processamento específico necessário.       Controles em si não exigem necessariamente um adaptador. Se os controles são estendidos por meio da composição, geralmente os adaptadores de controle filho são suficientes.       Cada controle tem mapeamentos explícitos para adaptadores através dos arquivos de definição. browser. Portanto, qualquer acesso ao <xref:System.Web.UI.Control.Adapter%2A?displayProperty=fullName>propriedade usa o <xref:System.Web.HttpBrowserCapabilities>objeto extraído dos arquivos de definição de navegador para executar a pesquisa para o mapeamento do adaptador de controle.</xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.UI.Control.Adapter%2A?displayProperty=fullName>       Durante o processamento, o .NET Framework intercepta chamadas para os métodos substituíveis de um controle que pode ser um destino específico. Se estiver conectado a um adaptador de controle, o .NET Framework chama os métodos de adaptador associado.       O adaptador executa a renderização do controle por meio de <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>método.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> Se substituído, <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>potencialmente não devem chamar a implementação da classe base porque que executa uma chamada novamente o <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>método.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> Isso pode causar o processamento ocorra duas vezes, uma vez pelo adaptador e uma vez pelo controle.       O <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>basear chamadas de método de <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>método do controle.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> Portanto, se você substituir <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>, você não deve chamar a implementação da classe base, a menos que o processamento é implementa além é fornecido pelo <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>do controle.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>       Certifique-se de que o .NET Framework realiza a interceptação para adaptadores de controles filho. Você pode fazer isso chamando o <xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A>base do método, que chama o <xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=fullName>método de controle, de seu <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>Substituir.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> </xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A>       O <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>e <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>métodos são chamados pelo controle imediatamente antes e depois (respectivamente) das chamadas de controle de <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>método.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> </xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> Se pré e pós-processamento são específicos do navegador apenas tarefas de processamento necessárias, usando <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>e <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>pode fazer com que o desnecessária substituir <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> </xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> O comportamento padrão do <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>e <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>métodos é chamar os métodos correspondentes de <xref:System.Web.UI.HtmlTextWriter>.</xref:System.Web.UI.HtmlTextWriter> </xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>       Para manter suas informações de estado, um adaptador de controle pode substituir o <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, e <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>métodos.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A> <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, e <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>são chamadas quando os estados de controle e exibição privados são salvos e carregados, respectivamente.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A></xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>       O <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A>, e <xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A>base chamada de métodos em correspondente <xref:System.Web.UI.Control>métodos de classe.</xref:System.Web.UI.Control> </xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A> </xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A> </xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A> Portanto, qualquer um desses métodos de ControlAdapter que são substituídas deve chamar seus métodos base; Caso contrário, o evento associado com o <xref:System.Web.UI.Control>método de classe não será gerado.</xref:System.Web.UI.Control>       Opcionalmente, implementam controles e adaptadores de <xref:System.Web.UI.IPostBackDataHandler>e <xref:System.Web.UI.IPostBackEventHandler>interfaces.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.IPostBackDataHandler> O .NET Framework determina se um adaptador existe e se o adaptador implementa essas interfaces. Em caso afirmativo, o adaptador deve substituir o <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A>, <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A>, e <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A>métodos, conforme necessário.</xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> </xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A> </xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A> Se os dados de postagem não são reconhecidos no adaptador, ele deverá chamar novamente no controle processá-la. Manipuladores de eventos subsequentes também devem chamar novamente no controle."
  syntax:
    content: public abstract class ControlAdapter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor
  id: '#ctor'
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: ControlAdapter()
  nameWithType: ControlAdapter.ControlAdapter()
  fullName: System.Web.UI.Adapters.ControlAdapter.ControlAdapter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> classe."
  remarks: "O .NET Framework internamente constrói esse adaptador quando ele cria correspondente <xref:System.Web.UI.Control>objeto.</xref:System.Web.UI.Control>"
  syntax:
    content: protected ControlAdapter ();
    parameters: []
  overload: System.Web.UI.Adapters.ControlAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  id: BeginRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: BeginRender(HtmlTextWriter)
  nameWithType: ControlAdapter.BeginRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.BeginRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Chamado antes do processamento de um controle. Em uma classe derivada de adaptador, gera marcações de abertura que são necessários para um destino específico, mas não é necessário por navegadores HTML."
  remarks: "O método BeginRender é chamado antes de <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>método e é usado para executar o pré-processamento antes da renderização do controle de destino específico.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>       Use o método BeginRender em combinação com o <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>método para garantir a abertura e fechamento de consistência de marca.</xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>"
  syntax:
    content: protected virtual void BeginRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que contém métodos para processar a saída de destino específico."
  overload: System.Web.UI.Adapters.ControlAdapter.BeginRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Browser
  id: Browser
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Browser
  nameWithType: ControlAdapter.Browser
  fullName: System.Web.UI.Adapters.ControlAdapter.Browser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Obtém uma referência para os recursos do navegador do cliente que está fazendo a solicitação HTTP atual."
  remarks: "Um <xref:System.Web.UI.Adapters.ControlAdapter>objeto determina os recursos do navegador do cliente do <xref:System.Web.HttpBrowserCapabilities>objeto que é retornado pela propriedade de navegador.</xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.UI.Adapters.ControlAdapter> Isso permite que o <xref:System.Web.UI.Adapters.ControlAdapter>objeto para renderizar a marcação de navegador específico ou modificar o comportamento de <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> </xref:System.Web.UI.Adapters.ControlAdapter>"
  example:
  - "The following code example shows how to use the Browser property to access the details of the requesting browser. In this example, the code checks to determine whether the browser is compatible with JavaScript, and then allows the developer to render customized output in that case.  \n  \n [!code-cpp[ControlAdapter_Browser#1](~/add/codesnippet/cpp/p-system.web.ui.adapters_1_1.cpp)]\n [!code-vb[ControlAdapter_Browser#1](~/add/codesnippet/visualbasic/p-system.web.ui.adapters_1_1.vb)]\n [!code-cs[ControlAdapter_Browser#1](~/add/codesnippet/csharp/p-system.web.ui.adapters_1_1.cs)]"
  syntax:
    content: protected System.Web.HttpBrowserCapabilities Browser { get; }
    return:
      type: System.Web.HttpBrowserCapabilities
      description: "Um <xref href=&quot;System.Web.HttpBrowserCapabilities&quot;> </xref> especificando recursos de navegador e marcação de cliente."
  overload: System.Web.UI.Adapters.ControlAdapter.Browser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Control
  id: Control
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Control
  nameWithType: ControlAdapter.Control
  fullName: System.Web.UI.Adapters.ControlAdapter.Control
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Obtém uma referência para o controle ao qual este adaptador de controle está anexado."
  remarks: "Quando um adaptador de controle derivada é anexado a um controle, o .NET Framework chama a certos membros de adaptador em vez dos membros de controle."
  example:
  - "The following code example shows how to derive a custom control from the <xref:System.Web.UI.Control> class, and then create a corresponding adapter that inherits from the <xref:System.Web.UI.Adapters.ControlAdapter> class. The adapter overrides the Control property and returns a strongly-typed reference to the control.  \n  \n [!code-cs[ControlAdapter.Control#1](~/add/codesnippet/csharp/p-system.web.ui.adapters_0_1.cs)]\n [!code-vb[ControlAdapter.Control#1](~/add/codesnippet/visualbasic/p-system.web.ui.adapters_0_1.vb)]\n [!code-cpp[ControlAdapter.Control#1](~/add/codesnippet/cpp/p-system.web.ui.adapters_0_1.cpp)]"
  syntax:
    content: protected System.Web.UI.Control Control { get; }
    return:
      type: System.Web.UI.Control
      description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> ao qual este <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> está anexado."
  overload: System.Web.UI.Adapters.ControlAdapter.Control*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: ControlAdapter.CreateChildControls()
  fullName: System.Web.UI.Adapters.ControlAdapter.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Cria o filho de destino específico controles para um controle composto."
  remarks: "Se houver um adaptador de controle derivado conectado a um <xref:System.Web.UI.Control>objeto e o CreateChildControls método é substituído, a substituição é chamada em vez do <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName>método.</xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> </xref:System.Web.UI.Control> Assim, CreateChildControls pode ser usado para criar um conjunto de controles filho de destino específico.       Para obter mais informações sobre como combinar os controles para criar um novo controle, consulte [controles compostos](http://msdn.microsoft.com/en-us/fb174677-d845-467c-8bf3-cc096b2490b0)."
  syntax:
    content: protected virtual void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.Adapters.ControlAdapter.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  id: EndRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: EndRender(HtmlTextWriter)
  nameWithType: ControlAdapter.EndRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.EndRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Chamado após o processamento de um controle. Em uma classe derivada de adaptador, gera as marcas de fechamento que são necessários para um destino específico, mas não é necessário por navegadores HTML."
  remarks: "O método EndRender é chamado logo após o <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>método e é usada para executar o pós-processamento de destino específico após o processamento do controle.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>       Use o método EndRender em combinação com o <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>método para garantir a abertura e fechamento de consistência de marca.</xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>"
  syntax:
    content: protected virtual void EndRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que contém métodos para processar a saída de destino específico."
  overload: System.Web.UI.Adapters.ControlAdapter.EndRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  id: LoadAdapterControlState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: LoadAdapterControlState(Object)
  nameWithType: ControlAdapter.LoadAdapterControlState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Carrega informações de estado de controle de adaptador que foi salvo pelo <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*>durante uma solicitação anterior para a página em que reside o controle associado a este adaptador de controle.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*>"
  remarks: "Estado do controle é a informação de estado essencial necessária até mesmo quando o estado de exibição está desabilitado. Quando um adaptador precisa manter suas informações de estado de controle, ele pode substituir o LoadAdapterControlState e <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>métodos.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>       Talvez seja necessário um adaptador manter informações de estado do controle quando não há recursos que precisam ter o estado mantido entre solicitações, independentemente do estado do controle associado. Por exemplo, um controle composto consiste em uma exibição textual grande e um grupo de <xref:System.Web.UI.WebControls.RadioButton>controles podem processar como uma única exibição em navegadores de desktop compatíveis.</xref:System.Web.UI.WebControls.RadioButton> Em outros navegadores, ele pode dividir seu processamento — um modo de exibição para a exibição textual e outro para o grupo de botões de opção. O adaptador precisa manter suas informações de destino específico sobre a exibição ativa no momento.       O método LoadAdapterControlState é chamado imediatamente após o <xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=fullName>método, no `LoadState` estágio do ciclo de vida.</xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=fullName> O estado de controle do adaptador é separada e além do estado de controle do controle."
  syntax:
    content: protected virtual void LoadAdapterControlState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Um <xref:System.Object>que contém informações de estado de controle do adaptador como um <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  id: LoadAdapterViewState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: LoadAdapterViewState(Object)
  nameWithType: ControlAdapter.LoadAdapterViewState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Carrega informações de estado de exibição de adaptador que foi salvo pelo <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*>durante uma solicitação anterior para a página em que reside o controle associado a este adaptador de controle.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*>"
  remarks: "Quando um adaptador precisa manter suas informações de estado de exibição, pode anular o LoadAdapterViewState e <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>métodos.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>       Precisa de um adaptador manter informações de estado de exibição quando há dados que devem ser mantidos nas solicitações, independentemente do estado de exibição do controle associado. Por exemplo, um controle de grade em navegadores de desktop compatíveis pode processar como uma única exibição de linhas e colunas de valores. Em outros navegadores, ele pode dividir seu processamento em várias exibições separados, como uma lista de linhas e detalhes de uma única linha. O adaptador seria necessário manter os dados para os modos de exibição que não estão atualmente ativos em estado de exibição.       O método LoadAdapterViewState é chamado imediatamente antes do <xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=fullName>método o `LoadState` estágio do ciclo de vida.</xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=fullName> O estado de exibição do adaptador é separada e além do estado de exibição do controle."
  syntax:
    content: protected virtual void LoadAdapterViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Um <xref:System.Object>que contém as informações de estado de exibição do adaptador como um <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: ControlAdapter.OnInit(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Substitui o <xref:System.Web.UI.Control.OnInit*>método para o controle associado.</xref:System.Web.UI.Control.OnInit*>"
  remarks: "Se houver um adaptador conectado a um <xref:System.Web.UI.Control>objeto e o OnInit método for substituído, o método de substituição é chamado em vez do <xref:System.Web.UI.Control.OnInit%2A?displayProperty=fullName>método.</xref:System.Web.UI.Control.OnInit%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Substituir OnInit para executar o processamento de destino específico no `Initialize` estágio do ciclo de vida do controle. Normalmente, essas são funções que são executadas quando um controle é criado."
  example:
  - "The following code sample derives a custom control adapter from the <xref:System.Web.UI.Adapters.ControlAdapter> class. It then overrides the OnInit method to set a property on the associated control and call the base method to complete the control initialization.  \n  \n [!code-cs[ControlAdapter_OnInit#1](~/add/codesnippet/csharp/m-system.web.ui.adapters_1.cs)]\n [!code-vb[ControlAdapter_OnInit#1](~/add/codesnippet/visualbasic/m-system.web.ui.adapters_1.vb)]\n [!code-cpp[ControlAdapter_OnInit#1](~/add/codesnippet/cpp/m-system.web.ui.adapters_1.cpp)]"
  syntax:
    content: protected virtual void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: ControlAdapter.OnLoad(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Substitui o <xref:System.Web.UI.Control.OnLoad*>método para o controle associado.</xref:System.Web.UI.Control.OnLoad*>"
  remarks: "Se houver um adaptador conectado a um <xref:System.Web.UI.Control>objeto e o OnLoad método for substituído, o método de substituição é chamado em vez do <xref:System.Web.UI.Control.OnLoad%2A?displayProperty=fullName>método.</xref:System.Web.UI.Control.OnLoad%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Substitua o método OnLoad para executar o processamento de destino específico no `Load` estágio do ciclo de vida do controle. Normalmente, essas são funções que devem ser executadas para cada solicitação de cliente."
  syntax:
    content: protected virtual void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: ControlAdapter.OnPreRender(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Substitui o <xref:System.Web.UI.Control.OnPreRender*>método para o controle associado.</xref:System.Web.UI.Control.OnPreRender*>"
  remarks: "Se houver um adaptador conectado a um <xref:System.Web.UI.Control>objeto e o OnPreRender método for substituído, o método de substituição é chamado em vez do <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=fullName>método.</xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Substitua o método OnPreRender para executar o processamento de destino específico no `PreRender` estágio do ciclo de vida do controle. Normalmente, essas são funções que deve preceder imediatamente a renderização de saída do controle."
  syntax:
    content: protected virtual void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: ControlAdapter.OnUnload(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Substitui o <xref:System.Web.UI.Control.OnUnload*>método para o controle associado.</xref:System.Web.UI.Control.OnUnload*>"
  remarks: "Se houver um adaptador conectado a um <xref:System.Web.UI.Control>objeto e o OnUnload método for substituído, o método de substituição é chamado em vez do <xref:System.Web.UI.Control.OnUnload%2A?displayProperty=fullName>método.</xref:System.Web.UI.Control.OnUnload%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Substitua o método OnUnload para fazer o processamento de destino específico no `Unload` estágio do ciclo de vida do controle. Normalmente, essas são funções de limpeza que precedem o descarte do controle."
  syntax:
    content: protected virtual void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Page
  id: Page
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Page
  nameWithType: ControlAdapter.Page
  fullName: System.Web.UI.Adapters.ControlAdapter.Page
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Obtém uma referência para a página em que reside o controle associado a esse adaptador."
  remarks: "A propriedade da página fornece acesso para o <xref:System.Web.UI.Page?displayProperty=fullName>objeto em que o controle está localizado.</xref:System.Web.UI.Page?displayProperty=fullName>"
  syntax:
    content: protected System.Web.UI.Page Page { get; }
    return:
      type: System.Web.UI.Page
      description: "Um <xref href=&quot;System.Web.UI.Page&quot;> </xref> que fornece acesso à instância de página em que o controle associado está localizado."
  overload: System.Web.UI.Adapters.ControlAdapter.Page*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  id: PageAdapter
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Obtém uma referência para o adaptador de página para a página em que reside o controle associado."
  remarks: "A propriedade PageAdapter fornece acesso para o <xref:System.Web.UI.Adapters.PageAdapter?displayProperty=fullName>de objeto para o <xref:System.Web.UI.Page>objeto onde o <xref:System.Web.UI.Control>objeto associado atual <xref:System.Web.UI.Adapters.ControlAdapter>objeto está localizado.</xref:System.Web.UI.Adapters.ControlAdapter> </xref:System.Web.UI.Control> </xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter?displayProperty=fullName>       A propriedade PageAdapter pode ser usada para acessar outros itens no nível de adaptador de página, como funções comuns de destino específico que pode aplicar a vários tipos de controle na página."
  syntax:
    content: protected System.Web.UI.Adapters.PageAdapter PageAdapter { get; }
    return:
      type: System.Web.UI.Adapters.PageAdapter
      description: "Um <xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref> para a página onde o controle associado ao atual <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> está localizada."
  overload: System.Web.UI.Adapters.ControlAdapter.PageAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: ControlAdapter.Render(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Gera a marcação de destino específico para o controle ao qual o adaptador de controle está anexado."
  remarks: "Substitua o método de renderização para gerar marcação de destino específico para enviar para o navegador do cliente. O método de renderização é chamado em vez do <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>método se um <xref:System.Web.UI.Adapters.ControlAdapter>objeto está anexado a um <xref:System.Web.UI.Control>objeto.</xref:System.Web.UI.Control> </xref:System.Web.UI.Adapters.ControlAdapter> </xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> para renderizar a saída de destino específico."
  overload: System.Web.UI.Adapters.ControlAdapter.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: ControlAdapter.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Gera a marcação de destino específico para os controles filho em um controle composto para o qual o adaptador de controle está anexado."
  remarks: "Substitua o método RenderChildren quando for necessário gerar marcação de destino específico para o conjunto de controles filho de um controle composto, além de marcação para os controles filho individuais."
  syntax:
    content: protected virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> para renderizar a saída de destino específico."
  overload: System.Web.UI.Adapters.ControlAdapter.RenderChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  id: SaveAdapterControlState
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: SaveAdapterControlState()
  nameWithType: ControlAdapter.SaveAdapterControlState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Salva informações de estado para o adaptador de controle de controle."
  remarks: "Estado do controle é a informação de estado essencial necessária até mesmo quando o estado de exibição está desabilitado. Quando um adaptador precisa manter suas informações de estado de controle, ele pode substituir o SaveAdapterControlState e <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>métodos.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>       Talvez seja necessário um adaptador manter informações de estado do controle quando não há recursos que precisam ter o estado mantido entre solicitações, independentemente do estado do controle associado. Por exemplo, um controle composto consiste em uma exibição textual grande e um grupo de <xref:System.Web.UI.WebControls.RadioButton>controles podem processar como uma única exibição em navegadores de desktop compatíveis.</xref:System.Web.UI.WebControls.RadioButton> Em outros navegadores, ele pode dividir seu processamento — um modo de exibição para a exibição textual e outro para o grupo de botões de opção. O adaptador precisa manter suas informações de destino específico sobre a exibição ativa no momento.       O método SaveAdapterControlState é chamado imediatamente após o <xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=fullName>método o `SaveState` estágio do ciclo de vida.</xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=fullName> O estado de controle do adaptador é separada e além do estado de controle do controle."
  syntax:
    content: protected virtual object SaveAdapterControlState ();
    parameters: []
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém informações de estado de controle do adaptador como um <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  id: SaveAdapterViewState
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: SaveAdapterViewState()
  nameWithType: ControlAdapter.SaveAdapterViewState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Salva exibe informações de estado para o adaptador de controle."
  remarks: "Quando um adaptador precisa manter suas informações de estado de exibição, pode anular o SaveAdapterViewState e <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>métodos.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>       Precisa de um adaptador manter informações de estado de exibição quando há dados que devem ser mantidos nas solicitações, independentemente do estado de exibição associada do controle. Por exemplo, um controle de grade em navegadores de desktop compatíveis pode processar como uma única exibição de linhas e colunas de valores. Em outros navegadores, ele pode dividir seu processamento em várias exibições separados, como uma lista de linhas e detalhes de uma única linha. O adaptador seria necessário manter os dados para os modos de exibição que não estão atualmente ativos em estado de exibição.       O método SaveAdapterViewState é chamado imediatamente antes do <xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=fullName>método o `SaveState` estágio do ciclo de vida.</xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=fullName> O estado de exibição do adaptador é separada e além do estado de exibição do controle."
  syntax:
    content: protected virtual object SaveAdapterViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém as informações de estado de exibição do adaptador como um <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: ControlAdapter()
  nameWithType: ControlAdapter.ControlAdapter()
  fullName: System.Web.UI.Adapters.ControlAdapter.ControlAdapter()
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: BeginRender(HtmlTextWriter)
  nameWithType: ControlAdapter.BeginRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.BeginRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.Adapters.ControlAdapter.Browser
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Browser
  nameWithType: ControlAdapter.Browser
  fullName: System.Web.UI.Adapters.ControlAdapter.Browser
- uid: System.Web.HttpBrowserCapabilities
  parent: System.Web
  isExternal: false
  name: HttpBrowserCapabilities
  nameWithType: HttpBrowserCapabilities
  fullName: System.Web.HttpBrowserCapabilities
- uid: System.Web.UI.Adapters.ControlAdapter.Control
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Control
  nameWithType: ControlAdapter.Control
  fullName: System.Web.UI.Adapters.ControlAdapter.Control
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: CreateChildControls()
  nameWithType: ControlAdapter.CreateChildControls()
  fullName: System.Web.UI.Adapters.ControlAdapter.CreateChildControls()
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: EndRender(HtmlTextWriter)
  nameWithType: ControlAdapter.EndRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.EndRender(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterControlState(Object)
  nameWithType: ControlAdapter.LoadAdapterControlState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(Object)
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterViewState(Object)
  nameWithType: ControlAdapter.LoadAdapterViewState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(Object)
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: ControlAdapter.OnInit(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: ControlAdapter.OnLoad(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnLoad(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: ControlAdapter.OnPreRender(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnPreRender(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: ControlAdapter.OnUnload(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnUnload(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.Page
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Page
  nameWithType: ControlAdapter.Page
  fullName: System.Web.UI.Adapters.ControlAdapter.Page
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter.PageAdapter
- uid: System.Web.UI.Adapters.PageAdapter
  parent: System.Web.UI.Adapters
  isExternal: false
  name: PageAdapter
  nameWithType: PageAdapter
  fullName: System.Web.UI.Adapters.PageAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: ControlAdapter.Render(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.Render(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: ControlAdapter.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterControlState()
  nameWithType: ControlAdapter.SaveAdapterControlState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState()
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterViewState()
  nameWithType: ControlAdapter.SaveAdapterViewState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState()
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: ControlAdapter
  nameWithType: ControlAdapter.ControlAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: BeginRender
  nameWithType: ControlAdapter.BeginRender
- uid: System.Web.UI.Adapters.ControlAdapter.Browser*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Browser
  nameWithType: ControlAdapter.Browser
- uid: System.Web.UI.Adapters.ControlAdapter.Control*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Control
  nameWithType: ControlAdapter.Control
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: CreateChildControls
  nameWithType: ControlAdapter.CreateChildControls
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: EndRender
  nameWithType: ControlAdapter.EndRender
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterControlState
  nameWithType: ControlAdapter.LoadAdapterControlState
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterViewState
  nameWithType: ControlAdapter.LoadAdapterViewState
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnInit
  nameWithType: ControlAdapter.OnInit
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnLoad
  nameWithType: ControlAdapter.OnLoad
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnPreRender
  nameWithType: ControlAdapter.OnPreRender
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnUnload
  nameWithType: ControlAdapter.OnUnload
- uid: System.Web.UI.Adapters.ControlAdapter.Page*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Page
  nameWithType: ControlAdapter.Page
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.Render*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Render
  nameWithType: ControlAdapter.Render
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: RenderChildren
  nameWithType: ControlAdapter.RenderChildren
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterControlState
  nameWithType: ControlAdapter.SaveAdapterControlState
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterViewState
  nameWithType: ControlAdapter.SaveAdapterViewState
