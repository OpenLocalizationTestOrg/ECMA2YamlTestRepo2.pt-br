### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Messaging.CallContext
  id: CallContext
  children:
  - System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(System.String)
  - System.Runtime.Remoting.Messaging.CallContext.GetData(System.String)
  - System.Runtime.Remoting.Messaging.CallContext.GetHeaders
  - System.Runtime.Remoting.Messaging.CallContext.HostContext
  - System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(System.String)
  - System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(System.String,System.Object)
  - System.Runtime.Remoting.Messaging.CallContext.SetData(System.String,System.Object)
  - System.Runtime.Remoting.Messaging.CallContext.SetHeaders(System.Runtime.Remoting.Messaging.Header[])
  langs:
  - csharp
  name: CallContext
  nameWithType: CallContext
  fullName: System.Runtime.Remoting.Messaging.CallContext
  type: Class
  summary: "Fornece um conjunto de propriedades que são executadas com o caminho de código de execução. Essa classe não pode ser herdada."
  remarks: "CallContext é um objeto de coleção especializada semelhante a um armazenamento Local de Thread para chamadas de método e fornece os slots de dados que são exclusivos para cada thread lógica de execução. Os slots não são compartilhados entre contextos de chamada em outros threads de lógicas. Objetos podem ser adicionados para o CallContext como desce e fazer backup do caminho de código de execução e examinados através de vários objetos ao longo do caminho.       Quando uma chamada de método remoto é feita em um objeto em outro <xref:System.AppDomain>, a classe CallContext gera um <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>instância que viaja junto com a chamada remota.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext> </xref:System.AppDomain> Somente objetos que expõem o <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative>interface e são armazenados na CallContext são propagadas fora o <xref:System.AppDomain>em <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext> </xref:System.AppDomain> </xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> Objetos que não dão suporte a esta interface não são transmitidos em <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>instâncias com chamadas de método remoto.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext>      > [!NOTE] > Todos os métodos no CallContext são estáticos e operar no contexto da chamada atual <xref:System.Threading.Thread>.</xref:System.Threading.Thread>      > [!NOTE] > Essa classe faz uma demanda de link. Um `SecurityException` é gerada se o chamador imediato não tem permissão de infraestrutura. Consulte [demandas de Link](~/add/includes/ajax-current-ext-md.md) para obter mais informações."
  example:
  - "The following code example demonstrates the use of the CallContext class to transmit [Principal and Identity Objects](~/add/includes/ajax-current-ext-md.md) to a remote location for identification. To view the code for the `LogicalCallContextData` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interface. To view the code for the `HelloServiceClass` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> method. To view the code for the server class used in this sample, see the example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> class.  \n  \n [!code-cpp[CallContext#1](~/add/codesnippet/cpp/t-system.runtime.remotin_16_1.cpp)]\n [!code-cs[CallContext#1](~/add/codesnippet/csharp/t-system.runtime.remotin_16_1.cs)]\n [!code-vb[CallContext#1](~/add/codesnippet/visualbasic/t-system.runtime.remotin_16_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public sealed class CallContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(System.String)
  id: FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: FreeNamedDataSlot(String)
  nameWithType: CallContext.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Esvazia um slot de dados com o nome especificado."
  remarks: ''
  example:
  - "The following code example shows a client creating a named data slot, calling a method on the remote object that displays the value of the named data slot that was returned from the logical thread, and frees that named data slot.  \n  \n [!code-cpp[CallContext_GetHeaders#1](~/add/codesnippet/cpp/m-system.runtime.remotin_115_1.cpp)]\n [!code-cs[CallContext_GetHeaders#1](~/add/codesnippet/csharp/m-system.runtime.remotin_115_1.cs)]\n [!code-vb[CallContext_GetHeaders#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_115_1.vb)]"
  syntax:
    content: public static void FreeNamedDataSlot (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do slot de dados como vazio."
  overload: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.GetData(System.String)
  id: GetData(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: GetData(String)
  nameWithType: CallContext.GetData(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.GetData(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Recupera um objeto com o nome especificado do <xref href=&quot;System.Runtime.Remoting.Messaging.CallContext&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetData method to transmit [Principal and Identity Objects](~/add/includes/ajax-current-ext-md.md) to a remote location for identification. To view the code for the `LogicalCallContextData` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interface. To view the code for the client class used in the sample, see the example for the <xref:System.Runtime.Remoting.Messaging.CallContext> class. To view the code for the server class used in this sample, see the example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> class.  \n  \n [!code-cpp[CallContext#3](~/add/codesnippet/cpp/m-system.runtime.remotin_58_1.cpp)]\n [!code-cs[CallContext#3](~/add/codesnippet/csharp/m-system.runtime.remotin_58_1.cs)]\n [!code-vb[CallContext#3](~/add/codesnippet/visualbasic/m-system.runtime.remotin_58_1.vb)]"
  syntax:
    content: public static object GetData (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do item no contexto da chamada."
    return:
      type: System.Object
      description: "O objeto no contexto de chamada associado com o nome especificado."
  overload: System.Runtime.Remoting.Messaging.CallContext.GetData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.GetHeaders
  id: GetHeaders
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: GetHeaders()
  nameWithType: CallContext.GetHeaders()
  fullName: System.Runtime.Remoting.Messaging.CallContext.GetHeaders()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Retorna os cabeçalhos que são enviados junto com a chamada do método."
  remarks: ''
  example:
  - "The following code example sends headers to a remote method and prints the content of those headers to the console when the remote method returns.  \n  \n [!code-cpp[CallContext_GetHeaders#2](~/add/codesnippet/cpp/m-system.runtime.remotin_44_1.cpp)]\n [!code-cs[CallContext_GetHeaders#2](~/add/codesnippet/csharp/m-system.runtime.remotin_44_1.cs)]\n [!code-vb[CallContext_GetHeaders#2](~/add/codesnippet/visualbasic/m-system.runtime.remotin_44_1.vb)]"
  syntax:
    content: public static System.Runtime.Remoting.Messaging.Header[] GetHeaders ();
    parameters: []
    return:
      type: System.Runtime.Remoting.Messaging.Header[]
      description: "Os cabeçalhos que são enviados junto com a chamada do método."
  overload: System.Runtime.Remoting.Messaging.CallContext.GetHeaders*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.HostContext
  id: HostContext
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: HostContext
  nameWithType: CallContext.HostContext
  fullName: System.Runtime.Remoting.Messaging.CallContext.HostContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Obtém ou define o contexto do host associado ao segmento atual."
  syntax:
    content: public static object HostContext { get; set; }
    return:
      type: System.Object
      description: "O contexto do host associado ao segmento atual."
  overload: System.Runtime.Remoting.Messaging.CallContext.HostContext*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(System.String)
  id: LogicalGetData(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: LogicalGetData(String)
  nameWithType: CallContext.LogicalGetData(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Recupera um objeto com o nome especificado do contexto da chamada lógico."
  syntax:
    content: public static object LogicalGetData (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do item no contexto da chamada lógico."
    return:
      type: System.Object
      description: "O objeto no contexto da chamada lógico associado com o nome especificado."
  overload: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(System.String,System.Object)
  id: LogicalSetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: LogicalSetData(String,Object)
  nameWithType: CallContext.LogicalSetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Armazena um determinado objeto no contexto da chamada lógico e associa-o com o nome especificado."
  syntax:
    content: public static void LogicalSetData (string name, object data);
    parameters:
    - id: name
      type: System.String
      description: "O nome ao qual associar o novo item no contexto da chamada lógico."
    - id: data
      type: System.Object
      description: "O objeto para armazenar no contexto da chamada lógico, esse objeto deve ser serializável."
  overload: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: CallContext.SetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.CallContext.SetData(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Armazena um determinado objeto e associa-o com o nome especificado."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the SetData method to transmit [Principal and Identity Objects](~/add/includes/ajax-current-ext-md.md) to a remote location for identification. To view the code for the `LogicalCallContextData` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interface. To view the code for the `HelloServiceClass` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> method. To view the code for the server class used in this sample, see the example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> class.  \n  \n [!code-cpp[CallContext#1](~/add/codesnippet/cpp/79526df4-afd7-4495-8bab-_1.cpp)]\n [!code-cs[CallContext#1](~/add/codesnippet/csharp/79526df4-afd7-4495-8bab-_1.cs)]\n [!code-vb[CallContext#1](~/add/codesnippet/visualbasic/79526df4-afd7-4495-8bab-_1.vb)]"
  syntax:
    content: public static void SetData (string name, object data);
    parameters:
    - id: name
      type: System.String
      description: "O nome ao qual associar o novo item no contexto da chamada."
    - id: data
      type: System.Object
      description: "O objeto para armazenar no contexto da chamada."
  overload: System.Runtime.Remoting.Messaging.CallContext.SetData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.SetHeaders(System.Runtime.Remoting.Messaging.Header[])
  id: SetHeaders(System.Runtime.Remoting.Messaging.Header[])
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: SetHeaders(Header[])
  nameWithType: CallContext.SetHeaders(Header[])
  fullName: System.Runtime.Remoting.Messaging.CallContext.SetHeaders(Header[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Define os cabeçalhos que são enviados junto com a chamada do método."
  remarks: ''
  example:
  - "The following example code shows the ease with which a header is put on the logical thread.  \n  \n [!code-cpp[CallContext_GetHeaders#3](~/add/codesnippet/cpp/8c77ae3c-b36c-42f8-9ac6-_1.cpp)]\n [!code-cs[CallContext_GetHeaders#3](~/add/codesnippet/csharp/8c77ae3c-b36c-42f8-9ac6-_1.cs)]\n [!code-vb[CallContext_GetHeaders#3](~/add/codesnippet/visualbasic/8c77ae3c-b36c-42f8-9ac6-_1.vb)]"
  syntax:
    content: public static void SetHeaders (System.Runtime.Remoting.Messaging.Header[] headers);
    parameters:
    - id: headers
      type: System.Runtime.Remoting.Messaging.Header[]
      description: "Um <xref href=&quot;System.Runtime.Remoting.Messaging.Header&quot;> </xref> matriz dos cabeçalhos que devem ser enviadas junto com a chamada do método."
  overload: System.Runtime.Remoting.Messaging.CallContext.SetHeaders*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: FreeNamedDataSlot(String)
  nameWithType: CallContext.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Messaging.CallContext.GetData(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: GetData(String)
  nameWithType: CallContext.GetData(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.GetData(String)
- uid: System.Runtime.Remoting.Messaging.CallContext.GetHeaders
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: GetHeaders()
  nameWithType: CallContext.GetHeaders()
  fullName: System.Runtime.Remoting.Messaging.CallContext.GetHeaders()
- uid: System.Runtime.Remoting.Messaging.Header[]
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: Header
  nameWithType: Header
  fullName: System.Runtime.Remoting.Messaging.Header[]
  spec.csharp:
  - uid: System.Runtime.Remoting.Messaging.Header
    name: Header
    nameWithType: Header
    fullName: Header[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Messaging.CallContext.HostContext
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: HostContext
  nameWithType: CallContext.HostContext
  fullName: System.Runtime.Remoting.Messaging.CallContext.HostContext
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: LogicalGetData(String)
  nameWithType: CallContext.LogicalGetData(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(String)
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: LogicalSetData(String,Object)
  nameWithType: CallContext.LogicalSetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(String,Object)
- uid: System.Runtime.Remoting.Messaging.CallContext.SetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: SetData(String,Object)
  nameWithType: CallContext.SetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.CallContext.SetData(String,Object)
- uid: System.Runtime.Remoting.Messaging.CallContext.SetHeaders(System.Runtime.Remoting.Messaging.Header[])
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: SetHeaders(Header[])
  nameWithType: CallContext.SetHeaders(Header[])
  fullName: System.Runtime.Remoting.Messaging.CallContext.SetHeaders(Header[])
- uid: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: FreeNamedDataSlot
  nameWithType: CallContext.FreeNamedDataSlot
- uid: System.Runtime.Remoting.Messaging.CallContext.GetData*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: GetData
  nameWithType: CallContext.GetData
- uid: System.Runtime.Remoting.Messaging.CallContext.GetHeaders*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: GetHeaders
  nameWithType: CallContext.GetHeaders
- uid: System.Runtime.Remoting.Messaging.CallContext.HostContext*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: HostContext
  nameWithType: CallContext.HostContext
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: LogicalGetData
  nameWithType: CallContext.LogicalGetData
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: LogicalSetData
  nameWithType: CallContext.LogicalSetData
- uid: System.Runtime.Remoting.Messaging.CallContext.SetData*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: SetData
  nameWithType: CallContext.SetData
- uid: System.Runtime.Remoting.Messaging.CallContext.SetHeaders*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: SetHeaders
  nameWithType: CallContext.SetHeaders
