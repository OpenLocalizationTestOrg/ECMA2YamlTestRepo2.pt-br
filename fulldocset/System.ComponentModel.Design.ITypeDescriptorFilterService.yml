### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService
  id: ITypeDescriptorFilterService
  children:
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  langs:
  - csharp
  name: ITypeDescriptorFilterService
  nameWithType: ITypeDescriptorFilterService
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService
  type: Interface
  summary: "Fornece uma interface para modificar o conjunto de descritores de membro de um componente no modo de design."
  remarks: "A interface ITypeDescriptorFilterService fornece uma interface que permite a modificação de propriedades, eventos e os atributos de nível de classe de um componente em tempo de design. Essa modificação ocorre por meio do conjunto de descritores que fornece um componente por meio de <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> O descritor de tipo consultará o site do componente para o serviço de ITypeDescriptorFilterService e, se ele existir, o descritor de tipo passará todos os metadados que ele tenha coletado para esse serviço. O serviço pode modificar os metadados, adição, remoção e alteração características existentes do componente.       Por exemplo, as propriedades de um componente podem ser modificadas por meio de uma chamada para o <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>método.</xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> O serviço de filtro obtém um dicionário que contém nomes de propriedade e os descritores de propriedade do tipo <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> As modificações são implementadas usando a seguinte lógica.      | Modificação | Implementação |   |------------------|--------------------|   | Remoção | Excluir a entrada correspondente no dicionário. |   | Adição | Adicione a entrada apropriada ao dicionário. |   | Alteração | Chamar métodos de descritor de propriedade existentes, substitua a entrada do descritor de propriedade associada ou substituir o par chave/valor de propriedade de inteiro no dicionário. |       O valor de retorno <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>determina se esse conjunto de propriedades é fixo.</xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> Se esse método retornar `true`, o <xref:System.ComponentModel.TypeDescriptor>para esse componente pode armazenar em cache os resultados.</xref:System.ComponentModel.TypeDescriptor> Esse cache é mantido até que o componente é coletado como lixo ou <xref:System.ComponentModel.TypeDescriptor.Refresh%2A>é chamado de método do descritor de tipo.</xref:System.ComponentModel.TypeDescriptor.Refresh%2A>"
  example:
  - "The following code example demonstrates a designer that uses the ITypeDescriptorFilterService to filter the attributes collection of any new or existing <xref:System.Windows.Forms.Button> to add a designer attribute for a new designer before loading or reloading the designer for the button.  \n  \n To use the example, add the code to a Windows Forms project and load the components from the class library into the Toolbox.  \n  \n Also see [Walkthrough: Automatically Populating the Toolbox with Custom Components](http://msdn.microsoft.com/library/fw694kde\\(v=vs.110\\).aspx).  \n  \n Add some buttons to your form. Add a `ButtonDesignerFilterComponent` to your form, and it will appear in the component tray. The `ButtonDesignerFilterComponent` will add a `ButtonDesignerFilterService`, which implements ITypeDescriptorFilterService, as a design mode service provider. Existing or new <xref:System.Windows.Forms.Button> objects on the form will begin color cycling after the `ButtonDesignerFilterService` replaces the designer for each existing and new button with a `ColorCycleButtonDesigner`. The buttons will color cycle when you move the mouse pointer over them, and alternately continue cycling or reset the background and foreground colors on `MouseLeave` events. New <xref:System.Windows.Forms.Button> objects will be given the `ColorCycleButtonDesigner` through the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> method of the `ButtonDesignerFilterService` that has been loaded, until the `ButtonDesignerFilterComponent` is disposed and replaces the original ITypeDescriptorFilterService. The `ColorCycleButton` class in this example is a <xref:System.Windows.Forms.Button> associated with a `ColorCycleButtonDesigner`.  \n  \n [!code-cs[ITypeDescriptorFilterService#1](~/add/codesnippet/csharp/t-system.componentmodel._32_1.cs)]\n [!code-vb[ITypeDescriptorFilterService#1](~/add/codesnippet/visualbasic/t-system.componentmodel._32_1.vb)]\n [!code-cpp[ITypeDescriptorFilterService#1](~/add/codesnippet/cpp/t-system.componentmodel._32_1.cpp)]"
  syntax:
    content: public interface ITypeDescriptorFilterService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterAttributes(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Filtra os atributos que expõe um componente por meio de um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: "Esse método é chamado quando um usuário solicita um conjunto de atributos para um componente. Os atributos são adicionados ao dicionário com o atributo <xref:System.Attribute.TypeId%2A>como as chaves e o atributo real como o valor.</xref:System.Attribute.TypeId%2A> Implementadores deste serviço podem adicionar, remover ou alterar as entradas de atributo existentes no dicionário."
  syntax:
    content: public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "O componente para filtrar os atributos de."
    - id: attributes
      type: System.Collections.IDictionary
      description: "Um dicionário de atributos que podem ser modificadas."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o conjunto de atributos filtrados é para ser armazenado em cache; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o serviço de filtro deve consultar novamente."
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterEvents(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Filtra os eventos expostos por um componente por meio de um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: "Esse método é chamado quando um usuário solicita um conjunto de eventos para um componente. Os eventos são adicionados ao dicionário com os nomes de evento, como as chaves e correspondente <xref:System.ComponentModel.EventDescriptor>objetos como valores.</xref:System.ComponentModel.EventDescriptor> Implementadores deste serviço podem adicionar, remover ou alterar as entradas de eventos no dicionário."
  syntax:
    content: public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Para filtrar eventos para o componente."
    - id: events
      type: System.Collections.IDictionary
      description: "Um dicionário de eventos que podem ser modificadas."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o conjunto de eventos filtrados é para ser armazenado em cache; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o serviço de filtro deve consultar novamente."
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterProperties(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Filtra as propriedades que expõe um componente por meio de um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: "Esse método é chamado quando um usuário solicita um conjunto de propriedades de um componente. As propriedades são adicionadas ao dicionário com os nomes de propriedade, como as chaves e correspondente <xref:System.ComponentModel.PropertyDescriptor>objetos como valores.</xref:System.ComponentModel.PropertyDescriptor> Implementadores deste serviço podem adicionar, remover ou alterar propriedades de entradas no dicionário."
  syntax:
    content: public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Propriedades de filtro para o componente."
    - id: properties
      type: System.Collections.IDictionary
      description: "Um dicionário de propriedades que podem ser modificadas."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o conjunto de propriedades filtradas é para ser armazenado em cache; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o serviço de filtro deve consultar novamente."
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterAttributes(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterEvents(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterProperties(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterAttributes
  nameWithType: ITypeDescriptorFilterService.FilterAttributes
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterEvents
  nameWithType: ITypeDescriptorFilterService.FilterEvents
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterProperties
  nameWithType: ITypeDescriptorFilterService.FilterProperties
