### YamlMime:ManagedReference
items:
- uid: System.Net.FtpWebRequest
  id: FtpWebRequest
  children:
  - System.Net.FtpWebRequest.Abort
  - System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.ClientCertificates
  - System.Net.FtpWebRequest.ConnectionGroupName
  - System.Net.FtpWebRequest.ContentLength
  - System.Net.FtpWebRequest.ContentOffset
  - System.Net.FtpWebRequest.ContentType
  - System.Net.FtpWebRequest.Credentials
  - System.Net.FtpWebRequest.DefaultCachePolicy
  - System.Net.FtpWebRequest.EnableSsl
  - System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  - System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  - System.Net.FtpWebRequest.GetRequestStream
  - System.Net.FtpWebRequest.GetResponse
  - System.Net.FtpWebRequest.Headers
  - System.Net.FtpWebRequest.KeepAlive
  - System.Net.FtpWebRequest.Method
  - System.Net.FtpWebRequest.PreAuthenticate
  - System.Net.FtpWebRequest.Proxy
  - System.Net.FtpWebRequest.ReadWriteTimeout
  - System.Net.FtpWebRequest.RenameTo
  - System.Net.FtpWebRequest.RequestUri
  - System.Net.FtpWebRequest.ServicePoint
  - System.Net.FtpWebRequest.Timeout
  - System.Net.FtpWebRequest.UseBinary
  - System.Net.FtpWebRequest.UseDefaultCredentials
  - System.Net.FtpWebRequest.UsePassive
  langs:
  - csharp
  name: FtpWebRequest
  nameWithType: FtpWebRequest
  fullName: System.Net.FtpWebRequest
  type: Class
  summary: "Implementa um cliente de protocolo de transferência de arquivo (FTP)."
  remarks: "Para obter uma instância de FtpWebRequest, use o <xref:System.Net.WebRequest.Create%2A>método.</xref:System.Net.WebRequest.Create%2A> Você também pode usar o <xref:System.Net.WebClient>classe para carregar e baixar informações de um servidor FTP.</xref:System.Net.WebClient> Usando qualquer uma dessas abordagens, quando você especifica um recurso de rede que usa o esquema FTP (por exemplo, `&quot;ftp://contoso.com&quot;`) a classe FtpWebRequest fornece a capacidade de interagir programaticamente com servidores de FTP.       O URI pode ser relativo ou absoluto. Se o URI é da forma `&quot;ftp://contoso.com/%2fpath&quot;` (2f % é um escape &quot;/&quot;), em seguida, o URI é absoluto e o diretório atual é `/path`. Se, no entanto, o URI é da forma `&quot;ftp://contoso.com/path&quot;`, primeiro o .NET Framework fizer logon no servidor FTP (usar o nome de usuário e a senha definida <xref:System.Net.FtpWebRequest.Credentials%2A>propriedade), o diretório atual está definido como `<UserLoginDirectory>/path`.</xref:System.Net.FtpWebRequest.Credentials%2A>       Você deve ter um nome de usuário válido e senha para o servidor ou o servidor deve permitir logon anônimo. Você pode especificar as credenciais usadas para conectar ao servidor, definindo a <xref:System.Net.FtpWebRequest.Credentials%2A>propriedade ou você pode incluí-los no <xref:System.Uri.UserInfo%2A>parte do URI passada para o <xref:System.Net.WebRequest.Create%2A>método.</xref:System.Net.WebRequest.Create%2A> </xref:System.Uri.UserInfo%2A> </xref:System.Net.FtpWebRequest.Credentials%2A> Se você incluir <xref:System.Uri.UserInfo%2A>informações no URI, o <xref:System.Net.FtpWebRequest.Credentials%2A>está definida como uma nova credencial de rede com as informações de nome e a senha do usuário especificado.</xref:System.Net.FtpWebRequest.Credentials%2A> </xref:System.Uri.UserInfo%2A>      > [!CAUTION] >, A menos que o <xref:System.Net.FtpWebRequest.EnableSsl%2A>é de propriedade `true`, todos os dados e comandos, incluindo suas informações de nome e senha de usuário, são enviados para o servidor em texto não criptografado.</xref:System.Net.FtpWebRequest.EnableSsl%2A> Qualquer pessoa monitoramento de tráfego de rede pode exibir suas credenciais e usá-los para se conectar ao servidor. Se você estiver se conectando a um servidor FTP que exige credenciais e dá suporte ao protocolo (SSL), você deve definir <xref:System.Net.FtpWebRequest.EnableSsl%2A>para `true`.</xref:System.Net.FtpWebRequest.EnableSsl%2A>       Você deve ter <xref:System.Net.WebPermission>para acessar o recurso FTP; caso contrário, um <xref:System.Security.SecurityException>exceção será lançada.</xref:System.Security.SecurityException> </xref:System.Net.WebPermission>       Especifique o comando do FTP para enviar para o servidor definindo a <xref:System.Net.FtpWebRequest.Method%2A>propriedade com um valor definido no <xref:System.Net.WebRequestMethods.Ftp>estrutura.</xref:System.Net.WebRequestMethods.Ftp> </xref:System.Net.FtpWebRequest.Method%2A> Para transmitir dados de texto, alterar o <xref:System.Net.FtpWebRequest.UseBinary%2A>propriedade do valor padrão (`true`) para `false`.</xref:System.Net.FtpWebRequest.UseBinary%2A> Para obter detalhes e restrições, consulte <xref:System.Net.FtpWebRequest.Method%2A>.</xref:System.Net.FtpWebRequest.Method%2A>       Ao usar um objeto FtpWebRequest para carregar um arquivo em um servidor, você deve gravar o conteúdo do arquivo para o fluxo da solicitação obtido chamando o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>método ou suas contrapartes assíncronas, o <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>e <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>métodos.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A> Você deve gravar no fluxo e feche o fluxo antes de enviar a solicitação.       Solicitações são enviadas para o servidor ao chamar o <xref:System.Net.FtpWebRequest.GetResponse%2A>método ou suas contrapartes assíncronas, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>e <xref:System.Net.FtpWebRequest.EndGetResponse%2A>métodos.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> Quando a operação solicitada é concluída, um <xref:System.Net.FtpWebResponse>objeto é retornado.</xref:System.Net.FtpWebResponse> O <xref:System.Net.FtpWebResponse>objeto fornece o status da operação e os dados baixados do servidor.</xref:System.Net.FtpWebResponse>       Você pode definir um valor de tempo limite para a leitura ou gravação para o servidor usando o <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>propriedade.</xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> Se o período de tempo limite for excedido, o método de chamada lança um <xref:System.Net.WebException>com <xref:System.Net.WebExceptionStatus>definida como <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       Ao baixar um arquivo de um servidor FTP, se o comando foi bem-sucedido, o conteúdo do arquivo solicitado está disponível no fluxo do objeto de resposta. Você pode acessar este fluxo chamando o <xref:System.Net.FtpWebResponse.GetResponseStream%2A>método.</xref:System.Net.FtpWebResponse.GetResponseStream%2A> Para obter mais informações, consulte <xref:System.Net.FtpWebResponse>.</xref:System.Net.FtpWebResponse>       Se o <xref:System.Net.FtpWebRequest.Proxy%2A>propriedade for definida, seja diretamente ou em um arquivo de configuração, as comunicações com o servidor FTP são feitas por meio do proxy especificado.</xref:System.Net.FtpWebRequest.Proxy%2A> Se o proxy especificado é um proxy HTTP, somente o <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, e <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>comandos têm suporte.</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Somente o conteúdo binário baixado é armazenado em cache; ou seja, o conteúdo recebido usando o <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>com o <xref:System.Net.FtpWebRequest.UseBinary%2A>propriedade definida como `true`.</xref:System.Net.FtpWebRequest.UseBinary%2A> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Vários FtpWebRequests reutilizar conexões existentes, se possível.       Para obter mais informações sobre o protocolo FTP, consulte RFC 959, &quot;FTP&quot; disponível em [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt)."
  example:
  - "The following code example demonstrates deleting a file from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_1.cs)]  \n  \n The following code example demonstrates downloading a file from an FTP server by using the <xref:System.Net.WebClient> class.  \n  \n [!code-cpp[NCLFtpClient#5](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_2.cpp)]\n [!code-cs[NCLFtpClient#5](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_2.cs)]  \n  \n The following code example demonstrates using asynchronous operations to upload a file to an FTP server.  \n  \n [!code-cs[NCLFtpAsync#1](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_3.cs)]\n [!code-cpp[NCLFtpAsync#1](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_3.cpp)]"
  syntax:
    content: 'public sealed class FtpWebRequest : System.Net.WebRequest'
  inheritance:
  - System.Net.WebRequest
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Abort
  id: Abort
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Termina uma operação assíncrona de FTP."
  remarks: "Se não houver nenhuma operação em andamento, esse método não fará nada. Se uma transferência de arquivo está em andamento, esse método encerra a transferência.      > [!NOTE] > Esse membro gera informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how the user can terminate an asynchronous upload of a file from the local directory to the server.  \n  \n [!code-cpp[NCLFtpClient#10](~/add/codesnippet/cpp/m-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#10](~/add/codesnippet/csharp/m-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override void Abort ();
    parameters: []
  overload: System.Net.FtpWebRequest.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  id: BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Começa a abrir assincronamente o fluxo de conteúdo da solicitação para gravação."
  remarks: "Você deve concluir a operação assíncrona ao chamar o <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>método.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> Normalmente, <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>é chamado pelo método referenciado por `callback`.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> Para determinar o estado da operação, verifique as propriedades <xref:System.IAsyncResult>objeto retornado por este método.</xref:System.IAsyncResult>       Esse método não bloqueia enquanto aguarda o fluxo. Para bloquear, chame <xref:System.Net.FtpWebRequest.GetRequestStream%2A>no lugar desse método.</xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Esse membro gera informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates beginning an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#4](~/add/codesnippet/csharp/7dded3fc-ce2a-466f-b201-_1.cs)]\n [!code-cpp[NCLFtpAsync#4](~/add/codesnippet/cpp/7dded3fc-ce2a-466f-b201-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>representante que referencia o método a ser invocado quando a operação for concluída.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Um objeto definido pelo usuário que contém informações sobre a operação. Este objeto é passado para o `callback` delegar quando a operação for concluída."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>instância que indica o status da operação.</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada anterior para este método ou <xref:System.Net.FtpWebRequest.GetRequestStream*>ainda não foi concluído.</xref:System.Net.FtpWebRequest.GetRequestStream*>"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Não foi possível estabelecer uma conexão com o servidor FTP."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "A <xref:System.Net.FtpWebRequest.Method*>propriedade não está definida como <xref:System.Net.WebRequestMethods.Ftp.UploadFile>.</xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  id: BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Começa a enviar uma solicitação e receber uma resposta de um servidor FTP de forma assíncrona."
  remarks: "Você deve concluir a operação assíncrona ao chamar o <xref:System.Net.FtpWebRequest.EndGetResponse%2A>método.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> Normalmente, <xref:System.Net.FtpWebRequest.EndGetResponse%2A>é chamado pelo método referenciado por `callback`.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> Para determinar o estado da operação, verifique as propriedades <xref:System.IAsyncResult>objeto retornado pelo método BeginGetResponse.</xref:System.IAsyncResult>       Se o <xref:System.Net.FtpWebRequest.Proxy%2A>propriedade for definida, seja diretamente ou em um arquivo de configuração, as comunicações com o servidor FTP são feitas por meio do proxy especificado.</xref:System.Net.FtpWebRequest.Proxy%2A>       Não bloqueia a BeginGetResponse enquanto aguarda a resposta do servidor. Para bloquear, chame o <xref:System.Net.FtpWebRequest.GetResponse%2A>método no lugar de BeginGetResponse.</xref:System.Net.FtpWebRequest.GetResponse%2A>       Para obter mais informações sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/add/includes/ajax-current-ext-md.md).       Este membro gera informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Se um <xref:System.Net.WebException>é acionada, use o <xref:System.Net.WebException.Response%2A>e <xref:System.Net.WebException.Status%2A>Propriedades da exceção para determinar a resposta do servidor.</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>"
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream, and then starting a request to get the response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_0_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_0_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>representante que referencia o método a ser invocado quando a operação for concluída.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Um objeto definido pelo usuário que contém informações sobre a operação. Este objeto é passado para o `callback` delegar quando a operação for concluída."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>instância que indica o status da operação.</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.GetResponse*>ou BeginGetResponse já foi chamado para essa instância.</xref:System.Net.FtpWebRequest.GetResponse*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ClientCertificates
  id: ClientCertificates
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define os certificados usados para estabelecer uma conexão criptografada ao servidor FTP."
  remarks: "Certificados de cliente são usados para autenticar o cliente durante a negociação de conexão inicial do SSL. Para obter mais informações, consulte <xref:System.Net.FtpWebRequest.EnableSsl%2A>.</xref:System.Net.FtpWebRequest.EnableSsl%2A>      > [!NOTE] >.NET Framework armazena em cache as sessões SSL conforme eles são criados e tenta reutilizar uma sessão em cache para uma nova solicitação, se possível. Ao tentar reutilizar uma sessão SSL, o .NET Framework usa o primeiro elemento da <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(se houver), ou tentar reutilizar uma sessão anônima se <xref:System.Net.HttpWebRequest.ClientCertificates%2A>está vazio.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> objeto que contém os certificados de cliente."
  overload: System.Net.FtpWebRequest.ClientCertificates*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor especificado para uma operação de definição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  id: ConnectionGroupName
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o nome do grupo de conexão que contém o ponto de serviço usado para enviar a solicitação atual."
  remarks: "Grupos de Conexão associado a um conjunto de solicitações com uma conexão específica ou um conjunto de conexões. As conexões em um grupo de conexão podem ser reutilizadas somente por solicitações originadas no mesmo domínio de aplicativo, quando as credenciais na solicitação são os mesmos e a solicitação especifica o nome do grupo de conexão. Quando uma solicitação não especifica um nome de grupo de conexão, qualquer conexão existente para o servidor solicitado não está associado um grupo de conexão pode ser usado. Quando as credenciais não forem iguais, a conexão existente foi fechada e a nova solicitação deve ser autenticado novamente.       Usando grupos de conexão pode melhorar o desempenho, pois isso permite que todas as solicitações para um usuário de reutilizar a conexão autenticada com credenciais do usuário.       Alterando a propriedade ConnectionGroupName depois de chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>método faz com que um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_8_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_8_1.cs)]"
  syntax:
    content: public override string ConnectionGroupName { get; set; }
    return:
      type: System.String
      description: "Um <xref:System.String>valor que contém um nome de grupo de conexão.</xref:System.String>"
  overload: System.Net.FtpWebRequest.ConnectionGroupName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um novo valor foi especificado para essa propriedade para uma solicitação que já está em andamento."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentLength
  id: ContentLength
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um valor que é ignorado pelo <xref href=&quot;System.Net.FtpWebRequest&quot;> </xref> classe."
  remarks: "A propriedade ContentLength é fornecida somente para compatibilidade com outras implementações do <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classes.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Não há nenhum motivo para usar ContentLength."
  syntax:
    content: public override long ContentLength { get; set; }
    return:
      type: System.Int64
      description: "Um <xref:System.Int64>valor que deve ser ignorado.</xref:System.Int64>"
  overload: System.Net.FtpWebRequest.ContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentOffset
  id: ContentOffset
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um deslocamento de bytes no arquivo de download por esta solicitação."
  remarks: "Defina a propriedade de ContentOffset ao baixar um arquivo de um servidor FTP. Esse deslocamento indica a posição no arquivo do servidor que marca o início dos dados a serem baixados. O deslocamento é especificado como o número de bytes do início do arquivo. o deslocamento do primeiro byte é zero.       Configuração ContentOffset faz com que o <xref:System.Net.FtpWebRequest>para enviar uma reinicialização (`REST`) comando no servidor.</xref:System.Net.FtpWebRequest> Este comando será ignorado pela maioria das implementações de servidor FTP se você estiver carregando dados para o servidor.       Alterando ContentOffset depois de chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>método faz com que um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example demonstrates downloading part of a file from a server and appending the downloaded data to a local file.  \n  \n [!code-cpp[NclFtpClient#7](~/add/codesnippet/cpp/p-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NclFtpClient#7](~/add/codesnippet/csharp/p-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public long ContentOffset { get; set; }
    return:
      type: System.Int64
      description: "Um <xref:System.Int64>instância que especifica o deslocamento de arquivo, em bytes.</xref:System.Int64> O valor padrão é zero."
  overload: System.Net.FtpWebRequest.ContentOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um novo valor foi especificado para essa propriedade para uma solicitação que já está em andamento."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado para esta propriedade é menor que zero."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentType
  id: ContentType
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Sempre gera um <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "A propriedade ContentType é fornecida somente para compatibilidade com outras implementações do <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classes.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Não há nenhum motivo para usar o ContentType."
  syntax:
    content: public override string ContentType { get; set; }
    return:
      type: System.String
      description: "Sempre gera um <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.ContentType*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não há suporte para informações de tipo de conteúdo para o FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Credentials
  id: Credentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define as credenciais usadas para se comunicar com o servidor FTP."
  remarks: "Você não deve especificar as credenciais ao se conectar usando o logon anônimo. Você deve definir a propriedade de credenciais usando uma credencial do tipo <xref:System.Net.NetworkCredential>; Isso garante que o nome de usuário e senha podem ser lidos e enviados ao servidor.</xref:System.Net.NetworkCredential>      > [!CAUTION] > Informações de credenciais não são criptografadas quando transmitidas para o servidor, a menos que o <xref:System.Net.FtpWebRequest.EnableSsl%2A>está definida como `true`.</xref:System.Net.FtpWebRequest.EnableSsl%2A>       Alterar credenciais depois de chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>método faz com que um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property and uses it to display the user name.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_6_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_6_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "Um <xref:System.Net.ICredentials>instância; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a propriedade não tiver sido definida.</xref:System.Net.ICredentials>"
  overload: System.Net.FtpWebRequest.Credentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor especificado para uma operação de definição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um <xref:System.Net.ICredentials>de um tipo diferente de <xref:System.Net.NetworkCredential>foi especificado para uma operação definida.</xref:System.Net.NetworkCredential> </xref:System.Net.ICredentials>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um novo valor foi especificado para essa propriedade para uma solicitação que já está em andamento."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  id: DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Define a política de cache padrão para todas as solicitações FTP."
  remarks: "Somente conteúdo recebido usando o <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>comando é armazenada em cache.</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       A tabela a seguir descreve os efeitos das políticas em <xref:System.Net.FtpWebRequest>.</xref:System.Net.FtpWebRequest> de cache de FTP      | Diretiva | Efeito |   |------------|------------|   | <xref:System.Net.Cache.RequestCacheLevel>| Retorna o recurso em cache se o recurso for atualizado, o comprimento do conteúdo é preciso e a expiração, modificação e atributos de comprimento de conteúdo estiverem presentes. |   | <xref:System.Net.Cache.RequestCacheLevel>| Retorna o recurso do servidor. |   | <xref:System.Net.Cache.RequestCacheLevel>| Retorna o recurso em cache se o comprimento do conteúdo está presente e corresponde ao tamanho de entrada; Caso contrário, gera um <xref:System.Net.WebException>. |   | <xref:System.Net.Cache.RequestCacheLevel>| Retorna o recurso em cache se o comprimento do conteúdo for fornecido e corresponda ao tamanho de entrada; Caso contrário, o recurso é baixado do servidor e é retornado ao chamador. |   | <xref:System.Net.Cache.RequestCacheLevel>| Retorna o recurso em cache se o carimbo de hora do recurso em cache é o mesmo que o carimbo de hora do recurso no servidor. Caso contrário, o recurso é baixado do servidor, armazenado no cache e retornado ao chamador. |   | <xref:System.Net.Cache.RequestCacheLevel>| Baixe o recurso do servidor, armazena em cache e retorna o recurso para o chamador. |   | <xref:System.Net.Cache.RequestCacheLevel>| Se existe um recurso de cache, ele será excluído.</xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.WebException> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> O recurso é baixado do servidor e é retornado ao chamador. |      > [!NOTE] > DefaultCachePolicy configuração substitui qualquer configuração."
  syntax:
    content: public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "Um <xref href=&quot;System.Net.Cache.RequestCachePolicy&quot;> </xref> que define a política de cache para solicitações FTP."
  overload: System.Net.FtpWebRequest.DefaultCachePolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O chamador tentou definir essa propriedade para <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EnableSsl
  id: EnableSsl
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um <xref:System.Boolean>que especifica que uma conexão SSL deve ser usado.</xref:System.Boolean>"
  remarks: "> [!CAUTION]>, A menos que a propriedade EnableSsl é `true`, todos os dados e comandos, incluindo suas informações de nome e senha de usuário, são enviados para o servidor em texto não criptografado. Qualquer pessoa monitoramento de tráfego de rede pode exibir suas credenciais e usá-los para se conectar ao servidor. Se você estiver se conectando a um servidor FTP que exige credenciais e dá suporte a SSL, você deve definir EnableSsl como `true`.       O `&quot;AUTH TLS&quot;` comando é enviado ao servidor para solicitar uma sessão criptografada. Se o servidor não reconhece este comando, você receberá um <xref:System.Net.WebException>exceção.</xref:System.Net.WebException>"
  example:
  - "The following code example uses an encrypted connection to download the directory listing from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#8](~/add/codesnippet/cpp/p-system.net.ftpwebreque_11_1.cpp)]\n [!code-cs[NCLFtpClient#8](~/add/codesnippet/csharp/p-system.net.ftpwebreque_11_1.cs)]"
  syntax:
    content: public bool EnableSsl { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle e transmissões de dados são criptografadas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.EnableSsl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Já tiver sido estabelecida a conexão com o servidor FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  id: EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Termina uma operação assíncrona pendente iniciada com <xref:System.Net.FtpWebRequest.BeginGetRequestStream*>.</xref:System.Net.FtpWebRequest.BeginGetRequestStream*>"
  remarks: "Se a operação não foi concluída, os blocos de método EndGetRequestStream até que a operação seja concluída. Para determinar se a operação for concluída, verifique o <xref:System.IAsyncResult.IsCompleted%2A>propriedade antes de chamar EndGetRequestStream.</xref:System.IAsyncResult.IsCompleted%2A>       Além de exceções indicadas em &quot;Exceções&quot;, EndGetRequestStream relança exceções foram apresentadas ao abrir o fluxo para gravação.      > [!NOTE] > Esse membro gera informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_1_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_1_1.cpp)]"
  syntax:
    content: public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>objeto retornado quando a operação foi iniciada.</xref:System.IAsyncResult>"
    return:
      type: System.IO.Stream
      description: "Uma gravação <xref:System.IO.Stream>instância associada a essa instância.</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.EndGetRequestStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>não foi obtido chamando <xref:System.Net.FtpWebRequest.BeginGetRequestStream*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Este método já foi chamado para a operação identificada por <code> asyncResult </code>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  id: EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Termina uma operação assíncrona pendente iniciada com <xref:System.Net.FtpWebRequest.BeginGetResponse*>.</xref:System.Net.FtpWebRequest.BeginGetResponse*>"
  remarks: "Se a operação não foi concluída no momento em que o método EndGetResponse é chamado, EndGetResponse blocos até que a operação seja concluída. Para evitar o bloqueio, verifique o <xref:System.IAsyncResult.IsCompleted%2A>propriedade antes de chamar EndGetResponse.</xref:System.IAsyncResult.IsCompleted%2A>       Além de exceções indicadas em &quot;Exceções&quot;, EndGetResponse relança exceções que foram geradas durante a comunicação com o servidor.      > [!NOTE] > Esse membro gera informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#6](~/add/codesnippet/csharp/m-system.net.ftpwebreque_5_1.cs)]\n [!code-cpp[NCLFtpAsync#6](~/add/codesnippet/cpp/m-system.net.ftpwebreque_5_1.cpp)]"
  syntax:
    content: public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que foi retornado quando a operação foi iniciada.</xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "Um <xref:System.Net.WebResponse>referência que contém um <xref href=&quot;System.Net.FtpWebResponse&quot;> </xref> instância.</xref:System.Net.WebResponse> Este objeto contém a resposta do servidor FTP para a solicitação."
  overload: System.Net.FtpWebRequest.EndGetResponse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>não foi obtido chamando <xref:System.Net.FtpWebRequest.BeginGetResponse*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Este método já foi chamado para a operação identificada por <code> asyncResult </code>."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Erro ao usar um proxy HTTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetRequestStream
  id: GetRequestStream
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Recupera o fluxo usado para carregar dados para um servidor FTP."
  remarks: "Defina as propriedades de solicitação antes de chamar o método GetRequestStream. Depois de gravar os dados no fluxo, você deve fechar o fluxo antes de enviar a solicitação.       Se você não tiver configurado o <xref:System.Net.FtpWebRequest.Method%2A>propriedade <xref:System.Net.WebRequestMethods.Ftp.UploadFile>ou <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, não é possível obter o fluxo.</xref:System.Net.WebRequestMethods.Ftp.AppendFile> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method%2A>       Blocos de GetRequestStream ao aguardar o fluxo. Para evitar isso, chame o <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>método no lugar GetRequestStream.</xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>      > [!NOTE] > Esse membro gera informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to the server to upload the data and append it to a file.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public override System.IO.Stream GetRequestStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Uma gravação <xref:System.IO.Stream>instância usada para armazenar dados a serem enviados ao servidor, a solicitação atual.</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.GetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.BeginGetRequestStream*> has been called and has not completed.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Não foi possível estabelecer uma conexão com o servidor FTP."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "O <xref:System.Net.FtpWebRequest.Method*>propriedade não está definida como &lt;xref:System.Net.WebRequestMethods.Ftp.UploadFile?displayProperty=fullName&gt; ou &lt;xref:System.Net.WebRequestMethods.Ftp.AppendFile?displayProperty=fullName&gt;.</xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetResponse
  id: GetResponse
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Retorna a resposta do servidor FTP."
  remarks: "Para acessar as propriedades específicas de FTP, você deve converter o <xref:System.Net.WebResponse>objeto retornado por este método para <xref:System.Net.FtpWebResponse>.</xref:System.Net.FtpWebResponse> </xref:System.Net.WebResponse>       GetResponse faz com que uma conexão de controle seja estabelecida e também pode criar uma conexão de dados. Blocos de GetResponse até que a resposta seja recebida. Para evitar isso, você pode executar essa operação assíncrona chamando o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>e <xref:System.Net.FtpWebRequest.EndGetResponse%2A>métodos no lugar de GetResponse.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A>       Se o <xref:System.Net.FtpWebRequest.Proxy%2A>propriedade for definida, seja diretamente ou em um arquivo de configuração, as comunicações com o servidor FTP são feitas por meio do proxy.</xref:System.Net.FtpWebRequest.Proxy%2A>       Se um <xref:System.Net.WebException>é acionada, use o <xref:System.Net.WebException.Response%2A>e <xref:System.Net.WebException.Status%2A>Propriedades da exceção para determinar a resposta do servidor.</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>       Este membro gera informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Várias chamadas para GetResponse retornam o mesmo objeto de resposta; a solicitação não seja enviado novamente."
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to append data to a file to the server. The example calls GetResponse to send the request and block until the response is returned by the server.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override System.Net.WebResponse GetResponse ();
    parameters: []
    return:
      type: System.Net.WebResponse
      description: "Um <xref:System.Net.WebResponse>referência que contém um <xref href=&quot;System.Net.FtpWebResponse&quot;> </xref> instância.</xref:System.Net.WebResponse> Este objeto contém a resposta do servidor FTP para a solicitação."
  overload: System.Net.FtpWebRequest.GetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "GetResponse or <xref:System.Net.FtpWebRequest.BeginGetResponse*> has already been called for this instance.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<xref:System.Net.FtpWebRequest.EnableSsl*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the server does not support this feature.  \n  \n \\- or -  \n  \n A <xref:System.Net.FtpWebRequest.Timeout*> was specified and the timeout has expired."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Headers
  id: Headers
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém um vazio <xref:System.Net.WebHeaderCollection>objeto.</xref:System.Net.WebHeaderCollection>"
  remarks: "A propriedade de cabeçalhos é fornecida somente para compatibilidade com outras implementações do <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classes.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Não há nenhum motivo para usar cabeçalhos."
  syntax:
    content: public override System.Net.WebHeaderCollection Headers { get; set; }
    return:
      type: System.Net.WebHeaderCollection
      description: "Vazio <xref:System.Net.WebHeaderCollection>objeto.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.FtpWebRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.KeepAlive
  id: KeepAlive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um <xref:System.Boolean>valor que especifica se a conexão de controle para o servidor FTP é fechada depois que a solicitação é concluída.</xref:System.Boolean>"
  remarks: "Quando a propriedade de KeepAlive é definida como `false`, a conexão de controle é fechada quando você chamar o <xref:System.Net.FtpWebResponse.Close%2A>método.</xref:System.Net.FtpWebResponse.Close%2A>       Alterando KeepAlive depois de chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>método faz com que um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_0_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_0_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a conexão com o servidor não deve ser destruída; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.KeepAlive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um novo valor foi especificado para essa propriedade para uma solicitação que já está em andamento."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Method
  id: Method
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o comando para enviar ao servidor FTP."
  remarks: "A propriedade do método determina qual comando é enviado ao servidor. Definir o método usando as cadeias de caracteres definidas nos membros de campo público da <xref:System.Net.WebRequestMethods.Ftp>classe.</xref:System.Net.WebRequestMethods.Ftp> Observe que as cadeias de caracteres definidas no <xref:System.Net.WebRequestMethods.Ftp>classe são as únicas opções com suporte para a propriedade do método.</xref:System.Net.WebRequestMethods.Ftp> Definindo a propriedade do método para qualquer outro valor resulta em um <xref:System.ArgumentException>exceção.</xref:System.ArgumentException>       Ao definir o método para <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, você deve fazer isso antes de chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>método.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> Falha ao chamar esses membros na ordem correta causas um <xref:System.Net.ProtocolViolationException>exceção ao tentar obter o fluxo da solicitação.</xref:System.Net.ProtocolViolationException>       As credenciais fornecidas para o <xref:System.Net.FtpWebRequest>objeto deve ter permissão para executar o método especificado.</xref:System.Net.FtpWebRequest> Caso contrário, o comando FTP falhar.       Para determinar o êxito ou falha de um comando, verifique o <xref:System.Net.FtpWebResponse.StatusCode%2A>e <xref:System.Net.FtpWebResponse.StatusDescription%2A>Propriedades.</xref:System.Net.FtpWebResponse.StatusDescription%2A> </xref:System.Net.FtpWebResponse.StatusCode%2A>"
  example:
  - "The following code example sets this property to <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/p-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/p-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override string Method { get; set; }
    return:
      type: System.String
      description: "Um <xref:System.String>valor que contém o comando do FTP para enviar para o servidor.</xref:System.String> O valor padrão é <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>.</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  overload: System.Net.FtpWebRequest.Method*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um novo valor foi especificado para essa propriedade para uma solicitação que já está em andamento."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The method is invalid.  \n  \n \\- or -  \n  \n The method is not supported.  \n  \n \\- or -  \n  \n Multiple methods were specified."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.PreAuthenticate
  id: PreAuthenticate
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Sempre gera um <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "A propriedade PreAuthenticate é fornecida somente para compatibilidade com outras implementações do <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classes.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest>"
  syntax:
    content: public override bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: "Sempre gera um <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.PreAuthenticate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não há suporte para a pré-autenticação para FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Proxy
  id: Proxy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o proxy usado para se comunicar com o servidor FTP."
  remarks: "A propriedade de Proxy identifica o <xref:System.Net.IWebProxy>instância que se comunica com o servidor FTP.</xref:System.Net.IWebProxy> O proxy é definido pelo sistema usando arquivos de configuração e as configurações de rede de área de Local do Internet Explorer. Para especificar que nenhum proxy deve ser usado, definir o Proxy para a instância do proxy retornada pelo <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName>método.</xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName> Para obter mais informações sobre a detecção automática de proxy, consulte [detecção automática de Proxy](~/add/includes/ajax-current-ext-md.md).       Você deve configurar o Proxy antes de gravar dados em fluxo da solicitação ou obter a resposta. Alterando o Proxy depois de chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>método faz com que um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       O <xref:System.Net.FtpWebRequest>classe oferece suporte a proxies HTTP e o cliente de Firewall do ISA.</xref:System.Net.FtpWebRequest>       Se o proxy especificado é um proxy HTTP, somente o <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, e <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>comandos têm suporte.</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_1_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_1_1.cs)]"
  syntax:
    content: public override System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "Um <xref:System.Net.IWebProxy>instância responsável pela comunicação com o servidor FTP.</xref:System.Net.IWebProxy>"
  overload: System.Net.FtpWebRequest.Proxy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Essa propriedade não pode ser definida como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um novo valor foi especificado para essa propriedade para uma solicitação que já está em andamento."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  id: ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um tempo limite durante a leitura ou gravação em um fluxo."
  remarks: "O ReadWriteTimeout é usado ao gravar o fluxo retornado pelo <xref:System.Net.FtpWebRequest.GetRequestStream%2A>método ou ler o fluxo retornado pelo <xref:System.Net.FtpWebResponse.GetResponseStream%2A>método.</xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Especificamente, a propriedade ReadWriteTimeout controla o tempo limite para o <xref:System.IO.Stream.Read%2A>método, que é usado para ler o fluxo retornado pelo <xref:System.Net.FtpWebResponse.GetResponseStream%2A>método e para o <xref:System.IO.Stream.Write%2A>método, que é usado para gravar o fluxo retornado pelo <xref:System.Net.FtpWebRequest.GetRequestStream%2A>método.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.IO.Stream.Write%2A> </xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.IO.Stream.Read%2A> Se o período de tempo limite for excedido, o método de chamada lança um <xref:System.Net.WebException>com <xref:System.Net.WebExceptionStatus>definida como <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       Para especificar a quantidade de tempo de espera para concluir a solicitação, use o <xref:System.Net.FtpWebRequest.Timeout%2A>propriedade.</xref:System.Net.FtpWebRequest.Timeout%2A>"
  syntax:
    content: public int ReadWriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "O número de milissegundos antes de ler ou gravar tempos. O valor padrão é 300.000 milissegundos (5 minutos)."
  overload: System.Net.FtpWebRequest.ReadWriteTimeout*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A solicitação foi enviada."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado para uma operação de definição é menor ou igual a zero e não é igual a &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RenameTo
  id: RenameTo
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o novo nome de um arquivo que está sendo renomeado."
  syntax:
    content: public string RenameTo { get; set; }
    return:
      type: System.String
      description: "O novo nome do arquivo que está sendo renomeado."
  overload: System.Net.FtpWebRequest.RenameTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor especificado para uma operação de definição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um novo valor foi especificado para essa propriedade para uma solicitação que já está em andamento."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RequestUri
  id: RequestUri
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém o URI solicitado por esta instância."
  remarks: "O valor da propriedade RequestUri é o URI especificado quando o <xref:System.Net.WebRequest.Create%2A>método foi chamado para obter essa instância.</xref:System.Net.WebRequest.Create%2A>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_5_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_5_1.cs)]"
  syntax:
    content: public override Uri RequestUri { get; }
    return:
      type: System.Uri
      description: "Um <xref:System.Uri>instância que identifica um recurso que é acessado usando o protocolo de transferência de arquivo.</xref:System.Uri>"
  overload: System.Net.FtpWebRequest.RequestUri*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ServicePoint
  id: ServicePoint
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém o <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto usado para se conectar ao servidor FTP."
  remarks: "Se nenhum <xref:System.Net.ServicePoint>objeto existe, um será criado para o servidor FTP.</xref:System.Net.ServicePoint> Para definir o número máximo de conexões que podem ser abertos para um servidor FTP, defina o <xref:System.Net.ServicePoint.ConnectionLimit%2A>propriedade o <xref:System.Net.ServicePoint>instância retornada por essa propriedade.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.ConnectionLimit%2A>"
  example:
  - "The following code example retrieves the service point from a request and sets the maximum number of connections to one.  \n  \n [!code-cpp[NCLFtpClient#1](~/add/codesnippet/cpp/p-system.net.ftpwebreque_9_1.cpp)]\n [!code-cs[NCLFtpClient#1](~/add/codesnippet/csharp/p-system.net.ftpwebreque_9_1.cs)]"
  syntax:
    content: public System.Net.ServicePoint ServicePoint { get; }
    return:
      type: System.Net.ServicePoint
      description: "Um <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto que pode ser usado para personalizar o comportamento de conexão."
  overload: System.Net.FtpWebRequest.ServicePoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Timeout
  id: Timeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o número de milissegundos para aguardar uma solicitação."
  remarks: "Para especificar um valor infinito, defina a propriedade de tempo limite como <xref:System.Threading.Timeout.Infinite>(-1).</xref:System.Threading.Timeout.Infinite> Este é o valor padrão.       Tempo limite é o número de milissegundos que uma solicitação síncrona feita com o <xref:System.Net.FtpWebRequest.GetResponse%2A>método aguarda uma resposta e que o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>método aguarda um fluxo.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> Se um recurso não responder dentro do período de tempo limite, a solicitação gerará um <xref:System.Net.WebException>com a <xref:System.Net.WebException.Status%2A>propriedade definida como <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException>       Alterar o tempo limite depois de chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>método faz com que um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Uma consulta de sistema de nome de domínio (DNS) pode levar até 15 segundos para retornar ou tempo limite. Se a solicitação contém um nome de host que requer que a resolução e definir tempo limite para um valor menor que 15 segundos, pode levar 15 segundos ou mais antes de um <xref:System.Net.WebException>é gerada para indicar um tempo limite em sua solicitação.</xref:System.Net.WebException>"
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[NCLFtpClient#23](~/add/codesnippet/cpp/p-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#23](~/add/codesnippet/csharp/p-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override int Timeout { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que contém o número de milissegundos de espera antes que uma solicitação expire.</xref:System.Int32> O valor padrão é <xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  overload: System.Net.FtpWebRequest.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado é menor que zero e não é <xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um novo valor foi especificado para essa propriedade para uma solicitação que já está em andamento."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseBinary
  id: UseBinary
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um <xref:System.Boolean>valor que especifica o tipo de dados para transferências de arquivos.</xref:System.Boolean>"
  remarks: "Se você estiver enviando binário dados, como uma imagem, defina essa propriedade como `true`. Se você estiver enviando texto, defina a propriedade como `false`. Especificando `true` faz com que o <xref:System.Net.FtpWebRequest>para enviar um `&quot;TYPE I&quot;` comando para o servidor.</xref:System.Net.FtpWebRequest> Especificando `false` faz com que o <xref:System.Net.FtpWebRequest>para enviar um `&quot;Type A&quot;` comando para o servidor.</xref:System.Net.FtpWebRequest> Servidores de FTP podem ignorar esses comandos.       Alterando UseBinary depois de chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>método faz com que um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_7_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_7_1.cs)]"
  syntax:
    content: public bool UseBinary { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar ao servidor que os dados a serem transferidos são binários; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para indicar que os dados de texto. O valor padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.UseBinary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um novo valor foi especificado para essa propriedade para uma solicitação que já está em andamento."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Sempre gera um <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "A propriedade UseDefaultCredentials é fornecida somente para compatibilidade com outras implementações do <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classes.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Não há nenhum motivo para usar UseDefaultCredentials."
  syntax:
    content: public override bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "Sempre gera um <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.UseDefaultCredentials*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não há suporte para as credenciais padrão para o FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UsePassive
  id: UsePassive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o comportamento do processo de transferência de dados de um aplicativo cliente."
  remarks: "Definindo a propriedade UsePassive para `true` envia o &quot;`PASV&quot;` comando para o servidor. Este comando solicita o servidor para escutar em uma porta de dados e para aguardar uma conexão em vez de iniciar um após o recebimento de um comando de transferência.       Para obter uma descrição dos comportamentos que são especificadas usando UsePassive, consulte RFC 959, &quot;FTP&quot; seção 3.2, &quot;Estabelecer conexões de dados&quot; e seção 4.1.2, &quot;Transferência de parâmetro de comandos,&quot; disponível no [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt).       Alterando UsePassive depois de chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>método faz com que um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Se UsePassive for definido como `true`, o servidor FTP não pode enviar o tamanho do arquivo e andamento do download sempre pode ser zero. Se UsePassive for definido como `false`, um firewall pode gerar um alerta e bloquear o download do arquivo."
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#6](~/add/codesnippet/cpp/p-system.net.ftpwebreque_10_1.cpp)]\n [!code-cs[NCLFtpClient#6](~/add/codesnippet/csharp/p-system.net.ftpwebreque_10_1.cs)]"
  syntax:
    content: public bool UsePassive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se a transferência de dados do aplicativo cliente ouve o processo para uma conexão na porta de dados; Caso contrário, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o cliente deve iniciar uma conexão na porta de dados. O valor padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.UsePassive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um novo valor foi especificado para essa propriedade para uma solicitação que já está em andamento."
  platform:
  - net462
references:
- uid: System.Net.WebRequest
  isExternal: false
  name: System.Net.WebRequest
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.FtpWebRequest.Abort
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
- uid: System.Net.FtpWebRequest.ClientCertificates
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.FtpWebRequest.ContentLength
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.FtpWebRequest.ContentOffset
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Net.FtpWebRequest.GetRequestStream
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
- uid: System.Net.FtpWebRequest.GetResponse
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
- uid: System.Net.FtpWebRequest.Headers
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.FtpWebRequest.KeepAlive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.FtpWebRequest.RenameTo
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.FtpWebRequest.ServicePoint
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
- uid: System.Net.FtpWebRequest.Abort*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort
  nameWithType: FtpWebRequest.Abort
- uid: System.Net.FtpWebRequest.BeginGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream
  nameWithType: FtpWebRequest.BeginGetRequestStream
- uid: System.Net.FtpWebRequest.BeginGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse
  nameWithType: FtpWebRequest.BeginGetResponse
- uid: System.Net.FtpWebRequest.ClientCertificates*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
- uid: System.Net.FtpWebRequest.ConnectionGroupName*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
- uid: System.Net.FtpWebRequest.ContentLength*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
- uid: System.Net.FtpWebRequest.ContentOffset*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
- uid: System.Net.FtpWebRequest.EndGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream
  nameWithType: FtpWebRequest.EndGetRequestStream
- uid: System.Net.FtpWebRequest.EndGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse
  nameWithType: FtpWebRequest.EndGetResponse
- uid: System.Net.FtpWebRequest.GetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream
  nameWithType: FtpWebRequest.GetRequestStream
- uid: System.Net.FtpWebRequest.GetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse
  nameWithType: FtpWebRequest.GetResponse
- uid: System.Net.FtpWebRequest.Headers*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
- uid: System.Net.FtpWebRequest.KeepAlive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
- uid: System.Net.FtpWebRequest.RenameTo*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
- uid: System.Net.FtpWebRequest.ServicePoint*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
