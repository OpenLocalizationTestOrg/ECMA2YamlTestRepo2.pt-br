### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ViewTechnology
  id: ViewTechnology
  children:
  - System.ComponentModel.Design.ViewTechnology.Default
  - System.ComponentModel.Design.ViewTechnology.Passthrough
  - System.ComponentModel.Design.ViewTechnology.WindowsForms
  langs:
  - csharp
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
  type: Enum
  summary: "Define os identificadores para um conjunto de tecnologias que oferecem suporte a hosts de designer."
  remarks: "O modelo de adaptador de exibição substitui e adiciona a funcionalidade para o recurso de ViewTechnology; No entanto, o recurso ViewTechnology é mantido para compatibilidade com versões anteriores e o uso futuro, se você escolher. Para obter mais informações, consulte &quot;.NET forma biblioteca: um exemplo de Designer&quot; na Base de dados de Conhecimento de Windows Forms em http://windowsforms.net/articles/shapedesigner.aspx.       ViewTechnology define os identificadores que podem indicar o modo a ser usado para controlar a exibição de um documento hospedado pelo designer.       Você só deve usar o valor padrão em seu ambiente de hospedagem de designer. Em versões anteriores do [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)], a enumeração ViewTechnology especificado do tipo de modelo de interface do usuário com suporte por um designer raiz. Como esse modelo não é extensível, você deve usar um *adaptador exibição* modelo. Um adaptador de exibição é um tipo que se adapta a um objeto de um tipo para outro.       Por exemplo, um designer de HTML pode retornar um `DemoDOM` árvore como sua exibição. O designer HTML retorna uma tecnologia de exibição padrão. Um ambiente de hospedagem de formulários do Windows tem uma ou mais classes de adaptador do modo de exibição disponíveis. Se uma dessas classes foi possível converter o `DemoDOM` em um controle de formulários do Windows, o aplicativo host pode oferecer suporte a esse tipo de designer. Se nenhum adaptador pode manipular o tipo de dados retornado do designer <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>método, haverá falha no carregamento do designer e o usuário receberá um erro.</xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>       [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]tem um esquema extensível para fornecer exibição adaptadores, portanto ele pode se adaptar a qualquer tecnologia de interface do usuário. Os provedores de tecnologia de terceiros também podem oferecer um adaptador de exibição apropriado e seus modelos de objeto são imediatamente consumíveis.       Para obter um exemplo que usa exibir adaptadores, consulte &quot;.NET forma biblioteca: um exemplo de Designer&quot; na Base de dados de Conhecimento de Windows Forms em http://windowsforms.net/articles/shapedesigner.aspx."
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.  \n  \n [!code-cs[IRootDesigner Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_1.cs)]\n [!code-vb[IRootDesigner Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_1.vb)]\n [!code-cpp[IRootDesigner Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ViewTechnology
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.Default
  id: Default
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: System.ComponentModel.Design.ViewTechnology.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Especifica o suporte de tecnologia de exibição padrão."
  remarks: "O designer raiz pode retornar qualquer tipo de objeto, mas o objeto deve ser compatível com um adaptador para a tecnologia do host. Ambientes de hospedagem, como [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] fornecem uma maneira de plug-in novos adaptadores de tecnologia de exibição. O objeto de exibição padrão para o designer de formulários do Windows é um <xref:System.Windows.Forms.Control?displayProperty=fullName>instância.</xref:System.Windows.Forms.Control?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.  \n  \n [!code-cs[IRootDesigner Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_1.cs)]\n [!code-vb[IRootDesigner Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_1.vb)]\n [!code-cpp[IRootDesigner Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_1.cpp)]"
  syntax:
    content: Default
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  id: Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: System.ComponentModel.Design.ViewTechnology.Passthrough
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Representa um modo no qual o objeto de exibição é passado diretamente para o ambiente de desenvolvimento."
  remarks: "O objeto de exibição deve implementar as interfaces que necessárias para o ambiente de desenvolvimento. O [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] ambiente de desenvolvimento oferece suporte a objetos de exibição são um controle ActiveX, documento ativo ou um objeto que implementa a interface IVsWindowPane que está disponível por meio de [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] VSI ([!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] integração) programa. O [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] ambiente de desenvolvimento fornece suporte para a tecnologia de exibição. Suporte para a tecnologia de exibição não está necessariamente disponível em todos os ambientes de desenvolvimento."
  syntax:
    content: Passthrough
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  id: WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: System.ComponentModel.Design.ViewTechnology.WindowsForms
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Representa um modo no qual um objeto de controle de formulários do Windows fornece a exibição para o designer raiz."
  remarks: "O designer host preenche a janela de documento do ambiente de desenvolvimento com o controle de formulários do Windows."
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.LocalizationExtenderProvider> class.  \n  \n [!code-cpp[LocalizationExtenderProviderExample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_2.cpp)]\n [!code-cs[LocalizationExtenderProviderExample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_2.cs)]\n [!code-vb[LocalizationExtenderProviderExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_2.vb)]"
  syntax:
    content: WindowsForms
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ComponentModel.Design.ViewTechnology.Default
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: System.ComponentModel.Design.ViewTechnology.Default
- uid: System.ComponentModel.Design.ViewTechnology
  parent: System.ComponentModel.Design
  isExternal: false
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: System.ComponentModel.Design.ViewTechnology.Passthrough
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: System.ComponentModel.Design.ViewTechnology.WindowsForms
