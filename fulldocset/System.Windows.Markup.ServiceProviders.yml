### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.ServiceProviders
  id: ServiceProviders
  children:
  - System.Windows.Markup.ServiceProviders.#ctor
  - System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)
  - System.Windows.Markup.ServiceProviders.GetService(System.Type)
  langs:
  - csharp
  name: ServiceProviders
  nameWithType: ServiceProviders
  fullName: System.Windows.Markup.ServiceProviders
  type: Class
  summary: "Fornece uma implementação para o <xref:System.IServiceProvider>interface com métodos que permitem adicionar serviços.</xref:System.IServiceProvider>"
  remarks: "Esta é uma classe de utilitário para uso ao serializar o conteúdo. A classe é basicamente um apenas de entrada de dicionário para armazenar o chaveado por seu tipo de serviço, que implementa os serviços <xref:System.IServiceProvider>para recuperação posterior do mesmo dicionário.</xref:System.IServiceProvider> Usando o dicionário evita consultar repetidamente para o mesmo serviço. Essa classe é a classe base de <xref:System.Windows.Markup.XamlDesignerSerializationManager>, que é o serviço usado para `ShouldSerialize` implementações de método em outras partes do WPF.</xref:System.Windows.Markup.XamlDesignerSerializationManager>       O uso dessa classe requer referenciando assemblies do WPF, não é destinado para cenários gerais de serviços XAML do .NET Framework. O cenário aqui é para implementação interna WPF de recursos com uso intensivo de serviço durante a serialização, como durante o processamento de `ShouldSerialize` implementações de certos tipos. A classe prática envolvidos neste cenário é a classe derivada <xref:System.Windows.Markup.XamlDesignerSerializationManager>.</xref:System.Windows.Markup.XamlDesignerSerializationManager>      <a name=&quot;xamlTextUsage_ServiceProviders&quot;></a># # Uso de texto XAML"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public class ServiceProviders : IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.ServiceProviders.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.ServiceProviders
  langs:
  - csharp
  name: ServiceProviders()
  nameWithType: ServiceProviders.ServiceProviders()
  fullName: System.Windows.Markup.ServiceProviders.ServiceProviders()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Markup.ServiceProviders&quot;> </xref> classe."
  syntax:
    content: public ServiceProviders ();
    parameters: []
  overload: System.Windows.Markup.ServiceProviders.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)
  id: AddService(System.Type,System.Object)
  parent: System.Windows.Markup.ServiceProviders
  langs:
  - csharp
  name: AddService(Type,Object)
  nameWithType: ServiceProviders.AddService(Type,Object)
  fullName: System.Windows.Markup.ServiceProviders.AddService(Type,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "Adiciona um serviço à lista."
  syntax:
    content: public void AddService (Type serviceType, object service);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Tipo de serviço do novo serviço."
    - id: service
      type: System.Object
      description: "A classe de implementação de serviço."
  overload: System.Windows.Markup.ServiceProviders.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>service</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Tentativa de adicionar um serviço que já existe no dicionário."
  platform:
  - net462
- uid: System.Windows.Markup.ServiceProviders.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.Windows.Markup.ServiceProviders
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: ServiceProviders.GetService(Type)
  fullName: System.Windows.Markup.ServiceProviders.GetService(Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "Obtém o objeto de serviço do tipo especificado."
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O tipo de objeto de serviço a ser obtido."
    return:
      type: System.Object
      description: "Uma implementação de serviço para o tipo de <code> serviceType </code>. Pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não há nenhum serviço armazenado para o tipo <code> serviceType </code>."
  overload: System.Windows.Markup.ServiceProviders.GetService*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Markup.ServiceProviders.#ctor
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: ServiceProviders()
  nameWithType: ServiceProviders.ServiceProviders()
  fullName: System.Windows.Markup.ServiceProviders.ServiceProviders()
- uid: System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: AddService(Type,Object)
  nameWithType: ServiceProviders.AddService(Type,Object)
  fullName: System.Windows.Markup.ServiceProviders.AddService(Type,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.ServiceProviders.GetService(System.Type)
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: GetService(Type)
  nameWithType: ServiceProviders.GetService(Type)
  fullName: System.Windows.Markup.ServiceProviders.GetService(Type)
- uid: System.Windows.Markup.ServiceProviders.#ctor*
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: ServiceProviders
  nameWithType: ServiceProviders.ServiceProviders
- uid: System.Windows.Markup.ServiceProviders.AddService*
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: AddService
  nameWithType: ServiceProviders.AddService
- uid: System.Windows.Markup.ServiceProviders.GetService*
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: GetService
  nameWithType: ServiceProviders.GetService
