### YamlMime:ManagedReference
items:
- uid: System.Web.Management.SimpleMailWebEventProvider
  id: SimpleMailWebEventProvider
  children:
  - System.Web.Management.SimpleMailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  langs:
  - csharp
  name: SimpleMailWebEventProvider
  nameWithType: SimpleMailWebEventProvider
  fullName: System.Web.Management.SimpleMailWebEventProvider
  type: Class
  summary: "Implementa um provedor de eventos que envia um email para notificações de eventos."
  remarks: "Monitoramento de integridade do ASP.NET permite que a equipe de produção e operações gerenciar a implantação de aplicativos da Web. O <xref:System.Web.Management>namespace contém os tipos de evento de integridade responsáveis pela compactação de dados de status de integridade do aplicativo e os tipos de provedor responsáveis pelo processamento de dados.</xref:System.Web.Management> Ele também contém tipos de suporte para ajudá-lo durante o gerenciamento de eventos de integridade.       Essa classe não se destina a ser usado em seu código. Ele é criado, configurado e usado pelo sistema de monitoramento de integridade do ASP.NET para enviar notificações de eventos por email. Você pode definir um provedor de eventos em um arquivo de configuração, conforme demonstrado na seção exemplo deste tópico.       Esse provedor tem um conjunto abrangente de atributos de configuração que você pode usar para personalizar a forma como ele funciona."
  example:
  - "The following configuration file excerpt shows how to specify a provider of type SimpleMailWebEventProvider in the `healthMonitoring` section. The `add` elements in the `rules` section specify that the provider will handle request-processing errors and infrastructure errors.  \n  \n```  \n<healthMonitoring  \n    enabled=\"true\"  \n    heartBeatInterval=\"0\">  \n    <bufferModes>  \n        <add name=\"Critical Notification\"  \n            maxBufferSize=\"100\"  \n            maxFlushSize=\"20\"  \n            urgentFlushThreshold=\"1\"  \n            regularFlushInterval=\"Infinite\"  \n            urgentFlushInterval=\"00:01:00\"  \n            maxBufferThreads=\"1\"  \n        />  \n    </bufferModes>  \n    <providers>  \n        <add name=\"CriticalMailEventProvider\"  \n            type=\"System.Web.Management.SimpleMailWebEventProvider,   \n              System.Web, Version=%ASSEMBLY_VERSION%, Culture=neutral,   \n              PublicKeyToken=%MICROSOFT_PUBLICKEY%\"  \n            from=\"sender address\"  \n            to=\"someone@example.com\"   \n            cc=\"someone@example.com  \n            bcc=\"someone@example.com\"  \n            priority=\"High\"  \n            bodyHeader=\"Warning!\"  \n            bodyFooter=\"Please investigate ASAP.\"  \n            subjectPrefix=\"Action required.\"  \n            buffer=\"true\"  \n            bufferMode=\"Critical Notification\"  \n            maxEventLength=\"4096\"  \n            maxSize=\"4096\"  \n            maxMessagesPerNotification=\"1\"  \n        />  \n    </providers>  \n    <eventMappings>  \n        <add name=\"Request Processing Events\"  \n            type=\"System.Web.Management.WebRequestEvent, System.Web,   \n              Version=%ASSEMBLY_VERSION%, Culture=neutral,   \n              PublicKeyToken=%MICROSOFT_PUBLICKEY%\"   \n        />  \n        <add name=\"Infrastructure Errors\"  \n            type=\"System.Web.Management.WebErrorEvent, System.Web,   \n              Version=%ASSEMBLY_VERSION%, Culture=neutral,   \n              PublicKeyToken=%MICROSOFT_PUBLICKEY%\"   \n        />  \n    </eventMappings>  \n    <profiles>  \n        <add name=\"Default\"  \n            minInstances=\"1\"  \n            maxLimit=\"Infinite\"  \n            minInterval=\"00:10:00\"  \n        />  \n        <add name=\"Critical\"  \n            minInstances=\"1\"  \n            maxLimit=\"1024\"  \n            minInterval=\"00:00:00\"  \n        />  \n    </profiles>  \n    <rules>  \n        <add name=\"Request Processing Errors\"  \n            eventName=\"Request Processing Errors\"  \n            provider=\"CriticalMailEventProvider\"  \n            profile=\"Default\"  \n        />  \n        <add name=\"Infrastructure Notifications\"  \n            eventName=\"Infrastructure Errors\"  \n            provider=\"CriticalMailEventProvider\"  \n            profile=\"Critical\"  \n        />  \n   </rules>  \n</healthMonitoring>   \n```"
  syntax:
    content: 'public sealed class SimpleMailWebEventProvider : System.Web.Management.MailWebEventProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.Management.WebEventProvider
  - System.Web.Management.BufferedWebEventProvider
  - System.Web.Management.MailWebEventProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  - System.Web.Management.BufferedWebEventProvider.BufferMode
  - System.Web.Management.BufferedWebEventProvider.Flush
  - System.Web.Management.BufferedWebEventProvider.UseBuffering
  - System.Web.Management.MailWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.MailWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)
  - System.Web.Management.MailWebEventProvider.Shutdown
  platform:
  - net462
- uid: System.Web.Management.SimpleMailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.SimpleMailWebEventProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: SimpleMailWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.SimpleMailWebEventProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Define os valores iniciais para este objeto."
  remarks: "Esse método não se destina a ser usado diretamente no seu código. Ele é chamado pelo sistema de monitoramento de integridade do ASP.NET."
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "O nome desse provedor de eventos."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Um <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> que especifica as configurações para este provedor de eventos."
  overload: System.Web.Management.SimpleMailWebEventProvider.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.MailWebEventProvider
  isExternal: false
  name: System.Web.Management.MailWebEventProvider
- uid: System.Web.Management.SimpleMailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.SimpleMailWebEventProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: SimpleMailWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.SimpleMailWebEventProvider.Initialize(String,NameValueCollection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Management.SimpleMailWebEventProvider.Initialize*
  parent: System.Web.Management.SimpleMailWebEventProvider
  isExternal: false
  name: Initialize
  nameWithType: SimpleMailWebEventProvider.Initialize
