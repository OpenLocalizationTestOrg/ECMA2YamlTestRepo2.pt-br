### YamlMime:ManagedReference
items:
- uid: System.AddIn.Pipeline.ContractAdapter
  id: ContractAdapter
  children:
  - System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)
  - System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)
  - System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)
  langs:
  - csharp
  name: ContractAdapter
  nameWithType: ContractAdapter
  fullName: System.AddIn.Pipeline.ContractAdapter
  type: Class
  summary: "Fornece métodos para compartilhar e readapting suplementos."
  remarks: "Você pode usar essa classe para compartilhar um suplemento com outro host que não têm o mesmo canal para esse suplemento (particularmente, outro host que não têm o mesmo host exibição do suplemento).       Se você precisar adaptar um ativado suplemento de seu modo de exibição do host para o contrato, use o <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A>método.</xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A>       Se você tiver uma instância do contrato e precisa convertê-lo para o modo de host, use o <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A>método.</xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A>"
  syntax:
    content: public static class ContractAdapter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)
  id: ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)
  parent: System.AddIn.Pipeline.ContractAdapter
  langs:
  - csharp
  name: ContractToViewAdapter(ContractHandle,PipelineStoreLocation)
  nameWithType: ContractAdapter.ContractToViewAdapter(ContractHandle,PipelineStoreLocation)
  fullName: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter(ContractHandle,PipelineStoreLocation)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Pipeline
  syntax:
    content: public static TView ContractToViewAdapter<TView> (System.AddIn.Pipeline.ContractHandle contract, System.AddIn.Hosting.PipelineStoreLocation location);
    parameters:
    - id: contract
      type: System.AddIn.Pipeline.ContractHandle
      description: "A ser adicionado."
    - id: location
      type: System.AddIn.Hosting.PipelineStoreLocation
      description: "A ser adicionado."
    return:
      type: TView
      description: "A ser adicionado."
  overload: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter<TView>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)
  id: ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)
  parent: System.AddIn.Pipeline.ContractAdapter
  langs:
  - csharp
  name: ContractToViewAdapter(ContractHandle,String)
  nameWithType: ContractAdapter.ContractToViewAdapter(ContractHandle,String)
  fullName: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter(ContractHandle,String)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Pipeline
  syntax:
    content: public static TView ContractToViewAdapter<TView> (System.AddIn.Pipeline.ContractHandle contract, string pipelineRoot);
    parameters:
    - id: contract
      type: System.AddIn.Pipeline.ContractHandle
      description: "A ser adicionado."
    - id: pipelineRoot
      type: System.String
      description: "A ser adicionado."
    return:
      type: TView
      description: "A ser adicionado."
  overload: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter<TView>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)
  id: ViewToContractAdapter(System.Object)
  parent: System.AddIn.Pipeline.ContractAdapter
  langs:
  - csharp
  name: ViewToContractAdapter(Object)
  nameWithType: ContractAdapter.ViewToContractAdapter(Object)
  fullName: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(Object)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Pipeline
  summary: "Obtém o identificador para o contrato para uma exibição de host fornecido de um suplemento."
  remarks: "Nesse cenário, a entidade de origem (um host) tem um suplemento que deseja ser compartilhado por uma entidade de destino (outro host).       Use esse método para obter o identificador para o contrato que foi instanciado da entidade de origem pelo sistema do suplemento."
  syntax:
    content: public static System.AddIn.Pipeline.ContractHandle ViewToContractAdapter (object view);
    parameters:
    - id: view
      type: System.Object
      description: "O modo de host do suplemento ativado pelo sistema do domínio de aplicativo atual."
    return:
      type: System.AddIn.Pipeline.ContractHandle
      description: "Um identificador para o contrato."
  overload: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>view</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)
  parent: System.AddIn.Pipeline.ContractAdapter
  isExternal: false
  name: ContractToViewAdapter(ContractHandle,PipelineStoreLocation)
  nameWithType: ContractAdapter.ContractToViewAdapter(ContractHandle,PipelineStoreLocation)
  fullName: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter(ContractHandle,PipelineStoreLocation)
- uid: TView
  isExternal: true
  name: TView
  nameWithType: TView
  fullName: TView
- uid: System.AddIn.Pipeline.ContractHandle
  parent: System.AddIn.Pipeline
  isExternal: false
  name: ContractHandle
  nameWithType: ContractHandle
  fullName: System.AddIn.Pipeline.ContractHandle
- uid: System.AddIn.Hosting.PipelineStoreLocation
  parent: System.AddIn.Hosting
  isExternal: false
  name: PipelineStoreLocation
  nameWithType: PipelineStoreLocation
  fullName: System.AddIn.Hosting.PipelineStoreLocation
- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)
  parent: System.AddIn.Pipeline.ContractAdapter
  isExternal: false
  name: ContractToViewAdapter(ContractHandle,String)
  nameWithType: ContractAdapter.ContractToViewAdapter(ContractHandle,String)
  fullName: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter(ContractHandle,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)
  parent: System.AddIn.Pipeline.ContractAdapter
  isExternal: false
  name: ViewToContractAdapter(Object)
  nameWithType: ContractAdapter.ViewToContractAdapter(Object)
  fullName: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(Object)
- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter<TView>*
  parent: System.AddIn.Pipeline.ContractAdapter
  isExternal: false
  name: ContractToViewAdapter<TView>
  nameWithType: ContractAdapter.ContractToViewAdapter<TView>
- uid: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter*
  parent: System.AddIn.Pipeline.ContractAdapter
  isExternal: false
  name: ViewToContractAdapter
  nameWithType: ContractAdapter.ViewToContractAdapter
