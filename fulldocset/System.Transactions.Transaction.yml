### YamlMime:ManagedReference
items:
- uid: System.Transactions.Transaction
  id: Transaction
  children:
  - System.Transactions.Transaction.Clone
  - System.Transactions.Transaction.Current
  - System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  - System.Transactions.Transaction.Dispose
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.Equals(System.Object)
  - System.Transactions.Transaction.GetHashCode
  - System.Transactions.Transaction.GetPromotedToken
  - System.Transactions.Transaction.IsolationLevel
  - System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.PromoterType
  - System.Transactions.Transaction.Rollback
  - System.Transactions.Transaction.Rollback(System.Exception)
  - System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Transactions.Transaction.TransactionCompleted
  - System.Transactions.Transaction.TransactionInformation
  langs:
  - csharp
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
  type: Class
  summary: "Representa uma transação."
  remarks: "O <xref:System.Transactions>namespace fornece ambos um modelo de programação explícito com base na classe de transação, bem como um modelo de programação implícito usando a <xref:System.Transactions.TransactionScope>classe, no qual as transações são automaticamente gerenciadas pela infraestrutura.</xref:System.Transactions.TransactionScope> </xref:System.Transactions> É altamente recomendável que você use o modelo implícito mais fácil para desenvolvimento. Para começar, consulte o [implementando um implícita transação usando o escopo da transação](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) tópico. Para obter mais informações sobre como escrever um aplicativo transacional, consulte [escrevendo um aplicativo transacional](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8).       A classe de transação contém métodos usados por desenvolvedores implementar gerenciadores de recursos para a inscrição. Ele também fornece funcionalidades para clonagem de uma transação e controlando o contexto da transação atual. Você pode obter a transação atual, se um for definido, usando o estático <xref:System.Transactions.Transaction.Current%2A>propriedade.</xref:System.Transactions.Transaction.Current%2A>"
  syntax:
    content: 'public class Transaction : IDisposable, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Clone
  id: Clone
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Clone()
  nameWithType: Transaction.Clone()
  fullName: System.Transactions.Transaction.Clone()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Cria um clone da transação."
  remarks: "Clones são criados para passar as transações.  Por exemplo, não convém passar um <xref:System.Transactions.CommittableTransaction>para outros aplicativos, porque você não desejar que outros para confirmar a transação.</xref:System.Transactions.CommittableTransaction>  Se você tentar realizar marshaling ou serializar uma transação, um clone é criado automaticamente para você."
  syntax:
    content: public System.Transactions.Transaction Clone ();
    parameters: []
    return:
      type: System.Transactions.Transaction
      description: "Um <xref href=&quot;System.Transactions.Transaction&quot;> </xref> que é uma cópia do objeto de transação atual."
  overload: System.Transactions.Transaction.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Current
  id: Current
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Current
  nameWithType: Transaction.Current
  fullName: System.Transactions.Transaction.Current
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Obtém ou define a transação de ambiente."
  remarks: "Para obter mais informações sobre transações de ambiente, consulte a seção &quot;Gerenciamento de fluxo de transações usando TransactionScopeOption&quot; o [implementando uma transação implícita, usando o escopo da transação](~/add/includes/ajax-current-ext-md.md) tópico.       Embora você possa definir a transação de ambiente usando essa propriedade, você deve usar o <xref:System.Transactions.TransactionScope>objeto para manipular a transação de ambiente sempre que possível.</xref:System.Transactions.TransactionScope>       Esta propriedade é thread estático. Se você alterar a transação de ambiente usando esta propriedade dentro de um <xref:System.Transactions.TransactionScope>um <xref:System.InvalidOperationException>é lançada quando <xref:System.Transactions.TransactionScope.Dispose%2A>é chamado, e o valor de transação de ambiente anterior é restaurado.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.InvalidOperationException> </xref:System.Transactions.TransactionScope>"
  syntax:
    content: public static System.Transactions.Transaction Current { get; set; }
    return:
      type: System.Transactions.Transaction
      description: "Um <xref href=&quot;System.Transactions.Transaction&quot;> </xref> que descreve a transação atual."
  overload: System.Transactions.Transaction.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  id: DependentClone(System.Transactions.DependentCloneOption)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: DependentClone(DependentCloneOption)
  nameWithType: Transaction.DependentClone(DependentCloneOption)
  fullName: System.Transactions.Transaction.DependentClone(DependentCloneOption)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Cria um clone dependente da transação."
  remarks: "Uma transação dependente é uma transação cujo resultado depende do resultado da transação do qual foi clonado.       O `cloneoption` parâmetro controla o tipo de transação dependente para criar. Se uma transação dependente for criada, <xref:System.Transactions.DependentCloneOption>ele bloqueia o processo de confirmação da transação até que a transação de tempo limite, ou <xref:System.Transactions.DependentTransaction.Complete%2A>é chamado em <xref:System.Transactions.DependentTransaction>.</xref:System.Transactions.DependentTransaction> </xref:System.Transactions.DependentTransaction.Complete%2A> </xref:System.Transactions.DependentCloneOption> Se ela for criada com <xref:System.Transactions.DependentCloneOption>, ele automaticamente anula a transação se <xref:System.Transactions.CommittableTransaction.Commit%2A>for chamado antes <xref:System.Transactions.DependentTransaction.Complete%2A>é chamado em <xref:System.Transactions.DependentTransaction>.</xref:System.Transactions.DependentTransaction> </xref:System.Transactions.DependentTransaction.Complete%2A> </xref:System.Transactions.CommittableTransaction.Commit%2A> </xref:System.Transactions.DependentCloneOption>"
  example:
  - "The following example shows you how to create a dependent transaction.  \n  \n [!code-vb[Tx_DependentTx#1](~/add/codesnippet/visualbasic/a081f0f4-5473-43fc-b7fe-_1.vb)]\n [!code-cs[Tx_DependentTx#1](~/add/codesnippet/csharp/a081f0f4-5473-43fc-b7fe-_1.cs)]"
  syntax:
    content: public System.Transactions.DependentTransaction DependentClone (System.Transactions.DependentCloneOption cloneOption);
    parameters:
    - id: cloneOption
      type: System.Transactions.DependentCloneOption
      description: "Um <xref href=&quot;System.Transactions.DependentCloneOption&quot;> </xref> que controla o tipo de transação dependente para criar."
    return:
      type: System.Transactions.DependentTransaction
      description: "Um <xref href=&quot;System.Transactions.DependentTransaction&quot;> </xref> que representa o clone dependente."
  overload: System.Transactions.Transaction.DependentClone*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Dispose
  id: Dispose
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Dispose()
  nameWithType: Transaction.Dispose()
  fullName: System.Transactions.Transaction.Dispose()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Libera os recursos que são mantidos pelo objeto."
  remarks: "Se você alterar a transação de ambiente definindo <xref:System.Transactions.Transaction.Current%2A>dentro de uma <xref:System.Transactions.TransactionScope>uma <xref:System.InvalidOperationException>é lançada quando <xref:System.Transactions.TransactionScope.Dispose%2A>é chamado, e o valor de transação de ambiente anterior é restaurado.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.InvalidOperationException> </xref:System.Transactions.TransactionScope> </xref:System.Transactions.Transaction.Current%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Transactions.Transaction.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  id: EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inscreve um Gerenciador de recursos durável que dá suporte à confirmação de duas fases para participar em uma transação."
  remarks: "Gerenciadores de recursos com uma distribuição durável devem ser capazes de executar a recuperação se enfrentarem uma falha. Para obter mais informações sobre a recuperação, consulte [executar recuperação](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691). Para obter mais informações sobre recursos voláteis e duráveis, bem como inscrever um recurso, consulte [implementar um Gerenciador de recursos](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).  Para obter mais informações sobre como um Gerenciador de recursos responde para notificação de confirmação e preparar a confirmação de confirmação de duas fases, consulte [confirmar A transação em Single-Phase e multifase](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d).       Gerenciadores de recursos inscritos para participação em uma transação por este método recebem duas notificações de confirmação de fase que correspondem aos métodos definidos no <xref:System.Transactions.IEnlistmentNotification>interface.</xref:System.Transactions.IEnlistmentNotification>"
  syntax:
    content: public System.Transactions.Enlistment EnlistDurable (Guid resourceManagerIdentifier, System.Transactions.IEnlistmentNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "Um identificador exclusivo para um Gerenciador de recursos, que deve persistir em falha do Gerenciador de recursos ou reinicialização."
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: "Um objeto que implementa o <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> interface para receber notificações de confirmação de fase dois."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Se quiser que o Gerenciador de recursos realizar o trabalho adicional durante a fase de preparação."
    return:
      type: System.Transactions.Enlistment
      description: "Um <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> objeto que descreve a inscrição."
  overload: System.Transactions.Transaction.EnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inscreve um Gerenciador de recursos durável que dá suporte a otimização de confirmação de fase única para participar em uma transação."
  remarks: "Gerenciadores de recursos com uma distribuição durável devem ser capazes de executar a recuperação se enfrentarem uma falha. Para obter mais informações sobre a recuperação, consulte [executar recuperação](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691). Para obter mais informações sobre recursos voláteis e duráveis, bem como inscrever um recurso, consulte [implementar um Gerenciador de recursos](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).       Observe que mesmo quando a implementação do Gerenciador de recursos se inscrever com esse método, não há garantia de que ele recebe uma confirmação de fase única. O Gerenciador de transações ainda pode enviar duas notificações de confirmação de fase em vez disso. Para obter mais informações sobre a otimização de confirmação de fase única, consulte [otimização usando única fase de confirmação e notificação de fase única passível de promoção](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)."
  syntax:
    content: public System.Transactions.Enlistment EnlistDurable (Guid resourceManagerIdentifier, System.Transactions.ISinglePhaseNotification singlePhaseNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "Um identificador exclusivo para um Gerenciador de recursos, que deve persistir em falha do Gerenciador de recursos ou reinicialização."
    - id: singlePhaseNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Um objeto que implementa o <xref href=&quot;System.Transactions.ISinglePhaseNotification&quot;> </xref> interface que deve ser capaz de receber a confirmação de fase única e duas notificações de confirmação de fase."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Se quiser que o Gerenciador de recursos realizar o trabalho adicional durante a fase de preparação."
    return:
      type: System.Transactions.Enlistment
      description: "Um <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> objeto que descreve a inscrição."
  overload: System.Transactions.Transaction.EnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  id: EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inscreve um Gerenciador de recursos que tem uma transação interna usando uma inscrição de fase única passível de promoção (PSPE)."
  remarks: "Inscrições em uma transação são voláteis; ou seja, eles não sobrevivem a falha do participante. Além disso, esse método só sugere o Gerenciador de transações para escalonar o controle, mas o escalonamento de bloqueios em si não é garantido. Se o escalonamento de bloqueios falhar, o usuário não será notificado e a transação será revertida.       O parâmetro `promotableSinglePhaseNotification` é usado para se comunicar com o Gerenciador de transações, o resultado da tentativa de confirmar a transação interna do Gerenciador de recursos.  Se dados inconsistentes for relatados, o Gerenciador de transações gera uma exceção. Se um <xref:System.Transactions.TransactionStatus>resultado é relatado, o Gerenciador de transações procura a notificação de resultado em seu próprio inscrição interna e ignora a resposta relatada.</xref:System.Transactions.TransactionStatus>       Para obter mais informações sobre inscrições e elevação de uma transação, consulte [escalonamento de bloqueios de gerenciamento de transação](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7). Para obter mais informações sobre PSPE, consulte [otimização usando única fase de confirmação e notificação de fase única passível de promoção](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb).       **Observação** esse método usa <xref:System.Security.Permissions.SecurityAction>impedir que ele está sendo chamado de código não confiável; no entanto, apenas o chamador imediato é necessário ter o `FullTrust` conjunto de permissões.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public bool EnlistPromotableSinglePhase (System.Transactions.IPromotableSinglePhaseNotification promotableSinglePhaseNotification);
    parameters:
    - id: promotableSinglePhaseNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Um <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> interface implementada pelo participante."
    return:
      type: System.Boolean
      description: "Um <xref href=&quot;System.Transactions.SinglePhaseEnlistment&quot;> </xref> implementação que descreve a inscrição de interface."
  overload: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  id: EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inscreve um Gerenciador de recursos que tem uma transação interna usando uma inscrição de fase única passível de promoção (PSPE)."
  remarks: "Se o valor especificado para o `promoterType` parâmetro é `TransactionInterop.PromoterTypeDtc`, a transação **deve** promovida pelo MSDTC e o `byte[]` retornado do `IPromotableSinglePhaseNotification.Promote` método **deve** ser um token de propagação de transações do MSDTC.       Se o valor especificado para o `promoterType` parâmetro é **não**`TransactionInterop.PromoterTypeDTC`, a transação não será promovida pelo MSDTC, mas a implementação do chamador do `IPromotableSinglePhaseNotification`. Se essa chamada for bem-sucedida, há um conjunto de operações subsequentes na transação que retornará um `TransactionPromotionException`. Essas operações são:- `Transaction.EnlistDurable`       -    `TransactionInterop.GetDtcTransaction`       -    `TransactionInterop.GetExportCookie`       -    `TransctionInterop.GetTransmitterPropagationToken` -serialização de um objeto de transação"
  syntax:
    content: public bool EnlistPromotableSinglePhase (System.Transactions.IPromotableSinglePhaseNotification promotableSinglePhaseNotification, Guid promoterType);
    parameters:
    - id: promotableSinglePhaseNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Um <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> interface implementada pelo participante."
    - id: promoterType
      type: System.Guid
      description: "O tipo de processador de transação distribuída."
    return:
      type: System.Boolean
      description: "Um <xref href=&quot;System.Transactions.SinglePhaseEnlistment&quot;> </xref> implementação que descreve a inscrição de interface."
  overload: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  id: EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inscreve um Gerenciador de recursos voláteis que dá suporte à confirmação de duas fases para participar em uma transação."
  remarks: "Gerenciadores de recursos voláteis não poderá recuperar de falha para concluir uma transação na qual eles foram participantes. Para obter uma inscrição durável em uma transação, use o <xref:System.Transactions.Transaction.EnlistDurable%2A>método.</xref:System.Transactions.Transaction.EnlistDurable%2A>       Gerenciadores de recursos inscritos para participação em uma transação por este método recebem duas notificações de confirmação de fase que correspondem aos métodos definidos no <xref:System.Transactions.IEnlistmentNotification>interface.</xref:System.Transactions.IEnlistmentNotification>"
  example:
  - "The following example shows an implementation of <xref:System.Transactions.IEnlistmentNotification> interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.  \n  \n [!code-cs[Tx_Enlist#1](~/add/codesnippet/csharp/1d69bab4-4268-46d9-8f3f-_1.cs)]\n [!code-vb[Tx_Enlist#1](~/add/codesnippet/visualbasic/1d69bab4-4268-46d9-8f3f-_1.vb)]"
  syntax:
    content: public System.Transactions.Enlistment EnlistVolatile (System.Transactions.IEnlistmentNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: "Um objeto que implementa o <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> interface para receber notificações de confirmação de duas fases."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Se quiser que o Gerenciador de recursos realizar o trabalho adicional durante a fase de preparação."
    return:
      type: System.Transactions.Enlistment
      description: "Um <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> objeto que descreve a inscrição."
  overload: System.Transactions.Transaction.EnlistVolatile*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inscreve um Gerenciador de recursos voláteis que dá suporte a otimização de confirmação de fase única para participar em uma transação."
  remarks: "Gerenciadores de recursos voláteis não poderá recuperar de falha para concluir uma transação na qual eles foram participantes. Para obter uma inscrição durável em uma transação, use o <xref:System.Transactions.Transaction.EnlistDurable%2A>método.</xref:System.Transactions.Transaction.EnlistDurable%2A> Para obter mais informações sobre recursos voláteis e duráveis, bem como inscrever um recurso, consulte [implementar um Gerenciador de recursos](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e). Para obter mais informações sobre como um Gerenciador de recursos responde para notificação de confirmação e preparar a confirmação, consulte [confirmar A transação em Single-Phase e multifase](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d).       Observe que mesmo quando a implementação do Gerenciador de recursos se inscrever com esse método, não há garantia de que ele recebe uma confirmação de fase única. O Gerenciador de transações ainda pode enviar duas notificações de confirmação de fase em vez disso. Para obter mais informações sobre a otimização de confirmação de fase única, consulte [otimização usando única fase de confirmação e notificação de fase única passível de promoção](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)."
  syntax:
    content: public System.Transactions.Enlistment EnlistVolatile (System.Transactions.ISinglePhaseNotification singlePhaseNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: singlePhaseNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Um objeto que implementa o <xref href=&quot;System.Transactions.ISinglePhaseNotification&quot;> </xref> interface que deve ser capaz de receber a confirmação de fase única e duas notificações de confirmação de fase."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Se quiser que o Gerenciador de recursos realizar o trabalho adicional durante a fase de preparação."
    return:
      type: System.Transactions.Enlistment
      description: "Um <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> objeto que descreve a inscrição."
  overload: System.Transactions.Transaction.EnlistVolatile*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Transaction.Equals(Object)
  fullName: System.Transactions.Transaction.Equals(Object)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Determina se a transação e o objeto especificado são iguais."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto a ser comparado com esta instância."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> obj </code> e essa transação são idênticas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Transactions.Transaction.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.GetHashCode
  id: GetHashCode
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Transaction.GetHashCode()
  fullName: System.Transactions.Transaction.GetHashCode()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Retorna o código hash para essa instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código de hash de inteiro de 32 bits."
  overload: System.Transactions.Transaction.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.GetPromotedToken
  id: GetPromotedToken
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: GetPromotedToken()
  nameWithType: Transaction.GetPromotedToken()
  fullName: System.Transactions.Transaction.GetPromotedToken()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Obtém o `byte[]` retornado pelo `Promote` método quando a transação é promovida."
  remarks: "Esse método tem o efeito colateral de fazendo com que a promoção da transação se ele já não é promovido.       O formato do retornado `byte[]` é definido pelo valor de `Transation.PromoterType` propriedade. Se o valor da `Transaction.PromoterType` é de propriedade `TransactionInterop.PromoterTypeDtc` ou `Guid.Empty`, em seguida, o `byte[]` retornado por esse método é um token de propagação do transmissor MSDTC. Qualquer outro valor para o `Transaction.PromoterType` propriedade especifica um formato que é definido pelo chamador de `Transaction.EnlistPromotableSinglePhase` que especificado o valor de tipo de propriedade. Para interpretar o promovida token nesse caso, você precisará consultar a documentação para o código que fez o `EnlistPromotableSinglePhase` chamar."
  syntax:
    content: public byte[] GetPromotedToken ();
    parameters: []
    return:
      type: System.Byte[]
      description: "O `byte[]` retornado pelo `Promote` método quando a transação é promovida."
  overload: System.Transactions.Transaction.GetPromotedToken*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.IsolationLevel
  id: IsolationLevel
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
  fullName: System.Transactions.Transaction.IsolationLevel
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Obtém o nível de isolamento da transação."
  remarks: "O nível de isolamento de uma transação determina o nível de acesso que outras transações terão aos dados voláteis antes que a transação é concluída. Para obter mais informações sobre níveis de isolamento, consulte a documentação para o <xref:System.Transactions.IsolationLevel>enumeração.</xref:System.Transactions.IsolationLevel>"
  syntax:
    content: public System.Transactions.IsolationLevel IsolationLevel { get; }
    return:
      type: System.Transactions.IsolationLevel
      description: "Uma da <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref> valores que indica o nível de isolamento da transação."
  overload: System.Transactions.Transaction.IsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  id: op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: op_Equality(Transaction,Transaction)
  nameWithType: Transaction.op_Equality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Equality(Transaction,Transaction)
  type: Operator
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Testa se dois especificados <xref href=&quot;System.Transactions.Transaction&quot;> </xref> instâncias forem equivalentes."
  syntax:
    content: public static bool op_Equality (System.Transactions.Transaction x, System.Transactions.Transaction y);
    parameters:
    - id: x
      type: System.Transactions.Transaction
      description: "O <xref href=&quot;System.Transactions.Transaction&quot;> </xref> instância que está à esquerda do operador de igualdade."
    - id: y
      type: System.Transactions.Transaction
      description: "O <xref href=&quot;System.Transactions.Transaction&quot;> </xref> instância que está à direita do operador de igualdade."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>x</code> and <code>y</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Transactions.Transaction.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  id: op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: op_Inequality(Transaction,Transaction)
  nameWithType: Transaction.op_Inequality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Inequality(Transaction,Transaction)
  type: Operator
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Retorna um valor que indica se dois <xref href=&quot;System.Transactions.Transaction&quot;> </xref> instâncias não são iguais."
  syntax:
    content: public static bool op_Inequality (System.Transactions.Transaction x, System.Transactions.Transaction y);
    parameters:
    - id: x
      type: System.Transactions.Transaction
      description: "O <xref href=&quot;System.Transactions.Transaction&quot;> </xref> instância que está à esquerda do operador de desigualdade."
    - id: y
      type: System.Transactions.Transaction
      description: "O <xref href=&quot;System.Transactions.Transaction&quot;> </xref> instância que está à direita do operador de desigualdade."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>x</code> and <code>y</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Transactions.Transaction.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Com suporte no .NET Framework 4.5.2 e versões posteriores]       Promove e inscreve um Gerenciador de recursos durável que dá suporte à confirmação de duas fases para participar em uma transação."
  syntax:
    content: public System.Transactions.Enlistment PromoteAndEnlistDurable (Guid resourceManagerIdentifier, System.Transactions.IPromotableSinglePhaseNotification promotableNotification, System.Transactions.ISinglePhaseNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "Um identificador exclusivo para um Gerenciador de recursos, que deve persistir em falha do Gerenciador de recursos ou reinicialização."
    - id: promotableNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Um objeto que atua como um representante de confirmação de uma transação distribuída não interno para um Gerenciador de recursos."
    - id: enlistmentNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Um objeto que implementa o <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> interface para receber notificações de confirmação de fase dois."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Se quiser que o Gerenciador de recursos realizar o trabalho adicional durante a fase de preparação."
    return:
      type: System.Transactions.Enlistment
      description: "[Com suporte no .NET Framework 4.5.2 e versões posteriores]       Promove e inscreve um Gerenciador de recursos durável que dá suporte à confirmação de duas fases para participar em uma transação."
  overload: System.Transactions.Transaction.PromoteAndEnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.PromoterType
  id: PromoterType
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: PromoterType
  nameWithType: Transaction.PromoterType
  fullName: System.Transactions.Transaction.PromoterType
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Identifica exclusivamente o formato da `byte[]` retornado pelo método promover quando a transação é promovida."
  remarks: "Se a transação ainda não foi promovida e ainda não tiver uma inscrição de fase única passível de promoção, o valor dessa propriedade será `Guid.Empty`. Se a transação foi ou será promovida para MSDTC, o valor dessa propriedade será `TransactionInterop.PromoterTypeDtc`. Se a transação foi ou será promovida por um promotor MSDTC não, o valor dessa propriedade será o valor especificado para uma chamada anterior para `Transaction.EnlistPromotableSinglePhase`."
  syntax:
    content: public Guid PromoterType { get; }
    return:
      type: System.Guid
      description: "Um guid que identifica exclusivamente o formato da `byte[]` retornado pelo método promover quando a transação é promovida."
  overload: System.Transactions.Transaction.PromoterType*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Rollback
  id: Rollback
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Rollback()
  nameWithType: Transaction.Rollback()
  fullName: System.Transactions.Transaction.Rollback()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Reverte (anulações) a transação."
  remarks: "Qualquer cópia de um objeto de transação pode chamar esse método para iniciar a reversão da transação. Apenas o objeto de transação original, que é um <xref:System.Transactions.CommittableTransaction>de objeto, pode ser usado para iniciar uma tentativa de confirmar a transação.</xref:System.Transactions.CommittableTransaction> Uma exceção é lançada quando este método é chamado depois que o resultado da transação já foi determinado."
  syntax:
    content: public void Rollback ();
    parameters: []
  overload: System.Transactions.Transaction.Rollback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Rollback(System.Exception)
  id: Rollback(System.Exception)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Rollback(Exception)
  nameWithType: Transaction.Rollback(Exception)
  fullName: System.Transactions.Transaction.Rollback(Exception)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Reverte (anulações) a transação."
  syntax:
    content: public void Rollback (Exception e);
    parameters:
    - id: e
      type: System.Exception
      description: "Uma explicação de por que ocorreu uma reversão."
  overload: System.Transactions.Transaction.Rollback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  id: SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Define o identificador de transação distribuída gerado pelo promotor MSDTC não."
  remarks: "Esse método só pode ser chamado com êxito enquanto o `IPromotableSinglePhaseNotification.Promote` método está sendo processado. Se esse método é chamado a qualquer momento, um `TransactionException` é gerada.       O valor especificado do `promotableNotification` parâmetro deve ser o mesmo objeto que foi originalmente especificado para o `Transaction.EnlistPromotableSinglePhase` invocação. Se não for o caso, então um `InvalidOperationException` é gerada."
  syntax:
    content: public void SetDistributedTransactionIdentifier (System.Transactions.IPromotableSinglePhaseNotification promotableNotification, Guid distributedTransactionIdentifier);
    parameters:
    - id: promotableNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Um <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> interface implementada pelo participante."
    - id: distributedTransactionIdentifier
      type: System.Guid
      description: "O identificador para a transação usada pelo Gerenciador de transações distribuídas."
  overload: System.Transactions.Transaction.SetDistributedTransactionIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Transactions.Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Obtém um <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> com os dados necessários para serializar esta transação."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> para popular com dados."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O destino (consulte <xref:System.Runtime.Serialization.StreamingContext>) desta serialização.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.TransactionCompleted
  id: TransactionCompleted
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: TransactionCompleted
  nameWithType: Transaction.TransactionCompleted
  fullName: System.Transactions.Transaction.TransactionCompleted
  type: Event
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Indica que a transação é concluída."
  remarks: "Você pode registrar para esse evento em vez de usar uma inscrição volátil para obter informações de resultado para transações. O parâmetro passado para o <xref:System.Transactions.TransactionCompletedEventHandler>delegado é uma <xref:System.Transactions.Transaction>instância.</xref:System.Transactions.Transaction> </xref:System.Transactions.TransactionCompletedEventHandler> Em seguida, você pode consultar o <xref:System.Transactions.Transaction.TransactionInformation%2A>propriedade da instância específica para obter uma instância de <xref:System.Transactions.TransactionInformation>, cujo <xref:System.Transactions.TransactionInformation.Status%2A>propriedade contém o status de uma transação com o o <xref:System.Transactions.TransactionStatus>ou <xref:System.Transactions.TransactionStatus>valor.</xref:System.Transactions.TransactionStatus> </xref:System.Transactions.TransactionStatus> </xref:System.Transactions.TransactionInformation.Status%2A> </xref:System.Transactions.TransactionInformation> </xref:System.Transactions.Transaction.TransactionInformation%2A>       **Cuidado** inscrever-se esse evento negativamente afeta o desempenho da transação que está anexado ao."
  example:
  - "The following sample shows how an application can obtain the outcome of a transaction by subscribing to the TransactionCompleted event.  \n  \n [!code-cs[Tx_Outcome#1](~/add/codesnippet/csharp/e-system.transactions.tr_1.cs)]\n [!code-vb[Tx_Outcome#1](~/add/codesnippet/visualbasic/e-system.transactions.tr_1.vb)]"
  syntax:
    content: public event System.Transactions.TransactionCompletedEventHandler TransactionCompleted;
    return:
      type: System.Transactions.TransactionCompletedEventHandler
      description: "A ser adicionado."
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Uma tentativa de assinar esse evento em uma transação que foi descartado."
  platform:
  - net462
- uid: System.Transactions.Transaction.TransactionInformation
  id: TransactionInformation
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
  fullName: System.Transactions.Transaction.TransactionInformation
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Recupera informações adicionais sobre uma transação."
  syntax:
    content: public System.Transactions.TransactionInformation TransactionInformation { get; }
    return:
      type: System.Transactions.TransactionInformation
      description: "Um <xref href=&quot;System.Transactions.TransactionInformation&quot;> </xref> que contém informações adicionais sobre a transação."
  overload: System.Transactions.Transaction.TransactionInformation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Transactions.Transaction.Clone
  parent: System.Transactions.Transaction
  isExternal: false
  name: Clone()
  nameWithType: Transaction.Clone()
  fullName: System.Transactions.Transaction.Clone()
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.Transaction.Current
  parent: System.Transactions.Transaction
  isExternal: false
  name: Current
  nameWithType: Transaction.Current
  fullName: System.Transactions.Transaction.Current
- uid: System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  parent: System.Transactions.Transaction
  isExternal: false
  name: DependentClone(DependentCloneOption)
  nameWithType: Transaction.DependentClone(DependentCloneOption)
  fullName: System.Transactions.Transaction.DependentClone(DependentCloneOption)
- uid: System.Transactions.DependentTransaction
  parent: System.Transactions
  isExternal: false
  name: DependentTransaction
  nameWithType: DependentTransaction
  fullName: System.Transactions.DependentTransaction
- uid: System.Transactions.DependentCloneOption
  parent: System.Transactions
  isExternal: false
  name: DependentCloneOption
  nameWithType: DependentCloneOption
  fullName: System.Transactions.DependentCloneOption
- uid: System.Transactions.Transaction.Dispose
  parent: System.Transactions.Transaction
  isExternal: false
  name: Dispose()
  nameWithType: Transaction.Dispose()
  fullName: System.Transactions.Transaction.Dispose()
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.IEnlistmentNotification
  parent: System.Transactions
  isExternal: false
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
- uid: System.Transactions.EnlistmentOptions
  parent: System.Transactions
  isExternal: false
  name: EnlistmentOptions
  nameWithType: EnlistmentOptions
  fullName: System.Transactions.EnlistmentOptions
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.ISinglePhaseNotification
  parent: System.Transactions
  isExternal: false
  name: ISinglePhaseNotification
  nameWithType: ISinglePhaseNotification
  fullName: System.Transactions.ISinglePhaseNotification
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Transactions.IPromotableSinglePhaseNotification
  parent: System.Transactions
  isExternal: false
  name: IPromotableSinglePhaseNotification
  nameWithType: IPromotableSinglePhaseNotification
  fullName: System.Transactions.IPromotableSinglePhaseNotification
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.Equals(System.Object)
  parent: System.Transactions.Transaction
  isExternal: false
  name: Equals(Object)
  nameWithType: Transaction.Equals(Object)
  fullName: System.Transactions.Transaction.Equals(Object)
- uid: System.Transactions.Transaction.GetHashCode
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetHashCode()
  nameWithType: Transaction.GetHashCode()
  fullName: System.Transactions.Transaction.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Transactions.Transaction.GetPromotedToken
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetPromotedToken()
  nameWithType: Transaction.GetPromotedToken()
  fullName: System.Transactions.Transaction.GetPromotedToken()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.Transaction.IsolationLevel
  parent: System.Transactions.Transaction
  isExternal: false
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
  fullName: System.Transactions.Transaction.IsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Equality(Transaction,Transaction)
  nameWithType: Transaction.op_Equality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Equality(Transaction,Transaction)
- uid: System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Inequality(Transaction,Transaction)
  nameWithType: Transaction.op_Inequality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Inequality(Transaction,Transaction)
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.PromoterType
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoterType
  nameWithType: Transaction.PromoterType
  fullName: System.Transactions.Transaction.PromoterType
- uid: System.Transactions.Transaction.Rollback
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback()
  nameWithType: Transaction.Rollback()
  fullName: System.Transactions.Transaction.Rollback()
- uid: System.Transactions.Transaction.Rollback(System.Exception)
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback(Exception)
  nameWithType: Transaction.Rollback(Exception)
  fullName: System.Transactions.Transaction.Rollback(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  isExternal: false
  name: SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Transactions.Transaction
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Transactions.Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Transactions.Transaction.TransactionCompleted
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionCompleted
  nameWithType: Transaction.TransactionCompleted
  fullName: System.Transactions.Transaction.TransactionCompleted
- uid: System.Transactions.TransactionCompletedEventHandler
  parent: System.Transactions
  isExternal: false
  name: TransactionCompletedEventHandler
  nameWithType: TransactionCompletedEventHandler
  fullName: System.Transactions.TransactionCompletedEventHandler
- uid: System.Transactions.Transaction.TransactionInformation
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
  fullName: System.Transactions.Transaction.TransactionInformation
- uid: System.Transactions.TransactionInformation
  parent: System.Transactions
  isExternal: false
  name: TransactionInformation
  nameWithType: TransactionInformation
  fullName: System.Transactions.TransactionInformation
- uid: System.Transactions.Transaction.Clone*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Clone
  nameWithType: Transaction.Clone
- uid: System.Transactions.Transaction.Current*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Current
  nameWithType: Transaction.Current
- uid: System.Transactions.Transaction.DependentClone*
  parent: System.Transactions.Transaction
  isExternal: false
  name: DependentClone
  nameWithType: Transaction.DependentClone
- uid: System.Transactions.Transaction.Dispose*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Dispose
  nameWithType: Transaction.Dispose
- uid: System.Transactions.Transaction.EnlistDurable*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable
  nameWithType: Transaction.EnlistDurable
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase
  nameWithType: Transaction.EnlistPromotableSinglePhase
- uid: System.Transactions.Transaction.EnlistVolatile*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile
  nameWithType: Transaction.EnlistVolatile
- uid: System.Transactions.Transaction.Equals*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Equals
  nameWithType: Transaction.Equals
- uid: System.Transactions.Transaction.GetHashCode*
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetHashCode
  nameWithType: Transaction.GetHashCode
- uid: System.Transactions.Transaction.GetPromotedToken*
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetPromotedToken
  nameWithType: Transaction.GetPromotedToken
- uid: System.Transactions.Transaction.IsolationLevel*
  parent: System.Transactions.Transaction
  isExternal: false
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
- uid: System.Transactions.Transaction.op_Equality*
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Equality
  nameWithType: Transaction.op_Equality
- uid: System.Transactions.Transaction.op_Inequality*
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Inequality
  nameWithType: Transaction.op_Inequality
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable*
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoteAndEnlistDurable
  nameWithType: Transaction.PromoteAndEnlistDurable
- uid: System.Transactions.Transaction.PromoterType*
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoterType
  nameWithType: Transaction.PromoterType
- uid: System.Transactions.Transaction.Rollback*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback
  nameWithType: Transaction.Rollback
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier*
  parent: System.Transactions.Transaction
  isExternal: false
  name: SetDistributedTransactionIdentifier
  nameWithType: Transaction.SetDistributedTransactionIdentifier
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Transactions.Transaction
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Transactions.Transaction.TransactionInformation*
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
