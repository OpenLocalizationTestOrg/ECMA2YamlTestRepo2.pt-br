### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileInfoCollection
  id: ProfileInfoCollection
  children:
  - System.Web.Profile.ProfileInfoCollection.#ctor
  - System.Web.Profile.ProfileInfoCollection.Add(System.Web.Profile.ProfileInfo)
  - System.Web.Profile.ProfileInfoCollection.Clear
  - System.Web.Profile.ProfileInfoCollection.CopyTo(System.Array,System.Int32)
  - System.Web.Profile.ProfileInfoCollection.CopyTo(System.Web.Profile.ProfileInfo[],System.Int32)
  - System.Web.Profile.ProfileInfoCollection.Count
  - System.Web.Profile.ProfileInfoCollection.GetEnumerator
  - System.Web.Profile.ProfileInfoCollection.IsSynchronized
  - System.Web.Profile.ProfileInfoCollection.Item(System.String)
  - System.Web.Profile.ProfileInfoCollection.Remove(System.String)
  - System.Web.Profile.ProfileInfoCollection.SetReadOnly
  - System.Web.Profile.ProfileInfoCollection.SyncRoot
  langs:
  - csharp
  name: ProfileInfoCollection
  nameWithType: ProfileInfoCollection
  fullName: System.Web.Profile.ProfileInfoCollection
  type: Class
  summary: "Uma coleção de <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> objetos."
  remarks: "Contém um objeto ProfileInfoCollection <xref:System.Web.Profile.ProfileInfo>objetos que representam os perfis de usuário de uma fonte de dados.</xref:System.Web.Profile.ProfileInfo> Um ProfileInfoCollection é retornado a partir de <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>e os <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>métodos de <xref:System.Web.Profile.ProfileProvider>.</xref:System.Web.Profile.ProfileProvider> </xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>       Um ProfileInfoCollection pode ser fornecido para o <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>método para excluir informações de perfil e as propriedades da fonte de dados.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>"
  example:
  - "The following code example allows a user to search for profiles using the <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> and <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> methods. The user can pass the ProfileInfoCollection returned by the `find` methods to the <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> method to delete the associated profiles from the data source.  \n  \n [!code-vb[System.Web.Profile.SqlProfileProvider#4](~/add/codesnippet/visualbasic/t-system.web.profile.pro_3_1.aspx)]\n [!code-cs[System.Web.Profile.SqlProfileProvider#4](~/add/codesnippet/csharp/t-system.web.profile.pro_3_1.aspx)]"
  syntax:
    content: 'public sealed class ProfileInfoCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.#ctor
  id: '#ctor'
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: ProfileInfoCollection()
  nameWithType: ProfileInfoCollection.ProfileInfoCollection()
  fullName: System.Web.Profile.ProfileInfoCollection.ProfileInfoCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Cria um novo e vazio <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>."
  remarks: "Um <xref:System.Web.Profile.ProfileInfoCollection>é construído por implementadores de provedor de perfil e retornado do <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>e <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>métodos para a <xref:System.Web.Profile.ProfileProvider>classe abstrata.</xref:System.Web.Profile.ProfileProvider> </xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileInfoCollection>"
  example:
  - For an example of a <xref:System.Web.Profile.ProfileProvider> implementation that creates a <xref:System.Web.Profile.ProfileInfoCollection> for user profiles in a data store, see [Implementing a Profile Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public ProfileInfoCollection ();
    parameters: []
  overload: System.Web.Profile.ProfileInfoCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.Add(System.Web.Profile.ProfileInfo)
  id: Add(System.Web.Profile.ProfileInfo)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Add(ProfileInfo)
  nameWithType: ProfileInfoCollection.Add(ProfileInfo)
  fullName: System.Web.Profile.ProfileInfoCollection.Add(ProfileInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Adiciona o <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> objeto à coleção."
  remarks: "O método Add é comumente usado pelo implementadores de provedor de perfil para preencher um <xref:System.Web.Profile.ProfileInfoCollection>para retornar a partir de <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>, ou o <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>método de <xref:System.Web.Profile.ProfileProvider>classe abstrata.</xref:System.Web.Profile.ProfileProvider> </xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileInfoCollection>"
  example:
  - For an example of a <xref:System.Web.Profile.ProfileProvider> implementation that creates a <xref:System.Web.Profile.ProfileInfoCollection> for user profiles in a data store, see [Implementing a Profile Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public void Add (System.Web.Profile.ProfileInfo profileInfo);
    parameters:
    - id: profileInfo
      type: System.Web.Profile.ProfileInfo
      description: "Um <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> objeto a ser adicionado à coleção."
  overload: System.Web.Profile.ProfileInfoCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> objeto com o mesmo <xref:System.Web.Profile.ProfileInfo.UserName*>valor como <code> profileInfo </code> já existe na coleção.</xref:System.Web.Profile.ProfileInfo.UserName*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>profileInfo</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Web.Profile.ProfileInfo.UserName*> property of <code>profileInfo</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.Clear
  id: Clear
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ProfileInfoCollection.Clear()
  fullName: System.Web.Profile.ProfileInfoCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Remove todos os <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> objetos da coleção."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.Profile.ProfileInfoCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ProfileInfoCollection.CopyTo(Array,Int32)
  fullName: System.Web.Profile.ProfileInfoCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Copia o <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> em uma matriz unidimensional."
  remarks: "Este método usa <xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName>para copiar <xref:System.Web.Profile.ProfileInfo>objetos para o <xref:System.Array>.</xref:System.Array> especificado</xref:System.Web.Profile.ProfileInfo> </xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Um unidimensional <xref:System.Array>que é o destino dos elementos copiados a partir de <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>.</xref:System.Array> O <xref:System.Array>devem ter a indexação com base em zero.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O índice baseado em zero na matriz na qual a cópia é iniciada."
  overload: System.Web.Profile.ProfileInfoCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo(System.Web.Profile.ProfileInfo[],System.Int32)
  id: CopyTo(System.Web.Profile.ProfileInfo[],System.Int32)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: CopyTo(ProfileInfo[],Int32)
  nameWithType: ProfileInfoCollection.CopyTo(ProfileInfo[],Int32)
  fullName: System.Web.Profile.ProfileInfoCollection.CopyTo(ProfileInfo[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Copia o <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> em uma matriz unidimensional de tipo <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref>."
  remarks: "Esse método usa <xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName>para copiar <xref:System.Web.Profile.ProfileInfo>objetos na matriz especificada.</xref:System.Web.Profile.ProfileInfo> </xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (System.Web.Profile.ProfileInfo[] array, int index);
    parameters:
    - id: array
      type: System.Web.Profile.ProfileInfo[]
      description: "Uma matriz unidimensional de tipo <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> que é o destino dos elementos copiados a partir de <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>. A matriz deve ter indexação com base em zero."
    - id: index
      type: System.Int32
      description: "O índice de base zero no `array` no qual a cópia começa."
  overload: System.Web.Profile.ProfileInfoCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.Count
  id: Count
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Count
  nameWithType: ProfileInfoCollection.Count
  fullName: System.Web.Profile.ProfileInfoCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém o número de <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> objetos na coleção."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> objetos na coleção."
  overload: System.Web.Profile.ProfileInfoCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ProfileInfoCollection.GetEnumerator()
  fullName: System.Web.Profile.ProfileInfoCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém um enumerador que pode iterar por meio de <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>."
  remarks: "Enumeradores permitem apenas ler os dados na coleção. Enumeradores não podem ser usados para modificar a coleção subjacente. Para obter mais informações, consulte <xref:System.Collections.IEnumerator>.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>para todo o <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Web.Profile.ProfileInfoCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ProfileInfoCollection.IsSynchronized
  fullName: System.Web.Profile.ProfileInfoCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém um valor que indica se a coleção de informações de perfil é thread safe."
  remarks: "Normalmente, o código do aplicativo não usa essa propriedade."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Sempre <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, porque não há suporte para coleções de informações de perfil de thread-safe."
  overload: System.Web.Profile.ProfileInfoCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ProfileInfoCollection.Item(String)
  fullName: System.Web.Profile.ProfileInfoCollection.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém o <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> objeto na coleção, referenciado pelo <xref:System.Web.Profile.ProfileInfo.UserName*>.</xref:System.Web.Profile.ProfileInfo.UserName*> especificado"
  syntax:
    content: public System.Web.Profile.ProfileInfo this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.Web.Profile.ProfileInfo.UserName*>do <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> objeto a ser recuperado da coleção.</xref:System.Web.Profile.ProfileInfo.UserName*>"
    return:
      type: System.Web.Profile.ProfileInfo
      description: "Um <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> objeto para o nome de usuário especificado. Se o nome não foi encontrado na coleção, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é retornado."
  overload: System.Web.Profile.ProfileInfoCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ProfileInfoCollection.Remove(String)
  fullName: System.Web.Profile.ProfileInfoCollection.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Remove o <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> objeto com o nome de usuário especificado da coleção."
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.Web.Profile.ProfileInfo.UserName*>do <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> objeto a ser removido da coleção.</xref:System.Web.Profile.ProfileInfo.UserName*>"
  overload: System.Web.Profile.ProfileInfoCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.SetReadOnly
  id: SetReadOnly
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: ProfileInfoCollection.SetReadOnly()
  fullName: System.Web.Profile.ProfileInfoCollection.SetReadOnly()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Faz com que o conteúdo do <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> somente leitura."
  remarks: "As marcas de método SetReadOnly o <xref:System.Web.Profile.ProfileInfoCollection>como somente leitura para que <xref:System.Web.Profile.ProfileInfo>objetos não podem ser adicionados ou removidos da coleção.</xref:System.Web.Profile.ProfileInfo> </xref:System.Web.Profile.ProfileInfoCollection> Depois de chamar o método SetReadOnly, você não pode alterar o <xref:System.Web.Profile.ProfileInfoCollection>para leitura/gravação.</xref:System.Web.Profile.ProfileInfoCollection>"
  syntax:
    content: public void SetReadOnly ();
    parameters: []
  overload: System.Web.Profile.ProfileInfoCollection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ProfileInfoCollection.SyncRoot
  fullName: System.Web.Profile.ProfileInfoCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém a raiz de sincronização."
  remarks: "Normalmente, o código do aplicativo não usa essa propriedade."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Sempre <xref uid=&quot;langword_csharp_this&quot; name=&quot;this&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Me&quot; name=&quot;Me&quot; href=&quot;&quot;> </xref> no Visual Basic), porque a sincronização de <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> não há suporte para objetos."
  overload: System.Web.Profile.ProfileInfoCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Profile.ProfileInfoCollection.#ctor
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: ProfileInfoCollection()
  nameWithType: ProfileInfoCollection.ProfileInfoCollection()
  fullName: System.Web.Profile.ProfileInfoCollection.ProfileInfoCollection()
- uid: System.Web.Profile.ProfileInfoCollection.Add(System.Web.Profile.ProfileInfo)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Add(ProfileInfo)
  nameWithType: ProfileInfoCollection.Add(ProfileInfo)
  fullName: System.Web.Profile.ProfileInfoCollection.Add(ProfileInfo)
- uid: System.Web.Profile.ProfileInfo
  parent: System.Web.Profile
  isExternal: false
  name: ProfileInfo
  nameWithType: ProfileInfo
  fullName: System.Web.Profile.ProfileInfo
- uid: System.Web.Profile.ProfileInfoCollection.Clear
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Clear()
  nameWithType: ProfileInfoCollection.Clear()
  fullName: System.Web.Profile.ProfileInfoCollection.Clear()
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ProfileInfoCollection.CopyTo(Array,Int32)
  fullName: System.Web.Profile.ProfileInfoCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo(System.Web.Profile.ProfileInfo[],System.Int32)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: CopyTo(ProfileInfo[],Int32)
  nameWithType: ProfileInfoCollection.CopyTo(ProfileInfo[],Int32)
  fullName: System.Web.Profile.ProfileInfoCollection.CopyTo(ProfileInfo[],Int32)
- uid: System.Web.Profile.ProfileInfo[]
  parent: System.Web.Profile
  isExternal: false
  name: ProfileInfo
  nameWithType: ProfileInfo
  fullName: System.Web.Profile.ProfileInfo[]
  spec.csharp:
  - uid: System.Web.Profile.ProfileInfo
    name: ProfileInfo
    nameWithType: ProfileInfo
    fullName: ProfileInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Profile.ProfileInfoCollection.Count
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Count
  nameWithType: ProfileInfoCollection.Count
  fullName: System.Web.Profile.ProfileInfoCollection.Count
- uid: System.Web.Profile.ProfileInfoCollection.GetEnumerator
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ProfileInfoCollection.GetEnumerator()
  fullName: System.Web.Profile.ProfileInfoCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.Profile.ProfileInfoCollection.IsSynchronized
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ProfileInfoCollection.IsSynchronized
  fullName: System.Web.Profile.ProfileInfoCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Profile.ProfileInfoCollection.Item(System.String)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Item(String)
  nameWithType: ProfileInfoCollection.Item(String)
  fullName: System.Web.Profile.ProfileInfoCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileInfoCollection.Remove(System.String)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Remove(String)
  nameWithType: ProfileInfoCollection.Remove(String)
  fullName: System.Web.Profile.ProfileInfoCollection.Remove(String)
- uid: System.Web.Profile.ProfileInfoCollection.SetReadOnly
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: SetReadOnly()
  nameWithType: ProfileInfoCollection.SetReadOnly()
  fullName: System.Web.Profile.ProfileInfoCollection.SetReadOnly()
- uid: System.Web.Profile.ProfileInfoCollection.SyncRoot
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ProfileInfoCollection.SyncRoot
  fullName: System.Web.Profile.ProfileInfoCollection.SyncRoot
- uid: System.Web.Profile.ProfileInfoCollection.#ctor*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: ProfileInfoCollection
  nameWithType: ProfileInfoCollection.ProfileInfoCollection
- uid: System.Web.Profile.ProfileInfoCollection.Add*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Add
  nameWithType: ProfileInfoCollection.Add
- uid: System.Web.Profile.ProfileInfoCollection.Clear*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Clear
  nameWithType: ProfileInfoCollection.Clear
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: CopyTo
  nameWithType: ProfileInfoCollection.CopyTo
- uid: System.Web.Profile.ProfileInfoCollection.Count*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Count
  nameWithType: ProfileInfoCollection.Count
- uid: System.Web.Profile.ProfileInfoCollection.GetEnumerator*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ProfileInfoCollection.GetEnumerator
- uid: System.Web.Profile.ProfileInfoCollection.IsSynchronized*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ProfileInfoCollection.IsSynchronized
- uid: System.Web.Profile.ProfileInfoCollection.Item*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Item
  nameWithType: ProfileInfoCollection.Item
- uid: System.Web.Profile.ProfileInfoCollection.Remove*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Remove
  nameWithType: ProfileInfoCollection.Remove
- uid: System.Web.Profile.ProfileInfoCollection.SetReadOnly*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: SetReadOnly
  nameWithType: ProfileInfoCollection.SetReadOnly
- uid: System.Web.Profile.ProfileInfoCollection.SyncRoot*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ProfileInfoCollection.SyncRoot
