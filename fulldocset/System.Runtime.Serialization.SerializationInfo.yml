### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SerializationInfo
  id: SerializationInfo
  children:
  - System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  - System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  - System.Runtime.Serialization.SerializationInfo.AssemblyName
  - System.Runtime.Serialization.SerializationInfo.FullTypeName
  - System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetEnumerator
  - System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  - System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  - System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  - System.Runtime.Serialization.SerializationInfo.MemberCount
  - System.Runtime.Serialization.SerializationInfo.ObjectType
  - System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  langs:
  - csharp
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
  type: Class
  summary: "Armazena todos os dados necessários para serializar ou desserializar um objeto. Essa classe não pode ser herdada."
  remarks: "Essa classe é usada por objetos com o comportamento de serialização personalizada. O <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>método no <xref:System.Runtime.Serialization.ISerializable>ou <xref:System.Runtime.Serialization.ISerializationSurrogate>preenche o repositório de SerializationInfo com o nome, tipo e valor de cada tipo de informação que deseja serializar.</xref:System.Runtime.Serialization.ISerializationSurrogate> </xref:System.Runtime.Serialization.ISerializable> </xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> Durante a desserialização, a função apropriada pode extrair essas informações.       Os objetos são adicionados ao repositório de SerializationInfo no tempo de serialização usando o <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A>métodos e extraídos do repositório SerializationInfo a desserialização usando o <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A>métodos.</xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> </xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A>       Para obter mais informações sobre como personalizar a serialização, consulte [serialização personalizada](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the SerializationInfo for custom serialization and deserialization of various values.  \n  \n [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_18_1.cpp)]\n [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_18_1.cs)]\n [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_18_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SerializationInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  id: '#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)'
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SerializationInfo(Type,IFormatterConverter)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Cria uma nova instância do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> classe."
  remarks: "O <xref:System.Runtime.Serialization.IFormatterConverter>passado como o `converter` parâmetro converte dados de sua representação interna para o formulário, o usuário solicitado.</xref:System.Runtime.Serialization.IFormatterConverter> A representação interna dos dados que <xref:System.Runtime.Serialization.SerializationInfo>depende do formatador que criou o proprietário.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter);
    parameters:
    - id: type
      type: System.Type
      description: "O <xref:System.Type>do objeto para serializar.</xref:System.Type>"
    - id: converter
      type: System.Runtime.Serialization.IFormatterConverter
      description: "O <xref href=&quot;System.Runtime.Serialization.IFormatterConverter&quot;> </xref> usado durante a desserialização."
  overload: System.Runtime.Serialization.SerializationInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>converter</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  id: '#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)'
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SerializationInfo(Type,IFormatterConverter,Boolean)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> classe."
  syntax:
    content: public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter, bool requireSameTokenInPartialTrust);
    parameters:
    - id: type
      type: System.Type
      description: "O <xref:System.Type>do objeto para serializar.</xref:System.Type>"
    - id: converter
      type: System.Runtime.Serialization.IFormatterConverter
      description: "O <xref href=&quot;System.Runtime.Serialization.IFormatterConverter&quot;> </xref> usado durante a desserialização."
    - id: requireSameTokenInPartialTrust
      type: System.Boolean
      description: "Indica se o objeto requer o mesmo token em confiança parcial."
  overload: System.Runtime.Serialization.SerializationInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  id: AddValue(System.String,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Boolean)
  nameWithType: SerializationInfo.AddValue(String,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor booliano para a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException> Por exemplo:```c#   void ISerializable.GetObject(SerializationInfo info, StreamingContext context)   {      // This will not cause an exception to be thrown.      info.AddValue(&quot;ABC&quot;, true);      info.AddValue(&quot;abc&quot;, false);      // However, this will cause the SerializationException to be thrown.      info.AddValue(&quot;XYZ&quot;, true);      info.AddValue(&quot;XYZ&quot;, false);   }   ```      ```vb#   Private Sub GetObjectData(ByVal info As SerializationInfo, _   ByVal context As StreamingContext)      &quot; This will not cause an exception to be thrown.      info.AddValue(&quot;ABC&quot;, &quot;upper case&quot;)      info.AddValue(&quot;abc&quot;, &quot;lower case&quot;)      &quot; However, this will cause the SerializationException to be thrown.      info.AddValue(&quot;XYZ&quot;, &quot;same case&quot;)      info.AddValue(&quot;XYZ&quot;, &quot;same case&quot;)   End Sub   ```"
  syntax:
    content: public void AddValue (string name, bool value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.Boolean
      description: "O valor booliano para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  id: AddValue(System.String,System.Byte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Byte)
  nameWithType: SerializationInfo.AddValue(String,Byte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Byte)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor inteiro não assinado de 8 bits para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, byte value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.Byte
      description: "O valor de byte para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  id: AddValue(System.String,System.Char)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Char)
  nameWithType: SerializationInfo.AddValue(String,Char)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Char)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor de caractere Unicode para a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, char value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.Char
      description: "O valor de caractere para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  id: AddValue(System.String,System.DateTime)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,DateTime)
  nameWithType: SerializationInfo.AddValue(String,DateTime)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um <xref:System.DateTime>valor para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar.</xref:System.DateTime>"
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, DateTime value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.DateTime
      description: "O <xref:System.DateTime>valor para serializar.</xref:System.DateTime>"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  id: AddValue(System.String,System.Decimal)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Decimal)
  nameWithType: SerializationInfo.AddValue(String,Decimal)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Decimal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor decimal para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, decimal value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.Decimal
      description: "O valor decimal para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Se um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  id: AddValue(System.String,System.Double)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Double)
  nameWithType: SerializationInfo.AddValue(String,Double)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor de ponto flutuante de precisão dupla no <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, double value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.Double
      description: "O valor duplo para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  id: AddValue(System.String,System.Int16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int16)
  nameWithType: SerializationInfo.AddValue(String,Int16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int16)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor inteiro com sinal de 16 bits para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, short value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.Int16
      description: "O <xref uid=&quot;langword_csharp_Int16&quot; name=&quot;Int16&quot; href=&quot;&quot;> </xref> valor para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  id: AddValue(System.String,System.Int32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int32)
  nameWithType: SerializationInfo.AddValue(String,Int32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor inteiro com sinal de 32 bits para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  example:
  - >-
    [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/b3789dd4-8567-4492-a19c-_1.cpp)]
     [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/b3789dd4-8567-4492-a19c-_1.cs)]
     [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/b3789dd4-8567-4492-a19c-_1.vb)]
  syntax:
    content: public void AddValue (string name, int value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.Int32
      description: "O <xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;> </xref> valor para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  id: AddValue(System.String,System.Int64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int64)
  nameWithType: SerializationInfo.AddValue(String,Int64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor inteiro com sinal de 64 bits para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, long value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.Int64
      description: "O valor Int64 para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  id: AddValue(System.String,System.Object)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Object)
  nameWithType: SerializationInfo.AddValue(String,Object)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona o objeto especificado para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> repositório, onde ele está associado com um nome especificado."
  remarks: "O objeto contido no `value` parâmetro é serializado como o tipo retornado por `value`.       Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.Object
      description: "O valor a ser serializado. Nenhum filho desse objeto será serializado automaticamente."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  id: AddValue(System.String,System.SByte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,SByte)
  nameWithType: SerializationInfo.AddValue(String,SByte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,SByte)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor inteiro assinado de 8 bits para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, sbyte value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.SByte
      description: "O <xref uid=&quot;langword_csharp_Sbyte&quot; name=&quot;Sbyte&quot; href=&quot;&quot;> </xref> valor para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  id: AddValue(System.String,System.Single)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Single)
  nameWithType: SerializationInfo.AddValue(String,Single)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor de ponto flutuante de precisão simples para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, float value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.Single
      description: "O único valor para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  id: AddValue(System.String,System.UInt16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt16)
  nameWithType: SerializationInfo.AddValue(String,UInt16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt16)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor inteiro não assinado de 16 bits para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, ushort value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.UInt16
      description: "O <xref uid=&quot;langword_csharp_UInt16&quot; name=&quot;UInt16&quot; href=&quot;&quot;> </xref> valor para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  id: AddValue(System.String,System.UInt32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt32)
  nameWithType: SerializationInfo.AddValue(String,UInt32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor inteiro não assinado de 32 bits para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  example:
  - "The following example uses the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> method to customize the serialization of a type. The code adds a string and an integer to an instance of the <xref:System.Runtime.Serialization.SerializationInfo> class in the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method of the <xref:System.Runtime.Serialization.ISerializable> interface. The code also uses the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method to retrieve values from the <xref:System.Runtime.Serialization.SerializationInfo>.  \n  \n [!code-cs[ISerializable_GetObjectData#0](~/add/codesnippet/csharp/44ffdfaa-67f2-436c-9c0d-_1.cs)]\n [!code-vb[ISerializable_GetObjectData#0](~/add/codesnippet/visualbasic/44ffdfaa-67f2-436c-9c0d-_1.vb)]"
  syntax:
    content: public void AddValue (string name, uint value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.UInt32
      description: "O <xref uid=&quot;langword_csharp_UInt32&quot; name=&quot;UInt32&quot; href=&quot;&quot;> </xref> valor para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  id: AddValue(System.String,System.UInt64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt64)
  nameWithType: SerializationInfo.AddValue(String,UInt64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor inteiro não assinado de 64 bits para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, ulong value);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.UInt64
      description: "O <xref uid=&quot;langword_csharp_UInt64&quot; name=&quot;UInt64&quot; href=&quot;&quot;> </xref> valor para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  id: AddValue(System.String,System.Object,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Object,Type)
  nameWithType: SerializationInfo.AddValue(String,Object,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Adiciona um valor para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar, onde <code> value </code> associado <code> name </code> e é serializado como sendo do <xref:System.Type> <code> type </code>.</xref:System.Type>"
  remarks: "O tipo atribuído sempre é o tipo do objeto ou um de seus pais.       Se dois valores são adicionados com nomes que diferem somente por caso, nenhuma exceção será gerada, que não é uma prática recomendada. No entanto, a adição de dois valores com o mesmo nome causará o <xref:System.Runtime.Serialization.SerializationException>seja gerada.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, object value, Type type);
    parameters:
    - id: name
      type: System.String
      description: "O nome para associar o valor, portanto ele pode ser desserializado posteriormente."
    - id: value
      type: System.Object
      description: "O valor a ser serializado. Nenhum filho desse objeto será serializado automaticamente."
    - id: type
      type: System.Type
      description: "O <xref:System.Type>para associar o objeto atual.</xref:System.Type> Esse parâmetro sempre deve ser o tipo do objeto em si ou uma de suas classes base."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>name</code> or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um valor já foi associado <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName
  id: AssemblyName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
  fullName: System.Runtime.Serialization.SerializationInfo.AssemblyName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Obtém ou define o nome do assembly do tipo para serializar durante a serialização somente."
  remarks: "O AssemblyName é o mesmo que o valor retornado por <xref:System.Reflection.Assembly.FullName%2A>propriedade do assembly do tipo recipiente.</xref:System.Reflection.Assembly.FullName%2A> Este é o nome do assembly que o formatador utiliza ao serializar informações de tipo para este objeto.       O nome do assembly contém o nome do assembly, versão, cultura e algumas informações de segurança sobre o objeto.       Os usuários que estiver alterando o tipo que está sendo serializado (por exemplo, para enviar um proxy para um determinado tipo) definirá o valor dessa propriedade.      > [!CAUTION] > Não usar essa propriedade durante a desserialização porque o valor dessa propriedade é indefinido."
  syntax:
    content: public string AssemblyName { get; set; }
    return:
      type: System.String
      description: "O nome completo do assembly do tipo para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.AssemblyName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "É o valor que a propriedade é definida como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName
  id: FullTypeName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
  fullName: System.Runtime.Serialization.SerializationInfo.FullTypeName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Obtém ou define o nome completo do <xref:System.Type>para serializar.</xref:System.Type>"
  remarks: "FullTypeName é o mesmo que o que seria retornado pela chamada de <xref:System.Type.FullName%2A>em <xref:System.Type>.</xref:System.Type> </xref:System.Type.FullName%2A> Este é o nome do tipo que o formatador utiliza ao serializar informações de tipo para este objeto.       Os usuários que estiver alterando o tipo para serializar (por exemplo, para enviar um proxy para um determinado tipo) desejará definir o valor dessa propriedade.      > [!CAUTION] > Não usar essa propriedade durante a desserialização porque o valor dessa propriedade é indefinido."
  syntax:
    content: public string FullTypeName { get; set; }
    return:
      type: System.String
      description: "O nome completo do tipo para serializar."
  overload: System.Runtime.Serialization.SerializationInfo.FullTypeName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "É o valor dessa propriedade é definida como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  id: GetBoolean(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetBoolean(String)
  nameWithType: SerializationInfo.GetBoolean(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetBoolean(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor booliano do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se o valor é um valor booliano, ou pode ser convertido em um valor retornado; Caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public bool GetBoolean (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    return:
      type: System.Boolean
      description: "O valor booliano associado <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetBoolean*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um valor booleano."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  id: GetByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetByte(String)
  nameWithType: SerializationInfo.GetByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetByte(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor inteiro não assinado de 8 bits do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se o valor é um inteiro não assinado de 8 bits, ou pode ser convertido em um valor retornado; Caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public byte GetByte (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    return:
      type: System.Byte
      description: "O inteiro sem sinal de 8 bits associado <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetByte*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um inteiro não assinado de 8 bits."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  id: GetChar(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetChar(String)
  nameWithType: SerializationInfo.GetChar(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetChar(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor de caractere Unicode do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se o valor é um caractere Unicode, ou pode ser convertido em um valor retornado; Caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public char GetChar (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    return:
      type: System.Char
      description: "O caractere Unicode associado <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetChar*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um caractere Unicode."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  id: GetDateTime(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDateTime(String)
  nameWithType: SerializationInfo.GetDateTime(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDateTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um <xref:System.DateTime>valor o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar.</xref:System.DateTime>"
  remarks: "Se o valor for um <xref:System.DateTime>, ou pode ser convertido em um <xref:System.DateTime>, esse valor é retornado; caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> </xref:System.DateTime> </xref:System.DateTime> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public DateTime GetDateTime (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>valor associado com <code> name </code>.</xref:System.DateTime>"
  overload: System.Runtime.Serialization.SerializationInfo.GetDateTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um <xref:System.DateTime>valor.</xref:System.DateTime>"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  id: GetDecimal(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDecimal(String)
  nameWithType: SerializationInfo.GetDecimal(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDecimal(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor decimal do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se o valor é um número decimal, ou pode ser convertido em um decimal, o valor retornado; Caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public decimal GetDecimal (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    return:
      type: System.Decimal
      description: "Um valor decimal do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>."
  overload: System.Runtime.Serialization.SerializationInfo.GetDecimal*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um decimal."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  id: GetDouble(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDouble(String)
  nameWithType: SerializationInfo.GetDouble(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDouble(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor de ponto flutuante de precisão dupla do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se o valor for um duplo, ou pode ser convertido em um duplo, o valor retornado; Caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public double GetDouble (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    return:
      type: System.Double
      description: "O valor de ponto flutuante de precisão dupla associado <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetDouble*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um valor de ponto flutuante de precisão dupla."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator
  id: GetEnumerator
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SerializationInfo.GetEnumerator()
  fullName: System.Runtime.Serialization.SerializationInfo.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Retorna um <xref href=&quot;System.Runtime.Serialization.SerializationInfoEnumerator&quot;> </xref> usado para iterar os pares nome-valor no <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Esta função geralmente será usada por formatadores que precisa para enumerar os valores antes de gravá-los do fluxo."
  syntax:
    content: public System.Runtime.Serialization.SerializationInfoEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Runtime.Serialization.SerializationInfoEnumerator
      description: "Um <xref href=&quot;System.Runtime.Serialization.SerializationInfoEnumerator&quot;> </xref> para analisar os pares nome-valor contidos no <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  overload: System.Runtime.Serialization.SerializationInfo.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  id: GetInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt16(String)
  nameWithType: SerializationInfo.GetInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt16(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor inteiro com sinal de 16 bits do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se o valor é um inteiro assinado de 16 bits, ou pode ser convertido em um valor retornado; Caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public short GetInt16 (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    return:
      type: System.Int16
      description: "O inteiro assinado de 16 bits associado <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetInt16*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um inteiro assinado de 16 bits."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  id: GetInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt32(String)
  nameWithType: SerializationInfo.GetInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt32(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor inteiro com sinal de 32 bits do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se o valor é um inteiro assinado de 32 bits, ou pode ser convertido em um valor retornado; Caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  example:
  - >-
    [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/m-system.runtime.seriali_2_1.cpp)]
     [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/m-system.runtime.seriali_2_1.cs)]
     [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/m-system.runtime.seriali_2_1.vb)]
  syntax:
    content: public int GetInt32 (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do valor a ser recuperado."
    return:
      type: System.Int32
      description: "O inteiro assinado de 32 bits associado <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetInt32*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um inteiro assinado de 32 bits."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  id: GetInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt64(String)
  nameWithType: SerializationInfo.GetInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt64(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor inteiro com sinal de 64 bits do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se o valor é um inteiro assinado de 64 bits, ou pode ser convertido em um valor retornado; Caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public long GetInt64 (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    return:
      type: System.Int64
      description: "O inteiro assinado de 64 bits associado <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetInt64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um inteiro assinado de 64 bits."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  id: GetSByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetSByte(String)
  nameWithType: SerializationInfo.GetSByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSByte(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor inteiro assinado de 8 bits do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se o valor for um `Int8`, ou pode ser convertido em um `Int8`, esse valor é retornado; caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public sbyte GetSByte (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    return:
      type: System.SByte
      description: "O inteiro assinado de 8 bits associado <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetSByte*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um inteiro assinado de 8 bits."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  id: GetSingle(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetSingle(String)
  nameWithType: SerializationInfo.GetSingle(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSingle(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor de ponto flutuante de precisão simples do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se o valor é um número de ponto flutuante de precisão única, ou pode ser convertido em um valor retornado; Caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public float GetSingle (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do valor a ser recuperado."
    return:
      type: System.Single
      description: "O valor de ponto flutuante de precisão única associado <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetSingle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um valor de ponto flutuante de precisão simples."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  id: GetString(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetString(String)
  nameWithType: SerializationInfo.GetString(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um <xref:System.String>valor o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar.</xref:System.String>"
  remarks: "Se o valor for um <xref:System.String>, ou pode ser convertido em um <xref:System.String>, esse valor é retornado; caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> </xref:System.String> </xref:System.String> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public string GetString (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    return:
      type: System.String
      description: "O <xref:System.String>associado <code> name </code>.</xref:System.String>"
  overload: System.Runtime.Serialization.SerializationInfo.GetString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em <xref:System.String>.</xref:System.String>"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  id: GetUInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt16(String)
  nameWithType: SerializationInfo.GetUInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt16(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor inteiro não assinado de 16 bits do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se o valor é um inteiro não assinado de 16 bits, ou pode ser convertido em um valor retornado; Caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public ushort GetUInt16 (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    return:
      type: System.UInt16
      description: "O inteiro sem sinal de 16 bits associado <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt16*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um inteiro não assinado de 16 bits."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  id: GetUInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt32(String)
  nameWithType: SerializationInfo.GetUInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt32(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor inteiro não assinado de 32 bits do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se o valor é um inteiro assinado de 32 bits, ou pode ser convertido em um valor retornado; Caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public uint GetUInt32 (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    return:
      type: System.UInt32
      description: "O inteiro sem sinal de 32 bits associado <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt32*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um inteiro não assinado de 32 bits."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  id: GetUInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt64(String)
  nameWithType: SerializationInfo.GetUInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt64(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor inteiro não assinado de 64 bits do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se o valor é um inteiro não assinado de 64 bits, ou pode ser convertido em um valor retornado; Caso contrário, um <xref:System.InvalidCastException>é gerada.</xref:System.InvalidCastException> Todas as conversões são executadas pelo <xref:System.Runtime.Serialization.IFormatterConverter>associado a esta <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public ulong GetUInt64 (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    return:
      type: System.UInt64
      description: "O inteiro sem sinal de 64 bits associado <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em um inteiro não assinado de 64 bits."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  id: GetValue(System.String,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetValue(String,Type)
  nameWithType: SerializationInfo.GetValue(String,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.GetValue(String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Recupera um valor da <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  remarks: "Se os dados armazenados no <xref:System.Runtime.Serialization.SerializationInfo>é do tipo solicitado (ou uma de suas classes derivadas), esse valor é retornado diretamente.</xref:System.Runtime.Serialization.SerializationInfo> Caso contrário, <xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName>é chamado para convertê-lo para o tipo apropriado.</xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName>       O valor retornado pelo método GetValue sempre pode ser convertido com segurança para o tipo especificado no `type` parâmetro."
  example:
  - "The following code example demonstrates the use of the GetValue method:  \n  \n [!code-vb[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/visualbasic/a88aeee3-6425-4869-aee2-_1.vb)]\n [!code-cs[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/csharp/a88aeee3-6425-4869-aee2-_1.cs)]\n [!code-cpp[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/cpp/a88aeee3-6425-4869-aee2-_1.cpp)]"
  syntax:
    content: public object GetValue (string name, Type type);
    parameters:
    - id: name
      type: System.String
      description: "O nome associado com o valor a ser recuperado."
    - id: type
      type: System.Type
      description: "O <xref:System.Type>do valor a ser recuperado.</xref:System.Type> Se o valor armazenado não pode ser convertido para este tipo, o sistema gerará um <xref:System.InvalidCastException>.</xref:System.InvalidCastException>"
    return:
      type: System.Object
      description: "O objeto do <xref:System.Type>associado <code> name </code>.</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationInfo.GetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O valor associado com <code> name </code> não pode ser convertido em <code> type </code>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Um elemento com o nome especificado não foi encontrado na instância atual."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  id: IsAssemblyNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Obtém se o nome do assembly foi definido explicitamente."
  syntax:
    content: public bool IsAssemblyNameSetExplicit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o nome do assembly foi definido explicitamente; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  id: IsFullTypeNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Obtém se o nome completo do tipo foi definido explicitamente."
  syntax:
    content: public bool IsFullTypeNameSetExplicit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o nome completo do tipo foi definido explicitamente; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount
  id: MemberCount
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
  fullName: System.Runtime.Serialization.SerializationInfo.MemberCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Obtém o número de membros que foram adicionados para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> armazenar."
  syntax:
    content: public int MemberCount { get; }
    return:
      type: System.Int32
      description: "O número de membros que foram adicionados ao atual <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>."
  overload: System.Runtime.Serialization.SerializationInfo.MemberCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType
  id: ObjectType
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
  fullName: System.Runtime.Serialization.SerializationInfo.ObjectType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Retorna o tipo do objeto a ser serializado."
  syntax:
    content: public Type ObjectType { get; }
    return:
      type: System.Type
      description: "O tipo do objeto que está sendo serializado."
  overload: System.Runtime.Serialization.SerializationInfo.ObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  id: SetType(System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SetType(Type)
  nameWithType: SerializationInfo.SetType(Type)
  fullName: System.Runtime.Serialization.SerializationInfo.SetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Define o <xref:System.Type>do objeto para serializar.</xref:System.Type>"
  remarks: "O que <xref:System.Runtime.Serialization.Formatter>é responsável por definir a <xref:System.Type>da <xref:System.Runtime.Serialization.SerializationInfo>instância antes de passá-lo para <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> </xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Type> </xref:System.Runtime.Serialization.Formatter> No entanto, os usuários que desejam enviar proxies para os objetos precisará alterar o tipo representado por esse <xref:System.Runtime.Serialization.SerializationInfo>instância.</xref:System.Runtime.Serialization.SerializationInfo> Usando o método SetType é equivalente a definir ambos os <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>e <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A>.</xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> </xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>"
  example:
  - >-
    [!code-cs[IObjectReference Interface Example#1](~/add/codesnippet/csharp/m-system.runtime.seriali_6_1.cs)]
     [!code-cpp[IObjectReference Interface Example#1](~/add/codesnippet/cpp/m-system.runtime.seriali_6_1.cpp)]
     [!code-vb[IObjectReference Interface Example#1](~/add/codesnippet/visualbasic/m-system.runtime.seriali_6_1.vb)]
  syntax:
    content: public void SetType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O <xref:System.Type>do objeto para serializar.</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationInfo.SetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo(Type,IFormatterConverter)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.IFormatterConverter
  parent: System.Runtime.Serialization
  isExternal: false
  name: IFormatterConverter
  nameWithType: IFormatterConverter
  fullName: System.Runtime.Serialization.IFormatterConverter
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo(Type,IFormatterConverter,Boolean)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Boolean)
  nameWithType: SerializationInfo.AddValue(String,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Byte)
  nameWithType: SerializationInfo.AddValue(String,Byte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Char)
  nameWithType: SerializationInfo.AddValue(String,Char)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,DateTime)
  nameWithType: SerializationInfo.AddValue(String,DateTime)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Decimal)
  nameWithType: SerializationInfo.AddValue(String,Decimal)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Double)
  nameWithType: SerializationInfo.AddValue(String,Double)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int16)
  nameWithType: SerializationInfo.AddValue(String,Int16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int32)
  nameWithType: SerializationInfo.AddValue(String,Int32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int64)
  nameWithType: SerializationInfo.AddValue(String,Int64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Object)
  nameWithType: SerializationInfo.AddValue(String,Object)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object)
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,SByte)
  nameWithType: SerializationInfo.AddValue(String,SByte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,SByte)
- uid: System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Single)
  nameWithType: SerializationInfo.AddValue(String,Single)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt16)
  nameWithType: SerializationInfo.AddValue(String,UInt16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt16)
- uid: System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt32)
  nameWithType: SerializationInfo.AddValue(String,UInt32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt64)
  nameWithType: SerializationInfo.AddValue(String,UInt64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Object,Type)
  nameWithType: SerializationInfo.AddValue(String,Object,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object,Type)
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
  fullName: System.Runtime.Serialization.SerializationInfo.AssemblyName
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
  fullName: System.Runtime.Serialization.SerializationInfo.FullTypeName
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetBoolean(String)
  nameWithType: SerializationInfo.GetBoolean(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetBoolean(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetByte(String)
  nameWithType: SerializationInfo.GetByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetByte(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetChar(String)
  nameWithType: SerializationInfo.GetChar(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetChar(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDateTime(String)
  nameWithType: SerializationInfo.GetDateTime(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDateTime(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDecimal(String)
  nameWithType: SerializationInfo.GetDecimal(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDecimal(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDouble(String)
  nameWithType: SerializationInfo.GetDouble(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDouble(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetEnumerator()
  nameWithType: SerializationInfo.GetEnumerator()
  fullName: System.Runtime.Serialization.SerializationInfo.GetEnumerator()
- uid: System.Runtime.Serialization.SerializationInfoEnumerator
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfoEnumerator
  nameWithType: SerializationInfoEnumerator
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt16(String)
  nameWithType: SerializationInfo.GetInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt16(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt32(String)
  nameWithType: SerializationInfo.GetInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt32(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt64(String)
  nameWithType: SerializationInfo.GetInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt64(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSByte(String)
  nameWithType: SerializationInfo.GetSByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSByte(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSingle(String)
  nameWithType: SerializationInfo.GetSingle(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSingle(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetString(String)
  nameWithType: SerializationInfo.GetString(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetString(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt16(String)
  nameWithType: SerializationInfo.GetUInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt16(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt32(String)
  nameWithType: SerializationInfo.GetUInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt32(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt64(String)
  nameWithType: SerializationInfo.GetUInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt64(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetValue(String,Type)
  nameWithType: SerializationInfo.GetValue(String,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.GetValue(String,Type)
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
  fullName: System.Runtime.Serialization.SerializationInfo.MemberCount
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
  fullName: System.Runtime.Serialization.SerializationInfo.ObjectType
- uid: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SetType(Type)
  nameWithType: SerializationInfo.SetType(Type)
  fullName: System.Runtime.Serialization.SerializationInfo.SetType(Type)
- uid: System.Runtime.Serialization.SerializationInfo.#ctor*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo.SerializationInfo
- uid: System.Runtime.Serialization.SerializationInfo.AddValue*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue
  nameWithType: SerializationInfo.AddValue
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetBoolean
  nameWithType: SerializationInfo.GetBoolean
- uid: System.Runtime.Serialization.SerializationInfo.GetByte*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetByte
  nameWithType: SerializationInfo.GetByte
- uid: System.Runtime.Serialization.SerializationInfo.GetChar*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetChar
  nameWithType: SerializationInfo.GetChar
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDateTime
  nameWithType: SerializationInfo.GetDateTime
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDecimal
  nameWithType: SerializationInfo.GetDecimal
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDouble
  nameWithType: SerializationInfo.GetDouble
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetEnumerator
  nameWithType: SerializationInfo.GetEnumerator
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt16
  nameWithType: SerializationInfo.GetInt16
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt32
  nameWithType: SerializationInfo.GetInt32
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt64
  nameWithType: SerializationInfo.GetInt64
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSByte
  nameWithType: SerializationInfo.GetSByte
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSingle
  nameWithType: SerializationInfo.GetSingle
- uid: System.Runtime.Serialization.SerializationInfo.GetString*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetString
  nameWithType: SerializationInfo.GetString
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt16
  nameWithType: SerializationInfo.GetUInt16
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt32
  nameWithType: SerializationInfo.GetUInt32
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt64
  nameWithType: SerializationInfo.GetUInt64
- uid: System.Runtime.Serialization.SerializationInfo.GetValue*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetValue
  nameWithType: SerializationInfo.GetValue
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
- uid: System.Runtime.Serialization.SerializationInfo.SetType*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SetType
  nameWithType: SerializationInfo.SetType
