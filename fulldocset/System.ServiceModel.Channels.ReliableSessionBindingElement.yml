### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement
  id: ReliableSessionBindingElement
  children:
  - System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor
  - System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  - System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.Clone
  - System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  - System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  - System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  - System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  - System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: ReliableSessionBindingElement
  nameWithType: ReliableSessionBindingElement
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement
  type: Class
  summary: "Representa o elemento de associação que pode produzir o envio e recebimento de canais necessários para uma sessão confiável entre os pontos de extremidade."
  remarks: "Fornece sessões e, opcionalmente, entrega de mensagens ordenadas. Esta sessão implementada pode cruzar com intermediários SOAP e transporte.       Cada elemento de associação representa uma etapa de processamento ao enviar ou receber mensagens. Em tempo de execução, os elementos de associação criam as fábricas de canais e ouvintes que são necessários para construir as pilhas de canal de entrada e saída necessárias para enviar e receber mensagens. O ReliableSessionBindingElement fornece uma camada opcional na pilha que pode estabelecer uma sessão confiável entre os pontos de extremidade e configurar o comportamento da sessão.       As associações padrão na tabela a seguir fornece o ReliableSessionBindingElement.      | Associação | Padrão |   |-------------|-------------|   | <xref:System.ServiceModel.NetTcpBinding>| Desativar |   | <xref:System.ServiceModel.WSHttpBinding>| Desativar |   | <xref:System.ServiceModel.WSDualHttpBinding>| No (obrigatório) |</xref:System.ServiceModel.WSDualHttpBinding> </xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.NetTcpBinding>"
  example:
  - "The ReliableSessionBindingElement can be added to any custom binding. This is done using the following configuration elements.  \n  \n```  \n<bindings>  \n    <customBinding>  \n        <binding configurationName=”ReliabilityHTTP”>  \n            <reliableSession/>  \n        </binding>  \n    </customBinding>  \n</bindings>  \n```  \n  \n The following sample code demonstrates how to use ReliableSessionBindingElement in code.  \n  \n [!code-vb[S_Imperative#1](~/add/codesnippet/visualbasic/t-system.servicemodel.ch_0_1.vb)]\n [!code-cs[S_Imperative#1](~/add/codesnippet/csharp/t-system.servicemodel.ch_0_1.cs)]"
  syntax:
    content: 'public sealed class ReliableSessionBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension'
  inheritance:
  - System.ServiceModel.Channels.BindingElement
  implements:
  - System.ServiceModel.Description.IPolicyExportExtension
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: ReliableSessionBindingElement()
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref> classe."
  syntax:
    content: public ReliableSessionBindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: ReliableSessionBindingElement(Boolean)
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref> classe que especifica se a entrega de mensagens deve preservar a ordem na qual as mensagens são enviadas."
  syntax:
    content: public ReliableSessionBindingElement (bool ordered);
    parameters:
    - id: ordered
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as mensagens devem ser entregues na ordem em que são enviados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  id: AcknowledgementInterval
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: AcknowledgementInterval
  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém ou define o intervalo de tempo que um destino aguarda antes de enviar uma confirmação para a origem da mensagem em canais confiáveis que são criados pela fábrica."
  remarks: "O destino que recebe mensagens em um canal confiável agrupa confirmações para essas mensagens juntas em uma única mensagem para reduzir o tráfego de rede e aumentar a densidade de informações em mensagens. Agrupamento dimensiona melhor como o tráfego aumenta. Ele não tenta enviar uma confirmação para cada mensagem recebe assim que possível, mas em vez disso, aguarda até que um intervalo de tempo, agrupa as confirmações recebidas durante esse intervalo e os envia todos juntos. A primeira mensagem é recebida é a exceção. ela é reconhecida como ele é distribuído. Além disso, se as sessões confiáveis são usadas com as conexões HTTP único, como é o caso, por exemplo, com o <xref:System.ServiceModel.WSHttpBinding>mas não <xref:System.ServiceModel.WSDualHttpBinding>, essa configuração não é usado.</xref:System.ServiceModel.WSDualHttpBinding> </xref:System.ServiceModel.WSHttpBinding>       O valor é definido com a propriedade AcknowledgementInterval é uma recomendação para a infraestrutura e não um limite rígido."
  syntax:
    content: public TimeSpan AcknowledgementInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>que especifica o intervalo de tempo que um serviço espera até enviar uma confirmação para a origem da mensagem.</xref:System.TimeSpan> O valor padrão é 2 segundos."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O conjunto de valor é menor ou igual a zero."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: BuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "A ser adicionado."
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "A ser adicionado."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: BuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "A ser adicionado."
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: "A ser adicionado."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "A ser adicionado."
    return:
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: CanBuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "A ser adicionado."
    return:
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: ReliableSessionBindingElement.Clone()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Cria uma cópia do elemento de associação atual sessão confiável."
  syntax:
    content: public override System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "Um <xref:System.ServiceModel.Channels.BindingElement>que é um clone do elemento de associação atual.</xref:System.ServiceModel.Channels.BindingElement>"
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  id: FlowControlEnabled
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: FlowControlEnabled
  nameWithType: ReliableSessionBindingElement.FlowControlEnabled
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém ou define um valor que indica se a sessão confiável tem controle de fluxo habilitado."
  remarks: "Controle de fluxo é um mecanismo que implementam sessões confiáveis para garantir que os remetentes não envia mais mensagens do que um destinatário pode manipular. Têm um buffer de mensagens que é usado para acomodar picos de mensagem e fora de ordem. Receptores de anúncio para remetentes a quantidade de espaço que permanece nesse buffer em cada uma das suas confirmações. Remetentes podem usar essas informações para parar de enviar novas mensagens sempre que o destinatário não tem buffer espaço à esquerda."
  syntax:
    content: public bool FlowControlEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a sessão confiável foi habilitado; o controle de fluxo Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: GetProperty(BindingContext)
  nameWithType: ReliableSessionBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "A ser adicionado."
    return:
      type: T
      description: "A ser adicionado."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: ReliableSessionBindingElement.InactivityTimeout
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém ou define um intervalo de tempo que um serviço permanece inativo antes de fechar."
  remarks: "Atividade em um canal é definida como receber uma mensagem de infraestrutura ou de aplicativo. O parâmetro de tempo limite de inatividade controla a quantidade máxima de tempo para manter uma sessão inativa ativa. Se mais de InactivityTimeout passa de intervalo de tempo sem nenhuma atividade, a sessão será anulada a infraestrutura e as falhas de canal. A sessão confiável é subdividida forma unilateral.       Se o aplicativo enviar nenhuma mensagem a enviar, em seguida, a sessão confiável normalmente não apresentou falha devido a inatividade; em vez disso, um mecanismo keep-alive mantém a sessão ativa indefinidamente. Observe que a sessão confiável independentemente pode anular o dispatcher se nenhuma mensagem de aplicativo é enviadas ou recebidas. Portanto, o tempo limite de inatividade normalmente expira se as condições de rede, de modo que nenhuma mensagem é recebida ou se houver uma falha no remetente."
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>que especifica o intervalo de tempo que um serviço permanece inativo antes de fechar.</xref:System.TimeSpan> O valor padrão é 10 minutos."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O conjunto de valor é menor ou igual a zero ou maior que <xref:System.Int32.MaxValue>ou <xref:System.TimeSpan.MaxValue>.</xref:System.TimeSpan.MaxValue> </xref:System.Int32.MaxValue>"
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  id: MaxPendingChannels
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: MaxPendingChannels
  nameWithType: ReliableSessionBindingElement.MaxPendingChannels
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém ou define o maior número de canais que podem estar pendentes durante a sessão confiável."
  remarks: "Os canais estão pendentes quando estão aguardando para serem aceitos. Quando esse limite é atingido, nenhum canal é criadas e enfileirados pendentes modo até que esse número chegar para baixo (aceitando pendentes canais). Este é um limite para cada ouvinte.       Quando o limite for atingido, e um aplicativo remoto tenta estabelecer uma nova sessão confiável, a solicitação será negada e a operação de abertura que gerou este falhas."
  syntax:
    content: public int MaxPendingChannels { get; set; }
    return:
      type: System.Int32
      description: "O maior número de canais que podem estar pendentes. O valor padrão é 4."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O conjunto de valor é menor ou igual a zero ou maior do que 16384."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  id: MaxRetryCount
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: MaxRetryCount
  nameWithType: ReliableSessionBindingElement.MaxRetryCount
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém ou define o número máximo de vezes que uma mensagem tenta ser transferidos durante a sessão confiável."
  remarks: "Uma mensagem é considerada a serem transferidos se sua entrega no destinatário foi reconhecida pelo destinatário.       Se uma confirmação não foi recebida dentro de um determinado período de tempo para uma mensagem que foi transmitida, a infraestrutura retransmite automaticamente a mensagem. A infraestrutura tenta enviar a mensagem para, no máximo, MaxRetryCount várias vezes. Não receber uma confirmação antes de atingir esse limite é considerado uma falha de comunicação fatal e faz com que o evento de falha de canal a ser gerado.       A infraestrutura usa um algoritmo de retirada exponencial para determinar quando retransmitir, com base em um tempo de ida e volta média calculado. O tempo de repetição inicial é calculado com base no tempo de ida e volta a medida do estabelecimento da sessão. O algoritmo de retransmissão dobra o atraso com cada tentativa, o que resulta em aproximadamente 8,5 minutos passar entre a primeira tentativa de transmissão e a última tentativa de retransmissão. O tempo para a primeira tentativa de retransmissão é ajustado de acordo com o tempo de ida e volta calculado e a ampliação resultante de tempo que levam as tentativas varia de acordo. Isso permite que o tempo de retransmissão para adaptar-se dinamicamente a condições variáveis de rede."
  syntax:
    content: public int MaxRetryCount { get; set; }
    return:
      type: System.Int32
      description: "O número máximo de vezes que uma mensagem de tentativas de reenvio. O valor mínimo é 1; o máximo é <xref:System.Int32>; e o valor padrão é 8.</xref:System.Int32>"
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O conjunto de valor é menor ou igual a zero."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  id: MaxTransferWindowSize
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém ou define o maior número de mensagens que podem existir no buffer de envio ou o buffer de recebimento."
  remarks: "O valor da propriedade MaxTransferWindowSize pode ser definido no remetente e o receptor. Esse valor é incluído na política de associação da WSDL, portanto, se você usar o [Ferramenta Utilitária de metadados ServiceModel (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md) para construir o cliente, ele tem o mesmo valor. Caso contrário, esse valor é o que você definir ser no cliente.       Quando esse limite for atingido no remetente, chamadas adicionais para enviar são bloqueadas. Quando esse limite é atingido o receptor, novas mensagens que chegam no canal subjacente não são aceitas.       Uma sessão confiável usa um protocolo para ajudar a melhorar a utilização da rede. A quantidade de buffer necessário diretamente é derivada do tamanho da janela de transmissão. Ao ajustar esse valor, observe que a janela de transmissão ideal está relacionada a largura de banda e a latência de maneira direta. O tamanho máximo da janela ideal é a largura de banda, vezes a latência. Nada menor resulta em menor do que a utilização de rede de 100%; qualquer coisa maior é o espaço desperdiçado apenas."
  syntax:
    content: public int MaxTransferWindowSize { get; set; }
    return:
      type: System.Int32
      description: "O maior número de mensagens que podem ser armazenados em buffer. O valor mínimo é 1; o valor máximo é 4096; e o valor padrão é 32."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O conjunto de valor é menor ou igual a um ou maior do que 4096."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  id: Ordered
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: Ordered
  nameWithType: ReliableSessionBindingElement.Ordered
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém ou define um valor que indica se a entrega de mensagens deve preservar a ordem na qual as mensagens são enviadas."
  remarks: "Para obter as mensagens enviadas em ordem, você também deve definir o <xref:System.ServiceModel.ConcurrencyMode> <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ConcurrencyMode>"
  syntax:
    content: public bool Ordered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as mensagens devem ser entregues na ordem em que são enviados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  id: ReliableMessagingVersion
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém ou define a versão do WS-ReliableMessaging especificado pelo elemento de associação."
  remarks: 'Atualmente, há duas versões do protocolo WS-ReliableMessaging suportados pelo [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]: WS-ReliableMessaging1.1 e WS-ReliableMessagingFebruary2005. A versão padrão é WS-ReliableMessagingFebruary2005.'
  syntax:
    content: public System.ServiceModel.ReliableMessagingVersion ReliableMessagingVersion { get; set; }
    return:
      type: System.ServiceModel.ReliableMessagingVersion
      description: "Derivado de uma instância de <xref href=&quot;System.ServiceModel.ReliableMessagingVersion&quot;> </xref> que representa a versão do protocolo WS-ReliableMessaging usada pelo elemento de configuração."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  isEii: true
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Mapeia as informações contidas no elemento de associação de sessão confiável nos elementos WSDL que permitem que um ponto de extremidade remoto acessar o serviço com uma sessão confiável."
  syntax:
    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.MetadataExporter
      description: "O <xref href=&quot;System.ServiceModel.Description.MetadataExporter&quot;> </xref> que exporta as informações de associação no elemento de associação de sessão confiável aos elementos WSDL."
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "O <xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref> que fornece o mapeamento de elementos WSDL exportados para a descrição do ponto de extremidade."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: System.ServiceModel.Channels.BindingElement
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableSessionBindingElement()
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement()
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableSessionBindingElement(Boolean)
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Clone()
  nameWithType: ReliableSessionBindingElement.Clone()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone()
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionBindingElement.FlowControlEnabled
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: GetProperty(BindingContext)
  nameWithType: ReliableSessionBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty(BindingContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionBindingElement.InactivityTimeout
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionBindingElement.MaxPendingChannels
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionBindingElement.MaxRetryCount
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionBindingElement.Ordered
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
- uid: System.ServiceModel.ReliableMessagingVersion
  parent: System.ServiceModel
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableMessagingVersion
  fullName: System.ServiceModel.ReliableMessagingVersion
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExporter
  nameWithType: MetadataExporter
  fullName: System.ServiceModel.Description.MetadataExporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableSessionBindingElement
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: ReliableSessionBindingElement.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: ReliableSessionBindingElement.BuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>
  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>
  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Clone
  nameWithType: ReliableSessionBindingElement.Clone
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionBindingElement.FlowControlEnabled
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty<T>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: GetProperty<T>
  nameWithType: ReliableSessionBindingElement.GetProperty<T>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionBindingElement.InactivityTimeout
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionBindingElement.MaxPendingChannels
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionBindingElement.MaxRetryCount
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionBindingElement.Ordered
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
  nameWithType: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
