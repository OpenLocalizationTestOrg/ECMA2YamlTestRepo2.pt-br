### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  id: IRemoteArgumentEnumeratorContract
  children:
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  langs:
  - csharp
  name: IRemoteArgumentEnumeratorContract
  nameWithType: IRemoteArgumentEnumeratorContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  type: Interface
  summary: "Enumera os elementos de uma coleção de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> objetos."
  remarks: "Enumeradores podem ser usados para ler os dados na coleção, mas eles não podem ser usados para modificar a coleção subjacente.       Inicialmente, o enumerador está posicionado antes do primeiro elemento na coleção. Nesta posição, o valor de retorno de <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>é indefinido.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> Portanto, você deve chamar <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>para avançar o enumerador para o primeiro elemento da coleção antes de chamar <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>Retorna o mesmo objeto até <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>é chamado.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A></xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>Define o valor de retorno <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>para o próximo elemento.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A></xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       Se <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>passa o final da coleção, o enumerador está posicionado após o último elemento da coleção e <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>retorna `false`.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> Quando o enumerador está nessa posição, chamadas subsequentes para <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>também retornam `false`.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> Se a última chamada <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>retornado `false`, o valor de retorno de <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>é indefinido.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       Um enumerador permanece válido desde que a coleção permaneça inalterada. Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e seu comportamento é indefinido."
  syntax:
    content: 'public interface IRemoteArgumentEnumeratorContract : System.AddIn.Contract.IContract'
  implements:
  - System.AddIn.Contract.IContract
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  id: GetCurrent
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: GetCurrent()
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Retorna o <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> na coleção na posição atual do enumerador."
  remarks: "O valor de retorno de GetCurrent não está definido em qualquer uma das seguintes condições:-o enumerador está posicionado antes do primeiro elemento na coleção, imediatamente depois que o enumerador é criado ou <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>é chamado.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de chamar GetCurrent.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>      -A última chamada a <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>retornado `false`, que indica o final da coleção.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>      -O enumerador é invalidado devido a alterações feitas na coleção, como adicionar, modificar ou excluir elementos.       GetCurrent retorna o mesmo objeto até <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>é chamado.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>Define o valor de retorno de GetCurrent para o próximo elemento.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>"
  syntax:
    content: public System.AddIn.Contract.RemoteArgument GetCurrent ();
    parameters: []
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "O <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> na coleção na posição atual do enumerador."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  id: MoveNext
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: MoveNext()
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Avança o enumerador para o próximo elemento da coleção."
  remarks: "Após a criação de um enumerador ou depois do <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>método é chamado, um enumerador está posicionado antes do primeiro elemento da coleção.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> A primeira chamada para o método MoveNext move o enumerador para o primeiro elemento da coleção.       Se MoveNext passa o final da coleção, o enumerador está posicionado após o último elemento da coleção e retorna MoveNext `false`. Quando o enumerador está nessa posição, chamadas subsequentes para MoveNext também retornam `false` até <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>é chamado.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>       Um enumerador permanece válido desde que a coleção permaneça inalterada. Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada para MoveNext ou <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>lança um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o enumerador foi avançado com êxito para o próximo elemento; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o enumerador tiver passado o final da coleção."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A coleção foi modificada depois que o enumerador foi criado."
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  id: Reset
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: Reset()
  nameWithType: IRemoteArgumentEnumeratorContract.Reset()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Define o enumerador como sua posição inicial, que é antes do primeiro elemento na coleção."
  remarks: "Depois de chamar redefinir, o valor de <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>é indefinido.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> Chamar o <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>método para mover o enumerador para o primeiro elemento da coleção.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       Um enumerador permanece válido desde que a coleção permaneça inalterada. Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada para <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>ou redefinição lança um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A coleção foi modificada depois que o enumerador foi criado."
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: GetCurrent()
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent()
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: MoveNext()
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: Reset()
  nameWithType: IRemoteArgumentEnumeratorContract.Reset()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset()
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: GetCurrent
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: MoveNext
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: Reset
  nameWithType: IRemoteArgumentEnumeratorContract.Reset
