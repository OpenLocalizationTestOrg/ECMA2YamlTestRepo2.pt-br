### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ImportManyAttribute
  id: ImportManyAttribute
  children:
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  - System.ComponentModel.Composition.ImportManyAttribute.ContractName
  - System.ComponentModel.Composition.ImportManyAttribute.ContractType
  - System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  - System.ComponentModel.Composition.ImportManyAttribute.Source
  langs:
  - csharp
  name: ImportManyAttribute
  nameWithType: ImportManyAttribute
  fullName: System.ComponentModel.Composition.ImportManyAttribute
  type: Class
  summary: "Especifica que uma propriedade, campo ou parâmetro deve ser populado com todas as exportações de correspondência, o <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> objeto."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)]

      public class ImportManyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute()
  nameWithType: ImportManyAttribute.ImportManyAttribute()
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;> </xref> classe, importando o conjunto de exportações com o nome do contrato padrão."
  remarks: "O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>método do tipo de propriedade, campo ou parâmetro que está marcado com esse atributo.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       O nome do contrato é comparado com o uso de <xref:System.StringComparer.Ordinal%2A>propriedade para executar uma comparação não linguística, diferencia maiusculas de minúsculas.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportManyAttribute ();
    parameters: []
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute(String)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;> </xref> classe, importando o conjunto de exportações com o nome de contrato especificado."
  remarks: "O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>método no tipo de propriedade, campo ou parâmetro está marcado com esse atributo.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       O nome do contrato é comparado com o uso de <xref:System.StringComparer.Ordinal%2A>propriedade para executar uma comparação não linguística, diferencia maiusculas de minúsculas.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportManyAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "O nome do contrato de exportações para importar, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia (&quot;&quot;) para usar o nome do contrato padrão."
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute(Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;> </xref> classe, importando o conjunto de exportações com o nome do contrato é derivado do tipo especificado."
  remarks: "O nome do contrato é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>método `contractType`.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>método no tipo de propriedade, campo ou parâmetro está marcado com esse atributo.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       O nome do contrato é comparado com o uso de <xref:System.StringComparer.Ordinal%2A>propriedade para executar uma comparação não linguística, diferencia maiusculas de minúsculas.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportManyAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "O tipo para derivar o nome do contrato de exportações para importar, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar o nome do contrato padrão."
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute(String,Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;> </xref> classe, importando o conjunto de exportações com o tipo de nome e contrato de contrato especificado."
  syntax:
    content: public ImportManyAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: "O nome do contrato de exportações para importar, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia (&quot;&quot;) para usar o nome do contrato padrão."
    - id: contractType
      type: System.Type
      description: "O tipo de exportação para importar."
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  id: AllowRecomposition
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: AllowRecomposition
  nameWithType: ImportManyAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Obtém ou define um valor que indica se a propriedade decorada ou o campo será recomposto quando a alteração de contrato de exportações que fornecem a correspondência."
  syntax:
    content: public bool AllowRecomposition { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a propriedade ou campo permite recomposition quando exportações que fornecem a mesma <xref:System.ComponentModel.Composition.ImportManyAttribute.ContractName*>são adicionados ou removidos do <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.Composition.ImportManyAttribute.ContractName*>       O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ImportManyAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Obtém o nome do contrato de exportações para importar."
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: "O nome do contrato de exportações para importar. O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.ComponentModel.Composition.ImportManyAttribute.ContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ImportManyAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Obtém o tipo de contrato da exportação para importar."
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: "O tipo de exportação que essa importação está esperando. O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que significa que o tipo será obtido observando o tipo do membro que essa importação está associada. Se o tipo for <xref:System.Object>, a importação corresponderá a qualquer tipo exportado.</xref:System.Object>"
  overload: System.ComponentModel.Composition.ImportManyAttribute.ContractType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  id: RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: RequiredCreationPolicy
  nameWithType: ImportManyAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Obtém ou define um valor que indica que o importador requer um determinado <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref> para as exportações usadas para satisfazer essa importação."
  syntax:
    content: public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }
    return:
      type: System.ComponentModel.Composition.CreationPolicy
      description: "Um dos seguintes valores: <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>, se o importador de não exigir um determinado <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>. Esse é o padrão.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>para exigir que todas as exportações usadas ser compartilhado por todas as partes no contêiner.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>para exigir que todas as exportações usadas seja não compartilhado em um contêiner. Nesse caso, cada parte recebe sua própria instância."
  overload: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.Source
  id: Source
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: Source
  nameWithType: ImportManyAttribute.Source
  fullName: System.ComponentModel.Composition.ImportManyAttribute.Source
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Obtém ou define um valor que especifica os escopos do qual essa importação pode ser atendida."
  syntax:
    content: public System.ComponentModel.Composition.ImportSource Source { get; set; }
    return:
      type: System.ComponentModel.Composition.ImportSource
      description: "Um valor que especifica os escopos do qual essa importação pode ser atendida."
  overload: System.ComponentModel.Composition.ImportManyAttribute.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute()
  nameWithType: ImportManyAttribute.ImportManyAttribute()
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute()
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute(String)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute(Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute(String,Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String,Type)
- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportManyAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportManyAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportManyAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportManyAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.CreationPolicy
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CreationPolicy
  nameWithType: CreationPolicy
  fullName: System.ComponentModel.Composition.CreationPolicy
- uid: System.ComponentModel.Composition.ImportManyAttribute.Source
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: Source
  nameWithType: ImportManyAttribute.Source
  fullName: System.ComponentModel.Composition.ImportManyAttribute.Source
- uid: System.ComponentModel.Composition.ImportSource
  parent: System.ComponentModel.Composition
  isExternal: false
  name: ImportSource
  nameWithType: ImportSource
  fullName: System.ComponentModel.Composition.ImportSource
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute
  nameWithType: ImportManyAttribute.ImportManyAttribute
- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportManyAttribute.AllowRecomposition
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportManyAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportManyAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportManyAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.ImportManyAttribute.Source*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: Source
  nameWithType: ImportManyAttribute.Source
