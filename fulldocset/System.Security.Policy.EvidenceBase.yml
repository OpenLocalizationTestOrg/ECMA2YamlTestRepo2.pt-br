### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.EvidenceBase
  id: EvidenceBase
  children:
  - System.Security.Policy.EvidenceBase.#ctor
  - System.Security.Policy.EvidenceBase.Clone
  langs:
  - csharp
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
  type: Class
  summary: "Fornece uma classe base da qual todos os objetos a serem usadas como evidência deve derivar."
  remarks: "Antes do [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], praticamente qualquer object pode ser usado como um objeto de evidência se quiser que o código de hospedagem para aplicá-lo como evidência. Por exemplo, um código do .NET Framework reconhecido <xref:System.Uri?displayProperty=fullName>objetos como evidência.</xref:System.Uri?displayProperty=fullName> O common language runtime (CLR) considerados objetos de evidência como <xref:System.Object?displayProperty=fullName>faz referência e não foi aplicada a qualquer tipo de segurança a eles.</xref:System.Object?displayProperty=fullName>       Isso apresentado um problema porque não havia implícita restrições nos quais tipos de podem ser usados como objetos de evidência. Especificamente, qualquer objeto usado como evidência precisava ser serializável e não pôde ser `null`. Se esses requisitos não foram atendidos, o CLR lançou uma exceção sempre que uma operação que exigia um nessas pressuposições foi executada.       A classe EvidenceBase que todos os objetos de evidência devem derivar de, foi introduzida no [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] para habilitar restrições sobre os tipos de objetos que podem ser usados como evidência e fornecer a capacidade de adicionar novos recursos e requisitos para todos os objetos de evidência. A classe EvidenceBase garante, após a instanciação, que o objeto de evidência é serializável. Além disso, ele permite que novos requisitos de evidência a ser criado pela adição de novas implementações padrão para a classe base.       Todos os tipos usados pelo CLR como objetos de evidência foram atualizados a [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] derivar EvidenceBase."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class EvidenceBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.EvidenceBase.#ctor
  id: '#ctor'
  parent: System.Security.Policy.EvidenceBase
  langs:
  - csharp
  name: EvidenceBase()
  nameWithType: EvidenceBase.EvidenceBase()
  fullName: System.Security.Policy.EvidenceBase.EvidenceBase()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Policy.EvidenceBase&quot;> </xref> classe."
  remarks: "Todos os objetos a serem usadas como evidência devem ser serializáveis. Você deve marcar qualquer tipos derivados como serializável, como o atributo serializable não se propagam para classes derivadas."
  syntax:
    content: protected EvidenceBase ();
    parameters: []
  overload: System.Security.Policy.EvidenceBase.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um objeto a ser usado como evidência não é serializável."
  platform:
  - net462
- uid: System.Security.Policy.EvidenceBase.Clone
  id: Clone
  parent: System.Security.Policy.EvidenceBase
  langs:
  - csharp
  name: Clone()
  nameWithType: EvidenceBase.Clone()
  fullName: System.Security.Policy.EvidenceBase.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Cria um novo objeto que é uma cópia completa da instância atual."
  remarks: "A cópia é uma cópia completa que inclui todos os objetos de evidência na coleção."
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "Uma cópia deste objeto de evidência."
  overload: System.Security.Policy.EvidenceBase.Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Policy.EvidenceBase.#ctor
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: EvidenceBase()
  nameWithType: EvidenceBase.EvidenceBase()
  fullName: System.Security.Policy.EvidenceBase.EvidenceBase()
- uid: System.Security.Policy.EvidenceBase.Clone
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: Clone()
  nameWithType: EvidenceBase.Clone()
  fullName: System.Security.Policy.EvidenceBase.Clone()
- uid: System.Security.Policy.EvidenceBase
  parent: System.Security.Policy
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
- uid: System.Security.Policy.EvidenceBase.#ctor*
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase.EvidenceBase
- uid: System.Security.Policy.EvidenceBase.Clone*
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: Clone
  nameWithType: EvidenceBase.Clone
