### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  id: TcpChannel
  children:
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)
  - System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)
  langs:
  - csharp
  name: TcpChannel
  nameWithType: TcpChannel
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  type: Class
  summary: "Fornece uma implementação de canal que usa o protocolo TCP para transmitir mensagens."
  remarks: "Mensagens de transporte de canais entre limites de comunicação remota (por exemplo, entre computadores em domínios de aplicativo). A classe TcpChannel é uma classe de conveniência, combinando a funcionalidade da <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>classe e a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>classe.</xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> </xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>       Canais são usados pela infraestrutura de comunicação remota do .NET Framework para chamadas remotas de transporte. Quando um cliente faz uma chamada para um objeto remoto, a chamada é serializada em uma mensagem que é enviada por um canal do cliente e recebida por um canal do servidor. Em seguida, é desserializado e processado. Os valores retornados são transmitidos pelo canal de servidor e recebidos pelo canal de cliente.       Para executar o processamento adicional de mensagens, você pode especificar as implementações da <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>e <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>por meio da qual todas as mensagens processadas por TcpChannel são passadas.</xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> </xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>       Tempo de execução a um TcpChannel objeto tem propriedades de configuração que podem ser definidas no associadas em um arquivo de configuração (invocando estático <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName>método) ou por meio de programação (passando um <xref:System.Collections.IDictionary>coleção para o <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%2A>construtor).</xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%2A> </xref:System.Collections.IDictionary> </xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> Para obter mais informações sobre propriedades de configuração de canal, consulte [Channel e propriedades de configuração do formatador](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).      > [!NOTE] > Se o computador do servidor está executando o Windows 95/98/Me, o servidor TcpChannel não pode ser especificado como seguras."
  example:
  - "The following code example shows how to use a TcpChannel to set up a remoting server and its client. The example contains three parts, a server, a client, and a remote object used by the server and the client.  \n  \n The following code example shows a server:  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#1](~/add/codesnippet/csharp/t-system.runtime.remotin_20_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#1](~/add/codesnippet/cpp/t-system.runtime.remotin_20_1.cpp)]  \n  \n The following code example shows a client for this server:  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#10](~/add/codesnippet/csharp/t-system.runtime.remotin_20_2.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#10](~/add/codesnippet/cpp/t-system.runtime.remotin_20_2.cpp)]  \n  \n The following code example shows the remote object used by the server and the client:  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#20](~/add/codesnippet/cpp/t-system.runtime.remotin_20_3.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#20](~/add/codesnippet/csharp/t-system.runtime.remotin_20_3.cs)]"
  syntax:
    content: 'public class TcpChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Remoting.Channels.IChannelReceiver
  - System.Runtime.Remoting.Channels.IChannelSender
  - System.Runtime.Remoting.Channels.ISecurableChannel
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: TcpChannel()
  nameWithType: TcpChannel.TcpChannel()
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.TcpChannel()
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Remoting.Channels.Tcp.TcpChannel&quot;> </xref> classe, ativando um canal de cliente e não um canal do servidor."
  remarks: "O construtor padrão inicializa todos os campos com seus valores padrão. Se o construtor padrão for usado, o canal funciona apenas como um canal de cliente e não realizar a escuta em qualquer porta."
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#11](~/add/codesnippet/csharp/m-system.runtime.remotin_33_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#11](~/add/codesnippet/cpp/m-system.runtime.remotin_33_1.cpp)]"
  syntax:
    content: public TcpChannel ();
    parameters: []
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: TcpChannel(Int32)
  nameWithType: TcpChannel.TcpChannel(Int32)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.TcpChannel(Int32)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Remoting.Channels.Tcp.TcpChannel&quot;> </xref> classe com um canal de servidor que escuta na porta especificada."
  remarks: "Para solicitar que o sistema de comunicação remota escolha uma porta aberta em seu nome, especifique a porta 0 (zero). Isso criará uma <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>instância para escutar as solicitações na porta atribuída dinamicamente.</xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> Isso geralmente é feito no cliente para certificar-se de que um <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>está escutando para métodos de retorno de chamada.</xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>       Se for 0, é transmitido ao construtor de <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>instância para usar uma porta de livre.</xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>"
  example:
  - "The following code example demonstrates using this method. To request that an available port be dynamically assigned, set the `port` parameter to zero.  \n  \n [!code-cpp[RemotingConfiguration.ServerActivation#2](~/add/codesnippet/cpp/m-system.runtime.remotin_94_1.cpp)]\n [!code-cs[RemotingConfiguration.ServerActivation#2](~/add/codesnippet/csharp/m-system.runtime.remotin_94_1.cs)]\n [!code-vb[RemotingConfiguration.ServerActivation#2](~/add/codesnippet/visualbasic/m-system.runtime.remotin_94_1.vb)]"
  syntax:
    content: public TcpChannel (int port);
    parameters:
    - id: port
      type: System.Int32
      description: "A porta de escuta de canal do servidor."
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: TcpChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  nameWithType: TcpChannel.TcpChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.TcpChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Remoting.Channels.Tcp.TcpChannel&quot;> </xref> classe com as propriedades de configuração especificada e coletores."
  remarks: "Para obter mais informações sobre propriedades de configuração de canal, consulte [Channel e propriedades de configuração do formatador](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).      > [!NOTE] > Se o computador do servidor está executando o Windows 95/98/Me, o servidor <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>não pode ser especificada como segura.</xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>       Coletores de canal fornecem um ponto de plug-in que permite o acesso às mensagens subjacentes que fluem através do canal, bem como o fluxo usado pelo mecanismo de transporte para enviar mensagens para um objeto remoto. Coletores de canal também são responsáveis pelo transporte de mensagens entre o cliente e o servidor. Coletores de canal vinculadas em uma cadeia e todos os canais fluxo de mensagens por meio dessa cadeia de Coletores antes da mensagem é finalmente serializada e transportada. Se não precisar da funcionalidade do coletor, defina o `clientSinkProvider` e `serverSinkProvider` parâmetros para `null`."
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel2#1](~/add/codesnippet/csharp/a59b945a-521d-44ce-a81e-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel2#1](~/add/codesnippet/cpp/a59b945a-521d-44ce-a81e-_1.cpp)]"
  syntax:
    content: public TcpChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>coleção que especifica valores para propriedades de configuração a ser usado pelos canais de cliente e servidor.</xref:System.Collections.IDictionary>"
    - id: clientSinkProvider
      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
      description: "O <xref href=&quot;System.Runtime.Remoting.Channels.IClientChannelSinkProvider&quot;> </xref> implementação a ser usado pelo canal de cliente."
    - id: serverSinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "O <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref> implementação a ser usado pelo canal de servidor."
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uma propriedade de canal fornecido foi formatada incorretamente."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData
  id: ChannelData
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: ChannelData
  nameWithType: TcpChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "Obtém os dados específicos do canal."
  remarks: "Embora retornado como uma instância de <xref:System.Object?displayProperty=fullName>, o valor dessa propriedade pode ser convertido em uma instância de <xref:System.Runtime.Remoting.Channels.ChannelDataStore>que descreve o canal ao qual o <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel>objeto escuta.</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> </xref:System.Runtime.Remoting.Channels.ChannelDataStore> </xref:System.Object?displayProperty=fullName>"
  example:
  - "The following code example shows how to use this property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#5](~/add/codesnippet/csharp/p-system.runtime.remotin_2_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#5](~/add/codesnippet/cpp/p-system.runtime.remotin_2_1.cpp)]"
  syntax:
    content: public object ChannelData { get; }
    return:
      type: System.Object
      description: "Um <xref href=&quot;System.Runtime.Remoting.Channels.ChannelDataStore&quot;> </xref> instância que contém dados específicos do canal."
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: TcpChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "Obtém o nome do canal atual."
  remarks: "Cada canal registrado tem um nome exclusivo. O nome é usado para recuperar um canal específico ao chamar <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> Para definir a propriedade ChannelName, atribua o valor para o &quot;nome&quot; indexadas propriedade no dicionário transmitido para o <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%28System.Collections.IDictionary%2CSystem.Runtime.Remoting.Channels.IClientChannelSinkProvider%2CSystem.Runtime.Remoting.Channels.IServerChannelSinkProvider%29>construtor.</xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%28System.Collections.IDictionary%2CSystem.Runtime.Remoting.Channels.IClientChannelSinkProvider%2CSystem.Runtime.Remoting.Channels.IServerChannelSinkProvider%29>"
  example:
  - "The following code example shows how to use this property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#3](~/add/codesnippet/csharp/p-system.runtime.remotin_65_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#3](~/add/codesnippet/cpp/p-system.runtime.remotin_65_1.cpp)]"
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: "Um <xref:System.String>que contém o nome do canal.</xref:System.String>"
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: TcpChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "Obtém a prioridade do canal atual."
  remarks: ''
  example:
  - "The following code example shows how to use this property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#4](~/add/codesnippet/csharp/p-system.runtime.remotin_50_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#4](~/add/codesnippet/cpp/p-system.runtime.remotin_50_1.cpp)]"
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: "Um inteiro que representa a prioridade atribuída ao canal."
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)
  id: CreateMessageSink(System.String,System.Object,System.String@)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: CreateMessageSink(String,Object,String)
  nameWithType: TcpChannel.CreateMessageSink(String,Object,String)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(String,Object,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "Retorna um coletor de mensagem de canal que entrega mensagens para o objeto de dados de URL ou canal especificado."
  remarks: "O método CreateMessageSink retorna um coletor de mensagem de canal que entrega mensagens para a URL especificada ou o objeto de canal de dados. Se o `uri` parâmetro é `null`, `remoteChannelData` é usado como um destino para o coletor. Tanto o `url` ou `remoteChannelData` parâmetros podem ser `null`, mas não ambos.       Coletores de canal fornecem um ponto de plug-in que permite o acesso às mensagens subjacentes que fluem através do canal, bem como o fluxo usado pelo mecanismo de transporte para enviar mensagens para um objeto remoto. Coletores de canal vinculadas em uma cadeia de `ChannelSinkProviders` e todos os fluxo de mensagens por meio dessa cadeia de Coletores de canal antes da mensagem é finalmente serializada e transportada."
  example:
  - "The following code example shows how to use this method.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#12](~/add/codesnippet/csharp/73bdeed3-70ff-41b4-8d48-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#12](~/add/codesnippet/cpp/73bdeed3-70ff-41b4-8d48-_1.cpp)]"
  syntax:
    content: public System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "A URL à qual o novo coletor deve entregar mensagens. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: remoteChannelData
      type: System.Object
      description: "O objeto de dados de canal do host remoto para o qual o novo coletor deve entregar mensagens. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: objectURI
      type: System.String
      description: "Quando este método retorna, contém um URI do novo coletor de mensagem de canal que envia mensagens para a URL especificada ou o objeto de dados de canal. Esse parâmetro é passado não inicializado."
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "Um coletor de mensagem de canal que entrega mensagens para o objeto de dados de URL ou canal especificado."
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)
  id: GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: GetUrlsForUri(String)
  nameWithType: TcpChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "Retorna uma matriz de todas as URLs de um objeto com o URI especificado, hospedado em atual <xref href=&quot;System.Runtime.Remoting.Channels.Tcp.TcpChannel&quot;> </xref>."
  remarks: "Esse método é usado pelo <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>.</xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>"
  example:
  - "The following code example shows how to use this method.  \n  \n [!code-cs[TcpChannel.GetUrlsForUri#1](~/add/codesnippet/csharp/m-system.runtime.remotin_3_1.cs)]\n [!code-vb[TcpChannel.GetUrlsForUri#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_3_1.vb)]\n [!code-cpp[TcpChannel.GetUrlsForUri#1](~/add/codesnippet/cpp/m-system.runtime.remotin_3_1.cpp)]"
  syntax:
    content: public string[] GetUrlsForUri (string objectURI);
    parameters:
    - id: objectURI
      type: System.String
      description: "O URI do objeto para o qual as URLs são necessários."
    return:
      type: System.String[]
      description: "Uma matriz de URLs para um objeto com o URI especificado, hospedado em atual <xref href=&quot;System.Runtime.Remoting.Channels.Tcp.TcpChannel&quot;> </xref>."
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured
  id: IsSecured
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: IsSecured
  nameWithType: TcpChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "Obtém ou define um valor booliano que indica se o canal atual é seguro."
  remarks: "Essa propriedade não precisa ser definida explicitamente, conforme é suficiente definir o parâmetro ensureSecurity de <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>.</xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>"
  syntax:
    content: public bool IsSecured { get; set; }
    return:
      type: System.Boolean
      description: "Um valor booliano que indica se a instância atual é segura."
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: Parse(String,String)
  nameWithType: TcpChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "Extrai o URI do canal e o objeto remoto conhecido URI da URL especificada."
  remarks: "Um URI de um objeto é um valor que identifica exclusivamente uma instância de objeto específico."
  example:
  - "The following code example shows how to use this method.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpChannel#6](~/add/codesnippet/csharp/2b3d57e7-01ce-48be-88d4-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#6](~/add/codesnippet/cpp/2b3d57e7-01ce-48be-88d4-_1.cpp)]"
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "A URL do qual extrair o URI do objeto remoto conhecido."
    - id: objectURI
      type: System.String
      description: "Quando este método retorna, contém um <xref:System.String>que contém o URI do objeto remoto conhecido.</xref:System.String> Esse parâmetro é passado não inicializado."
    return:
      type: System.String
      description: "O URI do canal atual."
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: TcpChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "Instrui o canal atual ao iniciar a escuta de solicitações."
  remarks: "Não é necessário chamar este método para começar a escutar em um canal recentemente inicializado.       Use esse método para reiniciar a escuta em um canal após o <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A>método foi chamado.</xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A>       Se o seu canal usa um número de porta atribuída dinamicamente, o número da porta pode mudar quando você reiniciar a escuta.       O `data` parâmetro pode ser usado para passar um estado de inicialização específico para o canal. Se você não deseja transmitir um estado específico para o canal, defina `data` para `null`."
  syntax:
    content: public void StartListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Informações de inicialização opcional."
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: TcpChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: "Instrui o canal atual para parar a escuta de solicitações."
  remarks: "Use esse método para parar um canal de escuta. Para reiniciar a escuta, use o <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A>método.</xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A>       Se o seu canal usa um número de porta atribuída dinamicamente, o número da porta pode mudar quando você reiniciar a escuta.       O `data` parâmetro pode ser usado para passar um estado de inicialização específico para o canal. Se você não deseja transmitir um estado específico para o canal, defina `data` para `null`."
  syntax:
    content: public void StopListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Informações de estado opcional para o canal."
  overload: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: TcpChannel()
  nameWithType: TcpChannel.TcpChannel()
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.TcpChannel()
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: TcpChannel(Int32)
  nameWithType: TcpChannel.TcpChannel(Int32)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.TcpChannel(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: TcpChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  nameWithType: TcpChannel.TcpChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.TcpChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IClientChannelSinkProvider
  nameWithType: IClientChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkProvider
  nameWithType: IServerChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: ChannelData
  nameWithType: TcpChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: ChannelName
  nameWithType: TcpChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: TcpChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: CreateMessageSink(String,Object,String)
  nameWithType: TcpChannel.CreateMessageSink(String,Object,String)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(String,Object,String)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: GetUrlsForUri(String)
  nameWithType: TcpChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: IsSecured
  nameWithType: TcpChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: Parse(String,String)
  nameWithType: TcpChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(String,String)
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: StartListening(Object)
  nameWithType: TcpChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(Object)
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: StopListening(Object)
  nameWithType: TcpChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(Object)
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: TcpChannel
  nameWithType: TcpChannel.TcpChannel
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: ChannelData
  nameWithType: TcpChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: ChannelName
  nameWithType: TcpChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: TcpChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: CreateMessageSink
  nameWithType: TcpChannel.CreateMessageSink
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: GetUrlsForUri
  nameWithType: TcpChannel.GetUrlsForUri
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: IsSecured
  nameWithType: TcpChannel.IsSecured
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: Parse
  nameWithType: TcpChannel.Parse
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: StartListening
  nameWithType: TcpChannel.StartListening
- uid: System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpChannel
  isExternal: false
  name: StopListening
  nameWithType: TcpChannel.StopListening
