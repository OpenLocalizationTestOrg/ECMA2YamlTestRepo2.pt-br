### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs
  id: FormViewInsertedEventArgs
  children:
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  langs:
  - csharp
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs
  type: Class
  summary: "Fornece dados para o <xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserted&quot;> </xref> eventos."
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controlar gera o <xref:System.Web.UI.WebControls.FormView.ItemInserted>evento quando um botão de inserção (um botão com sua `CommandName` propriedade definida como &quot;Inserir&quot;) dentro do controle é clicado, mas após o <xref:System.Web.UI.WebControls.FormView>controle inserir o registro.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView> Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como verificar os resultados de uma operação de inserção, sempre que esse evento ocorre.       Um objeto FormViewInsertedEventArgs é passado para o método de manipulação de eventos, que permite que você determine o número de registros afetados e todas as exceções que possam ter ocorrido. Para determinar o número de registros afetados pela operação de inserção, use o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> Use o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>propriedade para determinar se todas as exceções ocorreram.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> Você também pode indicar se a exceção foi tratada no método de manipulação de eventos, definindo o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> Se você precisar acessar os valores do registro inserido, use o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>       Por padrão, o <xref:System.Web.UI.WebControls.FormView>o controle retorna ao modo especificado pelo <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>propriedade após uma operação de inserção.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Se ocorrer uma exceção durante a operação de inserção, você poderá manter o <xref:System.Web.UI.WebControls.FormView>controle no modo de inserção, definindo o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>propriedade `true`.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormView>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Para obter uma lista de valores de propriedade inicial para uma instância do <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>de classe, consulte o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A>construtor.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>"
  example:
  - "The following example demonstrates how to use the FormViewInsertedEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemInserted> event to determine whether an exception occurred during an insert operation.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_252_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_252_1.aspx)]"
  syntax:
    content: 'public class FormViewInsertedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: FormViewInsertedEventArgs(Int32,Exception)
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.FormViewInsertedEventArgs&quot;> </xref> classe."
  remarks: "Use este construtor para inicializar uma nova instância de <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>classe.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>       A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>| O valor de `affectedRows` parâmetro. |   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>| O objeto <xref:System.Exception?displayProperty=fullName>contido no `e` parâmetro. |   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>| Inicializado para `false`. |   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>| Inicializado para `false`. |      > [!NOTE] > Este construtor é usado principalmente por desenvolvedores de controle quando gerar eventos.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> </xref:System.Exception?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>"
  syntax:
    content: public FormViewInsertedEventArgs (int affectedRows, Exception e);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "O número de linhas afetadas pela operação de inserção."
    - id: e
      type: System.Exception
      description: "Um <xref:System.Exception>que representa a exceção gerada quando a operação de inserção foi executada.</xref:System.Exception> Se nenhuma exceção foi gerada, use <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para esse parâmetro."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o número de linhas afetadas pela operação de inserção."
  remarks: "Use a propriedade AffectedRows para determinar o número de registros afetados pela operação de inserção. Essa propriedade normalmente é usada para verificar se o número correto de registros foram inserido nas seguintes situações:-Verifique se apenas um único registro foi inserido. Às vezes, uma instrução insert escrito incorretamente pode inserir vários registros.      -Verifique se um registro foi inserido quando ocorre um erro durante a operação de inserção que não gera uma exceção.      -Verifique se um registro foi inserido quando um controle de fonte de dados que dá suporte a detecção de conflito (concorrência otimista), como o <xref:System.Web.UI.WebControls.SqlDataSource>e <xref:System.Web.UI.WebControls.ObjectDataSource>controla, tem seu <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>propriedade definida como o `ConflictOptions.CompareAllValues` valor de enumeração.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> Sob essa configuração, não pode ser inserido um registro que tem o mesmo valor de chave como um registro por outro usuário ao mesmo tempo."
  example:
  - "The following example demonstrates how to use the AffectedRows property to verify that a record was inserted during the insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_880_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_880_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "O número de linhas afetadas pela operação de inserção."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a exceção (se houver) que foi gerado durante a operação de inserção."
  remarks: "Use a propriedade de exceção para determinar a exceção (se houver) que foi gerado durante a operação de inserção. Se nenhuma exceção foi gerada, essa propriedade retornará `null`.      > [!NOTE] > Se uma exceção foi gerada e optar por tratar a exceção no manipulador de eventos, certifique-se de definir o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>propriedade `true`; caso contrário, o <xref:System.Web.UI.WebControls.FormView>controle gera novamente a exceção.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>"
  example:
  - "The following example demonstrates how to use the Exception property to determine whether an exception was raised during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_372_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_372_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "Um <xref:System.Exception>que representa a exceção foi elevada durante a operação de inserção.</xref:System.Exception>"
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se uma exceção foi elevada durante a operação de inserção foi manipulada no evento manipulador."
  remarks: "Quando uma exceção é gerada durante a operação de inserção, use a propriedade ExceptionHandled para indicar se a exceção foi tratada no evento manipulador. Quando essa propriedade é definida como `true`, a exceção será considerada tratadas e não é gerada novamente. Se essa propriedade é definida como `false`, o <xref:System.Web.UI.WebControls.FormView>controle gera novamente a exceção.</xref:System.Web.UI.WebControls.FormView> Para determinar qual exceção foi gerada, use o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>"
  example:
  - "The following example demonstrates how to use the ExceptionHandled property to indicate that the exception was handled in the event handler.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_826_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_826_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a exceção foi tratada no evento manipulador; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  id: KeepInInsertMode
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle deve permanecer no modo de inserção após uma operação de inserção."
  remarks: "Por padrão, o <xref:System.Web.UI.WebControls.FormView>o controle retorna ao modo especificado pelo <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Use a propriedade KeepInInsertMode para especificar se o <xref:System.Web.UI.WebControls.FormView>controle deve permanecer no modo de inserção após uma operação de inserção.</xref:System.Web.UI.WebControls.FormView> Para manter o <xref:System.Web.UI.WebControls.FormView>controle no modo de inserção, defina essa propriedade como `true`.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > Essa propriedade deve ser usada somente quando uma situação ocorre (por exemplo, uma exceção seja gerada) que requer que o controle para se comportar de maneira diferente que normalmente. Se o <xref:System.Web.UI.WebControls.FormView>controle precisa permanecer no modo de inserção, por padrão, defina o <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>propriedade em vez disso.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the KeepInInsertMode property to keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode when an exception occurs during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_181_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_181_1.aspx)]"
  syntax:
    content: public bool KeepInInsertMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para permanecer no modo de inserção após uma operação de inserção; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  id: Values
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um dicionário que contém pares de nome/valor do campo para o registro inserido."
  remarks: "Use a propriedade de valores para acessar os valores dos campos do registro inserido. Por exemplo, você pode usar esses valores para manter um registro de registros inseridos.       A propriedade retorna valores um <xref:System.Collections.Specialized.OrderedDictionary>objeto que implementa o <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>interface.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> O <xref:System.Collections.Specialized.OrderedDictionary>contém objeto <xref:System.Collections.DictionaryEntry?displayProperty=fullName>objetos que representam os campos do registro inserido.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Para acessar os nomes de campo, use o <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>propriedade o <xref:System.Collections.Specialized.OrderedDictionary>objeto.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Da mesma forma, você pode acessar os valores do campo usando o <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>propriedade.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] > Como um atalho, você também pode usar o indexador de <xref:System.Collections.Specialized.OrderedDictionary>objeto para acessar o campo valores diretamente.</xref:System.Collections.Specialized.OrderedDictionary> A vantagem de usar o indexador é que ela retorna valores de campo diretamente. Controles que contam com a ordem dos campos da fonte de dados (como <xref:System.Web.UI.WebControls.AccessDataSource>) pode acessar os valores do campo somente por índice.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to iterate through the items in the Values collection.  \n  \n [!code-vb[FormViewInsertedEventArgsValues#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1339_1.aspx)]\n [!code-cs[FormViewInsertedEventArgsValues#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1339_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Values { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Um <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> objeto que contém um dicionário de pares de nome/valor do campo de chave do registro inserido."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: FormViewInsertedEventArgs(Int32,Exception)
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
