### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.BitVector32
  id: BitVector32
  children:
  - System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  - System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateMask
  - System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Data
  - System.Collections.Specialized.BitVector32.Equals(System.Object)
  - System.Collections.Specialized.BitVector32.GetHashCode
  - System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Item(System.Int32)
  - System.Collections.Specialized.BitVector32.ToString
  - System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  langs:
  - csharp
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
  type: Struct
  summary: "Fornece uma estrutura simples que armazena valores booleanos e inteiros pequenos em 32 bits de memória."
  remarks: "BitVector32 é mais eficiente que <xref:System.Collections.BitArray>para valores booleanos e inteiros pequenos que são usados internamente.</xref:System.Collections.BitArray> Um <xref:System.Collections.BitArray>pode crescer indefinidamente, conforme necessário, mas tem a sobrecarga de memória e desempenho que requer uma instância da classe.</xref:System.Collections.BitArray> Em contraste, uma BitVector32 usa somente de 32 bits.       Uma estrutura de BitVector32 pode ser definida se para conter seções de inteiros pequenos ou sinalizadores de bit para valores booleanos, mas não ambos. Um <xref:System.Collections.Specialized.BitVector32.Section>é uma janela para o BitVector32 e é composto do menor número de bits consecutivos que pode conter o valor máximo especificado em <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</xref:System.Collections.Specialized.BitVector32.CreateSection%2A> </xref:System.Collections.Specialized.BitVector32.Section> Por exemplo, uma seção com um valor máximo de 1 é composta de apenas um bit, enquanto uma seção com um valor máximo de 5 é composta de três bits. Você pode criar um <xref:System.Collections.Specialized.BitVector32.Section>com um valor máximo de 1 para servir como um booliano, permitindo armazenar inteiros e booleanos no mesmo BitVector32.</xref:System.Collections.Specialized.BitVector32.Section>       Alguns membros podem ser usados para um BitVector32 que é configurado como seções, enquanto outros membros podem ser usados para um que é configurado como sinalizadores de bit. Por exemplo, o <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>propriedade é o indexador um BitVector32 que é configurado como seções, e o <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>propriedade é o indexador um BitVector32 que é configurado como sinalizadores de bit.</xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> </xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> <xref:System.Collections.Specialized.BitVector32.CreateMask%2A>cria uma série de máscaras que pode ser usado para acessar os bits individuais em um BitVector32 que é configurado como sinalizadores de bit.</xref:System.Collections.Specialized.BitVector32.CreateMask%2A>       Usando uma máscara em uma BitVector32 que está configurado como seções podem causar resultados inesperados."
  example:
  - "The following code example uses a BitVector32 as a collection of bit flags.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/csharp/t-system.collections.spe_10_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_1.vb)]\n [!code-cpp[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/cpp/t-system.collections.spe_10_1.cpp)]  \n  \n The following code example uses a BitVector32 as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/t-system.collections.spe_10_2.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/t-system.collections.spe_10_2.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_2.vb)]"
  syntax:
    content: public struct BitVector32
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  id: '#ctor(System.Collections.Specialized.BitVector32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> estrutura que contém os dados representados em existente <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> estrutura."
  remarks: "Este construtor é uma operação de (1)."
  syntax:
    content: public BitVector32 (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "Um <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> estrutura que contém os dados a serem copiados."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> estrutura que contém os dados representados em um número inteiro."
  remarks: "Este construtor é uma operação de (1)."
  syntax:
    content: public BitVector32 (int data);
    parameters:
    - id: data
      type: System.Int32
      description: "Um inteiro que representa os dados do novo <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask
  id: CreateMask
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Cria a primeira máscara em uma série de máscaras que pode ser usado para recuperar o bits individuais em um <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> que é configurado como sinalizadores de bit."
  remarks: "Use `CreateMask()` para criar a primeira máscara em uma série e `CreateMask(int)` para todas as máscaras subsequentes.       Máscaras de múltiplos podem ser criadas para consultar o mesmo sinalizador de bit.       A máscara resultante isola o sinalizador de um bit apenas em <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> Você pode combinar máscaras usando a operação OR bit a bit para criar uma máscara que isola vários sinalizadores de bit em <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32>       Usando uma máscara em uma <xref:System.Collections.Specialized.BitVector32>que é configurada como seções podem causar resultados inesperados.</xref:System.Collections.Specialized.BitVector32>       Esse método é uma operação de (1)."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_3_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_3_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_3_1.vb)]"
  syntax:
    content: public static int CreateMask ();
    parameters: []
    return:
      type: System.Int32
      description: "Uma máscara que isola o primeiro sinalizador de bit no <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  id: CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Cria uma máscara adicional a seguir a máscara especificada em uma série de máscaras que pode ser usado para recuperar o bits individuais em um <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> que é configurado como sinalizadores de bit."
  remarks: "Use `CreateMask()` para criar a primeira máscara em uma série e `CreateMask(int)` para todas as máscaras subsequentes.       Máscaras de múltiplos podem ser criadas para consultar o mesmo sinalizador de bit.       A máscara resultante isola o sinalizador de um bit apenas em <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> Você pode combinar máscaras usando a operação OR bit a bit para criar uma máscara que isola vários sinalizadores de bit em <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32>       Usando uma máscara em uma <xref:System.Collections.Specialized.BitVector32>que é configurada como seções podem causar resultados inesperados.</xref:System.Collections.Specialized.BitVector32>       Esse método é uma operação de (1)."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_5_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_5_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_5_1.vb)]"
  syntax:
    content: public static int CreateMask (int previous);
    parameters:
    - id: previous
      type: System.Int32
      description: "A máscara que indica o sinalizador de bit anterior."
    return:
      type: System.Int32
      description: "Uma máscara que isola o bit de sinalizador seguindo o <code> previous </code> pontos na <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>previous</code>indica o último sinalizador de bit de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  id: CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Cria a primeira <xref:System.Collections.Specialized.BitVector32.Section>em uma série de seções que contêm números inteiros pequenos.</xref:System.Collections.Specialized.BitVector32.Section>"
  remarks: "A <xref:System.Collections.Specialized.BitVector32.Section>é uma janela para o <xref:System.Collections.Specialized.BitVector32>e é composto do menor número de bits consecutivos que pode conter o valor máximo especificado em CreateSection.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32.Section> Por exemplo, uma seção com um valor máximo de 1 é composta de apenas um bit, enquanto uma seção com um valor máximo de 5 é composta de três bits. Você pode criar uma <xref:System.Collections.Specialized.BitVector32.Section>com um valor máximo de 1 para servir como um booliano, permitindo assim que repositório inteiros e booleanos na mesma <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32.Section>       Se já existirem seções no <xref:System.Collections.Specialized.BitVector32>, essas seções ainda são acessíveis; no entanto, a sobreposição de seções pode causar resultados inesperados.</xref:System.Collections.Specialized.BitVector32>       Esse método é uma operação de (1)."
  example:
  - "The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/m-system.collections.spe_18_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/m-system.collections.spe_18_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/m-system.collections.spe_18_1.vb)]"
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "Um inteiro assinado de 16 bits que especifica o valor máximo para o novo <xref:System.Collections.Specialized.BitVector32.Section>.</xref:System.Collections.Specialized.BitVector32.Section>"
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "Um <xref:System.Collections.Specialized.BitVector32.Section>que pode conter um número de zero a <code> maxValue </code>.</xref:System.Collections.Specialized.BitVector32.Section>"
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>maxValue</code>é menor que 1."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  id: CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue, System.Collections.Specialized.BitVector32.Section previous);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "A ser adicionado."
    - id: previous
      type: System.Collections.Specialized.BitVector32.Section
      description: "A ser adicionado."
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "A ser adicionado."
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Data
  id: Data
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém o valor da <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> como um inteiro."
  remarks: "Para acessar o valor das seções individuais ou sinalizadores de bit, use o <xref:System.Collections.Specialized.BitVector32.Item%2A>propriedade.</xref:System.Collections.Specialized.BitVector32.Item%2A>       Recuperar o valor dessa propriedade é uma operação de (1)."
  syntax:
    content: public int Data { get; }
    return:
      type: System.Int32
      description: "O valor de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> como um inteiro."
  overload: System.Collections.Specialized.BitVector32.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Determina se o objeto especificado é igual de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "O objeto `o` é considerado igual de <xref:System.Collections.Specialized.BitVector32>se o tipo de `o` é compatível com o <xref:System.Collections.Specialized.BitVector32>tipo e se o valor de `o` é igual ao valor de <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       Esse método é uma operação de (1)."
  example:
  - "The following code example compares a <xref:System.Collections.Specialized.BitVector32> with another <xref:System.Collections.Specialized.BitVector32> and with an <xref:System.Int32>.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/cpp/m-system.collections.spe_34_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/csharp/m-system.collections.spe_34_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/visualbasic/m-system.collections.spe_34_1.vb)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "O objeto a ser comparado com o atual <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto especificado for igual de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  id: GetHashCode
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Serve como uma função de hash para o <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "O código hash de um <xref:System.Collections.Specialized.BitVector32>é baseado no valor de <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32> Duas instâncias do <xref:System.Collections.Specialized.BitVector32>com o mesmo valor para <xref:System.Collections.Specialized.BitVector32.Data%2A>também gerará o mesmo código de hash.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32>       Esse método é uma operação de (1)."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash para o <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  id: Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public int this[System.Collections.Specialized.BitVector32.Section section] { get; set; }
    parameters:
    - id: section
      type: System.Collections.Specialized.BitVector32.Section
      description: "A ser adicionado."
    return:
      type: System.Int32
      description: "A ser adicionado."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém ou define o estado do sinalizador de bit indicado à máscara especificada."
  remarks: "A propriedade Item [seção] é o indexador um <xref:System.Collections.Specialized.BitVector32>que é definido como seções, e a propriedade Item [int] é o indexador um <xref:System.Collections.Specialized.BitVector32>que é configurado como sinalizadores de bit.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       Usando essa propriedade em um <xref:System.Collections.Specialized.BitVector32>que é configurada como seções podem causar resultados inesperados.</xref:System.Collections.Specialized.BitVector32>       A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar a propriedade do Item. Visual Basic implementa um Item como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.       Recuperar o valor dessa propriedade é uma operação de (1); definindo a propriedade também é uma operação de (1)."
  syntax:
    content: public bool this[int bit] { get; set; }
    parameters:
    - id: bit
      type: System.Int32
      description: "Uma máscara que indica o bit para obter ou definir."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o sinalizador de bits especificado está em (1); Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString
  id: ToString
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retorna uma cadeia de caracteres que representa o atual <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Esse método substitui <xref:System.Object.ToString%2A?displayProperty=fullName>.</xref:System.Object.ToString%2A?displayProperty=fullName>       Esse método é uma operação de (1)."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o atual <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  id: ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retorna uma cadeia de caracteres que representa a <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Esse método é uma operação de (1)."
  syntax:
    content: public static string ToString (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "O <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> representar."
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa a <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
- uid: System.Collections.Specialized.BitVector32
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.BitVector32.CreateMask
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
- uid: System.Collections.Specialized.BitVector32.Section
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32+Section
  nameWithType: BitVector32+Section
  fullName: System.Collections.Specialized.BitVector32+Section
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Data
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
- uid: System.Collections.Specialized.BitVector32.ToString
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
- uid: System.Collections.Specialized.BitVector32.#ctor*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32.BitVector32
- uid: System.Collections.Specialized.BitVector32.CreateMask*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask
  nameWithType: BitVector32.CreateMask
- uid: System.Collections.Specialized.BitVector32.CreateSection*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection
  nameWithType: BitVector32.CreateSection
- uid: System.Collections.Specialized.BitVector32.Data*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals
  nameWithType: BitVector32.Equals
- uid: System.Collections.Specialized.BitVector32.GetHashCode*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode
  nameWithType: BitVector32.GetHashCode
- uid: System.Collections.Specialized.BitVector32.Item*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item
  nameWithType: BitVector32.Item
- uid: System.Collections.Specialized.BitVector32.ToString*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString
  nameWithType: BitVector32.ToString
