### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  id: Saml2SecurityTokenHandler
  children:
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute})
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.Saml2SecurityToken)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.Saml2SecurityToken)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.Saml2AttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.Saml2AuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.Saml2Subject,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement},System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Attribute)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Assertion)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(System.Xml.XmlReader,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.Saml2Attribute,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.Saml2Conditions,System.Boolean)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Action)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Advice)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Assertion)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Attribute)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AttributeStatement)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.Saml2Attribute)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AudienceRestriction)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationContext)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationStatement)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Conditions)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Evidence)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2ProxyRestriction)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Statement)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Subject)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmation)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectLocality)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: Saml2SecurityTokenHandler
  nameWithType: Saml2SecurityTokenHandler
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  type: Class
  summary: "Representa um manipulador de token de segurança que cria tokens de segurança de declarações do SAML 2.0."
  remarks: "A classe Saml2SecurityTokenHandler serializa e desserializa os tokens de segurança com o apoio de asserção do SAML 2.0 em <xref:System.IdentityModel.Tokens.Saml2SecurityToken>objetos.</xref:System.IdentityModel.Tokens.Saml2SecurityToken> Manipuladores de token de segurança serão responsáveis por criar, ler, gravar e validar tokens.       Você pode configurar um serviço de token de segurança (STS) ou a terceira parte confiável (RP) aplicativo processe a segurança de asserção SAML 2.0 com backup tokens com a adição de uma instância da classe Saml2SecurityTokenHandler para o <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>configurado para o serviço (ou aplicativo) do objeto.</xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> Isso pode ser feito por meio de programação ou no arquivo de configuração. O manipulador em si está configurado da configuração especificada para a coleção por meio da coleção <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A>propriedade quando ele é adicionado à coleção.</xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A> Embora seja possível configurar o manipulador individualmente, definindo seu <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A>propriedade, isso não é geralmente necessário; no entanto, se o manipulador deve ser configurado individualmente, a propriedade deve ser definida depois que o manipulador é adicionado à coleção.</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A>       Para muitos cenários, a classe Saml2SecurityTokenHandler pode ser usada como-é; No entanto, a classe fornece que muitos pontos de extensão por meio dos métodos ele expõe. Derivando de Saml2SecurityTokenHandler e substituindo os métodos específicos, você pode modificar a funcionalidade do processamento de token fornecido na implementação do padrão, ou você pode adicionar o processamento de extensões para a especificação de asserção SAML que pode ser necessário em alguns cenários personalizados."
  syntax:
    content: 'public class Saml2SecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: Saml2SecurityTokenHandler()
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.Saml2SecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityTokenHandler&quot;> </xref> classe com requisitos de token de segurança padrão."
  remarks: "O <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement%2A>propriedade é definida como uma instância de <xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement>que é criado com o construtor padrão.</xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement> </xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement%2A>"
  syntax:
    content: public Saml2SecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  id: '#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)'
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityTokenHandler&quot;> </xref> classe com os requisitos de token de segurança especificados."
  syntax:
    content: public Saml2SecurityTokenHandler (System.IdentityModel.Tokens.SamlSecurityTokenRequirement samlSecurityTokenRequirement);
    parameters:
    - id: samlSecurityTokenRequirement
      type: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
      description: "O <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenRequirement&quot;> </xref> para ser usada por essa instância para validar tokens. Conjuntos de <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement*>propriedade.</xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement*>"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSecurityTokenRequirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: AddDelegateToAttributes(ClaimsIdentity,ICollection<Saml2Attribute>,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<Saml2Attribute>,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<Saml2Attribute>,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Adiciona todos os delegados associados com o assunto para a coleção de atributos."
  syntax:
    content: protected virtual void AddDelegateToAttributes (System.Security.Claims.ClaimsIdentity subject, System.Collections.Generic.ICollection<System.IdentityModel.Tokens.Saml2Attribute> attributes, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "O representante deste <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> objeto será serializado em uma <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref>."
    - id: attributes
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute}
      description: "Uma coleção de tipo <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref>."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "O descritor do token."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subject</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Indica se o elemento XML atual está apontando para uma cláusula de identificador de chave que pode ser serializada por esta instância."
  syntax:
    content: public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um leitor de XML posicionado no elemento de início."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause*>método pode ler o elemento; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause*>"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Indica se o elemento XML atual pode ser lido como um token do tipo tratado por esta instância."
  syntax:
    content: public override bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um leitor de XML posicionado em um elemento de início. O leitor não deve ser avançado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken*>método pode ler o elemento; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken*>"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
  id: CanValidateToken
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CanValidateToken
  nameWithType: Saml2SecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém um valor que indica se este manipulador poderá validar tokens do tipo <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref>."
  remarks: "Esse método substitui o método da classe base e sempre retornará `true`."
  syntax:
    content: public override bool CanValidateToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, que indica que o manipulador pode validar tokens do tipo <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref>."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Indica se a cláusula de identificador de chave especificado pode ser serializada por esta instância."
  syntax:
    content: public override bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);
    parameters:
    - id: securityKeyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "O <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> a ser serializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a cláusula de identificador de chave especificado pode ser serializada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CanWriteToken
  nameWithType: Saml2SecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém um valor que indica se este manipulador pode serializar tokens do tipo <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref>."
  remarks: "Esse método substitui o método da classe base e sempre retornará `true`."
  syntax:
    content: public override bool CanWriteToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; que indica que o manipulador pode serializar tokens do tipo <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref>."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator
  id: CertificateValidator
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CertificateValidator
  nameWithType: Saml2SecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define o validador de certificado x.&509; que é usado pela instância atual para validar certificados x.&509;."
  syntax:
    content: public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> que representa o validador."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute})
  id: CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute})
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CollectAttributeValues(ICollection<Saml2Attribute>)
  nameWithType: Saml2SecurityTokenHandler.CollectAttributeValues(ICollection<Saml2Attribute>)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(ICollection<Saml2Attribute>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Coleta atributos com um tipo de declaração comum, o tipo de valor de declaração e o emissor original em um único atributo com vários valores."
  syntax:
    content: protected virtual System.Collections.Generic.ICollection<System.IdentityModel.Tokens.Saml2Attribute> CollectAttributeValues (System.Collections.Generic.ICollection<System.IdentityModel.Tokens.Saml2Attribute> attributes);
    parameters:
    - id: attributes
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute}
      description: "Uma coleção de tipo <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref> que contém os atributos gerados a partir de declarações."
    return:
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute}
      description: "Uma coleção de <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref> que contém atributos derivados da coleção de entrada. Valor de declaração de atributos na coleção de entrada que compartilham um tipo de declaração comum, e o emissor original com outros atributos são consolidados em um único atributo com vários valores na coleção de saída. Atributos na coleção de entrada que não compartilham o tipo de declaração, o valor de declaração ou o emissor original com outros atributos aparecerem inalterados na coleção de saída."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateAdvice(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria um <xref href=&quot;System.IdentityModel.Tokens.Saml2Advice&quot;> </xref> objeto para a declaração."
  remarks: "Por padrão, esse método retorna `null`."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Advice CreateAdvice (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "O descritor do token."
    return:
      type: System.IdentityModel.Tokens.Saml2Advice
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Advice&quot;></xref> object. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateAttribute(Claim,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria um <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref> objeto a partir de uma declaração."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Attribute CreateAttribute (System.Security.Claims.Claim claim, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "O <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> da qual gerar o atributo de SAML."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "O descritor do token."
    return:
      type: System.IdentityModel.Tokens.Saml2Attribute
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref> que contém a declaração convertida."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claim</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAttributeStatement(System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateAttributeStatement(ClaimsIdentity,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAttributeStatement(ClaimsIdentity,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(ClaimsIdentity,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria um <xref href=&quot;System.IdentityModel.Tokens.Saml2AttributeStatement&quot;> </xref> objeto de um descritor de token."
  remarks: "Esse método pode retornar `null` se o descritor de token não contém nenhum assunto ou a entidade não tem quaisquer declarações."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AttributeStatement CreateAttributeStatement (System.Security.Claims.ClaimsIdentity subject, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "O <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> objeto que contém as declarações que serão convertidas em atributos de SAML."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "O descritor do token."
    return:
      type: System.IdentityModel.Tokens.Saml2AttributeStatement
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2AttributeStatement&quot;> </xref> que contém as declarações convertidas."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAuthenticationStatement(System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateAuthenticationStatement(AuthenticationInformation,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAuthenticationStatement(AuthenticationInformation,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(AuthenticationInformation,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria uma instrução de autenticação SAML 2.0 a partir das informações de autenticação especificado."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AuthenticationStatement CreateAuthenticationStatement (System.Security.Claims.AuthenticationInformation authInfo, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: authInfo
      type: System.Security.Claims.AuthenticationInformation
      description: "Um <xref href=&quot;System.Security.Claims.AuthenticationInformation&quot;> </xref> objeto que contém o estado para ser empacotado como um <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthenticationStatement&quot;> </xref> objeto."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "O descritor do token."
    return:
      type: System.IdentityModel.Tokens.Saml2AuthenticationStatement
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthenticationStatement&quot;> </xref> para adicionar à declaração que está sendo criada ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para ignorar o <xref href=&quot;System.Security.Claims.AuthenticationInformation&quot;> </xref> do objeto (e não criar uma instrução de autenticação SAML 2.0)."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject*> property of <code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O assunto do <code> tokenDescriptor </code> (o <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject*>propriedade) contém declarações com um tipo de declaração do <xref href=&quot;System.Security.Claims.ClaimTypes.AuthenticationInstant&quot;> </xref> ou <xref href=&quot;System.Security.Claims.ClaimTypes.AuthenticationMethod&quot;> </xref> , mas não contém pelo menos uma declaração de cada tipo.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject*>       o método de autenticação especificado pela entidade de - ou - o <code> tokenDescriptor </code> não pode ser resolvido para um URI absoluto."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.Saml2SecurityToken)
  id: CreateClaims(System.IdentityModel.Tokens.Saml2SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateClaims(Saml2SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.CreateClaims(Saml2SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(Saml2SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria as declarações de um token SAML 2.0."
  syntax:
    content: protected virtual System.Security.Claims.ClaimsIdentity CreateClaims (System.IdentityModel.Tokens.Saml2SecurityToken samlToken);
    parameters:
    - id: samlToken
      type: System.IdentityModel.Tokens.Saml2SecurityToken
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref> que representa o token de segurança do qual criar as declarações."
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "Um <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> que contém as declarações extraídas do token."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlToken</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.IdentityModel.Tokens.Saml2SecurityToken.Assertion*> property of <code>samlToken</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.IdentityModel.Tokens.Saml2SecurityToken.Assertion*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O manipulador não está configurado ou um registro de nome do emissor não está configurado para o manipulador. (O <> </> *> é de propriedade <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou é definido como um <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration&quot;> </xref> com um <> </> *> propriedade <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "O nome do emissor retornado pelo registro de nome do emissor configurado para o token de segurança (<code>samlToken</code>) é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou vazio."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria as condições para a declaração."
  remarks: "Em geral, as condições devem ser incluídas no asserções para limitar o impacto de uso indevido da asserção. Especificar as condições NotBefore e NotOnOrAfter pode limitar o período de vulnerabilidade no caso de uma asserção comprometida. O AudienceRestrictionCondition pode ser usado para declarar explicitamente a terceira parte confiável desejada ou partes de asserção, juntamente com a imposição da restrição de público adequado no terceiras partes confiáveis podem ajudar a reduzir ataques de falsificação entre terceiras partes confiáveis.       A implementação padrão cria NotBefore e NotOnOrAfter condições com base no <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A>propriedade o `tokenDescriptor`.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> Também gerará um AudienceRestrictionCondition limitar consumo de declaração para o <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A>propriedade o `tokenDescriptor`.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Conditions CreateConditions (System.IdentityModel.Protocols.WSTrust.Lifetime tokenLifetime, string relyingPartyAddress, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenLifetime
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "O tempo de vida do token."
    - id: relyingPartyAddress
      type: System.String
      description: "O endereço de ponto de extremidade para o qual o token é criado. O endereço é modelado como uma condição de AudienceRestriction."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "O descritor do token."
    return:
      type: System.IdentityModel.Tokens.Saml2Conditions
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2Conditions&quot;> </xref> objeto que contém as condições para a declaração."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateIssuerNameIdentifier(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateIssuerNameIdentifier(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria um identificador de nome que identifica o emissor de declaração."
  remarks: "Asserções SAML2 devem conter um identificador de nome para o emissor. Esse método pode não retornar `null`.       A implementação padrão cria um identificador de nome simples do <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A>propriedade o `tokenDescriptor`.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier CreateIssuerNameIdentifier (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "O descritor de token do qual criar o identificador de nome."
    return:
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref> que representa o identificador de nome."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateSamlSubject(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria um SAML 2.0 assunto de asserção."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Subject CreateSamlSubject (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "O descritor de token de segurança do qual criar o assunto."
    return:
      type: System.IdentityModel.Tokens.Saml2Subject
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2Subject&quot;> </xref> que representa o assunto da asserção."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  id: CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateSecurityTokenReference(SecurityToken,Boolean)
  nameWithType: Saml2SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria a referência de token de segurança quando o token não é anexado à mensagem."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "O token SAML."
    - id: attached
      type: System.Boolean
      description: "Um valor que indica se deve ser criada uma referência anexada ou desanexada."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> que representa a referência de token. (Uma instância de <xref href=&quot;System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause&quot;> </xref> é retornado de fato.)"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateStatements(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria o SAML 2.0 instruções a serem incluídas na asserção."
  remarks: "Instruções não são necessários em uma declaração SAML 2.0. Esse método pode retornar uma coleção vazia."
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.Saml2Statement> CreateStatements (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "O descritor de token do qual criar as instruções."
    return:
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Statement}
      description: "Uma enumeração de <xref href=&quot;System.IdentityModel.Tokens.Saml2Statement&quot;> </xref> que contém as instruções."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria um token de segurança com base em um descritor de token."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "O descritor de token do qual criar o token de segurança."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> que representa o token de segurança do SAML 2.0. (O token retornado é, na verdade, uma instância de <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref>.)"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(System.String)
  id: CreateWindowsIdentity(System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateWindowsIdentity(String)
  nameWithType: Saml2SecurityTokenHandler.CreateWindowsIdentity(String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria um <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> usando o especificado usuário nome Principal (UPN) do objeto."
  syntax:
    content: protected virtual System.Security.Principal.WindowsIdentity CreateWindowsIdentity (string upn);
    parameters:
    - id: upn
      type: System.String
      description: "O UPN para usar para criar a identidade."
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "A identidade do Windows que foi criada."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>upn</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})
  id: CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateXmlStringFromAttributes(IEnumerable<Saml2Attribute>)
  nameWithType: Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<Saml2Attribute>)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<Saml2Attribute>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria uma cadeia de caracteres de formatação XML de uma coleção de atributos de SAML 2.0 que representam o ator."
  remarks: "A cadeia de caracteres está no formato &quot;\\<ator >\\<nome do atributo, ns >\\<AttributeValue >... \\</AttributeValue >,...  \\< /Atributo >... \\</Actor>&quot;"
  syntax:
    content: protected virtual string CreateXmlStringFromAttributes (System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.Saml2Attribute> attributes);
    parameters:
    - id: attributes
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute}
      description: "Uma enumeração de tipo <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref> que contém os atributos."
    return:
      type: System.String
      description: "Uma cadeia de caracteres XML bem formada construída usando os atributos."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  id: DenormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: DenormalizeAuthenticationType(String)
  nameWithType: Saml2SecurityTokenHandler.DenormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retorna o <xref:System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses>valor correspondente a um valor normalizado para uma referência de classe de contexto de autenticação SAML.</xref:System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses>"
  syntax:
    content: protected virtual string DenormalizeAuthenticationType (string normalizedAuthenticationType);
    parameters:
    - id: normalizedAuthenticationType
      type: System.String
      description: "O valor normalizado."
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contenha um do <xref:System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses>constantes.</xref:System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses>"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  id: DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: DetectReplayedToken(SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.DetectReplayedToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gera uma exceção se o token especificado já existe no cache de reprodução do token; Caso contrário, o token é adicionado ao cache."
  remarks: "O comportamento padrão é verificar apenas os tokens de portador (tokens que não tem chaves). O cache de reprodução de token é o <xref:System.IdentityModel.Tokens.TokenReplayCache>configurado para este manipulador por meio do objeto a <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches%2A>propriedade do <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration>objeto referenciado por meio do <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A>propriedade.</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> </xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> </xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches%2A> </xref:System.IdentityModel.Tokens.TokenReplayCache>"
  syntax:
    content: protected override void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> que representa o token de segurança do SAML 2.0 (o token deve ser do tipo <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref>) a ser verificada."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - não há nenhum <xref href=&quot;System.IdentityModel.Tokens.TokenReplayCache&quot;> </xref> configurado no <> </> *> propriedade da configuração do manipulador (acessados por meio de <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>propriedade).</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>não pode ser convertido como uma instância de <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "A ID da asserção associada ao token é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou vazio. (O <> </> *> propriedade das referências de símbolo um <xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref> que tem um <> </> *> propriedade que faz referência a um <xref href=&quot;System.IdentityModel.Tokens.Saml2Id&quot;> </xref> com um <xref:System.IdentityModel.Tokens.Saml2Id.Value*>propriedade <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou vazio.)</xref:System.IdentityModel.Tokens.Saml2Id.Value*>"
  - type: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
    description: "O token já existe o <xref href=&quot;System.IdentityModel.Tokens.TokenReplayCache&quot;> </xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  id: FindUpn(System.Security.Claims.ClaimsIdentity)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: FindUpn(ClaimsIdentity)
  nameWithType: Saml2SecurityTokenHandler.FindUpn(ClaimsIdentity)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(ClaimsIdentity)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Localiza o UPN de valor especificado na declaração <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> objeto com a finalidade de mapeamento de identidade para um <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> objeto."
  syntax:
    content: protected virtual string FindUpn (System.Security.Claims.ClaimsIdentity claimsIdentity);
    parameters:
    - id: claimsIdentity
      type: System.Security.Claims.ClaimsIdentity
      description: "O objeto de identidade de declarações que contém a declaração UPN desejada."
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém o UPN declaração valor encontrado."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: GetEncryptingCredentials(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém o token criptografar credenciais. Substitua este método para alterar o token criptografar credenciais."
  remarks: "A implementação padrão recupera as credenciais de criptografia do <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A>propriedade o `tokenDescriptor`.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetEncryptingCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Recupera a algum escopo criptografar credenciais do objeto de escopo."
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.EncryptingCredentials&quot;> </xref> que representa o token criptografar credenciais."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "As credenciais com criptografia recuperadas do descritor de token são assimétricas."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: GetSigningCredentials(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém as credenciais para a declaração de assinatura."
  remarks: "Asserções SAML2 usadas como tokens de segurança devem ser assinadas.       A implementação padrão usa a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>propriedade o `tokenDescriptor` para recuperar as credenciais.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SigningCredentials GetSigningCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "O descritor do token."
    return:
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref> que representa as credenciais para a declaração de assinatura."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.Saml2SecurityToken)
  id: GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.Saml2SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: GetTokenReplayCacheEntryExpirationTime(Saml2SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(Saml2SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(Saml2SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retorna a hora até a qual o token deve ser mantido no cache de reprodução de token."
  remarks: "Por padrão, esse método retorna o NotOnOrAfter da condição de SAML, se estiver presente.       Se esse valor não existir, ele retorna o NotOnOrAfter de SubjectConfirmationData o primeiro.       Essa função não retornará um valor do momento (<xref:System.DateTime.Now%2A>) que Configuration.TokenReplayCacheExpirationPeriod.</xref:System.DateTime.Now%2A>"
  syntax:
    content: protected virtual DateTime GetTokenReplayCacheEntryExpirationTime (System.IdentityModel.Tokens.Saml2SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.Saml2SecurityToken
      description: "O token para o qual retornar o tempo de expiração."
    return:
      type: System.DateTime
      description: "Um <xref:System.DateTime>que representa o tempo de expiração.</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: GetTokenTypeIdentifiers()
  nameWithType: Saml2SecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém os identificadores de tipo de token com suporte por este manipulador."
  syntax:
    content: public override string[] GetTokenTypeIdentifiers ();
    parameters: []
    return:
      type: System.String[]
      description: "Uma matriz de cadeias de caracteres que contém o token de tipo identificador (es) com suporte por este manipulador."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
  id: KeyInfoSerializer
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: KeyInfoSerializer
  nameWithType: Saml2SecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define o serializador de token de segurança que é usado para serializar e desserializar os identificadores de chave."
  remarks: "Serializa e desserializa <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>objetos.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>"
  syntax:
    content: public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> que representa o serializador."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma tentativa de definir o valor para <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ocorre."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: Saml2SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Configuração personalizada de cargas de XML."
  syntax:
    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);
    parameters:
    - id: customConfigElements
      type: System.Xml.XmlNodeList
      description: "Um <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> que especifica os requisitos de autenticação de token SAML."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>customConfigElements</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A configuração especificada em <code> customConfigElements </code> não é válido."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(System.String)
  id: NormalizeAuthenticationContextClassReference(System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: NormalizeAuthenticationContextClassReference(String)
  nameWithType: Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retorna o valor normalizado correspondência de uma referência de classe de contexto de autenticação SAML."
  syntax:
    content: protected virtual string NormalizeAuthenticationContextClassReference (string saml2AuthenticationContextClassReference);
    parameters:
    - id: saml2AuthenticationContextClassReference
      type: System.String
      description: "Uma da <xref:System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses>constantes.</xref:System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses>"
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém o valor normalizado."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.Saml2AttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAttributeStatement(System.IdentityModel.Tokens.Saml2AttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ProcessAttributeStatement(Saml2AttributeStatement,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessAttributeStatement(Saml2AttributeStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(Saml2AttributeStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria as declarações de uma instrução de atributo do SAML 2.0 e os adiciona à entidade especificada."
  remarks: "As declarações criadas são adicionadas à entidade."
  syntax:
    content: protected virtual void ProcessAttributeStatement (System.IdentityModel.Tokens.Saml2AttributeStatement statement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: statement
      type: System.IdentityModel.Tokens.Saml2AttributeStatement
      description: "O <xref href=&quot;System.IdentityModel.Tokens.Saml2AttributeStatement&quot;> </xref> do que as declarações são criadas."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "O assunto para o qual as declarações são adicionadas."
    - id: issuer
      type: System.String
      description: "O emissor."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>subject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.Saml2AuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAuthenticationStatement(System.IdentityModel.Tokens.Saml2AuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ProcessAuthenticationStatement(Saml2AuthenticationStatement,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessAuthenticationStatement(Saml2AuthenticationStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(Saml2AuthenticationStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria as declarações de uma instrução de autenticação SAML 2.0 e adiciona-os para a entidade especificada."
  syntax:
    content: protected virtual void ProcessAuthenticationStatement (System.IdentityModel.Tokens.Saml2AuthenticationStatement statement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: statement
      type: System.IdentityModel.Tokens.Saml2AuthenticationStatement
      description: "O <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthenticationStatement&quot;> </xref> do que as declarações são criadas."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "O assunto para o qual as declarações são adicionadas."
    - id: issuer
      type: System.String
      description: "O emissor."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>subject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ProcessAuthorizationDecisionStatement(Saml2AuthorizationDecisionStatement,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(Saml2AuthorizationDecisionStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(Saml2AuthorizationDecisionStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria as declarações de uma instrução de decisão de autorização de SAML 2.0 e adiciona-os para a entidade especificada."
  remarks: "A implementação padrão não fará nada."
  syntax:
    content: protected virtual void ProcessAuthorizationDecisionStatement (System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement statement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: statement
      type: System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement
      description: "O <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement&quot;> </xref> do que as declarações são criadas."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "O assunto para o qual as declarações são adicionadas."
    - id: issuer
      type: System.String
      description: "O emissor."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.Saml2Subject,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessSamlSubject(System.IdentityModel.Tokens.Saml2Subject,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ProcessSamlSubject(Saml2Subject,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessSamlSubject(Saml2Subject,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(Saml2Subject,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria as declarações da entidade SAML 2.0 e adiciona-os para a entidade especificada."
  syntax:
    content: protected virtual void ProcessSamlSubject (System.IdentityModel.Tokens.Saml2Subject assertionSubject, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: assertionSubject
      type: System.IdentityModel.Tokens.Saml2Subject
      description: "O <xref href=&quot;System.IdentityModel.Tokens.Saml2Subject&quot;> </xref> do que as declarações são criadas."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "O assunto para o qual as declarações são adicionadas."
    - id: issuer
      type: System.String
      description: "O emissor."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>assertionSubject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement},System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessStatement(System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement},System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ProcessStatement(Collection<Saml2Statement>,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessStatement(Collection<Saml2Statement>,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(Collection<Saml2Statement>,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria as declarações de uma coleção de instruções do SAML 2.0 e os adiciona à entidade especificada."
  syntax:
    content: protected virtual void ProcessStatement (System.Collections.ObjectModel.Collection<System.IdentityModel.Tokens.Saml2Statement> statements, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: statements
      type: System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement}
      description: "Uma coleção de <xref href=&quot;System.IdentityModel.Tokens.Saml2Statement&quot;> </xref> do que as declarações são criadas."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "O assunto para o qual as declarações são adicionadas."
    - id: issuer
      type: System.String
      description: "O emissor."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subject</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  id: ReadAction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAction(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAction(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:Action&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Action ReadAction (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2Action
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2Action&quot;> </xref> que representa o elemento de ação que é lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  id: ReadAdvice(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAdvice(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAdvice(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:Advice&gt; elemento."
  remarks: "O elemento de conselho tem um ponto de extensibilidade para permitir que os elementos XML de namespaces não SAML 2.0 para ser incluído. Por padrão, como o aviso pode ser ignorado sem afetar a semântica da asserção, todos esses elementos serão ignorados. Para tratar o processamento desses elementos, substitua este método."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Advice ReadAdvice (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2Advice
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2Advice&quot;> </xref> que representa o elemento de aviso que é lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  id: ReadAssertion(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAssertion(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAssertion(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:Assertion&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Assertion ReadAssertion (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2Assertion
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref> que representa o elemento de asserção é lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  id: ReadAttribute(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAttribute(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAttribute(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:Attribute&gt; elemento."
  remarks: "A implementação padrão requer que o conteúdo do elemento de atributo seja uma cadeia de caracteres simple. Para lidar com conteúdo complexo ou conteúdo de declarado tipos simples que não sejam xs: String, substitua este método."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Attribute ReadAttribute (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2Attribute
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref> que representa o elemento de asserção é lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  id: ReadAttributeStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAttributeStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAttributeStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:AttributeStatement&gt; elemento, ou um &lt;saml:Statement&gt; elemento que especifica um xsi: Type de saml:AttributeStatementType."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AttributeStatement ReadAttributeStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2AttributeStatement
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2AttributeStatement&quot;> </xref> que representa o elemento que é lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Attribute)
  id: ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Attribute)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAttributeValue(XmlReader,Saml2Attribute)
  nameWithType: Saml2SecurityTokenHandler.ReadAttributeValue(XmlReader,Saml2Attribute)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(XmlReader,Saml2Attribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê um valor de atributo."
  syntax:
    content: protected virtual string ReadAttributeValue (System.Xml.XmlReader reader, System.IdentityModel.Tokens.Saml2Attribute attribute);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    - id: attribute
      type: System.IdentityModel.Tokens.Saml2Attribute
      description: "O atributo que está sendo lido."
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém o valor do atributo."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(System.Xml.XmlReader)
  id: ReadAudienceRestriction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAudienceRestriction(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAudienceRestriction(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:AudienceRestriction&gt; elemento ou um &lt;saml:Condition&gt; elemento que especifica um xsi: Type de saml:AudienceRestrictionType."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AudienceRestriction ReadAudienceRestriction (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2AudienceRestriction
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2AudienceRestriction&quot;> </xref> que representa o elemento que foi lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(System.Xml.XmlReader)
  id: ReadAuthenticationContext(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthenticationContext(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAuthenticationContext(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:AuthnContext&gt; elemento."
  remarks: "A implementação padrão não processa opcional \\<saml:AuthnContextDecl > elemento. Para lidar com declarações de contexto de autenticação por valor, substitua este método."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AuthenticationContext ReadAuthenticationContext (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2AuthenticationContext
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthenticationContext&quot;> </xref> que representa o elemento AuthnContext que é lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  id: ReadAuthenticationStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthenticationStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:AuthnStatement&gt; elemento ou um &lt;saml:Statement&gt; elemento que especifica um xsi: Type de saml:AuthnStatementType."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AuthenticationStatement ReadAuthenticationStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2AuthenticationStatement
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthenticationStatement&quot;> </xref> que representa o elemento que é lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  id: ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthorizationDecisionStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:AuthzDecisionStatement&gt; elemento ou um &lt;saml:Statement&gt; elemento que especifica um xsi: Type de saml:AuthzDecisionStatementType."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement ReadAuthorizationDecisionStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement&quot;> </xref> que representa o elemento que é lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  id: ReadConditions(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadConditions(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadConditions(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:Conditions&gt; elemento."
  remarks: "Para tratar personalizado \\<saml:Condition > elementos, substitua este método."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Conditions ReadConditions (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2Conditions
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2Conditions&quot;> </xref> que representa o elemento de condições que é lidos."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>não está posicionado em um elemento de condições."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(System.Xml.XmlReader)
  id: ReadEncryptedId(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadEncryptedId(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadEncryptedId(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:EncryptedId&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadEncryptedId (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>apontando para o elemento EncryptedId.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref> que representa o elemento EncryptedId que foi lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>não está posicionado em um elemento EncryptedID."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  id: ReadEvidence(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadEvidence(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadEvidence(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:Evidence&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Evidence ReadEvidence (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2Evidence
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2Evidence&quot;> </xref> que representa o elemento de evidência que é lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(System.Xml.XmlReader)
  id: ReadIssuer(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadIssuer(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadIssuer(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:Issuer&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadIssuer (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref> que representa o elemento emissor que é lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  id: ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê um SecurityKeyIdentifierClause."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "O <xref:System.Xml.XmlReader>com qual ler.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> que representa a cláusula de identificador de chave de segurança."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(System.Xml.XmlReader)
  id: ReadNameId(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadNameId(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadNameId(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:NameID&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadNameId (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado em um elemento NameID.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref> que representa o elemento NameID que foi lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(System.Xml.XmlReader)
  id: ReadNameIdType(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadNameIdType(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadNameIdType(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ambos &lt;emissor&gt; e &lt;NameID&gt; de NameIDType. Esse método lê o conteúdo de qualquer um desses elementos."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadNameIdType (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no tipo de NameID.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref> construído a partir do XML."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(System.Xml.XmlReader)
  id: ReadProxyRestriction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadProxyRestriction(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadProxyRestriction(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:ProxyRestriction&gt; elemento, ou um &lt;saml:Condition&gt; elemento que especifica um xsi: Type de saml:ProxyRestrictionType."
  remarks: "Na implementação do padrão, o valor máximo do atributo de contagem é limitado a Int32. MaxValue."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2ProxyRestriction ReadProxyRestriction (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2ProxyRestriction
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2ProxyRestriction&quot;> </xref> que representa o elemento que foi lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Assertion)
  id: ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Assertion)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSigningKeyInfo(XmlReader,Saml2Assertion)
  nameWithType: Saml2SecurityTokenHandler.ReadSigningKeyInfo(XmlReader,Saml2Assertion)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(XmlReader,Saml2Assertion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Desserializa o SAML KeyInfo de assinatura."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSigningKeyInfo (System.Xml.XmlReader reader, System.IdentityModel.Tokens.Saml2Assertion assertion);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um XmlReader que pode ser posicionado em um elemento ds:KeyInfo."
    - id: assertion
      type: System.IdentityModel.Tokens.Saml2Assertion
      description: "A asserção com a assinatura verificada."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "O <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa a chave a ser usado para verificar a assinatura."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  id: ReadStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:Statement&gt; elemento."
  remarks: "A implementação padrão só trata os elementos de instrução que especifica um xsi: Type de saml:AttributeStatementType, saml:AuthnStatementType e saml:AuthzDecisionStatementType. Para tratar instruções personalizadas, substitua este método."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Statement ReadStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2Statement
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2Statement&quot;> </xref> que representa o elemento de instrução que foi lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  id: ReadSubject(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSubject(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubject(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:Subject&gt; elemento."
  remarks: "A implementação padrão não processa opcional \\<EncryptedID > elemento. Para lidar com IDs de encryped no assunto, substitua este método."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Subject ReadSubject (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2Subject
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2Subject&quot;> </xref> que representa o elemento de entidade que foi lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(System.Xml.XmlReader)
  id: ReadSubjectConfirmation(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSubjectConfirmation(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectConfirmation(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;SubjectConfirmation&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2SubjectConfirmation ReadSubjectConfirmation (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2SubjectConfirmation
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2SubjectConfirmation&quot;> </xref> que representa o elemento SubjectConfirmation que foi lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(System.Xml.XmlReader)
  id: ReadSubjectConfirmationData(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSubjectConfirmationData(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectConfirmationData(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:SubjectConfirmationData&gt; elemento."
  remarks: "A implementação padrão manipula o elemento não estendido, bem como o saml:KeyInfoConfirmationDataType de tipo estendido."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2SubjectConfirmationData ReadSubjectConfirmationData (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2SubjectConfirmationData
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2SubjectConfirmationData&quot;> </xref> que representa o elemento SubjectConfirmationData que foi lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(System.Xml.XmlReader,System.String)
  id: ReadSubjectId(System.Xml.XmlReader,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSubjectId(XmlReader,String)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectId(XmlReader,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(XmlReader,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Este método trata a construção usada no &lt;assunto&gt; e &lt;SubjectConfirmation&gt; elementos para identificação."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadSubjectId (System.Xml.XmlReader reader, string parentElement);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no XML de ID de entidade.</xref:System.Xml.XmlReader>"
    - id: parentElement
      type: System.String
      description: "O elemento pai que contém esta identificação de entidade."
    return:
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref> construído a partir do XML."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  id: ReadSubjectKeyInfo(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSubjectKeyInfo(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Desserializa o assunto SAML &lt;ds:KeyInfo&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSubjectKeyInfo (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado em uma &lt;ds:KeyInfo&gt; elemento.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa o conteúdo do &lt;ds:KeyInfo&gt; elemento."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(System.Xml.XmlReader)
  id: ReadSubjectLocality(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSubjectLocality(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectLocality(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê o &lt;saml:SubjectLocality&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2SubjectLocality ReadSubjectLocality (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>posicionado no elemento a ser lido.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.Saml2SubjectLocality
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2SubjectLocality&quot;> </xref> que representa o elemento SubjectLocality que foi lido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê um token SAML 2.0 do fluxo especificado."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>fluxo para um Token de segurança do SAML 2.0.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Uma instância de <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref>."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <> </> *> propriedade da configuração especificada pelo <> </> *> é de propriedade <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - ou - <> </> *> propriedade da configuração especificada pelo <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>é de propriedade <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ResolveIssuerToken(Saml2Assertion,SecurityTokenResolver)
  nameWithType: Saml2SecurityTokenHandler.ResolveIssuerToken(Saml2Assertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(Saml2Assertion,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Resolve o identificador de chave de assinatura para um <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken ResolveIssuerToken (System.IdentityModel.Tokens.Saml2Assertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.Saml2Assertion
      description: "O <xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref> para o qual o token do emissor a ser resolvida."
    - id: issuerResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Atual <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> associado a esse manipulador."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> que representa o token resolvido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assertion</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "O manipulador é não é possível resolver o token."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ResolveSecurityKeys(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ResolveSecurityKeys(Saml2Assertion,SecurityTokenResolver)
  nameWithType: Saml2SecurityTokenHandler.ResolveSecurityKeys(Saml2Assertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(Saml2Assertion,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Resolve a coleção de <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> referenciado em uma <xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref>."
  syntax:
    content: protected virtual System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> ResolveSecurityKeys (System.IdentityModel.Tokens.Saml2Assertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver resolver);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.Saml2Assertion
      description: "O <xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref> ao processo."
    - id: resolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "O <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> para usar na resolução de <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> objetos."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "Uma coleção de tipo <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> que contém as chaves."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assertion</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "O manipulador é incapaz de resolver as chaves."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
  id: SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: SamlSecurityTokenRequirement
  nameWithType: Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define a segurança de requisitos de token para essa instância."
  syntax:
    content: public System.IdentityModel.Tokens.SamlSecurityTokenRequirement SamlSecurityTokenRequirement { get; set; }
    return:
      type: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenRequirement&quot;> </xref> que especifica os requisitos."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma tentativa de definir o valor para <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ocorre."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.Saml2Attribute,System.Security.Claims.ClaimsIdentity,System.String)
  id: SetDelegateFromAttribute(System.IdentityModel.Tokens.Saml2Attribute,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: SetDelegateFromAttribute(Saml2Attribute,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.SetDelegateFromAttribute(Saml2Attribute,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(Saml2Attribute,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Esse método é chamado quando um tipo especial de <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref> é detectado. O <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref> passado encapsula uma <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref> que contém uma coleção de valores de atributo (no <xref:System.IdentityModel.Tokens.Saml2Attribute.Values*>propriedade), cada um deles será obter mapeada para uma declaração.</xref:System.IdentityModel.Tokens.Saml2Attribute.Values*> Todas as declarações serão retornadas um <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> com o emissor especificado."
  syntax:
    content: protected virtual void SetDelegateFromAttribute (System.IdentityModel.Tokens.Saml2Attribute attribute, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: attribute
      type: System.IdentityModel.Tokens.Saml2Attribute
      description: "The <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;></xref> to use."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "O <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> que é o assunto deste token."
    - id: issuer
      type: System.String
      description: "O emissor da declaração."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref> não contém quaisquer valores de atributo válido."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
  id: TokenProfile11ValueType
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: TokenProfile11ValueType
  nameWithType: Saml2SecurityTokenHandler.TokenProfile11ValueType
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "O tipo de valor de identificador de chave de asserção SAML 2.0 IDs, conforme definido pelo OASIS Web Services Security SAML Token Profile 1.1. Este é um URI."
  syntax:
    content: public const string TokenProfile11ValueType;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
  id: TokenType
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: TokenType
  nameWithType: Saml2SecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém o tipo de token suportado por este manipulador."
  syntax:
    content: public override Type TokenType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>do <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref> classe</xref:System.Type>"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: TryResolveIssuerToken(Saml2Assertion,SecurityTokenResolver,SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.TryResolveIssuerToken(Saml2Assertion,SecurityTokenResolver,SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(Saml2Assertion,SecurityTokenResolver,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Resolve o identificador de chave de assinatura para um SecurityToken."
  syntax:
    content: protected virtual bool TryResolveIssuerToken (System.IdentityModel.Tokens.Saml2Assertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.Saml2Assertion
      description: "O <xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref> para o qual o token do emissor a ser resolvida."
    - id: issuerResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Atual <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> associado a esse manipulador."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Quando este método retorna, contém o token de segurança resolvido se um token foi resolvido com êxito."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o token for resolvido."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.Saml2Conditions,System.Boolean)
  id: ValidateConditions(System.IdentityModel.Tokens.Saml2Conditions,System.Boolean)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ValidateConditions(Saml2Conditions,Boolean)
  nameWithType: Saml2SecurityTokenHandler.ValidateConditions(Saml2Conditions,Boolean)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(Saml2Conditions,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Valida especificado <xref href=&quot;System.IdentityModel.Tokens.Saml2Conditions&quot;> </xref> objeto."
  remarks: "Gera uma exceção apropriada se a condição não é válida. O token não pode ser válido para vários motivos. Por exemplo, a hora atual não pode ser dentro do período de validade do token, o token pode conter dados contraditório ou não é válido ou o token pode conter elementos sem suporte do SAML 2.0."
  syntax:
    content: protected virtual void ValidateConditions (System.IdentityModel.Tokens.Saml2Conditions conditions, bool enforceAudienceRestriction);
    parameters:
    - id: conditions
      type: System.IdentityModel.Tokens.Saml2Conditions
      description: "A condição de SAML 2.0 a ser validado."
    - id: enforceAudienceRestriction
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para verificar a condição de restrição de público-alvo."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  id: ValidateConfirmationData(System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ValidateConfirmationData(Saml2SubjectConfirmationData)
  nameWithType: Saml2SecurityTokenHandler.ValidateConfirmationData(Saml2SubjectConfirmationData)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(Saml2SubjectConfirmationData)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Valida especificado <xref href=&quot;System.IdentityModel.Tokens.Saml2SubjectConfirmationData&quot;> </xref> objeto."
  remarks: "Se os dados de confirmação não forem válidos, gerará uma exceção apropriada."
  syntax:
    content: protected virtual void ValidateConfirmationData (System.IdentityModel.Tokens.Saml2SubjectConfirmationData confirmationData);
    parameters:
    - id: confirmationData
      type: System.IdentityModel.Tokens.Saml2SubjectConfirmationData
      description: "Os dados de confirmação de assunto SAML 2.0."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Valida os dados do token e retorna suas declarações."
  remarks: "Gera uma exceção apropriada se o token não é válido."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "O token de SAML 2.0 a ser validado."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "As identidades contidas no token."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Action)
  id: WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Action)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAction(XmlWriter,Saml2Action)
  nameWithType: Saml2SecurityTokenHandler.WriteAction(XmlWriter,Saml2Action)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(XmlWriter,Saml2Action)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:Action&gt; elemento."
  syntax:
    content: protected virtual void WriteAction (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Action data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Action
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Advice)
  id: WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Advice)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAdvice(XmlWriter,Saml2Advice)
  nameWithType: Saml2SecurityTokenHandler.WriteAdvice(XmlWriter,Saml2Advice)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(XmlWriter,Saml2Advice)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:Advice&gt; elemento."
  syntax:
    content: protected virtual void WriteAdvice (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Advice data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Advice
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Assertion)
  id: WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Assertion)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAssertion(XmlWriter,Saml2Assertion)
  nameWithType: Saml2SecurityTokenHandler.WriteAssertion(XmlWriter,Saml2Assertion)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(XmlWriter,Saml2Assertion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Serializa a asserção SAML especificada para o gravador XML especificado."
  syntax:
    content: protected virtual void WriteAssertion (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Assertion data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>a ser usado para a serialização.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Assertion
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref> que representa a asserção para serializar."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>data</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A asserção especificada por <code> data </code> tem o <> </> *> e <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReceivedEncryptingCredentials>propriedades definidas como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - ou - há nenhuma instrução e nenhum assunto em asserção especificado por <code> data </code>.</xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReceivedEncryptingCredentials> (Os dois o <> </> *> propriedade e o <> </> *> são de propriedade <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.) Se uma declaração não conterá instruções, ela deve conter um assunto.       - ou - asserção especificado por <code> data </code> contém uma instrução de decisão de autorização, atributo ou autenticação e nenhum assunto — essas instruções exigem um assunto. (O <> </> *> propriedade contém uma declaração de tipo <xref href=&quot;System.IdentityModel.Tokens.Saml2AttributeStatement&quot;> </xref>, <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthenticationStatement&quot;> </xref>, ou <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement&quot;> </xref> e o <xref:System.IdentityModel.Tokens.Saml2Assertion.Subject*>é de propriedade <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>).</xref:System.IdentityModel.Tokens.Saml2Assertion.Subject*>"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "As credenciais de criptografia do token não possuem uma chave simétrica especificada."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Attribute)
  id: WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Attribute)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAttribute(XmlWriter,Saml2Attribute)
  nameWithType: Saml2SecurityTokenHandler.WriteAttribute(XmlWriter,Saml2Attribute)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(XmlWriter,Saml2Attribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:Attribute&gt; elemento."
  syntax:
    content: protected virtual void WriteAttribute (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Attribute data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Attribute
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AttributeStatement)
  id: WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AttributeStatement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAttributeStatement(XmlWriter,Saml2AttributeStatement)
  nameWithType: Saml2SecurityTokenHandler.WriteAttributeStatement(XmlWriter,Saml2AttributeStatement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(XmlWriter,Saml2AttributeStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:AttributeStatement&gt; elemento."
  syntax:
    content: protected virtual void WriteAttributeStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AttributeStatement data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2AttributeStatement
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.Saml2Attribute)
  id: WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.Saml2Attribute)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAttributeValue(XmlWriter,String,Saml2Attribute)
  nameWithType: Saml2SecurityTokenHandler.WriteAttributeValue(XmlWriter,String,Saml2Attribute)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(XmlWriter,String,Saml2Attribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o valor de saml:Attribute."
  remarks: "Por padrão o método grava o valor como uma cadeia de caracteres."
  syntax:
    content: protected virtual void WriteAttributeValue (System.Xml.XmlWriter writer, string value, System.IdentityModel.Tokens.Saml2Attribute attribute);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar.</xref:System.Xml.XmlWriter>"
    - id: value
      type: System.String
      description: "Uma cadeia de caracteres que contém o valor do atributo a ser gravado."
    - id: attribute
      type: System.IdentityModel.Tokens.Saml2Attribute
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref> que representa o atributo cujo valor está sendo gravado."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AudienceRestriction)
  id: WriteAudienceRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AudienceRestriction)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAudienceRestriction(XmlWriter,Saml2AudienceRestriction)
  nameWithType: Saml2SecurityTokenHandler.WriteAudienceRestriction(XmlWriter,Saml2AudienceRestriction)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(XmlWriter,Saml2AudienceRestriction)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:AudienceRestriction&gt; elemento."
  syntax:
    content: protected virtual void WriteAudienceRestriction (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AudienceRestriction data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2AudienceRestriction
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationContext)
  id: WriteAuthenticationContext(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationContext)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthenticationContext(XmlWriter,Saml2AuthenticationContext)
  nameWithType: Saml2SecurityTokenHandler.WriteAuthenticationContext(XmlWriter,Saml2AuthenticationContext)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(XmlWriter,Saml2AuthenticationContext)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:AuthnContext&gt; elemento."
  syntax:
    content: protected virtual void WriteAuthenticationContext (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AuthenticationContext data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2AuthenticationContext
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationStatement)
  id: WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationStatement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthenticationStatement(XmlWriter,Saml2AuthenticationStatement)
  nameWithType: Saml2SecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,Saml2AuthenticationStatement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,Saml2AuthenticationStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:AuthnStatement&gt; elemento."
  syntax:
    content: protected virtual void WriteAuthenticationStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AuthenticationStatement data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2AuthenticationStatement
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement)
  id: WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthorizationDecisionStatement(XmlWriter,Saml2AuthorizationDecisionStatement)
  nameWithType: Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,Saml2AuthorizationDecisionStatement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,Saml2AuthorizationDecisionStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:AuthzDecisionStatement&gt; elemento."
  syntax:
    content: protected virtual void WriteAuthorizationDecisionStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Conditions)
  id: WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Conditions)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteConditions(XmlWriter,Saml2Conditions)
  nameWithType: Saml2SecurityTokenHandler.WriteConditions(XmlWriter,Saml2Conditions)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(XmlWriter,Saml2Conditions)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:Conditions&gt; elemento."
  syntax:
    content: protected virtual void WriteConditions (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Conditions data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Conditions
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Evidence)
  id: WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Evidence)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteEvidence(XmlWriter,Saml2Evidence)
  nameWithType: Saml2SecurityTokenHandler.WriteEvidence(XmlWriter,Saml2Evidence)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(XmlWriter,Saml2Evidence)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:Evidence&gt; elemento."
  syntax:
    content: protected virtual void WriteEvidence (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Evidence data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Evidence
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  id: WriteIssuer(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteIssuer(XmlWriter,Saml2NameIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteIssuer(XmlWriter,Saml2NameIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(XmlWriter,Saml2NameIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:Issuer&gt; elemento."
  syntax:
    content: protected virtual void WriteIssuer (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2NameIdentifier data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: Saml2SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Serializa um <xref href=&quot;System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause&quot;> </xref> para o gravador XML especificado."
  syntax:
    content: public override void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>para serializar a cláusula de identificador de chave.</xref:System.Xml.XmlWriter>"
    - id: securityKeyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> que representa a cláusula de identificador de chave a ser serializado."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>securityKeyIdentifierClause</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  id: WriteNameId(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteNameId(XmlWriter,Saml2NameIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteNameId(XmlWriter,Saml2NameIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(XmlWriter,Saml2NameIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:NameID&gt; elemento."
  syntax:
    content: protected virtual void WriteNameId (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2NameIdentifier data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual serializar o <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref>.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "O <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref> a ser serializado."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "As credenciais com criptografia Saml2NameIdentifier devem ter uma chave simétrica especificada."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  id: WriteNameIdType(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteNameIdType(XmlWriter,Saml2NameIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteNameIdType(XmlWriter,Saml2NameIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(XmlWriter,Saml2NameIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ambos &lt;emissor&gt; e &lt;NameID&gt; de NameIDType. Esse método grava o conteúdo de qualquer um desses elementos."
  syntax:
    content: protected virtual void WriteNameIdType (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2NameIdentifier data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual serializar o tipo de NameID.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "O <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref> para gravação."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2ProxyRestriction)
  id: WriteProxyRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2ProxyRestriction)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteProxyRestriction(XmlWriter,Saml2ProxyRestriction)
  nameWithType: Saml2SecurityTokenHandler.WriteProxyRestriction(XmlWriter,Saml2ProxyRestriction)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(XmlWriter,Saml2ProxyRestriction)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:ProxyRestriction&gt; elemento."
  syntax:
    content: protected virtual void WriteProxyRestriction (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2ProxyRestriction data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2ProxyRestriction
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava a assinatura &lt;ds:KeyInfo&gt; elemento usando o gravador XML especificado."
  syntax:
    content: protected virtual void WriteSigningKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual serializar o identificador de chave.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "O <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa o identificador de chave para gravação."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>signingKeyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O manipulador não é possível serializar o identificador de chave especificado por <code> signingKeyIdentifier </code>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Statement)
  id: WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Statement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteStatement(XmlWriter,Saml2Statement)
  nameWithType: Saml2SecurityTokenHandler.WriteStatement(XmlWriter,Saml2Statement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(XmlWriter,Saml2Statement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava um Saml2Statement."
  remarks: "Esse método pode gravar uma \\<saml:AttributeStatement >, \\<saml:AuthnStatement >, ou \\<saml:AuthzDecisionStatement > elemento. Para tratar personalizado <xref:System.IdentityModel.Tokens.Saml2Statement>classes para escrever um \\<saml:Statement > elemento, substitua este método.</xref:System.IdentityModel.Tokens.Saml2Statement>"
  syntax:
    content: protected virtual void WriteStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Statement data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Statement
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Subject)
  id: WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Subject)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteSubject(XmlWriter,Saml2Subject)
  nameWithType: Saml2SecurityTokenHandler.WriteSubject(XmlWriter,Saml2Subject)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(XmlWriter,Saml2Subject)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:Subject&gt; elemento."
  syntax:
    content: protected virtual void WriteSubject (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Subject data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Subject
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmation)
  id: WriteSubjectConfirmation(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmation)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteSubjectConfirmation(XmlWriter,Saml2SubjectConfirmation)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectConfirmation(XmlWriter,Saml2SubjectConfirmation)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(XmlWriter,Saml2SubjectConfirmation)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:SubjectConfirmation&gt; elemento."
  syntax:
    content: protected virtual void WriteSubjectConfirmation (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2SubjectConfirmation data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2SubjectConfirmation
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  id: WriteSubjectConfirmationData(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteSubjectConfirmationData(XmlWriter,Saml2SubjectConfirmationData)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectConfirmationData(XmlWriter,Saml2SubjectConfirmationData)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(XmlWriter,Saml2SubjectConfirmationData)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:SubjectConfirmationData&gt; elemento."
  remarks: "Quando os dados. Coleção KeyIdentifiers não estiver vazia, um atributo xsi: Type será gravado de especificar o saml:KeyInfoConfirmationDataType."
  syntax:
    content: protected virtual void WriteSubjectConfirmationData (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2SubjectConfirmationData data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2SubjectConfirmationData
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Serializa o assunto &lt;ds:KeyInfo&gt; elemento usando o gravador XML especificado."
  syntax:
    content: protected virtual void WriteSubjectKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual serializar o identificador de chave.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "O <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa o identificador de chave para gravação."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectLocality)
  id: WriteSubjectLocality(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectLocality)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteSubjectLocality(XmlWriter,Saml2SubjectLocality)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectLocality(XmlWriter,Saml2SubjectLocality)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(XmlWriter,Saml2SubjectLocality)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava o &lt;saml:SubjectLocality&gt; elemento."
  syntax:
    content: protected virtual void WriteSubjectLocality (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2SubjectLocality data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: data
      type: System.IdentityModel.Tokens.Saml2SubjectLocality
      description: "Os dados a serem gravados."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava um Token Saml2 o gravador XML especificado."
  syntax:
    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>com o qual gravar os dados.</xref:System.Xml.XmlWriter>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "O token a ser gravado."
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>não é um <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref> objeto."
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenReplayDetectedException
  nameWithType: SecurityTokenReplayDetectedException
  fullName: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: Saml2SecurityTokenHandler()
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.Saml2SecurityTokenHandler()
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: AddDelegateToAttributes(ClaimsIdentity,ICollection<Saml2Attribute>,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<Saml2Attribute>,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<Saml2Attribute>,SecurityTokenDescriptor)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<Saml2Attribute>
  nameWithType: ICollection<Saml2Attribute>
  fullName: System.Collections.Generic.ICollection<System.IdentityModel.Tokens.Saml2Attribute>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.IdentityModel.Tokens.Saml2Attribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.Saml2Attribute
    name: Saml2Attribute
    nameWithType: Saml2Attribute
    fullName: Saml2Attribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: Saml2SecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: Saml2SecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: Saml2SecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute})
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CollectAttributeValues(ICollection<Saml2Attribute>)
  nameWithType: Saml2SecurityTokenHandler.CollectAttributeValues(ICollection<Saml2Attribute>)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(ICollection<Saml2Attribute>)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAdvice(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2Advice
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Advice
  nameWithType: Saml2Advice
  fullName: System.IdentityModel.Tokens.Saml2Advice
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAttribute(Claim,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2Attribute
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Attribute
  nameWithType: Saml2Attribute
  fullName: System.IdentityModel.Tokens.Saml2Attribute
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAttributeStatement(ClaimsIdentity,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAttributeStatement(ClaimsIdentity,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(ClaimsIdentity,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2AttributeStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2AttributeStatement
  nameWithType: Saml2AttributeStatement
  fullName: System.IdentityModel.Tokens.Saml2AttributeStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAuthenticationStatement(AuthenticationInformation,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAuthenticationStatement(AuthenticationInformation,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(AuthenticationInformation,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2AuthenticationStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2AuthenticationStatement
  nameWithType: Saml2AuthenticationStatement
  fullName: System.IdentityModel.Tokens.Saml2AuthenticationStatement
- uid: System.Security.Claims.AuthenticationInformation
  parent: System.Security.Claims
  isExternal: false
  name: AuthenticationInformation
  nameWithType: AuthenticationInformation
  fullName: System.Security.Claims.AuthenticationInformation
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.Saml2SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateClaims(Saml2SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.CreateClaims(Saml2SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(Saml2SecurityToken)
- uid: System.IdentityModel.Tokens.Saml2SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2SecurityToken
  nameWithType: Saml2SecurityToken
  fullName: System.IdentityModel.Tokens.Saml2SecurityToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2Conditions
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Conditions
  nameWithType: Saml2Conditions
  fullName: System.IdentityModel.Tokens.Saml2Conditions
- uid: System.IdentityModel.Protocols.WSTrust.Lifetime
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: Lifetime
  nameWithType: Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.Lifetime
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateIssuerNameIdentifier(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2NameIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2NameIdentifier
  nameWithType: Saml2NameIdentifier
  fullName: System.IdentityModel.Tokens.Saml2NameIdentifier
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateSamlSubject(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2Subject
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Subject
  nameWithType: Saml2Subject
  fullName: System.IdentityModel.Tokens.Saml2Subject
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateSecurityTokenReference(SecurityToken,Boolean)
  nameWithType: Saml2SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateStatements(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Statement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Saml2Statement>
  nameWithType: IEnumerable<Saml2Statement>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.Saml2Statement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.Saml2Statement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.Saml2Statement
    name: Saml2Statement
    nameWithType: Saml2Statement
    fullName: Saml2Statement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateWindowsIdentity(String)
  nameWithType: Saml2SecurityTokenHandler.CreateWindowsIdentity(String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(String)
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateXmlStringFromAttributes(IEnumerable<Saml2Attribute>)
  nameWithType: Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<Saml2Attribute>)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<Saml2Attribute>)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Saml2Attribute>
  nameWithType: IEnumerable<Saml2Attribute>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.Saml2Attribute>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.Saml2Attribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.Saml2Attribute
    name: Saml2Attribute
    nameWithType: Saml2Attribute
    fullName: Saml2Attribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: DenormalizeAuthenticationType(String)
  nameWithType: Saml2SecurityTokenHandler.DenormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: DetectReplayedToken(SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.DetectReplayedToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(SecurityToken)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: FindUpn(ClaimsIdentity)
  nameWithType: Saml2SecurityTokenHandler.FindUpn(ClaimsIdentity)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(ClaimsIdentity)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetEncryptingCredentials(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetSigningCredentials(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SigningCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.Saml2SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetTokenReplayCacheEntryExpirationTime(Saml2SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(Saml2SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(Saml2SecurityToken)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers()
  nameWithType: Saml2SecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: Saml2SecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: Saml2SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: NormalizeAuthenticationContextClassReference(String)
  nameWithType: Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.Saml2AttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessAttributeStatement(Saml2AttributeStatement,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessAttributeStatement(Saml2AttributeStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(Saml2AttributeStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.Saml2AuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessAuthenticationStatement(Saml2AuthenticationStatement,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessAuthenticationStatement(Saml2AuthenticationStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(Saml2AuthenticationStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessAuthorizationDecisionStatement(Saml2AuthorizationDecisionStatement,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(Saml2AuthorizationDecisionStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(Saml2AuthorizationDecisionStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2AuthorizationDecisionStatement
  nameWithType: Saml2AuthorizationDecisionStatement
  fullName: System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.Saml2Subject,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessSamlSubject(Saml2Subject,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessSamlSubject(Saml2Subject,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(Saml2Subject,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement},System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessStatement(Collection<Saml2Statement>,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessStatement(Collection<Saml2Statement>,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(Collection<Saml2Statement>,ClaimsIdentity,String)
- uid: System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Saml2Statement>
  nameWithType: Collection<Saml2Statement>
  fullName: System.Collections.ObjectModel.Collection<System.IdentityModel.Tokens.Saml2Statement>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.IdentityModel.Tokens.Saml2Statement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.Saml2Statement
    name: Saml2Statement
    nameWithType: Saml2Statement
    fullName: Saml2Statement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAction(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAction(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2Action
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Action
  nameWithType: Saml2Action
  fullName: System.IdentityModel.Tokens.Saml2Action
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAdvice(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAdvice(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAssertion(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAssertion(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2Assertion
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Assertion
  nameWithType: Saml2Assertion
  fullName: System.IdentityModel.Tokens.Saml2Assertion
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAttribute(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAttribute(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAttributeStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAttributeStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Attribute)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAttributeValue(XmlReader,Saml2Attribute)
  nameWithType: Saml2SecurityTokenHandler.ReadAttributeValue(XmlReader,Saml2Attribute)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(XmlReader,Saml2Attribute)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAudienceRestriction(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAudienceRestriction(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2AudienceRestriction
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2AudienceRestriction
  nameWithType: Saml2AudienceRestriction
  fullName: System.IdentityModel.Tokens.Saml2AudienceRestriction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationContext(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAuthenticationContext(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2AuthenticationContext
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2AuthenticationContext
  nameWithType: Saml2AuthenticationContext
  fullName: System.IdentityModel.Tokens.Saml2AuthenticationContext
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAuthorizationDecisionStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadConditions(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadConditions(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadEncryptedId(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadEncryptedId(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadEvidence(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadEvidence(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2Evidence
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Evidence
  nameWithType: Saml2Evidence
  fullName: System.IdentityModel.Tokens.Saml2Evidence
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadIssuer(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadIssuer(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadNameId(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadNameId(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadNameIdType(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadNameIdType(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadProxyRestriction(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadProxyRestriction(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2ProxyRestriction
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2ProxyRestriction
  nameWithType: Saml2ProxyRestriction
  fullName: System.IdentityModel.Tokens.Saml2ProxyRestriction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Assertion)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSigningKeyInfo(XmlReader,Saml2Assertion)
  nameWithType: Saml2SecurityTokenHandler.ReadSigningKeyInfo(XmlReader,Saml2Assertion)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(XmlReader,Saml2Assertion)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2Statement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Statement
  nameWithType: Saml2Statement
  fullName: System.IdentityModel.Tokens.Saml2Statement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubject(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubject(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectConfirmation(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectConfirmation(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SubjectConfirmation
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2SubjectConfirmation
  nameWithType: Saml2SubjectConfirmation
  fullName: System.IdentityModel.Tokens.Saml2SubjectConfirmation
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectConfirmationData(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectConfirmationData(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SubjectConfirmationData
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2SubjectConfirmationData
  nameWithType: Saml2SubjectConfirmationData
  fullName: System.IdentityModel.Tokens.Saml2SubjectConfirmationData
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(System.Xml.XmlReader,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectId(XmlReader,String)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectId(XmlReader,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(XmlReader,String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectKeyInfo(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectLocality(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectLocality(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SubjectLocality
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2SubjectLocality
  nameWithType: Saml2SubjectLocality
  fullName: System.IdentityModel.Tokens.Saml2SubjectLocality
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ResolveIssuerToken(Saml2Assertion,SecurityTokenResolver)
  nameWithType: Saml2SecurityTokenHandler.ResolveIssuerToken(Saml2Assertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(Saml2Assertion,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ResolveSecurityKeys(Saml2Assertion,SecurityTokenResolver)
  nameWithType: Saml2SecurityTokenHandler.ResolveSecurityKeys(Saml2Assertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(Saml2Assertion,SecurityTokenResolver)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.Saml2Attribute,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: SetDelegateFromAttribute(Saml2Attribute,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.SetDelegateFromAttribute(Saml2Attribute,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(Saml2Attribute,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: TokenProfile11ValueType
  nameWithType: Saml2SecurityTokenHandler.TokenProfile11ValueType
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: Saml2SecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: TryResolveIssuerToken(Saml2Assertion,SecurityTokenResolver,SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.TryResolveIssuerToken(Saml2Assertion,SecurityTokenResolver,SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(Saml2Assertion,SecurityTokenResolver,SecurityToken)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.Saml2Conditions,System.Boolean)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ValidateConditions(Saml2Conditions,Boolean)
  nameWithType: Saml2SecurityTokenHandler.ValidateConditions(Saml2Conditions,Boolean)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(Saml2Conditions,Boolean)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ValidateConfirmationData(Saml2SubjectConfirmationData)
  nameWithType: Saml2SecurityTokenHandler.ValidateConfirmationData(Saml2SubjectConfirmationData)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(Saml2SubjectConfirmationData)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Action)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAction(XmlWriter,Saml2Action)
  nameWithType: Saml2SecurityTokenHandler.WriteAction(XmlWriter,Saml2Action)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(XmlWriter,Saml2Action)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Advice)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAdvice(XmlWriter,Saml2Advice)
  nameWithType: Saml2SecurityTokenHandler.WriteAdvice(XmlWriter,Saml2Advice)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(XmlWriter,Saml2Advice)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Assertion)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAssertion(XmlWriter,Saml2Assertion)
  nameWithType: Saml2SecurityTokenHandler.WriteAssertion(XmlWriter,Saml2Assertion)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(XmlWriter,Saml2Assertion)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Attribute)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAttribute(XmlWriter,Saml2Attribute)
  nameWithType: Saml2SecurityTokenHandler.WriteAttribute(XmlWriter,Saml2Attribute)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(XmlWriter,Saml2Attribute)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AttributeStatement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAttributeStatement(XmlWriter,Saml2AttributeStatement)
  nameWithType: Saml2SecurityTokenHandler.WriteAttributeStatement(XmlWriter,Saml2AttributeStatement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(XmlWriter,Saml2AttributeStatement)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.Saml2Attribute)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAttributeValue(XmlWriter,String,Saml2Attribute)
  nameWithType: Saml2SecurityTokenHandler.WriteAttributeValue(XmlWriter,String,Saml2Attribute)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(XmlWriter,String,Saml2Attribute)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AudienceRestriction)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAudienceRestriction(XmlWriter,Saml2AudienceRestriction)
  nameWithType: Saml2SecurityTokenHandler.WriteAudienceRestriction(XmlWriter,Saml2AudienceRestriction)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(XmlWriter,Saml2AudienceRestriction)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationContext)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationContext(XmlWriter,Saml2AuthenticationContext)
  nameWithType: Saml2SecurityTokenHandler.WriteAuthenticationContext(XmlWriter,Saml2AuthenticationContext)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(XmlWriter,Saml2AuthenticationContext)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationStatement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationStatement(XmlWriter,Saml2AuthenticationStatement)
  nameWithType: Saml2SecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,Saml2AuthenticationStatement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,Saml2AuthenticationStatement)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAuthorizationDecisionStatement(XmlWriter,Saml2AuthorizationDecisionStatement)
  nameWithType: Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,Saml2AuthorizationDecisionStatement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,Saml2AuthorizationDecisionStatement)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Conditions)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteConditions(XmlWriter,Saml2Conditions)
  nameWithType: Saml2SecurityTokenHandler.WriteConditions(XmlWriter,Saml2Conditions)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(XmlWriter,Saml2Conditions)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Evidence)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteEvidence(XmlWriter,Saml2Evidence)
  nameWithType: Saml2SecurityTokenHandler.WriteEvidence(XmlWriter,Saml2Evidence)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(XmlWriter,Saml2Evidence)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteIssuer(XmlWriter,Saml2NameIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteIssuer(XmlWriter,Saml2NameIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(XmlWriter,Saml2NameIdentifier)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: Saml2SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteNameId(XmlWriter,Saml2NameIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteNameId(XmlWriter,Saml2NameIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(XmlWriter,Saml2NameIdentifier)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteNameIdType(XmlWriter,Saml2NameIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteNameIdType(XmlWriter,Saml2NameIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(XmlWriter,Saml2NameIdentifier)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2ProxyRestriction)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteProxyRestriction(XmlWriter,Saml2ProxyRestriction)
  nameWithType: Saml2SecurityTokenHandler.WriteProxyRestriction(XmlWriter,Saml2ProxyRestriction)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(XmlWriter,Saml2ProxyRestriction)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Statement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteStatement(XmlWriter,Saml2Statement)
  nameWithType: Saml2SecurityTokenHandler.WriteStatement(XmlWriter,Saml2Statement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(XmlWriter,Saml2Statement)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Subject)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubject(XmlWriter,Saml2Subject)
  nameWithType: Saml2SecurityTokenHandler.WriteSubject(XmlWriter,Saml2Subject)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(XmlWriter,Saml2Subject)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmation)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectConfirmation(XmlWriter,Saml2SubjectConfirmation)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectConfirmation(XmlWriter,Saml2SubjectConfirmation)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(XmlWriter,Saml2SubjectConfirmation)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectConfirmationData(XmlWriter,Saml2SubjectConfirmationData)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectConfirmationData(XmlWriter,Saml2SubjectConfirmationData)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(XmlWriter,Saml2SubjectConfirmationData)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectLocality)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectLocality(XmlWriter,Saml2SubjectLocality)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectLocality(XmlWriter,Saml2SubjectLocality)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(XmlWriter,Saml2SubjectLocality)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: Saml2SecurityTokenHandler
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: AddDelegateToAttributes
  nameWithType: Saml2SecurityTokenHandler.AddDelegateToAttributes
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause
  nameWithType: Saml2SecurityTokenHandler.CanReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanReadToken
  nameWithType: Saml2SecurityTokenHandler.CanReadToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: Saml2SecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanWriteKeyIdentifierClause
  nameWithType: Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: Saml2SecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: Saml2SecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CollectAttributeValues
  nameWithType: Saml2SecurityTokenHandler.CollectAttributeValues
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAdvice
  nameWithType: Saml2SecurityTokenHandler.CreateAdvice
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAttribute
  nameWithType: Saml2SecurityTokenHandler.CreateAttribute
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAttributeStatement
  nameWithType: Saml2SecurityTokenHandler.CreateAttributeStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAuthenticationStatement
  nameWithType: Saml2SecurityTokenHandler.CreateAuthenticationStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateClaims
  nameWithType: Saml2SecurityTokenHandler.CreateClaims
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateConditions
  nameWithType: Saml2SecurityTokenHandler.CreateConditions
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateIssuerNameIdentifier
  nameWithType: Saml2SecurityTokenHandler.CreateIssuerNameIdentifier
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateSamlSubject
  nameWithType: Saml2SecurityTokenHandler.CreateSamlSubject
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateSecurityTokenReference
  nameWithType: Saml2SecurityTokenHandler.CreateSecurityTokenReference
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateStatements
  nameWithType: Saml2SecurityTokenHandler.CreateStatements
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateToken
  nameWithType: Saml2SecurityTokenHandler.CreateToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateWindowsIdentity
  nameWithType: Saml2SecurityTokenHandler.CreateWindowsIdentity
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateXmlStringFromAttributes
  nameWithType: Saml2SecurityTokenHandler.CreateXmlStringFromAttributes
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: DenormalizeAuthenticationType
  nameWithType: Saml2SecurityTokenHandler.DenormalizeAuthenticationType
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: DetectReplayedToken
  nameWithType: Saml2SecurityTokenHandler.DetectReplayedToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: FindUpn
  nameWithType: Saml2SecurityTokenHandler.FindUpn
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetEncryptingCredentials
  nameWithType: Saml2SecurityTokenHandler.GetEncryptingCredentials
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetSigningCredentials
  nameWithType: Saml2SecurityTokenHandler.GetSigningCredentials
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetTokenReplayCacheEntryExpirationTime
  nameWithType: Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers
  nameWithType: Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: Saml2SecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: Saml2SecurityTokenHandler.LoadCustomConfiguration
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: NormalizeAuthenticationContextClassReference
  nameWithType: Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessAttributeStatement
  nameWithType: Saml2SecurityTokenHandler.ProcessAttributeStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessAuthenticationStatement
  nameWithType: Saml2SecurityTokenHandler.ProcessAuthenticationStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessAuthorizationDecisionStatement
  nameWithType: Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessSamlSubject
  nameWithType: Saml2SecurityTokenHandler.ProcessSamlSubject
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessStatement
  nameWithType: Saml2SecurityTokenHandler.ProcessStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAction
  nameWithType: Saml2SecurityTokenHandler.ReadAction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAdvice
  nameWithType: Saml2SecurityTokenHandler.ReadAdvice
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAssertion
  nameWithType: Saml2SecurityTokenHandler.ReadAssertion
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAttribute
  nameWithType: Saml2SecurityTokenHandler.ReadAttribute
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAttributeStatement
  nameWithType: Saml2SecurityTokenHandler.ReadAttributeStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAttributeValue
  nameWithType: Saml2SecurityTokenHandler.ReadAttributeValue
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAudienceRestriction
  nameWithType: Saml2SecurityTokenHandler.ReadAudienceRestriction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationContext
  nameWithType: Saml2SecurityTokenHandler.ReadAuthenticationContext
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationStatement
  nameWithType: Saml2SecurityTokenHandler.ReadAuthenticationStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAuthorizationDecisionStatement
  nameWithType: Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadConditions
  nameWithType: Saml2SecurityTokenHandler.ReadConditions
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadEncryptedId
  nameWithType: Saml2SecurityTokenHandler.ReadEncryptedId
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadEvidence
  nameWithType: Saml2SecurityTokenHandler.ReadEvidence
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadIssuer
  nameWithType: Saml2SecurityTokenHandler.ReadIssuer
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause
  nameWithType: Saml2SecurityTokenHandler.ReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadNameId
  nameWithType: Saml2SecurityTokenHandler.ReadNameId
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadNameIdType
  nameWithType: Saml2SecurityTokenHandler.ReadNameIdType
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadProxyRestriction
  nameWithType: Saml2SecurityTokenHandler.ReadProxyRestriction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSigningKeyInfo
  nameWithType: Saml2SecurityTokenHandler.ReadSigningKeyInfo
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadStatement
  nameWithType: Saml2SecurityTokenHandler.ReadStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubject
  nameWithType: Saml2SecurityTokenHandler.ReadSubject
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectConfirmation
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectConfirmation
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectConfirmationData
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectConfirmationData
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectId
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectId
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectKeyInfo
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectKeyInfo
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectLocality
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectLocality
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadToken
  nameWithType: Saml2SecurityTokenHandler.ReadToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ResolveIssuerToken
  nameWithType: Saml2SecurityTokenHandler.ResolveIssuerToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ResolveSecurityKeys
  nameWithType: Saml2SecurityTokenHandler.ResolveSecurityKeys
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: SetDelegateFromAttribute
  nameWithType: Saml2SecurityTokenHandler.SetDelegateFromAttribute
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: Saml2SecurityTokenHandler.TokenType
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: TryResolveIssuerToken
  nameWithType: Saml2SecurityTokenHandler.TryResolveIssuerToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ValidateConditions
  nameWithType: Saml2SecurityTokenHandler.ValidateConditions
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ValidateConfirmationData
  nameWithType: Saml2SecurityTokenHandler.ValidateConfirmationData
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ValidateToken
  nameWithType: Saml2SecurityTokenHandler.ValidateToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAction
  nameWithType: Saml2SecurityTokenHandler.WriteAction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAdvice
  nameWithType: Saml2SecurityTokenHandler.WriteAdvice
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAssertion
  nameWithType: Saml2SecurityTokenHandler.WriteAssertion
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAttribute
  nameWithType: Saml2SecurityTokenHandler.WriteAttribute
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAttributeStatement
  nameWithType: Saml2SecurityTokenHandler.WriteAttributeStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAttributeValue
  nameWithType: Saml2SecurityTokenHandler.WriteAttributeValue
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAudienceRestriction
  nameWithType: Saml2SecurityTokenHandler.WriteAudienceRestriction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationContext
  nameWithType: Saml2SecurityTokenHandler.WriteAuthenticationContext
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationStatement
  nameWithType: Saml2SecurityTokenHandler.WriteAuthenticationStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAuthorizationDecisionStatement
  nameWithType: Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteConditions
  nameWithType: Saml2SecurityTokenHandler.WriteConditions
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteEvidence
  nameWithType: Saml2SecurityTokenHandler.WriteEvidence
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteIssuer
  nameWithType: Saml2SecurityTokenHandler.WriteIssuer
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteKeyIdentifierClause
  nameWithType: Saml2SecurityTokenHandler.WriteKeyIdentifierClause
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteNameId
  nameWithType: Saml2SecurityTokenHandler.WriteNameId
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteNameIdType
  nameWithType: Saml2SecurityTokenHandler.WriteNameIdType
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteProxyRestriction
  nameWithType: Saml2SecurityTokenHandler.WriteProxyRestriction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSigningKeyInfo
  nameWithType: Saml2SecurityTokenHandler.WriteSigningKeyInfo
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteStatement
  nameWithType: Saml2SecurityTokenHandler.WriteStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubject
  nameWithType: Saml2SecurityTokenHandler.WriteSubject
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectConfirmation
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectConfirmation
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectConfirmationData
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectConfirmationData
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectKeyInfo
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectKeyInfo
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectLocality
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectLocality
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteToken
  nameWithType: Saml2SecurityTokenHandler.WriteToken
