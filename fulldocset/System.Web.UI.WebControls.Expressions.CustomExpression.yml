### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.CustomExpression
  id: CustomExpression
  children:
  - System.Web.UI.WebControls.Expressions.CustomExpression.#ctor
  - System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.UI.WebControls.Expressions.CustomExpression.Querying
  langs:
  - csharp
  name: CustomExpression
  nameWithType: CustomExpression
  fullName: System.Web.UI.WebControls.Expressions.CustomExpression
  type: Class
  summary: "Fornece uma maneira de especificar uma consulta LINQ personalizada que é chamada em resposta a um evento."
  remarks: "A classe CustomExpression é usada com a <xref:System.Web.UI.WebControls.QueryExtender>controle.</xref:System.Web.UI.WebControls.QueryExtender> O <xref:System.Web.UI.WebControls.QueryExtender>controle oferece suporte a uma variedade de opções que você pode usar para filtrar dados.</xref:System.Web.UI.WebControls.QueryExtender> O <xref:System.Web.UI.WebControls.QueryExtender>controle oferece suporte a filtros que permitem pesquisar cadeias de caracteres, pesquisar valores entre um intervalo especificado, comparar um valor de propriedade em uma tabela com um valor especificado e classificar dados.</xref:System.Web.UI.WebControls.QueryExtender> Essas opções são fornecidas como expressões LINQ no <xref:System.Web.UI.WebControls.QueryExtender>controle.</xref:System.Web.UI.WebControls.QueryExtender> Você pode usar essas expressões de filtro ou você pode fornecer uma expressão personalizada que você pode usar o <xref:System.Web.UI.WebControls.QueryExtender>controle.</xref:System.Web.UI.WebControls.QueryExtender> A classe CustomExpression permite que você especificar uma expressão personalizada em seu aplicativo e chamá-la em um manipulador de eventos.      > [!NOTE] > Você pode fornecer uma consulta personalizada que é chamada por um método em vez de um manipulador de eventos, usando a <xref:System.Web.UI.WebControls.Expressions.MethodExpression>classe.</xref:System.Web.UI.WebControls.Expressions.MethodExpression>"
  example:
  - "The following example shows how to create a CustomExpression object that is used by the <xref:System.Web.UI.WebControls.QueryExtender> control. The custom expression calls the `FilterProducts` method, which contains a custom LINQ expression. The result of the filtering operation is displayed in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows an event handler that contains a custom LINQ query. The expression filters the Product table in the AdventureWorks database and displays products that have a list price greater than or equal to $3,500.00.  \n  \n [!code-cs[QueryExtenderCustomFiltering#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_95_2.cs)]\n [!code-vb[QueryExtenderCustomFiltering#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_95_2.vb)]"
  syntax:
    content: >-
      [System.Web.UI.ParseChildren(true, "Parameters")]

      [System.Web.UI.PersistChildren(false)]

      public class CustomExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.Parameters
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.CustomExpression.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.CustomExpression
  langs:
  - csharp
  name: CustomExpression()
  nameWithType: CustomExpression.CustomExpression()
  fullName: System.Web.UI.WebControls.Expressions.CustomExpression.CustomExpression()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.Expressions.CustomExpression&quot;> </xref> classe."
  syntax:
    content: public CustomExpression ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.CustomExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.CustomExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: CustomExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Fornece acesso para o <xref:System.Linq.IQueryable>usa da fonte de dados do objeto.</xref:System.Linq.IQueryable>"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "A fonte de dados que o <xref:System.Linq.IQueryable>objeto usa.</xref:System.Linq.IQueryable>"
    return:
      type: System.Linq.IQueryable
      description: "Uma instância da fonte de dados modificados."
  overload: System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.CustomExpression.Querying
  id: Querying
  parent: System.Web.UI.WebControls.Expressions.CustomExpression
  langs:
  - csharp
  name: Querying
  nameWithType: CustomExpression.Querying
  fullName: System.Web.UI.WebControls.Expressions.CustomExpression.Querying
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Ocorre quando o <xref:System.Linq.IQueryable>valor de fonte de dados é definido.</xref:System.Linq.IQueryable>"
  remarks: "O <xref:System.Web.UI.WebControls.Expressions.CustomExpression>objeto permite que você especifique uma expressão personalizada em um manipulador de eventos.</xref:System.Web.UI.WebControls.Expressions.CustomExpression>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs> Querying;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
- uid: System.Web.UI.WebControls.Expressions.CustomExpression.#ctor
  parent: System.Web.UI.WebControls.Expressions.CustomExpression
  isExternal: false
  name: CustomExpression()
  nameWithType: CustomExpression.CustomExpression()
  fullName: System.Web.UI.WebControls.Expressions.CustomExpression.CustomExpression()
- uid: System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.CustomExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: CustomExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.UI.WebControls.Expressions.CustomExpression.Querying
  parent: System.Web.UI.WebControls.Expressions.CustomExpression
  isExternal: false
  name: Querying
  nameWithType: CustomExpression.Querying
  fullName: System.Web.UI.WebControls.Expressions.CustomExpression.Querying
- uid: System.EventHandler{System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CustomExpressionEventArgs>
  nameWithType: EventHandler<CustomExpressionEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs
    name: CustomExpressionEventArgs
    nameWithType: CustomExpressionEventArgs
    fullName: CustomExpressionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.Expressions.CustomExpression.#ctor*
  parent: System.Web.UI.WebControls.Expressions.CustomExpression
  isExternal: false
  name: CustomExpression
  nameWithType: CustomExpression.CustomExpression
- uid: System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable*
  parent: System.Web.UI.WebControls.Expressions.CustomExpression
  isExternal: false
  name: GetQueryable
  nameWithType: CustomExpression.GetQueryable
