### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IDataSource
  id: IDataSource
  children:
  - System.Web.UI.IDataSource.DataSourceChanged
  - System.Web.UI.IDataSource.GetView(System.String)
  - System.Web.UI.IDataSource.GetViewNames
  langs:
  - csharp
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
  type: Interface
  summary: "Representa uma fonte de dados abstrato associar controles associados a dados."
  remarks: "ASP.NET oferece suporte a uma arquitetura de associação de dados de controle que permite que os controles de servidor Web associar aos dados de uma maneira consistente. Controles de servidor Web que associar aos dados são conhecidos como controles associados a dados e as classes que facilitam que são chamados de vinculação de controles da fonte de dados. Controles de fonte de dados podem representar qualquer fonte de dados: um banco de dados relacional, um arquivo, um fluxo, um objeto comercial e assim por diante. Fonte de dados controla apresentar dados de uma maneira consistente para controles associados a dados, independentemente da origem ou o formato dos dados subjacentes.       Implementar a interface IDataSource quando você deseja implementar seu próprio controle de fonte de dados personalizado do ASP.NET.       Qualquer classe que implementa a interface IDataSource é um controle de fonte de dados. A interface IDataSource serve como a base para a fonte de dados ASP.NET todos os controles e define os conceitos fundamentais de arquitetura de associação de dados com seus dois métodos: o <xref:System.Web.UI.IDataSource.GetView%2A>método e o <xref:System.Web.UI.IDataSource.GetViewNames%2A>método.</xref:System.Web.UI.IDataSource.GetViewNames%2A> </xref:System.Web.UI.IDataSource.GetView%2A> Esse conceito é que todos os controles de fonte de dados oferecer suporte a uma ou mais exibições nomeadas em seus dados. O objeto de exibição de fonte de dados é semelhante para o <xref:System.Data.DataView>abstração no <xref:System.Data>namespace: personalizado uma ligação de dados, modo de exibição de dados para classificação, filtragem e outras operações de dados que define o modo de exibição.</xref:System.Data> </xref:System.Data.DataView> Essencialmente, uma fonte de dados de controle não faz nada mais do que recuperar exibições de dados.       Um controle de fonte de dados pode ter um ou mais objetos de exibição de fonte de dados associado. Alguns dados de origem controles, incluindo aqueles que representam os bancos de dados relacionais como <xref:System.Web.UI.WebControls.SqlDataSource>e <xref:System.Web.UI.WebControls.AccessDataSource>, suporte a apenas um modo de exibição.</xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> Outros dados de origem controles, incluindo controles de fonte de dados hierárquicos, como <xref:System.Web.UI.WebControls.SiteMapDataSource>, suporte a vários modos de exibição.</xref:System.Web.UI.WebControls.SiteMapDataSource> O modo de exibição de fonte de dados define os recursos de uma fonte de dados e as operações que ele suporta.       Em resumo, controles de fonte de dados implementa a interface IDataSource, dar suporte a uma ou mais exibições nomeadas nos dados que eles representam e sempre oferecem suporte à recuperação de dados da fonte de dados que eles representam. Controles de fonte de dados sempre recuperam dados sob demanda, como quando `DataBind` é chamado em um controle associado a dados."
  example:
  - "The following code example demonstrates how a class can implement the methods defined by the IDataSource interface to provide data to data-bound controls. The data source control in this example acts as a data source on a comma-separated value file, and can be used by any data-bound control to display comma-separated file data. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.idatasou_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.idatasou_1.vb)]"
  syntax:
    content: public interface IDataSource
  implements: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.DataSourceChanged
  id: DataSourceChanged
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: DataSourceChanged
  nameWithType: IDataSource.DataSourceChanged
  fullName: System.Web.UI.IDataSource.DataSourceChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre quando um controle de fonte de dados foi alterado de alguma forma que afeta o controles associados a dados."
  remarks: "O evento DataSourceChanged é gerado quando as propriedades de um controle associado a dados ou os dados subjacentes foi alterado de alguma forma que afeta as associações de dados entre um controle associado a dados e seus dados. Por exemplo, o evento é gerado se um arquivo de nome de propriedade, como o <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>propriedade, é alterada em um controle de fonte de dados com base em arquivo.</xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler DataSourceChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: GetView(String)
  nameWithType: IDataSource.GetView(String)
  fullName: System.Web.UI.IDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém a exibição de fonte de dados nomeada associada com o controle de fonte de dados."
  remarks: "Classes de controle de fonte de dados podem dar suporte a uma ou mais exibições em seus dados subjacentes. Essas exibições são representadas por instâncias de <xref:System.Web.UI.DataSourceView>classe.</xref:System.Web.UI.DataSourceView> O modo de exibição de fonte de dados define os recursos de um controle de fonte de dados e executa todo o trabalho necessário para recuperar dados de armazenamento de dados subjacente e executar operações como classificação, inserção, exclusão e atualização.       Classes de controle que implementam a <xref:System.Web.UI.IDataSource>interface implementar o método GetView para retornar os objetos de exibição fortemente tipado associados com a classe</xref:System.Web.UI.IDataSource> da fonte de dados"
  example:
  - "The following code example demonstrates how a data source control class that implements the <xref:System.Web.UI.IDataSource> interface implements the GetView method, returning a strongly typed instance of the <xref:System.Web.UI.DataSourceView> class. Because the data source control supports only one view, it ignores the name and returns a view named with the default view name. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/csharp/m-system.web.ui.idatasou_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.idatasou_0_1.vb)]"
  syntax:
    content: public System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "O nome do modo de exibição para recuperar."
    return:
      type: System.Web.UI.DataSourceView
      description: "Retorna o nome <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> associados a <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref>."
  overload: System.Web.UI.IDataSource.GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: IDataSource.GetViewNames()
  fullName: System.Web.UI.IDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma coleção de nomes que representa a lista de objetos de exibição associada a <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> interface."
  remarks: "Classes de controle de fonte de dados podem dar suporte a uma ou mais exibições nomeadas em seus dados subjacentes. O método GetViewNames retorna uma coleção de nomes de exibição associada atualmente com a instância de controle de fonte de dados. Os chamadores podem iterar a coleção de nomes de exibição e recuperar individuais <xref:System.Web.UI.DataSourceView>objetos com o <xref:System.Web.UI.IDataSource.GetView%2A>método.</xref:System.Web.UI.IDataSource.GetView%2A> </xref:System.Web.UI.DataSourceView>       As classes que implementam a <xref:System.Web.UI.IDataSource>implementação de interface, o método GetViewNames para retornar uma coleção de nomes que representa a fonte de dados exibir objetos atualmente associados com a classe de controle de fonte de dados</xref:System.Web.UI.IDataSource> de controle de origem de dados"
  example:
  - "The following code example demonstrates how a data source control that implements the <xref:System.Web.UI.IDataSource> interface implements the GetViewNames method, returning an <xref:System.Collections.ICollection> collection of names. Because the data source supports only one view, the method returns a collection of one element using the default name for the view. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/csharp/m-system.web.ui.idatasou_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/visualbasic/m-system.web.ui.idatasou_1_1.vb)]"
  syntax:
    content: public System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>que contém os nomes das exibições associadas a <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.IDataSource.GetViewNames*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IDataSource.DataSourceChanged
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: DataSourceChanged
  nameWithType: IDataSource.DataSourceChanged
  fullName: System.Web.UI.IDataSource.DataSourceChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.IDataSource.GetView(System.String)
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetView(String)
  nameWithType: IDataSource.GetView(String)
  fullName: System.Web.UI.IDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.IDataSource.GetViewNames
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetViewNames()
  nameWithType: IDataSource.GetViewNames()
  fullName: System.Web.UI.IDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.IDataSource.GetView*
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetView
  nameWithType: IDataSource.GetView
- uid: System.Web.UI.IDataSource.GetViewNames*
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetViewNames
  nameWithType: IDataSource.GetViewNames
