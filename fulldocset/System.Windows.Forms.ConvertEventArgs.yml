### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ConvertEventArgs
  id: ConvertEventArgs
  children:
  - System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)
  - System.Windows.Forms.ConvertEventArgs.DesiredType
  - System.Windows.Forms.ConvertEventArgs.Value
  langs:
  - csharp
  name: ConvertEventArgs
  nameWithType: ConvertEventArgs
  fullName: System.Windows.Forms.ConvertEventArgs
  type: Class
  summary: "Fornece dados para o <xref href=&quot;System.Windows.Forms.Binding.Format&quot;> </xref> e <xref href=&quot;System.Windows.Forms.Binding.Parse&quot;> </xref> eventos."
  remarks: "O ConvertEventArgs é usada para formatar e unformat valores exibidos por um controle de formulários do Windows que está associado aos dados por meio de um <xref:System.Windows.Forms.Binding>objeto.</xref:System.Windows.Forms.Binding> O <xref:System.Windows.Forms.Binding.Format>evento ocorre sempre que uma propriedade do controle está associada a um valor e o <xref:System.Windows.Forms.Binding.Parse>evento ocorre sempre que altera o valor associado.</xref:System.Windows.Forms.Binding.Parse> </xref:System.Windows.Forms.Binding.Format>       O <xref:System.Windows.Forms.Binding.Format>e <xref:System.Windows.Forms.Binding.Parse>eventos permitem que você criar formatos personalizados para exibir dados.</xref:System.Windows.Forms.Binding.Parse> </xref:System.Windows.Forms.Binding.Format> Por exemplo, se os dados em uma tabela são do tipo <xref:System.Decimal>, você pode especificar que os dados devem ser exibidos no formato de moeda local – definindo o <xref:System.Windows.Forms.ConvertEventArgs.Value%2A>ConvertEventArgs para o valor formatado na propriedade de <xref:System.Windows.Forms.Binding.Format>evento.</xref:System.Windows.Forms.Binding.Format> </xref:System.Windows.Forms.ConvertEventArgs.Value%2A> </xref:System.Decimal> Você deve unformat Consequentemente o valor exibido no <xref:System.Windows.Forms.Binding.Parse>evento.</xref:System.Windows.Forms.Binding.Parse>       Para obter mais informações sobre a manipulação de eventos, consulte [eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.Binding>, adds a <xref:System.Windows.Forms.ConvertEventHandler> delegate to both the <xref:System.Windows.Forms.Binding.Parse> and <xref:System.Windows.Forms.Binding.Format> events, and uses the <xref:System.Windows.Forms.Control.DataBindings%2A> property to add the <xref:System.Windows.Forms.Binding> to the <xref:System.Windows.Forms.BindingsCollection> of a <xref:System.Windows.Forms.TextBox> control. The `DecimalToCurrencyString` event delegate, which is added to the <xref:System.Windows.Forms.Binding.Format> event, uses the <xref:System.Decimal.ToString%2A> method to format the bound value (a <xref:System.Decimal> type) as currency. The `CurrencyStringToDecimal` event delegate, which is added to the <xref:System.Windows.Forms.Binding.Parse> event, converts the value displayed by the control back to the <xref:System.Decimal> type.  \n  \n [!code-cs[Classic ConvertEventArgs Example#1](~/add/codesnippet/csharp/t-system.windows.forms.c_12_1.cs)]\n [!code-vb[Classic ConvertEventArgs Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.c_12_1.vb)]\n [!code-cpp[Classic ConvertEventArgs Example#1](~/add/codesnippet/cpp/t-system.windows.forms.c_12_1.cpp)]"
  syntax:
    content: 'public class ConvertEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)
  id: '#ctor(System.Object,System.Type)'
  parent: System.Windows.Forms.ConvertEventArgs
  langs:
  - csharp
  name: ConvertEventArgs(Object,Type)
  nameWithType: ConvertEventArgs.ConvertEventArgs(Object,Type)
  fullName: System.Windows.Forms.ConvertEventArgs.ConvertEventArgs(Object,Type)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Forms.ConvertEventArgs&quot;> </xref> classe."
  syntax:
    content: public ConvertEventArgs (object value, Type desiredType);
    parameters:
    - id: value
      type: System.Object
      description: "Um <xref:System.Object>que contém o valor da propriedade atual.</xref:System.Object>"
    - id: desiredType
      type: System.Type
      description: "O <xref:System.Type>do valor.</xref:System.Type>"
  overload: System.Windows.Forms.ConvertEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ConvertEventArgs.DesiredType
  id: DesiredType
  parent: System.Windows.Forms.ConvertEventArgs
  langs:
  - csharp
  name: DesiredType
  nameWithType: ConvertEventArgs.DesiredType
  fullName: System.Windows.Forms.ConvertEventArgs.DesiredType
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o tipo de dados do valor desejado."
  remarks: "A propriedade DesiredType permite que você verifique se o tipo da propriedade que o valor está sendo convertido em."
  example:
  - "The following code example uses the DesiredType property to determine whether the conversion of one type to another can proceed. The `DecimalToCurrencyString` method tests whether the DesiredType is a string. If not, the code exits the method. Similarly, the `CurrencyStringToDecimal` method tests whether the DesiredType is a <xref:System.Decimal>, and exits if it is not `true`.  \n  \n [!code-cpp[Classic ConvertEventArgs.DesiredType Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_16_1.cpp)]\n [!code-cs[Classic ConvertEventArgs.DesiredType Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_16_1.cs)]\n [!code-vb[Classic ConvertEventArgs.DesiredType Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_16_1.vb)]"
  syntax:
    content: public Type DesiredType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>do valor desejado.</xref:System.Type>"
  overload: System.Windows.Forms.ConvertEventArgs.DesiredType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ConvertEventArgs.Value
  id: Value
  parent: System.Windows.Forms.ConvertEventArgs
  langs:
  - csharp
  name: Value
  nameWithType: ConvertEventArgs.Value
  fullName: System.Windows.Forms.ConvertEventArgs.Value
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o valor de <xref href=&quot;System.Windows.Forms.ConvertEventArgs&quot;> </xref>."
  remarks: "O valor contido pela propriedade de valor depende do evento no qual o <xref:System.Windows.Forms.ConvertEventArgs>será retornado.</xref:System.Windows.Forms.ConvertEventArgs> O <xref:System.Windows.Forms.ConvertEventArgs>pode ser retornado no <xref:System.Windows.Forms.Binding.Format>evento ou <xref:System.Windows.Forms.Binding.Parse>evento.</xref:System.Windows.Forms.Binding.Parse> </xref:System.Windows.Forms.Binding.Format> </xref:System.Windows.Forms.ConvertEventArgs>       Quando o <xref:System.Windows.Forms.ConvertEventArgs>é retornado no <xref:System.Windows.Forms.Binding.Format>evento, a propriedade de valor contém o valor da propriedade não formatado da fonte de dados.</xref:System.Windows.Forms.Binding.Format> </xref:System.Windows.Forms.ConvertEventArgs> Dentro de <xref:System.Windows.Forms.Binding.Format>eventos, você pode ler o valor da propriedade, o valor de formato e redefinir a propriedade de valor para o novo valor (formatado), portanto, definir o valor exibida no controle associado a dados.</xref:System.Windows.Forms.Binding.Format>       Quando o <xref:System.Windows.Forms.ConvertEventArgs>é retornado no <xref:System.Windows.Forms.Binding.Parse>evento, a propriedade contém o valor de formatação personalizada do controle associado a dados.</xref:System.Windows.Forms.Binding.Parse> </xref:System.Windows.Forms.ConvertEventArgs> Dentro de <xref:System.Windows.Forms.Binding.Parse>eventos, você deve ler o valor formatado, analisá-lo e convertê-lo de volta para o mesmo tipo de dados como a fonte de dados.</xref:System.Windows.Forms.Binding.Parse> Você pode redefinir a propriedade de valor para o valor não formatado e, portanto, defina o valor da fonte de dados. Para determinar o tipo da fonte de dados, examine o <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>o valor da propriedade.</xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.Binding>, adds a <xref:System.Windows.Forms.ConvertEventHandler> delegate to both the <xref:System.Windows.Forms.Binding.Parse> and <xref:System.Windows.Forms.Binding.Format> events, and uses the <xref:System.Windows.Forms.Control.DataBindings%2A> property to add the <xref:System.Windows.Forms.Binding> to the <xref:System.Windows.Forms.BindingsCollection> of a <xref:System.Windows.Forms.TextBox> control. The `DecimalToCurrencyString` event delegate, which is added to the <xref:System.Windows.Forms.Binding.Format> event, uses the <xref:System.Decimal.ToString%2A> method to format the bound value (a <xref:System.Decimal> type) as currency. The `CurrencyStringToDecimal` event delegate, which is added to the <xref:System.Windows.Forms.Binding.Parse> event, converts the value displayed by the control back to the <xref:System.Decimal> type.  \n  \n [!code-cs[Classic ConvertEventArgs Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_27_1.cs)]\n [!code-vb[Classic ConvertEventArgs Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_27_1.vb)]\n [!code-cpp[Classic ConvertEventArgs Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_27_1.cpp)]"
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "O valor de <xref href=&quot;System.Windows.Forms.ConvertEventArgs&quot;> </xref>."
  overload: System.Windows.Forms.ConvertEventArgs.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)
  parent: System.Windows.Forms.ConvertEventArgs
  isExternal: false
  name: ConvertEventArgs(Object,Type)
  nameWithType: ConvertEventArgs.ConvertEventArgs(Object,Type)
  fullName: System.Windows.Forms.ConvertEventArgs.ConvertEventArgs(Object,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.ConvertEventArgs.DesiredType
  parent: System.Windows.Forms.ConvertEventArgs
  isExternal: false
  name: DesiredType
  nameWithType: ConvertEventArgs.DesiredType
  fullName: System.Windows.Forms.ConvertEventArgs.DesiredType
- uid: System.Windows.Forms.ConvertEventArgs.Value
  parent: System.Windows.Forms.ConvertEventArgs
  isExternal: false
  name: Value
  nameWithType: ConvertEventArgs.Value
  fullName: System.Windows.Forms.ConvertEventArgs.Value
- uid: System.Windows.Forms.ConvertEventArgs.#ctor*
  parent: System.Windows.Forms.ConvertEventArgs
  isExternal: false
  name: ConvertEventArgs
  nameWithType: ConvertEventArgs.ConvertEventArgs
- uid: System.Windows.Forms.ConvertEventArgs.DesiredType*
  parent: System.Windows.Forms.ConvertEventArgs
  isExternal: false
  name: DesiredType
  nameWithType: ConvertEventArgs.DesiredType
- uid: System.Windows.Forms.ConvertEventArgs.Value*
  parent: System.Windows.Forms.ConvertEventArgs
  isExternal: false
  name: Value
  nameWithType: ConvertEventArgs.Value
