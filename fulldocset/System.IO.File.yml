### YamlMime:ManagedReference
items:
- uid: System.IO.File
  id: File
  children:
  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  - System.IO.File.AppendAllText(System.String,System.String)
  - System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  - System.IO.File.AppendText(System.String)
  - System.IO.File.Copy(System.String,System.String)
  - System.IO.File.Copy(System.String,System.String,System.Boolean)
  - System.IO.File.Create(System.String)
  - System.IO.File.Create(System.String,System.Int32)
  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  - System.IO.File.CreateText(System.String)
  - System.IO.File.Decrypt(System.String)
  - System.IO.File.Delete(System.String)
  - System.IO.File.Encrypt(System.String)
  - System.IO.File.Exists(System.String)
  - System.IO.File.GetAccessControl(System.String)
  - System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  - System.IO.File.GetAttributes(System.String)
  - System.IO.File.GetCreationTime(System.String)
  - System.IO.File.GetCreationTimeUtc(System.String)
  - System.IO.File.GetLastAccessTime(System.String)
  - System.IO.File.GetLastAccessTimeUtc(System.String)
  - System.IO.File.GetLastWriteTime(System.String)
  - System.IO.File.GetLastWriteTimeUtc(System.String)
  - System.IO.File.Move(System.String,System.String)
  - System.IO.File.Open(System.String,System.IO.FileMode)
  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.File.OpenRead(System.String)
  - System.IO.File.OpenText(System.String)
  - System.IO.File.OpenWrite(System.String)
  - System.IO.File.ReadAllBytes(System.String)
  - System.IO.File.ReadAllLines(System.String)
  - System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  - System.IO.File.ReadAllText(System.String)
  - System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  - System.IO.File.ReadLines(System.String)
  - System.IO.File.ReadLines(System.String,System.Text.Encoding)
  - System.IO.File.Replace(System.String,System.String,System.String)
  - System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  - System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  - System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  - System.IO.File.SetCreationTime(System.String,System.DateTime)
  - System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  - System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  - System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  - System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  - System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  - System.IO.File.WriteAllBytes(System.String,System.Byte[])
  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IO.File.WriteAllLines(System.String,System.String[])
  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  - System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  - System.IO.File.WriteAllText(System.String,System.String)
  - System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  langs:
  - csharp
  name: File
  nameWithType: File
  fullName: System.IO.File
  type: Class
  summary: "Fornece métodos estáticos para criar, copiar, excluir, mover e abrir um único arquivo e ajuda na criação de <xref href=&quot;System.IO.FileStream&quot;> </xref> objetos.       Para procurar o código-fonte do .NET Framework para este tipo, consulte o [fonte de referência](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e)."
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n Use the File class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to a single file at a time. You can also use the File class to get and set file attributes or <xref:System.DateTime> information related to the creation, access, and writing of a file. If you want to perform operations on multiple files, see <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName> or <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=fullName>.  \n  \n Many of the File methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific File members such as <xref:System.IO.File.OpenText%2A>, <xref:System.IO.File.CreateText%2A>, or <xref:System.IO.File.Create%2A>.  \n  \n Because all File methods are static, it might be more efficient to use a File method rather than a corresponding <xref:System.IO.FileInfo> instance method if you want to perform only one action. All File methods require the path to the file that you are manipulating.  \n  \n The static methods of the File class perform security checks on all methods. If you are going to reuse an object several times, consider using the corresponding instance method of <xref:System.IO.FileInfo> instead, because the security check will not always be necessary.  \n  \n By default, full read/write access to new files is granted to all users.  \n  \n The following table describes the enumerations that are used to customize the behavior of various File methods.  \n  \n|Enumeration|Description|  \n|-----------------|-----------------|  \n|<xref:System.IO.FileAccess>|Specifies read and write access to a file.|  \n|<xref:System.IO.FileShare>|Specifies the level of access permitted for a file that is already in use.|  \n|<xref:System.IO.FileMode>|Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.|  \n  \n> [!NOTE]\n>  In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the File class to check whether a file exists, and depending on the result, either create a new file and write to it, or open the existing file and read from it. Before running the code, create a `c:\\temp` folder.  \n  \n [!code-cpp[File Class Example#1](~/add/codesnippet/cpp/t-system.io.file_1.cpp)]\n [!code-cs[File Class Example#1](~/add/codesnippet/csharp/t-system.io.file_1.cs)]\n [!code-vb[File Class Example#1](~/add/codesnippet/visualbasic/t-system.io.file_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class File
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllLines(String,IEnumerable<String>)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Acrescenta linhas em um arquivo e, em seguida, fecha o arquivo. Se o arquivo especificado não existir, esse método cria um arquivo, grava linhas especificadas no arquivo e, em seguida, fecha o arquivo."
  remarks: "O método criará o arquivo se ele não existir, mas não pode criar novos diretórios. Portanto, o valor da `path` parâmetro deve conter diretórios existentes."
  example:
  - "The following example writes selected lines from a sample data file to a file, and then appends more lines. The directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cs[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/csharp/d3653703-4b0a-4cbe-b582-_1.cs)]\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/visualbasic/d3653703-4b0a-4cbe-b582-_1.vb)]"
  syntax:
    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para acrescentar as linhas. O arquivo é criado se ele ainda não existir."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "As linhas para acrescentar ao arquivo."
  overload: System.IO.File.AppendAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém caracteres inválidos mais um, definido pelo <xref:System.IO.Path.GetInvalidPathChars*> método."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path </code>or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>não é válido (por exemplo, o diretório não existe ou está em uma unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado por <code> path </code> não foi encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem permissão para gravar o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Especifica um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> é um diretório."
  platform:
  - net462
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Acrescenta linhas em um arquivo usando uma codificação especificada e, em seguida, fecha o arquivo. Se o arquivo especificado não existir, esse método cria um arquivo, grava linhas especificadas no arquivo e, em seguida, fecha o arquivo."
  remarks: "O método criará o arquivo se ele não existir, mas não pode criar novos diretórios. Portanto, o valor da `path` parâmetro deve conter diretórios existentes.       Você pode usar esse método para criar um arquivo que contém o seguinte:-os resultados de uma [objetos LINQ to](~/add/includes/ajax-current-ext-md.md) consultar as linhas de um arquivo, como obtida usando o <xref:System.IO.File.ReadLines%2A>método.</xref:System.IO.File.ReadLines%2A>      -O conteúdo de uma coleção que implementa um <xref:System.Collections.Generic.IEnumerable%601>de cadeias de caracteres.</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para acrescentar as linhas. O arquivo é criado se ele ainda não existir."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "As linhas para acrescentar ao arquivo."
    - id: encoding
      type: System.Text.Encoding
      description: "O caractere de codificação a ser usada."
  overload: System.IO.File.AppendAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém caracteres inválidos mais um, definido pelo <xref:System.IO.Path.GetInvalidPathChars*> método."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path</code>, <code>contents</code>, or <code>encoding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>não é válido (por exemplo, o diretório não existe ou está em uma unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado por <code> path </code> não foi encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Especifica um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> é um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.AppendAllText(System.String,System.String)
  id: AppendAllText(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllText(String,String)
  nameWithType: File.AppendAllText(String,String)
  fullName: System.IO.File.AppendAllText(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um arquivo, acrescenta a cadeia de caracteres especificada para o arquivo e, em seguida, fecha o arquivo. Se o arquivo não existir, esse método cria um arquivo, grava a cadeia de caracteres especificada no arquivo e fecha o arquivo."
  remarks: "Devido a uma cadeia de caracteres e um caminho de arquivo, este método abre o arquivo especificado, acrescenta a cadeia de caracteres ao final do arquivo e, em seguida, fecha o arquivo. O identificador de arquivo é garantido para ser fechada por esse método, mesmo se as exceções são geradas.       O método criará o arquivo se ele não existir, mas não pode criar novos diretórios. Portanto, o valor da `path` parâmetro deve conter diretórios existentes."
  example:
  - "The following code example demonstrates the use of the AppendAllText method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.appenda_0_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.appenda_0_1.cs)]"
  syntax:
    content: public static void AppendAllText (string path, string contents);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para acrescentar a cadeia de caracteres especificada para."
    - id: contents
      type: System.String
      description: "A cadeia de caracteres para anexar ao arquivo."
  overload: System.IO.File.AppendAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, o diretório não existe ou está em uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  id: AppendAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllText(String,String,Encoding)
  nameWithType: File.AppendAllText(String,String,Encoding)
  fullName: System.IO.File.AppendAllText(String,String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Acrescenta a cadeia de caracteres especificada para o arquivo, criando o arquivo se ele ainda não existir."
  remarks: "Devido a uma cadeia de caracteres e um caminho de arquivo, este método abre o arquivo especificado acrescenta a cadeia de caracteres ao final do arquivo usando a codificação especificada e, em seguida, fecha o arquivo. O identificador de arquivo é garantido para ser fechada por esse método, mesmo se as exceções são geradas.       O método criará o arquivo se ele não existir, mas não pode criar novos diretórios. Portanto, o valor da `path` parâmetro deve conter diretórios existentes."
  example:
  - "The following code example demonstrates the use of the AppendAllText method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.appenda_1_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.appenda_1_1.vb)]"
  syntax:
    content: public static void AppendAllText (string path, string contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para acrescentar a cadeia de caracteres especificada para."
    - id: contents
      type: System.String
      description: "A cadeia de caracteres para anexar ao arquivo."
    - id: encoding
      type: System.Text.Encoding
      description: "O caractere de codificação a ser usada."
  overload: System.IO.File.AppendAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, o diretório não existe ou está em uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.AppendText(System.String)
  id: AppendText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendText(String)
  nameWithType: File.AppendText(String)
  fullName: System.IO.File.AppendText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um <xref:System.IO.StreamWriter>que acrescenta texto codificado UTF-8 para um arquivo existente ou para um novo arquivo se o arquivo especificado não existe.</xref:System.IO.StreamWriter>"
  remarks: "Esse método é equivalente a <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29>sobrecarga de construtor.</xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> Se o arquivo especificado por `path` não existir, ele é criado. Se o arquivo existir, as operações de gravação de <xref:System.IO.StreamWriter>Adicionar texto ao arquivo.</xref:System.IO.StreamWriter> Threads adicionais têm permissão para ler o arquivo enquanto ele está aberto.       O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       O `path` parâmetro não diferencia maiusculas de minúsculas.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example appends text to a file. The method creates a new file if the file doesn’t exist. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cpp[File_AppendText#1](~/add/codesnippet/cpp/m-system.io.file.appendt_1.cpp)]\n [!code-cs[File_AppendText#1](~/add/codesnippet/csharp/m-system.io.file.appendt_1.cs)]\n [!code-vb[File_AppendText#1](~/add/codesnippet/visualbasic/m-system.io.file.appendt_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter AppendText (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o arquivo para anexar à."
    return:
      type: System.IO.StreamWriter
      description: "Um gravador de fluxo que acrescenta UTF-8 codificados no arquivo especificado ou para um novo arquivo de texto."
  overload: System.IO.File.AppendText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, o diretório não existe ou está em uma unidade não mapeada)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Copy(System.String,System.String)
  id: Copy(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Copy(String,String)
  nameWithType: File.Copy(String,String)
  fullName: System.IO.File.Copy(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Copia um arquivo existente para um novo arquivo. Não é permitida a substituição de um arquivo de mesmo nome."
  remarks: "Esse método é equivalente a <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29>sobrecarga de método com o `overwrite` parâmetro definido como `false`.</xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29>       O `sourceFileName` e `destFileName` parâmetros podem especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte o <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName>método.</xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName> Este método não oferece suporte a caracteres curinga nos parâmetros.       Os atributos do arquivo original são mantidos no arquivo copiado."
  example:
  - "The following example copies files to the C:\\archives\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \n  \n-   It first uses the Copymethod overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \n  \n-   It then uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.copy-sy_0_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.copy-sy_0_1.vb)]"
  syntax:
    content: public static void Copy (string sourceFileName, string destFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O arquivo a ser copiado."
    - id: destFileName
      type: System.String
      description: "O nome do arquivo de destino. Isso não pode ser um diretório ou um arquivo existente."
  overload: System.IO.File.Copy*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>ou <code>destFileName</code> é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>.       - ou - <code>sourceFileName</code> ou <code>destFileName</code> Especifica um diretório."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado na <code> sourceFileName </code> ou <code> destFileName </code> é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceFileName</code>não foi encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destFileName</code>existe.       - ou - erro de uma e/s."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>ou <code>destFileName</code> está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)
  id: Copy(System.String,System.String,System.Boolean)
  parent: System.IO.File
  langs:
  - csharp
  name: Copy(String,String,Boolean)
  nameWithType: File.Copy(String,String,Boolean)
  fullName: System.IO.File.Copy(String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Copia um arquivo existente para um novo arquivo. É permitida a substituição de um arquivo de mesmo nome."
  remarks: "O `sourceFileName` e `destFileName` parâmetros podem especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Este método não oferece suporte a caracteres curinga nos parâmetros.       Os atributos do arquivo original são mantidos no arquivo copiado.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example copies files to the C:\\archives\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \n  \n-   It first uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%29?displayProperty=fullName> method overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \n  \n It then uses the Copy method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.copy-sy_1_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.copy-sy_1_1.vb)]"
  syntax:
    content: public static void Copy (string sourceFileName, string destFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O arquivo a ser copiado."
    - id: destFileName
      type: System.String
      description: "O nome do arquivo de destino. Isso não pode ser um diretório."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o arquivo de destino pode ser substituído; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.File.Copy*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       -or-       <code>destFileName</code> is read-only."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>ou <code>destFileName</code> é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>.       - ou - <code>sourceFileName</code> ou <code>destFileName</code> Especifica um diretório."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado na <code> sourceFileName </code> ou <code> destFileName </code> é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceFileName</code>não foi encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destFileName</code>exists and <code>overwrite</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       - ou - erro de uma e/s."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>ou <code>destFileName</code> está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Create(System.String)
  id: Create(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String)
  nameWithType: File.Create(String)
  fullName: System.IO.File.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria ou substitui um arquivo no caminho especificado."
  remarks: "O <xref:System.IO.FileStream>objeto criado por esse método tem um padrão <xref:System.IO.FileShare>valor <xref:System.IO.FileShare>; nenhum outro processo ou código pode acessar o arquivo criado até que o identificador de arquivo original seja fechado.</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream>       Esse método é equivalente a <xref:System.IO.File.Create%28System.String%2CSystem.Int32%29>sobrecarga de método usando o tamanho do buffer padrão.</xref:System.IO.File.Create%28System.String%2CSystem.Int32%29>       O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Se o arquivo especificado não existir, ele será criado; Se ele existe e não é somente leitura, o conteúdo será substituído.       Por padrão, o acesso de leitura/gravação completa para novos arquivos é concedido a todos os usuários. O arquivo é aberto com acesso de leitura/gravação e deve ser fechado antes que ele pode ser aberto por outro aplicativo.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a file in the specified path, writes some information to the file, and reads from the file.  \n  \n [!code-cs[File Create1#1](~/add/codesnippet/csharp/m-system.io.file.create-_0_1.cs)]\n [!code-cpp[File Create1#1](~/add/codesnippet/cpp/m-system.io.file.create-_0_1.cpp)]\n [!code-vb[File Create1#1](~/add/codesnippet/visualbasic/m-system.io.file.create-_0_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Create (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho e nome do arquivo a ser criado."
    return:
      type: System.IO.FileStream
      description: "Um <xref href=&quot;System.IO.FileStream&quot;> </xref> que fornece acesso de leitura/gravação para o arquivo especificado em <code> path </code>."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       - ou - <code> path </code> especificado um arquivo que é somente leitura."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao criar o arquivo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32)
  id: Create(System.String,System.Int32)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32)
  nameWithType: File.Create(String,Int32)
  fullName: System.IO.File.Create(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria ou substitui o arquivo especificado."
  remarks: "O <xref:System.IO.FileStream>objeto criado por esse método tem um padrão <xref:System.IO.FileShare>valor <xref:System.IO.FileShare>; nenhum outro processo ou código pode acessar o arquivo criado até que o identificador de arquivo original seja fechado.</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream>       O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Esse método é equivalente a <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>sobrecarga de construtor.</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> Se o arquivo especificado não existir, ele será criado; Se ele existe e não é somente leitura, o conteúdo será substituído.       Por padrão, o acesso de leitura/gravação completa para novos arquivos é concedido a todos os usuários. O arquivo é aberto com acesso de leitura/gravação e deve ser fechado antes que ele pode ser aberto por outro aplicativo.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a file with the specified buffer size.  \n  \n [!code-cs[File Create2#1](~/add/codesnippet/csharp/m-system.io.file.create-_1_1.cs)]\n [!code-vb[File Create2#1](~/add/codesnippet/visualbasic/m-system.io.file.create-_1_1.vb)]\n [!code-cpp[File Create2#1](~/add/codesnippet/cpp/m-system.io.file.create-_1_1.cpp)]"
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize);
    parameters:
    - id: path
      type: System.String
      description: "O nome do arquivo."
    - id: bufferSize
      type: System.Int32
      description: "O número de bytes em buffer para lê e grava o arquivo."
    return:
      type: System.IO.FileStream
      description: "Um <xref href=&quot;System.IO.FileStream&quot;> </xref> com o tamanho de buffer especificado que fornece acesso de leitura/gravação para o arquivo especificado em <code> path </code>."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       - ou - <code> path </code> especificado um arquivo que é somente leitura."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao criar o arquivo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  id: Create(System.String,System.Int32,System.IO.FileOptions)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32,FileOptions)
  nameWithType: File.Create(String,Int32,FileOptions)
  fullName: System.IO.File.Create(String,Int32,FileOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria ou substitui o arquivo especificado, especificando um tamanho de buffer e um <xref href=&quot;System.IO.FileOptions&quot;> </xref> valor que descreve como criar ou substituir o arquivo."
  remarks: "O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Esse método é equivalente a <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>sobrecarga de construtor.</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> Se o arquivo especificado não existir, ele será criado; Se ele existe e não é somente leitura, o conteúdo será substituído.       Por padrão, o acesso de leitura/gravação completa para novos arquivos é concedido a todos os usuários. O arquivo é aberto com acesso de leitura/gravação e deve ser fechado antes que ele pode ser aberto por outro aplicativo.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options);
    parameters:
    - id: path
      type: System.String
      description: "O nome do arquivo."
    - id: bufferSize
      type: System.Int32
      description: "O número de bytes em buffer para lê e grava o arquivo."
    - id: options
      type: System.IO.FileOptions
      description: "Uma da <xref href=&quot;System.IO.FileOptions&quot;> </xref> valores que descreve como criar ou substituir o arquivo."
    return:
      type: System.IO.FileStream
      description: "Um novo arquivo com o tamanho de buffer especificado."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       - ou - <code> path </code> especificado um arquivo que é somente leitura."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao criar o arquivo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  id: Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32,FileOptions,FileSecurity)
  nameWithType: File.Create(String,Int32,FileOptions,FileSecurity)
  fullName: System.IO.File.Create(String,Int32,FileOptions,FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria ou substitui o arquivo especificado com o tamanho de buffer especificado, opções de arquivo e segurança de arquivo."
  remarks: "O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Esse método é equivalente a <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>sobrecarga de construtor.</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> Se o arquivo especificado não existir, ele será criado; Se ele existe e não é somente leitura, o conteúdo será substituído.       Por padrão, o acesso de leitura/gravação completa para novos arquivos é concedido a todos os usuários. O arquivo é aberto com acesso de leitura/gravação e deve ser fechado antes que ele pode ser aberto por outro aplicativo.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options, System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: path
      type: System.String
      description: "O nome do arquivo."
    - id: bufferSize
      type: System.Int32
      description: "O número de bytes em buffer para lê e grava o arquivo."
    - id: options
      type: System.IO.FileOptions
      description: "Uma da <xref href=&quot;System.IO.FileOptions&quot;> </xref> valores que descreve como criar ou substituir o arquivo."
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "Uma da <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> valores que determina o controle de acesso e segurança para o arquivo de auditoria."
    return:
      type: System.IO.FileStream
      description: "Um novo arquivo com o tamanho de buffer especificado, opções de arquivo e segurança de arquivo."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       - ou - <code> path </code> especificado um arquivo que é somente leitura."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao criar o arquivo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.CreateText(System.String)
  id: CreateText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: CreateText(String)
  nameWithType: File.CreateText(String)
  fullName: System.IO.File.CreateText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria ou abre um arquivo para gravar o texto codificado UTF-8."
  remarks: "Esse método é equivalente a <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29>sobrecarga de construtor com a `append` parâmetro definido como `false`.</xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> Se o arquivo especificado por `path` não existir, ele é criado. Se o arquivo existir, seu conteúdo será substituído. Threads adicionais têm permissão para ler o arquivo enquanto ele está aberto.       O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a file for text writing and reading.  \n  \n [!code-cs[File CreateText#1](~/add/codesnippet/csharp/m-system.io.file.createt_1.cs)]\n [!code-vb[File CreateText#1](~/add/codesnippet/visualbasic/m-system.io.file.createt_1.vb)]\n [!code-cpp[File CreateText#1](~/add/codesnippet/cpp/m-system.io.file.createt_1.cpp)]"
  syntax:
    content: public static System.IO.StreamWriter CreateText (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo a ser aberto para gravação."
    return:
      type: System.IO.StreamWriter
      description: "Um <xref:System.IO.StreamWriter>que grava o arquivo especificado usando a codificação UTF-8.</xref:System.IO.StreamWriter>"
  overload: System.IO.File.CreateText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: File.Decrypt(String)
  fullName: System.IO.File.Decrypt(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Descriptografa um arquivo que foi criptografado usando a conta atual de <xref:System.IO.File.Encrypt*>método.</xref:System.IO.File.Encrypt*>"
  remarks: "O método Decrypt permite descriptografar um arquivo que estava criptografado usando o <xref:System.IO.File.Encrypt%2A>método.</xref:System.IO.File.Encrypt%2A>  O método Decrypt pode descriptografar somente os arquivos que foram criptografados usando a conta de usuário atual.       O método Decrypt requer acesso exclusivo ao arquivo ser descriptografado e gerará uma exceção se outro processo está usando o arquivo. Se o arquivo não for criptografado, descriptografa retornará um valor diferente de zero, o que indica êxito.       Tanto o <xref:System.IO.File.Encrypt%2A>método e o método Decrypt usam o provedor de serviços de criptografia (CSP) instalado no computador e as chaves de criptografia de arquivo do processo de chamada do método.</xref:System.IO.File.Encrypt%2A>       O sistema de arquivos atual deve ser formatado como NTFS e o sistema operacional atual deve ser do Windows NT ou posterior."
  example:
  - "The following code example uses the <xref:System.IO.File.Encrypt%2A> method and the Decrypt method to encrypt and then decrypt a file. The file must exist for the example to work.  \n  \n [!code-cs[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.file.decrypt_1.cs)]\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.file.decrypt_1.cpp)]\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.file.decrypt_1.vb)]"
  syntax:
    content: public static void Decrypt (string path);
    parameters:
    - id: path
      type: System.String
      description: "Um caminho que descreve um arquivo para descriptografar."
  overload: System.IO.File.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> path </code> parâmetro é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "Uma unidade inválida foi especificada."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo descrito pelo <code> path </code> parâmetro não pôde ser encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo. Por exemplo, o arquivo criptografado já está aberto.       - ou - não há suporte para esta operação na plataforma atual."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operacional atual não é do Windows NT ou posterior."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O sistema de arquivos não é NTFS."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> path </code> parâmetro especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code> path </code> parâmetro especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.Delete(System.String)
  id: Delete(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Delete(String)
  nameWithType: File.Delete(String)
  fullName: System.IO.File.Delete(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Exclui o arquivo especificado."
  remarks: "Especifique um nome de arquivo com qualquer informação de caminho relativo ou absoluto para o `path` parâmetro. Caracteres curinga não podem ser incluídos. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Se o arquivo a ser excluído não existe, nenhuma exceção é lançada.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example copies groups of files to the C:\\archives\\2008 backup folder and then deletes them from the source folder.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.delete-_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.delete-_1.vb)]"
  syntax:
    content: public static void Delete (string path);
    parameters:
    - id: path
      type: System.String
      description: "O nome do arquivo a ser excluído. Não há suporte para caracteres curinga."
  overload: System.IO.File.Delete*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo especificado está em uso.       - ou - há um identificador aberto no arquivo e o sistema operacional for o Windows XP ou anterior. Esse identificador aberto pode resultar de enumerar arquivos e diretórios. Para obter mais informações, consulte [como: enumerar diretórios e arquivos](~/add/includes/ajax-current-ext-md.md)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       - ou - o arquivo é um arquivo executável que está em uso.       - ou - <code> path </code> é um diretório.       - ou - <code> path </code> especificado um arquivo somente leitura."
  platform:
  - net462
- uid: System.IO.File.Encrypt(System.String)
  id: Encrypt(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Encrypt(String)
  nameWithType: File.Encrypt(String)
  fullName: System.IO.File.Encrypt(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Criptografa um arquivo de forma que apenas a conta usada para criptografar o arquivo poderá descriptografá-lo."
  remarks: "O método Encrypt permite criptografar um arquivo de forma que apenas a conta usada para chamar esse método pode descriptografá-lo. Use o <xref:System.IO.File.Decrypt%2A>método para descriptografar um arquivo criptografado pelo método Encrypt.</xref:System.IO.File.Decrypt%2A>       O método de criptografia requer acesso exclusivo ao arquivo que está sendo criptografado e falhará se outro processo está usando o arquivo.       O método de criptografia e o <xref:System.IO.File.Decrypt%2A>método usa o provedor de serviços de criptografia (CSP) instalado no computador e as chaves de criptografia de arquivo do processo de chamada do método.</xref:System.IO.File.Decrypt%2A>       Este método não está disponível em todas as versões do Windows. Por exemplo, não está disponível nas edições Home.       O sistema de arquivos atual deve ser formatado como NTFS."
  example:
  - "The following code example uses the Encrypt method and the <xref:System.IO.File.Decrypt%2A> method to encrypt and then decrypt a file. The file must exist for the example to work.  \n  \n [!code-cs[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.file.encrypt_1.cs)]\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.file.encrypt_1.cpp)]\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.file.encrypt_1.vb)]"
  syntax:
    content: public static void Encrypt (string path);
    parameters:
    - id: path
      type: System.String
      description: "Um caminho que descreve um arquivo para criptografar."
  overload: System.IO.File.Encrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> path </code> parâmetro é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "Uma unidade inválida foi especificada."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo descrito pelo <code> path </code> parâmetro não pôde ser encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo.       - ou - não há suporte para esta operação na plataforma atual."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operacional atual não é do Windows NT ou posterior."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O sistema de arquivos não é NTFS."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> path </code> parâmetro especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code> path </code> parâmetro especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.Exists(System.String)
  id: Exists(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Exists(String)
  nameWithType: File.Exists(String)
  fullName: System.IO.File.Exists(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Determina se o arquivo especificado existe."
  remarks: "O método Exists não deve ser usado para validação de caminho, este método simplesmente verifica se o arquivo especificado em `path` existe. Passando um caminho inválido para Exists retorna `false`. Para verificar se o caminho contém caracteres inválidos, você pode chamar o <xref:System.IO.Path.GetInvalidPathChars%2A>método para recuperar os caracteres inválidos para o sistema de arquivos.</xref:System.IO.Path.GetInvalidPathChars%2A> Você também pode criar uma expressão regular para testar se o caminho é válido para o seu ambiente. Para obter exemplos de caminhos aceitáveis, consulte <xref:System.IO.File>.</xref:System.IO.File>       Para verificar se existe um diretório, consulte <xref:System.IO.Directory.Exists%2A?displayProperty=fullName>.</xref:System.IO.Directory.Exists%2A?displayProperty=fullName>       Estar ciente de que outro processo potencialmente pode fazer algo com o arquivo entre o tempo de você chamar o método Exists e executar outra operação no arquivo, como <xref:System.IO.File.Delete%2A>.</xref:System.IO.File.Delete%2A>       O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Se `path` descreve um diretório, este método retorna `false`. Espaços à direita são removidos do `path` parâmetro antes de determinar se o arquivo existe.       O método Exists retorna `false` se ocorrer algum erro durante a tentativa de determinar se o arquivo especificado existe. Isso pode ocorrer em situações que geram exceções como passar um nome de arquivo com caracteres inválidos ou número excessivo de caracteres, um disco ausente ou falhando, ou se o chamador não tem permissão para ler o arquivo."
  example:
  - "The following example determines if a file exists.  \n  \n [!code-vb[File Exists#1](~/add/codesnippet/visualbasic/m-system.io.file.exists-_1.vb)]\n [!code-cs[File Exists#1](~/add/codesnippet/csharp/m-system.io.file.exists-_1.cs)]"
  syntax:
    content: public static bool Exists (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para verificar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o chamador tem as permissões necessárias e <code> path </code> contém o nome de um arquivo existente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Esse método também retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se <code> path </code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, um caminho inválido, ou uma cadeia de caracteres de comprimento zero. Se o chamador não tem permissões suficientes para ler o arquivo especificado, nenhuma exceção é gerada e o método retornará <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> independentemente da existência de <code> path </code>."
  overload: System.IO.File.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.IO.File.GetAccessControl(System.String)
  id: GetAccessControl(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAccessControl(String)
  nameWithType: File.GetAccessControl(String)
  fullName: System.IO.File.GetAccessControl(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objeto que encapsula as entradas de ACL (lista) de controle de acesso para um arquivo especificado."
  remarks: "Use o método GetAccessControl para recuperar as entradas de ACL (lista) de controle de acesso para um arquivo.       Uma ACL descreve indivíduos e/ou grupos que têm ou não tem direitos para ações específicas sobre o arquivo especificado. Para obter mais informações, consulte [como: Adicionar ou remover entradas da lista de controle de acesso](~/add/includes/ajax-current-ext-md.md).       Em ambientes de NTFS, <xref:System.Security.AccessControl.FileSystemRights>e <xref:System.Security.AccessControl.FileSystemRights>são concedidas ao usuário se o usuário tiver <xref:System.Security.AccessControl.FileSystemRights>direitos na pasta pai.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> Negar <xref:System.Security.AccessControl.FileSystemRights>e <xref:System.Security.AccessControl.FileSystemRights>, negar <xref:System.Security.AccessControl.FileSystemRights>no diretório pai.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and the <xref:System.IO.File.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/m-system.io.file.getacce_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/m-system.io.file.getacce_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/m-system.io.file.getacce_1.cpp)]"
  syntax:
    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para um arquivo que contém um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objeto que descreve informações de ACL (lista) de controle de acesso do arquivo."
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "Um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> regras de objeto que encapsula o controle de acesso para o arquivo descrito pelo <code> path </code> parâmetro."
  overload: System.IO.File.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "O arquivo não pôde ser encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> path </code> parâmetro especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code> path </code> parâmetro especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  id: GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAccessControl(String,AccessControlSections)
  nameWithType: File.GetAccessControl(String,AccessControlSections)
  fullName: System.IO.File.GetAccessControl(String,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objeto que encapsula o tipo especificado de entradas ACL (lista) de controle de acesso para um arquivo específico."
  remarks: "Use o método GetAccessControl para recuperar as entradas de ACL (lista) de controle de acesso para um arquivo.       Uma ACL descreve indivíduos e/ou grupos que têm ou não tem direitos para ações específicas sobre o arquivo especificado. Para obter mais informações, consulte [como: Adicionar ou remover entradas da lista de controle de acesso](~/add/includes/ajax-current-ext-md.md).       Em ambientes de NTFS, <xref:System.Security.AccessControl.FileSystemRights>e <xref:System.Security.AccessControl.FileSystemRights>são concedidas ao usuário se o usuário tiver <xref:System.Security.AccessControl.FileSystemRights>direitos na pasta pai.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> Negar <xref:System.Security.AccessControl.FileSystemRights>e <xref:System.Security.AccessControl.FileSystemRights>, negar <xref:System.Security.AccessControl.FileSystemRights>no diretório pai.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para um arquivo que contém um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objeto que descreve informações de ACL (lista) de controle de acesso do arquivo."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Uma da <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> valores que especifica o tipo de acesso controlam as informações de ACL (lista) para receber."
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "Um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> regras de objeto que encapsula o controle de acesso para o arquivo descrito pelo <code> path </code> parâmetro."
  overload: System.IO.File.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "O arquivo não pôde ser encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> path </code> parâmetro especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code> path </code> parâmetro especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.GetAttributes(System.String)
  id: GetAttributes(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAttributes(String)
  nameWithType: File.GetAttributes(String)
  fullName: System.IO.File.GetAttributes(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém o <xref href=&quot;System.IO.FileAttributes&quot;> </xref> do arquivo no caminho."
  remarks: "O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \n  \n [!code-cs[File GetAttributes#1](~/add/codesnippet/csharp/m-system.io.file.getattr_1.cs)]\n [!code-cpp[File GetAttributes#1](~/add/codesnippet/cpp/m-system.io.file.getattr_1.cpp)]\n [!code-vb[File GetAttributes#1](~/add/codesnippet/visualbasic/m-system.io.file.getattr_1.vb)]"
  syntax:
    content: public static System.IO.FileAttributes GetAttributes (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o arquivo."
    return:
      type: System.IO.FileAttributes
      description: "O <xref href=&quot;System.IO.FileAttributes&quot;> </xref> do arquivo no caminho."
  overload: System.IO.File.GetAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>está vazio, contém somente espaços em branco ou contém caracteres inválidos."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>path</code>representa um arquivo e é inválido, como estando em uma unidade não mapeada ou o arquivo não pode ser encontrado."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>representa um diretório e é inválido, como estando em uma unidade não mapeada ou o diretório não pode ser encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Este arquivo está sendo usado por outro processo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.GetCreationTime(System.String)
  id: GetCreationTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetCreationTime(String)
  nameWithType: File.GetCreationTime(String)
  fullName: System.IO.File.GetCreationTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Retorna a data de criação e a hora do arquivo ou diretório especificado."
  remarks: "> [!NOTE]> Esse método pode retornar um valor, pois ela usa funções nativas cujos valores não podem ser atualizados continuamente pelo sistema operacional.       O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Se o arquivo descrito no `path` parâmetro não existe, este método retorna 12:00 meia-noite de 1º de janeiro de 1601 D.C. (C.E.) Tempo Universal Coordenado (UTC), ajustado para horário local.       Unidades formatadas como NTFS podem armazenar em cache informações sobre um arquivo, como a hora de criação do arquivo, por um curto período de tempo. Como resultado, pode ser necessário definir explicitamente a hora de criação de um arquivo, se você estiver substituindo ou substituir um arquivo existente.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates `GetCreationTime`.  \n  \n [!code-vb[System.IO.File.GetCreationTime#1](~/add/codesnippet/visualbasic/m-system.io.file.getcrea_0_1.vb)]"
  syntax:
    content: public static DateTime GetCreationTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo ou diretório para o qual obter informações de data e hora de criação."
    return:
      type: System.DateTime
      description: "Um <xref:System.DateTime>estrutura definida para a data de criação e a hora para o arquivo ou diretório especificado.</xref:System.DateTime> Esse valor é expresso no horário local."
  overload: System.IO.File.GetCreationTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.GetCreationTimeUtc(System.String)
  id: GetCreationTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetCreationTimeUtc(String)
  nameWithType: File.GetCreationTimeUtc(String)
  fullName: System.IO.File.GetCreationTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Retorna a data de criação e a hora, no tempo universal coordenado (UTC), o arquivo ou diretório especificado."
  remarks: "> [!NOTE]> Esse método pode retornar um valor, pois ela usa funções nativas cujos valores não podem ser atualizados continuamente pelo sistema operacional.       Se o arquivo descrito no `path` parâmetro não existe, este método retorna 12:00 meia-noite de 1º de janeiro de 1601 D.C. (C.E.) Coordenado Universal (UTC).       Unidades formatadas como NTFS podem armazenar em cache informações sobre um arquivo, como a hora de criação do arquivo, por um curto período de tempo. Como resultado, pode ser necessário definir explicitamente a hora de criação de um arquivo, se você estiver substituindo ou substituir um arquivo existente.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates the GetCreationTimeUtc method.  \n  \n [!code-vb[System.IO.File.GetCreationTime#2](~/add/codesnippet/visualbasic/m-system.io.file.getcrea_1_1.vb)]"
  syntax:
    content: public static DateTime GetCreationTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo ou diretório para o qual obter informações de data e hora de criação."
    return:
      type: System.DateTime
      description: "Um <xref:System.DateTime>estrutura definida para a data de criação e a hora para o arquivo ou diretório especificado.</xref:System.DateTime> Esse valor é expresso em hora UTC."
  overload: System.IO.File.GetCreationTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.GetLastAccessTime(System.String)
  id: GetLastAccessTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastAccessTime(String)
  nameWithType: File.GetLastAccessTime(String)
  fullName: System.IO.File.GetLastAccessTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Retorna a data e hora do arquivo ou diretório foi acessado pela última vez."
  remarks: "> [!NOTE]> Esse método pode retornar um valor, pois ela usa funções nativas cujos valores não podem ser atualizados continuamente pelo sistema operacional.       Se o arquivo descrito no `path` parâmetro não existe, este método retorna 12:00 meia-noite de 1º de janeiro de 1601 D.C. (C.E.) Tempo Universal Coordenado (UTC), ajustado para horário local.       O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates `GetLastAccessTime`.  \n  \n [!code-vb[File GetLastAccess#1](~/add/codesnippet/visualbasic/m-system.io.file.getlast_1_1.vb)]\n [!code-cs[File GetLastAccess#1](~/add/codesnippet/csharp/m-system.io.file.getlast_1_1.cs)]\n [!code-cpp[File GetLastAccess#1](~/add/codesnippet/cpp/m-system.io.file.getlast_1_1.cpp)]"
  syntax:
    content: public static DateTime GetLastAccessTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo ou diretório para o qual obter informações de data e hora de acesso."
    return:
      type: System.DateTime
      description: "Um <xref:System.DateTime>estrutura definida como a data e a hora em que o arquivo ou diretório especificado foi acessado pela última vez.</xref:System.DateTime> Esse valor é expresso no horário local."
  overload: System.IO.File.GetLastAccessTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.GetLastAccessTimeUtc(System.String)
  id: GetLastAccessTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastAccessTimeUtc(String)
  nameWithType: File.GetLastAccessTimeUtc(String)
  fullName: System.IO.File.GetLastAccessTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Retorna a data e hora, no tempo de universal coordenado (UTC), que o arquivo ou diretório especificado foi acessado pela última vez."
  remarks: "> [!NOTE]> Esse método pode retornar um valor, pois ela usa funções nativas cujos valores não podem ser atualizados continuamente pelo sistema operacional.       Se o arquivo descrito no `path` parâmetro não existe, este método retorna 12:00 meia-noite de 1º de janeiro de 1601 D.C. (C.E.) Coordenado Universal (UTC).       O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static DateTime GetLastAccessTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo ou diretório para o qual obter informações de data e hora de acesso."
    return:
      type: System.DateTime
      description: "Um <xref:System.DateTime>estrutura definida como a data e a hora em que o arquivo ou diretório especificado foi acessado pela última vez.</xref:System.DateTime> Esse valor é expresso em hora UTC."
  overload: System.IO.File.GetLastAccessTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.GetLastWriteTime(System.String)
  id: GetLastWriteTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastWriteTime(String)
  nameWithType: File.GetLastWriteTime(String)
  fullName: System.IO.File.GetLastWriteTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Retorna a data e hora do arquivo ou diretório foi gravado pela última."
  remarks: "> [!NOTE]> Esse método pode retornar um valor, pois ela usa funções nativas cujos valores não podem ser atualizados continuamente pelo sistema operacional. Cada sistema operacional gerencia o último tempo de gravação acordo com suas próprias regras. Para melhorar o desempenho, um sistema operacional não pode definir o último valor de tempo de gravação para a hora exata da última operação de gravação, mas pode defini-lo como uma aproximação em vez disso.       Se o arquivo descrito no `path` parâmetro não existe, este método retorna 12:00 meia-noite de 1º de janeiro de 1601 D.C. (C.E.) Tempo Universal Coordenado (UTC), ajustado para horário local.       O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates `GetLastWriteTime`.  \n  \n [!code-cpp[File GetLastWrite#1](~/add/codesnippet/cpp/m-system.io.file.getlast_0_1.cpp)]\n [!code-vb[File GetLastWrite#1](~/add/codesnippet/visualbasic/m-system.io.file.getlast_0_1.vb)]\n [!code-cs[File GetLastWrite#1](~/add/codesnippet/csharp/m-system.io.file.getlast_0_1.cs)]"
  syntax:
    content: public static DateTime GetLastWriteTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo ou diretório para o qual obter informações de data e hora de gravação."
    return:
      type: System.DateTime
      description: "Um <xref:System.DateTime>estrutura definida para a data e a hora em que o arquivo ou diretório especificado foi gravado pela última.</xref:System.DateTime> Esse valor é expresso no horário local."
  overload: System.IO.File.GetLastWriteTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.GetLastWriteTimeUtc(System.String)
  id: GetLastWriteTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastWriteTimeUtc(String)
  nameWithType: File.GetLastWriteTimeUtc(String)
  fullName: System.IO.File.GetLastWriteTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Retorna a data e hora, em coordenado universal (UTC), que o arquivo ou diretório especificado foi gravado pela última."
  remarks: "> [!NOTE]> Esse método pode retornar um valor, pois ela usa funções nativas cujos valores não podem ser atualizados continuamente pelo sistema operacional. Cada sistema operacional gerencia o último tempo de gravação acordo com suas próprias regras. Para melhorar o desempenho, um sistema operacional não pode definir o último valor de tempo de gravação para a hora exata da última operação de gravação, mas pode defini-lo como uma aproximação em vez disso.       Se o arquivo descrito no `path` parâmetro não existe, este método retorna 12:00 meia-noite de 1º de janeiro de 1601 D.C. (C.E.) Coordenado Universal (UTC).       O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static DateTime GetLastWriteTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo ou diretório para o qual obter informações de data e hora de gravação."
    return:
      type: System.DateTime
      description: "Um <xref:System.DateTime>estrutura definida para a data e a hora em que o arquivo ou diretório especificado foi gravado pela última.</xref:System.DateTime> Esse valor é expresso em hora UTC."
  overload: System.IO.File.GetLastWriteTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Move(System.String,System.String)
  id: Move(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Move(String,String)
  nameWithType: File.Move(String,String)
  fullName: System.IO.File.Move(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Move um arquivo especificado para um novo local, oferecendo a opção de especificar um novo nome de arquivo."
  remarks: "Esse método funciona em volumes de disco, e não gerará uma exceção se a origem e destino são os mesmos. Observe que, se você tentar substituir um arquivo movendo um arquivo de mesmo nome no diretório, você obtém um <xref:System.IO.IOException>.</xref:System.IO.IOException> Você não pode usar o método Move para substituir um arquivo existente.       O `sourceFileName` e `destFileName` argumentos podem incluir informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Se você tentar mover um arquivo em volumes de disco e se o arquivo está em uso, o arquivo é copiado para o destino, mas ele não é excluído da origem.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example moves a file.  \n  \n [!code-cpp[File Move#1](~/add/codesnippet/cpp/m-system.io.file.move-sy_1.cpp)]\n [!code-cs[File Move#1](~/add/codesnippet/csharp/m-system.io.file.move-sy_1.cs)]\n [!code-vb[File Move#1](~/add/codesnippet/visualbasic/m-system.io.file.move-sy_1.vb)]"
  syntax:
    content: public static void Move (string sourceFileName, string destFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O nome do arquivo para mover. Pode incluir um caminho relativo ou absoluto."
    - id: destFileName
      type: System.String
      description: "O novo caminho e nome para o arquivo."
  overload: System.IO.File.Move*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo de destino já existe.       -or-       <code>sourceFileName</code> was not found."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>ou <code>destFileName</code> é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém caracteres inválidos, conforme definido em <xref:System.IO.Path.InvalidPathChars>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado na <code> sourceFileName </code> ou <code> destFileName </code> é inválido, (por exemplo, é uma unidade não mapeada)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>ou <code>destFileName</code> está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode)
  nameWithType: File.Open(String,FileMode)
  fullName: System.IO.File.Open(String,FileMode)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre uma <xref href=&quot;System.IO.FileStream&quot;> </xref> no caminho especificado com acesso de leitura/gravação."
  remarks: "O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a temporary file and writes some text to it. The example then opens the file, using T:System.IO.FileMode.Open; that is, if the file did not already exist, it would not be created.  \n  \n [!code-cpp[File Open1#1](~/add/codesnippet/cpp/m-system.io.file.open-sy_0_1.cpp)]\n [!code-cs[File Open1#1](~/add/codesnippet/csharp/m-system.io.file.open-sy_0_1.cs)]\n [!code-vb[File Open1#1](~/add/codesnippet/visualbasic/m-system.io.file.open-sy_0_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo a ser aberto."
    - id: mode
      type: System.IO.FileMode
      description: "Um <xref href=&quot;System.IO.FileMode&quot;> </xref> valor que especifica se um arquivo é criado se não existe e determina se o conteúdo dos arquivos existentes é retido ou substituído."
    return:
      type: System.IO.FileStream
      description: "Um <xref href=&quot;System.IO.FileStream&quot;> </xref> aberto no modo especificado e o caminho, com acesso de leitura/gravação e não compartilhado."
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária.       - ou - <code>mode</code> é <xref href=&quot;System.IO.FileMode&quot;> </xref> e o arquivo especificado é um arquivo oculto."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>especificado um valor inválido."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado em <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess)
  nameWithType: File.Open(String,FileMode,FileAccess)
  fullName: System.IO.File.Open(String,FileMode,FileAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre uma <xref href=&quot;System.IO.FileStream&quot;> </xref> no caminho especificado, com o modo especificado e o acesso."
  remarks: "O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>"
  example:
  - "The following example opens a file with read-only access.  \n  \n [!code-cs[file open2#1](~/add/codesnippet/csharp/m-system.io.file.open-sy_1_1.cs)]\n [!code-cpp[file open2#1](~/add/codesnippet/cpp/m-system.io.file.open-sy_1_1.cpp)]\n [!code-vb[file open2#1](~/add/codesnippet/visualbasic/m-system.io.file.open-sy_1_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo a ser aberto."
    - id: mode
      type: System.IO.FileMode
      description: "Um <xref href=&quot;System.IO.FileMode&quot;> </xref> valor que especifica se um arquivo é criado se não existe e determina se o conteúdo dos arquivos existentes é retido ou substituído."
    - id: access
      type: System.IO.FileAccess
      description: "Um <xref href=&quot;System.IO.FileAccess&quot;> </xref> valor que especifica as operações que podem ser executadas no arquivo."
    return:
      type: System.IO.FileStream
      description: "Um descompartilhada <xref href=&quot;System.IO.FileStream&quot;> </xref> que fornece acesso ao arquivo especificado, o modo especificado e o acesso."
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>.       -or-       <code>access</code> specified <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;></xref> and <code>mode</code> specified <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateNew&quot; name=&quot;CreateNew&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Truncate&quot; name=&quot;Truncate&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um arquivo que é somente leitura e <code>access</code> não é <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária.       - ou - <code>mode</code> é <xref href=&quot;System.IO.FileMode&quot;> </xref> e o arquivo especificado é um arquivo oculto."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>ou <code>access</code> especificado um valor inválido."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado em <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: File.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.File.Open(String,FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre uma <xref href=&quot;System.IO.FileStream&quot;> </xref> no caminho especificado, com o modo especificado com leitura, gravação ou leitura/gravação acesso e a opção de compartilhamento especificada."
  remarks: "O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example opens a file with read-only access and with file sharing disallowed.  \n  \n [!code-cs[file open3#1](~/add/codesnippet/csharp/da5a0cfa-1b45-4d75-942d-_1.cs)]\n [!code-cpp[file open3#1](~/add/codesnippet/cpp/da5a0cfa-1b45-4d75-942d-_1.cpp)]\n [!code-vb[file open3#1](~/add/codesnippet/visualbasic/da5a0cfa-1b45-4d75-942d-_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo a ser aberto."
    - id: mode
      type: System.IO.FileMode
      description: "Um <xref href=&quot;System.IO.FileMode&quot;> </xref> valor que especifica se um arquivo é criado se não existe e determina se o conteúdo dos arquivos existentes é retido ou substituído."
    - id: access
      type: System.IO.FileAccess
      description: "Um <xref href=&quot;System.IO.FileAccess&quot;> </xref> valor que especifica as operações que podem ser executadas no arquivo."
    - id: share
      type: System.IO.FileShare
      description: "Um <xref href=&quot;System.IO.FileShare&quot;> </xref> valor que especifica o tipo de acesso que outros threads de tem o arquivo."
    return:
      type: System.IO.FileStream
      description: "Um <xref href=&quot;System.IO.FileStream&quot;> </xref> no caminho especificado, com o modo especificado com leitura, gravação ou leitura/gravação acesso e a opção de compartilhamento especificada."
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>.       -or-       <code>access</code> specified <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;></xref> and <code>mode</code> specified <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateNew&quot; name=&quot;CreateNew&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Truncate&quot; name=&quot;Truncate&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um arquivo que é somente leitura e <code>access</code> não é <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária.       - ou - <code>mode</code> é <xref href=&quot;System.IO.FileMode&quot;> </xref> e o arquivo especificado é um arquivo oculto."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>, <code>access</code>, ou <code>share</code> especificado um valor inválido."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado em <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.OpenRead(System.String)
  id: OpenRead(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenRead(String)
  nameWithType: File.OpenRead(String)
  fullName: System.IO.File.OpenRead(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um arquivo existente para leitura."
  remarks: "Esse método é equivalente a <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>sobrecarga de construtor com um <xref:System.IO.FileMode>valor <xref:System.IO.FileMode>, um <xref:System.IO.FileAccess>valor <xref:System.IO.FileAccess>e um <xref:System.IO.FileShare>valor de <xref:System.IO.FileShare>.</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.FileMode> </xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>       O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example opens a file for reading.  \n  \n [!code-cs[file openread#1](~/add/codesnippet/csharp/m-system.io.file.openrea_1.cs)]\n [!code-vb[file openread#1](~/add/codesnippet/visualbasic/m-system.io.file.openrea_1.vb)]\n [!code-cpp[file openread#1](~/add/codesnippet/cpp/m-system.io.file.openrea_1.cpp)]"
  syntax:
    content: public static System.IO.FileStream OpenRead (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo a ser aberto para leitura."
    return:
      type: System.IO.FileStream
      description: "Somente leitura <xref href=&quot;System.IO.FileStream&quot;> </xref> no caminho especificado."
  overload: System.IO.File.OpenRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é uma unidade não mapeada)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado em <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  platform:
  - net462
- uid: System.IO.File.OpenText(System.String)
  id: OpenText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenText(String)
  nameWithType: File.OpenText(String)
  fullName: System.IO.File.OpenText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um arquivo de texto codificado UTF-8 existente para leitura."
  remarks: "Esse método é equivalente a <xref:System.IO.StreamReader.%23ctor%28System.String%29>sobrecarga de construtor.</xref:System.IO.StreamReader.%23ctor%28System.String%29>       O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example opens a text file for reading.  \n  \n [!code-vb[file opentext#1](~/add/codesnippet/visualbasic/m-system.io.file.opentex_1.vb)]\n [!code-cs[file opentext#1](~/add/codesnippet/csharp/m-system.io.file.opentex_1.cs)]\n [!code-cpp[file opentext#1](~/add/codesnippet/cpp/m-system.io.file.opentex_1.cpp)]"
  syntax:
    content: public static System.IO.StreamReader OpenText (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo a ser aberto para leitura."
    return:
      type: System.IO.StreamReader
      description: "Um <xref:System.IO.StreamReader>no caminho especificado.</xref:System.IO.StreamReader>"
  overload: System.IO.File.OpenText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado em <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.OpenWrite(System.String)
  id: OpenWrite(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenWrite(String)
  nameWithType: File.OpenWrite(String)
  fullName: System.IO.File.OpenWrite(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um arquivo existente ou cria um novo arquivo para gravação."
  remarks: "Esse método é equivalente a <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>sobrecarga de construtor com modo de arquivo definido como <xref:System.IO.FileMode>, o acesso definido como <xref:System.IO.FileAccess>e o modo de compartilhamento definida como <xref:System.IO.FileShare>.</xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>       O método OpenWrite abre um arquivo, se um já existe para o caminho do arquivo ou cria um novo arquivo caso não exista. Para um arquivo existente, ele não anexa o novo texto para o texto existente. Em vez disso, ele substitui os caracteres existentes com os novos caracteres. Se você substituir uma cadeia de caracteres mais longa (como &quot;Este é um teste do método OpenWrite&quot;) com uma cadeia de caracteres mais curto (por exemplo, &quot;segunda execução&quot;), o arquivo conterá uma mistura de cadeias de caracteres (&quot;segundo runtest do método OpenWrite&quot;).       O `path` parâmetro pode especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, use o <xref:System.IO.Directory.GetCurrentDirectory%2A>método.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example opens a file for reading and writing.  \n  \n [!code-cpp[file openwrite#1](~/add/codesnippet/cpp/m-system.io.file.openwri_1.cpp)]\n [!code-cs[file openwrite#1](~/add/codesnippet/csharp/m-system.io.file.openwri_1.cs)]\n [!code-vb[file openwrite#1](~/add/codesnippet/visualbasic/m-system.io.file.openwri_1.vb)]"
  syntax:
    content: public static System.IO.FileStream OpenWrite (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo a ser aberto para gravação."
    return:
      type: System.IO.FileStream
      description: "Um descompartilhada <xref href=&quot;System.IO.FileStream&quot;> </xref> objeto no caminho especificado com <xref href=&quot;System.IO.FileAccess&quot;> </xref> acesso."
  overload: System.IO.File.OpenWrite*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       - ou - <code> path </code> especificado um arquivo somente leitura ou diretório."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é uma unidade não mapeada)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: File.ReadAllBytes(String)
  fullName: System.IO.File.ReadAllBytes(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um arquivo binário, lê o conteúdo do arquivo em uma matriz de bytes e, em seguida, fecha o arquivo."
  remarks: "Dado um caminho de arquivo, este método abre o arquivo, lê o conteúdo do arquivo em uma matriz de bytes e, em seguida, fecha o arquivo."
  syntax:
    content: public static byte[] ReadAllBytes (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo a ser aberto para leitura."
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que contém o conteúdo do arquivo."
  overload: System.IO.File.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Não há suporte para esta operação na plataforma atual.       - ou - <code> path </code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado em <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.ReadAllLines(System.String)
  id: ReadAllLines(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllLines(String)
  nameWithType: File.ReadAllLines(String)
  fullName: System.IO.File.ReadAllLines(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um arquivo de texto, lê todas as linhas do arquivo e, em seguida, fecha o arquivo."
  remarks: "This method opens a file, reads each line of the file, then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected."
  example:
  - "The following code example demonstrates the use of the ReadAllLines method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_1_1.vb)]\n [!code-cs[System.IO.File.AllLines#00](~/add/codesnippet/csharp/m-system.io.file.readall_1_1.cs)]"
  syntax:
    content: public static string[] ReadAllLines (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo a ser aberto para leitura."
    return:
      type: System.String[]
      description: "Uma matriz de cadeia de caracteres que contém todas as linhas do arquivo."
  overload: System.IO.File.ReadAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado em <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  id: ReadAllLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllLines(String,Encoding)
  nameWithType: File.ReadAllLines(String,Encoding)
  fullName: System.IO.File.ReadAllLines(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um arquivo, lê todas as linhas do arquivo com a codificação especificada e, em seguida, fecha o arquivo."
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected."
  example:
  - "The following code example demonstrates the use of the ReadAllLines method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_0_1.vb)]\n [!code-cs[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.readall_0_1.cs)]"
  syntax:
    content: public static string[] ReadAllLines (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo a ser aberto para leitura."
    - id: encoding
      type: System.Text.Encoding
      description: "A codificação aplicado ao conteúdo do arquivo."
    return:
      type: System.String[]
      description: "Uma matriz de cadeia de caracteres que contém todas as linhas do arquivo."
  overload: System.IO.File.ReadAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado em <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: File.ReadAllText(String)
  fullName: System.IO.File.ReadAllText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um arquivo de texto, lê todas as linhas do arquivo e, em seguida, fecha o arquivo."
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n Use the <xref:System.IO.File.ReadAllText%28System.String%2CSystem.Text.Encoding%29> method overload when reading files that might contain imported text, because unrecognized characters may not be read correctly.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised."
  example:
  - "The following code example demonstrates the use of the ReadAllText method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_3_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.readall_3_1.cs)]"
  syntax:
    content: public static string ReadAllText (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo a ser aberto para leitura."
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém todas as linhas do arquivo."
  overload: System.IO.File.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado em <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: File.ReadAllText(String,Encoding)
  fullName: System.IO.File.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um arquivo, lê todas as linhas do arquivo com a codificação especificada e, em seguida, fecha o arquivo."
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised.  \n  \n To use the encoding settings as configured for your operating system, specify the <xref:System.Text.Encoding.Default%2A?displayProperty=fullName> property for the `encoding` parameter."
  example:
  - "The following code example demonstrates the use of the ReadAllText method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.readall_2_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_2_1.vb)]"
  syntax:
    content: public static string ReadAllText (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo a ser aberto para leitura."
    - id: encoding
      type: System.Text.Encoding
      description: "A codificação aplicado ao conteúdo do arquivo."
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém todas as linhas do arquivo."
  overload: System.IO.File.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado em <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.ReadLines(System.String)
  id: ReadLines(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadLines(String)
  nameWithType: File.ReadLines(String)
  fullName: System.IO.File.ReadLines(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Lê as linhas de um arquivo."
  remarks: "O ReadLines e <xref:System.IO.File.ReadAllLines%2A>métodos diferem da seguinte maneira: quando você usa ReadLines, você pode iniciar a enumerar a coleção de cadeias de caracteres antes da coleção inteira será retornada; quando você usa <xref:System.IO.File.ReadAllLines%2A>, você deve esperar para a matriz inteira de cadeias de caracteres retornados antes de você pode acessar a matriz.</xref:System.IO.File.ReadAllLines%2A> </xref:System.IO.File.ReadAllLines%2A> Portanto, quando você estiver trabalhando com arquivos muito grandes, ReadLines pode ser mais eficiente.       Você pode usar o método ReadLines para fazer o seguinte:-executar [objetos LINQ to](~/add/includes/ajax-current-ext-md.md) consultas em um arquivo para obter um conjunto filtrado de suas linhas.      -Gravar a coleção retornada de linhas em um arquivo com o <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>método, ou acrescentá-las para um arquivo existente com o <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>método.</xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>      -Criar uma instância imediatamente populada de uma coleção que usa uma <xref:System.Collections.Generic.IEnumerable%601>coleção de cadeias de caracteres para seu construtor, como uma <xref:System.Collections.Generic.IList%601>ou <xref:System.Collections.Generic.Queue%601>.</xref:System.Collections.Generic.Queue%601> </xref:System.Collections.Generic.IList%601> </xref:System.Collections.Generic.IEnumerable%601>       Esse método usa <xref:System.Text.Encoding.UTF8%2A>para o valor de codificação.</xref:System.Text.Encoding.UTF8%2A>"
  example:
  - "The following example reads the lines of a file to find lines that contain specified strings.  \n  \n [!code-vb[System.IO.File.ReadLines#1](~/add/codesnippet/visualbasic/m-system.io.file.readlin_1.vb)]\n [!code-cs[System.IO.File.ReadLines#1](~/add/codesnippet/csharp/m-system.io.file.readlin_1.cs)]  \n  \n The following example uses the ReadLines method in a LINQ query that enumerates all directories for files that have a .txt extension, reads each line of the file, and displays the line if it contains the string \"Microsoft\".  \n  \n [!code-cs[System.IO.Directory.EnumerateFiles#1](~/add/codesnippet/csharp/m-system.io.file.readlin_2.cs)]\n [!code-vb[System.IO.Directory.EnumerateFiles#1](~/add/codesnippet/visualbasic/m-system.io.file.readlin_2.vb)]"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para leitura."
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Todas as linhas do arquivo, ou as linhas que são o resultado de uma consulta."
  overload: System.IO.File.ReadLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, definidos pelo <xref:System.IO.Path.GetInvalidPathChars*> método."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>não é válido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado por <code> path </code> não foi encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Especifica um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> é um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)
  id: ReadLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadLines(String,Encoding)
  nameWithType: File.ReadLines(String,Encoding)
  fullName: System.IO.File.ReadLines(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Leia as linhas de um arquivo que tem uma codificação especificada."
  remarks: "Use esse método para especificar uma codificação para usar o arquivo de leitura.       O ReadLines e <xref:System.IO.File.ReadAllLines%2A>métodos diferem da seguinte maneira: quando você usa ReadLines, você pode iniciar a enumerar a coleção de cadeias de caracteres antes da coleção inteira será retornada.</xref:System.IO.File.ReadAllLines%2A> Quando você usa <xref:System.IO.File.ReadAllLines%2A>, você deve esperar para a matriz inteira de cadeias de caracteres retornados antes de você pode acessar a matriz.</xref:System.IO.File.ReadAllLines%2A> Portanto, quando você estiver trabalhando com arquivos muito grandes, ReadLines pode ser mais eficiente.       Você pode usar o método ReadLines para fazer o seguinte:-executar [objetos LINQ to](~/add/includes/ajax-current-ext-md.md) consultas em um arquivo para obter um conjunto filtrado de suas linhas.      -Gravar a coleção retornada de linhas em um arquivo com o <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>método, ou acrescentá-las para um arquivo existente com o <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>método.</xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>      -Criar uma instância imediatamente populada de uma coleção que usa uma <xref:System.Collections.Generic.IEnumerable%601>coleção de cadeias de caracteres para seu construtor, como uma <xref:System.Collections.Generic.IList%601>ou <xref:System.Collections.Generic.Queue%601>.</xref:System.Collections.Generic.Queue%601> </xref:System.Collections.Generic.IList%601> </xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para leitura."
    - id: encoding
      type: System.Text.Encoding
      description: "A codificação é aplicada ao conteúdo do arquivo."
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Todas as linhas do arquivo, ou as linhas que são o resultado de uma consulta."
  overload: System.IO.File.ReadLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.GetInvalidPathChars*> método."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>não é válido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado por <code> path </code> não foi encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Especifica um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> é um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.Replace(System.String,System.String,System.String)
  id: Replace(System.String,System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Replace(String,String,String)
  nameWithType: File.Replace(String,String,String)
  fullName: System.IO.File.Replace(String,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Substitui o conteúdo de um arquivo especificado com o conteúdo de outro arquivo, excluindo o arquivo original e criar um backup do arquivo substituído."
  remarks: "O método Replace substitui o conteúdo de um arquivo especificado com o conteúdo de outro arquivo.  Ele também cria um backup do arquivo que foi substituído.       Se o `sourceFileName` e `destinationFileName` estão em diferentes volumes, esse método gerará uma exceção. Se o `destinationBackupFileName` está em um volume diferente do arquivo de origem, o arquivo de backup será excluído.       Passar `null` para o `destinationBackupFileName` parâmetro se você não deseja criar um backup do arquivo que está sendo substituído."
  example:
  - "The following code example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-vb[IO.File.Replace#1](~/add/codesnippet/visualbasic/m-system.io.file.replace_1.vb)]\n [!code-cs[IO.File.Replace#1](~/add/codesnippet/csharp/m-system.io.file.replace_1.cs)]\n [!code-cpp[IO.File.Replace#1](~/add/codesnippet/cpp/m-system.io.file.replace_1.cpp)]"
  syntax:
    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O nome de um arquivo que substitui o arquivo especificado por `destinationFileName`."
    - id: destinationFileName
      type: System.String
      description: "O nome do arquivo que está sendo substituído."
    - id: destinationBackupFileName
      type: System.String
      description: "O nome do arquivo de backup."
  overload: System.IO.File.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O caminho descrito pelo <code> destinationFileName </code> parâmetro não era uma forma inválida.       o caminho descrito pelo - ou - o <code> destinationBackupFileName </code> parâmetro não era uma forma inválida."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "Uma unidade inválida foi especificada."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo descrito pelo atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> não foi possível encontrar o objeto.       o arquivo descrito pelo - ou - o <code> destinationBackupFileName </code> não foi possível encontrar o parâmetro."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operacional for Windows 98 Segunda edição ou anterior e o sistema de arquivos não NTFS."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> sourceFileName </code> ou <code> destinationFileName </code> parâmetro especifica um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - parâmetros de origem ou destino especificam um diretório, em vez de um arquivo.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  id: Replace(System.String,System.String,System.String,System.Boolean)
  parent: System.IO.File
  langs:
  - csharp
  name: Replace(String,String,String,Boolean)
  nameWithType: File.Replace(String,String,String,Boolean)
  fullName: System.IO.File.Replace(String,String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Substitui o conteúdo de um arquivo especificado com o conteúdo de outro arquivo, excluindo o arquivo original e criar um backup do arquivo substituído e, opcionalmente, ignora erros de mesclagem."
  remarks: "O método Replace substitui o conteúdo de um arquivo especificado com o conteúdo de outro arquivo.  Ele também cria um backup do arquivo que foi substituído.       Se o `sourceFileName` e `destinationFileName` estão em diferentes volumes, esse método gerará uma exceção. Se o `destinationBackupFileName` está em um volume diferente do arquivo de origem, o arquivo de backup será excluído.       Passar `null` para o `destinationBackupFileName` parâmetro se você não deseja criar um backup do arquivo que está sendo substituído."
  example:
  - "The following code example uses the Replace method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-vb[IO.File.Replace#1](~/add/codesnippet/visualbasic/be01e0a6-2a02-46ff-8d10-_1.vb)]\n [!code-cs[IO.File.Replace#1](~/add/codesnippet/csharp/be01e0a6-2a02-46ff-8d10-_1.cs)]\n [!code-cpp[IO.File.Replace#1](~/add/codesnippet/cpp/be01e0a6-2a02-46ff-8d10-_1.cpp)]"
  syntax:
    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O nome de um arquivo que substitui o arquivo especificado por `destinationFileName`."
    - id: destinationFileName
      type: System.String
      description: "O nome do arquivo que está sendo substituído."
    - id: destinationBackupFileName
      type: System.String
      description: "O nome do arquivo de backup."
    - id: ignoreMetadataErrors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para ignorar erros de mesclagem (como atributos e listas de controle de acesso (ACLs)) do arquivo de substituição para o arquivo de substituição; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.File.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O caminho descrito pelo <code> destinationFileName </code> parâmetro não era uma forma inválida.       o caminho descrito pelo - ou - o <code> destinationBackupFileName </code> parâmetro não era uma forma inválida."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "Uma unidade inválida foi especificada."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo descrito pelo atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> não foi possível encontrar o objeto.       o arquivo descrito pelo - ou - o <code> destinationBackupFileName </code> não foi possível encontrar o parâmetro."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operacional for Windows 98 Segunda edição ou anterior e o sistema de arquivos não NTFS."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> sourceFileName </code> ou <code> destinationFileName </code> parâmetro especifica um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - parâmetros de origem ou destino especificam um diretório, em vez de um arquivo.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  id: SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  langs:
  - csharp
  name: SetAccessControl(String,FileSecurity)
  nameWithType: File.SetAccessControl(String,FileSecurity)
  fullName: System.IO.File.SetAccessControl(String,FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Aplica-se a entradas ACL (lista) de controle de acesso descritas por um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objeto para o arquivo especificado."
  remarks: "O método SetAccessControl se aplica a entradas ACL (lista) de controle de acesso a um arquivo que representa a lista ACL noninherited.      > [!CAUTION] > A ACL especificado para o `fileSecurity` parâmetro substitui a ACL existente para o arquivo. Para adicionar permissões para um novo usuário, use o <xref:System.IO.File.GetAccessControl%2A>método para obter a ACL existente, modificá-lo e, em seguida, use SetAccessControl para aplicá-lo de volta para o arquivo.</xref:System.IO.File.GetAccessControl%2A>       Uma ACL descreve indivíduos e/ou grupos que têm ou não tem direitos para ações específicas sobre o arquivo especificado. Para obter mais informações, consulte [como: Adicionar ou remover entradas da lista de controle de acesso](~/add/includes/ajax-current-ext-md.md).       O método SetAccessControl persiste apenas <xref:System.Security.AccessControl.FileSecurity>objetos que foram modificados após a criação do objeto.</xref:System.Security.AccessControl.FileSecurity>  Se um <xref:System.Security.AccessControl.FileSecurity>objeto não tiver sido modificado, não serão mantido para um arquivo.</xref:System.Security.AccessControl.FileSecurity>  Portanto, não é possível recuperar um <xref:System.Security.AccessControl.FileSecurity>de um arquivo de objeto e reaplicar o mesmo objeto para outro arquivo.</xref:System.Security.AccessControl.FileSecurity>       Para copiar informações de ACL de um arquivo para outro: 1.  Use o <xref:System.IO.File.GetAccessControl%2A>método para recuperar o <xref:System.Security.AccessControl.FileSecurity>objeto do arquivo de origem.</xref:System.Security.AccessControl.FileSecurity> </xref:System.IO.File.GetAccessControl%2A>      2.  Criar um novo <xref:System.Security.AccessControl.FileSecurity>objeto para o arquivo de destino.</xref:System.Security.AccessControl.FileSecurity>      3.  Use o <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>ou <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>método da fonte de <xref:System.Security.AccessControl.FileSecurity>objeto para recuperar as informações de ACL.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>      4.  Use o <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>ou <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>método para copiar as informações recuperadas na etapa 3 para o destino <xref:System.Security.AccessControl.FileSecurity>objeto.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>      5.  Definir o destino <xref:System.Security.AccessControl.FileSecurity>objeto para o arquivo de destino usando o método SetAccessControl.</xref:System.Security.AccessControl.FileSecurity>       Em ambientes de NTFS, <xref:System.Security.AccessControl.FileSystemRights>e <xref:System.Security.AccessControl.FileSystemRights>são concedidas ao usuário se o usuário tiver <xref:System.Security.AccessControl.FileSystemRights>direitos na pasta pai.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> Negar <xref:System.Security.AccessControl.FileSystemRights>e <xref:System.Security.AccessControl.FileSystemRights>, negar <xref:System.Security.AccessControl.FileSystemRights>no diretório pai.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and SetAccessControl methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/4f792c56-f52f-4b2d-89e4-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/4f792c56-f52f-4b2d-89e4-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/4f792c56-f52f-4b2d-89e4-_1.cpp)]"
  syntax:
    content: public static void SetAccessControl (string path, System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: path
      type: System.String
      description: "Um arquivo para adicionar ou remover entradas de ACL (lista) de controle de acesso."
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "Um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objeto que descreve uma entrada ACL para aplicar ao arquivo descrito pelo `path` parâmetro."
  overload: System.IO.File.SetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "O arquivo não pôde ser encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> path </code> parâmetro especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code> path </code> parâmetro especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileSecurity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  id: SetAttributes(System.String,System.IO.FileAttributes)
  parent: System.IO.File
  langs:
  - csharp
  name: SetAttributes(String,FileAttributes)
  nameWithType: File.SetAttributes(String,FileAttributes)
  fullName: System.IO.File.SetAttributes(String,FileAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define especificado <xref href=&quot;System.IO.FileAttributes&quot;> </xref> do arquivo no caminho especificado."
  remarks: "O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Atributos, certos arquivos como <xref:System.IO.FileAttributes>e <xref:System.IO.FileAttributes>, podem ser combinados.</xref:System.IO.FileAttributes> </xref:System.IO.FileAttributes> Outros atributos, como <xref:System.IO.FileAttributes>, deve ser usado sozinho.</xref:System.IO.FileAttributes>       Não é possível alterar o status de compactação de um <xref:System.IO.File>objeto usando o método SetAttributes.</xref:System.IO.File>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \n  \n [!code-cs[File GetAttributes#1](~/add/codesnippet/csharp/m-system.io.file.setattr_1.cs)]\n [!code-cpp[File GetAttributes#1](~/add/codesnippet/cpp/m-system.io.file.setattr_1.cpp)]\n [!code-vb[File GetAttributes#1](~/add/codesnippet/visualbasic/m-system.io.file.setattr_1.vb)]"
  syntax:
    content: public static void SetAttributes (string path, System.IO.FileAttributes fileAttributes);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o arquivo."
    - id: fileAttributes
      type: System.IO.FileAttributes
      description: "Uma combinação bit a bit dos valores de enumeração."
  overload: System.IO.File.SetAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>está vazio, contém somente espaços em branco, contém caracteres inválidos, ou o atributo de arquivo é inválido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não pode ser encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)
  id: SetCreationTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetCreationTime(String,DateTime)
  nameWithType: File.SetCreationTime(String,DateTime)
  fullName: System.IO.File.SetCreationTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define a data e hora que o arquivo foi criado."
  remarks: "O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Unidades formatadas como NTFS podem armazenar em cache informações-metadados do arquivo, como a hora de criação do arquivo, por um curto período de tempo. Como resultado, pode ser necessário definir explicitamente a hora de criação de um arquivo, se você estiver substituindo ou substituir um arquivo existente.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void SetCreationTime (string path, DateTime creationTime);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para o qual definir as informações de data e hora de criação."
    - id: creationTime
      type: System.DateTime
      description: "Um <xref:System.DateTime>que contém o valor a ser definido para a data de criação e a hora de `path`.</xref:System.DateTime> Esse valor é expresso no horário local."
  overload: System.IO.File.SetCreationTime*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O caminho especificado não foi encontrado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao executar a operação."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>creationTime</code>Especifica um valor fora do intervalo de datas, horas ou ambos permitido para esta operação."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  id: SetCreationTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetCreationTimeUtc(String,DateTime)
  nameWithType: File.SetCreationTimeUtc(String,DateTime)
  fullName: System.IO.File.SetCreationTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define a data e hora, em vez de universal coordenado (UTC), que o arquivo foi criado."
  remarks: "O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Unidades formatadas como NTFS podem armazenar em cache informações-metadados do arquivo, como a hora de criação do arquivo, por um curto período de tempo. Como resultado, pode ser necessário definir explicitamente a hora de criação de um arquivo, se você estiver substituindo ou substituir um arquivo existente.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void SetCreationTimeUtc (string path, DateTime creationTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para o qual definir as informações de data e hora de criação."
    - id: creationTimeUtc
      type: System.DateTime
      description: "Um <xref:System.DateTime>que contém o valor a ser definido para a data de criação e a hora de `path`.</xref:System.DateTime> Esse valor é expresso em hora UTC."
  overload: System.IO.File.SetCreationTimeUtc*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O caminho especificado não foi encontrado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao executar a operação."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>creationTime</code>Especifica um valor fora do intervalo de datas, horas ou ambos permitido para esta operação."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  platform:
  - net462
- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  id: SetLastAccessTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastAccessTime(String,DateTime)
  nameWithType: File.SetLastAccessTime(String,DateTime)
  fullName: System.IO.File.SetLastAccessTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define a data e hora que o arquivo especificado foi acessado pela última vez."
  remarks: "O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example checks the file system for the specified file, creating it if necessary, and then sets and gets the last access time.  \n  \n [!code-cpp[file setlastaccess#1](~/add/codesnippet/cpp/m-system.io.file.setlast_0_1.cpp)]\n [!code-vb[file setlastaccess#1](~/add/codesnippet/visualbasic/m-system.io.file.setlast_0_1.vb)]\n [!code-cs[file setlastaccess#1](~/add/codesnippet/csharp/m-system.io.file.setlast_0_1.cs)]"
  syntax:
    content: public static void SetLastAccessTime (string path, DateTime lastAccessTime);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para o qual definir as informações de data e hora de acesso."
    - id: lastAccessTime
      type: System.DateTime
      description: "Um <xref:System.DateTime>que contém o valor a ser definido para o acesso de data e hora da última `path`.</xref:System.DateTime> Esse valor é expresso no horário local."
  overload: System.IO.File.SetLastAccessTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O caminho especificado não foi encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastAccessTime</code>Especifica um valor fora do intervalo de datas ou horas permitidas para esta operação."
  platform:
  - net462
- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  id: SetLastAccessTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastAccessTimeUtc(String,DateTime)
  nameWithType: File.SetLastAccessTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastAccessTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define a data e hora, em vez de universal coordenado (UTC), que o arquivo especificado foi acessado pela última vez."
  remarks: "O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void SetLastAccessTimeUtc (string path, DateTime lastAccessTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para o qual definir as informações de data e hora de acesso."
    - id: lastAccessTimeUtc
      type: System.DateTime
      description: "Um <xref:System.DateTime>que contém o valor a ser definido para o acesso de data e hora da última `path`.</xref:System.DateTime> Esse valor é expresso em hora UTC."
  overload: System.IO.File.SetLastAccessTimeUtc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O caminho especificado não foi encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastAccessTimeUtc</code>Especifica um valor fora do intervalo de datas ou horas permitidas para esta operação."
  platform:
  - net462
- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  id: SetLastWriteTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastWriteTime(String,DateTime)
  nameWithType: File.SetLastWriteTime(String,DateTime)
  fullName: System.IO.File.SetLastWriteTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define a data e a hora em que o arquivo especificado foi gravado pela última."
  remarks: "O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example checks the file system for the specified file, creating the file if necessary, and then sets and gets the last write time of the file.  \n  \n [!code-cs[file setlastwrite#1](~/add/codesnippet/csharp/m-system.io.file.setlast_1_1.cs)]\n [!code-vb[file setlastwrite#1](~/add/codesnippet/visualbasic/m-system.io.file.setlast_1_1.vb)]\n [!code-cpp[file setlastwrite#1](~/add/codesnippet/cpp/m-system.io.file.setlast_1_1.cpp)]"
  syntax:
    content: public static void SetLastWriteTime (string path, DateTime lastWriteTime);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para o qual definir informações de data e hora."
    - id: lastWriteTime
      type: System.DateTime
      description: "Um <xref:System.DateTime>que contém o valor a ser definido para a gravação de data e hora da última `path`.</xref:System.DateTime> Esse valor é expresso no horário local."
  overload: System.IO.File.SetLastWriteTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O caminho especificado não foi encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastWriteTime</code>Especifica um valor fora do intervalo de datas ou horas permitidas para esta operação."
  platform:
  - net462
- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  id: SetLastWriteTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastWriteTimeUtc(String,DateTime)
  nameWithType: File.SetLastWriteTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastWriteTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define a data e hora, em coordenado universal (UTC), que o arquivo especificado foi gravado pela última."
  remarks: "O `path` parâmetro tem permissão para especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativo ao diretório de trabalho atual. Para obter o diretório de trabalho atual, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void SetLastWriteTimeUtc (string path, DateTime lastWriteTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para o qual definir informações de data e hora."
    - id: lastWriteTimeUtc
      type: System.DateTime
      description: "Um <xref:System.DateTime>que contém o valor a ser definido para a gravação de data e hora da última `path`.</xref:System.DateTime> Esse valor é expresso em hora UTC."
  overload: System.IO.File.SetLastWriteTimeUtc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O caminho especificado não foi encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastWriteTimeUtc</code>Especifica um valor fora do intervalo de datas ou horas permitidas para esta operação."
  platform:
  - net462
- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])
  id: WriteAllBytes(System.String,System.Byte[])
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[])
  nameWithType: File.WriteAllBytes(String,Byte[])
  fullName: System.IO.File.WriteAllBytes(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo arquivo, grava a matriz de bytes especificado para o arquivo e, em seguida, fecha o arquivo. Se o arquivo de destino já existir, ele será substituído."
  remarks: "Dada uma matriz de bytes e um caminho de arquivo, este método abre o arquivo especificado, grava o conteúdo da matriz de bytes no arquivo e, em seguida, fecha o arquivo."
  syntax:
    content: public static void WriteAllBytes (string path, byte[] bytes);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para gravação."
    - id: bytes
      type: System.Byte[]
      description: "Os bytes para gravar o arquivo."
  overload: System.IO.File.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou a matriz de bytes está vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,IEnumerable<String>)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo arquivo, grava uma coleção de cadeias de caracteres para o arquivo e, em seguida, fecha o arquivo."
  remarks: "O comportamento padrão do método WriteAllLines é gravar os dados usando a codificação UTF-8 sem uma marca de ordem de byte (BOM). Se for necessário incluir um identificador de UTF-8, como uma marca de ordem de byte no início de um arquivo, use o <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29>sobrecarga de método com <xref:System.Text.Encoding.UTF8%2A>codificação.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29>       Se o arquivo de destino já existir, ele será substituído.       Você pode usar esse método para criar o conteúdo de uma classe de coleção que usa um <xref:System.Collections.Generic.IEnumerable%601>em seu construtor, como um <xref:System.Collections.Generic.List%601.%23ctor%2A>, <xref:System.Collections.Generic.HashSet%601.%23ctor%2A>, ou uma <xref:System.Collections.Generic.SortedSet%601.%23ctor%2A>classe</xref:System.Collections.Generic.SortedSet%601.%23ctor%2A> </xref:System.Collections.Generic.HashSet%601.%23ctor%2A> </xref:System.Collections.Generic.List%601.%23ctor%2A> </xref:System.Collections.Generic.IEnumerable%601>"
  example:
  - "The following example writes selected lines from a sample data file to a file.  \n  \n [!code-cs[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/csharp/f09e9593-445c-47ad-bb1b-_1.cs)]\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/visualbasic/f09e9593-445c-47ad-bb1b-_1.vb)]"
  syntax:
    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para gravação."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "As linhas para gravar o arquivo."
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, definidos pelo <xref:System.IO.Path.GetInvalidPathChars*> método."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path </code>or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>não é válido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Especifica um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> é um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.String[])
  id: WriteAllLines(System.String,System.String[])
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,String[])
  nameWithType: File.WriteAllLines(String,String[])
  fullName: System.IO.File.WriteAllLines(String,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo arquivo, gravar a matriz de cadeia de caracteres especificada no arquivo e, em seguida, fecha o arquivo."
  remarks: "If the target file already exists, it is overwritten.  \n  \n The default behavior of the WriteAllLines method is to write out data using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the [WriteAllLines(String, String\\[\\], Encoding)](assetId:///M:System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)?qualifyHint=False&autoUpgrade=False) method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.  \n  \n Given a string array and a file path, this method opens the specified file, writes the string array to the file, and then closes the file."
  example:
  - "The following code example demonstrates the use of the WriteAllLines method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_1_1.vb)]\n [!code-cs[System.IO.File.AllLines#00](~/add/codesnippet/csharp/m-system.io.file.writeal_1_1.cs)]"
  syntax:
    content: public static void WriteAllLines (string path, string[] contents);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para gravação."
    - id: contents
      type: System.String[]
      description: "A matriz de cadeia de caracteres para gravar o arquivo."
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either <code>path</code> or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo arquivo usando a codificação especificada, grava uma coleção de cadeias de caracteres para o arquivo e, em seguida, fecha o arquivo."
  remarks: "Se o arquivo de destino já existir, ele será substituído.       Você pode usar esse método para criar um arquivo que contém o seguinte:-os resultados de uma [objetos LINQ to](~/add/includes/ajax-current-ext-md.md) consultar as linhas de um arquivo, como obtida usando o <xref:System.IO.File.ReadLines%2A>método.</xref:System.IO.File.ReadLines%2A>      -O conteúdo de uma coleção que implementa um <xref:System.Collections.Generic.IEnumerable%601>de cadeias de caracteres.</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para gravação."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "As linhas para gravar o arquivo."
    - id: encoding
      type: System.Text.Encoding
      description: "O caractere de codificação a ser usada."
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, definidos pelo <xref:System.IO.Path.GetInvalidPathChars*> método."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path</code>,<code> contents</code>, or <code>encoding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>não é válido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Especifica um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> é um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  id: WriteAllLines(System.String,System.String[],System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,String[],Encoding)
  nameWithType: File.WriteAllLines(String,String[],Encoding)
  fullName: System.IO.File.WriteAllLines(String,String[],Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo arquivo, grava a matriz de cadeia de caracteres especificada no arquivo usando a codificação especificada e, em seguida, fecha o arquivo."
  remarks: "Se o arquivo de destino já existir, ele será substituído.       Dada uma matriz de cadeia de caracteres e um caminho de arquivo, este método abre o arquivo especificado, grava a matriz de cadeia de caracteres para o arquivo usando a codificação especificada e, em seguida, fecha o arquivo."
  example:
  - "The following code example demonstrates the use of the WriteAllLines method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/visualbasic/3d8070ff-3246-4c2d-a728-_1.vb)]\n [!code-cs[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/csharp/3d8070ff-3246-4c2d-a728-_1.cs)]"
  syntax:
    content: public static void WriteAllLines (string path, string[] contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para gravação."
    - id: contents
      type: System.String[]
      description: "A matriz de cadeia de caracteres para gravar o arquivo."
    - id: encoding
      type: System.Text.Encoding
      description: "Um <xref:System.Text.Encoding>aplicado de objeto que representa a codificação de caracteres para a matriz de cadeia de caracteres.</xref:System.Text.Encoding>"
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either <code>path</code> or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.WriteAllText(System.String,System.String)
  id: WriteAllText(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllText(String,String)
  nameWithType: File.WriteAllText(String,String)
  fullName: System.IO.File.WriteAllText(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo arquivo, grava a cadeia de caracteres especificada no arquivo e, em seguida, fecha o arquivo. Se o arquivo de destino já existir, ele será substituído."
  remarks: "Esse método usa UTF-8 codificação sem uma marca de ordem de Byte (BOM), portanto, usar o <xref:System.Text.Encoding.GetPreamble%2A>método retornará uma matriz de bytes vazia.</xref:System.Text.Encoding.GetPreamble%2A> Se for necessário incluir um identificador de UTF-8, como uma marca de ordem de byte no início de um arquivo, use o <xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29>sobrecarga de método com <xref:System.Text.Encoding.UTF8%2A>codificação.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29>       Devido a uma cadeia de caracteres e um caminho de arquivo, este método abre o arquivo especificado, grava a cadeia de caracteres para o arquivo e, em seguida, fecha o arquivo."
  example:
  - "The following code example demonstrates the use of the WriteAllText method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_0_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.writeal_0_1.cs)]"
  syntax:
    content: public static void WriteAllText (string path, string contents);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para gravação."
    - id: contents
      type: System.String
      description: "A cadeia de caracteres para gravar o arquivo."
  overload: System.IO.File.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>contents</code> is empty."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllText(String,String,Encoding)
  nameWithType: File.WriteAllText(String,String,Encoding)
  fullName: System.IO.File.WriteAllText(String,String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo arquivo, grava a cadeia de caracteres especificada para o arquivo usando a codificação especificada e, em seguida, fecha o arquivo. Se o arquivo de destino já existir, ele será substituído."
  remarks: "Devido a uma cadeia de caracteres e um caminho de arquivo, este método abre o arquivo especificado, grava a cadeia de caracteres para o arquivo usando a codificação especificada e, em seguida, fecha o arquivo. O identificador de arquivo é garantido para ser fechada por esse método, mesmo se as exceções são geradas."
  example:
  - "The following code example demonstrates the use of the WriteAllText method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.writeal_2_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_2_1.vb)]"
  syntax:
    content: public static void WriteAllText (string path, string contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O arquivo para gravação."
    - id: contents
      type: System.String
      description: "A cadeia de caracteres para gravar o arquivo."
    - id: encoding
      type: System.Text.Encoding
      description: "A codificação para aplicar à cadeia de caracteres."
  overload: System.IO.File.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>contents</code> is empty."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome do arquivo ou ambos excederem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas baseadas em Windows, caminhos devem ter menos de 248 caracteres e nomes de arquivo devem ter menos de 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é uma unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o arquivo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificado um arquivo que é somente leitura.       - ou - não há suporte para esta operação na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.DriveNotFoundException
  parent: System.IO
  isExternal: false
  name: DriveNotFoundException
  nameWithType: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Runtime.InteropServices.SEHException
  isExternal: true
  name: System.Runtime.InteropServices.SEHException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines(String,IEnumerable<String>)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.File.AppendAllText(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: AppendAllText(String,String)
  nameWithType: File.AppendAllText(String,String)
  fullName: System.IO.File.AppendAllText(String,String)
- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: AppendAllText(String,String,Encoding)
  nameWithType: File.AppendAllText(String,String,Encoding)
  fullName: System.IO.File.AppendAllText(String,String,Encoding)
- uid: System.IO.File.AppendText(System.String)
  parent: System.IO.File
  isExternal: false
  name: AppendText(String)
  nameWithType: File.AppendText(String)
  fullName: System.IO.File.AppendText(String)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: System.IO.File.Copy(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Copy(String,String)
  nameWithType: File.Copy(String,String)
  fullName: System.IO.File.Copy(String,String)
- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)
  parent: System.IO.File
  isExternal: false
  name: Copy(String,String,Boolean)
  nameWithType: File.Copy(String,String,Boolean)
  fullName: System.IO.File.Copy(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.File.Create(System.String)
  parent: System.IO.File
  isExternal: false
  name: Create(String)
  nameWithType: File.Create(String)
  fullName: System.IO.File.Create(String)
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.File.Create(System.String,System.Int32)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32)
  nameWithType: File.Create(String,Int32)
  fullName: System.IO.File.Create(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32,FileOptions)
  nameWithType: File.Create(String,Int32,FileOptions)
  fullName: System.IO.File.Create(String,Int32,FileOptions)
- uid: System.IO.FileOptions
  parent: System.IO
  isExternal: false
  name: FileOptions
  nameWithType: FileOptions
  fullName: System.IO.FileOptions
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32,FileOptions,FileSecurity)
  nameWithType: File.Create(String,Int32,FileOptions,FileSecurity)
  fullName: System.IO.File.Create(String,Int32,FileOptions,FileSecurity)
- uid: System.Security.AccessControl.FileSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSecurity
  nameWithType: FileSecurity
  fullName: System.Security.AccessControl.FileSecurity
- uid: System.IO.File.CreateText(System.String)
  parent: System.IO.File
  isExternal: false
  name: CreateText(String)
  nameWithType: File.CreateText(String)
  fullName: System.IO.File.CreateText(String)
- uid: System.IO.File.Decrypt(System.String)
  parent: System.IO.File
  isExternal: false
  name: Decrypt(String)
  nameWithType: File.Decrypt(String)
  fullName: System.IO.File.Decrypt(String)
- uid: System.IO.File.Delete(System.String)
  parent: System.IO.File
  isExternal: false
  name: Delete(String)
  nameWithType: File.Delete(String)
  fullName: System.IO.File.Delete(String)
- uid: System.IO.File.Encrypt(System.String)
  parent: System.IO.File
  isExternal: false
  name: Encrypt(String)
  nameWithType: File.Encrypt(String)
  fullName: System.IO.File.Encrypt(String)
- uid: System.IO.File.Exists(System.String)
  parent: System.IO.File
  isExternal: false
  name: Exists(String)
  nameWithType: File.Exists(String)
  fullName: System.IO.File.Exists(String)
- uid: System.IO.File.GetAccessControl(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl(String)
  nameWithType: File.GetAccessControl(String)
  fullName: System.IO.File.GetAccessControl(String)
- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl(String,AccessControlSections)
  nameWithType: File.GetAccessControl(String,AccessControlSections)
  fullName: System.IO.File.GetAccessControl(String,AccessControlSections)
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.IO.File.GetAttributes(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetAttributes(String)
  nameWithType: File.GetAttributes(String)
  fullName: System.IO.File.GetAttributes(String)
- uid: System.IO.FileAttributes
  parent: System.IO
  isExternal: false
  name: FileAttributes
  nameWithType: FileAttributes
  fullName: System.IO.FileAttributes
- uid: System.IO.File.GetCreationTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetCreationTime(String)
  nameWithType: File.GetCreationTime(String)
  fullName: System.IO.File.GetCreationTime(String)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IO.File.GetCreationTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetCreationTimeUtc(String)
  nameWithType: File.GetCreationTimeUtc(String)
  fullName: System.IO.File.GetCreationTimeUtc(String)
- uid: System.IO.File.GetLastAccessTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTime(String)
  nameWithType: File.GetLastAccessTime(String)
  fullName: System.IO.File.GetLastAccessTime(String)
- uid: System.IO.File.GetLastAccessTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTimeUtc(String)
  nameWithType: File.GetLastAccessTimeUtc(String)
  fullName: System.IO.File.GetLastAccessTimeUtc(String)
- uid: System.IO.File.GetLastWriteTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTime(String)
  nameWithType: File.GetLastWriteTime(String)
  fullName: System.IO.File.GetLastWriteTime(String)
- uid: System.IO.File.GetLastWriteTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTimeUtc(String)
  nameWithType: File.GetLastWriteTimeUtc(String)
  fullName: System.IO.File.GetLastWriteTimeUtc(String)
- uid: System.IO.File.Move(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Move(String,String)
  nameWithType: File.Move(String,String)
  fullName: System.IO.File.Move(String,String)
- uid: System.IO.File.Open(System.String,System.IO.FileMode)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode)
  nameWithType: File.Open(String,FileMode)
  fullName: System.IO.File.Open(String,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode,FileAccess)
  nameWithType: File.Open(String,FileMode,FileAccess)
  fullName: System.IO.File.Open(String,FileMode,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: File.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.File.Open(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.File.OpenRead(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenRead(String)
  nameWithType: File.OpenRead(String)
  fullName: System.IO.File.OpenRead(String)
- uid: System.IO.File.OpenText(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenText(String)
  nameWithType: File.OpenText(String)
  fullName: System.IO.File.OpenText(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: System.IO.File.OpenWrite(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenWrite(String)
  nameWithType: File.OpenWrite(String)
  fullName: System.IO.File.OpenWrite(String)
- uid: System.IO.File.ReadAllBytes(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: File.ReadAllBytes(String)
  fullName: System.IO.File.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.File.ReadAllLines(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines(String)
  nameWithType: File.ReadAllLines(String)
  fullName: System.IO.File.ReadAllLines(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines(String,Encoding)
  nameWithType: File.ReadAllLines(String,Encoding)
  fullName: System.IO.File.ReadAllLines(String,Encoding)
- uid: System.IO.File.ReadAllText(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllText(String)
  nameWithType: File.ReadAllText(String)
  fullName: System.IO.File.ReadAllText(String)
- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: File.ReadAllText(String,Encoding)
  fullName: System.IO.File.ReadAllText(String,Encoding)
- uid: System.IO.File.ReadLines(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadLines(String)
  nameWithType: File.ReadLines(String)
  fullName: System.IO.File.ReadLines(String)
- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadLines(String,Encoding)
  nameWithType: File.ReadLines(String,Encoding)
  fullName: System.IO.File.ReadLines(String,Encoding)
- uid: System.IO.File.Replace(System.String,System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Replace(String,String,String)
  nameWithType: File.Replace(String,String,String)
  fullName: System.IO.File.Replace(String,String,String)
- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  parent: System.IO.File
  isExternal: false
  name: Replace(String,String,String,Boolean)
  nameWithType: File.Replace(String,String,String,Boolean)
  fullName: System.IO.File.Replace(String,String,String,Boolean)
- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  isExternal: false
  name: SetAccessControl(String,FileSecurity)
  nameWithType: File.SetAccessControl(String,FileSecurity)
  fullName: System.IO.File.SetAccessControl(String,FileSecurity)
- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  parent: System.IO.File
  isExternal: false
  name: SetAttributes(String,FileAttributes)
  nameWithType: File.SetAttributes(String,FileAttributes)
  fullName: System.IO.File.SetAttributes(String,FileAttributes)
- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetCreationTime(String,DateTime)
  nameWithType: File.SetCreationTime(String,DateTime)
  fullName: System.IO.File.SetCreationTime(String,DateTime)
- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetCreationTimeUtc(String,DateTime)
  nameWithType: File.SetCreationTimeUtc(String,DateTime)
  fullName: System.IO.File.SetCreationTimeUtc(String,DateTime)
- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTime(String,DateTime)
  nameWithType: File.SetLastAccessTime(String,DateTime)
  fullName: System.IO.File.SetLastAccessTime(String,DateTime)
- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTimeUtc(String,DateTime)
  nameWithType: File.SetLastAccessTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastAccessTimeUtc(String,DateTime)
- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTime(String,DateTime)
  nameWithType: File.SetLastWriteTime(String,DateTime)
  fullName: System.IO.File.SetLastWriteTime(String,DateTime)
- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTimeUtc(String,DateTime)
  nameWithType: File.SetLastWriteTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastWriteTimeUtc(String,DateTime)
- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])
  parent: System.IO.File
  isExternal: false
  name: WriteAllBytes(String,Byte[])
  nameWithType: File.WriteAllBytes(String,Byte[])
  fullName: System.IO.File.WriteAllBytes(String,Byte[])
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,IEnumerable<String>)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>)
- uid: System.IO.File.WriteAllLines(System.String,System.String[])
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,String[])
  nameWithType: File.WriteAllLines(String,String[])
  fullName: System.IO.File.WriteAllLines(String,String[])
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>,Encoding)
- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,String[],Encoding)
  nameWithType: File.WriteAllLines(String,String[],Encoding)
  fullName: System.IO.File.WriteAllLines(String,String[],Encoding)
- uid: System.IO.File.WriteAllText(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: WriteAllText(String,String)
  nameWithType: File.WriteAllText(String,String)
  fullName: System.IO.File.WriteAllText(String,String)
- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllText(String,String,Encoding)
  nameWithType: File.WriteAllText(String,String,Encoding)
  fullName: System.IO.File.WriteAllText(String,String,Encoding)
- uid: System.IO.File.AppendAllLines*
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines
  nameWithType: File.AppendAllLines
- uid: System.IO.File.AppendAllText*
  parent: System.IO.File
  isExternal: false
  name: AppendAllText
  nameWithType: File.AppendAllText
- uid: System.IO.File.AppendText*
  parent: System.IO.File
  isExternal: false
  name: AppendText
  nameWithType: File.AppendText
- uid: System.IO.File.Copy*
  parent: System.IO.File
  isExternal: false
  name: Copy
  nameWithType: File.Copy
- uid: System.IO.File.Create*
  parent: System.IO.File
  isExternal: false
  name: Create
  nameWithType: File.Create
- uid: System.IO.File.CreateText*
  parent: System.IO.File
  isExternal: false
  name: CreateText
  nameWithType: File.CreateText
- uid: System.IO.File.Decrypt*
  parent: System.IO.File
  isExternal: false
  name: Decrypt
  nameWithType: File.Decrypt
- uid: System.IO.File.Delete*
  parent: System.IO.File
  isExternal: false
  name: Delete
  nameWithType: File.Delete
- uid: System.IO.File.Encrypt*
  parent: System.IO.File
  isExternal: false
  name: Encrypt
  nameWithType: File.Encrypt
- uid: System.IO.File.Exists*
  parent: System.IO.File
  isExternal: false
  name: Exists
  nameWithType: File.Exists
- uid: System.IO.File.GetAccessControl*
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl
  nameWithType: File.GetAccessControl
- uid: System.IO.File.GetAttributes*
  parent: System.IO.File
  isExternal: false
  name: GetAttributes
  nameWithType: File.GetAttributes
- uid: System.IO.File.GetCreationTime*
  parent: System.IO.File
  isExternal: false
  name: GetCreationTime
  nameWithType: File.GetCreationTime
- uid: System.IO.File.GetCreationTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetCreationTimeUtc
  nameWithType: File.GetCreationTimeUtc
- uid: System.IO.File.GetLastAccessTime*
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTime
  nameWithType: File.GetLastAccessTime
- uid: System.IO.File.GetLastAccessTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTimeUtc
  nameWithType: File.GetLastAccessTimeUtc
- uid: System.IO.File.GetLastWriteTime*
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTime
  nameWithType: File.GetLastWriteTime
- uid: System.IO.File.GetLastWriteTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTimeUtc
  nameWithType: File.GetLastWriteTimeUtc
- uid: System.IO.File.Move*
  parent: System.IO.File
  isExternal: false
  name: Move
  nameWithType: File.Move
- uid: System.IO.File.Open*
  parent: System.IO.File
  isExternal: false
  name: Open
  nameWithType: File.Open
- uid: System.IO.File.OpenRead*
  parent: System.IO.File
  isExternal: false
  name: OpenRead
  nameWithType: File.OpenRead
- uid: System.IO.File.OpenText*
  parent: System.IO.File
  isExternal: false
  name: OpenText
  nameWithType: File.OpenText
- uid: System.IO.File.OpenWrite*
  parent: System.IO.File
  isExternal: false
  name: OpenWrite
  nameWithType: File.OpenWrite
- uid: System.IO.File.ReadAllBytes*
  parent: System.IO.File
  isExternal: false
  name: ReadAllBytes
  nameWithType: File.ReadAllBytes
- uid: System.IO.File.ReadAllLines*
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines
  nameWithType: File.ReadAllLines
- uid: System.IO.File.ReadAllText*
  parent: System.IO.File
  isExternal: false
  name: ReadAllText
  nameWithType: File.ReadAllText
- uid: System.IO.File.ReadLines*
  parent: System.IO.File
  isExternal: false
  name: ReadLines
  nameWithType: File.ReadLines
- uid: System.IO.File.Replace*
  parent: System.IO.File
  isExternal: false
  name: Replace
  nameWithType: File.Replace
- uid: System.IO.File.SetAccessControl*
  parent: System.IO.File
  isExternal: false
  name: SetAccessControl
  nameWithType: File.SetAccessControl
- uid: System.IO.File.SetAttributes*
  parent: System.IO.File
  isExternal: false
  name: SetAttributes
  nameWithType: File.SetAttributes
- uid: System.IO.File.SetCreationTime*
  parent: System.IO.File
  isExternal: false
  name: SetCreationTime
  nameWithType: File.SetCreationTime
- uid: System.IO.File.SetCreationTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetCreationTimeUtc
  nameWithType: File.SetCreationTimeUtc
- uid: System.IO.File.SetLastAccessTime*
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTime
  nameWithType: File.SetLastAccessTime
- uid: System.IO.File.SetLastAccessTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTimeUtc
  nameWithType: File.SetLastAccessTimeUtc
- uid: System.IO.File.SetLastWriteTime*
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTime
  nameWithType: File.SetLastWriteTime
- uid: System.IO.File.SetLastWriteTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTimeUtc
  nameWithType: File.SetLastWriteTimeUtc
- uid: System.IO.File.WriteAllBytes*
  parent: System.IO.File
  isExternal: false
  name: WriteAllBytes
  nameWithType: File.WriteAllBytes
- uid: System.IO.File.WriteAllLines*
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines
  nameWithType: File.WriteAllLines
- uid: System.IO.File.WriteAllText*
  parent: System.IO.File
  isExternal: false
  name: WriteAllText
  nameWithType: File.WriteAllText
