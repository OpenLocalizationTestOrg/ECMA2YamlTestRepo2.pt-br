### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.BuildEngine.ImportCollection
  id: ImportCollection
  children:
  - Microsoft.Build.BuildEngine.ImportCollection.AddNewImport(System.String,System.String)
  - Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Microsoft.Build.BuildEngine.Import[],System.Int32)
  - Microsoft.Build.BuildEngine.ImportCollection.CopyTo(System.Array,System.Int32)
  - Microsoft.Build.BuildEngine.ImportCollection.Count
  - Microsoft.Build.BuildEngine.ImportCollection.GetEnumerator
  - Microsoft.Build.BuildEngine.ImportCollection.IsSynchronized
  - Microsoft.Build.BuildEngine.ImportCollection.RemoveImport(Microsoft.Build.BuildEngine.Import)
  - Microsoft.Build.BuildEngine.ImportCollection.SyncRoot
  langs:
  - csharp
  name: ImportCollection
  nameWithType: ImportCollection
  fullName: Microsoft.Build.BuildEngine.ImportCollection
  type: Class
  summary: "Representa uma coleção de todos os [importação](~/add/includes/ajax-current-ext-md.md) elementos em um projeto."
  syntax:
    content: 'public class ImportCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.ImportCollection.AddNewImport(System.String,System.String)
  id: AddNewImport(System.String,System.String)
  parent: Microsoft.Build.BuildEngine.ImportCollection
  langs:
  - csharp
  name: AddNewImport(String,String)
  nameWithType: ImportCollection.AddNewImport(String,String)
  fullName: Microsoft.Build.BuildEngine.ImportCollection.AddNewImport(String,String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Permite que os hosts adicionar programaticamente uma nova [ &lt;importação&gt; ](~/add/includes/ajax-current-ext-md.md) marca em um arquivo de projeto que está sendo manipulado pelo host."
  syntax:
    content: public void AddNewImport (string projectFile, string condition);
    parameters:
    - id: projectFile
      type: System.String
      description: "Uma cadeia de caracteres necessária que representa o nome do arquivo de projeto para o &lt;importação&gt; instrução a ser adicionado. Por exemplo, &quot;myproject.csproj&quot;."
    - id: condition
      type: System.String
      description: "Uma cadeia de caracteres opcional que indica se o elemento é processado. Se `condition` é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, em seguida, especificado &lt;importação&gt; marca é adicionada, caso <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, não é."
  overload: Microsoft.Build.BuildEngine.ImportCollection.AddNewImport*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Microsoft.Build.BuildEngine.Import[],System.Int32)
  id: CopyTo(Microsoft.Build.BuildEngine.Import[],System.Int32)
  parent: Microsoft.Build.BuildEngine.ImportCollection
  langs:
  - csharp
  name: CopyTo(Import[],Int32)
  nameWithType: ImportCollection.CopyTo(Import[],Int32)
  fullName: Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Import[],Int32)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Copia todo o <xref href=&quot;Microsoft.Build.BuildEngine.ImportCollection&quot;> </xref> para uma compatível unidimensional <xref:System.Array>de <xref href=&quot;Microsoft.Build.BuildEngine.Import&quot;> </xref> objetos, iniciando no índice especificado na matriz de destino.</xref:System.Array>"
  syntax:
    content: public void CopyTo (Microsoft.Build.BuildEngine.Import[] array, int index);
    parameters:
    - id: array
      type: Microsoft.Build.BuildEngine.Import[]
      description: "O unidimensional <xref:System.Array>de <xref href=&quot;Microsoft.Build.BuildEngine.Import&quot;> </xref> objetos que é o destino dos elementos copiados de <xref href=&quot;Microsoft.Build.BuildEngine.ImportCollection&quot;> </xref>.</xref:System.Array> O <xref:System.Array>deve ter indexação com base em zero.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O índice baseado em zero na `array` no qual a cópia começa."
  overload: Microsoft.Build.BuildEngine.ImportCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.ImportCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: Microsoft.Build.BuildEngine.ImportCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ImportCollection.CopyTo(Array,Int32)
  fullName: Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Copia todo o <xref href=&quot;Microsoft.Build.BuildEngine.ImportCollection&quot;> </xref> para uma compatível unidimensional <xref:System.Array>, iniciando no índice especificado na matriz de destino.</xref:System.Array>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "O unidimensional <xref:System.Array>que é o destino dos elementos copiados de <xref href=&quot;Microsoft.Build.BuildEngine.ImportCollection&quot;> </xref>.</xref:System.Array> O <xref:System.Array>deve ter indexação com base em zero.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O índice baseado em zero na `array` no qual a cópia começa."
  overload: Microsoft.Build.BuildEngine.ImportCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.ImportCollection.Count
  id: Count
  parent: Microsoft.Build.BuildEngine.ImportCollection
  langs:
  - csharp
  name: Count
  nameWithType: ImportCollection.Count
  fullName: Microsoft.Build.BuildEngine.ImportCollection.Count
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Obtém um valor que indica o número de <xref href=&quot;Microsoft.Build.BuildEngine.Import&quot;> </xref> objetos no <xref href=&quot;Microsoft.Build.BuildEngine.ImportCollection&quot;> </xref>."
  remarks: "Cada <xref:Microsoft.Build.BuildEngine.Import>objeto na coleção representa um elemento no projeto.</xref:Microsoft.Build.BuildEngine.Import>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Um valor inteiro que representa o número de <xref href=&quot;Microsoft.Build.BuildEngine.Import&quot;> </xref> objetos na coleção."
  overload: Microsoft.Build.BuildEngine.ImportCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.ImportCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Build.BuildEngine.ImportCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ImportCollection.GetEnumerator()
  fullName: Microsoft.Build.BuildEngine.ImportCollection.GetEnumerator()
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Obtém um enumerador que itera por meio de <xref href=&quot;Microsoft.Build.BuildEngine.ImportCollection&quot;> </xref>."
  remarks: "Esse método permite que o chamador usar o `foreach` instrução da linguagem c# (`for each` na [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]) para iterar pelos <xref:Microsoft.Build.BuildEngine.Import>objetos em <xref:Microsoft.Build.BuildEngine.ImportCollection>.</xref:Microsoft.Build.BuildEngine.ImportCollection> </xref:Microsoft.Build.BuildEngine.Import> individuais"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>para todo o <xref href=&quot;Microsoft.Build.BuildEngine.ImportCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: Microsoft.Build.BuildEngine.ImportCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.ImportCollection.IsSynchronized
  id: IsSynchronized
  parent: Microsoft.Build.BuildEngine.ImportCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ImportCollection.IsSynchronized
  fullName: Microsoft.Build.BuildEngine.ImportCollection.IsSynchronized
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Obtém um valor que indica se o acesso para o <xref href=&quot;Microsoft.Build.BuildEngine.ImportCollection&quot;> </xref> é sincronizado (thread-safe)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se acessar para o <xref href=&quot;Microsoft.Build.BuildEngine.ImportCollection&quot;> </xref> é sincronizado (thread-safe); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Build.BuildEngine.ImportCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.ImportCollection.RemoveImport(Microsoft.Build.BuildEngine.Import)
  id: RemoveImport(Microsoft.Build.BuildEngine.Import)
  parent: Microsoft.Build.BuildEngine.ImportCollection
  langs:
  - csharp
  name: RemoveImport(Import)
  nameWithType: ImportCollection.RemoveImport(Import)
  fullName: Microsoft.Build.BuildEngine.ImportCollection.RemoveImport(Import)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Permite que os hosts remover programaticamente [ &lt;importação&gt; ](~/add/includes/ajax-current-ext-md.md) marcas que fazem parte de um projeto de arquivos que está sendo manipulado pelo host."
  remarks: "Remover uma importação marca o projeto como sujos, o que significa que o projeto será reavaliado em algum ponto durante outras operações na instância do projeto."
  syntax:
    content: public void RemoveImport (Microsoft.Build.BuildEngine.Import importToRemove);
    parameters:
    - id: importToRemove
      type: Microsoft.Build.BuildEngine.Import
      description: "Uma cadeia de caracteres que representa o nome do &lt;importação&gt; marca para remover do arquivo de projeto."
  overload: Microsoft.Build.BuildEngine.ImportCollection.RemoveImport*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.ImportCollection.SyncRoot
  id: SyncRoot
  parent: Microsoft.Build.BuildEngine.ImportCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ImportCollection.SyncRoot
  fullName: Microsoft.Build.BuildEngine.ImportCollection.SyncRoot
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Obtém um objeto que pode ser usado para sincronizar o acesso a <xref href=&quot;Microsoft.Build.BuildEngine.ImportCollection&quot;> </xref>."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Um objeto que pode ser usado para sincronizar o acesso a <xref href=&quot;Microsoft.Build.BuildEngine.ImportCollection&quot;> </xref>."
  overload: Microsoft.Build.BuildEngine.ImportCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.BuildEngine.ImportCollection.AddNewImport(System.String,System.String)
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: AddNewImport(String,String)
  nameWithType: ImportCollection.AddNewImport(String,String)
  fullName: Microsoft.Build.BuildEngine.ImportCollection.AddNewImport(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Microsoft.Build.BuildEngine.Import[],System.Int32)
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: CopyTo(Import[],Int32)
  nameWithType: ImportCollection.CopyTo(Import[],Int32)
  fullName: Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Import[],Int32)
- uid: Microsoft.Build.BuildEngine.Import[]
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Import
  nameWithType: Import
  fullName: Microsoft.Build.BuildEngine.Import[]
  spec.csharp:
  - uid: Microsoft.Build.BuildEngine.Import
    name: Import
    nameWithType: Import
    fullName: Import[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.BuildEngine.ImportCollection.CopyTo(System.Array,System.Int32)
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ImportCollection.CopyTo(Array,Int32)
  fullName: Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: Microsoft.Build.BuildEngine.ImportCollection.Count
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: Count
  nameWithType: ImportCollection.Count
  fullName: Microsoft.Build.BuildEngine.ImportCollection.Count
- uid: Microsoft.Build.BuildEngine.ImportCollection.GetEnumerator
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ImportCollection.GetEnumerator()
  fullName: Microsoft.Build.BuildEngine.ImportCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.Build.BuildEngine.ImportCollection.IsSynchronized
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ImportCollection.IsSynchronized
  fullName: Microsoft.Build.BuildEngine.ImportCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.ImportCollection.RemoveImport(Microsoft.Build.BuildEngine.Import)
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: RemoveImport(Import)
  nameWithType: ImportCollection.RemoveImport(Import)
  fullName: Microsoft.Build.BuildEngine.ImportCollection.RemoveImport(Import)
- uid: Microsoft.Build.BuildEngine.Import
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Import
  nameWithType: Import
  fullName: Microsoft.Build.BuildEngine.Import
- uid: Microsoft.Build.BuildEngine.ImportCollection.SyncRoot
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ImportCollection.SyncRoot
  fullName: Microsoft.Build.BuildEngine.ImportCollection.SyncRoot
- uid: Microsoft.Build.BuildEngine.ImportCollection.AddNewImport*
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: AddNewImport
  nameWithType: ImportCollection.AddNewImport
- uid: Microsoft.Build.BuildEngine.ImportCollection.CopyTo*
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: CopyTo
  nameWithType: ImportCollection.CopyTo
- uid: Microsoft.Build.BuildEngine.ImportCollection.Count*
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: Count
  nameWithType: ImportCollection.Count
- uid: Microsoft.Build.BuildEngine.ImportCollection.GetEnumerator*
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ImportCollection.GetEnumerator
- uid: Microsoft.Build.BuildEngine.ImportCollection.IsSynchronized*
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ImportCollection.IsSynchronized
- uid: Microsoft.Build.BuildEngine.ImportCollection.RemoveImport*
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: RemoveImport
  nameWithType: ImportCollection.RemoveImport
- uid: Microsoft.Build.BuildEngine.ImportCollection.SyncRoot*
  parent: Microsoft.Build.BuildEngine.ImportCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ImportCollection.SyncRoot
