### YamlMime:ManagedReference
items:
- uid: System.Configuration.ApplicationSettingsBase
  id: ApplicationSettingsBase
  children:
  - System.Configuration.ApplicationSettingsBase.#ctor
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  - System.Configuration.ApplicationSettingsBase.Context
  - System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  - System.Configuration.ApplicationSettingsBase.Item(System.String)
  - System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  - System.Configuration.ApplicationSettingsBase.Properties
  - System.Configuration.ApplicationSettingsBase.PropertyChanged
  - System.Configuration.ApplicationSettingsBase.PropertyValues
  - System.Configuration.ApplicationSettingsBase.Providers
  - System.Configuration.ApplicationSettingsBase.Reload
  - System.Configuration.ApplicationSettingsBase.Reset
  - System.Configuration.ApplicationSettingsBase.Save
  - System.Configuration.ApplicationSettingsBase.SettingChanging
  - System.Configuration.ApplicationSettingsBase.SettingsKey
  - System.Configuration.ApplicationSettingsBase.SettingsLoaded
  - System.Configuration.ApplicationSettingsBase.SettingsSaving
  - System.Configuration.ApplicationSettingsBase.Upgrade
  langs:
  - csharp
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase
  fullName: System.Configuration.ApplicationSettingsBase
  type: Class
  summary: "Atua como uma classe base para derivação classes concretas wrapper para implementar o recurso de configurações do aplicativo em aplicativos Windows Forms."
  remarks: "ApplicationSettingsBase adiciona a seguinte funcionalidade para o <xref:System.Configuration.SettingsBase>classe, que é usado por aplicativos baseados na Web:-a capacidade de detectar atributos em uma classe derivada,. wrapper de configurações</xref:System.Configuration.SettingsBase> ApplicationSettingsBase suporta o modelo declarativo usado para propriedades de classe de invólucro, conforme descrito posteriormente.      -Nível mais alto <xref:System.Configuration.ApplicationSettingsBase.Save%2A>e <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>métodos.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Save%2A>      -Eventos de validação adicionais que você pode manipular para garantir a exatidão de configurações individuais.       Na arquitetura de configurações do aplicativo, para acessar um grupo de propriedades de configurações, você precisa derivar uma classe wrapper concreta de ApplicationSettingsBase. A classe de invólucro personaliza ApplicationSettingsBase das seguintes maneiras: - para cada propriedade de configurações sejam acessados correspondente fortemente tipado pública propriedade é adicionada à classe wrapper. Essa propriedade tem `get` e `set` acessadores para configurações de aplicativo de leitura/gravação, mas apenas um `get` acessador para configurações de somente leitura.      -Atributos apropriados devem ser aplicados às propriedades de público da classe wrapper para indicar as características da propriedade de configurações, como escopo a configuração do (aplicativo ou usuário), se a configuração deve dar suporte a roaming, o valor padrão para a configuração, o provedor de configurações a ser usada e assim por diante. Cada propriedade é necessária para especificar seu escopo, usando um <xref:System.Configuration.ApplicationScopedSettingAttribute>ou <xref:System.Configuration.UserScopedSettingAttribute>.</xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute> Configurações de escopo do aplicativo são somente leitura se o padrão <xref:System.Configuration.LocalFileSettingsProvider>é usado.</xref:System.Configuration.LocalFileSettingsProvider>       A classe ApplicationSettingsBase usa reflexão para detectar esses atributos em tempo de execução. A maioria dessas informações é passada para a camada de provedor de configurações, que é responsável pelo armazenamento, formato de persistência e assim por diante.       Quando um aplicativo tem várias classes de wrapper de configurações, cada classe define um *grupo de configurações*. Cada grupo tem as seguintes características:-um grupo pode conter qualquer número ou tipo de configurações de propriedade.      -Se o nome do grupo não for explicitamente definido, a classe de invólucro com decorando um <xref:System.Configuration.SettingsGroupNameAttribute>, em seguida, um nome é gerado automaticamente.</xref:System.Configuration.SettingsGroupNameAttribute>       Por padrão, todos os aplicativos cliente usam o <xref:System.Configuration.LocalFileSettingsProvider>para fornecer armazenamento.</xref:System.Configuration.LocalFileSettingsProvider> Se um provedor de configurações alternativas for desejado, em seguida, a classe de invólucro ou propriedade deve ser decorada com <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute> correspondente       Para obter mais informações sobre como usar as configurações do aplicativo, consulte [configurações de aplicativo para o Windows Forms](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text. All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively. All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.  \n  \n The form contains four child controls that have the following names and functions:  \n  \n-   A button named `btnBackColor` used to display the **Color** common dialog box.  \n  \n-   A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.  \n  \n-   A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.  \n  \n-   A textbox named `tbStatus` used to display status information about the program.  \n  \n Notice that after every execution of the application, an additional period character is appended to the title text of the form.  \n  \n This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`. Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.  \n  \n [!code-cpp[AppSettingsSample#1](~/add/codesnippet/cpp/t-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#1](~/add/codesnippet/csharp/t-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#1](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#1)]"
  syntax:
    content: 'public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged'
  inheritance:
  - System.Object
  - System.Configuration.SettingsBase
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  id: '#ctor'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma instância do <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> classe ao seu estado padrão."
  remarks: "O construtor padrão foi projetado para trabalhar sob a suposição de que não há nenhum componente associado à classe de invólucro de configurações atual, que deriva de <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase>       Quando uma instância de uma classe wrapper é criada, o código herdado executará automaticamente as ações a seguir: 1.  Refletir sobre a classe.      2.  Para cada propriedade em um wrapper marcados com um `[UserScopedSettingAttribute]` ou `[ApplicationScopedSettingAttribute]`, correspondente <xref:System.Configuration.SettingsProperty>é criado.</xref:System.Configuration.SettingsProperty>      3.  Cada <xref:System.Configuration.SettingsProperty>tem algumas seu conjunto de propriedades com base em outros atributos que estão presentes, opcionalmente, nas propriedades do wrapper, como o valor padrão ou o provedor de configurações.</xref:System.Configuration.SettingsProperty>      4.  Todos os outros atributos simplesmente são colocados em um recipiente de atributo, a <xref:System.Configuration.SettingsProperty.Attributes%2A>propriedade de <xref:System.Configuration.SettingsProperty>classe.</xref:System.Configuration.SettingsProperty> </xref:System.Configuration.SettingsProperty.Attributes%2A>      5.  Todos os <xref:System.Configuration.SettingsProperty>objetos são adicionados a um <xref:System.Configuration.SettingsPropertyCollection>representado pela <xref:System.Configuration.ApplicationSettingsBase.Properties%2A>propriedade de <xref:System.Configuration.ApplicationSettingsBase>classe.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.ApplicationSettingsBase.Properties%2A> </xref:System.Configuration.SettingsPropertyCollection> </xref:System.Configuration.SettingsProperty> Essa coleção é então passada para o <xref:System.Configuration.SettingsBase.Initialize%2A>método.</xref:System.Configuration.SettingsBase.Initialize%2A>       Como implícita pela etapa 3 mencionado anteriormente, <xref:System.Configuration.ApplicationSettingsBase>nativamente funciona com vários atributos de propriedade, especificamente o seguinte: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>e <xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute> </xref:System.Configuration.DefaultSettingValueAttribute> </xref:System.Configuration.SettingsProviderAttribute> </xref:System.Configuration.ApplicationSettingsBase> Todos os outros atributos de configurações simplesmente são passados para o provedor subjacente apropriado."
  syntax:
    content: protected ApplicationSettingsBase ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  id: '#ctor(System.ComponentModel.IComponent)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma instância do <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> classe usando o componente proprietário fornecido."
  remarks: "Este construtor é exatamente equivalente para o <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>usando a invocação do construtor: `ApplicationSettingsBase(owner, String.Empty)` para obter informações sobre como a reflexão é usada durante a instanciação de uma classe wrapper, consulte o padrão <xref:System.Configuration.ApplicationSettingsBase.%23ctor>construtor.</xref:System.Configuration.ApplicationSettingsBase.%23ctor> </xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "O componente que atuará como o proprietário do objeto de configurações do aplicativo."
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma instância do <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> classe usando a chave de configurações fornecido."
  remarks: "Este construtor inicializa o <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>o valor da propriedade de `settingsKey` parâmetro.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> Essa propriedade é útil em desambiguação diferentes instâncias da classe wrapper configurações no mesmo domínio do aplicativo.       Para obter informações sobre como a reflexão é usada durante a instanciação de uma classe wrapper, consulte o padrão <xref:System.Configuration.ApplicationSettingsBase.%23ctor>construtor.</xref:System.Configuration.ApplicationSettingsBase.%23ctor>"
  syntax:
    content: protected ApplicationSettingsBase (string settingsKey);
    parameters:
    - id: settingsKey
      type: System.String
      description: "Um <xref:System.String>que identifica exclusivamente a instâncias separadas do classe wrapper.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  id: '#ctor(System.ComponentModel.IComponent,System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma instância do <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> classe usando o componente proprietário fornecido e a chave de configurações."
  remarks: "O <xref:System.ComponentModel.IComponent>objeto especificado pelo `owner` parâmetro atua como o proprietário da instância atual desta classe de configurações de aplicativos</xref:System.ComponentModel.IComponent> Durante a inicialização da classe wrapper configurações derivado <xref:System.Configuration.ApplicationSettingsBase>, o site do proprietário é consultada para <xref:System.Configuration.ISettingsProviderService>.</xref:System.Configuration.ISettingsProviderService> </xref:System.Configuration.ApplicationSettingsBase> Se existir, ele é usado em vez do provedor de configurações nativo para todas as propriedades da classe wrapper, conforme especificado por <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>       Este construtor inicializa o <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>o valor da propriedade de `settingsKey` parâmetro.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> Essa propriedade é útil em desambiguação diferentes instâncias da classe wrapper no mesmo domínio do aplicativo.       Para obter informações sobre como a reflexão é usada durante a instanciação de uma classe wrapper, consulte o padrão <xref:System.Configuration.ApplicationSettingsBase.%23ctor>construtor.</xref:System.Configuration.ApplicationSettingsBase.%23ctor>"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "O componente que atuará como o proprietário do objeto de configurações do aplicativo."
    - id: settingsKey
      type: System.String
      description: "Um <xref:System.String>que identifica exclusivamente a instâncias separadas do classe wrapper.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Context
  id: Context
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém o contexto de configurações do aplicativo associado ao grupo de configurações."
  remarks: "Cada classe de invólucro configurações derivado <xref:System.Configuration.ApplicationSettingsBase>tem um contexto associado a.</xref:System.Configuration.ApplicationSettingsBase> O contexto é passado para o provedor de configurações para cada propriedade para identificar como a propriedade é usada. Portanto, contexto atua como uma dica para ajudar a determinar a melhor para manter os valores de configurações do aplicativo associado o provedor de configurações.       Por outro lado, a <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>propriedade permite que o provedor de configurações para resolver a ambiguidade várias instâncias da mesma classe wrapper.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>"
  syntax:
    content: public override System.Configuration.SettingsContext Context { get; }
    return:
      type: System.Configuration.SettingsContext
      description: "Um <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> associada ao grupo de configurações."
  overload: System.Configuration.ApplicationSettingsBase.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  id: GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Retorna o valor da propriedade nomeada configurações para a versão anterior do mesmo aplicativo."
  remarks: "O método GetPreviousVersion geralmente é usado em conjunto com o <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>método ao migrar as configurações do aplicativo durante a instalação de uma nova versão de um aplicativo.</xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>"
  syntax:
    content: public object GetPreviousVersion (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "Um <xref:System.String>que contém o nome da propriedade configurações cujo valor será retornado.</xref:System.String>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém o valor do <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "A propriedade não existe. A propriedade count for zero ou a propriedade não pode ser encontrada no repositório de dados."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define o valor da propriedade de configurações do aplicativo especificado."
  remarks: "A propriedade do Item, também conhecido como o indexador, normalmente é usada na classe de invólucro configurações derivado de <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> Item associa a propriedade pública da classe wrapper para a propriedade de configurações correspondente.       Item gera vários eventos dependendo da operação que está sendo executada: - na primeira vez que uma propriedade é recuperada, o <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>é gerado.</xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>      -Quando uma propriedade é definida, o <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A>é gerado.</xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> Se o manipulador não cancelar o evento, o valor da propriedade é definido e o <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>é gerado.</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>"
  syntax:
    content: public override object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "Um <xref:System.String>que contém o nome da propriedade para acessar.</xref:System.String>"
    return:
      type: System.Object
      description: "Se encontrado, o valor da propriedade nomeada configurações; Caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ApplicationSettingsBase.Item*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Não há nenhuma propriedade associada ao wrapper atual ou a propriedade especificada não pôde ser encontrada."
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "Foi feita uma tentativa para definir uma propriedade somente leitura."
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "O valor fornecido é de um tipo incompatível com a propriedade de configurações, durante uma operação de definição."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Não foi possível analisar o arquivo de configuração."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Gera o <xref href=&quot;System.Configuration.ApplicationSettingsBase.PropertyChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnPropertyChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "A origem do evento."
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "Um <xref:System.ComponentModel.PropertyChangedEventArgs>que contém os dados de evento.</xref:System.ComponentModel.PropertyChangedEventArgs>"
  overload: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  id: OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Gera o <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingChanging&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnSettingChanging também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "A origem do evento."
    - id: e
      type: System.Configuration.SettingChangingEventArgs
      description: "Um <xref href=&quot;System.Configuration.SettingChangingEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  id: OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Gera o <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnSettingsLoaded também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "A origem do evento."
    - id: e
      type: System.Configuration.SettingsLoadedEventArgs
      description: "Um <xref href=&quot;System.Configuration.SettingsLoadedEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  id: OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Gera o <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsSaving&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnSettingsSaving também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "A origem do evento."
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "Um <xref:System.ComponentModel.CancelEventArgs>que contém os dados de evento.</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Properties
  id: Properties
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém a coleção de propriedades de configurações no wrapper."
  remarks: "O `get` acessador da propriedade propriedades reflete nos metadados da classe wrapper configurações, que é derivado de <xref:System.Configuration.ApplicationSettingsBase>, para determinar dinamicamente o conjunto de propriedades de configurações do aplicativo disponível.</xref:System.Configuration.ApplicationSettingsBase>       O <xref:System.Configuration.ApplicationSettingsBase>classe nativamente reconhece certas características de uma configuração de aplicativo, como seu nome, o tipo de propriedade, o provedor de configurações, o valor padrão, ler apenas o status e a preferência de serialização.</xref:System.Configuration.ApplicationSettingsBase> Essas características são espelhadas como propriedades de <xref:System.Configuration.SettingsProperty>classe.</xref:System.Configuration.SettingsProperty> Todos os outros atributos da propriedade configurações somente são passados para o seu provedor de configurações associadas."
  syntax:
    content: public override System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "Um <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> que contém todos os <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objetos usados no wrapper atual."
  overload: System.Configuration.ApplicationSettingsBase.Properties*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Não foi possível localizar o provedor de configurações associadas ou houve falha na sua inicialização."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  id: PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ocorre depois que o valor de uma propriedade de configurações do aplicativo é alterado."
  remarks: "O evento PropertyChanged é gerado quando uma propriedade de configurações é alterada por meio de `set` acessador do <xref:System.Configuration.ApplicationSettingsBase.Item%2A>método, ou para todas as propriedades que é restaurada quando é feita uma chamada para o <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>ou <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>métodos.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A> </xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Item%2A>       Não há nenhum correspondente `PropertyChanging` eventos para essa classe; em vez disso, consulte o <xref:System.Configuration.ApplicationSettingsBase.SettingChanging>evento.</xref:System.Configuration.ApplicationSettingsBase.SettingChanging>"
  syntax:
    content: public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  id: PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém uma coleção de valores de propriedade."
  syntax:
    content: public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Um <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> de valores de propriedade."
  overload: System.Configuration.ApplicationSettingsBase.PropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Providers
  id: Providers
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém a coleção de provedores de configurações do aplicativo usado pelo wrapper."
  remarks: "O <xref:System.Configuration.SettingsProviderAttribute>determina qual provedor de configuração é usado por uma classe de invólucro de configurações ou uma propriedade de configuração individual.</xref:System.Configuration.SettingsProviderAttribute> Se esse atributo não for especificado, um aplicativo cliente usará <xref:System.Configuration.LocalFileSettingsProvider>.</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public override System.Configuration.SettingsProviderCollection Providers { get; }
    return:
      type: System.Configuration.SettingsProviderCollection
      description: "Um <xref href=&quot;System.Configuration.SettingsProviderCollection&quot;> </xref> que contém todos os <xref href=&quot;System.Configuration.SettingsProvider&quot;> </xref> objetos usados pelas propriedades de configurações do wrapper configurações atuais."
  overload: System.Configuration.ApplicationSettingsBase.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reload
  id: Reload
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Atualiza os valores de propriedade de configurações do aplicativo de armazenamento persistente."
  remarks: "O método de recarregar limpa os valores de propriedade atualmente em cache, fazendo com que um recarregamento desses valores de armazenamento persistente, quando eles são acessados posteriormente. Esse método executa as seguintes ações:--limpa as propriedades atualmente em cache, limpando a coleção representada pelo <xref:System.Configuration.SettingsBase.PropertyValues%2A>propriedade.</xref:System.Configuration.SettingsBase.PropertyValues%2A>      -Ele gera o <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>evento para cada membro do <xref:System.Configuration.ApplicationSettingsBase.Properties%2A>coleção.</xref:System.Configuration.ApplicationSettingsBase.Properties%2A> </xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>       Recarregar contrasta com <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>em que o primeiro carregará o último conjunto de valores de configurações de aplicativo salvo, enquanto o segundo carregará os valores padrão salvos.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  example:
  - "The following code example shows the Reload method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`. As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#6](~/add/codesnippet/cpp/m-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#6](~/add/codesnippet/csharp/m-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#6](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#6)]"
  syntax:
    content: public void Reload ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reload*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reset
  id: Reset
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Restaura os valores de configurações de aplicativo persistentes para suas propriedades padrão correspondente."
  remarks: "O método Reset substitui as propriedades de configurações no escopo do usuário, restaurando o valor atualmente persistente de cada configuração de aplicativo. Esse método executa as seguintes ações:-chama o <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>método em cada provedor de configurações que dá suporte a esse método opcional.</xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>      -Ele chama o <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>método para forçar uma atualização dos valores de propriedade de configurações.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>       <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>contrasta com a redefinição em que o primeiro carregará o último conjunto de valores de configurações de aplicativo salvo, enquanto o segundo carregará os valores padrão salvos.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>"
  example:
  - "The following code example shows the Reset method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`. As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#5](~/add/codesnippet/cpp/m-system.configuration.a_3_1.cpp)]\n [!code-cs[AppSettingsSample#5](~/add/codesnippet/csharp/m-system.configuration.a_3_1.cs)]\n [!code-vb[AppSettingsSample#5](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#5)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reset*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Não foi possível analisar o arquivo de configuração."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Save
  id: Save
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Armazena os valores atuais das propriedades de configurações do aplicativo."
  remarks: "O método Save grava o valor atual de cada propriedade de configurações para seu repositório de dados associado. Para cada propriedade, este método chama o <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>método no provedor de configurações associadas.</xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>       Esse método difere a implementação da classe base em que ele gera o <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>evento antes que os valores sejam gravados.</xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>       Se as únicas configurações definidas no escopo do aplicativo configurações de salvamento será não têm nenhum efeito e não retornam nenhum erro se for chamado com o padrão <xref:System.Configuration.LocalFileSettingsProvider>.</xref:System.Configuration.LocalFileSettingsProvider> <xref:System.Configuration.LocalFileSettingsProvider>salva apenas as configurações no escopo do usuário.</xref:System.Configuration.LocalFileSettingsProvider>      > [!IMPORTANT] > Não há nenhum método de carga correspondente porque os valores das configurações de aplicativo são carregados automaticamente durante a inicialização de classe wrapper. Por outro lado, esses valores não são salvas automaticamente quando um aplicativo termina. Portanto, você deve chamar explicitamente o método Save para manter os valores atuais das configurações do aplicativo. Isso normalmente é executado no <xref:System.Windows.Forms.Form.Closing>manipulador de eventos da réplica primária ou contendo <xref:System.Windows.Forms.Form>.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form.Closing>"
  example:
  - "The following code example shows the Save method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form. This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.  \n  \n The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#3](~/add/codesnippet/cpp/m-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#3](~/add/codesnippet/csharp/m-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#3](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#3)]"
  syntax:
    content: public override void Save ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  id: SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ocorre antes que o valor de uma propriedade de configurações do aplicativo é alterado."
  remarks: "O evento SettingChanging ocorre antes de uma propriedade de valor de configuração de aplicativo é alterada por meio de <xref:System.Configuration.ApplicationSettingsBase.Item%2A>método.</xref:System.Configuration.ApplicationSettingsBase.Item%2A> Esse evento não é gerado quando o <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>ou <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>métodos são chamados.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A> </xref:System.Configuration.ApplicationSettingsBase.Reload%2A> SettingChanging pode ser cancelado por meio de <xref:System.Configuration.SettingChangingEventArgs>classe de dados de evento.</xref:System.Configuration.SettingChangingEventArgs>       Normalmente, você usar o evento SettingChanging para lidar com a validação imediata de uma propriedade de configurações individuais. Para obter mais informações sobre validação, consulte [como: validar as configurações do aplicativo](~/add/includes/ajax-current-ext-md.md).       Não há nenhum correspondente `SettingChanged` eventos para essa classe; em vez disso, consulte o <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>evento.</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>"
  example:
  - "The following code example shows the SettingChanging event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler displays the event information in a textbox named `tbStatus`. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#7](~/add/codesnippet/cpp/e-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#7](~/add/codesnippet/csharp/e-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#7](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#7)]"
  syntax:
    content: public event System.Configuration.SettingChangingEventHandler SettingChanging;
    return:
      type: System.Configuration.SettingChangingEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  id: SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define a chave de configurações para o grupo de configurações do aplicativo."
  remarks: "A propriedade SettingsKey é fornecida para habilitar o código de cliente e, em particular, o provedor de configurações, para resolver a ambiguidade entre várias instâncias da mesma classe de configurações do aplicativo.       A menos que a classe de invólucro de configurações é criada usando o padrão de singleton, pode haver várias instâncias da mesma classe de configurações de aplicativo em um único aplicativo. O valor de SettingsKey deve ser definido de acordo com como os valores de propriedade devem ser compartilhadas.      -Se as propriedades de configurações do wrapper devem ser compartilhados entre todas as instâncias do wrapper no mesmo aplicativo, SettingsKey devem ter o mesmo valor em todas as instâncias. Esse é o comportamento padrão da <xref:System.Configuration.ApplicationSettingsBase>classe.</xref:System.Configuration.ApplicationSettingsBase>      -Se as propriedades de configurações do wrapper devem ser por instância, SettingsKey devem ter um valor exclusivo para cada instância. O <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>versão do construtor permite que você inicialize SettingsKey para uma cadeia de caracteres exclusiva.</xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>       Em contraste, o <xref:System.Configuration.ApplicationSettingsBase.Context%2A>propriedade fornece dicas para o provedor de configurações para habilitá-lo manter os valores de uma maneira eficiente e ordenada.</xref:System.Configuration.ApplicationSettingsBase.Context%2A>       O <xref:System.Configuration.SettingChangingEventArgs>classe contém semelhantes <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A>que ajuda a identificar a origem da propriedade de <xref:System.Configuration.ApplicationSettingsBase.SettingChanging>evento.</xref:System.Configuration.ApplicationSettingsBase.SettingChanging> </xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> </xref:System.Configuration.SettingChangingEventArgs>"
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "Um <xref:System.String>que contém a chave de configurações para o grupo de definições atual.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.SettingsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  id: SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ocorre depois que as configurações do aplicativo são recuperadas do armazenamento."
  remarks: "O evento SettingsLoaded ocorre somente após a inicial `get` acesso da primeira propriedade de configuração usado, normalmente por meio de <xref:System.Configuration.ApplicationSettingsBase.Item%2A>método.</xref:System.Configuration.ApplicationSettingsBase.Item%2A> Acessos subsequentes usam valores para a propriedade de configurações que são armazenados em cache localmente. O <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>e <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>métodos limpará armazenado em cache todos os valores para esse evento será gerado novamente após o acesso à propriedade subsequentes.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  syntax:
    content: public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;
    return:
      type: System.Configuration.SettingsLoadedEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  id: SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ocorre antes que os valores são salvos no armazenamento de dados."
  remarks: "O evento SettingsSaving é gerado pelo <xref:System.Configuration.ApplicationSettingsBase.Save%2A>método antes que ele armazena as propriedades de configurações do aplicativo para seu repositório de dados associados.</xref:System.Configuration.ApplicationSettingsBase.Save%2A> O manipulador de eventos associado pode cancelar este evento."
  example:
  - "The following code example shows the SettingsSaving event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler queries the user to save the current application settings property values. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#8](~/add/codesnippet/cpp/e-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#8](~/add/codesnippet/csharp/e-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#8](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#8)]"
  syntax:
    content: public event System.Configuration.SettingsSavingEventHandler SettingsSaving;
    return:
      type: System.Configuration.SettingsSavingEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  id: Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Atualiza as configurações do aplicativo para refletir uma instalação mais recente do aplicativo."
  remarks: "O método de atualização executa duas ações para garantir uma transição suave para uma nova versão de um aplicativo:-todos os provedores de configurações correspondente da existência de aplicativo atualizado por meio de uma chamada para ele o notificará seus <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName>método, supondo que eles implementou o <xref:System.Configuration.IApplicationSettingsProvider>interface.</xref:System.Configuration.IApplicationSettingsProvider> </xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName> Esta ação não será executada se a classe de invólucro de configurações está marcada com <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</xref:System.Configuration.NoSettingsVersionUpgradeAttribute>      -Recarrega os valores para todas as configurações de aplicativo.       Você pode substituir o comportamento padrão de atualização para implementar atualizar ou mesclar o comportamento personalizado. Use o <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>método para recuperar valores individuais de uma configuração para a versão anterior do aplicativo.</xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> Exemplos de comportamento de atualização personalizado:-usando novos padrões de política que substituam um ou mais dos valores especificados pelo usuário anteriores ou os padrões anteriores.      -Conversão especial de valores antigos para ser compatível com a mais recente intervalos, um grupo de propriedades de configurações diferentes e assim por diante."
  syntax:
    content: public virtual void Upgrade ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Upgrade*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Não foi possível analisar o arquivo de configuração."
  platform:
  - net462
references:
- uid: System.Configuration.SettingsBase
  isExternal: false
  name: System.Configuration.SettingsBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
- uid: System.Configuration.ApplicationSettingsBase.Context
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
- uid: System.Configuration.SettingChangingEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventArgs
  nameWithType: SettingChangingEventArgs
  fullName: System.Configuration.SettingChangingEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
- uid: System.Configuration.SettingsLoadedEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventArgs
  nameWithType: SettingsLoadedEventArgs
  fullName: System.Configuration.SettingsLoadedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Configuration.ApplicationSettingsBase.Properties
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.ApplicationSettingsBase.Providers
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
- uid: System.Configuration.SettingsProviderCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection
  fullName: System.Configuration.SettingsProviderCollection
- uid: System.Configuration.ApplicationSettingsBase.Reload
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
- uid: System.Configuration.ApplicationSettingsBase.Reset
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
- uid: System.Configuration.ApplicationSettingsBase.Save
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
- uid: System.Configuration.SettingChangingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventHandler
  nameWithType: SettingChangingEventHandler
  fullName: System.Configuration.SettingChangingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
- uid: System.Configuration.SettingsLoadedEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventHandler
  nameWithType: SettingsLoadedEventHandler
  fullName: System.Configuration.SettingsLoadedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
- uid: System.Configuration.SettingsSavingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsSavingEventHandler
  nameWithType: SettingsSavingEventHandler
  fullName: System.Configuration.SettingsSavingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
- uid: System.Configuration.ApplicationSettingsBase.#ctor*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase
- uid: System.Configuration.ApplicationSettingsBase.Context*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion
  nameWithType: ApplicationSettingsBase.GetPreviousVersion
- uid: System.Configuration.ApplicationSettingsBase.Item*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item
  nameWithType: ApplicationSettingsBase.Item
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged
  nameWithType: ApplicationSettingsBase.OnPropertyChanged
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging
  nameWithType: ApplicationSettingsBase.OnSettingChanging
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving
  nameWithType: ApplicationSettingsBase.OnSettingsSaving
- uid: System.Configuration.ApplicationSettingsBase.Properties*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.ApplicationSettingsBase.Providers*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
- uid: System.Configuration.ApplicationSettingsBase.Reload*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload
  nameWithType: ApplicationSettingsBase.Reload
- uid: System.Configuration.ApplicationSettingsBase.Reset*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset
  nameWithType: ApplicationSettingsBase.Reset
- uid: System.Configuration.ApplicationSettingsBase.Save*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save
  nameWithType: ApplicationSettingsBase.Save
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.Upgrade*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade
  nameWithType: ApplicationSettingsBase.Upgrade
