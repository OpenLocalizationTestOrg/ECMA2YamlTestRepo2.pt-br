### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationSecurityManager
  id: ApplicationSecurityManager
  children:
  - System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  - System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  - System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  langs:
  - csharp
  name: ApplicationSecurityManager
  nameWithType: ApplicationSecurityManager
  fullName: System.Security.Policy.ApplicationSecurityManager
  type: Class
  summary: "Gerencia as decisões de confiança para aplicativos ativados pelo manifesto."
  remarks: "A classe ApplicationSecurityManager fornece informações essenciais para a execução de um aplicativo baseado no manifesto. O <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>propriedade identifica o Gerenciador de confiança responsável por determinar se um aplicativo é confiável.</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> O <xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A>método chama a relação de confiança do aplicativo Gerenciador para determinar se um aplicativo é confiável.</xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A> O <xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>propriedade contém as decisões de confiança em cache para o usuário.</xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class ApplicationSecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  id: ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém o Gerenciador de confiança do aplicativo atual."
  remarks: "Na versão atual, há apenas um Gerenciador de confiança, que pode ser uma implementação personalizada do <xref:System.Security.Policy.IApplicationTrustManager>interface.</xref:System.Security.Policy.IApplicationTrustManager> A implementação do Gerenciador de confiança padrão solicita ao usuário permissão para instalar o aplicativo e elevar as permissões concedidas ao aplicativo. Outras implementações do Gerenciador de confiança podem ter experiências de usuário diferente. Por exemplo, uma implementação pode consultar uma lista de enterprise para aplicativos confiáveis, em vez de solicitar ao usuário essas informações."
  syntax:
    content: public static System.Security.Policy.IApplicationTrustManager ApplicationTrustManager { get; }
    return:
      type: System.Security.Policy.IApplicationTrustManager
      description: "Um <xref href=&quot;System.Security.Policy.IApplicationTrustManager&quot;> </xref> que representa o Gerenciador de confiança atual."
  overload: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "A política sobre este aplicativo não tem um Gerenciador de confiança."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Determina se o usuário aprovar o aplicativo especificado seja executado com o conjunto de permissões solicitado."
  remarks: "DetermineApplicationTrust usa configurado <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>propriedade para determinar se deve permitir a execução do aplicativo especificado com a permissão definida solicitada no manifesto do aplicativo.</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> Comportamento do Gerenciador de confiança depende a implementação do Gerenciador de confiança e as informações transmitidas no `context` parâmetro. O comportamento padrão do Gerenciador de confiança é estabelecer uma caixa de diálogo de interface de usuário para determinar a aprovação do usuário. No entanto, um Gerenciador de confiança também pode determinar o status de confiança de um aplicativo com base em outros critérios, como decisões fornecidos por um banco de dados corporativo. A decisão de confiança pode ser persistente, dependendo de `context` propriedades de parâmetros e a implementação do Gerenciador de confiança. Se a relação de confiança para o aplicativo é mantida para uma decisão com base em uma caixa de diálogo do usuário, futuras chamadas para o <xref:System.Security.Policy.ApplicationSecurityManager>não apresentará a caixa de diálogo de interface do usuário para cada solicitação para o aplicativo.</xref:System.Security.Policy.ApplicationSecurityManager> DetermineApplicationTrust é chamado após o manifesto, mas antes que o aplicativo foi baixado para o sistema local."
  syntax:
    content: public static bool DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "Um <xref href=&quot;System.ActivationContext&quot;> </xref> identifica o contexto de ativação para o aplicativo."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "Um <xref href=&quot;System.Security.Policy.TrustManagerContext&quot;> </xref> identifica o contexto do Gerenciador de confiança para o aplicativo."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para executar o aplicativo especificado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>activationContext</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  id: UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém uma coleção de relação de confiança do aplicativo que contém as decisões de confiança em cache para o usuário."
  remarks: "As decisões de confiança na coleção são mantidas usando os métodos de coleção, como o <xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>método ou o <xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A>método.</xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A> </xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>"
  syntax:
    content: public static System.Security.Policy.ApplicationTrustCollection UserApplicationTrusts { get; }
    return:
      type: System.Security.Policy.ApplicationTrustCollection
      description: "Um <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> que contém as decisões de confiança em cache para o usuário."
  overload: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.IApplicationTrustManager
  parent: System.Security.Policy
  isExternal: false
  name: IApplicationTrustManager
  nameWithType: IApplicationTrustManager
  fullName: System.Security.Policy.IApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
- uid: System.Security.Policy.ApplicationTrustCollection
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrustCollection
  nameWithType: ApplicationTrustCollection
  fullName: System.Security.Policy.ApplicationTrustCollection
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
