### YamlMime:ManagedReference
items:
- uid: System.Drawing.RectangleF
  id: RectangleF
  children:
  - System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  - System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.RectangleF.Bottom
  - System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  - System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Contains(System.Single,System.Single)
  - System.Drawing.RectangleF.Empty
  - System.Drawing.RectangleF.Equals(System.Object)
  - System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.RectangleF.GetHashCode
  - System.Drawing.RectangleF.Height
  - System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  - System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  - System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.IsEmpty
  - System.Drawing.RectangleF.Left
  - System.Drawing.RectangleF.Location
  - System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  - System.Drawing.RectangleF.Offset(System.Single,System.Single)
  - System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)
  - System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Right
  - System.Drawing.RectangleF.Size
  - System.Drawing.RectangleF.Top
  - System.Drawing.RectangleF.ToString
  - System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Width
  - System.Drawing.RectangleF.X
  - System.Drawing.RectangleF.Y
  langs:
  - csharp
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
  type: Struct
  summary: "Armazena um conjunto de quatro números de ponto flutuante que representam o local e o tamanho de um retângulo. Para funções mais avançadas de região, use um <xref href=&quot;System.Drawing.Region&quot;> </xref> objeto."
  remarks: "Um retângulo é definido pela largura, altura e canto superior esquerdo."
  syntax:
    content: public struct RectangleF
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  id: '#ctor(System.Drawing.PointF,System.Drawing.SizeF)'
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: RectangleF(PointF,SizeF)
  nameWithType: RectangleF.RectangleF(PointF,SizeF)
  fullName: System.Drawing.RectangleF.RectangleF(PointF,SizeF)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> classe com o local especificado e o tamanho."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.RectangleF.op_Implicit%2A>, RectangleF, and <xref:System.Drawing.RectangleF.op_Equality%2A> members. This example is designed for use with a Windows Form. Paste this code into a form and call the `ConvertRectangleToRectangleF` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/csharp/5d8998f0-9d41-440a-a9e3-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/cpp/5d8998f0-9d41-440a-a9e3-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/visualbasic/5d8998f0-9d41-440a-a9e3-_1.vb)]"
  syntax:
    content: public RectangleF (System.Drawing.PointF location, System.Drawing.SizeF size);
    parameters:
    - id: location
      type: System.Drawing.PointF
      description: "Um <xref href=&quot;System.Drawing.PointF&quot;> </xref> que representa o canto superior esquerdo da região retangular."
    - id: size
      type: System.Drawing.SizeF
      description: "Um <xref href=&quot;System.Drawing.SizeF&quot;> </xref> que representa a largura e altura da região retangular."
  overload: System.Drawing.RectangleF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: RectangleF(Single,Single,Single,Single)
  nameWithType: RectangleF.RectangleF(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.RectangleF(Single,Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> classe com o local especificado e o tamanho."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the RectangleF, <xref:System.Drawing.Rectangle.Round%2A> and <xref:System.Drawing.Rectangle.Truncate%2A> members. This example is designed for use with a Windows Form.  Paste this code into a form and call the `RoundingAndTruncatingRectangles` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/csharp/03a5ad52-9050-4211-8a75-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/cpp/03a5ad52-9050-4211-8a75-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/visualbasic/03a5ad52-9050-4211-8a75-_1.vb)]"
  syntax:
    content: public RectangleF (float x, float y, float width, float height);
    parameters:
    - id: x
      type: System.Single
      description: "A coordenada x do canto superior esquerdo do retângulo."
    - id: y
      type: System.Single
      description: "A coordenada y do canto superior esquerdo do retângulo."
    - id: width
      type: System.Single
      description: "A largura do retângulo."
    - id: height
      type: System.Single
      description: "A altura do retângulo."
  overload: System.Drawing.RectangleF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Bottom
  id: Bottom
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Bottom
  nameWithType: RectangleF.Bottom
  fullName: System.Drawing.RectangleF.Bottom
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém a coordenada y é a soma de <> </> *> e <> </> *> deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  remarks: "O valor inferior representa a coordenada y do primeiro ponto na borda inferior do retângulo que não está contido no retângulo."
  syntax:
    content: public float Bottom { get; }
    return:
      type: System.Single
      description: "A coordenada y é a soma de <> </> *> e <> </> *> deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  overload: System.Drawing.RectangleF.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  id: Contains(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Contains(PointF)
  nameWithType: RectangleF.Contains(PointF)
  fullName: System.Drawing.RectangleF.Contains(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determina se o ponto especificado está contido dentro deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  syntax:
    content: public bool Contains (System.Drawing.PointF pt);
    parameters:
    - id: pt
      type: System.Drawing.PointF
      description: "O <xref href=&quot;System.Drawing.PointF&quot;> </xref> para testar."
    return:
      type: System.Boolean
      description: "Este método retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto representado pelo <code> pt </code> parâmetro está contido dentro deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.RectangleF.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  id: Contains(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Contains(RectangleF)
  nameWithType: RectangleF.Contains(RectangleF)
  fullName: System.Drawing.RectangleF.Contains(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determina se a região retangular representado pelo <code> rect </code> totalmente contido dentro deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  syntax:
    content: public bool Contains (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "O <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> para testar."
    return:
      type: System.Boolean
      description: "Este método retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a região retangular representados por <code> rect </code> totalmente contido dentro da região retangular representada por esse <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.RectangleF.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Contains(System.Single,System.Single)
  id: Contains(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Contains(Single,Single)
  nameWithType: RectangleF.Contains(Single,Single)
  fullName: System.Drawing.RectangleF.Contains(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determina se o ponto especificado está contido dentro deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  syntax:
    content: public bool Contains (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "A coordenada x do ponto de teste."
    - id: y
      type: System.Single
      description: "A coordenada y do ponto de teste."
    return:
      type: System.Boolean
      description: "Este método retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto definido por <code> x </code> e <code> y </code> está contida dentro deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.RectangleF.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Empty
  id: Empty
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Empty
  nameWithType: RectangleF.Empty
  fullName: System.Drawing.RectangleF.Empty
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Representa uma ocorrência da <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> classe com seus membros não inicializado."
  remarks: "Os membros do novo <xref:System.Drawing.RectangleF>são deixados não inicializado.</xref:System.Drawing.RectangleF>"
  syntax:
    content: public static readonly System.Drawing.RectangleF Empty;
    return:
      type: System.Drawing.RectangleF
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: RectangleF.Equals(Object)
  fullName: System.Drawing.RectangleF.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Testes se <code> obj </code> é um <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> com o mesmo local e tamanho <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>Para teste.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "Este método retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se <code> obj </code> é um <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> e sua <xref uid=&quot;langword_csharp_X&quot; name=&quot;X&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Y&quot; name=&quot;Y&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Width&quot; name=&quot;Width&quot; href=&quot;&quot;> </xref>, e <xref uid=&quot;langword_csharp_Height&quot; name=&quot;Height&quot; href=&quot;&quot;> </xref> propriedades são iguais das propriedades correspondentes disso <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.RectangleF.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  id: FromLTRB(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: FromLTRB(Single,Single,Single,Single)
  nameWithType: RectangleF.FromLTRB(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.FromLTRB(Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria um <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura com o canto superior esquerdo e o canto inferior direito nos locais especificados."
  remarks: "Esse método cria um <xref:System.Drawing.RectangleF>com os cantos superior esquerdo e direito inferior especificados.</xref:System.Drawing.RectangleF>"
  syntax:
    content: public static System.Drawing.RectangleF FromLTRB (float left, float top, float right, float bottom);
    parameters:
    - id: left
      type: System.Single
      description: "A coordenada x do canto superior esquerdo da região retangular."
    - id: top
      type: System.Single
      description: "A coordenada y do canto superior esquerdo da região retangular."
    - id: right
      type: System.Single
      description: "A coordenada x do canto inferior direito da área retangular."
    - id: bottom
      type: System.Single
      description: "A coordenada y do canto inferior direito da área retangular."
    return:
      type: System.Drawing.RectangleF
      description: "O novo <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> que esse método cria."
  overload: System.Drawing.RectangleF.FromLTRB*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.GetHashCode
  id: GetHashCode
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: RectangleF.GetHashCode()
  fullName: System.Drawing.RectangleF.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém o código hash para este <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura. Para obter informações sobre o uso de códigos hash, consulte <xref uid=&quot;langword_csharp_Object.GetHashCode&quot; name=&quot;Object.GetHashCode&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código hash para este <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>."
  overload: System.Drawing.RectangleF.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Height
  id: Height
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Height
  nameWithType: RectangleF.Height
  fullName: System.Drawing.RectangleF.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define a altura deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  syntax:
    content: public float Height { get; set; }
    return:
      type: System.Single
      description: "A altura deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura. O padrão é 0."
  overload: System.Drawing.RectangleF.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  id: Inflate(System.Drawing.SizeF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Inflate(SizeF)
  nameWithType: RectangleF.Inflate(SizeF)
  fullName: System.Drawing.RectangleF.Inflate(SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Amplia isso <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> pelo valor especificado."
  remarks: "Esse método aumenta esse retângulo, não uma cópia dele. O retângulo é ampliado em ambas as direções ao longo do eixo. Por exemplo, se um retângulo 50 por 50 é inflado por 50 no eixo x, o retângulo resultante será 150 unidades longo (o original 50, 50 na direção menos e 50 na direção adição) manter centro Geométrico do retângulo."
  example:
  - "This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> e, an OnPaint event object. The code creates a <xref:System.Drawing.RectangleF> and draws it to the screen in black. Notice that it has to be converted to a <xref:System.Drawing.Rectangle> for drawing purposes. Then the code enlarges the <xref:System.Drawing.RectangleF>, again converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in red. Notice that the original (black) rectangle is expanded in both directions along the x-axis by 100 points.  \n  \n [!code-vb[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.rectang_5_1.vb)]\n [!code-cs[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/csharp/m-system.drawing.rectang_5_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/cpp/m-system.drawing.rectang_5_1.cpp)]"
  syntax:
    content: public void Inflate (System.Drawing.SizeF size);
    parameters:
    - id: size
      type: System.Drawing.SizeF
      description: "O valor para aumentar esse retângulo."
  overload: System.Drawing.RectangleF.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  id: Inflate(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Inflate(Single,Single)
  nameWithType: RectangleF.Inflate(Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Amplia isso <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura pelo valor especificado."
  remarks: "Esse método aumenta esse retângulo, não uma cópia dele. O retângulo é ampliado em ambas as direções ao longo do eixo. Por exemplo, se um retângulo 50 por 50 é inflado por 50 no eixo x, o retângulo resultante será 150 unidades longo (o original 50, 50 na direção menos e 50 na direção adição) manter centro Geométrico do retângulo.       Se qualquer um dos `x` ou `y` for negativo, o <xref:System.Drawing.RectangleF>está vazio na direção correspondente.</xref:System.Drawing.RectangleF>"
  syntax:
    content: public void Inflate (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "O valor para aumentar esse <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura horizontalmente."
    - id: y
      type: System.Single
      description: "O valor para aumentar esse <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura verticalmente."
  overload: System.Drawing.RectangleF.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  id: Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Inflate(RectangleF,Single,Single)
  nameWithType: RectangleF.Inflate(RectangleF,Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(RectangleF,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria e retorna uma cópia ampliada especificada <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura. A cópia é ampliada pelo valor especificado e o retângulo original permanece inalterado."
  remarks: "Este método faz uma cópia do `rect`, aumenta a cópia e, em seguida, retorna a cópia ampliada. O retângulo é ampliado em ambas as direções ao longo do eixo. Por exemplo, se um retângulo 50 por 50 é inflado por 50 no eixo x, o retângulo resultante será 150 unidades longo (o original 50, 50 na direção menos e 50 na direção adição) manter centro Geométrico do retângulo."
  syntax:
    content: public static System.Drawing.RectangleF Inflate (System.Drawing.RectangleF rect, float x, float y);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "O <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> a serem copiados. Esse retângulo não é modificado."
    - id: x
      type: System.Single
      description: "O valor para ampliar a cópia do retângulo horizontalmente."
    - id: y
      type: System.Single
      description: "O valor para ampliar a cópia do retângulo verticalmente."
    return:
      type: System.Drawing.RectangleF
      description: "O ampliada <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>."
  overload: System.Drawing.RectangleF.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  id: Intersect(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Intersect(RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Substitui esse <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura com a interseção de si mesmo e especificado <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  syntax:
    content: public void Intersect (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "O retângulo se cruzam."
  overload: System.Drawing.RectangleF.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Intersect(RectangleF,RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Retorna um <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura que representa a interseção de dois retângulos. Se não houver nenhuma interseção e vazio <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> é retornado."
  remarks: ''
  example:
  - "This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code creates two <xref:System.Drawing.RectangleF> objects and draws them to the screen in black and red. Notice that they have to be converted to <xref:System.Drawing.Rectangle> objects for drawing purposes. Then the code creates a third <xref:System.Drawing.RectangleF> using the <xref:System.Drawing.RectangleF.Intersect%2A> method, converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in blue. Notice the third (blue) rectangle is the area of overlap of the other two rectangles:  \n  \n [!code-vb[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/visualbasic/47bd303e-f7ea-48d0-ae6d-_1.vb)]\n [!code-cs[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/csharp/47bd303e-f7ea-48d0-ae6d-_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/cpp/47bd303e-f7ea-48d0-ae6d-_1.cpp)]"
  syntax:
    content: public static System.Drawing.RectangleF Intersect (System.Drawing.RectangleF a, System.Drawing.RectangleF b);
    parameters:
    - id: a
      type: System.Drawing.RectangleF
      description: "Um retângulo para intersect."
    - id: b
      type: System.Drawing.RectangleF
      description: "Um retângulo para intersect."
    return:
      type: System.Drawing.RectangleF
      description: "Um terceiro <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura do tamanho que representa a área sobreposta dos dois retângulos especificados."
  overload: System.Drawing.RectangleF.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  id: IntersectsWith(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: IntersectsWith(RectangleF)
  nameWithType: RectangleF.IntersectsWith(RectangleF)
  fullName: System.Drawing.RectangleF.IntersectsWith(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determina se esse retângulo faz interseção com <code> rect </code>."
  syntax:
    content: public bool IntersectsWith (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "O retângulo para testar."
    return:
      type: System.Boolean
      description: "Este método retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se não houver nenhuma interseção."
  overload: System.Drawing.RectangleF.IntersectsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.IsEmpty
  id: IsEmpty
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
  fullName: System.Drawing.RectangleF.IsEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Testes se o <> </> *> ou <> </> *> propriedade deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> tem um valor de zero."
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "Essa propriedade retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o <> </> *> ou <> </> *> propriedade deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> tem um valor de zero; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.RectangleF.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Left
  id: Left
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Left
  nameWithType: RectangleF.Left
  fullName: System.Drawing.RectangleF.Left
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém a coordenada x do canto superior esquerdo desse <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  syntax:
    content: public float Left { get; }
    return:
      type: System.Single
      description: "A coordenada x do canto superior esquerdo desse <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  overload: System.Drawing.RectangleF.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Location
  id: Location
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Location
  nameWithType: RectangleF.Location
  fullName: System.Drawing.RectangleF.Location
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define as coordenadas do canto superior esquerdo desta <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  syntax:
    content: public System.Drawing.PointF Location { get; set; }
    return:
      type: System.Drawing.PointF
      description: "Um <xref href=&quot;System.Drawing.PointF&quot;> </xref> que representa o canto superior esquerdo desta <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  overload: System.Drawing.RectangleF.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  id: Offset(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Offset(PointF)
  nameWithType: RectangleF.Offset(PointF)
  fullName: System.Drawing.RectangleF.Offset(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ajusta o local deste retângulo pelo valor especificado."
  syntax:
    content: public void Offset (System.Drawing.PointF pos);
    parameters:
    - id: pos
      type: System.Drawing.PointF
      description: "O valor para o local de deslocamento."
  overload: System.Drawing.RectangleF.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Offset(System.Single,System.Single)
  id: Offset(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Offset(Single,Single)
  nameWithType: RectangleF.Offset(Single,Single)
  fullName: System.Drawing.RectangleF.Offset(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ajusta o local deste retângulo pelo valor especificado."
  syntax:
    content: public void Offset (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "O valor para o local de deslocamento horizontal."
    - id: y
      type: System.Single
      description: "O valor para o local de deslocamento verticalmente."
  overload: System.Drawing.RectangleF.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: op_Equality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Equality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Equality(RectangleF,RectangleF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Testa se dois <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estruturas têm igual local e o tamanho."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.RectangleF.op_Implicit%2A>, <xref:System.Drawing.RectangleF.%23ctor%2A>and Equality members. This example is designed for use with a Windows Form. Paste this code into a form and call the `ConvertRectangleToRectangleF` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/csharp/e6058e88-3cbe-4600-981e-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/cpp/e6058e88-3cbe-4600-981e-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/visualbasic/e6058e88-3cbe-4600-981e-_1.vb)]"
  syntax:
    content: public static bool op_Equality (System.Drawing.RectangleF left, System.Drawing.RectangleF right);
    parameters:
    - id: left
      type: System.Drawing.RectangleF
      description: "O <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura está à esquerda do operador de igualdade."
    - id: right
      type: System.Drawing.RectangleF
      description: "O <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura está à direita do operador de igualdade."
    return:
      type: System.Boolean
      description: "Esse operador retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se as duas <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estruturas têm igual <> </> *>, <> </> *>, <> </> *>, e <> </> *> propriedades."
  overload: System.Drawing.RectangleF.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)
  id: op_Implicit(System.Drawing.Rectangle)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: op_Implicit(Rectangle)
  nameWithType: RectangleF.op_Implicit(Rectangle)
  fullName: System.Drawing.RectangleF.op_Implicit(Rectangle)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public static System.Drawing.RectangleF op_Implicit (System.Drawing.Rectangle r);
    parameters:
    - id: r
      type: System.Drawing.Rectangle
      description: "A ser adicionado."
    return:
      type: System.Drawing.RectangleF
      description: "A ser adicionado."
  overload: System.Drawing.RectangleF.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: op_Inequality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Inequality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Inequality(RectangleF,RectangleF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Testa se dois <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estruturas diferem no local ou tamanho."
  syntax:
    content: public static bool op_Inequality (System.Drawing.RectangleF left, System.Drawing.RectangleF right);
    parameters:
    - id: left
      type: System.Drawing.RectangleF
      description: "O <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura está à esquerda do operador de desigualdade."
    - id: right
      type: System.Drawing.RectangleF
      description: "O <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura está à direita do operador de desigualdade."
    return:
      type: System.Boolean
      description: "Esse operador retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se qualquer uma da <> </> *>, <> </> *>, <> </> *>, ou <> </> *> propriedades dos dois <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> estruturas forem diferentes; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.RectangleF.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Right
  id: Right
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Right
  nameWithType: RectangleF.Right
  fullName: System.Drawing.RectangleF.Right
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém a coordenada x é a soma de <> </> *> e <> </> *> deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  remarks: "O valor à direita representa a coordenada x do primeiro ponto na borda direita do retângulo que não está contido no retângulo."
  syntax:
    content: public float Right { get; }
    return:
      type: System.Single
      description: "A coordenada x é a soma de <> </> *> e <> </> *> deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  overload: System.Drawing.RectangleF.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Size
  id: Size
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Size
  nameWithType: RectangleF.Size
  fullName: System.Drawing.RectangleF.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define o tamanho desse <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>."
  syntax:
    content: public System.Drawing.SizeF Size { get; set; }
    return:
      type: System.Drawing.SizeF
      description: "Um <xref href=&quot;System.Drawing.SizeF&quot;> </xref> que representa a largura e altura deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  overload: System.Drawing.RectangleF.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Top
  id: Top
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Top
  nameWithType: RectangleF.Top
  fullName: System.Drawing.RectangleF.Top
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém a coordenada y do canto superior deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  syntax:
    content: public float Top { get; }
    return:
      type: System.Single
      description: "A coordenada y do canto superior deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  overload: System.Drawing.RectangleF.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.ToString
  id: ToString
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: ToString()
  nameWithType: RectangleF.ToString()
  fullName: System.Drawing.RectangleF.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converte o <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> e <xref href=&quot;System.Drawing.Size&quot;> </xref> deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> para uma cadeia de caracteres legível."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém a posição, largura e altura deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura. Por exemplo, &quot;{X =&20;,&20; = Y, largura =&100;, altura =&50;}&quot;."
  overload: System.Drawing.RectangleF.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Union(RectangleF,RectangleF)
  nameWithType: RectangleF.Union(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Union(RectangleF,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria o menor possível terceiro retângulo que pode conter ambos dois retângulos que formam uma união."
  remarks: "Quando um dos dois retângulos estiver vazio, o que significa que todos os seus valores são zero, o <xref:System.Drawing.Rectangle.Union%2A>método retorna um retângulo com um ponto de partida de (0, 0) e a altura e a largura do retângulo não vazio.</xref:System.Drawing.Rectangle.Union%2A> Por exemplo, se você tiver dois = de retângulos A (0, 0; 0, 0) e B = (1, 1; 2, 2), em seguida, a união de A e B é (0, 0; 2, 2)."
  example:
  - "This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> e, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code creates two <xref:System.Drawing.RectangleF> s and draws them to the screen in black and red. Notice that they have to be converted to <xref:System.Drawing.Rectangle> s for drawing purposes. Then the code creates a third <xref:System.Drawing.RectangleF> using the Union method, converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in blue. Notice the third (blue) rectangle is the smallest possible rectangle that can contain both of the other two rectangles:  \n  \n [!code-vb[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/visualbasic/2f1239b4-8abf-4ed8-9c26-_1.vb)]\n [!code-cs[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/csharp/2f1239b4-8abf-4ed8-9c26-_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/cpp/2f1239b4-8abf-4ed8-9c26-_1.cpp)]"
  syntax:
    content: public static System.Drawing.RectangleF Union (System.Drawing.RectangleF a, System.Drawing.RectangleF b);
    parameters:
    - id: a
      type: System.Drawing.RectangleF
      description: "Um retângulo a união."
    - id: b
      type: System.Drawing.RectangleF
      description: "Um retângulo a união."
    return:
      type: System.Drawing.RectangleF
      description: "Um terceiro <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura que contém os dois retângulos que formam a união."
  overload: System.Drawing.RectangleF.Union*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Width
  id: Width
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Width
  nameWithType: RectangleF.Width
  fullName: System.Drawing.RectangleF.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define a largura deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  syntax:
    content: public float Width { get; set; }
    return:
      type: System.Single
      description: "A largura deste <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura. O padrão é 0."
  overload: System.Drawing.RectangleF.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.X
  id: X
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: X
  nameWithType: RectangleF.X
  fullName: System.Drawing.RectangleF.X
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define a coordenada x do canto superior esquerdo desta <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  syntax:
    content: public float X { get; set; }
    return:
      type: System.Single
      description: "A coordenada x do canto superior esquerdo desta <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura. O padrão é 0."
  overload: System.Drawing.RectangleF.X*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Y
  id: Y
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Y
  nameWithType: RectangleF.Y
  fullName: System.Drawing.RectangleF.Y
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define a coordenada y do canto superior esquerdo desta <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura."
  syntax:
    content: public float Y { get; set; }
    return:
      type: System.Single
      description: "A coordenada y do canto superior esquerdo desta <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estrutura. O padrão é 0."
  overload: System.Drawing.RectangleF.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: RectangleF(PointF,SizeF)
  nameWithType: RectangleF.RectangleF(PointF,SizeF)
  fullName: System.Drawing.RectangleF.RectangleF(PointF,SizeF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: RectangleF(Single,Single,Single,Single)
  nameWithType: RectangleF.RectangleF(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.RectangleF(Single,Single,Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.RectangleF.Bottom
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Bottom
  nameWithType: RectangleF.Bottom
  fullName: System.Drawing.RectangleF.Bottom
- uid: System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains(PointF)
  nameWithType: RectangleF.Contains(PointF)
  fullName: System.Drawing.RectangleF.Contains(PointF)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains(RectangleF)
  nameWithType: RectangleF.Contains(RectangleF)
  fullName: System.Drawing.RectangleF.Contains(RectangleF)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.RectangleF.Contains(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains(Single,Single)
  nameWithType: RectangleF.Contains(Single,Single)
  fullName: System.Drawing.RectangleF.Contains(Single,Single)
- uid: System.Drawing.RectangleF.Empty
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Empty
  nameWithType: RectangleF.Empty
  fullName: System.Drawing.RectangleF.Empty
- uid: System.Drawing.RectangleF.Equals(System.Object)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Equals(Object)
  nameWithType: RectangleF.Equals(Object)
  fullName: System.Drawing.RectangleF.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: FromLTRB(Single,Single,Single,Single)
  nameWithType: RectangleF.FromLTRB(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.FromLTRB(Single,Single,Single,Single)
- uid: System.Drawing.RectangleF.GetHashCode
  parent: System.Drawing.RectangleF
  isExternal: false
  name: GetHashCode()
  nameWithType: RectangleF.GetHashCode()
  fullName: System.Drawing.RectangleF.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.RectangleF.Height
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Height
  nameWithType: RectangleF.Height
  fullName: System.Drawing.RectangleF.Height
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate(SizeF)
  nameWithType: RectangleF.Inflate(SizeF)
  fullName: System.Drawing.RectangleF.Inflate(SizeF)
- uid: System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate(Single,Single)
  nameWithType: RectangleF.Inflate(Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(Single,Single)
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate(RectangleF,Single,Single)
  nameWithType: RectangleF.Inflate(RectangleF,Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(RectangleF,Single,Single)
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Intersect(RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF)
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Intersect(RectangleF,RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IntersectsWith(RectangleF)
  nameWithType: RectangleF.IntersectsWith(RectangleF)
  fullName: System.Drawing.RectangleF.IntersectsWith(RectangleF)
- uid: System.Drawing.RectangleF.IsEmpty
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
  fullName: System.Drawing.RectangleF.IsEmpty
- uid: System.Drawing.RectangleF.Left
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Left
  nameWithType: RectangleF.Left
  fullName: System.Drawing.RectangleF.Left
- uid: System.Drawing.RectangleF.Location
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Location
  nameWithType: RectangleF.Location
  fullName: System.Drawing.RectangleF.Location
- uid: System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Offset(PointF)
  nameWithType: RectangleF.Offset(PointF)
  fullName: System.Drawing.RectangleF.Offset(PointF)
- uid: System.Drawing.RectangleF.Offset(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Offset(Single,Single)
  nameWithType: RectangleF.Offset(Single,Single)
  fullName: System.Drawing.RectangleF.Offset(Single,Single)
- uid: System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Equality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Equality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Equality(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Implicit(Rectangle)
  nameWithType: RectangleF.op_Implicit(Rectangle)
  fullName: System.Drawing.RectangleF.op_Implicit(Rectangle)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Inequality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Inequality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Inequality(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.Right
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Right
  nameWithType: RectangleF.Right
  fullName: System.Drawing.RectangleF.Right
- uid: System.Drawing.RectangleF.Size
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Size
  nameWithType: RectangleF.Size
  fullName: System.Drawing.RectangleF.Size
- uid: System.Drawing.RectangleF.Top
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Top
  nameWithType: RectangleF.Top
  fullName: System.Drawing.RectangleF.Top
- uid: System.Drawing.RectangleF.ToString
  parent: System.Drawing.RectangleF
  isExternal: false
  name: ToString()
  nameWithType: RectangleF.ToString()
  fullName: System.Drawing.RectangleF.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Union(RectangleF,RectangleF)
  nameWithType: RectangleF.Union(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Union(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.Width
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Width
  nameWithType: RectangleF.Width
  fullName: System.Drawing.RectangleF.Width
- uid: System.Drawing.RectangleF.X
  parent: System.Drawing.RectangleF
  isExternal: false
  name: X
  nameWithType: RectangleF.X
  fullName: System.Drawing.RectangleF.X
- uid: System.Drawing.RectangleF.Y
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Y
  nameWithType: RectangleF.Y
  fullName: System.Drawing.RectangleF.Y
- uid: System.Drawing.RectangleF.#ctor*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF.RectangleF
- uid: System.Drawing.RectangleF.Bottom*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Bottom
  nameWithType: RectangleF.Bottom
- uid: System.Drawing.RectangleF.Contains*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains
  nameWithType: RectangleF.Contains
- uid: System.Drawing.RectangleF.Equals*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Equals
  nameWithType: RectangleF.Equals
- uid: System.Drawing.RectangleF.FromLTRB*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: FromLTRB
  nameWithType: RectangleF.FromLTRB
- uid: System.Drawing.RectangleF.GetHashCode*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: GetHashCode
  nameWithType: RectangleF.GetHashCode
- uid: System.Drawing.RectangleF.Height*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Height
  nameWithType: RectangleF.Height
- uid: System.Drawing.RectangleF.Inflate*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate
  nameWithType: RectangleF.Inflate
- uid: System.Drawing.RectangleF.Intersect*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Intersect
  nameWithType: RectangleF.Intersect
- uid: System.Drawing.RectangleF.IntersectsWith*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IntersectsWith
  nameWithType: RectangleF.IntersectsWith
- uid: System.Drawing.RectangleF.IsEmpty*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
- uid: System.Drawing.RectangleF.Left*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Left
  nameWithType: RectangleF.Left
- uid: System.Drawing.RectangleF.Location*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Location
  nameWithType: RectangleF.Location
- uid: System.Drawing.RectangleF.Offset*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Offset
  nameWithType: RectangleF.Offset
- uid: System.Drawing.RectangleF.op_Equality*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Equality
  nameWithType: RectangleF.op_Equality
- uid: System.Drawing.RectangleF.op_Implicit*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Implicit
  nameWithType: RectangleF.op_Implicit
- uid: System.Drawing.RectangleF.op_Inequality*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Inequality
  nameWithType: RectangleF.op_Inequality
- uid: System.Drawing.RectangleF.Right*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Right
  nameWithType: RectangleF.Right
- uid: System.Drawing.RectangleF.Size*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Size
  nameWithType: RectangleF.Size
- uid: System.Drawing.RectangleF.Top*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Top
  nameWithType: RectangleF.Top
- uid: System.Drawing.RectangleF.ToString*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: ToString
  nameWithType: RectangleF.ToString
- uid: System.Drawing.RectangleF.Union*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Union
  nameWithType: RectangleF.Union
- uid: System.Drawing.RectangleF.Width*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Width
  nameWithType: RectangleF.Width
- uid: System.Drawing.RectangleF.X*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: X
  nameWithType: RectangleF.X
- uid: System.Drawing.RectangleF.Y*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Y
  nameWithType: RectangleF.Y
