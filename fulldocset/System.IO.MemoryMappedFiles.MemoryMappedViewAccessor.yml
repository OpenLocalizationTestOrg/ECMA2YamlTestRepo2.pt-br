### YamlMime:ManagedReference
items:
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  id: MemoryMappedViewAccessor
  children:
  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush
  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset
  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  langs:
  - csharp
  name: MemoryMappedViewAccessor
  nameWithType: MemoryMappedViewAccessor
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  type: Class
  summary: "Representa uma exibição aleatoriamente acessada de um arquivo de mapeamento de memória."
  remarks: "Use o <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor%2A>método de um <xref:System.IO.MemoryMappedFiles.MemoryMappedFile>objeto para obter essa visão.</xref:System.IO.MemoryMappedFiles.MemoryMappedFile> </xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor%2A>"
  example:
  - "The following example obtains a MemoryMappedViewAccessor from a large memory-mapped file for editing.  \n  \n This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.  \n  \n [!code-vb[memorymappedfiles.memorymappedfile.createfromfile#2](~/add/codesnippet/visualbasic/t-system.io.memorymapped_1_1.vb)]\n [!code-cs[memorymappedfiles.memorymappedfile.createfromfile#2](~/add/codesnippet/csharp/t-system.io.memorymapped_1_1.cs)]"
  syntax:
    content: 'public sealed class MemoryMappedViewAccessor : System.IO.UnmanagedMemoryAccessor'
  inheritance:
  - System.Object
  - System.IO.UnmanagedMemoryAccessor
  implements: []
  inheritedMembers:
  - System.IO.UnmanagedMemoryAccessor.CanRead
  - System.IO.UnmanagedMemoryAccessor.CanWrite
  - System.IO.UnmanagedMemoryAccessor.Capacity
  - System.IO.UnmanagedMemoryAccessor.Dispose
  - System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
  - System.IO.UnmanagedMemoryAccessor.IsOpen
  - System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)
  - System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)
  - System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)
  - System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)
  - System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MemoryMappedViewAccessor.Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush
  id: Flush
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  langs:
  - csharp
  name: Flush()
  nameWithType: MemoryMappedViewAccessor.Flush()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Limpa todos os buffers para esse modo de exibição e faz com que todos os dados armazenados em buffer a ser gravado no arquivo de base."
  remarks: "Se você estiver usando modos de exibição que são adjacentes uns aos outros, esse método também limpa os dados a seguir, desde que seu tamanho seja igual a um múltiplo do tamanho de página do sistema:-todos os dados que precede o modo de exibição até o deslocamento de arquivo mais recente.      -Todos os dados que segue a exibição até o deslocamento de arquivo mais antigo."
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Métodos foram chamados após o acessador foi fechado."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset
  id: PointerOffset
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  langs:
  - csharp
  name: PointerOffset
  nameWithType: MemoryMappedViewAccessor.PointerOffset
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "[Com suporte no .NET Framework 4.5.1 e versões posteriores]       Obtém o número de bytes pelo qual a posição inicial dessa exibição é deslocada do início do arquivo de mapeamento de memória."
  syntax:
    content: public long PointerOffset { get; }
    return:
      type: System.Int64
      description: "O número de bytes entre a posição inicial dessa exibição e o início do arquivo de mapeamento de memória."
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O objeto do qual essa instância foi criada é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  id: SafeMemoryMappedViewHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  langs:
  - csharp
  name: SafeMemoryMappedViewHandle
  nameWithType: MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Obtém um identificador para o modo de exibição de um arquivo de mapeamento de memória."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle SafeMemoryMappedViewHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
      description: "Um wrapper para o identificador do sistema operacional para o modo de exibição do arquivo."
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.UnmanagedMemoryAccessor
  isExternal: false
  name: System.IO.UnmanagedMemoryAccessor
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MemoryMappedViewAccessor.Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  isExternal: false
  name: Flush()
  nameWithType: MemoryMappedViewAccessor.Flush()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush()
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  isExternal: false
  name: PointerOffset
  nameWithType: MemoryMappedViewAccessor.PointerOffset
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  isExternal: false
  name: SafeMemoryMappedViewHandle
  nameWithType: MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeMemoryMappedViewHandle
  nameWithType: SafeMemoryMappedViewHandle
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  isExternal: false
  name: Dispose
  nameWithType: MemoryMappedViewAccessor.Dispose
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  isExternal: false
  name: Flush
  nameWithType: MemoryMappedViewAccessor.Flush
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  isExternal: false
  name: PointerOffset
  nameWithType: MemoryMappedViewAccessor.PointerOffset
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  isExternal: false
  name: SafeMemoryMappedViewHandle
  nameWithType: MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
