### YamlMime:ManagedReference
items:
- uid: System.Drawing.BufferedGraphicsContext
  id: BufferedGraphicsContext
  children:
  - System.Drawing.BufferedGraphicsContext.#ctor
  - System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  - System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  - System.Drawing.BufferedGraphicsContext.Dispose
  - System.Drawing.BufferedGraphicsContext.Finalize
  - System.Drawing.BufferedGraphicsContext.Invalidate
  - System.Drawing.BufferedGraphicsContext.MaximumBuffer
  langs:
  - csharp
  name: BufferedGraphicsContext
  nameWithType: BufferedGraphicsContext
  fullName: System.Drawing.BufferedGraphicsContext
  type: Class
  summary: "Fornece métodos para criação de buffers de gráficos que podem ser usados para armazenamento em buffer duplo."
  remarks: "A classe BufferedGraphicsContext permite que você implemente o buffer duplo personalizado para seus elementos gráficos. Elementos gráficos que usam o buffer duplo podem reduzir ou eliminar a cintilação causado redesenhando uma superfície de exibição.      > [!NOTE] > É a maneira mais simples de usar buffer duplo definir o <xref:System.Windows.Forms.ControlStyles>controlar o sinalizador de estilo em um controle usando o <xref:System.Windows.Forms.Control.SetStyle%2A>método.</xref:System.Windows.Forms.Control.SetStyle%2A> </xref:System.Windows.Forms.ControlStyles> Definindo o <xref:System.Windows.Forms.ControlStyles>sinalizador de estilos de controle para um controle redireciona toda a pintura para o controle por meio de um buffer de gráfico padrão, sem a necessidade de qualquer código adicional.</xref:System.Windows.Forms.ControlStyles> Este sinalizador é definido como `true` por padrão.       A classe BufferedGraphicsContext fornece métodos para criar e configurar um buffer de gráficos. O <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>método cria um <xref:System.Drawing.BufferedGraphics>, que é um wrapper para um buffer de gráficos que também fornece métodos que você pode usar para gravar no buffer e processar seu conteúdo para um dispositivo de saída.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>       Você pode recuperar o BufferedGraphicsContext para o domínio de aplicativo atual de estático <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>propriedade.</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> Para aplicativos com muitos elementos gráficos, como animação, você pode criar um BufferedGraphicsContext dedicado usando o construtor, mas para a maioria dos aplicativos de <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>propriedade serão suficiente.</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>       Para obter mais informações sobre o desenho de elementos gráficos em buffer e implementações personalizadas de buffer, consulte [gráficos em buffer duplo](~/add/includes/ajax-current-ext-md.md) e [como: manualmente gerenciar gráficos em buffer](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to acquire the BufferedGraphicsContext for the current application domain. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#1](~/add/codesnippet/csharp/t-system.drawing.buffere_2_1.cs)]\n [!code-cpp[BufferingExamples#1](~/add/codesnippet/cpp/t-system.drawing.buffere_2_1.cpp)]\n [!code-vb[BufferingExamples#1](~/add/codesnippet/visualbasic/t-system.drawing.buffere_2_1.vb)]"
  syntax:
    content: 'public sealed class BufferedGraphicsContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.#ctor
  id: '#ctor'
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: BufferedGraphicsContext()
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()
  fullName: System.Drawing.BufferedGraphicsContext.BufferedGraphicsContext()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.BufferedGraphicsContext&quot;> </xref> classe."
  remarks: "Para aplicativos com muitos elementos gráficos, como animação, você às vezes pode melhorar o desempenho usando um dedicado <xref:System.Drawing.BufferedGraphicsContext>em vez da instância padrão fornecida pelo <xref:System.Drawing.BufferedGraphicsManager>.</xref:System.Drawing.BufferedGraphicsManager> </xref:System.Drawing.BufferedGraphicsContext> Isso permite que você crie e gerencie os buffers de gráficos individualmente.      > [!NOTE] > Você sempre deve chamar <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>quando você terminar de usar <xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext> dedicado</xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>       Para obter mais informações sobre buffers de gráficos dedicado, consulte [como: manualmente gerenciar gráficos em buffer](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public BufferedGraphicsContext ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  id: Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Allocate(Graphics,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria um buffer de gráficos do tamanho especificado usando o formato de pixel especificado <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Quando você chama o método de alocação com um retângulo cujo tamanho excede o valor da <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>propriedade, um temporário <xref:System.Drawing.BufferedGraphicsContext>é criado para alocar o buffer e fornecer um contexto temporário para o buffer.</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> O novo <xref:System.Drawing.BufferedGraphicsContext>é diferente de <xref:System.Drawing.BufferedGraphicsContext>para o aplicativo de domínio e ele é descartado automaticamente quando o <xref:System.Drawing.BufferedGraphics>retornado pela alocar método é descartado.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext>"
  example:
  - "The following code example demonstrates creating a graphics buffer using the Allocate method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#3](~/add/codesnippet/csharp/99d851e4-d9e2-4d32-8fa3-_1.cs)]\n [!code-cpp[BufferingExamples#3](~/add/codesnippet/cpp/99d851e4-d9e2-4d32-8fa3-_1.cpp)]\n [!code-vb[BufferingExamples#3](~/add/codesnippet/visualbasic/99d851e4-d9e2-4d32-8fa3-_1.vb)]"
  syntax:
    content: public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);
    parameters:
    - id: targetGraphics
      type: System.Drawing.Graphics
      description: "O <xref href=&quot;System.Drawing.Graphics&quot;> </xref> deve corresponder ao formato de pixel para o buffer de novo."
    - id: targetRectangle
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que indica o tamanho do buffer para criar."
    return:
      type: System.Drawing.BufferedGraphics
      description: "Um <xref href=&quot;System.Drawing.BufferedGraphics&quot;> </xref> que pode ser usado para desenhar para um buffer das dimensões especificadas."
  overload: System.Drawing.BufferedGraphicsContext.Allocate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  id: Allocate(System.IntPtr,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Allocate(IntPtr,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria um buffer de gráficos do tamanho especificado usando o formato de pixel especificado <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Quando você chama o <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>método com um retângulo cujo tamanho excede o valor da <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>propriedade, um temporário <xref:System.Drawing.BufferedGraphicsContext>é criado para alocar o buffer e fornecer um contexto temporário para o buffer.</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> </xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> O novo <xref:System.Drawing.BufferedGraphicsContext>é diferente de <xref:System.Drawing.BufferedGraphicsContext>para o aplicativo de domínio e ele é descartado automaticamente quando o <xref:System.Drawing.BufferedGraphics>retornado pelo <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>método é descartado.</xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> </xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext>"
  example:
  - "The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#4](~/add/codesnippet/csharp/5334a85f-cb42-4a29-8bd2-_1.cs)]\n [!code-cpp[BufferingExamples#4](~/add/codesnippet/cpp/5334a85f-cb42-4a29-8bd2-_1.cpp)]\n [!code-vb[BufferingExamples#4](~/add/codesnippet/visualbasic/5334a85f-cb42-4a29-8bd2-_1.vb)]"
  syntax:
    content: public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);
    parameters:
    - id: targetDC
      type: System.IntPtr
      description: "Um <xref:System.IntPtr>em um contexto de dispositivo para corresponder ao formato de pixel do novo buffer para.</xref:System.IntPtr>"
    - id: targetRectangle
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que indica o tamanho do buffer para criar."
    return:
      type: System.Drawing.BufferedGraphics
      description: "Um <xref href=&quot;System.Drawing.BufferedGraphics&quot;> </xref> que pode ser usado para desenhar para um buffer das dimensões especificadas."
  overload: System.Drawing.BufferedGraphicsContext.Allocate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Dispose
  id: Dispose
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: BufferedGraphicsContext.Dispose()
  fullName: System.Drawing.BufferedGraphicsContext.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Libera todos os recursos usados pelo <xref href=&quot;System.Drawing.BufferedGraphicsContext&quot;> </xref>."
  remarks: "Chamar Dispose quando terminar de usar o <xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext> O método Dispose deixa a <xref:System.Drawing.BufferedGraphicsContext>em um estado inutilizável.</xref:System.Drawing.BufferedGraphicsContext> Depois de chamar Dispose, você deve liberar todas as referências para o <xref:System.Drawing.BufferedGraphicsContext>para o coletor de lixo possa recuperar a memória que o <xref:System.Drawing.BufferedGraphicsContext>estava ocupando.</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext> Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada Dispose antes de liberar sua última referência a <xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext> Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chama o <xref:System.Object.Finalize%2A>método de <xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Object.Finalize%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Finalize
  id: Finalize
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: BufferedGraphicsContext.Finalize()
  fullName: System.Drawing.BufferedGraphicsContext.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Permite que um objeto tente liberar recursos e executar outras operações de limpeza antes que ela é recuperada pela coleta de lixo."
  syntax:
    content: ~BufferedGraphicsContext ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Invalidate
  id: Invalidate
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Invalidate()
  nameWithType: BufferedGraphicsContext.Invalidate()
  fullName: System.Drawing.BufferedGraphicsContext.Invalidate()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Descarta o buffer de gráficos atual, se um buffer foi alocado e ainda não foi descartado."
  remarks: "Se o buffer de gráficos está em uso, ele será marcado para descarte assim que é gratuito; Caso contrário, ele será descartado imediatamente."
  syntax:
    content: public void Invalidate ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  id: MaximumBuffer
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
  fullName: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define o tamanho máximo do buffer a ser usado."
  remarks: "Esta propriedade permite que você obtenha ou defina as dimensões máximas por um buffer que deve ser mantido na memória. Você pode alocar um buffer de qualquer tamanho, porém nenhum buffer com dimensões maiores que o tamanho de MaximumBuffer será usada temporariamente e, em seguida, é descartada quando o <xref:System.Drawing.BufferedGraphics>objeto é liberado.</xref:System.Drawing.BufferedGraphics>"
  example:
  - "The following example demonstrates setting the maximum size for the buffer for a <xref:System.Drawing.BufferedGraphicsContext>. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#2](~/add/codesnippet/csharp/p-system.drawing.buffere_0_1.cs)]\n [!code-cpp[BufferingExamples#2](~/add/codesnippet/cpp/p-system.drawing.buffere_0_1.cpp)]\n [!code-vb[BufferingExamples#2](~/add/codesnippet/visualbasic/p-system.drawing.buffere_0_1.vb)]"
  syntax:
    content: public System.Drawing.Size MaximumBuffer { get; set; }
    return:
      type: System.Drawing.Size
      description: "Um <xref href=&quot;System.Drawing.Size&quot;> </xref> que indica o tamanho máximo das dimensões de buffer."
  overload: System.Drawing.BufferedGraphicsContext.MaximumBuffer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A altura ou largura do tamanho é menor ou igual a zero."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.BufferedGraphicsContext.#ctor
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: BufferedGraphicsContext()
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()
  fullName: System.Drawing.BufferedGraphicsContext.BufferedGraphicsContext()
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate(Graphics,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(Graphics,Rectangle)
- uid: System.Drawing.BufferedGraphics
  parent: System.Drawing
  isExternal: false
  name: BufferedGraphics
  nameWithType: BufferedGraphics
  fullName: System.Drawing.BufferedGraphics
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate(IntPtr,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.BufferedGraphicsContext.Dispose
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Dispose()
  nameWithType: BufferedGraphicsContext.Dispose()
  fullName: System.Drawing.BufferedGraphicsContext.Dispose()
- uid: System.Drawing.BufferedGraphicsContext.Finalize
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Finalize()
  nameWithType: BufferedGraphicsContext.Finalize()
  fullName: System.Drawing.BufferedGraphicsContext.Finalize()
- uid: System.Drawing.BufferedGraphicsContext.Invalidate
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Invalidate()
  nameWithType: BufferedGraphicsContext.Invalidate()
  fullName: System.Drawing.BufferedGraphicsContext.Invalidate()
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
  fullName: System.Drawing.BufferedGraphicsContext.MaximumBuffer
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.BufferedGraphicsContext.#ctor*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: BufferedGraphicsContext
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext
- uid: System.Drawing.BufferedGraphicsContext.Allocate*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate
  nameWithType: BufferedGraphicsContext.Allocate
- uid: System.Drawing.BufferedGraphicsContext.Dispose*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Dispose
  nameWithType: BufferedGraphicsContext.Dispose
- uid: System.Drawing.BufferedGraphicsContext.Finalize*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Finalize
  nameWithType: BufferedGraphicsContext.Finalize
- uid: System.Drawing.BufferedGraphicsContext.Invalidate*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Invalidate
  nameWithType: BufferedGraphicsContext.Invalidate
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
