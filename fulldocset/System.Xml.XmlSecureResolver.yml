### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlSecureResolver
  id: XmlSecureResolver
  children:
  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)
  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)
  - System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)
  - System.Xml.XmlSecureResolver.Credentials
  - System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)
  langs:
  - csharp
  name: XmlSecureResolver
  nameWithType: XmlSecureResolver
  fullName: System.Xml.XmlSecureResolver
  type: Class
  summary: "Ajuda a proteger outra implementação da <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> encapsulando a <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objeto e restringir os recursos que subjacente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> tem acesso."
  remarks: "O <xref:System.Xml.XmlUrlResolver>classe é o resolvedor padrão para todas as classes de <xref:System.Xml>namespace.</xref:System.Xml> </xref:System.Xml.XmlUrlResolver> Ele é usado para carregar documentos XML e para resolver a recursos externos, como entidades, DTDs ou esquemas e as diretivas de inclusão.       Você pode substituir esse padrão, especificando o <xref:System.Xml.XmlResolver>objeto a ser usado.</xref:System.Xml.XmlResolver> Por exemplo, se você quiser restringir os recursos que subjacente <xref:System.Xml.XmlResolver>pode acessar, você pode usar um objeto XmlSecureResolver.</xref:System.Xml.XmlResolver>       XmlSecureResolver envolve uma implementação concreta de <xref:System.Xml.XmlResolver>e restringe os recursos que subjacente <xref:System.Xml.XmlResolver>tem acesso.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver> Por exemplo, XmlSecureResolver tem a capacidade para proibir o redirecionamento de domínio cruzado, que ocorre de uma referência de identificador de recurso uniforme (URI) inserido.       Quando você construir um objeto XmlSecureResolver, você pode fornecer um válido <xref:System.Xml.XmlResolver>implementação junto com uma URL, uma instância de um objeto de evidência ou um conjunto de permissões, que é usado pelo XmlSecureResolver para determinar a segurança.</xref:System.Xml.XmlResolver> Tanto um <xref:System.Security.PermissionSet?displayProperty=fullName>é gerado ou existente for usado e <xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName>é chamado para ajudar a proteger subjacente <xref:System.Xml.XmlResolver>.</xref:System.Xml.XmlResolver> </xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName> </xref:System.Security.PermissionSet?displayProperty=fullName>      > [!IMPORTANT] > XmlSecureResolver objetos podem conter informações confidenciais, como as credenciais do usuário. Você deve ter cuidado ao cache XmlSecureResolver objetos e não deve passar o objeto XmlSecureResolver para um componente não confiável.      > [!IMPORTANT] > Há diferenças na infraestrutura de segurança para o código em execução no .NET Framework common language runtime (CLR) e de código em execução no CLR que é integrado no Microsoft SQL Server 2005. Isso pode levar a casos em que o código desenvolvido para o .NET Framework CLR funciona de modo diferente quando usados no SQL Server integrado CLR. Uma dessas diferenças afeta a classe XmlSecureResolver quando você tiver evidências de que se baseia em uma URL (ou seja, quando você usa o <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29>método ou o <xref:System.Xml.XmlSecureResolver.%23ctor%2A>construtor).</xref:System.Xml.XmlSecureResolver.%23ctor%2A> </xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29> A política de resolução integrada ao mecanismo do SQL Server CLR não usa o <xref:System.Security.Policy.Url>ou <xref:System.Security.Policy.Zone>informações.</xref:System.Security.Policy.Zone> </xref:System.Security.Policy.Url> Em vez disso, ele concede permissões com base no GUID que o servidor adiciona quando os assemblies são carregados. Quando você usa o XmlSecureResolver no SQL Server integrado CLR, forneça as evidências necessárias diretamente por meio de <xref:System.Security.PermissionSet>.</xref:System.Security.PermissionSet> especificado      ## Para usar um resolvedor seguro 1.  Crie um XmlSecureResolver com o conjunto de permissões corretas.      2.  Criar um <xref:System.Xml.XmlReaderSettings>objeto que usa o objeto XmlSecureResolver.</xref:System.Xml.XmlReaderSettings>           [!code-vb[XmlSecureResolver_Samples #5a](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_1.vb)][!code-cs[XmlSecureResolver_Samples #5a](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_1.cs) ] 3.        Passar o <xref:System.Xml.XmlReaderSettings>do objeto para o <xref:System.Xml.XmlReader.Create%2A>método quando você estiver criando o <xref:System.Xml.XmlReader>objeto.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings>           [!code-vb[XmlSecureResolver_Samples&#5;b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_2.vb)][!code-cs[XmlSecureResolver_Samples&#5;b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_2.cs) ] # # para restringir o acesso por meio de uma URL, Use o <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29>construtor para criar um objeto de XmlSecureResolver que tem permissão para acessar seu site de intranet local apenas.</xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29>             [!code-vb[3 XmlSecureResolver_Samples](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_3.vb)][!code-cs[3 XmlSecureResolver_Samples](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_3.cs) ] # # para restringir o acesso por meio de uma permissão definida 1.    Criar um <xref:System.Net.WebPermission>objeto.</xref:System.Net.WebPermission>           [!code-vb[XmlSecureResolver_Samples #4a](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_4.vb)][!code-cs[XmlSecureResolver_Samples #4a](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_4.cs) ] 2.        Especifica as URLs que você deseja permitir o acesso ao.           [!code-vb[XmlSecureResolver_Samples #4b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_5.vb)][!code-cs[XmlSecureResolver_Samples #4b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_5.cs) ] 3.        Adicionar as permissões da web para o <xref:System.Security.PermissionSet>objeto.</xref:System.Security.PermissionSet>           [!code-vb[C XmlSecureResolver_Samples n º 4](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_6.vb)][!code-cs[XmlSecureResolver_Samples n º 4 c](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_6.cs) ] 4.        Use o <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29>construtor para criar um objeto XmlSecureResolver usando o conjunto de permissões.</xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29>           [!code-vb[D XmlSecureResolver_Samples n º&4;](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_7.vb)][!code-cs[XmlSecureResolver_Samples n º&4; d](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_7.cs) ] consulte o <xref:System.Xml.XmlSecureResolver.%23ctor%2A>página de referência para obter outro exemplo.</xref:System.Xml.XmlSecureResolver.%23ctor%2A>            ## Para restringir o acesso por meio de evidência pode restringir o acesso, usando o <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>construtor e especificando <xref:System.Security.Policy.Evidence>.</xref:System.Security.Policy.Evidence> </xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> O que <xref:System.Security.Policy.Evidence>é usado para criar o <xref:System.Security.PermissionSet>que é aplicada a subjacente <xref:System.Xml.XmlResolver>.</xref:System.Xml.XmlResolver> </xref:System.Security.PermissionSet> </xref:System.Security.Policy.Evidence> As chamadas XmlSecureResolver <xref:System.Security.PermissionSet.PermitOnly%2A>em criados <xref:System.Security.PermissionSet>antes de abrir todos os recursos.</xref:System.Security.PermissionSet> </xref:System.Security.PermissionSet.PermitOnly%2A>       Aqui estão alguns cenários comuns e o tipo de evidência para fornecer para cada um: - se você estiver trabalhando em um ambiente totalmente confiável, use seu conjunto para criar a evidência: [!code-vb [XmlSecureResolver_Samples&#1;](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_8.vb)][!code-cs[XmlSecureResolver_Samples&#1;](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_8.cs) ] -se você estiver trabalhando em um ambiente de confiança parcial, você tiver um código ou dados provenientes de uma fonte externa e você sabe a origem da origem externa e ter um URI verificável , use o URI para criar a evidência: [!code-vb [XmlSecureResolver_Samples n º&2;](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_9.vb)][!code-cs[2 XmlSecureResolver_Samples](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_9.cs) ] - se você estiver trabalhando em um ambiente de confiança parcial e você tiver código ou dados provenientes de uma fonte externa, mas você não sabe a origem da fonte externa, ou: definir o `evidence` parâmetro para `null`.             Isso não permite acesso aos recursos.           - ou - se seu aplicativo requer acesso aos recursos, solicitação de evidência do chamador.      ## Para usar o resolvedor seguro para carregar uma folha de estilos XSLT 1.  Crie um XmlSecureResolver com o conjunto de permissões corretas.      2.  Passar XmlSecureResolver para o <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>método.</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>           [!code-vb[XmlSecureResolver_Samples&6;](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_10.vb)][!code-cs[XmlSecureResolver_Samples&6;      ](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_10.cs)]"
  syntax:
    content: 'public class XmlSecureResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers:
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)
  id: '#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)'
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: XmlSecureResolver(XmlResolver,PermissionSet)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> classe com o <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> e <xref href=&quot;System.Security.PermissionSet&quot;> </xref> especificado."
  remarks: ''
  example:
  - "The following example constructs an <xref:System.Xml.XmlSecureResolver> object by using a customized permission set.  \n  \n [!code-cs[XmlSecureResolver.cctor#1](~/add/codesnippet/csharp/e6fb0edb-66a8-45c7-82d0-_1.cs)]\n [!code-cpp[XmlSecureResolver.cctor#1](~/add/codesnippet/cpp/e6fb0edb-66a8-45c7-82d0-_1.cpp)]\n [!code-vb[XmlSecureResolver.cctor#1](~/add/codesnippet/visualbasic/e6fb0edb-66a8-45c7-82d0-_1.vb)]"
  syntax:
    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.PermissionSet permissionSet);
    parameters:
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O resolvedor XML que é encapsulado pelo <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref>."
    - id: permissionSet
      type: System.Security.PermissionSet
      description: "O conjunto de permissões para aplicar a subjacente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. O <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> chama o &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; método na permissão definida antes de chamar o <xref:System.Xml.XmlSecureResolver.GetEntity*>método no resolvedor XML subjacente.</xref:System.Xml.XmlSecureResolver.GetEntity*>"
  overload: System.Xml.XmlSecureResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: '#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)'
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: XmlSecureResolver(XmlResolver,Evidence)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> classe com o <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> e <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> especificado."
  remarks: "Aqui estão alguns cenários possíveis e o tipo de evidência para fornecer para cada cenário: - se você estiver trabalhando em um ambiente totalmente confiável, use seu conjunto para criar a evidência: [!code-vb [XmlSecureResolver_Samples&#1;](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_1.vb)][!code-cs[XmlSecureResolver_Samples&#1;](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_1.cs) ] -se você estiver trabalhando em um ambiente de confiança parcial, você tiver um código ou dados provenientes de uma fonte externa e você sabe a origem da origem externa e ter um URI verificável , use o URI para criar a evidência: [!code-vb [XmlSecureResolver_Samples n º&2;](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_2.vb)][!code-cs[2 XmlSecureResolver_Samples](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_2.cs) ] - se você estiver trabalhando em um ambiente de confiança parcial e você tiver código ou dados provenientes de uma fonte externa, mas você não sabe a origem da fonte externa, ou: definir o `evidence` parâmetro para `null`.             Isso não permite acesso aos recursos.           - ou - se seu aplicativo requer acesso aos recursos, solicitação de evidência do chamador."
  syntax:
    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O resolvedor XML que é encapsulado pelo <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref>."
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "A evidência usada para criar o <xref href=&quot;System.Security.PermissionSet&quot;> </xref> que serão aplicadas a subjacente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. O <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> chama o &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; método criados <xref href=&quot;System.Security.PermissionSet&quot;> </xref> antes de chamar <xref:System.Xml.XmlSecureResolver.GetEntity*>em subjacente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>.</xref:System.Xml.XmlSecureResolver.GetEntity*>"
  overload: System.Xml.XmlSecureResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)
  id: '#ctor(System.Xml.XmlResolver,System.String)'
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: XmlSecureResolver(XmlResolver,String)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> classe com o <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> e a URL fornecida."
  remarks: >-
    > [!IMPORTANT]

    >  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005. This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR. One of these differences affects the <xref:System.Xml.XmlSecureResolver> class when you have evidence that is based on a URL (that is, when you use the <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> method or the XmlSecureResolver constructor). The policy resolution mechanism of the SQL Server integrated CLR does not use the <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Zone> information. Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded. When you use the <xref:System.Xml.XmlSecureResolver> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <xref:System.Security.PermissionSet>.
  example:
  - "This example uses the XmlSecureResolver constructor to create an <xref:System.Xml.XmlSecureResolver> object that is allowed to access your local intranet site only.  \n  \n [!code-vb[XmlSecureResolver_Samples#3](~/add/codesnippet/visualbasic/m-system.xml.xmlsecurere_1.vb)]\n [!code-cs[XmlSecureResolver_Samples#3](~/add/codesnippet/csharp/m-system.xml.xmlsecurere_1.cs)]"
  syntax:
    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, string securityUrl);
    parameters:
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O resolvedor XML que é encapsulado pelo <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref>."
    - id: securityUrl
      type: System.String
      description: "A URL usada para criar o <xref href=&quot;System.Security.PermissionSet&quot;> </xref> que serão aplicadas a subjacente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. O <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> chamadas &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; em criados <xref href=&quot;System.Security.PermissionSet&quot;> </xref> antes de chamar <xref:System.Xml.XmlSecureResolver.GetEntity*>em subjacente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>.</xref:System.Xml.XmlSecureResolver.GetEntity*>"
  overload: System.Xml.XmlSecureResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)
  id: CreateEvidenceForUrl(System.String)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: CreateEvidenceForUrl(String)
  nameWithType: XmlSecureResolver.CreateEvidenceForUrl(String)
  fullName: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Cria a evidência usando a URL fornecida."
  remarks: >-
    > [!IMPORTANT]

    >  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005. This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR. One of these differences affects the <xref:System.Xml.XmlSecureResolver> class when you have evidence that is based on a URL (that is, when you use the CreateEvidenceForUrl method or the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> constructor). The policy resolution mechanism of the SQL Server integrated CLR doesn't use the <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Zone> information. Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded. When you use the <xref:System.Xml.XmlSecureResolver> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <xref:System.Security.PermissionSet>.
  syntax:
    content: public static System.Security.Policy.Evidence CreateEvidenceForUrl (string securityUrl);
    parameters:
    - id: securityUrl
      type: System.String
      description: "A URL usada para criar a evidência."
    return:
      type: System.Security.Policy.Evidence
      description: "A evidência gerada da URL fornecida, conforme definido pela política padrão."
  overload: System.Xml.XmlSecureResolver.CreateEvidenceForUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlSecureResolver.Credentials
  fullName: System.Xml.XmlSecureResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Define as credenciais usadas para autenticar solicitações da web."
  remarks: ''
  example:
  - "The following example uses an <xref:System.Xml.XmlSecureResolver> with default credentials to resolve and open network resources needed by the <xref:System.Xml.XmlTextReader>.  \n  \n [!code-cpp[XmlSecureResolver.Credentials#1](~/add/codesnippet/cpp/p-system.xml.xmlsecurere_1.cpp)]\n [!code-vb[XmlSecureResolver.Credentials#1](~/add/codesnippet/visualbasic/p-system.xml.xmlsecurere_1.vb)]\n [!code-cs[XmlSecureResolver.Credentials#1](~/add/codesnippet/csharp/p-system.xml.xmlsecurere_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "As credenciais a ser usado para autenticar solicitações da web. O <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> define as credenciais fornecidas no subjacente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Se essa propriedade não é definida, o valor padrão de <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; ou seja, o <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> tem sem credenciais de usuário."
  overload: System.Xml.XmlSecureResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Mapeia um URI para um objeto que contém o recurso real. Esse método define temporariamente o <xref href=&quot;System.Security.PermissionSet&quot;> </xref> criados no construtor chamando &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; antes de chamar <xref uid=&quot;langword_csharp_GetEntity&quot; name=&quot;GetEntity&quot; href=&quot;&quot;> </xref> em subjacente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> para abrir o recurso."
  remarks: >-
    > [!IMPORTANT]

    >  Your application can mitigate memory denial of service threats to the GetEntity method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the GetEntity method.
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "O URI que é retornado de <xref:System.Xml.XmlSecureResolver.ResolveUri*>.</xref:System.Xml.XmlSecureResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Atualmente não usado."
    - id: ofObjectToReturn
      type: System.Type
      description: "O tipo de objeto a ser retornado. A versão atual somente retorna <xref:System.IO.Stream>objetos.</xref:System.IO.Stream>"
    return:
      type: System.Object
      description: "O fluxo retornado ao chamar <xref uid=&quot;langword_csharp_GetEntity&quot; name=&quot;GetEntity&quot; href=&quot;&quot;> </xref> em subjacente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Se um tipo diferente de <xref:System.IO.Stream>for especificado, o método retornará <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IO.Stream>"
  overload: System.Xml.XmlSecureResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>não é nem <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> nem um <xref:System.IO.Stream> tipo."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "O URI especificado não é um URI absoluto."
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Há um erro de tempo de execução (por exemplo, uma conexão de servidor interrompida)."
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Assincronamente mapeia um URI para um objeto que contém o recurso real."
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "O URI retornado de <xref:System.Xml.XmlSecureResolver.ResolveUri*>.</xref:System.Xml.XmlSecureResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Atualmente não usado."
    - id: ofObjectToReturn
      type: System.Type
      description: "O tipo de objeto a ser retornado. A versão atual somente retorna <xref:System.IO.Stream>objetos.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "O fluxo retornado ao chamar <xref uid=&quot;langword_csharp_GetEntity&quot; name=&quot;GetEntity&quot; href=&quot;&quot;> </xref> em subjacente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Se um tipo diferente de <xref:System.IO.Stream>for especificado, o método retornará <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IO.Stream>"
  overload: System.Xml.XmlSecureResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlSecureResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlSecureResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Resolve o URI absoluto dos URIs de base e relativo chamando <xref uid=&quot;langword_csharp_ResolveUri&quot; name=&quot;ResolveUri&quot; href=&quot;&quot;> </xref> em subjacente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>."
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "O URI de base usado para resolver o URI relativo."
    - id: relativeUri
      type: System.String
      description: "O URI para resolver. O URI pode ser absoluta ou relativa. Se absoluto, esse valor substitui com eficiência o `baseUri` valor. Se relativo, ele combina com o `baseUri` para tornar um URI absoluto."
    return:
      type: System.Uri
      description: "O URI absoluto ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o URI relativo não pode ser resolvido (retornado ao chamar <xref uid=&quot;langword_csharp_ResolveUri&quot; name=&quot;ResolveUri&quot; href=&quot;&quot;> </xref> em subjacente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>)."
  overload: System.Xml.XmlSecureResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relativeUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Xml.XmlResolver
  isExternal: false
  name: System.Xml.XmlResolver
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.NullReferenceException
  isExternal: true
  name: System.NullReferenceException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver(XmlResolver,PermissionSet)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver(XmlResolver,Evidence)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver(XmlResolver,String)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: CreateEvidenceForUrl(String)
  nameWithType: XmlSecureResolver.CreateEvidenceForUrl(String)
  fullName: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(String)
- uid: System.Xml.XmlSecureResolver.Credentials
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlSecureResolver.Credentials
  fullName: System.Xml.XmlSecureResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlSecureResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlSecureResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlSecureResolver.#ctor*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver
  nameWithType: XmlSecureResolver.XmlSecureResolver
- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: CreateEvidenceForUrl
  nameWithType: XmlSecureResolver.CreateEvidenceForUrl
- uid: System.Xml.XmlSecureResolver.Credentials*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlSecureResolver.Credentials
- uid: System.Xml.XmlSecureResolver.GetEntity*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlSecureResolver.GetEntity
- uid: System.Xml.XmlSecureResolver.GetEntityAsync*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlSecureResolver.GetEntityAsync
- uid: System.Xml.XmlSecureResolver.ResolveUri*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlSecureResolver.ResolveUri
