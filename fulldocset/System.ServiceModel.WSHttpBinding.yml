### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WSHttpBinding
  id: WSHttpBinding
  children:
  - System.ServiceModel.WSHttpBinding.#ctor
  - System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)
  - System.ServiceModel.WSHttpBinding.#ctor(System.String)
  - System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)
  - System.ServiceModel.WSHttpBinding.AllowCookies
  - System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.WSHttpBinding.CreateBindingElements
  - System.ServiceModel.WSHttpBinding.CreateMessageSecurity
  - System.ServiceModel.WSHttpBinding.GetTransport
  - System.ServiceModel.WSHttpBinding.Security
  - System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity
  langs:
  - csharp
  name: WSHttpBinding
  nameWithType: WSHttpBinding
  fullName: System.ServiceModel.WSHttpBinding
  type: Class
  summary: "Representa uma associação interoperável que oferece suporte a transações distribuídas e sessões, seguras e confiáveis."
  remarks: "O WSHttpBinding é semelhante do <xref:System.ServiceModel.BasicHttpBinding>, mas fornece mais recursos de serviço da Web.</xref:System.ServiceModel.BasicHttpBinding> Ele usa o transporte HTTP e fornece segurança de mensagem, como o <xref:System.ServiceModel.BasicHttpBinding>, mas ele também fornece transações, sistema de mensagens confiável e WS-Addressing, habilitado por padrão ou disponível por meio de uma configuração de controle único.</xref:System.ServiceModel.BasicHttpBinding>"
  example:
  - "The following sample code shows how to use the WSHttpBinding class.  \n  \n [!code-cs[WSHttpBinding#0](~/add/codesnippet/csharp/t-system.servicemodel.ws_4_1.cs)]\n [!code-vb[WSHttpBinding#0](~/add/codesnippet/visualbasic/t-system.servicemodel.ws_4_1.vb)]"
  syntax:
    content: 'public class WSHttpBinding : System.ServiceModel.WSHttpBindingBase'
  inheritance:
  - System.ServiceModel.Channels.Binding
  - System.ServiceModel.WSHttpBindingBase
  implements: []
  inheritedMembers:
  - System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal
  - System.ServiceModel.WSHttpBindingBase.EnvelopeVersion
  - System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode
  - System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize
  - System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize
  - System.ServiceModel.WSHttpBindingBase.MessageEncoding
  - System.ServiceModel.WSHttpBindingBase.ProxyAddress
  - System.ServiceModel.WSHttpBindingBase.ReaderQuotas
  - System.ServiceModel.WSHttpBindingBase.ReliableSession
  - System.ServiceModel.WSHttpBindingBase.Scheme
  - System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas
  - System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession
  - System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding
  - System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  - System.ServiceModel.WSHttpBindingBase.TextEncoding
  - System.ServiceModel.WSHttpBindingBase.TransactionFlow
  - System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: WSHttpBinding()
  nameWithType: WSHttpBinding.WSHttpBinding()
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.WSHttpBinding&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following sample code shows how to initialize a new instance of the <xref:System.ServiceModel.WSHttpBinding> class.  \n  \n [!code-cs[WSHttpBinding#1](~/add/codesnippet/csharp/m-system.servicemodel.ws_5_1.cs)]\n [!code-vb[WSHttpBinding#1](~/add/codesnippet/visualbasic/m-system.servicemodel.ws_5_1.vb)]"
  syntax:
    content: public WSHttpBinding ();
    parameters: []
  overload: System.ServiceModel.WSHttpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)
  id: '#ctor(System.ServiceModel.SecurityMode)'
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: WSHttpBinding(SecurityMode)
  nameWithType: WSHttpBinding.WSHttpBinding(SecurityMode)
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding(SecurityMode)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.WSHttpBinding&quot;> </xref> classe com um tipo de segurança usado pela associação especificado."
  remarks: ''
  example:
  - "The following example shows how to initialize a new instance of the <xref:System.ServiceModel.WSHttpBinding> class with a `securityMode` parameter.  \n  \n [!code-cs[WSHttpBinding#7](~/add/codesnippet/csharp/m-system.servicemodel.ws_3_1.cs)]\n [!code-vb[WSHttpBinding#7](~/add/codesnippet/visualbasic/m-system.servicemodel.ws_3_1.vb)]"
  syntax:
    content: public WSHttpBinding (System.ServiceModel.SecurityMode securityMode);
    parameters:
    - id: securityMode
      type: System.ServiceModel.SecurityMode
      description: "O valor de <xref:System.ServiceModel.SecurityMode>que especifica o tipo de segurança que é usada com a mensagem SOAP e para o cliente.</xref:System.ServiceModel.SecurityMode>"
  overload: System.ServiceModel.WSHttpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: WSHttpBinding(String)
  nameWithType: WSHttpBinding.WSHttpBinding(String)
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.WSHttpBinding&quot;> </xref> classe com uma associação especificada por seu nome de configuração."
  remarks: ''
  example:
  - "The following example shows how to initialize a new instance of the <xref:System.ServiceModel.WSHttpBinding> class with a string argument.  \n  \n [!code-cs[WSHttpBinding#5](~/add/codesnippet/csharp/m-system.servicemodel.ws_6_1.cs)]\n [!code-vb[WSHttpBinding#5](~/add/codesnippet/visualbasic/m-system.servicemodel.ws_6_1.vb)]"
  syntax:
    content: public WSHttpBinding (string configName);
    parameters:
    - id: configName
      type: System.String
      description: "O nome da configuração de associação para o <xref href=&quot;System.ServiceModel.Configuration.WSHttpBindingElement&quot;> </xref>."
  overload: System.ServiceModel.WSHttpBinding.#ctor*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "O elemento de associação com o nome <code> configName </code> não foi encontrado."
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)
  id: '#ctor(System.ServiceModel.SecurityMode,System.Boolean)'
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: WSHttpBinding(SecurityMode,Boolean)
  nameWithType: WSHttpBinding.WSHttpBinding(SecurityMode,Boolean)
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding(SecurityMode,Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.WSHttpBinding&quot;> </xref> classe com um tipo específico de segurança usado pela associação e um valor que indica se uma sessão confiável está habilitada."
  remarks: ''
  example:
  - "The following example shows how to initialize a new instance of the <xref:System.ServiceModel.WSHttpBinding> class with a `securityMode` and `reliableSessionEnabled` parameter.  \n  \n [!code-cs[WSHttpBinding#6](~/add/codesnippet/csharp/07636ed4-d0dd-4ca2-9f3d-_1.cs)]\n [!code-vb[WSHttpBinding#6](~/add/codesnippet/visualbasic/07636ed4-d0dd-4ca2-9f3d-_1.vb)]"
  syntax:
    content: public WSHttpBinding (System.ServiceModel.SecurityMode securityMode, bool reliableSessionEnabled);
    parameters:
    - id: securityMode
      type: System.ServiceModel.SecurityMode
      description: "O valor de <xref:System.ServiceModel.SecurityMode>que especifica o tipo de segurança que é usada com a mensagem SOAP e para o cliente.</xref:System.ServiceModel.SecurityMode>"
    - id: reliableSessionEnabled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma sessão confiável está ativada. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.WSHttpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.AllowCookies
  id: AllowCookies
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: AllowCookies
  nameWithType: WSHttpBinding.AllowCookies
  fullName: System.ServiceModel.WSHttpBinding.AllowCookies
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que indica se o cliente WCF armazenará automaticamente e enviar novamente qualquer cookie enviado por um serviço web simples."
  remarks: "Definindo AllowCookies como `true` é útil quando um cliente está interagindo com um serviço web que usa cookies.  Se você estiver acessando vários serviços com o mesmo cookie, definir AllowCookies como `false` e você terá que adicionar manualmente o cabeçalho do cookie para cada mensagem de saída. O código a seguir mostra como fazer isso:```c#   MyWebServiceClient client = new MyWebServiceClient();              using (new OperationContextScope(client.InnerChannel))           {               client.DoSomething();                  // Extract the cookie embedded in the received web service response               // and stores it locally               HttpResponseMessageProperty response = (HttpResponseMessageProperty)               OperationContext.Current.IncomingMessageProperties[                   HttpResponseMessageProperty.Name];               sharedCookie = response.Headers[&quot;Set-Cookie&quot;];           }              MyOtherWebServiceClient otherClient = new MyOtherWebServiceClient();              using (new OperationContextScope(otherClient.InnerChannel))           {               // Embeds the extracted cookie in the next web service request               // Note that we manually have to create the request object since               // since it doesn&quot;t exist yet at this stage                HttpRequestMessageProperty request = new HttpRequestMessageProperty();               request.Headers[&quot;Cookie&quot;] = sharedCookie;               OperationContext.Current.OutgoingMessageProperties[                   HttpRequestMessageProperty.Name] = request;                  otherClient.DoSomethingElse();           }      ```"
  syntax:
    content: public bool AllowCookies { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se os cookies automático de processamento é obrigatória. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.WSHttpBinding.AllowCookies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: BuildChannelFactory(BindingParameterCollection)
  nameWithType: WSHttpBinding.BuildChannelFactory(BindingParameterCollection)
  fullName: System.ServiceModel.WSHttpBinding.BuildChannelFactory(BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "A ser adicionado."
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "A ser adicionado."
  overload: System.ServiceModel.WSHttpBinding.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.CreateBindingElements
  id: CreateBindingElements
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: CreateBindingElements()
  nameWithType: WSHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WSHttpBinding.CreateBindingElements()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retorna uma coleção ordenada de elementos contidos na associação atual de associação."
  remarks: "A ordem dos elementos de associação é importante. Ela reflete a ordem na qual os canais de transporte e de protocolo são construídos e empilhados."
  example:
  - "The following example shows how to obtain the <xref:System.ServiceModel.Channels.BindingElementCollection> that contains the ordered stack of binding elements described by <xref:System.ServiceModel.WSHttpBinding> binding.  \n  \n [!code-cs[WSHttpBinding#9](~/add/codesnippet/csharp/m-system.servicemodel.ws_2_1.cs)]\n [!code-vb[WSHttpBinding#9](~/add/codesnippet/visualbasic/m-system.servicemodel.ws_2_1.vb)]"
  syntax:
    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: "O <xref:System.ServiceModel.Channels.BindingElementCollection>que contém a pilha ordenada de elementos descritos por de associação a <xref href=&quot;System.ServiceModel.WSHttpBinding&quot;> </xref> associação.</xref:System.ServiceModel.Channels.BindingElementCollection>"
  overload: System.ServiceModel.WSHttpBinding.CreateBindingElements*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O conjunto de modo de segurança de transporte não pode fornecer a sessão confiável foi habilitada."
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.CreateMessageSecurity
  id: CreateMessageSecurity
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: CreateMessageSecurity()
  nameWithType: WSHttpBinding.CreateMessageSecurity()
  fullName: System.ServiceModel.WSHttpBinding.CreateMessageSecurity()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retorna o elemento de associação de segurança da associação atual."
  syntax:
    content: protected override System.ServiceModel.Channels.SecurityBindingElement CreateMessageSecurity ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.SecurityBindingElement
      description: "Um <xref:System.ServiceModel.Channels.SecurityBindingElement>da associação atual.</xref:System.ServiceModel.Channels.SecurityBindingElement>"
  overload: System.ServiceModel.WSHttpBinding.CreateMessageSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.GetTransport
  id: GetTransport
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: GetTransport()
  nameWithType: WSHttpBinding.GetTransport()
  fullName: System.ServiceModel.WSHttpBinding.GetTransport()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retorna o elemento de associação de transporte de associação atual."
  syntax:
    content: protected override System.ServiceModel.Channels.TransportBindingElement GetTransport ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.TransportBindingElement
      description: "O <xref:System.ServiceModel.Channels.TransportBindingElement>da associação atual.</xref:System.ServiceModel.Channels.TransportBindingElement>"
  overload: System.ServiceModel.WSHttpBinding.GetTransport*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.Security
  id: Security
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: Security
  nameWithType: WSHttpBinding.Security
  fullName: System.ServiceModel.WSHttpBinding.Security
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém as configurações de segurança usadas com essa associação."
  remarks: "Para usar algo que não seja o tipo de segurança padrão, use o <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29>construtor.</xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29>"
  example:
  - "The following example shows how to obtain the value of the Security.  \n  \n [!code-cs[WSHttpBinding#8](~/add/codesnippet/csharp/p-system.servicemodel.ws_33_1.cs)]\n [!code-vb[WSHttpBinding#8](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_33_1.vb)]"
  syntax:
    content: public System.ServiceModel.WSHttpSecurity Security { get; set; }
    return:
      type: System.ServiceModel.WSHttpSecurity
      description: "O <xref href=&quot;System.ServiceModel.WSHttpSecurity&quot;> </xref> que é usado com essa associação. O valor padrão <> </> *> é de propriedade <> </> *>."
  overload: System.ServiceModel.WSHttpBinding.Security*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity
  id: ShouldSerializeSecurity
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: ShouldSerializeSecurity()
  nameWithType: WSHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retorna um valor que indica se o <xref:System.ServiceModel.WSHttpBinding.Security*>propriedade foi alterado do valor padrão e deve ser serializada.</xref:System.ServiceModel.WSHttpBinding.Security*>"
  syntax:
    content: public bool ShouldSerializeSecurity ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ServiceModel.WSHttpBinding.Security*>o valor da propriedade deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.WSHttpBinding.Security*>"
  overload: System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: System.ServiceModel.WSHttpBindingBase
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.WSHttpBinding.#ctor
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: WSHttpBinding()
  nameWithType: WSHttpBinding.WSHttpBinding()
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding()
- uid: System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: WSHttpBinding(SecurityMode)
  nameWithType: WSHttpBinding.WSHttpBinding(SecurityMode)
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding(SecurityMode)
- uid: System.ServiceModel.SecurityMode
  parent: System.ServiceModel
  isExternal: true
  name: SecurityMode
  nameWithType: SecurityMode
  fullName: System.ServiceModel.SecurityMode
- uid: System.ServiceModel.WSHttpBinding.#ctor(System.String)
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: WSHttpBinding(String)
  nameWithType: WSHttpBinding.WSHttpBinding(String)
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: WSHttpBinding(SecurityMode,Boolean)
  nameWithType: WSHttpBinding.WSHttpBinding(SecurityMode,Boolean)
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding(SecurityMode,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.WSHttpBinding.AllowCookies
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: AllowCookies
  nameWithType: WSHttpBinding.AllowCookies
  fullName: System.ServiceModel.WSHttpBinding.AllowCookies
- uid: System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: BuildChannelFactory(BindingParameterCollection)
  nameWithType: WSHttpBinding.BuildChannelFactory(BindingParameterCollection)
  fullName: System.ServiceModel.WSHttpBinding.BuildChannelFactory(BindingParameterCollection)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.WSHttpBinding.CreateBindingElements
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: CreateBindingElements()
  nameWithType: WSHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WSHttpBinding.CreateBindingElements()
- uid: System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: System.ServiceModel.WSHttpBinding.CreateMessageSecurity
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: CreateMessageSecurity()
  nameWithType: WSHttpBinding.CreateMessageSecurity()
  fullName: System.ServiceModel.WSHttpBinding.CreateMessageSecurity()
- uid: System.ServiceModel.Channels.SecurityBindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: SecurityBindingElement
  nameWithType: SecurityBindingElement
  fullName: System.ServiceModel.Channels.SecurityBindingElement
- uid: System.ServiceModel.WSHttpBinding.GetTransport
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: GetTransport()
  nameWithType: WSHttpBinding.GetTransport()
  fullName: System.ServiceModel.WSHttpBinding.GetTransport()
- uid: System.ServiceModel.Channels.TransportBindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: TransportBindingElement
  nameWithType: TransportBindingElement
  fullName: System.ServiceModel.Channels.TransportBindingElement
- uid: System.ServiceModel.WSHttpBinding.Security
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: Security
  nameWithType: WSHttpBinding.Security
  fullName: System.ServiceModel.WSHttpBinding.Security
- uid: System.ServiceModel.WSHttpSecurity
  parent: System.ServiceModel
  isExternal: false
  name: WSHttpSecurity
  nameWithType: WSHttpSecurity
  fullName: System.ServiceModel.WSHttpSecurity
- uid: System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity()
  nameWithType: WSHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity()
- uid: System.ServiceModel.WSHttpBinding.#ctor*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: WSHttpBinding
  nameWithType: WSHttpBinding.WSHttpBinding
- uid: System.ServiceModel.WSHttpBinding.AllowCookies*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: AllowCookies
  nameWithType: WSHttpBinding.AllowCookies
- uid: System.ServiceModel.WSHttpBinding.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: WSHttpBinding.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.WSHttpBinding.CreateBindingElements*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: CreateBindingElements
  nameWithType: WSHttpBinding.CreateBindingElements
- uid: System.ServiceModel.WSHttpBinding.CreateMessageSecurity*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: CreateMessageSecurity
  nameWithType: WSHttpBinding.CreateMessageSecurity
- uid: System.ServiceModel.WSHttpBinding.GetTransport*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: GetTransport
  nameWithType: WSHttpBinding.GetTransport
- uid: System.ServiceModel.WSHttpBinding.Security*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: Security
  nameWithType: WSHttpBinding.Security
- uid: System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity
  nameWithType: WSHttpBinding.ShouldSerializeSecurity
