### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeAttributeArgument
  id: CodeAttributeArgument
  children:
  - System.CodeDom.CodeAttributeArgument.#ctor
  - System.CodeDom.CodeAttributeArgument.#ctor(System.CodeDom.CodeExpression)
  - System.CodeDom.CodeAttributeArgument.#ctor(System.String,System.CodeDom.CodeExpression)
  - System.CodeDom.CodeAttributeArgument.Name
  - System.CodeDom.CodeAttributeArgument.Value
  langs:
  - csharp
  name: CodeAttributeArgument
  nameWithType: CodeAttributeArgument
  fullName: System.CodeDom.CodeAttributeArgument
  type: Class
  summary: "Representa um argumento usado em uma declaração de atributo de metadados."
  remarks: "CodeAttributeArgument pode ser usado para representar o valor para um único argumento de um construtor de atributos, ou um valor com o qual inicializar uma propriedade do atributo.       O <xref:System.CodeDom.CodeAttributeArgument.Value%2A>propriedade indica o valor do argumento.</xref:System.CodeDom.CodeAttributeArgument.Value%2A> O <xref:System.CodeDom.CodeAttributeArgument.Name%2A>propriedade, quando usado, indica o nome de uma propriedade do atributo ao qual atribuir o valor.</xref:System.CodeDom.CodeAttributeArgument.Name%2A>       Declarações de atributo com frequência são inicializadas com um número de argumentos que são passados para o construtor do atributo em tempo de execução. Para fornecer argumentos para o construtor para um atributo, adicionar um CodeAttributeArgument para cada argumento para a <xref:System.CodeDom.CodeAttributeDeclaration.Arguments%2A>coleção de <xref:System.CodeDom.CodeAttributeDeclaration>.</xref:System.CodeDom.CodeAttributeDeclaration> </xref:System.CodeDom.CodeAttributeDeclaration.Arguments%2A> Somente o <xref:System.CodeDom.CodeAttributeArgument.Value%2A>necessário inicializar a propriedade de cada CodeAttributeArgument.</xref:System.CodeDom.CodeAttributeArgument.Value%2A> A ordem dos argumentos dentro da coleção deve corresponder à ordem de argumentos na assinatura do método do construtor para o atributo.       Você também pode definir propriedades do atributo que não estão disponíveis por meio do construtor, fornecendo um CodeAttributeArgument que indica o nome da propriedade a ser definida, juntamente com o valor a ser definido."
  example:
  - "The following code creates a class, and adds code attributes to declare that the class is serializable and obsolete.  \n  \n [!code-cpp[System.CodeDom.CodeAttributeArgument#1](~/add/codesnippet/cpp/t-system.codedom.codeatt_4_1.cpp)]\n [!code-vb[System.CodeDom.CodeAttributeArgument#1](~/add/codesnippet/visualbasic/t-system.codedom.codeatt_4_1.vb)]\n [!code-cs[System.CodeDom.CodeAttributeArgument#1](~/add/codesnippet/csharp/t-system.codedom.codeatt_4_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeAttributeArgument
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.CodeAttributeArgument.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeAttributeArgument
  langs:
  - csharp
  name: CodeAttributeArgument()
  nameWithType: CodeAttributeArgument.CodeAttributeArgument()
  fullName: System.CodeDom.CodeAttributeArgument.CodeAttributeArgument()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeAttributeArgument&quot;> </xref> classe."
  syntax:
    content: public CodeAttributeArgument ();
    parameters: []
  overload: System.CodeDom.CodeAttributeArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeAttributeArgument.#ctor(System.CodeDom.CodeExpression)
  id: '#ctor(System.CodeDom.CodeExpression)'
  parent: System.CodeDom.CodeAttributeArgument
  langs:
  - csharp
  name: CodeAttributeArgument(CodeExpression)
  nameWithType: CodeAttributeArgument.CodeAttributeArgument(CodeExpression)
  fullName: System.CodeDom.CodeAttributeArgument.CodeAttributeArgument(CodeExpression)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeAttributeArgument&quot;> </xref> classe usando o valor especificado."
  syntax:
    content: public CodeAttributeArgument (System.CodeDom.CodeExpression value);
    parameters:
    - id: value
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que representa o valor do argumento."
  overload: System.CodeDom.CodeAttributeArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeAttributeArgument.#ctor(System.String,System.CodeDom.CodeExpression)
  id: '#ctor(System.String,System.CodeDom.CodeExpression)'
  parent: System.CodeDom.CodeAttributeArgument
  langs:
  - csharp
  name: CodeAttributeArgument(String,CodeExpression)
  nameWithType: CodeAttributeArgument.CodeAttributeArgument(String,CodeExpression)
  fullName: System.CodeDom.CodeAttributeArgument.CodeAttributeArgument(String,CodeExpression)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeAttributeArgument&quot;> </xref> usando o nome especificado e o valor de classe."
  syntax:
    content: public CodeAttributeArgument (string name, System.CodeDom.CodeExpression value);
    parameters:
    - id: name
      type: System.String
      description: "O nome da propriedade de atributo, a que o argumento aplica-se."
    - id: value
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que representa o valor do argumento."
  overload: System.CodeDom.CodeAttributeArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeAttributeArgument.Name
  id: Name
  parent: System.CodeDom.CodeAttributeArgument
  langs:
  - csharp
  name: Name
  nameWithType: CodeAttributeArgument.Name
  fullName: System.CodeDom.CodeAttributeArgument.Name
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define o nome do atributo."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome da propriedade de atributo para que é o argumento."
  overload: System.CodeDom.CodeAttributeArgument.Name*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeAttributeArgument.Value
  id: Value
  parent: System.CodeDom.CodeAttributeArgument
  langs:
  - csharp
  name: Value
  nameWithType: CodeAttributeArgument.Value
  fullName: System.CodeDom.CodeAttributeArgument.Value
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define o valor para o argumento de atributo."
  syntax:
    content: public System.CodeDom.CodeExpression Value { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que indica o valor para o argumento de atributo."
  overload: System.CodeDom.CodeAttributeArgument.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.CodeDom.CodeAttributeArgument.#ctor
  parent: System.CodeDom.CodeAttributeArgument
  isExternal: false
  name: CodeAttributeArgument()
  nameWithType: CodeAttributeArgument.CodeAttributeArgument()
  fullName: System.CodeDom.CodeAttributeArgument.CodeAttributeArgument()
- uid: System.CodeDom.CodeAttributeArgument.#ctor(System.CodeDom.CodeExpression)
  parent: System.CodeDom.CodeAttributeArgument
  isExternal: false
  name: CodeAttributeArgument(CodeExpression)
  nameWithType: CodeAttributeArgument.CodeAttributeArgument(CodeExpression)
  fullName: System.CodeDom.CodeAttributeArgument.CodeAttributeArgument(CodeExpression)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeAttributeArgument.#ctor(System.String,System.CodeDom.CodeExpression)
  parent: System.CodeDom.CodeAttributeArgument
  isExternal: false
  name: CodeAttributeArgument(String,CodeExpression)
  nameWithType: CodeAttributeArgument.CodeAttributeArgument(String,CodeExpression)
  fullName: System.CodeDom.CodeAttributeArgument.CodeAttributeArgument(String,CodeExpression)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeAttributeArgument.Name
  parent: System.CodeDom.CodeAttributeArgument
  isExternal: false
  name: Name
  nameWithType: CodeAttributeArgument.Name
  fullName: System.CodeDom.CodeAttributeArgument.Name
- uid: System.CodeDom.CodeAttributeArgument.Value
  parent: System.CodeDom.CodeAttributeArgument
  isExternal: false
  name: Value
  nameWithType: CodeAttributeArgument.Value
  fullName: System.CodeDom.CodeAttributeArgument.Value
- uid: System.CodeDom.CodeAttributeArgument.#ctor*
  parent: System.CodeDom.CodeAttributeArgument
  isExternal: false
  name: CodeAttributeArgument
  nameWithType: CodeAttributeArgument.CodeAttributeArgument
- uid: System.CodeDom.CodeAttributeArgument.Name*
  parent: System.CodeDom.CodeAttributeArgument
  isExternal: false
  name: Name
  nameWithType: CodeAttributeArgument.Name
- uid: System.CodeDom.CodeAttributeArgument.Value*
  parent: System.CodeDom.CodeAttributeArgument
  isExternal: false
  name: Value
  nameWithType: CodeAttributeArgument.Value
