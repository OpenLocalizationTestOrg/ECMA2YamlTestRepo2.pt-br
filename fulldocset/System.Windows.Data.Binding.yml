### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.Binding
  id: Binding
  children:
  - System.Windows.Data.Binding.#ctor
  - System.Windows.Data.Binding.#ctor(System.String)
  - System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.AsyncState
  - System.Windows.Data.Binding.BindsDirectlyToSource
  - System.Windows.Data.Binding.Converter
  - System.Windows.Data.Binding.ConverterCulture
  - System.Windows.Data.Binding.ConverterParameter
  - System.Windows.Data.Binding.DoNothing
  - System.Windows.Data.Binding.ElementName
  - System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)
  - System.Windows.Data.Binding.IndexerName
  - System.Windows.Data.Binding.IsAsync
  - System.Windows.Data.Binding.Mode
  - System.Windows.Data.Binding.NotifyOnSourceUpdated
  - System.Windows.Data.Binding.NotifyOnTargetUpdated
  - System.Windows.Data.Binding.NotifyOnValidationError
  - System.Windows.Data.Binding.Path
  - System.Windows.Data.Binding.RelativeSource
  - System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  - System.Windows.Data.Binding.ShouldSerializePath
  - System.Windows.Data.Binding.ShouldSerializeSource
  - System.Windows.Data.Binding.ShouldSerializeValidationRules
  - System.Windows.Data.Binding.Source
  - System.Windows.Data.Binding.SourceUpdatedEvent
  - System.Windows.Data.Binding.TargetUpdatedEvent
  - System.Windows.Data.Binding.UpdateSourceExceptionFilter
  - System.Windows.Data.Binding.UpdateSourceTrigger
  - System.Windows.Data.Binding.ValidatesOnDataErrors
  - System.Windows.Data.Binding.ValidatesOnExceptions
  - System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  - System.Windows.Data.Binding.ValidationRules
  - System.Windows.Data.Binding.XmlNamespaceManagerProperty
  - System.Windows.Data.Binding.XPath
  langs:
  - csharp
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
  type: Class
  summary: "Fornece acesso de alto nível para a definição de uma associação, que conecta as propriedades de associação de objetos de destino (normalmente, [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] elementos) e qualquer fonte de dados (por exemplo, um banco de dados, um [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] arquivo ou qualquer objeto que contém dados)."
  remarks: "[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]associação de dados fornece uma maneira simple e consistente para aplicações apresentar e interagir com dados. Associação de dados permite que você sincronize os valores das propriedades de dois objetos diferentes.       Para estabelecer uma associação, use a classe de associação ou uma das outras classes que herdam <xref:System.Windows.Data.BindingBase>.</xref:System.Windows.Data.BindingBase> Independentemente de qual objeto de associação e da natureza da sua fonte de dados, cada associação segue o modelo ilustrado pela figura a seguir.       ![Diagrama de associação de dados básico](~/add/media/databindingmostbasic.png &quot;diagrama de associação de dados básico&quot;) a figura demonstra os seguintes conceitos fundamentais de [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] conceitos de associação de dados.      -Cada associação normalmente possui estes quatro componentes: um objeto de destino de associação, uma propriedade de destino, uma fonte de associação e um <xref:System.Windows.Data.Binding.Path%2A>para o valor da fonte de associação a ser usado.</xref:System.Windows.Data.Binding.Path%2A> Por exemplo, se você deseja associar o conteúdo de um <xref:System.Windows.Controls.TextBox>para a propriedade de nome de um objeto de funcionário, o objeto de destino é o <xref:System.Windows.Controls.TextBox>, a propriedade de destino é o <xref:System.Windows.Controls.TextBox.Text%2A>propriedade, o valor a ser usado é o nome e o objeto de origem é o objeto Employee.</xref:System.Windows.Controls.TextBox.Text%2A> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBox>      -A propriedade de destino deve ser uma propriedade de dependência. Isso também significa que você não pode vincular um campo. A maioria das propriedades de <xref:System.Windows.UIElement>objetos são propriedades de dependência e a maioria das propriedades de dependência, exceto as somente leitura, oferecem suporte à associação de dados por padrão.</xref:System.Windows.UIElement> (Somente os tipos de <xref:System.Windows.DependencyObject>podem definir propriedades de dependência e todos os objetos <xref:System.Windows.UIElement>derivam <xref:System.Windows.DependencyObject>).      -Embora não especificado na figura, deve-se observar que o objeto de origem de associação não está restrita a sendo um personalizado [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] objeto.</xref:System.Windows.DependencyObject> </xref:System.Windows.UIElement> </xref:System.Windows.DependencyObject> [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]associação de dados oferece suporte a dados na forma de [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] objetos e [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]. Para fornecer alguns exemplos, sua fonte de associação pode ser um <xref:System.Windows.UIElement>, qualquer objeto da lista, um [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] objeto que está associado com [!INCLUDE[TLA#tla_adonet](~/add/includes/tlasharptla-adonet-md.md)] dados ou serviços da Web ou um XmlNode que contém seu [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] dados.</xref:System.Windows.UIElement>       Use o <xref:System.Windows.Data.Binding.Mode%2A>propriedade para especificar a direção do fluxo de dados.</xref:System.Windows.Data.Binding.Mode%2A> Para detectar mudanças nas associações unidirecionais ou bidirecionais, a fonte deve implementar um mecanismo de notificação de alteração de propriedade adequado como <xref:System.ComponentModel.INotifyPropertyChanged>.</xref:System.ComponentModel.INotifyPropertyChanged> Para obter um exemplo, consulte [como: implementar notificação de alteração de propriedade](~/add/includes/ajax-current-ext-md.md). O <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>propriedade especifica o intervalo das atualizações de fonte.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> Para obter mais informações, consulte &quot;Dados de associação conceitos básicos&quot; [visão geral de associação de dados](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlAttributeUsage_PriorityBinding&quot;></a># # Uso do atributo XAML ```   <object property=&quot;{Binding  declaration}&quot;/>   ``` <a name=&quot;xamlValues_PriorityBinding&quot;> </a> # # XAML valores *declaração* Zero ou mais cláusulas de atribuição do atributo separados por vírgulas (,).       Para obter mais informações, consulte [associação de extensão de marcação](~/add/includes/ajax-current-ext-md.md) ou [visão geral de declarações de associação](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class Binding : System.Windows.Data.BindingBase'
  inheritance:
  - System.Windows.Markup.MarkupExtension
  - System.Windows.Data.BindingBase
  implements: []
  inheritedMembers:
  - System.Windows.Data.BindingBase.BindingGroupName
  - System.Windows.Data.BindingBase.Delay
  - System.Windows.Data.BindingBase.FallbackValue
  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  - System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  - System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  - System.Windows.Data.BindingBase.StringFormat
  - System.Windows.Data.BindingBase.TargetNullValue
  platform:
  - net462
- uid: System.Windows.Data.Binding.#ctor
  id: '#ctor'
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Binding()
  nameWithType: Binding.Binding()
  fullName: System.Windows.Data.Binding.Binding()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> classe."
  syntax:
    content: public Binding ();
    parameters: []
  overload: System.Windows.Data.Binding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Binding(String)
  nameWithType: Binding.Binding(String)
  fullName: System.Windows.Data.Binding.Binding(String)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> classe com um caminho inicial."
  syntax:
    content: public Binding (string path);
    parameters:
    - id: path
      type: System.String
      description: "Inicial <xref:System.Windows.Data.Binding.Path*>para a associação.</xref:System.Windows.Data.Binding.Path*>"
  overload: System.Windows.Data.Binding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Adiciona um manipulador para o <xref:System.Windows.Data.Binding.SourceUpdated>evento anexado.</xref:System.Windows.Data.Binding.SourceUpdated>"
  remarks: "Este método dá suporte ao uso de evento anexado em [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "O <xref href=&quot;System.Windows.UIElement&quot;> </xref> ou <xref href=&quot;System.Windows.ContentElement&quot;> </xref> que escuta o evento."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "O manipulador para adicionar."
  overload: System.Windows.Data.Binding.AddSourceUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Adiciona um manipulador para o <xref:System.Windows.Data.Binding.TargetUpdated>evento anexado.</xref:System.Windows.Data.Binding.TargetUpdated>"
  remarks: "Este método dá suporte ao uso de evento anexado em [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "O <xref href=&quot;System.Windows.UIElement&quot;> </xref> ou <xref href=&quot;System.Windows.ContentElement&quot;> </xref> que escuta o evento."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "O manipulador para adicionar."
  overload: System.Windows.Data.Binding.AddTargetUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.AsyncState
  id: AsyncState
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: AsyncState
  nameWithType: Binding.AsyncState
  fullName: System.Windows.Data.Binding.AsyncState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define os dados opacos passados para o distribuidor de dados assíncrona."
  syntax:
    content: public object AsyncState { get; set; }
    return:
      type: System.Object
      description: "Dados passados para o distribuidor de dados assíncrona."
  overload: System.Windows.Data.Binding.AsyncState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.BindsDirectlyToSource
  id: BindsDirectlyToSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
  fullName: System.Windows.Data.Binding.BindsDirectlyToSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve avaliar o <xref:System.Windows.Data.Binding.Path*>em relação ao item de dados ou o <xref href=&quot;System.Windows.Data.DataSourceProvider&quot;> </xref> objeto.</xref:System.Windows.Data.Binding.Path*>"
  remarks: "O comportamento normal (quando essa propriedade é `false`) inclui um tratamento especial para <xref:System.Windows.Data.DataSourceProvider>objetos.</xref:System.Windows.Data.DataSourceProvider> Nesse caso, o mecanismo de associação avalia o <xref:System.Windows.Data.Binding.Path%2A>relativa ao objeto obtido o <xref:System.Windows.Data.DataSourceProvider.Data%2A>propriedade.</xref:System.Windows.Data.DataSourceProvider.Data%2A> </xref:System.Windows.Data.Binding.Path%2A> Além disso, a associação de escuta para o <xref:System.Windows.Data.DataSourceProvider.DataChanged>eventos e reage adequadamente.</xref:System.Windows.Data.DataSourceProvider.DataChanged> Definir essa propriedade como `true` substitui esse comportamento e fornece o acesso de associação a propriedades do <xref:System.Windows.Data.DataSourceProvider>objeto propriamente dito.</xref:System.Windows.Data.DataSourceProvider>"
  syntax:
    content: public bool BindsDirectlyToSource { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>para avaliar o caminho relativo para o item de dados em si; Caso contrário, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.BindsDirectlyToSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Converter
  id: Converter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Converter
  nameWithType: Binding.Converter
  fullName: System.Windows.Data.Binding.Converter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define o conversor para usar."
  remarks: "Uma associação usa implicitamente um conversor padrão que tenta fazer uma conversão de tipo entre o valor de origem e o valor de destino. Se a conversão não pode ser realizada, o conversor padrão retorna `null`.       Se você deseja associar um conversor de valor personalizado com uma associação, você deve criar uma classe que implementa o <xref:System.Windows.Data.IValueConverter>interface e fornecer implementações para o <xref:System.Windows.Data.IValueConverter.Convert%2A>e <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>métodos.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A> </xref:System.Windows.Data.IValueConverter> Conversores de valor podem alterar dados de um tipo para outro, converter entre culturais detalhes como conjuntos de caracteres ou modificar os outros aspectos da sua apresentação. Para obter exemplos de cenários típicos de conversão, consulte &quot;Conversão de dados&quot; a [visão geral de associação de dados](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlAttributeUsage_Converter&quot;></a># # Uso do atributo XAML ```   <object Converter=&quot;myConverter&quot;/>   ``` <a name=&quot;xamlValues_Converter&quot;> </a> # # XAML valores *myConverter* uma referência de recurso a uma classe que implementa o <xref:System.Windows.Data.IValueConverter>interface, que inclui implementações da <xref:System.Windows.Data.IValueConverter.Convert%2A>e <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>métodos.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A> </xref:System.Windows.Data.IValueConverter>       Para consultar um conversor de valor, use o [StaticResource Markup Extension](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Data.IValueConverter Converter { get; set; }
    return:
      type: System.Windows.Data.IValueConverter
      description: "Um valor do tipo <xref href=&quot;System.Windows.Data.IValueConverter&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ConverterCulture
  id: ConverterCulture
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
  fullName: System.Windows.Data.Binding.ConverterCulture
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define a cultura no qual avaliar o conversor."
  remarks: "Se você não definir essa propriedade, o mecanismo de associação usa o `Language` propriedade do objeto de destino de associação. Em [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] esse padrão é &quot;en-US&quot; ou herda o valor do elemento raiz (ou qualquer elemento) da página, se um tiver sido definido explicitamente.       Para obter informações sobre conversão de dados, consulte a seção conversão de dados de [visão geral de associação de dados](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Globalization.CultureInfo ConverterCulture { get; set; }
    return:
      type: System.Globalization.CultureInfo
      description: "O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ConverterCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ConverterParameter
  id: ConverterParameter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
  fullName: System.Windows.Data.Binding.ConverterParameter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define o parâmetro para passar para o <xref:System.Windows.Data.Binding.Converter*>.</xref:System.Windows.Data.Binding.Converter*>"
  remarks: "Você pode usar a propriedade ConverterParameter para especificar como um objeto é convertido.  Essa propriedade passa informações adicionais para um conversor que você usa em uma associação.  Quando você especificar um ConverterParameter, o valor é passado para o <xref:System.Windows.Data.IValueConverter.Convert%2A>e <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>métodos como o `parameter` parâmetro.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A>       Para obter um exemplo, consulte [como: produzir um valor com base na lista de itens associados](~/add/includes/ajax-current-ext-md.md). Esse exemplo mostra uma implementação de um <xref:System.Windows.Data.IMultiValueConverter>, mas o uso ainda se aplica.</xref:System.Windows.Data.IMultiValueConverter>"
  syntax:
    content: public object ConverterParameter { get; set; }
    return:
      type: System.Object
      description: "O parâmetro para passar para o <xref:System.Windows.Data.Binding.Converter*>.</xref:System.Windows.Data.Binding.Converter*> O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ConverterParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.DoNothing
  id: DoNothing
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: DoNothing
  nameWithType: Binding.DoNothing
  fullName: System.Windows.Data.Binding.DoNothing
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Usado como um valor retornado para orientar o mecanismo de associação não para realizar qualquer ação."
  remarks: "Uma propriedade de fonte de associação ou um conversor pode retornar DoNothing para instruir o mecanismo de associação não para realizar qualquer ação. Por exemplo, para instruir o mecanismo de associação não para transferir um valor para o destino de associação, não para mover para a próxima <xref:System.Windows.Data.Binding>em um <xref:System.Windows.Data.PriorityBinding>, ou não usar o `FallBackValue` ou o valor padrão.</xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.Binding>"
  syntax:
    content: public static readonly object DoNothing;
    return:
      type: System.Object
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ElementName
  id: ElementName
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ElementName
  nameWithType: Binding.ElementName
  fullName: System.Windows.Data.Binding.ElementName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define o nome do elemento a ser usado como o objeto de origem de associação."
  remarks: "Essa propriedade é útil quando você deseja associar a propriedade de outro elemento em seu aplicativo. Por exemplo, se você quiser usar um <xref:System.Windows.Controls.Slider>para controlar a altura do controle de outro em seu aplicativo, ou se você deseja associar o <xref:System.Windows.Controls.ContentControl.Content%2A>de seu controle o <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A>propriedade do seu <xref:System.Windows.Controls.ListBox>controle.</xref:System.Windows.Controls.ListBox> </xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> </xref:System.Windows.Controls.ContentControl.Content%2A> </xref:System.Windows.Controls.Slider>       Por padrão, associações herdam o contexto de dados especificado pelo `DataContext` propriedade, caso uma tenha sido definida. No entanto, a propriedade ElementName é uma das maneiras que você pode definir explicitamente a origem de um <xref:System.Windows.Data.Binding>e substituir o contexto de dados herdado.</xref:System.Windows.Data.Binding> Para obter mais informações, consulte [como: especificar a origem da associação](~/add/includes/ajax-current-ext-md.md).       O <xref:System.Windows.Data.Binding.Source%2A>e <xref:System.Windows.Data.Binding.RelativeSource%2A>Propriedades da <xref:System.Windows.Data.Binding>classe também permitem que você defina a origem da associação explicitamente.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.RelativeSource%2A> </xref:System.Windows.Data.Binding.Source%2A> No entanto, apenas uma das três propriedades, ElementName, <xref:System.Windows.Data.Binding.Source%2A>, e <xref:System.Windows.Data.Binding.RelativeSource%2A>, deve ser definida para cada associação ou poderá ocorrer um conflito.</xref:System.Windows.Data.Binding.RelativeSource%2A> </xref:System.Windows.Data.Binding.Source%2A> Essa propriedade gera uma exceção se houver um conflito de origem da associação."
  syntax:
    content: public string ElementName { get; set; }
    return:
      type: System.String
      description: "O valor de <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> propriedade ou [diretiva X:Name](~/add/includes/ajax-current-ext-md.md) do elemento de interesse. Você pode se referir a elementos em código somente se eles são registrados para apropriada <xref:System.Windows.NameScope>por meio de <xref uid=&quot;langword_csharp_RegisterName&quot; name=&quot;RegisterName&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.NameScope> Para obter mais informações, consulte [WPF XAML Namescopes](~/add/includes/ajax-current-ext-md.md).       O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)
  id: GetXmlNamespaceManager(System.Windows.DependencyObject)
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: GetXmlNamespaceManager(DependencyObject)
  nameWithType: Binding.GetXmlNamespaceManager(DependencyObject)
  fullName: System.Windows.Data.Binding.GetXmlNamespaceManager(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Retorna um [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] objeto do Gerenciador de namespace usado pela associação anexada ao objeto especificado."
  remarks: "Este método dá suporte ao uso de propriedades anexadas para o <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>propriedade anexada.</xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>       [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]gerentes de namespace são relevantes apenas se os dados na associação proveniente de um [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] origem de associação (<xref:System.Windows.Data.XmlDataProvider> objeto).</xref:System.Windows.Data.XmlDataProvider>       Se um Gerenciador de namespace não foi aplicado especificamente na criação de fonte de dados original ou subsequentemente chamando <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>na associação, em seguida, esse método retornará `null`.</xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>       Esse método sempre retornará `null` se os dados por trás da associação não são [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]."
  syntax:
    content: public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "O objeto do qual obter informações de namespace."
    return:
      type: System.Xml.XmlNamespaceManager
      description: "Um objeto retornado usado para exibição [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] namespaces que se relacionam com a associação no elemento de objeto passado. Este objeto deve ser convertido como &lt;xref:System.Xml.XmlNamespaceManager?displayProperty=fullName&gt;."
  overload: System.Windows.Data.Binding.GetXmlNamespaceManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> target </code> parâmetro não pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Data.Binding.IndexerName
  id: IndexerName
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: IndexerName
  nameWithType: Binding.IndexerName
  fullName: System.Windows.Data.Binding.IndexerName
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Usado como o <xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*>de &lt;xref:System.ComponentModel.PropertyChangedEventArgs?displayProperty=fullName&gt; para indicar que uma propriedade do indexador foi alterado.</xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*>"
  syntax:
    content: public const string IndexerName;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.IsAsync
  id: IsAsync
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: IsAsync
  nameWithType: Binding.IsAsync
  fullName: System.Windows.Data.Binding.IsAsync
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> deve obter e definir valores de forma assíncrona."
  remarks: "Use a propriedade é assíncrono quando o `get` acessador da propriedade de fonte de associação pode levar muito tempo. Um exemplo é uma propriedade de imagem com um `get` acessador que baixa da Web. A configuração é assíncrono como `true` evita bloqueio a [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] enquanto o download ocorre.       Enquanto aguarda o valor para chegar, a associação informa o <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, se disponível, ou o valor padrão da associação de propriedade de destino.</xref:System.Windows.Data.BindingBase.FallbackValue%2A>       No entanto, não deve haver muitos cenários em que você precisa usar a propriedade é assíncrono. O [!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)] recomendam contra definir propriedades que são ordens de magnitude mais lentas do que seria um conjunto de campos. Quando você estiver criando sua classe, considere extremamente lentas operações fora de manipulação de `get` acessador e o resultados em cache. Para obter mais informações, consulte [NIB: escolhendo entre propriedades e métodos](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af)."
  syntax:
    content: public bool IsAsync { get; set; }
    return:
      type: System.Boolean
      description: "O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Mode
  id: Mode
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Mode
  nameWithType: Binding.Mode
  fullName: System.Windows.Data.Binding.Mode
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica a direção do fluxo de dados na associação."
  remarks: "Para dar suporte <xref:System.Windows.Data.BindingMode>e <xref:System.Windows.Data.BindingMode>associações, os dados subjacentes devem implementar <xref:System.ComponentModel.INotifyPropertyChanged>.</xref:System.ComponentModel.INotifyPropertyChanged> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> Para obter detalhes, consulte [como: implementar notificação de alteração de propriedade](~/add/includes/ajax-current-ext-md.md).       Para <xref:System.Windows.Data.BindingMode>ou <xref:System.Windows.Data.BindingMode>associações, você pode controlar as atualizações de fonte de destino, definindo o <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>propriedade.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> Para obter mais informações, consulte <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>       Para obter mais informações sobre os modos diferentes de associação, consulte [visão geral de associação de dados](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Data.BindingMode Mode { get; set; }
    return:
      type: System.Windows.Data.BindingMode
      description: "Uma da <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref> valores. O padrão é <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref>, que retorna o valor da propriedade de dependência de destino do modo de associação padrão. No entanto, o valor padrão varia para cada propriedade de dependência. Em geral, propriedades de controle editáveis pelo usuário, como as caixas de texto e caixas de seleção, bidirecionais associações padrão, ao passo que a maioria das outras propriedades padrão para a associação unidirecional.       É uma maneira de determinar se uma propriedade de dependência associa unidirecionais ou bidirecionais por padrão obter os metadados de propriedade da propriedade usando <> </> *> e verifique se o valor booliano de <> </> *> propriedade."
  overload: System.Windows.Data.Binding.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated
  id: NotifyOnSourceUpdated
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: NotifyOnSourceUpdated
  nameWithType: Binding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.Binding.NotifyOnSourceUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve gerar o <xref:System.Windows.Data.Binding.SourceUpdated>evento quando um valor é transferido de destino da associação para a fonte da associação.</xref:System.Windows.Data.Binding.SourceUpdated>"
  syntax:
    content: public bool NotifyOnSourceUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Windows.Data.Binding.SourceUpdated>deve ser gerado quando o valor de origem de associação é atualizada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.Binding.SourceUpdated> O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.NotifyOnSourceUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated
  id: NotifyOnTargetUpdated
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: NotifyOnTargetUpdated
  nameWithType: Binding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.Binding.NotifyOnTargetUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve gerar o <xref:System.Windows.Data.Binding.TargetUpdated>evento quando um valor é transferido da origem de associação para o destino da associação.</xref:System.Windows.Data.Binding.TargetUpdated>"
  syntax:
    content: public bool NotifyOnTargetUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Windows.Data.Binding.TargetUpdated>deve ser gerado quando o valor de destino da associação é atualizado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.Binding.TargetUpdated> O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.NotifyOnTargetUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
  fullName: System.Windows.Data.Binding.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve gerar o <xref:System.Windows.Controls.Validation.Error>anexa o objeto associado.</xref:System.Windows.Controls.Validation.Error>"
  remarks: "Se a associação tem <xref:System.Windows.Data.Binding.ValidationRules%2A>associados a ele, o mecanismo de associação verifica cada regra sempre que transfere o valor da propriedade de destino para a propriedade de origem.</xref:System.Windows.Data.Binding.ValidationRules%2A> Se uma regra invalida um valor, o mecanismo de associação cria um <xref:System.Windows.Controls.ValidationError>do objeto e adiciona-o para o <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> coleção do objeto associado.</xref:System.Windows.Controls.Validation.Errors%2A> </xref:System.Windows.Controls.Validation> </xref:System.Windows.Controls.ValidationError> Quando o <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>propriedade não estiver vazia, o <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName>propriedade anexada do objeto é definida como `true`.</xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> </xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Se a propriedade NotifyOnValidationError do <xref:System.Windows.Data.Binding>é definido como `true`, em seguida, gera o mecanismo de associação a <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>evento no objeto anexado.</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> </xref:System.Windows.Data.Binding>       Para obter uma discussão detalhada sobre o processo de validação, consulte a seção de validação de dados no [visão geral de associação de dados](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Windows.Controls.Validation.Error>evento anexado deve ser gerado no objeto ligado quando há um erro de validação durante as atualizações de origem; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Controls.Validation.Error> O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Path
  id: Path
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Path
  nameWithType: Binding.Path
  fullName: System.Windows.Data.Binding.Path
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define o caminho para a propriedade de origem da associação."
  remarks: "Cada associação normalmente possui estes quatro componentes: um objeto de destino de associação, uma propriedade de destino, uma origem de associação e um caminho para o valor da fonte de associação a ser usado. Para obter mais informações sobre esses conceitos de associação de dados, consulte [visão geral de associação de dados](~/add/includes/ajax-current-ext-md.md).       Use a propriedade Path para especificar o valor de origem que você deseja associar a: - no caso mais simples, o valor da propriedade é o nome da propriedade do objeto fonte a ser usado como a associação de caminho `Path=PropertyName`.      -Sub propriedades de uma propriedade podem ser especificados com uma sintaxe semelhante àquela usada em [!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]. Por exemplo, a cláusula `Path=ShoppingCart.Order` define a associação para a subpropriedade `Order` do objeto ou propriedade `ShoppingCart`.      -Para associar a uma propriedade anexada, coloque entre parênteses a propriedade anexada. Por exemplo, para associar a propriedade anexada <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName>, a sintaxe é `Path=(DockPanel.Dock)`.</xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName>      -Indexadores de uma propriedade podem ser especificados dentro de colchetes após o nome da propriedade onde o indexador é aplicado. Por exemplo, a cláusula `Path=ShoppingCart[0]` define a associação ao índice que corresponde a como a indexação interna de sua propriedade lida com a cadeia de caracteres literal &quot;0&quot;. Também há suporte para vários indexadores.      -Indexadores e sub propriedades podem ser mescladas em um `Path` cláusula; por exemplo, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].` - dentro de indexadores você pode ter vários parâmetros de indexador separados por vírgulas (,). O tipo de cada parâmetro pode ser especificado com parênteses. Por exemplo, você pode ter `Path=&quot;[(sys:Int32)42,(sys:Int32)24]&quot;`, onde `sys` é mapeado para o `System` namespace.      -Quando a fonte for uma exibição de coleção, o item atual pode ser especificado com uma barra (/). Por exemplo, a cláusula `Path=/` define a associação para o item atual no modo de exibição. Quando a fonte é uma coleção, essa sintaxe especifica o item atual da exibição de coleção padrão.      -Barras e nomes de propriedade podem ser combinadas para percorrer as propriedades que são coleções. Por exemplo, `Path=/Offices/ManagerName` Especifica o item atual da coleção de origem, que contém um `Offices` propriedade também é uma coleção. O item atual é um objeto que contém um `ManagerName` propriedade.      -Opcionalmente, um caminho de ponto (.) pode ser usado para associar a fonte atual. Por exemplo, `Text=&quot;{Binding}&quot;` é equivalente a `Text=&quot;{Binding Path=.}&quot;`.       Para obter informações sobre a sintaxe de caminho, consulte [visão geral de declarações de associação](~/add/includes/ajax-current-ext-md.md) ou [sintaxe XAML de PropertyPath](~/add/includes/ajax-current-ext-md.md).       Para [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] associações, consulte o <xref:System.Windows.Data.Binding.XPath%2A>propriedade.</xref:System.Windows.Data.Binding.XPath%2A>       Para vincular a um objeto inteiro, você não precisa especificar a propriedade Path. Para obter mais informações, consulte &quot;Especificando o caminho para o valor&quot; [visão geral de associação de dados](../Topic/Data%20Binding%20Overview.md)."
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property. For more information on this example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[BindValidation#5](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#5)]"
  syntax:
    content: public System.Windows.PropertyPath Path { get; set; }
    return:
      type: System.Windows.PropertyPath
      description: "O caminho para a fonte da associação. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.RelativeSource
  id: RelativeSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: RelativeSource
  nameWithType: Binding.RelativeSource
  fullName: System.Windows.Data.Binding.RelativeSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define a origem de associação especificando seu local em relação à posição do destino da associação."
  remarks: "Essa propriedade normalmente é usada para associar uma propriedade de um objeto para outra propriedade do mesmo objeto, ou para definir uma associação em um estilo ou modelo.       Por padrão, associações herdam o contexto de dados especificado pelo `DataContext` propriedade, caso uma tenha sido definida. No entanto, a propriedade RelativeSource é uma das maneiras que você pode definir explicitamente a origem de um <xref:System.Windows.Data.Binding>e substituir o contexto de dados herdado.</xref:System.Windows.Data.Binding> Para obter mais informações, consulte [como: especificar a origem da associação](~/add/includes/ajax-current-ext-md.md).       O <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName>e <xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName>Propriedades também permitem que você defina a origem da associação explicitamente.</xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> No entanto, apenas uma das três propriedades, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>e RelativeSource, deve ser definido para cada associação ou um conflito pode ocorrer.</xref:System.Windows.Data.Binding.Source%2A> </xref:System.Windows.Data.Binding.ElementName%2A> Essa propriedade gera uma exceção se houver um conflito de origem da associação.       Para [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] informações, consulte [RelativeSource MarkupExtension](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlTextUsage_RelativeSource&quot;></a># # Uso de texto XAML"
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the RelativeSource property. For more information on this example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[BindValidation#5](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#5)]  \n  \n To see the full example, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972)."
  syntax:
    content: public System.Windows.Data.RelativeSource RelativeSource { get; set; }
    return:
      type: System.Windows.Data.RelativeSource
      description: "Um <xref href=&quot;System.Windows.Data.RelativeSource&quot;> </xref> objeto que especifica o local relativo da fonte de associação a ser usado. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.RelativeSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Remove um manipulador para o <xref:System.Windows.Data.Binding.SourceUpdated>evento anexado.</xref:System.Windows.Data.Binding.SourceUpdated>"
  remarks: "Este método dá suporte ao uso de evento anexado em [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "O <xref href=&quot;System.Windows.UIElement&quot;> </xref> ou <xref href=&quot;System.Windows.ContentElement&quot;> </xref> que escuta o evento."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "O manipulador a ser removido."
  overload: System.Windows.Data.Binding.RemoveSourceUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Remove um manipulador para o <xref:System.Windows.Data.Binding.TargetUpdated>evento anexado.</xref:System.Windows.Data.Binding.TargetUpdated>"
  remarks: "Este método dá suporte ao uso de evento anexado em [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "O <xref href=&quot;System.Windows.UIElement&quot;> </xref> ou <xref href=&quot;System.Windows.ContentElement&quot;> </xref> que escuta o evento."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "O manipulador a ser removido."
  overload: System.Windows.Data.Binding.RemoveTargetUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  id: SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  nameWithType: Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  fullName: System.Windows.Data.Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Define um objeto do Gerenciador de namespace usado pela associação anexada ao elemento fornecido."
  remarks: "Este método dá suporte ao uso de propriedades anexadas para o <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>propriedade anexada.</xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>"
  syntax:
    content: public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "O objeto do qual obter informações de namespace."
    - id: value
      type: System.Xml.XmlNamespaceManager
      description: "O &lt;xref:System.Xml.XmlNamespaceManager?displayProperty=fullName&gt; a ser usado para avaliação de namespace no elemento passado."
  overload: System.Windows.Data.Binding.SetXmlNamespaceManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>target</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Data.Binding.ShouldSerializePath
  id: ShouldSerializePath
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ShouldSerializePath()
  nameWithType: Binding.ShouldSerializePath()
  fullName: System.Windows.Data.Binding.ShouldSerializePath()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Indica se o <xref:System.Windows.Data.Binding.Path*>propriedade deve ser persistida.</xref:System.Windows.Data.Binding.Path*>"
  remarks: "Isso `ShouldSerialize` método é fornecido, pois o <xref:System.Windows.Data.Binding.Path%2A>propriedade não tem um valor padrão simples.</xref:System.Windows.Data.Binding.Path%2A> Este método indica se a propriedade foi alterado do valor padrão. Normalmente você invoca esse método se você estiver desenvolvendo ou um designer para o <xref:System.Windows.Data.Binding>ou desenvolvendo seu próprio controle incorporar <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding>"
  syntax:
    content: public bool ShouldSerializePath ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor da propriedade foi alterado do padrão; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ShouldSerializePath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ShouldSerializeSource
  id: ShouldSerializeSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ShouldSerializeSource()
  nameWithType: Binding.ShouldSerializeSource()
  fullName: System.Windows.Data.Binding.ShouldSerializeSource()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Indica se o <xref:System.Windows.Data.Binding.Source*>propriedade deve ser persistida.</xref:System.Windows.Data.Binding.Source*>"
  remarks: "Isso `ShouldSerialize` método é fornecido, pois o <xref:System.Windows.Data.Binding.Source%2A>propriedade não tem um valor padrão simples.</xref:System.Windows.Data.Binding.Source%2A> Este método indica se a propriedade foi alterado do valor padrão. Normalmente você invoca esse método se você estiver desenvolvendo ou um designer para o <xref:System.Windows.Data.Binding>ou desenvolvendo seu próprio controle incorporar <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding>"
  syntax:
    content: public bool ShouldSerializeSource ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor da propriedade foi alterado do padrão; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ShouldSerializeSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules
  id: ShouldSerializeValidationRules
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ShouldSerializeValidationRules()
  nameWithType: Binding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.Binding.ShouldSerializeValidationRules()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Indica se o <xref:System.Windows.Data.Binding.ValidationRules*>propriedade deve ser persistida.</xref:System.Windows.Data.Binding.ValidationRules*>"
  remarks: "Isso `ShouldSerialize` método é fornecido, pois o <xref:System.Windows.Data.Binding.ValidationRules%2A>propriedade não tem um valor padrão simples.</xref:System.Windows.Data.Binding.ValidationRules%2A> Este método indica se a propriedade foi alterado do valor padrão. Normalmente você invoca esse método se você estiver desenvolvendo ou um designer para o <xref:System.Windows.Data.Binding>ou desenvolvendo seu próprio controle incorporar <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding>"
  syntax:
    content: public bool ShouldSerializeValidationRules ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor da propriedade foi alterado do padrão; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ShouldSerializeValidationRules*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Source
  id: Source
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Source
  nameWithType: Binding.Source
  fullName: System.Windows.Data.Binding.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define o objeto a ser usado como a fonte da associação."
  remarks: "Por padrão, associações herdam o contexto de dados especificado pelo `DataContext` propriedade, caso uma tenha sido definida. No entanto, a propriedade de origem é uma das maneiras que você pode definir explicitamente a origem de um <xref:System.Windows.Data.Binding>e substituir o contexto de dados herdado.</xref:System.Windows.Data.Binding> Se você não precisar da funcionalidade de estabelecer um escopo no qual diversas propriedades herdam o mesmo contexto de dados, você pode usar a propriedade de origem em vez do `DataContext` propriedade.       O <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName>e <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName>Propriedades também permitem que você defina a origem da associação explicitamente.</xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> No entanto, apenas uma das três propriedades, <xref:System.Windows.Data.Binding.ElementName%2A>, fonte, e <xref:System.Windows.Data.Binding.RelativeSource%2A>, deve ser definida para cada associação ou um conflito pode ocorrer.</xref:System.Windows.Data.Binding.RelativeSource%2A> </xref:System.Windows.Data.Binding.ElementName%2A> Essa propriedade gera uma exceção se houver um conflito de origem da associação.       Para limpar essa propriedade, defina-o como <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>.</xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>      <a name=&quot;xamlAttributeUsage_Source&quot;></a># # Uso do atributo XAML ```   <object Source=&quot;object&quot;/>   ``` <a name=&quot;xamlValues_Source&quot;> </a> # # XAML valores *objeto* um objeto existente.       Para se referir a um objeto existente, use o [StaticResource Markup Extension](~/add/includes/ajax-current-ext-md.md)"
  example:
  - "In this example, you have a `Person` object with a string property named `PersonName`. The `Person` object is defined in the namespace called `SDKSample`.  \n  \n The following example instantiates the `Person` object with a `PersonName` property value of `Joe`. This is done in the `Resources` section and assigned an `x:Key`.  \n  \n [!code-xml[SimpleBinding#Instantiation](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#instantiation)]  \n[!code-xml[SimpleBinding#2](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#2)]  \n[!code-xml[SimpleBinding#EndWindow](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#endwindow)]  \n  \n To bind to the `PersonName` property you would do the following:  \n  \n [!code-xml[SimpleBinding#BDO1](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#bdo1)]  \n  \n As a result, the <xref:System.Windows.Controls.TextBlock> appears with the value \"Joe\".  \n  \n In the following example, the Source values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=fullName>:  \n  \n [!code-xml[DataBindingLab#ComboBoxMultiBinding](~/add/codesnippet/xaml/DataBindingLab/AddProductWindow.xaml#comboboxmultibinding)]  \n  \n For the full example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: public object Source { get; set; }
    return:
      type: System.Object
      description: "O objeto a ser usado como a fonte da associação."
  overload: System.Windows.Data.Binding.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.SourceUpdatedEvent
  id: SourceUpdatedEvent
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: SourceUpdatedEvent
  nameWithType: Binding.SourceUpdatedEvent
  fullName: System.Windows.Data.Binding.SourceUpdatedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Identifica o <xref:System.Windows.Data.Binding.SourceUpdated>evento anexado.</xref:System.Windows.Data.Binding.SourceUpdated>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.TargetUpdatedEvent
  id: TargetUpdatedEvent
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: TargetUpdatedEvent
  nameWithType: Binding.TargetUpdatedEvent
  fullName: System.Windows.Data.Binding.TargetUpdatedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Identifica o <xref:System.Windows.Data.Binding.TargetUpdated>evento anexado.</xref:System.Windows.Data.Binding.TargetUpdated>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter
  id: UpdateSourceExceptionFilter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: UpdateSourceExceptionFilter
  nameWithType: Binding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.Binding.UpdateSourceExceptionFilter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um manipulador, que você pode usar para fornecer lógica personalizada para tratamento de exceções que encontra o mecanismo de associação durante a atualização do valor de origem de associação. Isso é aplicável somente se você tiver associado uma <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref> com sua associação."
  remarks: "O <xref:System.Windows.Controls.ExceptionValidationRule>é uma regra de validação interna que verifica para exceções geradas durante a atualização da propriedade de fonte de associação.</xref:System.Windows.Controls.ExceptionValidationRule> Se você tiver associado a <xref:System.Windows.Controls.ExceptionValidationRule>com seu <xref:System.Windows.Data.Binding>do objeto, você pode usar essa propriedade para definir um manipulador para fornecer lógica personalizada para tratar essas exceções.</xref:System.Windows.Data.Binding> </xref:System.Windows.Controls.ExceptionValidationRule> Se um UpdateSourceExceptionFilter não for especificado no <xref:System.Windows.Data.Binding>, o mecanismo de associação cria um <xref:System.Windows.Controls.ValidationError>com a exceção e adiciona-o para o <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>coleção do elemento associado.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> </xref:System.Windows.Data.Binding>"
  example:
  - "The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`. The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).  \n  \n [!code-xml[BindValidation#tbExceptionFilter](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#tbexceptionfilter)]  \n  \n You can provide custom logic to handle those exceptions. The following example shows how to use the UpdateSourceExceptionFilter property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \n  \n [!code-cs[BindValidation#filtercallback](~/add/codesnippet/csharp/BindingValidation/Window1.xaml.cs#filtercallback)]  \n  \n The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \n  \n [!code-cs[BindValidation#Handler](~/add/codesnippet/csharp/BindingValidation/Window1.xaml.cs#handler)]  \n  \n The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>. For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \n  \n For the complete sample, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972)."
  syntax:
    content: public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceExceptionFilterCallback
      description: "Um método que fornece a lógica personalizada para tratamento de exceções que encontra o mecanismo de associação durante a atualização do valor de origem de associação."
  overload: System.Windows.Data.Binding.UpdateSourceExceptionFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.UpdateSourceTrigger
  id: UpdateSourceTrigger
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
  fullName: System.Windows.Data.Binding.UpdateSourceTrigger
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que determina o tempo de atualizações de fonte de associação."
  remarks: "Associações que são <xref:System.Windows.Data.BindingMode>ou <xref:System.Windows.Data.BindingMode>as alterações na propriedade de destino e propagá-los de volta para a fonte.</xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> Isso é conhecido como a origem de atualização. Geralmente, essas atualizações ocorrem sempre que a propriedade de destino é alterado. Isso é bom para caixas de seleção e outros controles simples, mas geralmente não é apropriado para campos de texto. Atualizando após cada pressionamento de tecla pode reduzir o desempenho e ela impede que o usuário da oportunidade de voltar e corrigir erros de digitação antes de confirmar o novo valor. Portanto, o valor de UpdateSourceTrigger padrão da <xref:System.Windows.Controls.TextBox.Text%2A>é de propriedade <xref:System.Windows.Data.UpdateSourceTrigger>e não <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Controls.TextBox.Text%2A>       Se você definir o valor de UpdateSourceTrigger como <xref:System.Windows.Data.UpdateSourceTrigger>, você deve chamar o <xref:System.Windows.Data.BindingExpression.UpdateSource%2A>método ou as alterações não serão propagadas para a origem.</xref:System.Windows.Data.BindingExpression.UpdateSource%2A> </xref:System.Windows.Data.UpdateSourceTrigger>"
  syntax:
    content: public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceTrigger
      description: "Uma da <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> valores. O padrão é <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>, que retorna o padrão <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> valor da propriedade de dependência de destino. No entanto, o valor padrão para a maioria das propriedades de dependência é <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>, enquanto o <> </> *> propriedade tem um valor padrão de <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>.       Uma maneira de determinar o valor de UpdateSourceTrigger padrão de uma propriedade de dependência é obter os metadados da propriedade da propriedade usando <> </> *> e, em seguida, verifique o valor da <xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*>propriedade.</xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*>"
  overload: System.Windows.Data.Binding.UpdateSourceTrigger*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors
  id: ValidatesOnDataErrors
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve incluir o <xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>."
  remarks: "Definir esta propriedade fornece uma alternativa ao uso de <xref:System.Windows.Controls.DataErrorValidationRule>elemento explicitamente.</xref:System.Windows.Controls.DataErrorValidationRule> O <xref:System.Windows.Controls.DataErrorValidationRule>é uma regra de validação interna que verifica os erros que são gerados pelo <xref:System.ComponentModel.IDataErrorInfo>implementação do objeto de origem.</xref:System.ComponentModel.IDataErrorInfo> </xref:System.Windows.Controls.DataErrorValidationRule> Se um erro for gerado, o mecanismo de associação cria um <xref:System.Windows.Controls.ValidationError>com o erro e adiciona-o para o <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>coleção do elemento associado.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> A falta de um erro limpa esses comentários de validação, a menos que outra regra gera um problema de validação.       ValidatesOnDataErrors é introduzido no .NET Framework versão 3.5.  Para obter mais informações, consulte [versões do .NET Framework e dependências](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and ValidatesOnDataErrors to validate user input in a <xref:System.Windows.Controls.TextBox>. The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.  \n  \n [!code-cs[BindingValidationAttributesSnippets#IDataErrorInfoData](~/add/codesnippet/csharp/bindingvalidationattributessnippets/data.cs#idataerrorinfodata)]\n [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/add/codesnippet/visualbasic/bindingvalidationattributessnippets/window1.xaml.vb#idataerrorinfodata)]  \n  \n The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets ValidatesOnDataErrors to `true` on the <xref:System.Windows.Data.Binding>.  When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.  \n  \n [!code-xml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/add/codesnippet/xaml/bindingvalidationattributessnippets/window1.xaml#idataerrorinfoxaml)]"
  syntax:
    content: public bool ValidatesOnDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir o <xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ValidatesOnDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidatesOnExceptions
  id: ValidatesOnExceptions
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
  fullName: System.Windows.Data.Binding.ValidatesOnExceptions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve incluir o <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>."
  remarks: "Definir esta propriedade fornece uma alternativa ao uso de <xref:System.Windows.Controls.ExceptionValidationRule>elemento explicitamente.</xref:System.Windows.Controls.ExceptionValidationRule> O <xref:System.Windows.Controls.ExceptionValidationRule>é uma regra de validação interna que verifica para exceções geradas durante a atualização da propriedade source.</xref:System.Windows.Controls.ExceptionValidationRule> Se uma exceção for lançada, o mecanismo de associação cria um <xref:System.Windows.Controls.ValidationError>com a exceção e adiciona-o para o <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>coleção do elemento associado.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> A falta de um erro limpa esses comentários de validação, a menos que outra regra gera um problema de validação.       ValidatesOnExceptions é introduzido no .NET Framework versão 3.5.  Para obter mais informações, consulte [versões do .NET Framework e dependências](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples use ValidatesOnExceptions to validate user input in a <xref:System.Windows.Controls.TextBox>. The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.  \n  \n [!code-cs[BindingValidationAttributesSnippets#ThrowExceptionData](~/add/codesnippet/csharp/bindingvalidationattributessnippets/data.cs#throwexceptiondata)]\n [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/add/codesnippet/visualbasic/bindingvalidationattributessnippets/window1.xaml.vb#throwexceptiondata)]  \n  \n The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets ValidatesOnExceptions to `true` on the <xref:System.Windows.Data.Binding>. When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.  \n  \n [!code-xml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/add/codesnippet/xaml/bindingvalidationattributessnippets/window1.xaml#throwexceptionxaml)]"
  syntax:
    content: public bool ValidatesOnExceptions { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir o <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ValidatesOnExceptions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  id: ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve incluir o <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>."
  remarks: "Quando for ValidatesOnNotifyDataErrors `true`, a associação verifica e relata erros que são gerados por uma fonte de dados que implementa <xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo>"
  syntax:
    content: public bool ValidatesOnNotifyDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir o <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidationRules
  nameWithType: Binding.ValidationRules
  fullName: System.Windows.Data.Binding.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém uma coleção de regras que verificam a validade da entrada do usuário."
  remarks: "O [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] modelo de associação de dados permite que você associe ValidationRules com seu <xref:System.Windows.Data.Binding>ou <xref:System.Windows.Data.MultiBinding>objeto.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> Você pode criar regras personalizadas derivando a <xref:System.Windows.Controls.ValidationRule>classe e implementando o <xref:System.Windows.Controls.ValidationRule.Validate%2A>método, ou você pode usar o interno <xref:System.Windows.Controls.ExceptionValidationRule>, que invalida um valor se houver exceções durante as atualizações de fonte.</xref:System.Windows.Controls.ExceptionValidationRule> </xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Controls.ValidationRule>       O mecanismo de associação verifica cada <xref:System.Windows.Controls.ValidationRule>associados com uma associação de cada vez que um valor de entrada (o associação propriedade valor de destino) é transferido para a propriedade de origem da associação.</xref:System.Windows.Controls.ValidationRule> Para obter uma discussão detalhada sobre o processo de validação, consulte a seção de validação de dados no [visão geral de associação de dados](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Essa propriedade pode ser definida [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] usando a sintaxe de coleção mostrada ou acessar o objeto de coleção e usando seus vários métodos, como `Add`. A propriedade para acessar o objeto de coleção é somente leitura, enquanto a coleção em si é leitura / gravação.      <a name=&quot;xamlPropertyElementUsage_ValidationRules&quot;></a># # Uso do elemento de propriedade de XAML ```   <object>     <object.ValidationRules>       oneOrMoreValidationRules     </object.ValidationRules>   </object>      ``` <a name=&quot;xamlValues_ValidationRules&quot;> </a> # # XAML valores *oneOrMoreValidationRules* um ou mais <xref:System.Windows.Controls.ValidationRule>objetos.</xref:System.Windows.Controls.ValidationRule>       Você pode usar a <xref:System.Windows.Controls.ExceptionValidationRule>classe ou criar regras personalizadas por subclasses de <xref:System.Windows.Controls.ValidationRule>classe.</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ExceptionValidationRule>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "Uma coleção de <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objetos."
  overload: System.Windows.Data.Binding.ValidationRules*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.XmlNamespaceManagerProperty
  id: XmlNamespaceManagerProperty
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: XmlNamespaceManagerProperty
  nameWithType: Binding.XmlNamespaceManagerProperty
  fullName: System.Windows.Data.Binding.XmlNamespaceManagerProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Identifica o <xref:System.Windows.Data.Binding.XmlNamespaceManager*>propriedade anexada.</xref:System.Windows.Data.Binding.XmlNamespaceManager*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.XPath
  id: XPath
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: XPath
  nameWithType: Binding.XPath
  fullName: System.Windows.Data.Binding.XPath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um <xref uid=&quot;langword_csharp_XPath&quot; name=&quot;XPath&quot; href=&quot;&quot;> </xref> consulta que retorna o valor de [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] fonte de associação a ser usada."
  remarks: "Quando a fonte de associação é [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] dados em vez de um [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] do objeto, a propriedade XPath é usada em vez do <xref:System.Windows.Data.Binding.Path%2A>propriedade para indicar o caminho para o valor na fonte de associação a ser usado.</xref:System.Windows.Data.Binding.Path%2A>       Definindo a propriedade XPath, você está criando uma `XPath` consulta para selecionar um nó ou uma coleção de nós (<xref:System.Xml.XmlElement?displayProperty=fullName> e <xref:System.Xml.XmlAttribute?displayProperty=fullName>ambos derivam <xref:System.Xml.XmlNode?displayProperty=fullName>).</xref:System.Xml.XmlNode?displayProperty=fullName> </xref:System.Xml.XmlAttribute?displayProperty=fullName> </xref:System.Xml.XmlElement?displayProperty=fullName> <xref:System.Xml.XmlNode?displayProperty=fullName>é um [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] objeto, o que significa que você pode vincular a suas propriedades usando o <xref:System.Windows.Data.Binding.Path%2A>propriedade.</xref:System.Windows.Data.Binding.Path%2A></xref:System.Xml.XmlNode?displayProperty=fullName>       O <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>método trata o `XPath` expressões de propriedade XPath.</xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> `XPath`Não há suporte para funções. Para `XPath` informações de expressão, consulte o <xref:System.Xml.XmlNode.SelectNodes%2A>documentação e exemplos fornecidos na seção de exemplo.</xref:System.Xml.XmlNode.SelectNodes%2A>       LINQ para XML objetos <xref:System.Xml.Linq.XDocument>e <xref:System.Xml.Linq.XElement>não use `XPath`.</xref:System.Xml.Linq.XElement> </xref:System.Xml.Linq.XDocument> Para obter detalhes, consulte [como: associar a XDocument, XElement ou LINQ para XML resultados da consulta](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string XPath { get; set; }
    return:
      type: System.String
      description: "O <xref uid=&quot;langword_csharp_XPath&quot; name=&quot;XPath&quot; href=&quot;&quot;> </xref> consulta. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.XPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.BindingBase
  isExternal: false
  name: System.Windows.Data.BindingBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Data.Binding.#ctor
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Binding()
  nameWithType: Binding.Binding()
  fullName: System.Windows.Data.Binding.Binding()
- uid: System.Windows.Data.Binding.#ctor(System.String)
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Binding(String)
  nameWithType: Binding.Binding(String)
  fullName: System.Windows.Data.Binding.Binding(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<DataTransferEventArgs>
  nameWithType: EventHandler<DataTransferEventArgs>
  fullName: System.EventHandler<System.Windows.Data.DataTransferEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Data.DataTransferEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.DataTransferEventArgs
    name: DataTransferEventArgs
    nameWithType: DataTransferEventArgs
    fullName: DataTransferEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.Data.Binding.AsyncState
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AsyncState
  nameWithType: Binding.AsyncState
  fullName: System.Windows.Data.Binding.AsyncState
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.Binding.BindsDirectlyToSource
  parent: System.Windows.Data.Binding
  isExternal: false
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
  fullName: System.Windows.Data.Binding.BindsDirectlyToSource
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.Binding.Converter
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Converter
  nameWithType: Binding.Converter
  fullName: System.Windows.Data.Binding.Converter
- uid: System.Windows.Data.IValueConverter
  parent: System.Windows.Data
  isExternal: false
  name: IValueConverter
  nameWithType: IValueConverter
  fullName: System.Windows.Data.IValueConverter
- uid: System.Windows.Data.Binding.ConverterCulture
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
  fullName: System.Windows.Data.Binding.ConverterCulture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.Binding.ConverterParameter
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
  fullName: System.Windows.Data.Binding.ConverterParameter
- uid: System.Windows.Data.Binding.DoNothing
  parent: System.Windows.Data.Binding
  isExternal: false
  name: DoNothing
  nameWithType: Binding.DoNothing
  fullName: System.Windows.Data.Binding.DoNothing
- uid: System.Windows.Data.Binding.ElementName
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ElementName
  nameWithType: Binding.ElementName
  fullName: System.Windows.Data.Binding.ElementName
- uid: System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)
  parent: System.Windows.Data.Binding
  isExternal: false
  name: GetXmlNamespaceManager(DependencyObject)
  nameWithType: Binding.GetXmlNamespaceManager(DependencyObject)
  fullName: System.Windows.Data.Binding.GetXmlNamespaceManager(DependencyObject)
- uid: System.Xml.XmlNamespaceManager
  parent: System.Xml
  isExternal: true
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager
  fullName: System.Xml.XmlNamespaceManager
- uid: System.Windows.Data.Binding.IndexerName
  parent: System.Windows.Data.Binding
  isExternal: false
  name: IndexerName
  nameWithType: Binding.IndexerName
  fullName: System.Windows.Data.Binding.IndexerName
- uid: System.Windows.Data.Binding.IsAsync
  parent: System.Windows.Data.Binding
  isExternal: false
  name: IsAsync
  nameWithType: Binding.IsAsync
  fullName: System.Windows.Data.Binding.IsAsync
- uid: System.Windows.Data.Binding.Mode
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Mode
  nameWithType: Binding.Mode
  fullName: System.Windows.Data.Binding.Mode
- uid: System.Windows.Data.BindingMode
  parent: System.Windows.Data
  isExternal: false
  name: BindingMode
  nameWithType: BindingMode
  fullName: System.Windows.Data.BindingMode
- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: Binding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.Binding.NotifyOnSourceUpdated
- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: Binding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.Binding.NotifyOnTargetUpdated
- uid: System.Windows.Data.Binding.NotifyOnValidationError
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
  fullName: System.Windows.Data.Binding.NotifyOnValidationError
- uid: System.Windows.Data.Binding.Path
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Path
  nameWithType: Binding.Path
  fullName: System.Windows.Data.Binding.Path
- uid: System.Windows.PropertyPath
  parent: System.Windows
  isExternal: false
  name: PropertyPath
  nameWithType: PropertyPath
  fullName: System.Windows.PropertyPath
- uid: System.Windows.Data.Binding.RelativeSource
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RelativeSource
  nameWithType: Binding.RelativeSource
  fullName: System.Windows.Data.Binding.RelativeSource
- uid: System.Windows.Data.RelativeSource
  parent: System.Windows.Data
  isExternal: false
  name: RelativeSource
  nameWithType: RelativeSource
  fullName: System.Windows.Data.RelativeSource
- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  parent: System.Windows.Data.Binding
  isExternal: false
  name: SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  nameWithType: Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  fullName: System.Windows.Data.Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
- uid: System.Windows.Data.Binding.ShouldSerializePath
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializePath()
  nameWithType: Binding.ShouldSerializePath()
  fullName: System.Windows.Data.Binding.ShouldSerializePath()
- uid: System.Windows.Data.Binding.ShouldSerializeSource
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeSource()
  nameWithType: Binding.ShouldSerializeSource()
  fullName: System.Windows.Data.Binding.ShouldSerializeSource()
- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeValidationRules()
  nameWithType: Binding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.Binding.ShouldSerializeValidationRules()
- uid: System.Windows.Data.Binding.Source
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Source
  nameWithType: Binding.Source
  fullName: System.Windows.Data.Binding.Source
- uid: System.Windows.Data.Binding.SourceUpdatedEvent
  parent: System.Windows.Data.Binding
  isExternal: false
  name: SourceUpdatedEvent
  nameWithType: Binding.SourceUpdatedEvent
  fullName: System.Windows.Data.Binding.SourceUpdatedEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Data.Binding.TargetUpdatedEvent
  parent: System.Windows.Data.Binding
  isExternal: false
  name: TargetUpdatedEvent
  nameWithType: Binding.TargetUpdatedEvent
  fullName: System.Windows.Data.Binding.TargetUpdatedEvent
- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: Binding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.Binding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.UpdateSourceExceptionFilterCallback
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceExceptionFilterCallback
  nameWithType: UpdateSourceExceptionFilterCallback
  fullName: System.Windows.Data.UpdateSourceExceptionFilterCallback
- uid: System.Windows.Data.Binding.UpdateSourceTrigger
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
  fullName: System.Windows.Data.Binding.UpdateSourceTrigger
- uid: System.Windows.Data.UpdateSourceTrigger
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: UpdateSourceTrigger
  fullName: System.Windows.Data.UpdateSourceTrigger
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnDataErrors
- uid: System.Windows.Data.Binding.ValidatesOnExceptions
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
  fullName: System.Windows.Data.Binding.ValidatesOnExceptions
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.Binding.ValidationRules
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidationRules
  nameWithType: Binding.ValidationRules
  fullName: System.Windows.Data.Binding.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.Binding.XmlNamespaceManagerProperty
  parent: System.Windows.Data.Binding
  isExternal: false
  name: XmlNamespaceManagerProperty
  nameWithType: Binding.XmlNamespaceManagerProperty
  fullName: System.Windows.Data.Binding.XmlNamespaceManagerProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Data.Binding.XPath
  parent: System.Windows.Data.Binding
  isExternal: false
  name: XPath
  nameWithType: Binding.XPath
  fullName: System.Windows.Data.Binding.XPath
- uid: System.Windows.Data.Binding.#ctor*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Binding
  nameWithType: Binding.Binding
- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddSourceUpdatedHandler
  nameWithType: Binding.AddSourceUpdatedHandler
- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddTargetUpdatedHandler
  nameWithType: Binding.AddTargetUpdatedHandler
- uid: System.Windows.Data.Binding.AsyncState*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AsyncState
  nameWithType: Binding.AsyncState
- uid: System.Windows.Data.Binding.BindsDirectlyToSource*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
- uid: System.Windows.Data.Binding.Converter*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Converter
  nameWithType: Binding.Converter
- uid: System.Windows.Data.Binding.ConverterCulture*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
- uid: System.Windows.Data.Binding.ConverterParameter*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
- uid: System.Windows.Data.Binding.ElementName*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ElementName
  nameWithType: Binding.ElementName
- uid: System.Windows.Data.Binding.GetXmlNamespaceManager*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: GetXmlNamespaceManager
  nameWithType: Binding.GetXmlNamespaceManager
- uid: System.Windows.Data.Binding.IsAsync*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: IsAsync
  nameWithType: Binding.IsAsync
- uid: System.Windows.Data.Binding.Mode*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Mode
  nameWithType: Binding.Mode
- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: Binding.NotifyOnSourceUpdated
- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: Binding.NotifyOnTargetUpdated
- uid: System.Windows.Data.Binding.NotifyOnValidationError*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
- uid: System.Windows.Data.Binding.Path*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Path
  nameWithType: Binding.Path
- uid: System.Windows.Data.Binding.RelativeSource*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RelativeSource
  nameWithType: Binding.RelativeSource
- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveSourceUpdatedHandler
  nameWithType: Binding.RemoveSourceUpdatedHandler
- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveTargetUpdatedHandler
  nameWithType: Binding.RemoveTargetUpdatedHandler
- uid: System.Windows.Data.Binding.SetXmlNamespaceManager*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: SetXmlNamespaceManager
  nameWithType: Binding.SetXmlNamespaceManager
- uid: System.Windows.Data.Binding.ShouldSerializePath*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializePath
  nameWithType: Binding.ShouldSerializePath
- uid: System.Windows.Data.Binding.ShouldSerializeSource*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeSource
  nameWithType: Binding.ShouldSerializeSource
- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeValidationRules
  nameWithType: Binding.ShouldSerializeValidationRules
- uid: System.Windows.Data.Binding.Source*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Source
  nameWithType: Binding.Source
- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: Binding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.Binding.UpdateSourceTrigger*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
- uid: System.Windows.Data.Binding.ValidatesOnExceptions*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.Binding.ValidationRules*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidationRules
  nameWithType: Binding.ValidationRules
- uid: System.Windows.Data.Binding.XPath*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: XPath
  nameWithType: Binding.XPath
