### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.HostProtectionAttribute
  id: HostProtectionAttribute
  children:
  - System.Security.Permissions.HostProtectionAttribute.#ctor
  - System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.HostProtectionAttribute.CreatePermission
  - System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  - System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  - System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  - System.Security.Permissions.HostProtectionAttribute.Resources
  - System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  - System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  - System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  - System.Security.Permissions.HostProtectionAttribute.SharedState
  - System.Security.Permissions.HostProtectionAttribute.Synchronization
  - System.Security.Permissions.HostProtectionAttribute.UI
  langs:
  - csharp
  name: HostProtectionAttribute
  nameWithType: HostProtectionAttribute
  fullName: System.Security.Permissions.HostProtectionAttribute
  type: Class
  summary: "Permite o uso de ações de segurança declarativa para determinar os requisitos de proteção de host. Essa classe não pode ser herdada."
  remarks: "Esse atributo afeta somente os aplicativos não gerenciados que hospedam o comuns language runtime e implementar proteção de host, como o SQL Server. Se o código for executado em um aplicativo cliente ou em um servidor que não seja protegido pelo host, o atributo &quot;Elimine&quot;; não é detectado e, portanto, não é aplicada. Quando aplicada, os resultados de ação de segurança na criação de uma demanda de link baseiam nos recursos de host expõe a classe ou método.      > [!IMPORTANT] > A finalidade deste atributo é para impor a programação orientações do modelo específico do host, não o comportamento de segurança.  Embora uma demanda de link é usada para verificar quanto à conformidade com os requisitos do modelo de programação, o HostProtectionAttribute não é uma permissão de segurança.       Se o host não tem requisitos de modelo de programação, as demandas de link não ocorrerá.       Este atributo identifica o seguinte:-métodos ou classes que não coincidem com o host de programação do modelo, mas são benignas.      -Métodos ou classes que não coincidem com o modelo de programação de host e podem desestabilizar o código do usuário do servidor gerenciado.      -Métodos ou classes que não coincidem com o host de programação de modelo e podem levar a uma desestabilização do próprio processo do servidor.      > [!NOTE] > Se você estiver criando uma biblioteca de classe deve ser chamada por aplicativos que podem ser executadas em um ambiente de host protegido, você deve aplicar esse atributo para os membros que expõem <xref:System.Security.Permissions.HostProtectionResource>categorias de recurso.</xref:System.Security.Permissions.HostProtectionResource> Membros da biblioteca de classe do .NET Framework com esse atributo causam apenas o chamador imediato a ser verificada.  O membro da biblioteca deve também fazer com que uma verificação de seu chamador imediato da mesma maneira.      > [!NOTE] > Não use o [Ngen.exe (gerador de imagem nativa)](~/add/includes/ajax-current-ext-md.md) para criar uma imagem nativa de assemblies que são protegidos pelo HostProtectionAttribute. Em um ambiente de confiança total, a imagem é sempre carregada, sem considerar o HostProtectionAttribute, e em um ambiente de confiança parcial, a imagem não está carregada."
  example:
  - "The following code example illustrates the use of the HostProtectionAttribute attribute with a variety of <xref:System.Security.Permissions.HostProtectionResource> values.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/add/codesnippet/csharp/t-system.security.permis_7_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/add/codesnippet/cpp/t-system.security.permis_7_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/add/codesnippet/visualbasic/t-system.security.permis_7_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class HostProtectionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor
  id: '#ctor'
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: HostProtectionAttribute()
  nameWithType: HostProtectionAttribute.HostProtectionAttribute()
  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Permissions.HostProtectionAttribute&quot;> </xref> classe com valores padrão."
  remarks: "Este construtor cria um <xref:System.Security.Permissions.HostProtectionAttribute>com todas as propriedades Boolianas definidas como `false`.</xref:System.Security.Permissions.HostProtectionAttribute>"
  syntax:
    content: public HostProtectionAttribute ();
    parameters: []
  overload: System.Security.Permissions.HostProtectionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: HostProtectionAttribute(SecurityAction)
  nameWithType: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Permissions.HostProtectionAttribute&quot;> </xref> classe com especificado <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> valor."
  remarks: "Este construtor não deve ser usado. Ele é destinado ao uso de infraestrutura."
  syntax:
    content: public HostProtectionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "Uma da <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> valores."
  overload: System.Security.Permissions.HostProtectionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>action</code>is not <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: HostProtectionAttribute.CreatePermission()
  fullName: System.Security.Permissions.HostProtectionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria e retorna uma nova permissão de proteção de host."
  remarks: "Esse método deve ser chamado somente pelo sistema de segurança, nunca pelo código do aplicativo.       Em tempo de compilação, atributos convertem declarações de segurança para um formato serializado em metadados. Dados de segurança declarativa em metadados são criados a permissão correspondente para o atributo que este método retorna."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Um <xref href=&quot;System.Security.IPermission&quot;> </xref> que corresponde ao atributo atual."
  overload: System.Security.Permissions.HostProtectionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  id: ExternalProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: ExternalProcessMgmt
  nameWithType: HostProtectionAttribute.ExternalProcessMgmt
  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define um valor que indica se o gerenciamento de processo externo é exposto."
  remarks: "Código que expõe gerenciamento de processo externo pode criar ou destruir a outros processos."
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the ExternalProcessMgmt property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/add/codesnippet/csharp/p-system.security.permis_2_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/add/codesnippet/cpp/p-system.security.permis_2_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/add/codesnippet/visualbasic/p-system.security.permis_2_1.vb)]"
  syntax:
    content: public bool ExternalProcessMgmt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o gerenciamento de processo externo é exposto; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  id: ExternalThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: ExternalThreading
  nameWithType: HostProtectionAttribute.ExternalThreading
  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define um valor que indica se threading externo é exposto."
  remarks: "Código que expõe threading externo cria ou manipula threads que não seja o seu próprio, que podem ser prejudiciais ao host."
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the ExternalThreading property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/csharp/p-system.security.permis_8_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/cpp/p-system.security.permis_8_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/visualbasic/p-system.security.permis_8_1.vb)]"
  syntax:
    content: public bool ExternalThreading { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se for exposto threading externo; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.ExternalThreading*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  id: MayLeakOnAbort
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: MayLeakOnAbort
  nameWithType: HostProtectionAttribute.MayLeakOnAbort
  fullName: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define um valor que indica se recursos podem causar vazamento de memória se a operação será encerrada."
  remarks: "Código pode causar uma perda de recursos no encerramento, se não protegido por um identificador seguro ou alguma outra maneira de garantir a versão de recursos."
  syntax:
    content: public bool MayLeakOnAbort { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os recursos podem causar vazamento de memória no término; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.Resources
  id: Resources
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: Resources
  nameWithType: HostProtectionAttribute.Resources
  fullName: System.Security.Permissions.HostProtectionAttribute.Resources
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define os sinalizadores que especificam as categorias de funcionalidade que são potencialmente prejudiciais para o host."
  remarks: "O <xref:System.Security.Permissions.HostProtectionResource>sinalizadores de especificam os recursos expostos pelo método ou classe potencialmente prejudiciais para o host.</xref:System.Security.Permissions.HostProtectionResource>"
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the Resources property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/csharp/p-system.security.permis_17_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/cpp/p-system.security.permis_17_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/visualbasic/p-system.security.permis_17_1.vb)]"
  syntax:
    content: public System.Security.Permissions.HostProtectionResource Resources { get; set; }
    return:
      type: System.Security.Permissions.HostProtectionResource
      description: "Uma combinação bit a bit do <xref href=&quot;System.Security.Permissions.HostProtectionResource&quot;> </xref> valores. O padrão é <xref href=&quot;System.Security.Permissions.HostProtectionResource&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.Resources*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  id: SecurityInfrastructure
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SecurityInfrastructure
  nameWithType: HostProtectionAttribute.SecurityInfrastructure
  fullName: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define um valor que indica se a infraestrutura de segurança é exposta."
  remarks: "O uso de um <xref:System.Security.Principal.WindowsIdentity>objeto representar um usuário é um exemplo de exposição a infraestrutura de segurança.</xref:System.Security.Principal.WindowsIdentity>"
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SecurityInfrastructure property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/add/codesnippet/csharp/p-system.security.permis_19_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/add/codesnippet/cpp/p-system.security.permis_19_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/add/codesnippet/visualbasic/p-system.security.permis_19_1.vb)]"
  syntax:
    content: public bool SecurityInfrastructure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a infraestrutura de segurança é exposta; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  id: SelfAffectingProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SelfAffectingProcessMgmt
  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt
  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define um valor que indica se a opção automática que afetam o gerenciamento de processo é exposto."
  remarks: "Auto afetar o código de gerenciamento de processo pode sair do processo atual, encerrando o servidor."
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SelfAffectingProcessMgmt property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/csharp/p-system.security.permis_26_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/cpp/p-system.security.permis_26_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/visualbasic/p-system.security.permis_26_1.vb)]"
  syntax:
    content: public bool SelfAffectingProcessMgmt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se for exposto automática que afetam o gerenciamento de processo; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  id: SelfAffectingThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SelfAffectingThreading
  nameWithType: HostProtectionAttribute.SelfAffectingThreading
  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define um valor que indica se afetar automaticamente threading é exposto."
  remarks: "Self afetar threading manipula os threads de forma que afeta apenas o código do usuário."
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SelfAffectingThreading property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/csharp/p-system.security.permis_3_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/cpp/p-system.security.permis_3_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/visualbasic/p-system.security.permis_3_1.vb)]"
  syntax:
    content: public bool SelfAffectingThreading { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>se auto afetando threading é exposto; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.SharedState
  id: SharedState
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SharedState
  nameWithType: HostProtectionAttribute.SharedState
  fullName: System.Security.Permissions.HostProtectionAttribute.SharedState
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define um valor que indica se o estado compartilhado é exposto."
  remarks: "Quando for SharedState `true`, ele indica que o estado é exposto que pode ser compartilhado entre threads."
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SharedState property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/csharp/p-system.security.permis_15_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/cpp/p-system.security.permis_15_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/visualbasic/p-system.security.permis_15_1.vb)]"
  syntax:
    content: public bool SharedState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o estado compartilhado é exposto; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.SharedState*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization
  id: Synchronization
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: Synchronization
  nameWithType: HostProtectionAttribute.Synchronization
  fullName: System.Security.Permissions.HostProtectionAttribute.Synchronization
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define um valor que indica se a sincronização é exposta."
  remarks: ''
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the Synchronization property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/csharp/p-system.security.permis_4_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/cpp/p-system.security.permis_4_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/visualbasic/p-system.security.permis_4_1.vb)]"
  syntax:
    content: public bool Synchronization { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a sincronização é exposta; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.Synchronization*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.UI
  id: UI
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: UI
  nameWithType: HostProtectionAttribute.UI
  fullName: System.Security.Permissions.HostProtectionAttribute.UI
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define um valor que indica se a interface do usuário é exposta."
  remarks: ''
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the UI property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/csharp/p-system.security.permis_12_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/cpp/p-system.security.permis_12_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/visualbasic/p-system.security.permis_12_1.vb)]"
  syntax:
    content: public bool UI { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a interface do usuário é exposta; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.UI*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: HostProtectionAttribute()
  nameWithType: HostProtectionAttribute.HostProtectionAttribute()
  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute()
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: HostProtectionAttribute(SecurityAction)
  nameWithType: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: HostProtectionAttribute.CreatePermission()
  fullName: System.Security.Permissions.HostProtectionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalProcessMgmt
  nameWithType: HostProtectionAttribute.ExternalProcessMgmt
  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalThreading
  nameWithType: HostProtectionAttribute.ExternalThreading
  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: MayLeakOnAbort
  nameWithType: HostProtectionAttribute.MayLeakOnAbort
  fullName: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
- uid: System.Security.Permissions.HostProtectionAttribute.Resources
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Resources
  nameWithType: HostProtectionAttribute.Resources
  fullName: System.Security.Permissions.HostProtectionAttribute.Resources
- uid: System.Security.Permissions.HostProtectionResource
  parent: System.Security.Permissions
  isExternal: false
  name: HostProtectionResource
  nameWithType: HostProtectionResource
  fullName: System.Security.Permissions.HostProtectionResource
- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SecurityInfrastructure
  nameWithType: HostProtectionAttribute.SecurityInfrastructure
  fullName: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingProcessMgmt
  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt
  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingThreading
  nameWithType: HostProtectionAttribute.SelfAffectingThreading
  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
- uid: System.Security.Permissions.HostProtectionAttribute.SharedState
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SharedState
  nameWithType: HostProtectionAttribute.SharedState
  fullName: System.Security.Permissions.HostProtectionAttribute.SharedState
- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Synchronization
  nameWithType: HostProtectionAttribute.Synchronization
  fullName: System.Security.Permissions.HostProtectionAttribute.Synchronization
- uid: System.Security.Permissions.HostProtectionAttribute.UI
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: UI
  nameWithType: HostProtectionAttribute.UI
  fullName: System.Security.Permissions.HostProtectionAttribute.UI
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: HostProtectionAttribute
  nameWithType: HostProtectionAttribute.HostProtectionAttribute
- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: HostProtectionAttribute.CreatePermission
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalProcessMgmt
  nameWithType: HostProtectionAttribute.ExternalProcessMgmt
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalThreading
  nameWithType: HostProtectionAttribute.ExternalThreading
- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: MayLeakOnAbort
  nameWithType: HostProtectionAttribute.MayLeakOnAbort
- uid: System.Security.Permissions.HostProtectionAttribute.Resources*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Resources
  nameWithType: HostProtectionAttribute.Resources
- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SecurityInfrastructure
  nameWithType: HostProtectionAttribute.SecurityInfrastructure
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingProcessMgmt
  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingThreading
  nameWithType: HostProtectionAttribute.SelfAffectingThreading
- uid: System.Security.Permissions.HostProtectionAttribute.SharedState*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SharedState
  nameWithType: HostProtectionAttribute.SharedState
- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Synchronization
  nameWithType: HostProtectionAttribute.Synchronization
- uid: System.Security.Permissions.HostProtectionAttribute.UI*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: UI
  nameWithType: HostProtectionAttribute.UI
