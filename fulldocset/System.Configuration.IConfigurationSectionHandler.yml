### YamlMime:ManagedReference
items:
- uid: System.Configuration.IConfigurationSectionHandler
  id: IConfigurationSectionHandler
  children:
  - System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  langs:
  - csharp
  name: IConfigurationSectionHandler
  nameWithType: IConfigurationSectionHandler
  fullName: System.Configuration.IConfigurationSectionHandler
  type: Interface
  summary: "Controla o acesso a determinadas seções de configuração."
  remarks: "**Importante** IConfigurationSectionHandler está obsoleto no .NET Framework 2.0 e posterior. No entanto, porque ela é usada internamente, ele foi mantido. Você pode encontrar um exemplo em [como: criar seções de configuração personalizadas usando IConfigurationSectionHandler](~/add/includes/ajax-current-ext-md.md). Se você usar o exemplo anterior, compile-o com o .NET Framework versão 1.0 ou 1.1.       No .NET Framework versão 2.0 e posterior, em vez disso, deve derivar do <xref:System.Configuration.ConfigurationSection>classe para implementar o manipulador de seção de configuração relacionados.</xref:System.Configuration.ConfigurationSection> Você pode encontrar um exemplo em [como: criar seções de configuração personalizadas usando ConfigurationSection](~/add/includes/ajax-current-ext-md.md).       Instâncias da classe IConfigurationSectionHandler devem ser thread seguro e sem monitoração de estado. O <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>método deve ser chamado de vários threads simultaneamente.</xref:System.Configuration.IConfigurationSectionHandler.Create%2A>       Além disso, o objeto de configuração gerado pelo <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>método deve ser thread-safe e imutável.</xref:System.Configuration.IConfigurationSectionHandler.Create%2A> Como os objetos de configuração são armazenados em cache pelo sistema de configuração, é importante não modificar o argumento pai para o <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>método.</xref:System.Configuration.IConfigurationSectionHandler.Create%2A> Por exemplo, se o valor de retorno de <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>é apenas uma pequena modificação do pai, as modificações reais devem ser feitas em um clone do pai, não o original.</xref:System.Configuration.IConfigurationSectionHandler.Create%2A>"
  syntax:
    content: public interface IConfigurationSectionHandler
  implements: []
  platform:
  - net462
- uid: System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  id: Create(System.Object,System.Object,System.Xml.XmlNode)
  parent: System.Configuration.IConfigurationSectionHandler
  langs:
  - csharp
  name: Create(Object,Object,XmlNode)
  nameWithType: IConfigurationSectionHandler.Create(Object,Object,XmlNode)
  fullName: System.Configuration.IConfigurationSectionHandler.Create(Object,Object,XmlNode)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Cria um manipulador de seção de configuração."
  remarks: "Instâncias de <xref:System.Configuration.IConfigurationSectionHandler>classe deve ser thread-safe e sem monitoração de estado.</xref:System.Configuration.IConfigurationSectionHandler> O método de criação deve ser chamado de vários threads simultaneamente.       Além disso, o objeto de configuração gerado pelo método de criação deve ser thread seguro e imutável. Porque o sistema de configuração armazenado em cache os objetos de configuração, é importante não modificar o argumento pai para criar. Por exemplo, se o valor de retorno de criação é apenas uma pequena modificação do pai, devem ser feitas modificações reais em um clone do pai, não o original."
  syntax:
    content: public object Create (object parent, object configContext, System.Xml.XmlNode section);
    parameters:
    - id: parent
      type: System.Object
      description: "Objeto pai."
    - id: configContext
      type: System.Object
      description: "Objeto de contexto de configuração."
    - id: section
      type: System.Xml.XmlNode
      description: "Nó XML da seção."
    return:
      type: System.Object
      description: "O objeto do manipulador de seção criado."
  overload: System.Configuration.IConfigurationSectionHandler.Create*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  parent: System.Configuration.IConfigurationSectionHandler
  isExternal: false
  name: Create(Object,Object,XmlNode)
  nameWithType: IConfigurationSectionHandler.Create(Object,Object,XmlNode)
  fullName: System.Configuration.IConfigurationSectionHandler.Create(Object,Object,XmlNode)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Configuration.IConfigurationSectionHandler.Create*
  parent: System.Configuration.IConfigurationSectionHandler
  isExternal: false
  name: Create
  nameWithType: IConfigurationSectionHandler.Create
