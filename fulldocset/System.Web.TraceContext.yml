### YamlMime:ManagedReference
items:
- uid: System.Web.TraceContext
  id: TraceContext
  children:
  - System.Web.TraceContext.#ctor(System.Web.HttpContext)
  - System.Web.TraceContext.IsEnabled
  - System.Web.TraceContext.TraceFinished
  - System.Web.TraceContext.TraceMode
  - System.Web.TraceContext.Warn(System.String)
  - System.Web.TraceContext.Warn(System.String,System.String)
  - System.Web.TraceContext.Warn(System.String,System.String,System.Exception)
  - System.Web.TraceContext.Write(System.String)
  - System.Web.TraceContext.Write(System.String,System.String)
  - System.Web.TraceContext.Write(System.String,System.String,System.Exception)
  langs:
  - csharp
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
  type: Class
  summary: "Captura e apresenta detalhes de execução de uma solicitação da Web. Essa classe não pode ser herdada."
  remarks: "Você pode usar essa classe para acrescentar mensagens às categorias de rastreamento específico. Por exemplo, se você estiver criando uma instância do <xref:System.Web.UI.WebControls.Calendar>classe para seu aplicativo, você pode incluir a mensagem de rastreamento &quot;Começando a processar&quot; em um procedimento de renderização e &quot;Gerar evento OnChange&quot; em um procedimento de manipulador de eventos.</xref:System.Web.UI.WebControls.Calendar>       Você também pode usar a classe TraceContext para obter um conjunto de registros de rastreamento no final da execução da solicitação para processamento personalizado. Para obter mais informações, consulte [visão geral do rastreamento ASP.NET](~/add/includes/ajax-current-ext-md.md).       Para habilitar o rastreamento, defina o `Trace` atributo no [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) diretiva ou <xref:System.Web.TraceContext.IsEnabled%2A>propriedade `true`.</xref:System.Web.TraceContext.IsEnabled%2A> Quando o rastreamento estiver habilitado, além de mostrar o conteúdo de rastreamento fornecida pelo usuário, a <xref:System.Web.UI.Page>classe inclui automaticamente os dados de desempenho, informações de estrutura de árvore de controle e conteúdo de gerenciamento de estado para cada solicitação.</xref:System.Web.UI.Page>"
  syntax:
    content: public sealed class TraceContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.TraceContext.#ctor(System.Web.HttpContext)
  id: '#ctor(System.Web.HttpContext)'
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: TraceContext(HttpContext)
  nameWithType: TraceContext.TraceContext(HttpContext)
  fullName: System.Web.TraceContext.TraceContext(HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.TraceContext&quot;> </xref> classe."
  syntax:
    content: public TraceContext (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Um <xref href=&quot;System.Web.HttpContext&quot;> </xref> que contém informações sobre a solicitação da Web atual."
  overload: System.Web.TraceContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.IsEnabled
  id: IsEnabled
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: IsEnabled
  nameWithType: TraceContext.IsEnabled
  fullName: System.Web.TraceContext.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define um valor que indica se o rastreamento está habilitado para a solicitação da Web atual."
  remarks: "Use este sinalizador para verificar se seu aplicativo ou página deve gerar informações de rastreamento antes de qualquer coisa grava no log de rastreamento.       O valor da propriedade IsEnabled depende das configurações na seção do `system.web` seção de configuração e o valor da `trace` atributo da diretiva. A opção de rastreamento definida na diretiva de página tem precedência sobre a opção definida no arquivo de configuração. Definir o valor de IsEnabled programaticamente tem precedência sobre o atributo da diretiva de página e a configuração.      > [!NOTE] > Se você definir a propriedade IsEnabled como `true` explicitamente para um aplicativo inteiro, você deve definir essa propriedade `false` para qualquer página no aplicativo para o qual deseja que as informações de rastreamento exibidas."
  example:
  - "The following code example demonstrates how you can determine whether tracing is enabled for a page. The code iterates through the rows in a dataset, writing trace statements for each row in that dataset.  \n  \n [!code-cs[Classic TraceContext.IsEnabled Example#1](~/add/codesnippet/csharp/p-system.web.tracecontex_4_1.cs)]\n [!code-vb[Classic TraceContext.IsEnabled Example#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_4_1.vb)]"
  syntax:
    content: public bool IsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o rastreamento estiver habilitado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.TraceContext.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.TraceFinished
  id: TraceFinished
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: TraceFinished
  nameWithType: TraceContext.TraceFinished
  fullName: System.Web.TraceContext.TraceFinished
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Emitindo o <xref href=&quot;System.Web.TraceContext&quot;> </xref> objeto para expor o rastreamento de mensagens após a coleta de todas as informações de solicitação."
  remarks: "O evento TraceFinished é gerado durante o `EndRequest` estágio de processamento de solicitação HTTP. Ele é gerado por uma <xref:System.Web.TraceContext>objeto após a coleta de todas as informações de solicitação, para expor a coleção de <xref:System.Web.TraceContextRecord>mensagens registrado <xref:System.Web.TraceContextEventHandler>delegados.</xref:System.Web.TraceContextEventHandler> </xref:System.Web.TraceContextRecord> </xref:System.Web.TraceContext>"
  example:
  - "The following code example demonstrates how you can register a <xref:System.Web.TraceContextEventHandler> to handle the TraceFinished event. In this example, the delegate iterates through the trace messages and writes them to the response stream; however, you could write the same information to a database or a profiling tool consumer.  \n  \n [!code-cs[System.Web.Trace_3#1](~/add/codesnippet/csharp/e-system.web.tracecontex_1.aspx)]\n [!code-vb[System.Web.Trace_3#1](~/add/codesnippet/visualbasic/e-system.web.tracecontex_1.aspx)]"
  syntax:
    content: public event System.Web.TraceContextEventHandler TraceFinished;
    return:
      type: System.Web.TraceContextEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.TraceMode
  id: TraceMode
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: TraceMode
  nameWithType: TraceContext.TraceMode
  fullName: System.Web.TraceContext.TraceMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define a ordem de classificação na qual as mensagens de rastreamento devem ser gerados para um navegador solicitante."
  remarks: "Mensagens de rastreamento podem ser classificadas na ordem em que elas foram processadas ou em ordem alfabética por categoria definida pelo usuário."
  example:
  - "The following code example demonstrates how you can sort a page's trace statements alphabetically by the categories that you have assigned to the statements.  \n  \n [!code-cs[Classic TraceContext.TraceMode Example#1](~/add/codesnippet/csharp/p-system.web.tracecontex_5_1.aspx)]\n [!code-vb[Classic TraceContext.TraceMode Example#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_5_1.aspx)]"
  syntax:
    content: public System.Web.TraceMode TraceMode { get; set; }
    return:
      type: System.Web.TraceMode
      description: "Uma da <xref href=&quot;System.Web.TraceMode&quot;> </xref> valores de enumeração. O padrão é a configuração especificada pelo <xref uid=&quot;langword_csharp_traceMode&quot; name=&quot;traceMode&quot; href=&quot;&quot;> </xref> atributo o <xref uid=&quot;langword_csharp_trace&quot; name=&quot;trace&quot; href=&quot;&quot;> </xref> seção de um arquivo de configuração, cujo padrão é <xref uid=&quot;langword_csharp_SortByTime&quot; name=&quot;SortByTime&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.TraceContext.TraceMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado não é um do <xref href=&quot;System.Web.TraceMode&quot;> </xref> valores de enumeração."
  platform:
  - net462
- uid: System.Web.TraceContext.Warn(System.String)
  id: Warn(System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Warn(String)
  nameWithType: TraceContext.Warn(String)
  fullName: System.Web.TraceContext.Warn(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Grava uma mensagem de rastreamento no log de rastreamento. Todos os avisos aparecem no log como texto vermelho."
  remarks: "Toda vez que o <xref:System.Web.TraceContext.Warn%2A>método é chamado, um <xref:System.Web.TraceContext>mensagem de rastreamento é adicionada ao <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>mensagens de coleção, que é acessível ao manipular o <xref:System.Web.TraceContext.TraceFinished>evento.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Warn%2A> A mensagem foi adicionada com seu <xref:System.Web.TraceContextRecord.IsWarning%2A>propriedade definida como `true` e sua <xref:System.Web.TraceContextRecord.ErrorInfo%2A>propriedade definida como `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  syntax:
    content: public void Warn (string message);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem de rastreamento para gravar no log."
  overload: System.Web.TraceContext.Warn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Warn(System.String,System.String)
  id: Warn(System.String,System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Warn(String,String)
  nameWithType: TraceContext.Warn(String,String)
  fullName: System.Web.TraceContext.Warn(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Grava informações no log de rastreamento, incluindo quaisquer categorias definidas pelo usuário de rastreamento e mensagens de rastreamento. Todos os avisos aparecem no log como texto vermelho."
  remarks: "Toda vez que o <xref:System.Web.TraceContext.Warn%2A>método é chamado, um <xref:System.Web.TraceContext>mensagem de rastreamento é adicionada ao <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>mensagens de coleção, que é acessível ao manipular o <xref:System.Web.TraceContext.TraceFinished>evento.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Warn%2A> A mensagem foi adicionada com seu <xref:System.Web.TraceContextRecord.IsWarning%2A>propriedade definida como `true` e sua <xref:System.Web.TraceContextRecord.ErrorInfo%2A>propriedade definida como `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  syntax:
    content: public void Warn (string category, string message);
    parameters:
    - id: category
      type: System.String
      description: "A categoria de rastreamento que recebe a mensagem."
    - id: message
      type: System.String
      description: "A mensagem de rastreamento para gravar no log."
  overload: System.Web.TraceContext.Warn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Warn(System.String,System.String,System.Exception)
  id: Warn(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Warn(String,String,Exception)
  nameWithType: TraceContext.Warn(String,String,Exception)
  fullName: System.Web.TraceContext.Warn(String,String,Exception)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Grava informações no log de rastreamento, incluindo quaisquer categorias definidas pelo usuário, as mensagens de rastreamento e informações de erro de rastreamento. Todos os avisos aparecem no log como texto vermelho."
  remarks: "Toda vez que o <xref:System.Web.TraceContext.Warn%2A>método é chamado, um <xref:System.Web.TraceContext>mensagem de rastreamento é adicionada ao <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>mensagens de coleção, que é acessível ao manipular o <xref:System.Web.TraceContext.TraceFinished>evento.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Warn%2A> A mensagem foi adicionada com seu <xref:System.Web.TraceContextRecord.IsWarning%2A>propriedade definida como `true`e o <xref:System.Web.TraceContextRecord.ErrorInfo%2A>propriedade é definida para o objeto passado `errorInfo` parâmetro.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  example:
  - "The following code example demonstrates how to call the <xref:System.Web.TraceContext.Write%2A> method to write an error trace message to the trace log. In this example, different exceptions are traced as errors and warnings. When the page throws an <xref:System.ArgumentException>, it writes a warning message using the <xref:System.Web.TraceContext.Warn%2A> method. When the page throws an <xref:System.InvalidOperationException>, it writes an error message using the <xref:System.Web.TraceContext.Write%2A> method.  \n  \n [!code-cs[System.Web.Trace_4#1](~/add/codesnippet/csharp/m-system.web.tracecontex_1_1.aspx)]\n [!code-vb[System.Web.Trace_4#1](~/add/codesnippet/visualbasic/m-system.web.tracecontex_1_1.aspx)]"
  syntax:
    content: public void Warn (string category, string message, Exception errorInfo);
    parameters:
    - id: category
      type: System.String
      description: "A categoria de rastreamento que recebe a mensagem."
    - id: message
      type: System.String
      description: "A mensagem de rastreamento para gravar no log."
    - id: errorInfo
      type: System.Exception
      description: "Um <xref:System.Exception>que contém informações sobre o erro.</xref:System.Exception>"
  overload: System.Web.TraceContext.Warn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Write(System.String)
  id: Write(System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Write(String)
  nameWithType: TraceContext.Write(String)
  fullName: System.Web.TraceContext.Write(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Grava uma mensagem de rastreamento no log de rastreamento."
  remarks: "Toda vez que o <xref:System.Web.TraceContext.Write%2A>método é chamado, um <xref:System.Web.TraceContext>mensagem de rastreamento é adicionada ao <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>mensagens de coleção, que é acessível ao manipular o <xref:System.Web.TraceContext.TraceFinished>evento.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Write%2A> A mensagem foi adicionada com seu <xref:System.Web.TraceContextRecord.IsWarning%2A>propriedade definida como `false` e sua <xref:System.Web.TraceContextRecord.ErrorInfo%2A>propriedade definida como `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  syntax:
    content: public void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem de rastreamento para gravar no log."
  overload: System.Web.TraceContext.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Write(System.String,System.String)
  id: Write(System.String,System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Write(String,String)
  nameWithType: TraceContext.Write(String,String)
  fullName: System.Web.TraceContext.Write(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Grava informações de rastreamento no log de rastreamento, incluindo uma mensagem e as categorias definidas pelo usuário."
  remarks: "Toda vez que o <xref:System.Web.TraceContext.Write%2A>método é chamado, um <xref:System.Web.TraceContext>mensagem de rastreamento é adicionada ao <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>mensagens de coleção, que é acessível ao manipular o <xref:System.Web.TraceContext.TraceFinished>evento.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Write%2A> A mensagem foi adicionada com seu <xref:System.Web.TraceContextRecord.IsWarning%2A>propriedade definida como `false` e sua <xref:System.Web.TraceContextRecord.ErrorInfo%2A>propriedade definida como `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  example:
  - "The following code example demonstrates how to call the Write method to write an error trace message to the trace log. In this example, the delegate iterates through the trace messages and writes them as an HTML table; however, you can write the same information to a database or a profiling tool consumer.  \n  \n [!code-cs[System.Web.Trace_5#1](~/add/codesnippet/csharp/m-system.web.tracecontex_0_1.aspx)]\n [!code-vb[System.Web.Trace_5#1](~/add/codesnippet/visualbasic/m-system.web.tracecontex_0_1.aspx)]"
  syntax:
    content: public void Write (string category, string message);
    parameters:
    - id: category
      type: System.String
      description: "A categoria de rastreamento que recebe a mensagem."
    - id: message
      type: System.String
      description: "A mensagem de rastreamento para gravar no log."
  overload: System.Web.TraceContext.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Write(System.String,System.String,System.Exception)
  id: Write(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Write(String,String,Exception)
  nameWithType: TraceContext.Write(String,String,Exception)
  fullName: System.Web.TraceContext.Write(String,String,Exception)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Grava informações no log de rastreamento, incluindo quaisquer categorias definidas pelo usuário, as mensagens de rastreamento e informações de erro de rastreamento."
  remarks: "Toda vez que o <xref:System.Web.TraceContext.Write%2A>método é chamado, um <xref:System.Web.TraceContext>mensagem de rastreamento é adicionada ao <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>mensagens de coleção, que é acessível ao manipular o <xref:System.Web.TraceContext.TraceFinished>evento.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Write%2A> A mensagem foi adicionada com seu <xref:System.Web.TraceContextRecord.IsWarning%2A>propriedade definida como `false`e o <xref:System.Web.TraceContextRecord.ErrorInfo%2A>propriedade é definida para o objeto passado `errorInfo` parâmetro.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  example:
  - "The following code example demonstrates how to call the Write method to write an error trace message to the trace log. In this example, different exceptions are traced as errors and warnings. When the page throws an <xref:System.ArgumentException>, it writes a warning message using the <xref:System.Web.TraceContext.Warn%2A> method. When the page throws an <xref:System.InvalidOperationException>, it writes an error message using the <xref:System.Web.TraceContext.Write%2A> method.  \n  \n [!code-cs[System.Web.Trace_4#1](~/add/codesnippet/csharp/m-system.web.tracecontex_2_1.aspx)]\n [!code-vb[System.Web.Trace_4#1](~/add/codesnippet/visualbasic/m-system.web.tracecontex_2_1.aspx)]"
  syntax:
    content: public void Write (string category, string message, Exception errorInfo);
    parameters:
    - id: category
      type: System.String
      description: "A categoria de rastreamento que recebe a mensagem."
    - id: message
      type: System.String
      description: "A mensagem de rastreamento para gravar no log."
    - id: errorInfo
      type: System.Exception
      description: "Um <xref:System.Exception>que contém informações sobre o erro.</xref:System.Exception>"
  overload: System.Web.TraceContext.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.TraceContext.#ctor(System.Web.HttpContext)
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceContext(HttpContext)
  nameWithType: TraceContext.TraceContext(HttpContext)
  fullName: System.Web.TraceContext.TraceContext(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.TraceContext.IsEnabled
  parent: System.Web.TraceContext
  isExternal: false
  name: IsEnabled
  nameWithType: TraceContext.IsEnabled
  fullName: System.Web.TraceContext.IsEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.TraceContext.TraceFinished
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceFinished
  nameWithType: TraceContext.TraceFinished
  fullName: System.Web.TraceContext.TraceFinished
- uid: System.Web.TraceContextEventHandler
  parent: System.Web
  isExternal: false
  name: TraceContextEventHandler
  nameWithType: TraceContextEventHandler
  fullName: System.Web.TraceContextEventHandler
- uid: System.Web.TraceContext.TraceMode
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceMode
  nameWithType: TraceContext.TraceMode
  fullName: System.Web.TraceContext.TraceMode
- uid: System.Web.TraceMode
  parent: System.Web
  isExternal: false
  name: TraceMode
  nameWithType: TraceMode
  fullName: System.Web.TraceMode
- uid: System.Web.TraceContext.Warn(System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn(String)
  nameWithType: TraceContext.Warn(String)
  fullName: System.Web.TraceContext.Warn(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.TraceContext.Warn(System.String,System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn(String,String)
  nameWithType: TraceContext.Warn(String,String)
  fullName: System.Web.TraceContext.Warn(String,String)
- uid: System.Web.TraceContext.Warn(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn(String,String,Exception)
  nameWithType: TraceContext.Warn(String,String,Exception)
  fullName: System.Web.TraceContext.Warn(String,String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.TraceContext.Write(System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Write(String)
  nameWithType: TraceContext.Write(String)
  fullName: System.Web.TraceContext.Write(String)
- uid: System.Web.TraceContext.Write(System.String,System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Write(String,String)
  nameWithType: TraceContext.Write(String,String)
  fullName: System.Web.TraceContext.Write(String,String)
- uid: System.Web.TraceContext.Write(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  isExternal: false
  name: Write(String,String,Exception)
  nameWithType: TraceContext.Write(String,String,Exception)
  fullName: System.Web.TraceContext.Write(String,String,Exception)
- uid: System.Web.TraceContext.#ctor*
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext.TraceContext
- uid: System.Web.TraceContext.IsEnabled*
  parent: System.Web.TraceContext
  isExternal: false
  name: IsEnabled
  nameWithType: TraceContext.IsEnabled
- uid: System.Web.TraceContext.TraceMode*
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceMode
  nameWithType: TraceContext.TraceMode
- uid: System.Web.TraceContext.Warn*
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn
  nameWithType: TraceContext.Warn
- uid: System.Web.TraceContext.Write*
  parent: System.Web.TraceContext
  isExternal: false
  name: Write
  nameWithType: TraceContext.Write
