### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MetadataImporter
  id: MetadataImporter
  children:
  - System.ServiceModel.Description.MetadataImporter.Errors
  - System.ServiceModel.Description.MetadataImporter.ImportAllContracts
  - System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints
  - System.ServiceModel.Description.MetadataImporter.KnownContracts
  - System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
  - System.ServiceModel.Description.MetadataImporter.State
  langs:
  - csharp
  name: MetadataImporter
  nameWithType: MetadataImporter
  fullName: System.ServiceModel.Description.MetadataImporter
  type: Class
  summary: "Importa os metadados em &lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt; objetos."
  remarks: "Use uma implementação da classe abstrata MetadataImporter para importar metadados de serviço. Tipos que derivam da classe MetadataImporter implementam o suporte para formatos de metadados de importação que aproveitam o WS-Policy importar lógica em [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)].       Uma implementação de MetadataImporter coleta as expressões de política anexadas aos metadados do serviço em um <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName>objeto.</xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName> O MetadataImporter, em seguida, processa as diretivas como parte da importação de metadados chamando as implementações do <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName>interface o <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName>propriedade.</xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName>       Você pode adicionar suporte para importar novo declarações de política para um MetadataImporter adicionando sua própria implementação do <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName>interface para o <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName>propriedade em uma instância de MetadataImporter.</xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> Como alternativa, você pode registrar a sua extensão de importação de política em seu arquivo de configuração do aplicativo.       O <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>tipo é a implementação da classe abstrata MetadataImporter incluído com [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)].</xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> O <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>tipo importa os metadados WSDL anexado políticas que são empacotadas em um <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>objeto.</xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>       Você pode adicionar suporte para a importação de extensões WSDL Implementando o <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName>interface e, em seguida, adicionar a implementação para o <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName>propriedade em seu <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>instância.</xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> O <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>também pode carregar implementações do <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName>interface registrada no arquivo de configuração de aplicativo.</xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>      > [!NOTE] > Porque o construtor MetadataImporter for interno, você não pode derivar de MetadataImporter nesta versão."
  example:
  - "The following example shows the use of the <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> derived class to import metadata using custom state, checking the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property, compiling imported metadata to managed types and saving the result to a code file.  \n  \n [!code-cs[C_CustomWSDLExtensions#8](~/add/codesnippet/csharp/c_customwsdlextensions.client/client.cs#8)]"
  syntax:
    content: public abstract class MetadataImporter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.Errors
  id: Errors
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: Errors
  nameWithType: MetadataImporter.Errors
  fullName: System.ServiceModel.Description.MetadataImporter.Errors
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém um valor que indica se houve erros ao importar os metadados."
  remarks: "Sempre verifique a propriedade de erros após a importação de metadados e antes de usar os metadados."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Description.MetadataConversionError> Errors { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.MetadataConversionError}
      description: "Uma coleção de <xref href=&quot;System.ServiceModel.Description.MetadataConversionError&quot;> </xref> objetos."
  overload: System.ServiceModel.Description.MetadataImporter.Errors*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts
  id: ImportAllContracts
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: ImportAllContracts()
  nameWithType: MetadataImporter.ImportAllContracts()
  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllContracts()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Quando substituído em uma classe derivada, retorna uma coleção de contratos importados dos metadados."
  syntax:
    content: public abstract System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ContractDescription> ImportAllContracts ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ContractDescription}
      description: "Os contratos importados dos metadados."
  overload: System.ServiceModel.Description.MetadataImporter.ImportAllContracts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints
  id: ImportAllEndpoints
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: ImportAllEndpoints()
  nameWithType: MetadataImporter.ImportAllEndpoints()
  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Quando substituído em uma classe derivada, retorna todos os pontos de extremidade nos metadados."
  remarks: "Implemente o método ImportAllEndpoints para retornar todos os pontos de extremidade de metadados importado. Metadados que foram importados como pontos de extremidade de serviço não podem ser usado para criar um tempo de execução ou exportar os metadados porque os pontos de extremidade importados não contêm nenhuma informação de tipo gerenciado. Para usar os metadados para criar um tempo de execução do cliente ou serviço ou gerar metadados, você deve primeiro gerar e compilar o código a partir dos metadados e usar essas informações de tipo para criar um novo <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName>objeto usando <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</xref:System.ServiceModel.Description.ContractDescription.GetContract%2A> </xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName>"
  syntax:
    content: public abstract System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();
    parameters: []
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Uma coleção de &lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt; objetos que são publicados por um serviço."
  overload: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts
  id: KnownContracts
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: KnownContracts
  nameWithType: MetadataImporter.KnownContracts
  fullName: System.ServiceModel.Description.MetadataImporter.KnownContracts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém um dicionário de contratos pelo nome que o importador conhece."
  remarks: "Use a propriedade KnownContracts para adicionar ou remover descrições de contrato e seus nomes XML associados que pode referenciar o importador."
  syntax:
    content: public System.Collections.Generic.Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription> KnownContracts { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription}
      description: "Um dicionário de contratos listados por nome qualificado de XML."
  overload: System.ServiceModel.Description.MetadataImporter.KnownContracts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
  id: PolicyImportExtensions
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: PolicyImportExtensions
  nameWithType: MetadataImporter.PolicyImportExtensions
  fullName: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém uma coleção de importadores de políticas que o importador de chamadas para declarações de política de processo."
  remarks: "Use a propriedade PolicyImportExtensions para adicionar ou remover importadores de políticas que são invocados para processar as declarações de política nos metadados."
  syntax:
    content: public System.Collections.Generic.KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension> PolicyImportExtensions { get; }
    return:
      type: System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IPolicyImportExtension}
      description: "Uma coleção de importadores de políticas que o <xref href=&quot;System.ServiceModel.Description.MetadataImporter&quot;> </xref> usa para processar as declarações de política."
  overload: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.State
  id: State
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: State
  nameWithType: MetadataImporter.State
  fullName: System.ServiceModel.Description.MetadataImporter.State
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém ou define uma coleção de objetos usados na importação de metadados."
  remarks: "Use o `State` propriedade para adicionar ou remover objetos usados na importação de metadados."
  example:
  - "The following example shows the use of the State property to add a custom <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=fullName> to import data structures in a particular way.  \n  \n [!code-cs[C_CustomWSDLExtensions#8](~/add/codesnippet/csharp/c_customwsdlextensions.client/client.cs#8)]"
  syntax:
    content: public System.Collections.Generic.Dictionary<object,object> State { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.Object,System.Object}
      description: "Um dicionário de objetos por tipo de chave."
  overload: System.ServiceModel.Description.MetadataImporter.State*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Description.MetadataImporter.Errors
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: Errors
  nameWithType: MetadataImporter.Errors
  fullName: System.ServiceModel.Description.MetadataImporter.Errors
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.MetadataConversionError}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<MetadataConversionError>
  nameWithType: Collection<MetadataConversionError>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.MetadataConversionError>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.MetadataConversionError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.MetadataConversionError
    name: MetadataConversionError
    nameWithType: MetadataConversionError
    fullName: MetadataConversionError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: ImportAllContracts()
  nameWithType: MetadataImporter.ImportAllContracts()
  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllContracts()
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ContractDescription>
  nameWithType: Collection<ContractDescription>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: ImportAllEndpoints()
  nameWithType: MetadataImporter.ImportAllEndpoints()
  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints()
- uid: System.ServiceModel.Description.ServiceEndpointCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpointCollection
  nameWithType: ServiceEndpointCollection
  fullName: System.ServiceModel.Description.ServiceEndpointCollection
- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: KnownContracts
  nameWithType: MetadataImporter.KnownContracts
  fullName: System.ServiceModel.Description.MetadataImporter.KnownContracts
- uid: System.Collections.Generic.Dictionary{System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<XmlQualifiedName,ContractDescription>
  nameWithType: Dictionary<XmlQualifiedName,ContractDescription>
  fullName: System.Collections.Generic.Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: XmlQualifiedName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: PolicyImportExtensions
  nameWithType: MetadataImporter.PolicyImportExtensions
  fullName: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
- uid: System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IPolicyImportExtension}
  parent: System.Collections.Generic
  isExternal: false
  name: KeyedByTypeCollection<IPolicyImportExtension>
  nameWithType: KeyedByTypeCollection<IPolicyImportExtension>
  fullName: System.Collections.Generic.KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension>
  spec.csharp:
  - uid: System.Collections.Generic.KeyedByTypeCollection`1
    name: KeyedByTypeCollection
    nameWithType: KeyedByTypeCollection
    fullName: KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.IPolicyImportExtension
    name: IPolicyImportExtension
    nameWithType: IPolicyImportExtension
    fullName: IPolicyImportExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.State
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: State
  nameWithType: MetadataImporter.State
  fullName: System.ServiceModel.Description.MetadataImporter.State
- uid: System.Collections.Generic.Dictionary{System.Object,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<Object,Object>
  nameWithType: Dictionary<Object,Object>
  fullName: System.Collections.Generic.Dictionary<System.Object,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.Object,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.Errors*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: Errors
  nameWithType: MetadataImporter.Errors
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: ImportAllContracts
  nameWithType: MetadataImporter.ImportAllContracts
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: ImportAllEndpoints
  nameWithType: MetadataImporter.ImportAllEndpoints
- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: KnownContracts
  nameWithType: MetadataImporter.KnownContracts
- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: PolicyImportExtensions
  nameWithType: MetadataImporter.PolicyImportExtensions
- uid: System.ServiceModel.Description.MetadataImporter.State*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: State
  nameWithType: MetadataImporter.State
