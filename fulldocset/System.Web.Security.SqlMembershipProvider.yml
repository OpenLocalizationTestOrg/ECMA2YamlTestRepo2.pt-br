### YamlMime:ManagedReference
items:
- uid: System.Web.Security.SqlMembershipProvider
  id: SqlMembershipProvider
  children:
  - System.Web.Security.SqlMembershipProvider.#ctor
  - System.Web.Security.SqlMembershipProvider.ApplicationName
  - System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  - System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  - System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.GeneratePassword
  - System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  - System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  - System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  - System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  - System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  - System.Web.Security.SqlMembershipProvider.PasswordFormat
  - System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  - System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  - System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  - System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  - System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  langs:
  - csharp
  name: SqlMembershipProvider
  nameWithType: SqlMembershipProvider
  fullName: System.Web.Security.SqlMembershipProvider
  type: Class
  summary: "Gerencia o armazenamento de informações de associação de um aplicativo ASP.NET em um banco de dados do SQL Server."
  remarks: "This class is used by the <xref:System.Web.Security.Membership> and <xref:System.Web.Security.MembershipUser> classes to provide membership services for an ASP.NET application using a SQL Server database. You cannot use a SqlMembershipProvider without SQL Server. When your computer has SQL Server Express installed with the default instance name and user-instancing enabled, the SqlMembershipProvider object will create a database called `aspnetdb` in the application's `App_Data` directory the first time the application is run.  \n  \n To manually create the database, run the `Aspnet_regsql.exe` executable found in the `%systemroot%\\Microsoft.NET\\Framework\\ versionNumber` folder and specify the `-A m` option (for example `aspnet_regsql.exe -A m`). The database created is called Aspnetdb. Alternatively, run `Aspnet_regsql.exe` to pull up the GUI configuration mode and choose to configure all ASP.NET Features.  \n  \n If the membership provider is configured with a connection string that uses integrated security, the process account of the ASP.NET application must have rights to connect to the SQL Server database.  \n  \n The Machine.config file defines a default SqlMembershipProvider instance named `AspNetSqlMembershipProvider` that connects to the default SQL Server Express instance on the local machine. You can use this instance of the provider if you installed SQL Server Express with the default instance name, or you can define your own instance in the Web.config file for your ASP.NET application.  \n  \n If you set the `passwordCompatMode` attribute to <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>, the application can use the hashing and encryption membership options that were added in ASP.NET 4. However, if the `passwordCompatMode` attribute is set to <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>, only the hashing and encryption membership options from the ASP.NET 2.0, ASP.NET 3.5, and ASP.NET 3.5 SP1 can be used. The default value is <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>. For more information, see <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>."
  example:
  - "The following code example shows the Web.config file for an ASP.NET application configured to use a SqlMembershipProvider.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\"  \n        name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n    <authorization>  \n      <deny users=\"?\" />  \n    </authorization>  \n    <membership defaultProvider=\"SqlProvider\"  \n      userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <add   \n          name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"MyApplication\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          requiresUniqueEmail=\"false\"  \n          passwordFormat=\"Hashed\"  \n          maxInvalidPasswordAttempts=\"5\"  \n          passwordAttemptWindow=\"10\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class SqlMembershipProvider : System.Web.Security.MembershipProvider'
  inheritance:
  - System.Web.Security.MembershipProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: SqlMembershipProvider()
  nameWithType: SqlMembershipProvider.SqlMembershipProvider()
  fullName: System.Web.Security.SqlMembershipProvider.SqlMembershipProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Security.SqlMembershipProvider&quot;> </xref> classe."
  remarks: "O construtor SqlMembershipProvider é chamado pelo ASP.NET para criar uma instância do <xref:System.Web.Security.SqlMembershipProvider>classe conforme especificado na configuração do aplicativo.</xref:System.Web.Security.SqlMembershipProvider> Este construtor não se destina a ser usado em seu código."
  syntax:
    content: public SqlMembershipProvider ();
    parameters: []
  overload: System.Web.Security.SqlMembershipProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
  fullName: System.Web.Security.SqlMembershipProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém ou define o nome do aplicativo para armazenar e recuperar informações de associação."
  remarks: "ApplicationName é usado pelo <xref:System.Web.Security.SqlMembershipProvider>para agrupar informações do usuário.</xref:System.Web.Security.SqlMembershipProvider> Qualificando informações do usuário com um nome de aplicativo, você pode armazenar informações de vários aplicativos em um único banco de dados sem exibir conflitos entre nomes de usuários duplicados. Além disso, vários aplicativos ASP.NET podem usar o mesmo banco de dados de usuário, especificando o mesmo valor na propriedade ApplicationName. A propriedade ApplicationName pode ser definida programaticamente, ou pode ser definida declarativamente no arquivo de configuração para o aplicativo Web com o `applicationName` atributo.       Se um valor não for especificado para o `applicationName` atributo no arquivo de configuração para o aplicativo Web, em seguida, o <xref:System.Web.HttpRequest.ApplicationPath%2A>valor de propriedade para a primeira solicitação feita para o aplicativo é usado.</xref:System.Web.HttpRequest.ApplicationPath%2A>      > [!CAUTION] > Como uma instância do provedor de associação padrão único é usada para todas as solicitações atendidas por um <xref:System.Web.HttpApplication>do objeto, você pode ter várias solicitações de execução simultaneamente e a tentativa de definir o valor da propriedade ApplicationName.</xref:System.Web.HttpApplication> A propriedade ApplicationName não é thread-safe para várias gravações e alterar o valor da propriedade ApplicationName pode resultar em comportamento inesperado para vários usuários de um aplicativo. É recomendável que você evite escrever código para permitir que os usuários definir a propriedade ApplicationName, a menos que você precisa. Um exemplo de um aplicativo em que pode ser necessário definir a propriedade ApplicationName é um aplicativo administrativo que gerencia os dados de associação para vários aplicativos. Esse aplicativo deve ser um aplicativo de usuário único e não é um aplicativo Web."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "O nome do aplicativo para armazenar e recuperar informações de associação. O padrão é o <> </> *> valor da propriedade atual <> </> *>."
  overload: System.Web.Security.SqlMembershipProvider.ApplicationName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Foi feita uma tentativa para definir a propriedade ApplicationName como uma cadeia de caracteres vazia ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Foi feita uma tentativa para definir a propriedade ApplicationName como uma cadeia de caracteres que é maior do que 256 caracteres."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  id: ChangePassword(System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ChangePassword(String,String,String)
  nameWithType: SqlMembershipProvider.ChangePassword(String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePassword(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Modifica a senha do usuário."
  remarks: "Este método é chamado pelo <xref:System.Web.Security.Membership>classe para atualizar a senha para um usuário no banco de dados do SQL Server especificado no arquivo de configuração do aplicativo ASP.NET (Web. config).</xref:System.Web.Security.Membership>       O comprimento máximo da senha é de 128 caracteres.       Se uma senha incorreta é fornecida para o método ChangePassword, o contador interno que rastreia as tentativas de senha inválida é incrementado em um. Isso pode resultar no usuário sejam bloqueado fora e não é possível fazer logon até que o status de bloqueio é desmarcado por uma chamada para o <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>método.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Se a senha correta for fornecida e o usuário não está atualmente bloqueado, em seguida, essa senha inválida de rastrear os contadores interno e tentativas de resposta de senha são redefinidos como zero. Para obter mais informações, consulte o <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>Propriedades.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       Você pode chamar o método ChangePassword diretamente pelo primeiro obter uma referência para a <xref:System.Web.Security.SqlMembershipProvider>instância por meio da <xref:System.Web.Security.Membership.Provider%2A>propriedade de <xref:System.Web.Security.Membership>classe.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.Provider%2A> </xref:System.Web.Security.SqlMembershipProvider> O <xref:System.Web.Security.Membership.Provider%2A>propriedade expõe o `defaultProvider` especificado no arquivo Web. config para o aplicativo.</xref:System.Web.Security.Membership.Provider%2A> Configurado provedores que não são referenciado usando o provedor de padrão de <xref:System.Web.Security.Membership.Providers%2A>propriedade.</xref:System.Web.Security.Membership.Providers%2A>       Você também pode alterar as senhas de usuário usando o <xref:System.Web.Security.MembershipUser.ChangePassword%2A>método.</xref:System.Web.Security.MembershipUser.ChangePassword%2A>       Espaços iniciais e finais são cortados de todos os valores de parâmetro."
  example:
  - "The following code example modifies the password for the specified user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#3](~/add/codesnippet/csharp/baafd90e-fc24-4306-ac18-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#3](~/add/codesnippet/visualbasic/baafd90e-fc24-4306-ac18-_1.aspx)]"
  syntax:
    content: public override bool ChangePassword (string username, string oldPassword, string newPassword);
    parameters:
    - id: username
      type: System.String
      description: "Atualizar a senha para o usuário."
    - id: oldPassword
      type: System.String
      description: "A senha atual para o usuário especificado."
    - id: newPassword
      type: System.String
      description: "A nova senha para o usuário especificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a senha foi atualizada com êxito. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se a senha antiga fornecida é inválida, o usuário está bloqueado ou o usuário não existe no banco de dados."
  overload: System.Web.Security.SqlMembershipProvider.ChangePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>oldPassword</code> is an empty string or longer than 128 characters.  \n  \n \\- or -  \n  \n <code>newPassword</code> is an empty string or longer than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>newPassword</code> is greater than 128 characters.  \n  \n \\- or -  \n  \n The change-password action was canceled by a subscriber to the <xref href=\"System.Web.Security.Membership.ValidatingPassword\"></xref> event, and the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation*> property was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The length of <code>newPassword</code> is less than the minimum length specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*> property.  \n  \n \\- or -  \n  \n The number of non-alphabetic characters in <code>newPassword</code> is less than the required number of non-alphabetic characters specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*> property.  \n  \n \\- or -  \n  \n <code>newPassword</code> does not pass the regular expression defined in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*> property."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>oldPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>newPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>username</code>não foi encontrado no banco de dados."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Ocorreu um erro ao definir o novo valor de senha no banco de dados."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Ocorreu uma exceção sem tratamento."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  id: ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ChangePasswordQuestionAndAnswer(String,String,String,String)
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Atualiza a pergunta da senha e a resposta para um usuário no banco de dados de associação do SQL Server."
  remarks: "Este método é chamado pelo <xref:System.Web.Security.MembershipUser>classe para atualizar a pergunta da senha e a resposta para um usuário no banco de dados do SQL Server que é especificado no arquivo de configuração do aplicativo ASP.NET (Web. config).</xref:System.Web.Security.MembershipUser> A resposta da senha é criptografada usando o formato especificado no <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>propriedade.</xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>       Exigir uma pergunta de senha e resposta fornece uma camada adicional de segurança ao recuperar ou redefinir a senha do usuário. Ao criar um nome de usuário, um usuário pode fornecer uma pergunta e resposta que pode ser usada posteriormente para recuperar ou redefinir uma senha esquecida. O método ChangePasswordQuestionAndAnswer atualiza a pergunta da senha e a resposta para um usuário da associação.       Se uma senha incorreta é fornecida para o método ChangePasswordQuestionAndAnswer, os contadores internos que acompanham a tentativas inválidas de senha é incrementado em um. Isso pode resultar no usuário sejam bloqueado fora e não é possível fazer logon até que o status de bloqueio é desmarcado por chamar o <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>método.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Se a senha correta for fornecida e o usuário não está atualmente bloqueado, em seguida, essa senha inválida de rastrear os contadores interno e tentativas de resposta de senha são redefinidos como zero. Para obter mais informações, consulte o <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>Propriedades.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       O comprimento máximo para a pergunta da senha é de 256 caracteres. O comprimento máximo para a resposta da senha é de 128 caracteres.       Para obter mais informações, consulte <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>e <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.</xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> </xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> </xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>       Espaços iniciais e finais são cortados de todos os valores de parâmetro."
  example:
  - "The following code example updates the password question and answer for a user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#10](~/add/codesnippet/csharp/2e3c3851-f4bc-4cbf-b9de-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#10](~/add/codesnippet/visualbasic/2e3c3851-f4bc-4cbf-b9de-_1.aspx)]"
  syntax:
    content: public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);
    parameters:
    - id: username
      type: System.String
      description: "O usuário altere a pergunta da senha e resposta para."
    - id: password
      type: System.String
      description: "A senha para o usuário especificado."
    - id: newPasswordQuestion
      type: System.String
      description: "A nova pergunta da senha para o usuário especificado."
    - id: newPasswordAnswer
      type: System.String
      description: "A resposta da senha nova para o usuário especificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a atualização foi bem-sucedida; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Um valor de <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> também é retornado se o <code> password </code> está incorreta, o usuário está bloqueado ou o usuário não existe no banco de dados."
  overload: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>password</code> is an empty string or is longer than 128 characters.  \n  \n \\- or -  \n  \n <code>newPasswordQuestion</code> is an empty string or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>newPasswordAnswer</code> is an empty string or is longer than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>newPasswordAnswer</code> is longer than 128 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>password</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>newPasswordQuestion</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>newPasswordAnswer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Ocorreu um erro ao alterar a pergunta da senha e a resposta no banco de dados."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Adiciona um novo usuário no banco de dados de associação do SQL Server."
  remarks: "Este método é chamado pelo <xref:System.Web.Security.Membership>classe para criar um novo usuário no banco de dados do SQL Server especificado no arquivo de configuração do aplicativo ASP.NET.</xref:System.Web.Security.Membership>       Novos usuários são identificados com configurado <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>       Se o <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>está definida como `true`, e `null` ou uma cadeia de caracteres vazia (&quot;&quot;) é especificado para o `email` parâmetro, a criação de usuário falhará.</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> A criação de usuário também falhará se o <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>está definida como `true` e o valor especificado para o `email` parâmetro é uma duplicata do endereço de email para um usuário existente no banco de dados configurado <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> </xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>       O comprimento máximo do nome de usuário é de 256 caracteres. O comprimento máximo para o endereço de email é de 256 caracteres. O comprimento máximo para a senha em texto não criptografado ou depois que foi transformado em hash ou criptografado é de 128 caracteres.       Outras condições que causarão falha na criação de usuário: - o `password` parâmetro é `null`, ou uma cadeia de caracteres vazia após a remoção.      -O comprimento do `password` parâmetro for menor que o valor especificado no <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>propriedade.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>      -O número de caracteres não alfabéticos o `password` parâmetro for menor que o valor especificado no <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>propriedade.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>      -A `password` parâmetro não passa à expressão regular no <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>propriedade.</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>      -Código de validação de senha personalizado cancelada criação de usuário durante o <xref:System.Web.Security.MembershipProvider.ValidatingPassword>evento.</xref:System.Web.Security.MembershipProvider.ValidatingPassword>      -A <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>é de propriedade `true` e `passwordAnswer` parâmetro seja `null` ou uma cadeia de caracteres vazia após a remoção.</xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>      -A `passwordAnswer` parâmetro é uma cadeia de caracteres vazia.      -A `passwordAnswer` parâmetro tiver mais de 128 caracteres.      -A <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>é de propriedade `true` a pergunta da senha seja `null` ou uma cadeia de caracteres vazia após a remoção.</xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>      -A `passwordQuestion` parâmetro é uma cadeia de caracteres vazia.      -A `passwordQuestion` parâmetro tem mais de 256 caracteres.      -A `providerUserKey` parâmetro definido para um objeto de um tipo diferente de <xref:System.Guid?displayProperty=fullName>.</xref:System.Guid?displayProperty=fullName>      -A `providerUserKey` parâmetro é uma duplicata de uma chave de usuário existente.      -A `username` parâmetro é uma duplicata de um nome de usuário existente.       Espaços iniciais e finais são cortados de todos os valores de parâmetro de cadeia de caracteres."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.SqlMembershipProvider>. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the sign-in page for the application.  \n  \n> [!NOTE]\n>  This sample calls the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file using the <xref:System.Web.Security.Membership> class. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/a42f3c7c-ac38-4fa9-93d4-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/a42f3c7c-ac38-4fa9-93d4-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "O nome de usuário para o novo usuário."
    - id: password
      type: System.String
      description: "A senha para o novo usuário."
    - id: email
      type: System.String
      description: "O endereço de email para o novo usuário."
    - id: passwordQuestion
      type: System.String
      description: "A pergunta da senha para o novo usuário."
    - id: passwordAnswer
      type: System.String
      description: "A resposta da senha para o novo usuário."
    - id: isApproved
      type: System.Boolean
      description: "Se o novo usuário é aprovado para serem validados."
    - id: providerUserKey
      type: System.Object
      description: "Um <xref:System.Guid>que identifica exclusivamente o usuário associado no banco de dados do SQL Server.</xref:System.Guid>"
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "Uma da <xref:System.Web.Security.MembershipCreateStatus>valores, que indica se o usuário foi criado com êxito.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto para o usuário recém-criado.</xref:System.Web.Security.MembershipUser> Se nenhum usuário foi criado, este método retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: DeleteUser(String,Boolean)
  nameWithType: SqlMembershipProvider.DeleteUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.DeleteUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Remove informações de associação do usuário do banco de dados de associação do SQL Server."
  remarks: "Este método é chamado pelo <xref:System.Web.Security.Membership>classe para remover um usuário do banco de dados do SQL Server especificado no arquivo de configuração do aplicativo ASP.NET.</xref:System.Web.Security.Membership>       Usuários excluídos somente são excluídos do configurado <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>       Se `deleteAllRelatedData` é definido como `true`, em seguida, todos os dados de usuário armazenados no banco de dados a <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, ou <xref:System.Web.UI.WebControls.WebParts.WebPart>recursos de personalização também será excluído para configurado <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>       Se o usuário da associação não existe no banco de dados, e `deleteAllRelatedData` é `true`, em seguida, os dados relacionados e as informações de usuário armazenadas para o <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, ou <xref:System.Web.UI.WebControls.WebParts.WebPart>recursos de personalização ainda serão excluídos para o aplicativo especificado no <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>propriedade.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles> Como resultado, o DeleteUser método pode ser usado para excluir rapidamente informações relacionadas a um usuário, mesmo quando o <xref:System.Web.Security.SqlMembershipProvider>objeto não é usado para armazenar informações de usuário autenticado.</xref:System.Web.Security.SqlMembershipProvider>       Espaços iniciais e finais são cortados do `username` o valor do parâmetro."
  example:
  - "The following code example deletes the currently logged-on user.  \n  \n> [!NOTE]\n>  This example uses <xref:System.Web.Security.SqlMembershipProvider> to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/808bac53-4bf1-477e-8865-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/808bac53-4bf1-477e-8865-_1.aspx)]"
  syntax:
    content: public override bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: "O nome do usuário para excluir."
    - id: deleteAllRelatedData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para excluir dados relacionados ao usuário do banco de dados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para deixar os dados relacionados ao usuário no banco de dados."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o usuário foi excluído; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Um valor de <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> também é retornado se o usuário não existe no banco de dados."
  overload: System.Web.Security.SqlMembershipProvider.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>é uma cadeia de caracteres vazia (&quot;&quot;), contém uma vírgula ou tem mais de 256 caracteres."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o provedor de associação do SQL Server está configurado para permitir que os usuários redefinam suas senhas."
  remarks: "Redefinição de senha permite que o provedor de associação substituir a senha atual de senha para um nome de usuário com uma nova gerada aleatoriamente. Isso é especialmente útil quando o <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>estiver definida como <xref:System.Web.Security.MembershipPasswordFormat>, conforme os usuários não podem recuperar valores de hash de senha.</xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o provedor de associação oferece suporte à redefinição de senha; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.EnablePasswordReset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o provedor de associação do SQL Server está configurado para permitir que os usuários recuperem suas senhas."
  remarks: "Se o <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>está definida como <xref:System.Web.Security.MembershipPasswordFormat>, um usuário não poderá recuperar sua senha existente do banco de dados.</xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> O <xref:System.Web.Security.MembershipPasswordFormat>formato de senha fornece codificação unidirecional de valores de senha.</xref:System.Web.Security.MembershipPasswordFormat> As senhas são hash com um valor de sal gerado aleatoriamente e comparadas aos valores armazenados no banco de dados para autenticação. Valores de hash não podem ser não codificados para recuperar o valor da senha original.       Se o <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>está definida como <xref:System.Web.Security.MembershipPasswordFormat>, e EnablePasswordRetrieval é definido como `true`, um <xref:System.Configuration.Provider.ProviderException>é lançada quando o provedor é inicializado.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o provedor de associação oferece suporte à recuperação de senha; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Retorna uma coleção de usuários da associação para o qual o campo de endereço de email contém o endereço de email especificado."
  remarks: "FindUsersByEmail retorna uma lista de usuários da associação com o endereço de email contendo uma correspondência com fornecido `emailToMatch` para <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> configurado       O <xref:System.Web.Security.SqlMembershipProvider>procura um nome de usuário que corresponda a `emailToMatch` valor do parâmetro, usando a cláusula LIKE.</xref:System.Web.Security.SqlMembershipProvider> Caracteres curinga do SQL Server podem ser incluídos no valor do parâmetro. Por exemplo, se o `emailToMatch` parâmetro for definido como &quot;address@example.com&quot;, em seguida, as informações para usuários com o endereço de email &quot;address@example.com&quot; for retornado, se ele existir. Se o `emailToMatch` parâmetro for definido como &quot;%@example.com&quot;, em seguida, as informações para usuários com o endereço de email &quot;address@example.com&quot;,&quot;address2@example.com&quot;,&quot;admin@example.com&quot;, e assim por diante será retornado.       Os resultados retornados por FindUsersByEmail são restritas pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Security.MembershipUser>objetos a serem retornadas em <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> O `pageIndex` parâmetro identifica qual página de resultados a serem retornados, onde zero identifica a primeira página. O `totalRecords` parâmetro é um `out` parâmetro que é definido como o número total de usuários de associação configurado `applicationName`. Por exemplo, se houver 13 usuários configurado `applicationName`e o `pageIndex` valor era 1 com um `pageSize` de 5, o <xref:System.Web.Security.MembershipUserCollection>retornado contém da sexta décimo usuário retornado.</xref:System.Web.Security.MembershipUserCollection> O `totalRecords` parâmetro deve ser definido como 13.       Espaços iniciais e finais são cortados do `emailToMatch` o valor do parâmetro."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information and displays the results in pages of data.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/2e443224-e510-47e7-9af2-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/2e443224-e510-47e7-9af2-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "O endereço de email a ser pesquisado."
    - id: pageIndex
      type: System.Int32
      description: "O índice da página de resultados a serem retornados. `pageIndex`é baseado em zero."
    - id: pageSize
      type: System.Int32
      description: "O tamanho da página de resultados a serem retornados."
    - id: totalRecords
      type: System.Int32
      description: "O número total de usuários correspondentes."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Um <xref:System.Web.Security.MembershipUserCollection>que contém uma página de <code> pageSize </code> <xref:System.Web.Security.MembershipUser>objetos começando na página especificada por <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.SqlMembershipProvider.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emailToMatch</code> is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de usuários da associação onde o nome de usuário contém o nome de usuário especificado para corresponder."
  remarks: "FindUsersByName retorna uma lista de usuários de associação para o qual o nome de usuário contém uma correspondência com fornecido `usernameToMatch` para <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> configurado       O <xref:System.Web.Security.SqlMembershipProvider>procura um nome de usuário que corresponda a `usernameToMatch` valor do parâmetro, usando a cláusula LIKE.</xref:System.Web.Security.SqlMembershipProvider> Caracteres curinga do SQL Server podem ser incluídos com o valor do parâmetro. Por exemplo, se o `usernameToMatch` parâmetro for definido como &quot;Usuário1&quot;, informações do usuário para o usuário com o nome de usuário &quot;Usuário1&quot; são retornadas, se ele existir. Se o `usernameToMatch` parâmetro for definido como &quot;usuário %&quot;, em seguida, as informações de usuário para usuários com o nome de usuário &quot;Usuário1&quot;, &quot;Usuário2&quot;, &quot;usuário_admin&quot;, e assim por diante são retornados.       Os resultados retornados por FindUsersByName são restritas pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Security.MembershipUser>objetos a serem retornadas em <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> O `pageIndex` parâmetro identifica qual página de resultados a serem retornados, onde zero identifica a primeira página. O `totalRecords` parâmetro é um `out` parâmetro que é definido como o número total de usuários de associação configurado `applicationName`. Por exemplo, se houver 13 usuários configurado `applicationName`e o `pageIndex` valor era 1 com um `pageSize` de 5, o <xref:System.Web.Security.MembershipUserCollection>retornado conteria o sexto ao décimo usuário retornado.</xref:System.Web.Security.MembershipUserCollection> O `totalRecords` parâmetro deve ser definido como 13.       Espaços iniciais e finais são cortados do `usernameToMatch` o valor do parâmetro."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information and displays the results in pages of data.  \n  \n> [!NOTE]\n>  This example uses System.Web.Security.SqlMembershipProvider to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/492b000d-1abf-495e-82ba-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/492b000d-1abf-495e-82ba-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "O nome de usuário a ser pesquisado."
    - id: pageIndex
      type: System.Int32
      description: "O índice da página de resultados a serem retornados. `pageIndex`é baseado em zero."
    - id: pageSize
      type: System.Int32
      description: "O tamanho da página de resultados a serem retornados."
    - id: totalRecords
      type: System.Int32
      description: "Quando este método retorna, contém o número total de usuários correspondentes."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Um <xref:System.Web.Security.MembershipUserCollection>que contém uma página de <code> pageSize </code> <xref:System.Web.Security.MembershipUser>objetos começando na página especificada por <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.SqlMembershipProvider.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\") or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword
  id: GeneratePassword
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GeneratePassword()
  nameWithType: SqlMembershipProvider.GeneratePassword()
  fullName: System.Web.Security.SqlMembershipProvider.GeneratePassword()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Gera uma senha aleatória que é no mínimo 14 caracteres."
  remarks: "O <xref:System.Web.Security.Membership>classe fornece um <xref:System.Web.Security.Membership.GeneratePassword%2A>método, que gera uma senha de determinado tamanho pelo menos o número especificado de caracteres não alfabéticos.</xref:System.Web.Security.Membership.GeneratePassword%2A> </xref:System.Web.Security.Membership> O método GeneratePassword que <xref:System.Web.Security.SqlMembershipProvider>chama o <xref:System.Web.Security.Membership.GeneratePassword%2A>método da <xref:System.Web.Security.Membership>classe para recuperar uma senha aleatória que é no mínimo 14 caracteres.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.GeneratePassword%2A> </xref:System.Web.Security.SqlMembershipProvider> Se o <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>é maior do que 14, a senha retornada será o comprimento especificado no <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>propriedade.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> </xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>       Especificamente você pode chamar o método GeneratePassword referenciando a <xref:System.Web.Security.SqlMembershipProvider>classe diretamente da <xref:System.Web.Security.Membership.Provider%2A>propriedade de <xref:System.Web.Security.Membership>classe.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.Provider%2A> </xref:System.Web.Security.SqlMembershipProvider>       A senha gerada contém apenas caracteres alfanuméricos e as seguintes marcas de pontuação: `!@#$%^&*()_-+=[{]};:<>|./?`. Nenhum caractere de controle oculto ou não imprimíveis é incluído na senha gerada.      > [!NOTE] > A senha aleatória criada pelo método GeneratePassword não é garantida para passar a expressão regular a <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>propriedade.</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> No entanto, a senha aleatória atenderá aos critérios estabelecidos pela <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>e <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>Propriedades.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> </xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>"
  example:
  - "The following code example generates a random 10-character password.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#9](~/add/codesnippet/csharp/m-system.web.security.sq_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/add/codesnippet/visualbasic/m-system.web.security.sq_2_1.aspx)]"
  syntax:
    content: public virtual string GeneratePassword ();
    parameters: []
    return:
      type: System.String
      description: "Uma senha aleatória que é no mínimo 14 caracteres."
  overload: System.Web.Security.SqlMembershipProvider.GeneratePassword*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de todos os usuários no banco de dados de associação do SQL Server."
  remarks: "Este método é chamado pelo <xref:System.Web.Security.Membership>classe para recuperar informações do usuário do banco de dados do SQL Server especificado no arquivo de configuração do aplicativo ASP.NET (Web. config).</xref:System.Web.Security.Membership>       Os resultados retornados por GetAllUsers são restritas pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Security.MembershipUser>objetos a serem retornadas em <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> O `pageIndex` parâmetro identifica qual página de resultados a serem retornados, onde zero identifica a primeira página. O `totalRecords` parâmetro é um `out` parâmetro que é definido como o número total de usuários de associação configurado `applicationName`. Por exemplo, se houver 13 usuários configurado `applicationName`e o `pageIndex` valor era 1 com um `pageSize` de 5, o <xref:System.Web.Security.MembershipUserCollection>retornado conteria o sexto ao décimo usuário retornado.</xref:System.Web.Security.MembershipUserCollection> O `totalRecords` parâmetro deve ser definido como 13."
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/f02da845-c892-4dcc-aa15-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/f02da845-c892-4dcc-aa15-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "O índice da página de resultados a serem retornados. `pageIndex`é baseado em zero."
    - id: pageSize
      type: System.Int32
      description: "O tamanho da página de resultados a serem retornados."
    - id: totalRecords
      type: System.Int32
      description: "O número total de usuários."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Um <xref:System.Web.Security.MembershipUserCollection>dos <xref:System.Web.Security.MembershipUser>objetos que representa todos os usuários no banco de dados configurado <xref:System.Web.Security.SqlMembershipProvider.ApplicationName*>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName*> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.SqlMembershipProvider.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline()
  fullName: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Retorna o número de usuários acessando o aplicativo."
  remarks: "Este método é chamado pelo <xref:System.Web.Security.Membership>classe para recuperar o número de usuários considerados online do banco de dados do SQL Server especificado no arquivo de configuração do aplicativo ASP.NET (Web. config).</xref:System.Web.Security.Membership>       GetNumberOfUsersOnline retorna o número de usuários do aplicativo atual cuja última data de atividade e hora é maior que a data e hora atual menos o valor de <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>propriedade em minutos.</xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>       Somente os usuários associados configurado <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>são incluídas na contagem.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>"
  example:
  - "The following code example returns a list of users with a count of the users currently online.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.sq_3_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.sq_3_1.aspx)]"
  syntax:
    content: public override int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: "O número de usuários acessando o aplicativo."
  overload: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  id: GetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetPassword(String,String)
  nameWithType: SqlMembershipProvider.GetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.GetPassword(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Retorna a senha para o nome de usuário especificado do banco de dados de associação do SQL Server."
  remarks: "Este método é chamado pelo <xref:System.Web.Security.MembershipUser>classe para recuperar a senha de um usuário do banco de dados do SQL Server especificado no arquivo de configuração do aplicativo ASP.NET (Web. config).</xref:System.Web.Security.MembershipUser>       Se uma resposta de senha incorreta for fornecida para o método GetPassword, o contador interno que rastreia as tentativas de resposta de senha inválida é incrementado em um. Isso pode resultar no usuário sejam bloqueado fora e não é possível fazer logon até que o status de bloqueio é desmarcado por uma chamada para o <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>método.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Se a resposta da senha correta é fornecida e o usuário não está atualmente bloqueado, em seguida, o contador interno que controla as tentativas de resposta de senha inválidas é redefinido para zero. Para obter mais informações, consulte o <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>Propriedades.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       Você pode chamar o método GetPassword diretamente pelo primeiro obter uma referência para a <xref:System.Web.Security.SqlMembershipProvider>instância por meio da <xref:System.Web.Security.Membership.Provider%2A>propriedade de <xref:System.Web.Security.Membership>classe.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.Provider%2A> </xref:System.Web.Security.SqlMembershipProvider>       Se o <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>está definida como <xref:System.Web.Security.MembershipPasswordFormat>, o método GetPassword não é possível recuperar a senha.</xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> As senhas hash são criptografadas unidirecionais e não podem ser descriptografadas. Se o <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>está definida como <xref:System.Web.Security.MembershipPasswordFormat>, e <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>é definido como `true`, um <xref:System.Configuration.Provider.ProviderException>é lançada quando o provedor é inicializado.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> </xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>       Espaços iniciais e finais são cortados de todos os valores de parâmetro."
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the user in an e-mail message.  \n  \n> [!NOTE]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n  \n> [!NOTE]\n>  This sample calls the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file by using the <xref:System.Web.Security.Membership> class. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/66916cd5-cd17-4858-8835-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/66916cd5-cd17-4858-8835-_1.aspx)]"
  syntax:
    content: public override string GetPassword (string username, string passwordAnswer);
    parameters:
    - id: username
      type: System.String
      description: "O usuário para recuperar a senha."
    - id: passwordAnswer
      type: System.String
      description: "A resposta da senha do usuário."
    return:
      type: System.String
      description: "A senha para o nome de usuário especificado."
  overload: System.Web.Security.SqlMembershipProvider.GetPassword*
  exceptions:
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>passwordAnswer</code> is invalid.  \n  \n \\- or -  \n  \n The membership user identified by <code>username</code> is locked out."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*>is set to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*>"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>username</code> is not found in the membership database.  \n  \n \\- or -  \n  \n An error occurred while retrieving the password from the database."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "One of the parameter values exceeds the maximum allowed length.  \n  \n \\- or -  \n  \n <code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is an empty string and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is greater than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>passwordAnswer</code> is greater than 128 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUser(Object,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(Object,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém as informações da fonte de dados do usuário da associação associado com o identificador exclusivo especificado e atualiza o último carimbo de data/hora de atividade do usuário, se especificado."
  remarks: "<xref:System.Web.Security.Membership.GetUser%2A>recupera as informações de usuário da fonte de dados e cria um <xref:System.Web.Security.MembershipUser>objeto preenchido com os dados retornados.</xref:System.Web.Security.MembershipUser></xref:System.Web.Security.Membership.GetUser%2A> O usuário é identificado usando o identificador exclusivo especificado com o `providerUserKey` parâmetro."
  syntax:
    content: public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "O identificador exclusivo do usuário."
    - id: userIsOnline
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para atualizar a atividade mais recente carimbo de data/hora para o usuário especificado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto representando o usuário associado com o identificador exclusivo especificado.</xref:System.Web.Security.MembershipUser> Se nenhum usuário for encontrado no banco de dados especificado <code> providerUserKey </code> valor, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é retornado."
  overload: System.Web.Security.SqlMembershipProvider.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerUserKey</code>não é do tipo <xref:System.Guid>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUser(String,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Retorna informações do banco de dados de associação do SQL Server para um usuário e fornece uma opção para atualizar o último carimbo de data/hora de atividade do usuário."
  remarks: "Este método é chamado pelo <xref:System.Web.Security.Membership>classe para recuperar informações do usuário do banco de dados do SQL Server especificado no arquivo de configuração do aplicativo ASP.NET (Web. config).</xref:System.Web.Security.Membership>       Se `userIsOnline` é `true`, o último carimbo de data/hora de atividade do usuário é atualizado para a data e hora atuais. Isso é refletido na <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>e <xref:System.Web.Security.MembershipUser.IsOnline%2A>Propriedades e o valor retornado por <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>.</xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> </xref:System.Web.Security.MembershipUser.IsOnline%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A>       Espaços iniciais e finais são cortados do `username` o valor do parâmetro."
  example:
  - "The following code example uses the GetUser method to determine whether a user exists before retrieving the password for the user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/08039896-5b29-4285-9a5a-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/08039896-5b29-4285-9a5a-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: "O nome do usuário para obter informações sobre."
    - id: userIsOnline
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para atualizar o último carimbo de data/hora de atividade do usuário; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para retornar informações do usuário sem atualizar o último carimbo de data/hora de atividade do usuário."
    return:
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto representando o usuário especificado.</xref:System.Web.Security.MembershipUser> Se nenhum usuário for encontrado no banco de dados especificado <code> username </code> valor, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é retornado."
  overload: System.Web.Security.SqlMembershipProvider.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> exceeds 256 characters.  \n  \n \\- or -  \n  \n <code>username</code> contains a comma."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: SqlMembershipProvider.GetUserNameByEmail(String)
  fullName: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o nome de usuário associado ao endereço de email especificado."
  remarks: "Este método é chamado pelo <xref:System.Web.Security.Membership>classe com um endereço de email, ele usa para recuperar um nome de usuário associado do banco de dados do SQL Server especificado no arquivo de configuração do aplicativo ASP.NET (Web. config).</xref:System.Web.Security.Membership>       Se mais de um usuário no banco de dados de associação tem o mesmo endereço de email, o primeiro nome de usuário encontrado será retornado. Você pode definir o `requiresUniqueEmail` atributo `true` no arquivo de configuração do aplicativo para garantir que cada endereço de email no banco de dados seja exclusivo.       Espaços iniciais e finais são cortados do `email` o valor do parâmetro."
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.sq_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.sq_7_1.aspx)]"
  syntax:
    content: public override string GetUserNameByEmail (string email);
    parameters:
    - id: email
      type: System.String
      description: "O endereço de email a ser pesquisado."
    return:
      type: System.String
      description: "O nome de usuário associado ao endereço de email especificado. Se nenhuma correspondência for encontrada, este método retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>email</code>excede 256 caracteres."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Existe mais de um usuário com o mesmo endereço de email no banco de dados e <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*>é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*>"
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlMembershipProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlMembershipProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicializa o provedor de associação do SQL Server com os valores de propriedade especificados no arquivo de configuração do aplicativo ASP.NET. Esse método não se destina a ser usado diretamente no seu código."
  remarks: "Esse método inicializa a <xref:System.Web.Security.SqlMembershipProvider>com a propriedade de valores especificados no arquivo de configuração do aplicativo ASP.NET (Web. config) e não se destina a ser usado diretamente no seu código.</xref:System.Web.Security.SqlMembershipProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "O nome do <xref href=&quot;System.Web.Security.SqlMembershipProvider&quot;> </xref> instância ao inicializar."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Um <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> que contém os nomes e valores de opções de configuração para o provedor de associação."
  overload: System.Web.Security.SqlMembershipProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "The <xref uid=\"langword_csharp_enablePasswordRetrieval\" name=\"enablePasswordRetrieval\" href=\"\"></xref>, <xref uid=\"langword_csharp_enablePasswordReset\" name=\"enablePasswordReset\" href=\"\"></xref>, <xref uid=\"langword_csharp_requiresQuestionAndAnswer\" name=\"requiresQuestionAndAnswer\" href=\"\"></xref>, or <xref uid=\"langword_csharp_requiresUniqueEmail\" name=\"requiresUniqueEmail\" href=\"\"></xref> attribute is set to a value other than a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_maxInvalidPasswordAttempts\" name=\"maxInvalidPasswordAttempts\" href=\"\"></xref> or the <xref uid=\"langword_csharp_passwordAttemptWindow\" name=\"passwordAttemptWindow\" href=\"\"></xref> attribute is set to a value other than a positive integer.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_minRequiredPasswordLength\" name=\"minRequiredPasswordLength\" href=\"\"></xref> attribute is set to a value other than a positive integer, or the value is greater than 128.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_minRequiredNonalphanumericCharacters\" name=\"minRequiredNonalphanumericCharacters\" href=\"\"></xref> attribute is set to a value other than zero or a positive integer, or the value is greater than 128.  \n  \n \\- or -  \n  \n The value for the <xref uid=\"langword_csharp_passwordStrengthRegularExpression\" name=\"passwordStrengthRegularExpression\" href=\"\"></xref> attribute is not a valid regular expression.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_applicationName\" name=\"applicationName\" href=\"\"></xref> attribute is set to a value that is greater than 256 characters.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_passwordFormat\" name=\"passwordFormat\" href=\"\"></xref> attribute specified in the application configuration file is an invalid <xref:System.Web.Security.MembershipPasswordFormat> enumeration.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_passwordFormat\" name=\"passwordFormat\" href=\"\"></xref> attribute is set to <xref:System.Web.Security.MembershipPasswordFormat> and the <xref uid=\"langword_csharp_enablePasswordRetrieval\" name=\"enablePasswordRetrieval\" href=\"\"></xref> attribute is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> in the application configuration.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_passwordFormat\" name=\"passwordFormat\" href=\"\"></xref> attribute is set to <xref uid=\"langword_csharp_Encrypted\" name=\"Encrypted\" href=\"\"></xref> and the  configuration element specifies <xref uid=\"langword_csharp_AutoGenerate\" name=\"AutoGenerate\" href=\"\"></xref> for the <xref uid=\"langword_csharp_decryptionKey\" name=\"decryptionKey\" href=\"\"></xref> attribute.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref> attribute is empty or does not exist in the application configuration.  \n  \n \\- or -  \n  \n The value of the connection string for the <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref> attribute value is empty, or the specified <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref> does not exist in the application configuration file.  \n  \n \\- or -  \n  \n The value for the <xref uid=\"langword_csharp_commandTimeout\" name=\"commandTimeout\" href=\"\"></xref> attribute is set to a value other than zero or a positive integer.  \n  \n \\- or -  \n  \n The application configuration file for this <xref href=\"System.Web.Security.SqlMembershipProvider\"></xref> instance contains an unrecognized attribute."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O nível de confiança atual é menor que <xref uid=&quot;langword_csharp_Low&quot; name=&quot;Low&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O provedor já foi inicializado antes da chamada atual para o método Initialize."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o número de senhas ou de resposta de senha inválidas permitidas antes que o usuário está bloqueado."
  remarks: "O <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>funciona em conjunto com o <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>para se proteger contra uma fonte indesejada adivinhe a senha ou resposta de senha de um usuário da associação através de tentativas repetidas.</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> </xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Se o número de senhas inválidas ou senha perguntas fornecidas para um usuário da associação for maior que ou igual ao valor da <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>propriedade dentro do número de minutos identificado pelo valor da <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>propriedade, em seguida, o usuário da associação é bloqueado definindo o <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>propriedade `true` até que o usuário está desbloqueado com o <xref:System.Web.Security.MembershipUser.UnlockUser%2A>método.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> </xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Se for fornecida uma senha válida antes do <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>valor é atingido, os contadores que acompanham o número de tentativas de senha e resposta de senha inválidas são redefinidos como zero.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Se uma resposta de senha válida for fornecida antes do <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>valor é atingido, somente o contador que rastreia o número de tentativas de resposta de senha inválidas é redefinido para zero.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       O <xref:System.Web.Security.SqlMembershipProvider>mantém as contagens de tentativas de senha inválidas e tentativas de resposta de senha inválidas separadamente.</xref:System.Web.Security.SqlMembershipProvider> Somente o contador de tentativas de senha está sendo incrementado de resultados de tentativas de senha inválidas. Resultam em apenas o contador de resposta de senha está sendo incrementado as tentativas de resposta de senha inválida.       O <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>valor da propriedade é definido na configuração do aplicativo usando o `maxInvalidPasswordAttempts` atributo da seção de configuração.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       Se o <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>está definida como `false`, não são rastreadas tentativas de resposta de senha inválida.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n    <providers>  \n      <add name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        maxInvalidPasswordAttempts=\"5\"  \n        passwordAttemptWindow=\"30\"  \n        applicationName=\"MyApplication\" />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: "O número de senhas ou de resposta de senha inválidas permitidas antes que o usuário está bloqueado."
  overload: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o número mínimo de caracteres especiais que devem estar presentes em uma senha válida."
  remarks: "A propriedade MinRequiredNonAlphanumericCharacters retorna o número mínimo de caracteres não alfabéticos especiais que deve ser inserido para criar uma senha válida para o <xref:System.Web.Security.SqlMembershipProvider>objeto.</xref:System.Web.Security.SqlMembershipProvider>       O valor da propriedade MinRequiredNonAlphanumericCharacters é definido na configuração do aplicativo usando o `minRequiredNonalphanumericCharacters` atributo o [associação Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento de configuração.       Um caractere não alfanumérico é um caractere para a qual o <xref:System.Char.IsLetterOrDigit%2A>método retornará `false`.</xref:System.Char.IsLetterOrDigit%2A>"
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonalphanumericCharacters` attribute to one character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonalphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: "O número mínimo de caracteres especiais que devem estar presentes em uma senha válida."
  overload: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o comprimento mínimo necessário para uma senha."
  remarks: "Propriedade MinRequiredPasswordLength obtém o número mínimo de caracteres que deve ser inserido para criar uma senha válida para o <xref:System.Web.Security.SqlMembershipProvider>objeto.</xref:System.Web.Security.SqlMembershipProvider>       O <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>valor da propriedade é definido na configuração do aplicativo usando o `minRequiredPasswordLength` atributo do [associação Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento de configuração.</xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>"
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n    <providers>  \n      <add  \n        name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        minRequiredPasswordLength=\"7\"  \n        />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: "O comprimento mínimo necessário para uma senha."
  overload: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
  fullName: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém a janela de tempo entre os quais consecutivas tentativas para fornecer uma senha válida ou respostas de senha é rastreadas."
  remarks: "A propriedade PasswordAttemptWindow funciona em conjunto com o <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>propriedade para ajudar a proteger contra uma fonte indesejada adivinhe a senha ou a resposta da senha de um usuário da associação através de tentativas repetidas.</xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> Quando os usuários estão tentando fazer logon, altere sua senha ou redefinir sua senha, somente um determinado número de tentativas consecutivas é permitido dentro de uma janela de tempo especificado. O comprimento da janela de tempo é especificado pela propriedade PasswordAttemptWindow, que identifica o número de minutos permitidos entre tentativas inválidas. Se o número de tentativas com falha consecutivas que um usuário faz a redefinir sua ou a senha é igual ao valor armazenado na <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>propriedade e o tempo decorrido desde a última tentativa inválida é menor que o número de minutos especificado para a propriedade PasswordAttemptWindow, então o usuário da associação é bloqueado definindo o <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>propriedade `true`.</xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> O usuário pode ser desbloqueado por chamar o <xref:System.Web.Security.MembershipUser.UnlockUser%2A>método.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> Se o intervalo entre a falha na tentativa atual e a última tentativa com falha for maior que a configuração da propriedade PasswordAttemptWindow, a atual tentativa inválida é contada como o primeiro. Se uma resposta de senha válida for fornecida antes de atingir o número máximo de tentativas inválidas permitidas, a contagem de tentativas de resposta de senha inválida é definida como zero. Se uma senha válida for fornecida antes que o número máximo de permissão inválido tentativas for atingido, a contagem de tentativas inválidas de senha e a contagem de tentativas de resposta de senha inválidas são definidos como zero.       O <xref:System.Web.Security.SqlMembershipProvider>mantém uma contagem de tentativas de senha inválidas e tentativas de resposta de senha inválidas separadamente.</xref:System.Web.Security.SqlMembershipProvider> Somente o contador de tentativas de senha está sendo incrementado de resultados de tentativas de senha inválidas. Resultam em apenas o contador de resposta de senha está sendo incrementado as tentativas de resposta de senha inválida.       O <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>valor da propriedade é definido na configuração do aplicativo usando o `passwordAttemptWindow` atributo da seção de configuração.</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Se o <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>está definida como `false`, não são rastreadas tentativas de resposta de senha inválida.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n    <providers>  \n      <add name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        maxInvalidPasswordAttempts=\"5\"  \n        passwordAttemptWindow=\"30\"  \n        applicationName=\"MyApplication\" />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: "A janela de tempo, em minutos, durante o qual consecutivas tentativas com falha para fornecer uma senha válida ou respostas de senha são rastreadas. O padrão é de 10 minutos. Se o intervalo entre a falha na tentativa atual e a última tentativa com falha for maior que a configuração da propriedade PasswordAttemptWindow, cada tentativa com falha é tratada como se fosse a primeira tentativa com falha."
  overload: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat
  id: PasswordFormat
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
  fullName: System.Web.Security.SqlMembershipProvider.PasswordFormat
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica o formato para armazenar senhas no banco de dados de associação do SQL Server."
  remarks: "Use `Hashed` somente `Clear` e `Encrypted` não são seguras. `Hashed`as senhas são transformadas em hash usando um algoritmo de hash unidirecional e um valor de sal gerado aleatoriamente quando armazenado no banco de dados. Quando uma senha é validada, ele é transformado em hash com o valor de sal no banco de dados para verificação. As senhas hash não podem ser recuperadas. `Encrypted`as senhas não são consideradas seguras, como uma violação que revela o conteúdo do banco de dados também pode expor a chave de criptografia. Isso significa que as senhas criptografadas podem ser descriptografadas e expostas.       O valor de PasswordFormat é especificado na seção do arquivo Web. config para o aplicativo ASP.NET.       `Encrypted`e `Hashed` senhas são criptografadas ou hash por padrão com base nas informações fornecidas no elemento em sua configuração. Observe que, se você especificar um valor de `3DES` para o `validation` atributo, ou se nenhum valor for especificado, as senhas hash serão colocado em hash usando o <xref:System.Security.Cryptography.SHA1>algoritmo.</xref:System.Security.Cryptography.SHA1>       Um algoritmo de hash personalizados pode ser definido usando o `hashAlgorithmType` atributo o [associação Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento de configuração. Se você escolher a criptografia, criptografia de senha padrão usa AES. Você pode alterar o algoritmo de criptografia, definindo o `decryption` atributo do elemento de configuração. Se você estiver criptografando senhas, você deve fornecer um valor explícito para a `decryptionKey` atributo no elemento. O valor padrão de `AutoGenerate` para o `decryptionKey` atributo não é suportado quando usar criptografado senhas com a associação do ASP.NET."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and sets its password format to `Hashed`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }
    return:
      type: System.Web.Security.MembershipPasswordFormat
      description: "Uma da <xref:System.Web.Security.MembershipPasswordFormat>valores, que indica o formato para armazenar senhas no banco de dados do SQL Server.</xref:System.Web.Security.MembershipPasswordFormat>"
  overload: System.Web.Security.SqlMembershipProvider.PasswordFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
  fullName: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém a expressão regular usada para avaliar uma senha."
  remarks: "A propriedade PasswordStrengthRegularExpression obtém a expressão regular usada para avaliar a complexidade de senha para o <xref:System.Web.Security.SqlMembershipProvider>objeto.</xref:System.Web.Security.SqlMembershipProvider>       O <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>propriedade é definida na configuração do aplicativo usando o `passwordStrengthRegularExpression` atributo do [associação Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento de configuração.</xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>"
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates that the password meets the following criteria:  \n  \n-   Is at least seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\"@\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: "Uma expressão regular usada para avaliar uma senha."
  overload: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
  fullName: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o provedor de associação do SQL Server está configurado para exigir que o usuário responder a uma pergunta de senha para redefinição de senha e recuperação."
  remarks: "Exigir uma pergunta de senha e resposta fornece uma camada adicional de segurança ao recuperar ou redefinir a senha do usuário. Ao criar um nome de usuário, um usuário pode fornecer uma pergunta e resposta que pode ser usada posteriormente para recuperar ou redefinir uma senha esquecida. Se o <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A>propriedade e o <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>são ambos `false`, o valor da propriedade RequiresQuestionAndAnswer é irrelevante.</xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> </xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A>       Para obter mais informações, consulte <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>e <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.</xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> </xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and configures it to require a password answer for password reset or retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma resposta de senha é necessária para redefinição de senha e recuperação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  id: RequiresUniqueEmail
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
  fullName: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o provedor de associação do SQL Server está configurado para exigir um endereço de email exclusivo para cada nome de usuário."
  remarks: ''
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the <xref:System.Web.Security.SqlMembershipProvider> instance and configures it to require a unique e-mail address for each user name.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      requiresUniqueEmail=\"true\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool RequiresUniqueEmail { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o provedor de associação requer um endereço de email exclusivo; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  id: ResetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ResetPassword(String,String)
  nameWithType: SqlMembershipProvider.ResetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ResetPassword(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Redefine a senha do usuário para uma nova senha gerada automaticamente."
  remarks: "Este método é chamado pelo <xref:System.Web.Security.Membership>classe para redefinir a senha de um usuário no banco de dados do SQL Server especificado no arquivo de configuração do aplicativo ASP.NET (Web. config) para um novo valor gerado aleatoriamente.</xref:System.Web.Security.Membership> A nova senha será retornada.      > [!NOTE] > A senha aleatória criada pelo método ResetPassword não é garantida para passar a expressão regular a <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>propriedade.</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> No entanto, a senha aleatória atenderá aos critérios estabelecidos pela <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>e <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>Propriedades.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> </xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>       O método ResetPassword é mais geralmente é usado quando o <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>estiver definida como `Hashed`.</xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> Se um usuário esquecer a senha que é transformado em hash, a senha não pode ser recuperada. No entanto, o provedor pode redefinir a senha para uma nova senha gerada automaticamente, se o usuário fornece a resposta da senha correta.       Se uma resposta de senha incorreta for fornecida para o método ResetPassword, o contador interno que rastreia as tentativas de senha inválida é incrementado em um. Isso pode resultar no usuário sejam bloqueado fora e não é possível fazer logon até que o status de bloqueio é desmarcado por uma chamada para o <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>método.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Se a resposta da senha correta é fornecida e o usuário não está atualmente bloqueado, em seguida, o contador interno que controla as tentativas de resposta de senha inválidas é redefinido para zero. Para obter mais informações, consulte o <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>Propriedades.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       Você pode chamar o método ResetPassword diretamente pelo primeiro obter uma referência para a <xref:System.Web.Security.SqlMembershipProvider>instância da <xref:System.Web.Security.Membership.Provider%2A>propriedade de <xref:System.Web.Security.Membership>classe.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.Provider%2A> </xref:System.Web.Security.SqlMembershipProvider> A senha gerada será no mínimo 14 caracteres ou o comprimento especificado no <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>propriedade e conterá o número de caracteres não alfanuméricos especificado no <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>propriedade.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> </xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> A senha não é garantida para passar a expressão regular contida no <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>propriedade, se um for especificado.</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>       Espaços iniciais e finais são cortados de todos os valores de parâmetro."
  example:
  - "The following code example resets a user's password and returns the new, automatically generated password.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/16c2d8e3-05dc-453f-b1c3-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/16c2d8e3-05dc-453f-b1c3-_1.aspx)]"
  syntax:
    content: public override string ResetPassword (string username, string passwordAnswer);
    parameters:
    - id: username
      type: System.String
      description: "Redefinir a senha para o usuário."
    - id: passwordAnswer
      type: System.String
      description: "A resposta da senha para o usuário especificado."
    return:
      type: System.String
      description: "A nova senha para o usuário especificado."
  overload: System.Web.Security.SqlMembershipProvider.ResetPassword*
  exceptions:
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>passwordAnswer</code> is invalid.  \n  \n \\- or -  \n  \n The user account is currently locked."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset*>is set to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset*>"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>username</code> is not found in the membership database.  \n  \n \\- or -  \n  \n The change password action was canceled by a subscriber to the <xref href=\"System.Web.Security.Membership.ValidatingPassword\"></xref> event and the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation*> property was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while retrieving the password from the database."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is an empty string, or is longer than 128 characters, and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is longer than 128 characters after encoding."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Ocorreu uma exceção sem tratamento."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  id: UnlockUser(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: UnlockUser(String)
  nameWithType: SqlMembershipProvider.UnlockUser(String)
  fullName: System.Web.Security.SqlMembershipProvider.UnlockUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Limpa o status do usuário bloqueada para que o usuário da associação pode ser validado."
  remarks: "Os usuários geralmente são bloqueados e não podem ser validados pelo <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>método quando o <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>for excedido em <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> </xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>       Espaços iniciais e finais são cortados do `username` o valor do parâmetro."
  syntax:
    content: public override bool UnlockUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "O nome do usuário para limpar o status de bloqueada para associação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o usuário foi desbloqueado com sucesso; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Um valor de <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> também é retornado se o usuário não existe no banco de dados."
  overload: System.Web.Security.SqlMembershipProvider.UnlockUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>é uma cadeia de caracteres vazia, é maior do que 256 caracteres ou contiver uma vírgula."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: SqlMembershipProvider.UpdateUser(MembershipUser)
  fullName: System.Web.Security.SqlMembershipProvider.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Atualiza informações sobre um usuário no banco de dados de associação do SQL Server."
  remarks: "Este método é chamado pelo <xref:System.Web.Security.Membership>classe para atualizar as informações de usuário para um usuário no banco de dados do SQL Server especificado no arquivo de configuração do aplicativo ASP.NET (Web. config).</xref:System.Web.Security.Membership> O <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, e <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>valores de propriedade são atualizados para o usuário associado especificado.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> </xref:System.Web.Security.MembershipUser.LastLoginDate%2A> </xref:System.Web.Security.MembershipUser.IsApproved%2A> </xref:System.Web.Security.MembershipUser.Comment%2A> </xref:System.Web.Security.MembershipUser.Email%2A>       O comprimento máximo para o <xref:System.Web.Security.MembershipUser.UserName%2A>propriedade é de 256 caracteres.</xref:System.Web.Security.MembershipUser.UserName%2A> O comprimento máximo para o <xref:System.Web.Security.MembershipUser.Email%2A>propriedade é de 256 caracteres.</xref:System.Web.Security.MembershipUser.Email%2A>       A senha para um usuário de associação não pode ser atualizada usando o método UpdateUser. Para atualizar a senha para um usuário de associação, use o <xref:System.Web.Security.MembershipUser.ChangePassword%2A>método de <xref:System.Web.Security.MembershipUser>classe.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser.ChangePassword%2A>"
  example:
  - "The following code example updates the e-mail address for a user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/81f685ac-1799-4589-b9a2-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/81f685ac-1799-4589-b9a2-_1.aspx)]"
  syntax:
    content: public override void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto que representa o usuário para atualização e as informações atualizadas para o usuário.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.SqlMembershipProvider.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is longer than 256 characters.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is an empty string and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> was not found in the database.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> was equal to an existing e-mail address in the database and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to true.  \n  \n \\- or -  \n  \n The user update failed."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ValidateUser(String,String)
  nameWithType: SqlMembershipProvider.ValidateUser(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ValidateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Verifica se o nome de usuário especificado e a senha existem no banco de dados de associação do SQL Server."
  remarks: "Este método é chamado pelo <xref:System.Web.Security.Membership>classe validar informações de usuário de um usuário no banco de dados do SQL Server especificado no arquivo de configuração do aplicativo ASP.NET (Web. config).</xref:System.Web.Security.Membership>       Quando um usuário for validado com êxito, a data da última atividade e o último valor de data de entrada é atualizados para a data e hora atuais no banco de dados.       Se uma senha incorreta é fornecida para o método ValidateUser, o contador interno que rastreia as tentativas de senha inválida é incrementado em um. Isso pode resultar no usuário sejam bloqueado fora e não é possível fazer logon até que o status de bloqueio é desmarcado por uma chamada para o <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>método.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Se a senha correta for fornecida e o usuário não está atualmente bloqueado, em seguida, essa senha inválida de rastrear os contadores interno e tentativas de resposta de senha são redefinidos como zero. Para obter mais informações, consulte o <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>Propriedades.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       Espaços iniciais e finais são cortados de todos os valores de parâmetro."
  example:
  - "The following code example shows the sign-in page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.SqlMembershipProvider>. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/12603449-9667-4437-88bc-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/12603449-9667-4437-88bc-_1.aspx)]"
  syntax:
    content: public override bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "O nome do usuário para validar."
    - id: password
      type: System.String
      description: "A senha para o usuário especificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nome de usuário especificado e a senha são válidos; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Um valor de <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> também é retornado se o usuário não existe no banco de dados."
  overload: System.Web.Security.SqlMembershipProvider.ValidateUser*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Security.MembershipProvider
  isExternal: false
  name: System.Web.Security.MembershipProvider
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.MembershipPasswordException
  isExternal: true
  name: System.Web.Security.MembershipPasswordException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Security.SqlMembershipProvider.#ctor
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: SqlMembershipProvider()
  nameWithType: SqlMembershipProvider.SqlMembershipProvider()
  fullName: System.Web.Security.SqlMembershipProvider.SqlMembershipProvider()
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
  fullName: System.Web.Security.SqlMembershipProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePassword(String,String,String)
  nameWithType: SqlMembershipProvider.ChangePassword(String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePassword(String,String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePasswordQuestionAndAnswer(String,String,String,String)
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
- uid: System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: true
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: true
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: DeleteUser(String,Boolean)
  nameWithType: SqlMembershipProvider.DeleteUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.DeleteUser(String,Boolean)
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GeneratePassword()
  nameWithType: SqlMembershipProvider.GeneratePassword()
  fullName: System.Web.Security.SqlMembershipProvider.GeneratePassword()
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline()
  fullName: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline()
- uid: System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetPassword(String,String)
  nameWithType: SqlMembershipProvider.GetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.GetPassword(String,String)
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser(Object,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(Object,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(Object,Boolean)
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser(String,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(String,Boolean)
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: SqlMembershipProvider.GetUserNameByEmail(String)
  fullName: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(String)
- uid: System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlMembershipProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlMembershipProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
  fullName: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
  fullName: System.Web.Security.SqlMembershipProvider.PasswordFormat
- uid: System.Web.Security.MembershipPasswordFormat
  parent: System.Web.Security
  isExternal: true
  name: MembershipPasswordFormat
  nameWithType: MembershipPasswordFormat
  fullName: System.Web.Security.MembershipPasswordFormat
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
  fullName: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
  fullName: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
  fullName: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ResetPassword(String,String)
  nameWithType: SqlMembershipProvider.ResetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ResetPassword(String,String)
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UnlockUser(String)
  nameWithType: SqlMembershipProvider.UnlockUser(String)
  fullName: System.Web.Security.SqlMembershipProvider.UnlockUser(String)
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: SqlMembershipProvider.UpdateUser(MembershipUser)
  fullName: System.Web.Security.SqlMembershipProvider.UpdateUser(MembershipUser)
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ValidateUser(String,String)
  nameWithType: SqlMembershipProvider.ValidateUser(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ValidateUser(String,String)
- uid: System.Web.Security.SqlMembershipProvider.#ctor*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: SqlMembershipProvider
  nameWithType: SqlMembershipProvider.SqlMembershipProvider
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePassword
  nameWithType: SqlMembershipProvider.ChangePassword
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePasswordQuestionAndAnswer
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer
- uid: System.Web.Security.SqlMembershipProvider.CreateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: CreateUser
  nameWithType: SqlMembershipProvider.CreateUser
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: DeleteUser
  nameWithType: SqlMembershipProvider.DeleteUser
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByEmail
  nameWithType: SqlMembershipProvider.FindUsersByEmail
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByName
  nameWithType: SqlMembershipProvider.FindUsersByName
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GeneratePassword
  nameWithType: SqlMembershipProvider.GeneratePassword
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetAllUsers
  nameWithType: SqlMembershipProvider.GetAllUsers
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline
- uid: System.Web.Security.SqlMembershipProvider.GetPassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetPassword
  nameWithType: SqlMembershipProvider.GetPassword
- uid: System.Web.Security.SqlMembershipProvider.GetUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser
  nameWithType: SqlMembershipProvider.GetUser
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: SqlMembershipProvider.GetUserNameByEmail
- uid: System.Web.Security.SqlMembershipProvider.Initialize*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: Initialize
  nameWithType: SqlMembershipProvider.Initialize
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ResetPassword
  nameWithType: SqlMembershipProvider.ResetPassword
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UnlockUser
  nameWithType: SqlMembershipProvider.UnlockUser
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UpdateUser
  nameWithType: SqlMembershipProvider.UpdateUser
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ValidateUser
  nameWithType: SqlMembershipProvider.ValidateUser
