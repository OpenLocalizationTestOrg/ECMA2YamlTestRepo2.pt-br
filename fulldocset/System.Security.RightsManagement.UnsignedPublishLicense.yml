### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.UnsignedPublishLicense
  id: UnsignedPublishLicense
  children:
  - System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  - System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  - System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  - System.Security.RightsManagement.UnsignedPublishLicense.Grants
  - System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  - System.Security.RightsManagement.UnsignedPublishLicense.Owner
  - System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  - System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  - System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  - System.Security.RightsManagement.UnsignedPublishLicense.ToString
  langs:
  - csharp
  name: UnsignedPublishLicense
  nameWithType: UnsignedPublishLicense
  fullName: System.Security.RightsManagement.UnsignedPublishLicense
  type: Class
  summary: "Representa um direitos não assinados gerenciados <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref> um sinal ou <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref> modelo."
  remarks: "<xref:System.Security.RightsManagement.PublishLicense>Define os dados de segurança sobre direitos, os usuários e outras informações relacionadas à segurança.</xref:System.Security.RightsManagement.PublishLicense>  A licença define como um usuário específico em um computador específico pode usar conteúdo gerenciado por direitos especificado.       O processo de publicação começa com o autor do documento, que define as informações de direitos em um UnsignedPublishLicense.  Em seguida, o aplicativo de criação chama o UnsignedPublishLicense. <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A>método para criar um <xref:System.Security.RightsManagement.PublishLicense>.</xref:System.Security.RightsManagement.PublishLicense> assinado</xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A>  Assinado <xref:System.Security.RightsManagement.PublishLicense>, em seguida, pode ser fornecido para o aplicativo de cliente do usuário final que pode chamar <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A>para solicitar um usuário final <xref:System.Security.RightsManagement.UseLicense>.</xref:System.Security.RightsManagement.UseLicense> </xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> </xref:System.Security.RightsManagement.PublishLicense>  Retornado <xref:System.Security.RightsManagement.UseLicense>, em seguida, permite que o aplicativo cliente exercer os direitos que são concedidos ao usuário.</xref:System.Security.RightsManagement.UseLicense>       O autor do documento pode usar a classe UnsignedPublishLicense para criar um <xref:System.Security.RightsManagement.PublishLicense>, ou para criar e serializar um <xref:System.Security.RightsManagement.PublishLicense>modelo.</xref:System.Security.RightsManagement.PublishLicense> </xref:System.Security.RightsManagement.PublishLicense>       Assim como com outros <xref:System.Security.RightsManagement>tipos, UnsignedPublishLicense só é útil em aplicativos de confiança total.</xref:System.Security.RightsManagement>      <a name=&quot;xamlTextUsage_UnsignedPublishLicense&quot;></a># # Uso de texto XAML esse tipo não é usado normalmente em [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class UnsignedPublishLicense
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  id: '#ctor'
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: UnsignedPublishLicense()
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref> classe."
  remarks: "<xref:System.Security.RightsManagement.UnsignedPublishLicense>cria uma vazia e não assinada-licença pública.</xref:System.Security.RightsManagement.UnsignedPublishLicense>"
  syntax:
    content: public UnsignedPublishLicense ();
    parameters: []
  overload: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: UnsignedPublishLicense(String)
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense(String)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense(String)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref> classe de um [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] modelo de licença de publicação."
  remarks: "O `publishLicenseTemplate` [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] `<RANGETIME>` ou `<INTERVALTIME>` elementos são ignorados quando o <xref:System.Security.RightsManagement.UnsignedPublishLicense>é criada pelo construtor UnsignedPublishLicense(String).</xref:System.Security.RightsManagement.UnsignedPublishLicense>  Para especificar esses valores para a licença de publicação, o <xref:System.Security.RightsManagement.ContentGrant>propriedades <xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A>e <xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A>devem ser explicitamente definida.</xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> </xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A> </xref:System.Security.RightsManagement.ContentGrant>  O exemplo a seguir mostra como definir explicitamente o <xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A>e <xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A>Propriedades.</xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> </xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A>       [!code-vb[UnsignedPubLicense_snip #RmPkgPubGrants](~/add/codesnippet/visualbasic/unsignedpublicense/window1.xaml.vb#rmpkgpubgrants)][!code-cs[UnsignedPubLicense_snip #RmPkgPubGrants  ](~/add/codesnippet/csharp/UnsignedPubLicense/Window1.xaml.cs#rmpkgpubgrants)]"
  example:
  - "The following example shows how to use this constructor.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]"
  syntax:
    content: public UnsignedPublishLicense (string publishLicenseTemplate);
    parameters:
    - id: publishLicenseTemplate
      type: System.String
      description: "O [!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)] modelo de licença de publicação a ser usado para criar esta licença."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  id: ContentId
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Obtém ou define o identificador de conteúdo criado pelo publicador."
  remarks: "O editor cria um ContentId para identificar o conteúdo gerenciado por direitos em um <xref:System.Security.RightsManagement.UseLicense>e <xref:System.Security.RightsManagement.PublishLicense>.</xref:System.Security.RightsManagement.PublishLicense> </xref:System.Security.RightsManagement.UseLicense>"
  syntax:
    content: public Guid ContentId { get; set; }
    return:
      type: System.Guid
      description: "O publicador criado gerenciado por direitos identificador de conteúdo."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ContentId*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  id: Grants
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Obtém uma coleção de direitos de usuário atribuídos."
  syntax:
    content: public System.Collections.Generic.ICollection<System.Security.RightsManagement.ContentGrant> Grants { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant}
      description: "Uma coleção de direitos de usuário atribuídos que são fornecidas nesta licença."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Grants*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  id: LocalizedNameDescriptionDictionary
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Obtém uma coleção de pares de nome e descrição."
  syntax:
    content: public System.Collections.Generic.IDictionary<int,System.Security.RightsManagement.LocalizedNameDescriptionPair> LocalizedNameDescriptionDictionary { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair}
      description: "Uma coleção de pares de nome e descrição."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  id: Owner
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Obtém ou define o proprietário do conteúdo."
  remarks: "Proprietário Especifica o usuário que possui o <xref:System.Security.RightsManagement.PublishLicense>.</xref:System.Security.RightsManagement.PublishLicense>       Proprietário também está associado com o nó do proprietário na licença de emissão [!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)]."
  example:
  - "The following example shows how to use this property to assign a <xref:System.Security.RightsManagement.ContentUser>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]"
  syntax:
    content: public System.Security.RightsManagement.ContentUser Owner { get; set; }
    return:
      type: System.Security.RightsManagement.ContentUser
      description: "O usuário que possui o conteúdo publicado."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  id: ReferralInfoName
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Obtém ou define o nome de contato para o autor ou Editor do conteúdo."
  remarks: "<a name=&quot;xamlTextUsage_ReferralInfoName&quot;></a># # XAML texto uso membros desse tipo não são usados normalmente em [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public string ReferralInfoName { get; set; }
    return:
      type: System.String
      description: "O nome de contato para o autor ou Editor do conteúdo."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  id: ReferralInfoUri
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Obtém ou define o contato [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] para o autor ou Editor do conteúdo."
  remarks: "<a name=&quot;xamlTextUsage_ReferralInfoUri&quot;></a># # XAML texto uso membros desse tipo não são usados normalmente em [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public Uri ReferralInfoUri { get; set; }
    return:
      type: System.Uri
      description: "O contato [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] para o autor ou Editor do conteúdo."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  id: Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Sign(SecureEnvironment,UseLicense)
  nameWithType: UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Cria um <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref> e retorna um <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> para o autor do documento."
  remarks: ''
  example:
  - "The following example shows how to use this class to initialize a <xref:System.Security.RightsManagement.PublishLicense>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public System.Security.RightsManagement.PublishLicense Sign (System.Security.RightsManagement.SecureEnvironment secureEnvironment, out System.Security.RightsManagement.UseLicense authorUseLicense);
    parameters:
    - id: secureEnvironment
      type: System.Security.RightsManagement.SecureEnvironment
      description: "Um ambiente seguro para ativação de licença e associação."
    - id: authorUseLicense
      type: System.Security.RightsManagement.UseLicense
      description: "Um retornados <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> para o autor do documento."
    return:
      type: System.Security.RightsManagement.PublishLicense
      description: "Assinado <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref> que é criado ao entrar isso <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref>."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString
  id: ToString
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ToString()
  nameWithType: UnsignedPublishLicense.ToString()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Retorna um modelo serializado criado a partir de [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] do <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Um modelo serializado criado a partir de [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] do <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref>."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense()
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense()
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense(String)
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense(String)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Grants
- uid: System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ContentGrant>
  nameWithType: ICollection<ContentGrant>
  fullName: System.Collections.Generic.ICollection<System.Security.RightsManagement.ContentGrant>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Security.RightsManagement.ContentGrant>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.RightsManagement.ContentGrant
    name: ContentGrant
    nameWithType: ContentGrant
    fullName: ContentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
- uid: System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<Int32,LocalizedNameDescriptionPair>
  nameWithType: IDictionary<Int32,LocalizedNameDescriptionPair>
  fullName: System.Collections.Generic.IDictionary<System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.RightsManagement.LocalizedNameDescriptionPair
    name: LocalizedNameDescriptionPair
    nameWithType: LocalizedNameDescriptionPair
    fullName: LocalizedNameDescriptionPair
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Owner
- uid: System.Security.RightsManagement.ContentUser
  parent: System.Security.RightsManagement
  isExternal: false
  name: ContentUser
  nameWithType: ContentUser
  fullName: System.Security.RightsManagement.ContentUser
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Sign(SecureEnvironment,UseLicense)
  nameWithType: UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
- uid: System.Security.RightsManagement.PublishLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: PublishLicense
  nameWithType: PublishLicense
  fullName: System.Security.RightsManagement.PublishLicense
- uid: System.Security.RightsManagement.SecureEnvironment
  parent: System.Security.RightsManagement
  isExternal: false
  name: SecureEnvironment
  nameWithType: SecureEnvironment
  fullName: System.Security.RightsManagement.SecureEnvironment
- uid: System.Security.RightsManagement.UseLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: UseLicense
  nameWithType: UseLicense
  fullName: System.Security.RightsManagement.UseLicense
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ToString()
  nameWithType: UnsignedPublishLicense.ToString()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ToString()
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Sign
  nameWithType: UnsignedPublishLicense.Sign
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ToString
  nameWithType: UnsignedPublishLicense.ToString
