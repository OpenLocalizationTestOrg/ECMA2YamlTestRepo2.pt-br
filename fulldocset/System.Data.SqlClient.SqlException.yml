### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlException
  id: SqlException
  children:
  - System.Data.SqlClient.SqlException.Class
  - System.Data.SqlClient.SqlException.ClientConnectionId
  - System.Data.SqlClient.SqlException.Errors
  - System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.SqlClient.SqlException.LineNumber
  - System.Data.SqlClient.SqlException.Number
  - System.Data.SqlClient.SqlException.Procedure
  - System.Data.SqlClient.SqlException.Server
  - System.Data.SqlClient.SqlException.Source
  - System.Data.SqlClient.SqlException.State
  - System.Data.SqlClient.SqlException.ToString
  langs:
  - csharp
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
  type: Class
  summary: "A exceção que é lançada quando o SQL Server retorna um erro ou aviso. Essa classe não pode ser herdada."
  remarks: "Essa classe é criada sempre que o .NET Framework Data Provider para SQL Server encontra um erro gerado a partir do servidor. (Erros de cliente são gerados como exceções de tempo de execução de linguagem comum padrão). SqlException sempre contém pelo menos uma instância de <xref:System.Data.SqlClient.SqlError>.</xref:System.Data.SqlClient.SqlError>       Mensagens que têm uma severidade de nível de 10 ou menos são informativas e indicam problemas causados por erros nas informações que um usuário tiver inserido. Níveis de severidade de 11 a 16 são gerados pelo usuário e podem ser corrigidos pelo usuário. Níveis de severidade de 17 a 25 indicam erros de software ou hardware. Quando um nível de 17, 18 ou 19 erro ocorrer, você pode continuar trabalhando, embora você não poderá executar uma instrução específica.       O <xref:System.Data.SqlClient.SqlConnection>permanece aberto quando o nível de severidade 19 ou menos.</xref:System.Data.SqlClient.SqlConnection> Quando o nível de severidade 20 ou maior, o servidor fecha normalmente <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> No entanto, o usuário pode reabrir a conexão e continuar. Em ambos os casos, uma SqlException é gerada pelo método de execução do comando.       Para obter informações sobre as mensagens de aviso e informativas enviadas pelo SQL Server, consulte a seção de solução de problemas dos Manuais Online do SQL Server. A classe SqlException mapeia a severidade do SQL Server.       A seguir está a obter informações gerais sobre o tratamento de exceções. Seu código deve capturar exceções para impedir que o aplicativo falhar e permite exibir uma mensagem de erro relevantes para o usuário.  Você pode usar transações de banco de dados para garantir que os dados são consistentes, independentemente do que acontece no aplicativo cliente (incluindo uma falha). Recursos como System.Transaction.TransactionScope ou o método BeginTransaction (em OleDbConnection, System.Data.ODBC.ODBCConnection e SqlConnection) Verifique se os dados consistentes, independentemente das exceções geradas por um provedor. Transações podem falhar, então detectar falhas e repetir a transação.       Observe que a partir do .NET Framework 4.5, SqlException pode retornar uma interna <xref:System.ComponentModel.Win32Exception>.</xref:System.ComponentModel.Win32Exception>       A classe de exceção do .net Framework data provider que relata erros específicos do provedor. Por exemplo, ODBC tem OdbcException, OLEDB tem OleDbException e SqlClient tem SqlException. Para o melhor nível de detalhe do erro, capturar essas exceções e use os membros dessas classes de exceção para obter detalhes do erro.       Além de erros específicos do provedor, tipos de provedor de dados do .NET Framework podem gerar exceções do .NET Framework, como System. OutOfMemoryException e System.Threading.ThreadAbortException. Recuperação dessas exceções talvez não seja possível.       Entrada inválida pode fazer com que um tipo de provedor de dados .NET Framework gerar uma exceção, como System. ArgumentException ou System. IndexOutOfRangeException.  Chamando um método no horário incorreto pode gerar System. InvalidOperationException.       Portanto, em geral, escrever um manipulador de exceção que captura qualquer provedor de exceções específicas, bem como exceções do common language runtime.  Esses podem ser colocadas em camadas da seguinte maneira: ```   Try {      // code here   }   catch (SqlException odbcEx) {      // Handle more specific SqlException exception here.   }   catch (Exception ex) {      // Handle generic ones here.   }      ``` ou: ```   Try {      // code here   }   catch (Exception ex) {      if (ex is SqlException) {         // Handle more specific SqlException exception here.      }      Else {         // Handle generic ones here.      }   }      ``` também é possível que uma chamada de método do provedor de dados do .NET Framework falha em um pool de threads de trabalho sem nenhum código de usuário na pilha. Nesse caso e ao usar chamadas de método assíncrono, você deve registrar o <xref:System.AppDomain.UnhandledException>eventos para tratar essas exceções e evitar falhas de aplicativo.</xref:System.AppDomain.UnhandledException>"
  example:
  - "The following example generates a SqlException and then displays the exception.  \n  \n [!code-cs[Classic WebData SqlException Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._1_1.cs)]\n [!code-vb[Classic WebData SqlException Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._1_1.vb)]"
  syntax:
    content: 'public sealed class SqlException : System.Data.Common.DbException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  - System.Data.Common.DbException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Class
  id: Class
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Class
  nameWithType: SqlException.Class
  fullName: System.Data.SqlClient.SqlException.Class
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o nível de severidade do erro retornado do .NET Framework Data Provider para SQL Server."
  remarks: "Mensagens que têm uma severidade de nível de 10 ou menos são informativas e indicam problemas causados por erros nas informações que um usuário tiver inserido. Níveis de severidade de 11 a 16 são gerados pelo usuário e podem ser corrigidos pelo usuário. Níveis de severidade de 17 a 25 indicam erros de software ou hardware. Quando um nível de 17, 18 ou 19 erro ocorrer, você pode continuar trabalhando, embora você não poderá executar uma instrução específica.       O <xref:System.Data.SqlClient.SqlConnection>permanece aberto quando o nível de severidade 19 ou menos.</xref:System.Data.SqlClient.SqlConnection> Quando o nível de severidade 20 ou maior, o servidor fecha normalmente <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> No entanto, o usuário pode reabrir a conexão e continuar. Em ambos os casos, um <xref:System.Data.SqlClient.SqlException>é gerado pelo método de execução do comando.</xref:System.Data.SqlClient.SqlException>       Para obter informações sobre as mensagens de aviso e informativas enviadas pelo SQL Server, consulte a seção de solução de problemas da documentação do SQL Server.       Este é um wrapper para o <xref:System.Data.SqlClient.SqlError.Class%2A>propriedade do primeiro <xref:System.Data.SqlClient.SqlError>no <xref:System.Data.SqlClient.SqlException.Errors%2A>propriedade.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Class%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._21_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._21_1.vb)]"
  syntax:
    content: public byte Class { get; }
    return:
      type: System.Byte
      description: "Um valor de 1 a 25 que indica o nível de severidade do erro."
  overload: System.Data.SqlClient.SqlException.Class*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.ClientConnectionId
  id: ClientConnectionId
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: ClientConnectionId
  nameWithType: SqlException.ClientConnectionId
  fullName: System.Data.SqlClient.SqlException.ClientConnectionId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Representa a ID de conexão de cliente. Para obter mais informações, consulte [dados de rastreamento no ADO.NET](~/add/includes/ajax-current-ext-md.md)."
  remarks: "Para obter um exemplo de código, consulte <xref:System.Data.SqlClient.SqlException.ToString%2A>.</xref:System.Data.SqlClient.SqlException.ToString%2A>"
  syntax:
    content: public Guid ClientConnectionId { get; }
    return:
      type: System.Guid
      description: "Retorna a ID de conexão de cliente."
  overload: System.Data.SqlClient.SqlException.ClientConnectionId*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Errors
  id: Errors
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Errors
  nameWithType: SqlException.Errors
  fullName: System.Data.SqlClient.SqlException.Errors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém uma coleção de um ou mais <xref href=&quot;System.Data.SqlClient.SqlError&quot;> </xref> objetos que fornecem informações detalhadas sobre exceções geradas pelo .NET Framework Data Provider para SQL Server."
  remarks: "A <xref:System.Data.SqlClient.SqlErrorCollection>classe sempre contém pelo menos uma instância a <xref:System.Data.SqlClient.SqlError>classe.</xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlErrorCollection>       Este é um wrapper para <xref:System.Data.SqlClient.SqlErrorCollection>.</xref:System.Data.SqlClient.SqlErrorCollection> Para obter mais informações sobre os erros do mecanismo do SQL Server, consulte os Manuais Online do SQL Server."
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-vb[Classic WebData SqlError Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._59_1.vb)]\n [!code-cs[Classic WebData SqlError Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._59_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlErrorCollection Errors { get; }
    return:
      type: System.Data.SqlClient.SqlErrorCollection
      description: "As instâncias coletadas do <xref href=&quot;System.Data.SqlClient.SqlError&quot;> </xref> classe."
  overload: System.Data.SqlClient.SqlException.Errors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SqlException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.SqlClient.SqlException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Conjuntos de <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> com informações sobre a exceção."
  remarks: '`GetObjectData`define um `SerializationInfo` com todos os dados do objeto de exceção destinados para a serialização. Durante a desserialização, a exceção é reconstituída do `SerializationInfo` transmitido no fluxo.'
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> que contém os dados do objeto serializado sobre a exceção que está sendo gerada."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O <xref:System.Runtime.Serialization.StreamingContext>que contém informações contextuais sobre a origem ou destino.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Data.SqlClient.SqlException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> si </code> parâmetro é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.LineNumber
  id: LineNumber
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: LineNumber
  nameWithType: SqlException.LineNumber
  fullName: System.Data.SqlClient.SqlException.LineNumber
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o número de linha dentro do lote de comandos Transact-SQL ou procedimento armazenado que gerou o erro."
  remarks: "A numeração de linhas começa em 1; Se 0 for retornado, o número de linha não é aplicável.       Este é um wrapper para o <xref:System.Data.SqlClient.SqlError.LineNumber%2A>propriedade do primeiro <xref:System.Data.SqlClient.SqlError>no <xref:System.Data.SqlClient.SqlException.Errors%2A>propriedade.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.LineNumber%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._10_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._10_1.vb)]"
  syntax:
    content: public int LineNumber { get; }
    return:
      type: System.Int32
      description: "O número de linha dentro do lote de comandos Transact-SQL ou procedimento armazenado que gerou o erro."
  overload: System.Data.SqlClient.SqlException.LineNumber*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Number
  id: Number
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Number
  nameWithType: SqlException.Number
  fullName: System.Data.SqlClient.SqlException.Number
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém um número que identifica o tipo de erro."
  remarks: "Este é um wrapper para o <xref:System.Data.SqlClient.SqlError.Number%2A>propriedade do primeiro <xref:System.Data.SqlClient.SqlError>no <xref:System.Data.SqlClient.SqlException.Errors%2A>propriedade.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Number%2A> Para obter mais informações sobre os erros do mecanismo do SQL Server, consulte os Manuais Online do SQL Server."
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._13_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._13_1.vb)]"
  syntax:
    content: public int Number { get; }
    return:
      type: System.Int32
      description: "O número que identifica o tipo de erro."
  overload: System.Data.SqlClient.SqlException.Number*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Procedure
  id: Procedure
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Procedure
  nameWithType: SqlException.Procedure
  fullName: System.Data.SqlClient.SqlException.Procedure
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o nome do procedimento armazenado ou a chamada de procedimento remoto (RPC) que gerou o erro."
  remarks: "Este é um wrapper para o <xref:System.Data.SqlClient.SqlError.Procedure%2A>propriedade do primeiro <xref:System.Data.SqlClient.SqlError>no <xref:System.Data.SqlClient.SqlException.Errors%2A>propriedade.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Procedure%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._9_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._9_1.vb)]"
  syntax:
    content: public string Procedure { get; }
    return:
      type: System.String
      description: "O nome do procedimento armazenado ou RPC."
  overload: System.Data.SqlClient.SqlException.Procedure*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Server
  id: Server
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Server
  nameWithType: SqlException.Server
  fullName: System.Data.SqlClient.SqlException.Server
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o nome do computador que está executando uma instância do SQL Server que gerou o erro."
  remarks: "Este é um wrapper para o <xref:System.Data.SqlClient.SqlError.Server%2A>propriedade do primeiro <xref:System.Data.SqlClient.SqlError>no <xref:System.Data.SqlClient.SqlException.Errors%2A>propriedade.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Server%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._25_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._25_1.vb)]"
  syntax:
    content: public string Server { get; }
    return:
      type: System.String
      description: "O nome do computador que executa uma instância do SQL Server."
  overload: System.Data.SqlClient.SqlException.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Source
  id: Source
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Source
  nameWithType: SqlException.Source
  fullName: System.Data.SqlClient.SqlException.Source
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o nome do provedor que gerou o erro."
  remarks: "Este é um wrapper para o <xref:System.Data.SqlClient.SqlError.Source%2A>propriedade do primeiro <xref:System.Data.SqlClient.SqlError>no <xref:System.Data.SqlClient.SqlException.Errors%2A>propriedade.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Source%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._20_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._20_1.vb)]"
  syntax:
    content: public override string Source { get; }
    return:
      type: System.String
      description: "O nome do provedor que gerou o erro."
  overload: System.Data.SqlClient.SqlException.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.State
  id: State
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: State
  nameWithType: SqlException.State
  fullName: System.Data.SqlClient.SqlException.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém um código de erro numérico do SQL Server que representa um erro, aviso ou mensagem &quot;nenhum dado encontrado&quot;. Para obter mais informações sobre como decodificar esses valores, consulte os Manuais Online do SQL Server."
  remarks: "Este é um wrapper para o <xref:System.Data.SqlClient.SqlError.State%2A>propriedade do primeiro <xref:System.Data.SqlClient.SqlError>no <xref:System.Data.SqlClient.SqlException.Errors%2A>propriedade.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.State%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._61_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._61_1.vb)]"
  syntax:
    content: public byte State { get; }
    return:
      type: System.Byte
      description: "O número que representa o código de erro."
  overload: System.Data.SqlClient.SqlException.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.ToString
  id: ToString
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlException.ToString()
  fullName: System.Data.SqlClient.SqlException.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Retorna uma cadeia de caracteres que representa o atual <xref href=&quot;System.Data.SqlClient.SqlException&quot;> </xref> de objeto e inclui a ID de conexão de cliente (para obter mais informações, consulte <xref:System.Data.SqlClient.SqlException.ClientConnectionId*>).</xref:System.Data.SqlClient.SqlException.ClientConnectionId*>"
  remarks: ''
  example:
  - "The following C# example shows how a connection attempt to a valid server but non-existent database causes a <xref:System.Data.SqlClient.SqlException>, which includes the client connection ID:  \n  \n```  \nusing System.Data.SqlClient;  \nusing System;  \n  \npublic class A {  \n   public static void Main() {  \n      SqlConnection connection = new SqlConnection();  \n      connection.ConnectionString = \"Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true\";  \n      try {  \n         connection.Open();  \n      }  \n      catch (SqlException p) {  \n         Console.WriteLine(\"{0}\", p.ClientConnectionId);  \n         Console.WriteLine(\"{0}\", p.ToString());  \n      }  \n      connection.Close();  \n   }  \n}  \n```  \n  \n The following Visual Basic sample is functionally equivalent to the previous (C#) sample:  \n  \n```  \nImports System.Data.SqlClient  \nImports System  \n  \nModule Module1  \n  \n    Sub Main()  \n        Dim connection As New SqlConnection()  \n        connection.ConnectionString = \"Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true\"  \n        Try  \n            connection.Open()  \n        Catch p As SqlException  \n            Console.WriteLine(\"{0}\", p.ClientConnectionId)  \n            Console.WriteLine(\"{0}\", p.ToString())  \n        End Try  \n        connection.Close()  \n    End Sub  \n  \nEnd Module  \n```"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o atual <xref href=&quot;System.Data.SqlClient.SqlException&quot;> </xref> objeto.<xref:System.String>.</xref:System.String>"
  overload: System.Data.SqlClient.SqlException.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbException
  isExternal: false
  name: System.Data.Common.DbException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.SqlClient.SqlException.Class
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Class
  nameWithType: SqlException.Class
  fullName: System.Data.SqlClient.SqlException.Class
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlClient.SqlException.ClientConnectionId
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlException.ClientConnectionId
  fullName: System.Data.SqlClient.SqlException.ClientConnectionId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.SqlClient.SqlException.Errors
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Errors
  nameWithType: SqlException.Errors
  fullName: System.Data.SqlClient.SqlException.Errors
- uid: System.Data.SqlClient.SqlErrorCollection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlErrorCollection
  nameWithType: SqlErrorCollection
  fullName: System.Data.SqlClient.SqlErrorCollection
- uid: System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SqlException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.SqlClient.SqlException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.SqlClient.SqlException.LineNumber
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: LineNumber
  nameWithType: SqlException.LineNumber
  fullName: System.Data.SqlClient.SqlException.LineNumber
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlException.Number
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Number
  nameWithType: SqlException.Number
  fullName: System.Data.SqlClient.SqlException.Number
- uid: System.Data.SqlClient.SqlException.Procedure
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Procedure
  nameWithType: SqlException.Procedure
  fullName: System.Data.SqlClient.SqlException.Procedure
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlException.Server
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Server
  nameWithType: SqlException.Server
  fullName: System.Data.SqlClient.SqlException.Server
- uid: System.Data.SqlClient.SqlException.Source
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Source
  nameWithType: SqlException.Source
  fullName: System.Data.SqlClient.SqlException.Source
- uid: System.Data.SqlClient.SqlException.State
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: State
  nameWithType: SqlException.State
  fullName: System.Data.SqlClient.SqlException.State
- uid: System.Data.SqlClient.SqlException.ToString
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: ToString()
  nameWithType: SqlException.ToString()
  fullName: System.Data.SqlClient.SqlException.ToString()
- uid: System.Data.SqlClient.SqlException.Class*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Class
  nameWithType: SqlException.Class
- uid: System.Data.SqlClient.SqlException.ClientConnectionId*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlException.ClientConnectionId
- uid: System.Data.SqlClient.SqlException.Errors*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Errors
  nameWithType: SqlException.Errors
- uid: System.Data.SqlClient.SqlException.GetObjectData*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: GetObjectData
  nameWithType: SqlException.GetObjectData
- uid: System.Data.SqlClient.SqlException.LineNumber*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: LineNumber
  nameWithType: SqlException.LineNumber
- uid: System.Data.SqlClient.SqlException.Number*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Number
  nameWithType: SqlException.Number
- uid: System.Data.SqlClient.SqlException.Procedure*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Procedure
  nameWithType: SqlException.Procedure
- uid: System.Data.SqlClient.SqlException.Server*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Server
  nameWithType: SqlException.Server
- uid: System.Data.SqlClient.SqlException.Source*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Source
  nameWithType: SqlException.Source
- uid: System.Data.SqlClient.SqlException.State*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: State
  nameWithType: SqlException.State
- uid: System.Data.SqlClient.SqlException.ToString*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: ToString
  nameWithType: SqlException.ToString
