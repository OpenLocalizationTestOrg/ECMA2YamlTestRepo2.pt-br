### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.SignedXml
  id: SignedXml
  children:
  - System.Security.Cryptography.Xml.SignedXml.#ctor
  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  - System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  - System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  - System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  - System.Security.Cryptography.Xml.SignedXml.GetXml
  - System.Security.Cryptography.Xml.SignedXml.KeyInfo
  - System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.SignedXml.m_signature
  - System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  - System.Security.Cryptography.Xml.SignedXml.Resolver
  - System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  - System.Security.Cryptography.Xml.SignedXml.Signature
  - System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  - System.Security.Cryptography.Xml.SignedXml.SignatureLength
  - System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  - System.Security.Cryptography.Xml.SignedXml.SignatureValue
  - System.Security.Cryptography.Xml.SignedXml.SignedInfo
  - System.Security.Cryptography.Xml.SignedXml.SigningKey
  - System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  - System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  langs:
  - csharp
  name: SignedXml
  nameWithType: SignedXml
  fullName: System.Security.Cryptography.Xml.SignedXml
  type: Class
  summary: "Fornece um wrapper em um objeto de assinatura XML core para facilitar a criação de assinaturas de XML."
  remarks: "A classe de SignedXml é a implementação do .NET Framework do World Wide Web Consortium (W3C) [sintaxe de assinatura XML e a especificação de processamento](http://www.w3.org/TR/xmldsig-core/), também conhecido como XMLDSIG (Assinatura Digital de XML).  XMLDSIG é uma maneira interoperável, baseado em padrões para assinar e verificar todo ou parte de um documento XML ou outros dados que poderá ser direcionados de um identificador de recurso uniforme (URI).       Use a classe SignedXml sempre que você precisa compartilhar assinado dados XML entre aplicativos ou organizações de maneira padrão.  Os dados assinados usando essa classe podem ser verificados por qualquer implementação de conformidade da especificação do W3C para XMLDSIG.       A classe SignedXml permite que você crie os seguintes três tipos de assinaturas digitais XML: | Tipo de assinatura | Descrição |   |--------------------|-----------------|   | Assinatura envelopada | A assinatura está contida dentro do elemento XML que está sendo assinado. |   | Assinatura envolvente | O XML assinado está dentro do `Signature`> elemento. |   | Assinatura desanexada interna | A assinatura e o XML assinado estão no mesmo documento, mas nenhum elemento contém o outro. |       Também há um quarto tipo de assinatura de chamada de uma assinatura separada externa que é quando os dados e a assinatura em documentos XML separados. Não há suporte para assinaturas desanexadas externas pela classe SignedXml.      ## A estrutura de um XMLDSIG de assinatura XML cria uma `Signature`> elemento, que contém uma assinatura digital de um documento XML ou outros dados que poderá ser direcionados de um URI.  O `Signature`> elemento opcionalmente pode conter informações sobre onde localizar uma chave que verificará a assinatura e o algoritmo de criptografia foi usado para a assinatura. A estrutura básica é o seguinte: ```xml      <Signature xmlns:ds=&quot;http://www.w3.org/2000/09/xmldsig#&quot;>       <SignedInfo>         <CanonicalizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;/>         <SignatureMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;/>         <Reference URI=&quot;&quot;>           <Transforms>             <Transform Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;/>           </Transforms>           <DigestMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;/>           <DigestValue>Base64EncodedValue==</DigestValue>         </Reference>       </SignedInfo>       <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>     </Signature>      ``` são as principais partes dessa estrutura: O `CanonicalizationMethod`> elemento Especifica as regras de regravação de `Signature` elemento de texto/XML em bytes para a validação da assinatura. O valor padrão do .NET Framework é http://www.w3.org/TR/2001/REC-xml-c14n-20010315, que identifica um algoritmo confiável. Esse elemento é representado pelo <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName>propriedade.</xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName>       O `SignatureMethod`> elemento Especifica o algoritmo usado para geração de assinatura e validação, que foi aplicada para o `Signature`> elemento para gerar o valor em `SignatureValue`>. No exemplo acima, o valor http://www.w3.org/2000/09/xmldsig#rsa-sha1 identifica uma assinatura RSA PKCS1 SHA-1. Esse elemento é representado pelo <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A>       O `SignatureValue`> elemento Especifica a assinatura de criptografia para o `Signature`> elemento. Se esta assinatura não verificar, em seguida, uma parte do `Signature`> bloco foi violado, e o documento é considerado inválido. Enquanto o `CanonicalizationMethod`> valor é confiável, esse valor é altamente resistente a violação. Esse elemento é representado pelo <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>       O `URI` atributo o `Reference`> elemento Especifica um objeto de dados usando uma referência URI. Esse atributo é representado pelo <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>propriedade.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>      -Não especificar o `URI` atributo, ou seja, definindo o <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>propriedade `null`, significa que o aplicativo de recebimento deve saber a identidade do objeto.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> Na maioria dos casos, um `null` URI resultará em uma exceção sendo lançada. Não use um `null` URI, a menos que seu aplicativo é interoperar com um protocolo que exija isso.      -Definir o `URI` atributo como uma cadeia de caracteres vazia indica que o elemento raiz do documento está sendo assinado, um formulário de assinatura envelopada.      -Se o valor de `URI` atributo começa com # e, em seguida, o valor deve ser resolvido para um elemento no documento atual. Este formulário pode ser usado com qualquer um dos tipos com suporte de assinatura (assinatura envelopado, envolvimento de assinatura ou interno desanexado).      -Qualquer outra coisa é considerada um recurso externo desanexado assinatura e não há suporte para a classe SignedXml.       O `Transforms`> elemento contém uma lista ordenada de `Transform`> elementos que descrevem como o signatário obtido o objeto de dados que foi captou. Um algoritmo de transformação é semelhante ao método de canonização, mas em vez de reescrever o `Signature`> elemento, ele regrava o conteúdo identificado pelo `URI` atributo do `Reference`> elemento. O `Transforms`> elemento é representado pela <xref:System.Security.Cryptography.Xml.TransformChain>classe.</xref:System.Security.Cryptography.Xml.TransformChain>      -Cada algoritmo de transformação é definido como colocar XML (conjunto de nós de um XPath) ou bytes como entrada. Se o formato de dados atuais é diferente dos requisitos de entrada de transformação, regras de conversão são aplicadas.      -Cada algoritmo de transformação é definido como produzir XML ou bytes como a saída.      -Se a saída do último algoritmo de transformação não está definida em bytes (ou Nenhuma transformação foi especificada), em seguida, a conversão em formato canônico método http://www.w3.org/TR/2001/REC-xml-c14n-20010315 é usado como uma transformação implícita (mesmo se um algoritmo diferente for especificado no `CanonicalizationMethod`> elemento).      -Um valor de http://www.w3.org/2000/09/xmldsig#enveloped-signature para o algoritmo de transformação codifica uma regra que é interpretada como remover o `Signature`> elemento do documento. Caso contrário, um verificador de uma assinatura envelopado será digest do documento, incluindo a assinatura, mas o signatário deve ter captou o documento antes que a assinatura foi aplicada, levando a respostas diferentes.       O `DigestMethod`> elemento identifica o método digest (hash criptográfico) para aplicar o conteúdo transformado identificado pelo `URI` atributo do `Reference`> elemento. Isso é representado pelo <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName>propriedade.</xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName>      ## Escolher um método de canonização, a menos que interoperar com uma especificação que requer o uso de um valor diferente, é recomendável que você use o método de canonização do padrão no .NET Framework, que é o algoritmo C14N XML 1.0, cujo valor é http://www.w3.org/TR/2001/REC-xml-c14n-20010315. O algoritmo C14N XML 1.0 precisa ser suportados por todas as implementações de XMLDSIG, principalmente no que é uma transformação implícita final para aplicar.       Há versões dos algoritmos de conversão em formato canônico que oferecem suporte a preservar comentários. Métodos de conversão em formato canônico preservação de comentário não são recomendados porque eles violam o princípio de &quot;assinar o que é visto&quot;. Ou seja, os comentários em um `Signature`> elemento não alterará a lógica de processamento para como a assinatura é executada, é simplesmente que o valor de assinatura. Quando combinado com um algoritmo de assinatura fracos, permitindo que os comentários para ser incluído oferece liberdade de desnecessários um invasor forçar uma colisão de hash, tornando um documento violado parecer legítimo.  No .NET Framework, apenas canonicalizers internos têm suporte por padrão. Para dar suporte canonicalizers adicionais ou personalizados, consulte o <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> Se o documento usa um método de canonização não está na coleção representado pelo <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>propriedade, em seguida, o <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>método retornará `false`.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>      > [!NOTE] > Um aplicativo extremamente defesa pode remover quaisquer valores que não espera signatários para usar a partir de <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>coleção.</xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>      ## Os valores de referência são protegidos contra violação?    Sim, o `Reference`> valores estão protegidos contra violação.  O .NET framework verifica o `SignatureValue`> computação antes de processar qualquer uma da `Reference`> valores e seus respectivos transforma e anulará antecipada para evitar instruções de processamento potencialmente mal-intencionado.      ## Escolhendo os elementos para assinar é recomendável que você use o valor de &quot;&quot; para o `URI` atributo (ou defina o <xref:System.Security.Cryptography.Xml.Reference.Uri%2A>propriedade como uma cadeia de caracteres vazia), se possível.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A> Isso significa que todo o documento é considerado para o cálculo de resumo, que significa que todo o documento está protegido contra violação.       É muito comum ver `URI` valores na forma de âncoras como #foo, que faz referência a um elemento cujo atributo de ID é &quot;foo&quot;. Infelizmente, é fácil para que isso seja violada porque isso inclui apenas o conteúdo do elemento de destino, não o contexto. Fazer uso indevido dessa distinção é conhecido como o encapsulamento de assinatura com a XML (XSW).       Se seu aplicativo considera a semântica de comentários (que é comum não quando lidar com XML), em seguida, você deve usar &quot;#xpointer(/)&quot; em vez de &quot;&quot; e &quot;#xpointer(id(&quot;foo&quot;))&quot; em vez de &quot;#foo&quot;. As versões de #xpointer são interpretadas como incluindo comentários, enquanto os formulários shortname excluem comentários.       Se você precisa aceitar os documentos que são apenas parcialmente protegidos e você deseja garantir que você está lendo o mesmo conteúdo protegido a assinatura, use o <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A>método.</xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A>      ## Considerações de segurança sobre o elemento KeyInfo os dados na opcional `KeyInfo`> elemento (ou seja, o <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>propriedade), que contém uma chave para validar a assinatura não é confiável.</xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>       Em particular, quando o <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>valor representa uma chave pública RSA, DSA ou ECDSA vazia, o documento pode ter sido adulterado com, apesar do <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>método relatar que a assinatura é válida.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>  Isso pode acontecer porque a entidade de fazer a violação apenas deve gerar uma nova chave e assinar novamente o documento violado com essa nova chave. Portanto, a menos que seu aplicativo verifica se a chave pública é um valor esperado, o documento deve ser tratado como se foram violado. Isso requer que seu aplicativo examinar a chave pública inserida dentro do documento e verificá-lo em uma lista de valores conhecidos para o contexto do documento. Por exemplo, se o documento pode ser compreendido a ser emitido por um usuário conhecido, você deve verificar a chave em uma lista das chaves conhecidas usadas por esse usuário.       Você também pode verificar a chave depois de processar o documento usando o <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A>método, em vez de usar o <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>método.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> Mas, para uma melhor segurança, você deve verificar a chave com antecedência.       Como alternativa, considere tentar o usuário registrado chaves públicas, em vez de ler o que há de `KeyInfo`> elemento.      ## Considerações de segurança sobre o elemento X509Data opcional `X509Data`> elemento é um filho de `KeyInfo`> elemento e contém um ou mais X509 certificados ou identificadores de X509 certificados. Os dados de `X509Data`> elemento também não deve ser inerentemente confiável.       Ao verificar um documento com o item inserido `X509Data`> elemento, o .NET Framework verifica apenas se os dados é resolvido para um X509 certificado cuja chave pública pode ser usado para validar a assinatura de documento com êxito. Ao contrário de chamar o <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>método com o `verifySignatureOnly` parâmetro definido como `false`, nenhuma verificação de revogação é executada, nenhuma cadeia de confiança é verificada e sem expiração é verificada.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Mesmo que seu aplicativo extrai o próprio certificado e a passa para o <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>método com o `verifySignatureOnly` parâmetro definido como `false`, que é ainda a validação não é suficiente para evitar a violação do documento.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> O certificado deve ser verificado como sendo apropriado para o documento que está sendo assinado.       Usar um certificado de assinatura inserido fornece estratégias de rotação de chave úteis, se no `X509Data`> seção ou no conteúdo do documento. Ao usar essa abordagem um aplicativo deve extrair o certificado manualmente e executar a validação semelhante a: - o certificado foi emitido diretamente ou por meio de uma cadeia por uma autoridade de certificação (CA) cujo certificado público é inserido no aplicativo.           Usando a lista de confiança fornecida pelo sistema operacional sem verificações adicionais, como um nome de assunto conhecido, não é suficiente para evitar a violação em SignedXml.      -O certificado é verificado para não ter expirado no momento da assinatura de documentos (ou &quot;agora&quot; para perto de processamento de documentos em tempo real).      -Emitidos por uma autoridade de certificação que dá suporte a revogação de certificados e longa duração, verifique se que o certificado não foi revogado.      -A entidade do certificado é verificada como sendo apropriado para o documento atual.      ## Escolher o algoritmo de transformação se você está interoperando com uma especificação que tem determinados valores específicos (como XrML), em seguida, você precisa seguir a especificação.  Se você tiver uma assinatura envelopada (como quando todo o documento de assinatura), em seguida, você precisa usar http://www.w3.org/2000/09/xmldsig#enveloped-signature (representado pela <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>classe).</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Você pode especificar a transformação XML C14N implícita, mas não é necessário.  Para uma assinatura envolvente ou desanexada, sem transformações são necessárias. A transformação XML C14N implícita cuida de tudo.       Com a segurança atualizada introduzidos pelo [boletim de segurança da Microsoft MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx), o .NET Framework restringiu as transformações que podem ser usado na verificação do documento por padrão, com transformações não confiáveis fazendo com que <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>sempre retornar `false`.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Em particular, as transformações que requerem entrada adicional (especificada como elementos filho no XML) não são mais permitidas devido a seu susceptibilidade de abuso por usuários mal-intencionados. O W3C avisa evitando as transformações XPath e XSLT, quais são as duas transformações principais afetadas por essas restrições.      ## O problema com referências externas se um aplicativo não verifica que as referências externas parecerem apropriadas para o contexto atual, eles podem ser usados de maneiras que fornecem muitas vulnerabilidades de segurança (incluindo a negação de serviço, reflexão negação de serviço distribuído, divulgação de informações, assinatura Bypass e execução remota de código). Mesmo que um aplicativo validar a URI de referência externa, deve permanecer um problema do recurso que está sendo carregado duas vezes: uma vez quando o aplicativo lê-lo e depois quando SignedXml lê-lo. Como não há nenhuma garantia de que a leitura de aplicativo e documento verificam etapas têm o mesmo conteúdo, a assinatura não oferece confiabilidade.       Considerando os riscos de referências externas, SignedXml lançará uma exceção quando uma referência externa é encontrada.  Para obter mais informações sobre esse problema, consulte [artigo 3148821](https://support.microsoft.com/en-us/kb/3148821)."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/t-system.security.crypto_96_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/t-system.security.crypto_96_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_96_1.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/t-system.security.crypto_96_2.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/t-system.security.crypto_96_2.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/t-system.security.crypto_96_2.vb)]"
  syntax:
    content: public class SignedXml
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml()
  nameWithType: SignedXml.SignedXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_88_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_88_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_88_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_88_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_88_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_88_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_3.vb)]"
  syntax:
    content: public SignedXml ();
    parameters: []
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  id: '#ctor(System.Xml.XmlDocument)'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml(XmlDocument)
  nameWithType: SignedXml.SignedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlDocument)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> classe do documento XML especificado."
  remarks: ''
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_111_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_111_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_111_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_111_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_111_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_111_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_3.vb)]"
  syntax:
    content: public SignedXml (System.Xml.XmlDocument document);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "O <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objeto a ser usado para inicializar a nova instância de <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>document</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code> document </code> parâmetro contém um valor nulo <xref:System.Xml.XmlDocument.DocumentElement*>propriedade.</xref:System.Xml.XmlDocument.DocumentElement*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  id: '#ctor(System.Xml.XmlElement)'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml(XmlElement)
  nameWithType: SignedXml.SignedXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlElement)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> classe especificado <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto."
  syntax:
    content: public SignedXml (System.Xml.XmlElement elem);
    parameters:
    - id: elem
      type: System.Xml.XmlElement
      description: "O <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto a ser usado para inicializar a nova instância de <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>elem</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  id: AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: AddObject(DataObject)
  nameWithType: SignedXml.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddObject(DataObject)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Adiciona um <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> objeto para a lista de objetos a ser assinado."
  remarks: "O método AddObject adiciona um `Object`> elemento que representa um objeto a ser assinado para o `Signature`> elemento de uma assinatura digital XML.       O método AddObject chama internamente o <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>método do <xref:System.Security.Cryptography.Xml.Signature>objeto encapsulado pelo <xref:System.Security.Cryptography.Xml.SignedXml>objeto.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.Signature> </xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>  Você também pode adicionar uma <xref:System.Security.Cryptography.Xml.DataObject>objeto chamando diretamente o <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>método do <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> </xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> </xref:System.Security.Cryptography.Xml.DataObject>       Para obter mais informações sobre assinaturas digitais XML, consulte a especificação de XMLDSIG disponível em www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example computes and XML signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/csharp/cc2302c9-707b-486f-888b-_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/cpp/cc2302c9-707b-486f-888b-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/visualbasic/cc2302c9-707b-486f-888b-_1.vb)]"
  syntax:
    content: public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);
    parameters:
    - id: dataObject
      type: System.Security.Cryptography.Xml.DataObject
      description: "O <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> objeto a ser adicionado à lista de objetos a ser assinado."
  overload: System.Security.Cryptography.Xml.SignedXml.AddObject*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  id: AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: AddReference(Reference)
  nameWithType: SignedXml.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddReference(Reference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Adiciona um <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> o objeto para o <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto que descreve um método digest, o valor de resumo e a transformação a ser usada para criar uma assinatura digital XML."
  remarks: "O método Adicionar referência adiciona um `Reference`> elemento para o <xref:System.Security.Cryptography.Xml.SignedXml>objeto que descreve um método digest, o valor de resumo e a transformação a ser usada para criar uma assinatura digital XML.</xref:System.Security.Cryptography.Xml.SignedXml>  O `Reference`> elemento é um subelemento do `SignedInfo`> elemento.       Internamente, chama o método Adicionar referência a <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>método do <xref:System.Security.Cryptography.Xml.SignedInfo>objeto encapsulado pelo <xref:System.Security.Cryptography.Xml.SignedXml>objeto.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.SignedInfo> </xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>  Você também pode adicionar uma <xref:System.Security.Cryptography.Xml.Reference>objeto chamando diretamente o <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>método do <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> </xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> </xref:System.Security.Cryptography.Xml.Reference>       Para obter mais informações sobre assinaturas digitais XML, consulte a especificação de XMLDSIG disponível em www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_3.vb)]"
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.Reference reference);
    parameters:
    - id: reference
      type: System.Security.Cryptography.Xml.Reference
      description: "O <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> objeto que descreve um método digest, o valor de resumo e a transformação a ser usada para criar uma assinatura digital XML."
  overload: System.Security.Cryptography.Xml.SignedXml.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature
  id: CheckSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature()
  nameWithType: SignedXml.CheckSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica usando a chave pública na assinatura.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: "Esse método também calcula o resumo de referências e o valor da assinatura.       Se um documento XML foi assinado com uma assinatura x.&509;, o método CheckSignature pesquisará o repositório de &quot;Catálogo de endereços&quot; de certificados adequados para a verificação. Por exemplo, se o certificado é referenciado por um identificador de chave de assunto (SKI), o <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>método seleciona certificados com este SKI e testá-los após o outro até que ele pode verificar o certificado.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>"
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_17_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_17_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_1.vb)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_17_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_2.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_17_2.cs)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_17_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_17_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_3.vb)]"
  syntax:
    content: public bool CheckSignature ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>verifica a propriedade; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <> </> *> propriedade da chave pública na assinatura não corresponde a <> </> *> propriedade.       - ou - a descrição de assinatura não pôde ser criada.       - ou não foi possível criar o algoritmo de hash."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  id: CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica para a chave especificada.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/3bad083a-16aa-4e4b-9114-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/3bad083a-16aa-4e4b-9114-_1.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/3bad083a-16aa-4e4b-9114-_1.cs)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/3bad083a-16aa-4e4b-9114-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/3bad083a-16aa-4e4b-9114-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/3bad083a-16aa-4e4b-9114-_2.vb)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "A implementação do <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> propriedade que contém a chave a ser usado para verificar a <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica especificado chave; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <> </> *> propriedade o <code> key </code> parâmetro não corresponde a <> </> *> propriedade.       - ou - a descrição de assinatura não pôde ser criada.       - ou não foi possível criar o algoritmo de hash."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  id: CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(KeyedHashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica para o algoritmo de código (MAC) de autenticação de mensagem especificada.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/csharp/90ca4404-0fd2-4d7f-a2b2-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/visualbasic/90ca4404-0fd2-4d7f-a2b2-_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/cpp/90ca4404-0fd2-4d7f-a2b2-_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/csharp/90ca4404-0fd2-4d7f-a2b2-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/cpp/90ca4404-0fd2-4d7f-a2b2-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/visualbasic/90ca4404-0fd2-4d7f-a2b2-_2.vb)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);
    parameters:
    - id: macAlg
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "A implementação de <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> que contém o MAC a ser usado para verificar a <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica para MAC especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>macAlg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <> </> *> propriedade especificada <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> objeto não é válido.       -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - não foi possível criar a transformação criptográfica usada para verificar a assinatura."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(X509Certificate2,Boolean)
  nameWithType: SignedXml.CheckSignature(X509Certificate2,Boolean)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica especificado <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objeto e, opcionalmente, se o certificado é válido.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: "Na versão 1.1 do .NET Framework, o certificado x. 509 não foi verificado.  Na versão 2.0 e posteriores, o certificado x. 509 é verificado.       Na versão 2.0 e posteriores do .NET Framework, o método CheckSignature pesquisará o repositório de &quot;Catálogo de endereços&quot; de certificados adequados para a verificação. Por exemplo, se o certificado é referenciado por um identificador de chave de assunto (SKI), o método CheckSignature selecione certificados com este SKI e testá-los após o outro até que ele pode verificar o certificado."
  example:
  - "The following code example uses an X.509 certificate from a certificate store to sign and verify an XML document.  \n  \n [!code-vb[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/add/codesnippet/visualbasic/e51a3b72-eabb-4d0b-b51a-_1.vb)]\n [!code-cs[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/add/codesnippet/csharp/e51a3b72-eabb-4d0b-b51a-_1.cs)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "O <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objeto a ser usado para verificar a <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    - id: verifySignatureOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para verificar a assinatura. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para verificar a assinatura e o certificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a assinatura é válida. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - ou - <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a assinatura e o certificado forem válido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>certificate</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Uma descrição de assinatura não pôde ser criada para o <code> certificate </code> parâmetro."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  id: CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignatureReturningKey(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica usando a chave pública na assinatura.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/cpp/193181f3-8100-4b63-8720-_1.cpp)]\n [!code-cs[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/csharp/193181f3-8100-4b63-8720-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/visualbasic/193181f3-8100-4b63-8720-_1.vb)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/cpp/193181f3-8100-4b63-8720-_2.cpp)]\n [!code-cs[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/csharp/193181f3-8100-4b63-8720-_2.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/visualbasic/193181f3-8100-4b63-8720-_2.vb)]"
  syntax:
    content: public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);
    parameters:
    - id: signingKey
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Quando este método retorna, contém a implementação de <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> que contém a chave pública na assinatura. Esse parâmetro é passado não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade verifica usando público chave na assinatura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> signingKey </code> parâmetro é nulo."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <> </> *> propriedade da chave pública na assinatura não corresponde a <> </> *> propriedade.       - ou - a descrição de assinatura não pôde ser criada.       - ou não foi possível criar o algoritmo de hash."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  id: ComputeSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: ComputeSignature()
  nameWithType: SignedXml.ComputeSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Computa uma assinatura digital XML."
  remarks: "O método ComputeSignature cria uma assinatura digital XML e constrói muitos dos elementos XML necessário.       Você deve definir os dados a ser assinado e o <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>propriedade antes de chamar esse método.</xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>"
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/m-system.security.crypto_74_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_74_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/m-system.security.crypto_74_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/m-system.security.crypto_74_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/m-system.security.crypto_74_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_74_2.vb)]"
  syntax:
    content: public void ComputeSignature ();
    parameters: []
  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <> </> *> propriedade não é um <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> objeto ou <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> objeto.       - ou - não foi possível carregar a chave."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  id: ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: ComputeSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(KeyedHashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Computa uma assinatura digital XML usando o algoritmo de código (MAC) de autenticação de mensagem especificada."
  remarks: "O método ComputeSignature cria uma assinatura digital XML usando o algoritmo MAC especificado e cria muitos dos elementos XML necessário.       Você deve definir os dados sejam assinados antes de chamar esse método."
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/csharp/a3e65477-6e59-4270-bb2f-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/visualbasic/a3e65477-6e59-4270-bb2f-_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/cpp/a3e65477-6e59-4270-bb2f-_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/csharp/a3e65477-6e59-4270-bb2f-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/cpp/a3e65477-6e59-4270-bb2f-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/visualbasic/a3e65477-6e59-4270-bb2f-_2.vb)]"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);
    parameters:
    - id: macAlg
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "Um <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> objeto que contém o MAC a ser usado para calcular o valor da <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>propriedade.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>macAlg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> o objeto especificado pelo <code> macAlg </code> parâmetro não é uma instância de <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref>.       - ou - o <xref:System.Security.Cryptography.HashAlgorithm.HashSize*>propriedade especificada <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> objeto não é válido.</xref:System.Security.Cryptography.HashAlgorithm.HashSize*>       - ou - não foi possível criar a transformação criptográfica usada para verificar a assinatura."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  id: EncryptedXml
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
  fullName: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define um <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> objeto que define as regras de processamento de criptografia de XML."
  syntax:
    content: public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }
    return:
      type: System.Security.Cryptography.Xml.EncryptedXml
      description: "Um <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> objeto que define as regras de processamento de criptografia de XML."
  overload: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  id: GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetIdElement(XmlDocument,String)
  nameWithType: SignedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.SignedXml.GetIdElement(XmlDocument,String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Retorna o <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto com a ID especificada especificado <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objeto."
  syntax:
    content: public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "O <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objeto para recuperar o <xref href=&quot;System.Xml.XmlElement&quot;> </xref> de objeto."
    - id: idValue
      type: System.String
      description: "A ID do <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto recuperar do <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objeto."
    return:
      type: System.Xml.XmlElement
      description: "O <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto com a ID especificada especificado <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objeto, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se ele não pôde ser encontrado."
  overload: System.Security.Cryptography.Xml.SignedXml.GetIdElement*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  id: GetPublicKey
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetPublicKey()
  nameWithType: SignedXml.GetPublicKey()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetPublicKey()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Retorna a chave pública de uma assinatura."
  remarks: "O método GetPublicKey retorna um <xref:System.Security.Cryptography.AsymmetricAlgorithm>objeto que contém uma chave pública que pode ser usada para verificar uma assinatura digital XML.</xref:System.Security.Cryptography.AsymmetricAlgorithm>       A chave deve ser um <xref:System.Security.Cryptography.DSA>ou um <xref:System.Security.Cryptography.RSA>chave.</xref:System.Security.Cryptography.RSA> </xref:System.Security.Cryptography.DSA>"
  syntax:
    content: protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();
    parameters: []
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Um <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> objeto que contém a chave pública da assinatura, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a chave não pode ser encontrada."
  overload: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo*>é de propriedade <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetXml()
  nameWithType: SignedXml.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Retorna a representação XML de um <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "A representação XML do <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  id: KeyInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define o <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  remarks: "KeyInfo propriedade representa o `KeyInfo`> elemento de uma assinatura digital XML usando um <xref:System.Security.Cryptography.Xml.KeyInfo>objeto contido dentro da propriedade.</xref:System.Security.Cryptography.Xml.KeyInfo>  O `KeyInfo`> elemento é um subelemento do `Signature`> elemento.       Use a propriedade KeyInfo para inserir informações relacionadas à chave para ajudar a identificar a chave necessária para validar um documento XML.       Para obter mais informações sobre o `<KeyInfo>` elemento, consulte a especificação de XMLDSIG, que está disponível em www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/p-system.security.crypto_31_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_31_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/p-system.security.crypto_31_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing an XML document.  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/p-system.security.crypto_31_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/p-system.security.crypto_31_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_31_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.KeyInfo
      description: "O <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.KeyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: SignedXml.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Carrega um <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> estado de um elemento XML."
  remarks: ''
  example:
  - "The following code example shows how to use the LoadXml method to verify an XML document.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/csharp/m-system.security.crypto_14_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/visualbasic/m-system.security.crypto_14_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/cpp/m-system.security.crypto_14_1.cpp)]"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "O elemento XML para carregar o <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> estado de."
  overload: System.Security.Cryptography.Xml.SignedXml.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O <code> value </code> parâmetro não tem uma opção válida <> </> *> propriedade.       - ou - <code> value </code> parâmetro não tem uma opção válida <> </> *> propriedade."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.m_signature
  id: m_signature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: m_signature
  nameWithType: SignedXml.m_signature
  fullName: System.Security.Cryptography.Xml.SignedXml.m_signature
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  syntax:
    content: protected System.Security.Cryptography.Xml.Signature m_signature;
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  id: m_strSigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: m_strSigningKeyName
  nameWithType: SignedXml.m_strSigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o nome da chave instalado para ser usado para assinar o <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  syntax:
    content: protected string m_strSigningKeyName;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver
  id: Resolver
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: Resolver
  nameWithType: SignedXml.Resolver
  fullName: System.Security.Cryptography.Xml.SignedXml.Resolver
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Define o atual <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objeto."
  remarks: "O <xref:System.Xml.XmlResolver>classe resolve recursos XML externos nomeados por um identificador de recurso uniforme (URI).</xref:System.Xml.XmlResolver> Se você não confiar na origem do arquivo XML, não convém permitir que o arquivo XML acessar recursos de computador nomeados pelo URI. Você pode usar a propriedade do resolvedor para controlar o nível de acesso de arquivos XML aos recursos do computador, especificando diferentes <xref:System.Xml.XmlResolver>objetos.</xref:System.Xml.XmlResolver> Se você não deseja permitir que qualquer acesso, você pode definir essa propriedade `null` (`Nothing` no Visual Basic)."
  syntax:
    content: public System.Xml.XmlResolver Resolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Atual <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objeto. Os padrão é um <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.Resolver*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  id: SafeCanonicalizationMethods
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
  fullName: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "[Com suporte no .NET Framework 4.5.1 e versões posteriores]       Obtém os nomes dos métodos cujos algoritmos de conversão em formato canônico são explicitamente permitidos."
  remarks: "Métodos de conversão em formato canônico convertem um documento XML em sua forma canônica. Para obter mais informações sobre XML canônica, consulte [XML canônico](http://www.w3.org/TR/xml-c14n) no site do W3C."
  syntax:
    content: public System.Collections.ObjectModel.Collection<string> SafeCanonicalizationMethods { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: "Uma coleção de nomes de métodos que produzem com segurança XML canônico."
  overload: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.Signature
  id: Signature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: Signature
  nameWithType: SignedXml.Signature
  fullName: System.Security.Cryptography.Xml.SignedXml.Signature
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém o <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  remarks: "A assinatura propriedade representa o `Signature`> elemento de uma assinatura digital XML usando um <xref:System.Security.Cryptography.Xml.Signature>objeto contido dentro da propriedade.</xref:System.Security.Cryptography.Xml.Signature>  O `Signature`> é o elemento raiz usado para a criação de assinatura digital XML e verificação.       Use a propriedade de assinatura para recuperar o <xref:System.Security.Cryptography.Xml.Signature>objeto usado pelo <xref:System.Security.Cryptography.Xml.SignedXml>objeto.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.Signature>       Para obter mais informações sobre o `<Signature>` elemento, consulte a especificação de XMLDSIG, que está disponível em www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example uses the Signature property to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_9_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_9_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_9_1.cpp)]  \n  \n The following code example uses the Signature property to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_9_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_9_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_9_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.Signature Signature { get; }
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "O <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.Signature*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  id: SignatureFormatValidator
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém um delegado que será chamado para validar o formato (não a segurança de criptografia) de uma assinatura de XML."
  remarks: "Esse método pode ser usado para garantir que somente determinadas transformações são usadas, ou que a assinatura usa um determinado algoritmo de hash e assim por diante.       Definir a propriedade como `null` remove todas as validações de formato de assinatura do <xref:System.Security.Cryptography.Xml.SignedXml>objeto.</xref:System.Security.Cryptography.Xml.SignedXml>       Você também pode ler o objeto atual delegado e cadeia a ele se desejar.       Se você estiver configurando um validador de formato, o representante que você fornecer receberá como um parâmetro de entrada a <xref:System.Security.Cryptography.Xml.SignedXml>do objeto que está sendo verificada e retorna um valor booliano – `true` se o formato for aceitável, `false` se não for.</xref:System.Security.Cryptography.Xml.SignedXml> Se o representante retornar `false` por qualquer motivo, o <xref:System.Security.Cryptography.Xml.SignedXml>objeto informará que a assinatura XML não é válida.</xref:System.Security.Cryptography.Xml.SignedXml>"
  syntax:
    content: public Func<System.Security.Cryptography.Xml.SignedXml,bool> SignatureFormatValidator { get; set; }
    return:
      type: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o formato é aceitável; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  id: SignatureLength
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém o comprimento da assinatura atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  syntax:
    content: public string SignatureLength { get; }
    return:
      type: System.String
      description: "O comprimento da assinatura atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  id: SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém o método de assinatura do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  remarks: "SignatureMethod propriedade representa o `SignatureMethod`> elemento de uma assinatura digital XML usando uma cadeia de caracteres de identificador de recurso uniforme (URI) contida dentro da propriedade. O `SignatureMethod`> elemento é um subelemento do `SignedInfo`> elemento.       Use a propriedade SignatureMethod para recuperar o `SignatureMethod`> URI usado pelo <xref:System.Security.Cryptography.Xml.SignedXml>objeto.</xref:System.Security.Cryptography.Xml.SignedXml> Essa propriedade é somente leitura. Para obter mais informações sobre como especificar programaticamente um URI para o `SignatureMethod`> elemento, consulte o <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A>propriedade.</xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A>       Para obter mais informações sobre o `<SignatureMethod>` elemento, consulte a especificação de XMLDSIG, que está disponível em www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public string SignatureMethod { get; }
    return:
      type: System.String
      description: "O método de assinatura do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  id: SignatureValue
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém o valor de assinatura do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  remarks: "SignatureValue propriedade representa o `SignatureValue`> elemento de uma assinatura digital XML usando uma matriz de bytes contidos dentro da propriedade.  O `SignatureValue`> elemento é um subelemento do `Signature>` elemento.       Use a propriedade SignatureValue para recuperar o valor da assinatura digital XML.  Essa propriedade é preenchida automaticamente quando você faz uma chamada bem-sucedida para o <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>método.</xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>       Para obter mais informações sobre o `<SignatureValue>` elemento, consulte a especificação de XMLDSIG, que está disponível em www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public byte[] SignatureValue { get; }
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que contém o valor de assinatura do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  id: SignedInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém o <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  remarks: "SignedInfo propriedade representa o `SignedInfo`> elemento de uma assinatura digital XML usando uma matriz de bytes contidos dentro da propriedade.  O `SignedInfo`> elemento é um subelemento do `Signature>` elemento.       Use a propriedade SignedInfo para recuperar o <xref:System.Security.Cryptography.Xml.SignedInfo>objeto que é usado pelo <xref:System.Security.Cryptography.Xml.SignedXml>objeto para criar uma assinatura digital XML.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.SignedInfo>       Para obter mais informações sobre o `<SignedInfo>` elemento, consulte a especificação de XMLDSIG, que está disponível em www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }
    return:
      type: System.Security.Cryptography.Xml.SignedInfo
      description: "O <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> objeto do atual <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.SignedInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey
  id: SigningKey
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SigningKey
  nameWithType: SignedXml.SigningKey
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKey
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define a chave de algoritmo assimétrico usada para assinar um <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  remarks: "Use a propriedade SigningKey para especificar a chave assimétrica que deseja usar para criar uma assinatura digital XML."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_40_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_40_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_1.vb)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_40_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_2.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_40_2.cs)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/p-system.security.crypto_40_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/p-system.security.crypto_40_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_3.vb)]"
  syntax:
    content: public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "A chave de algoritmo assimétrico usada para assinar o <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.SigningKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  id: SigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define o nome da chave instalado para ser usado para assinar o <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  syntax:
    content: public string SigningKeyName { get; set; }
    return:
      type: System.String
      description: "O nome da chave instalado para ser usado para assinar o <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  id: XmlDecryptionTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDecryptionTransformUrl
  nameWithType: SignedXml.XmlDecryptionTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para a transformação de descriptografia do modo XML. Esse campo é constante."
  remarks: "O valor do campo XmlDecryptionTransformUrl é &quot;http://www.w3.org/2002/07/decrypt#XML&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/2002/07/decrypt#XML."
  syntax:
    content: public const string XmlDecryptionTransformUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  id: XmlDsigBase64TransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigBase64TransformUrl
  nameWithType: SignedXml.XmlDsigBase64TransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para a transformação de base 64. Esse campo é constante."
  remarks: "O valor do campo XmlDsigBase64TransformUrl é &quot;http://www.w3.org/2000/09/xmldsig#base64&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>classe implementa a transformação descrita pelo campo XmlDsigBase64TransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/2000/09/xmldsig#base64."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/csharp/f-system.security.crypto_0_1.cs)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_0_1.vb)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/cpp/f-system.security.crypto_0_1.cpp)]"
  syntax:
    content: public const string XmlDsigBase64TransformUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  id: XmlDsigC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigC14NTransformUrl
  nameWithType: SignedXml.XmlDsigC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para a transformação XML canônico. Esse campo é constante."
  remarks: "O valor do campo XmlDsigC14NTransformUrl é &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>classe implementa a transformação descrita pelo campo XmlDsigC14NTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/TR/2001/REC-xml-c14n-20010315.       Este campo tem o mesmo valor que o <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>campo.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>"
  example:
  - "The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  \n  \n [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/cpp/f-system.security.crypto_4_1.cpp)]\n [!code-cs[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_4_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_4_1.vb)]"
  syntax:
    content: public const string XmlDsigC14NTransformUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  id: XmlDsigC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para a transformação XML canônico com comentários. Esse campo é constante."
  remarks: "O valor do campo XmlDsigC14NWithCommentsTransformUrl é &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>classe implementa a transformação descrita pelo campo XmlDsigC14NWithCommentsTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.       Este campo tem o mesmo valor que o <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>campo.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>"
  syntax:
    content: public const string XmlDsigC14NWithCommentsTransformUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  id: XmlDsigCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para o algoritmo padrão de conversão em formato canônico para assinaturas digitais XML. Esse campo é constante."
  remarks: "O valor do campo XmlDsigCanonicalizationUrl é &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>classe implementa a transformação descrita pelo campo XmlDsigCanonicalizationUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/TR/2001/REC-xml-c14n-20010315.       Este campo tem o mesmo valor que o <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>campo.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>"
  syntax:
    content: public const string XmlDsigCanonicalizationUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  id: XmlDsigCanonicalizationWithCommentsUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigCanonicalizationWithCommentsUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para o algoritmo padrão de conversão em formato canônico para assinaturas digitais XML e inclui comentários. Esse campo é constante."
  remarks: "O valor do campo XmlDsigCanonicalizationWithCommentsUrl é &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>classe implementa a transformação descrita pelo campo XmlDsigCanonicalizationWithCommentsUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.       Este campo tem o mesmo valor que o <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>campo.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>"
  syntax:
    content: public const string XmlDsigCanonicalizationWithCommentsUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  id: XmlDsigDSAUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigDSAUrl
  nameWithType: SignedXml.XmlDsigDSAUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para o padrão <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> algoritmo para assinaturas digitais XML. Esse campo é constante."
  remarks: "O valor do campo XmlDsigDSAUrl é &quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/2000/09/xmldsig#dsa-sha1."
  syntax:
    content: public const string XmlDsigDSAUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  id: XmlDsigEnvelopedSignatureTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigEnvelopedSignatureTransformUrl
  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para transformação de assinatura envelopadas. Esse campo é constante."
  remarks: "O valor do campo XmlDsigEnvelopedSignatureTransformUrl é &quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>classe implementa a transformação descrita pelo campo XmlDsigEnvelopedSignatureTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/2000/09/xmldsig#enveloped-signature."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/csharp/62dc9f7e-cdc8-4569-bf73-_1.cs)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/cpp/62dc9f7e-cdc8-4569-bf73-_1.cpp)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/visualbasic/62dc9f7e-cdc8-4569-bf73-_1.vb)]"
  syntax:
    content: public const string XmlDsigEnvelopedSignatureTransformUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  id: XmlDsigExcC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigExcC14NTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) de canonização de XML exclusiva. Esse campo é constante."
  remarks: "O valor do campo XmlDsigExcC14NTransformUrl é &quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>classe implementa a transformação descrita pelo campo XmlDsigExcC14NTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/2001/10/xml-exc-c14n#."
  example:
  - "The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class.  This sample creates an envelope signature.  \n  \n [!code-cs[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/csharp/f-system.security.crypto_9_1.cs)]\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/cpp/f-system.security.crypto_9_1.cpp)]\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/visualbasic/f-system.security.crypto_9_1.vb)]"
  syntax:
    content: public const string XmlDsigExcC14NTransformUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  id: XmlDsigExcC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigExcC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) de canonização de XML exclusiva, com comentários. Esse campo é constante."
  remarks: "O valor do campo XmlDsigExcC14NWithCommentsTransformUrl é &quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>classe implementa a transformação descrita pelo campo XmlDsigExcC14NWithCommentsTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/2001/10/xml-exc-c14n#WithComments."
  example:
  - "The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class.  This sample creates an envelope signature.  \n  \n [!code-cs[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/csharp/15045a8f-c740-45e0-8c9c-_1.cs)]\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/cpp/15045a8f-c740-45e0-8c9c-_1.cpp)]\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/visualbasic/15045a8f-c740-45e0-8c9c-_1.vb)]"
  syntax:
    content: public const string XmlDsigExcC14NWithCommentsTransformUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  id: XmlDsigHMACSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigHMACSHA1Url
  nameWithType: SignedXml.XmlDsigHMACSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para o padrão <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref> algoritmo para assinaturas digitais XML. Esse campo é constante."
  remarks: "O valor do campo XmlDsigHMACSHA1Url é &quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/2000/09/xmldsig#hmac-sha1."
  syntax:
    content: public const string XmlDsigHMACSHA1Url;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  id: XmlDsigMinimalCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigMinimalCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para o algoritmo de canonização mínima padrão para assinaturas digitais XML. Esse campo é constante."
  remarks: "O valor do campo XmlDsigMinimalCanonicalizationUrl é &quot;http://www.w3.org/2000/09/xmldsig#minimal&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/2000/09/xmldsig#minimal."
  syntax:
    content: public const string XmlDsigMinimalCanonicalizationUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  id: XmlDsigNamespaceUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigNamespaceUrl
  nameWithType: SignedXml.XmlDsigNamespaceUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para o namespace padrão para assinaturas digitais XML. Esse campo é constante."
  remarks: "O valor do campo XmlDsigNamespaceUrl é &quot;http://www.w3.org/2000/09/xmldsig#&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/2000/09/xmldsig#."
  syntax:
    content: public const string XmlDsigNamespaceUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  id: XmlDsigRSASHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA1Url
  nameWithType: SignedXml.XmlDsigRSASHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para o padrão <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> método de assinatura para assinaturas digitais XML. Esse campo é constante."
  remarks: "O valor do campo XmlDsigRSASHA1Url é &quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/2000/09/xmldsig#rsa-sha1."
  syntax:
    content: public const string XmlDsigRSASHA1Url;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  id: XmlDsigRSASHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA256Url
  nameWithType: SignedXml.XmlDsigRSASHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de recurso uniforme (URI) para o <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> variação de método de assinatura de SHA-256 para assinaturas digitais XML. Esse campo é constante."
  remarks: "O valor do campo XmlDsigRSASHA256Url é &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em [http://www.w3.org/2001/04/xmldsig-more#rsa-sha256](http://www.w3.org/2001/04/xmldsig-more)."
  syntax:
    content: public const string XmlDsigRSASHA256Url;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  id: XmlDsigRSASHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA384Url
  nameWithType: SignedXml.XmlDsigRSASHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de recurso uniforme (URI) para o <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> variação de método de assinatura de SHA-384 para assinaturas digitais XML. Esse campo é constante."
  remarks: "O valor do campo XmlDsigRSASHA384Url é &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em [http://www.w3.org/2001/04/xmldsig-more#rsa-sha384](http://www.w3.org/2001/04/xmldsig-more#rsa-sha384)."
  syntax:
    content: public const string XmlDsigRSASHA384Url;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  id: XmlDsigRSASHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA512Url
  nameWithType: SignedXml.XmlDsigRSASHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de recurso uniforme (URI) para o <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> SHA-512 variação de método de assinatura para assinaturas digitais XML. Esse campo é constante."
  remarks: "O valor do campo XmlDsigRSASHA512Url é &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em [http://www.w3.org/2001/04/xmldsig-more#rsa-sha512](http://www.w3.org/2001/04/xmldsig-more#rsa-sha512)."
  syntax:
    content: public const string XmlDsigRSASHA512Url;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  id: XmlDsigSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA1Url
  nameWithType: SignedXml.XmlDsigSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para o padrão <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref> método para assinaturas digitais XML digest. Esse campo é constante."
  remarks: "O valor do campo XmlDsigSHA1Url é &quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/2000/09/xmldsig#sha1."
  syntax:
    content: public const string XmlDsigSHA1Url;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  id: XmlDsigSHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA256Url
  nameWithType: SignedXml.XmlDsigSHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para o padrão <xref href=&quot;System.Security.Cryptography.SHA256&quot;> </xref> método para assinaturas digitais XML digest. Esse campo é constante."
  remarks: "O valor do campo XmlDsigSHA256Url é &quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em [http://www.w3.org/2001/04/xmlenc#sha256](http://www.w3.org/2001/04/xmlenc#sha256)."
  syntax:
    content: public const string XmlDsigSHA256Url;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  id: XmlDsigSHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA384Url
  nameWithType: SignedXml.XmlDsigSHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para o padrão <xref href=&quot;System.Security.Cryptography.SHA384&quot;> </xref> método para assinaturas digitais XML digest. Esse campo é constante."
  remarks: "O valor do campo XmlDsigSHA384Url é &quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em [http://www.w3.org/2001/04/xmldsig-more#sha384](http://www.w3.org/2001/04/xmldsig-more#sha384)."
  syntax:
    content: public const string XmlDsigSHA384Url;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  id: XmlDsigSHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA512Url
  nameWithType: SignedXml.XmlDsigSHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para o padrão <xref href=&quot;System.Security.Cryptography.SHA512&quot;> </xref> método para assinaturas digitais XML digest. Esse campo é constante."
  remarks: "O valor do campo XmlDsigSHA512Url é &quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em [http://www.w3.org/2001/04/xmlenc#sha512](http://www.w3.org/2001/04/xmlenc#sha512)."
  syntax:
    content: public const string XmlDsigSHA512Url;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  id: XmlDsigXPathTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigXPathTransformUrl
  nameWithType: SignedXml.XmlDsigXPathTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o Uniform Resource Identifier (URI) para o XML Path Language (XPath). Esse campo é constante."
  remarks: "O valor do campo XmlDsigXPathTransformUrl é &quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>classe implementa a transformação descrita pelo campo XmlDsigXPathTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/TR/1999/REC-xpath-19991116."
  example:
  - "The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class.  \n  \n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_1_1.vb)]\n [!code-cs[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_1_1.cs)]"
  syntax:
    content: public const string XmlDsigXPathTransformUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  id: XmlDsigXsltTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigXsltTransformUrl
  nameWithType: SignedXml.XmlDsigXsltTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para transformações XSLT. Esse campo é constante."
  remarks: "O valor do campo XmlDsigXsltTransformUrl é &quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;.       Use este campo convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>classe implementa a transformação descrita pelo campo XmlDsigXsltTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>       Para obter mais informações, consulte a especificação de World Wide Web Consortium (W3C) em http://www.w3.org/TR/1999/REC-xslt-19991116."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class.  \n  \n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/cpp/f-system.security.crypto_3_1.cpp)]\n [!code-cs[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_3_1.cs)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_3_1.vb)]"
  syntax:
    content: public const string XmlDsigXsltTransformUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  id: XmlLicenseTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlLicenseTransformUrl
  nameWithType: SignedXml.XmlLicenseTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representa o identificador de URI (Uniform Resource) para o algoritmo de transformação de licença usado para normalizar XrML licenças para assinaturas."
  remarks: "O valor do campo XmlLicenseTransformUrl é &quot;urn: mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform&quot; usar esse campo para convenientemente fornecer um valor para um dos atributos de um elemento usado para XMLDSIG URI.       O <xref:System.Security.Cryptography.Xml.XmlLicenseTransform>classe implementa a transformação descrita pelo campo XmlLicenseTransformUrl.</xref:System.Security.Cryptography.Xml.XmlLicenseTransform>"
  syntax:
    content: public const string XmlLicenseTransformUrl;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml()
  nameWithType: SignedXml.SignedXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml()
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml(XmlDocument)
  nameWithType: SignedXml.SignedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlDocument)
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml(XmlElement)
  nameWithType: SignedXml.SignedXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlElement)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddObject(DataObject)
  nameWithType: SignedXml.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddObject(DataObject)
- uid: System.Security.Cryptography.Xml.DataObject
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: DataObject
  nameWithType: DataObject
  fullName: System.Security.Cryptography.Xml.DataObject
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddReference(Reference)
  nameWithType: SignedXml.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddReference(Reference)
- uid: System.Security.Cryptography.Xml.Reference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Reference
  nameWithType: Reference
  fullName: System.Security.Cryptography.Xml.Reference
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature()
  nameWithType: SignedXml.CheckSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(KeyedHashAlgorithm)
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm
  fullName: System.Security.Cryptography.KeyedHashAlgorithm
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(X509Certificate2,Boolean)
  nameWithType: SignedXml.CheckSignature(X509Certificate2,Boolean)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignatureReturningKey(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature()
  nameWithType: SignedXml.ComputeSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature()
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(KeyedHashAlgorithm)
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
  fullName: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
- uid: System.Security.Cryptography.Xml.EncryptedXml
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptedXml
  nameWithType: EncryptedXml
  fullName: System.Security.Cryptography.Xml.EncryptedXml
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetIdElement(XmlDocument,String)
  nameWithType: SignedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.SignedXml.GetIdElement(XmlDocument,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetPublicKey()
  nameWithType: SignedXml.GetPublicKey()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetPublicKey()
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetXml()
  nameWithType: SignedXml.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetXml()
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.KeyInfo
- uid: System.Security.Cryptography.Xml.KeyInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyInfo
  nameWithType: KeyInfo
  fullName: System.Security.Cryptography.Xml.KeyInfo
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: SignedXml.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.SignedXml.m_signature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: m_signature
  nameWithType: SignedXml.m_signature
  fullName: System.Security.Cryptography.Xml.SignedXml.m_signature
- uid: System.Security.Cryptography.Xml.Signature
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Signature
  nameWithType: Signature
  fullName: System.Security.Cryptography.Xml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: m_strSigningKeyName
  nameWithType: SignedXml.m_strSigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Resolver
  nameWithType: SignedXml.Resolver
  fullName: System.Security.Cryptography.Xml.SignedXml.Resolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
  fullName: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
- uid: System.Collections.ObjectModel.Collection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<String>
  nameWithType: Collection<String>
  fullName: System.Collections.ObjectModel.Collection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.Xml.SignedXml.Signature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Signature
  nameWithType: SignedXml.Signature
  fullName: System.Security.Cryptography.Xml.SignedXml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
- uid: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}
  parent: System
  isExternal: true
  name: Func<SignedXml,Boolean>
  nameWithType: Func<SignedXml,Boolean>
  fullName: System.Func<System.Security.Cryptography.Xml.SignedXml,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Security.Cryptography.Xml.SignedXml,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.Xml.SignedXml
    name: SignedXml
    nameWithType: SignedXml
    fullName: SignedXml
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKey
  nameWithType: SignedXml.SigningKey
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKey
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDecryptionTransformUrl
  nameWithType: SignedXml.XmlDecryptionTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigBase64TransformUrl
  nameWithType: SignedXml.XmlDsigBase64TransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigC14NTransformUrl
  nameWithType: SignedXml.XmlDsigC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigCanonicalizationWithCommentsUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigDSAUrl
  nameWithType: SignedXml.XmlDsigDSAUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigEnvelopedSignatureTransformUrl
  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigExcC14NTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigExcC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigHMACSHA1Url
  nameWithType: SignedXml.XmlDsigHMACSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigMinimalCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigNamespaceUrl
  nameWithType: SignedXml.XmlDsigNamespaceUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA1Url
  nameWithType: SignedXml.XmlDsigRSASHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA256Url
  nameWithType: SignedXml.XmlDsigRSASHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA384Url
  nameWithType: SignedXml.XmlDsigRSASHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA512Url
  nameWithType: SignedXml.XmlDsigRSASHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA1Url
  nameWithType: SignedXml.XmlDsigSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA256Url
  nameWithType: SignedXml.XmlDsigSHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA384Url
  nameWithType: SignedXml.XmlDsigSHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA512Url
  nameWithType: SignedXml.XmlDsigSHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigXPathTransformUrl
  nameWithType: SignedXml.XmlDsigXPathTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigXsltTransformUrl
  nameWithType: SignedXml.XmlDsigXsltTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlLicenseTransformUrl
  nameWithType: SignedXml.XmlLicenseTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml
  nameWithType: SignedXml.SignedXml
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddObject
  nameWithType: SignedXml.AddObject
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddReference
  nameWithType: SignedXml.AddReference
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature
  nameWithType: SignedXml.CheckSignature
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignatureReturningKey
  nameWithType: SignedXml.CheckSignatureReturningKey
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature
  nameWithType: SignedXml.ComputeSignature
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetIdElement
  nameWithType: SignedXml.GetIdElement
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetPublicKey
  nameWithType: SignedXml.GetPublicKey
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetXml
  nameWithType: SignedXml.GetXml
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: LoadXml
  nameWithType: SignedXml.LoadXml
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Resolver
  nameWithType: SignedXml.Resolver
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
- uid: System.Security.Cryptography.Xml.SignedXml.Signature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Signature
  nameWithType: SignedXml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKey
  nameWithType: SignedXml.SigningKey
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
