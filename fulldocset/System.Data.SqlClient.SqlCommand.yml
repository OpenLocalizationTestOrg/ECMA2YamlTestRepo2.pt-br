### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlCommand
  id: SqlCommand
  children:
  - System.Data.SqlClient.SqlCommand.#ctor
  - System.Data.SqlClient.SqlCommand.#ctor(System.String)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.Cancel
  - System.Data.SqlClient.SqlCommand.Clone
  - System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  - System.Data.SqlClient.SqlCommand.CommandText
  - System.Data.SqlClient.SqlCommand.CommandTimeout
  - System.Data.SqlClient.SqlCommand.CommandType
  - System.Data.SqlClient.SqlCommand.Connection
  - System.Data.SqlClient.SqlCommand.CreateDbParameter
  - System.Data.SqlClient.SqlCommand.CreateParameter
  - System.Data.SqlClient.SqlCommand.DbConnection
  - System.Data.SqlClient.SqlCommand.DbParameterCollection
  - System.Data.SqlClient.SqlCommand.DbTransaction
  - System.Data.SqlClient.SqlCommand.DesignTimeVisible
  - System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  - System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  - System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReader
  - System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteScalar
  - System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.Notification
  - System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  - System.Data.SqlClient.SqlCommand.Parameters
  - System.Data.SqlClient.SqlCommand.Prepare
  - System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  - System.Data.SqlClient.SqlCommand.StatementCompleted
  - System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  - System.Data.SqlClient.SqlCommand.Transaction
  - System.Data.SqlClient.SqlCommand.UpdatedRowSource
  langs:
  - csharp
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
  type: Class
  summary: "Representa uma instrução Transact-SQL ou procedimento armazenado para executar contra um banco de dados do SQL Server. Essa classe não pode ser herdada."
  remarks: "Quando uma instância do SqlCommand é criada, as propriedades de leitura/gravação são definidas para seus valores iniciais. Para obter uma lista desses valores, consulte o construtor de SqlCommand.       SqlCommand apresenta os seguintes métodos para executar comandos em um banco de dados do SQL Server: | Item | Descrição |   |----------|-----------------|   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>| Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por este SqlCommand, geralmente executar comandos como instruções INSERT, DELETE, UPDATE e SET.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Cada chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>deve estar combinada com uma chamada para <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>que termina a operação, geralmente em um thread separado. |   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>| Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por esta SqlCommand e recupera os resultados de um ou mais conjuntos de servidor.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Cada chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>deve estar combinada com uma chamada para <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>que termina a operação, geralmente em um thread separado. |   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>| Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por esta SqlCommand.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Cada chamada para `BeginExecuteXmlReader` devem estar combinados com uma chamada para `EndExecuteXmlReader`, que termina a operação, geralmente em um thread separado e retorna um objeto <xref:System.Xml.XmlReader>. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>| Executa comandos que retornam linhas.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> </xref:System.Xml.XmlReader> Para melhorar o desempenho, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>invoca comandos usando o Transact-SQL `sp_executesql` procedimento armazenado do sistema.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Portanto, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>não pode ter o efeito que você deseja se usado para executar comandos como instruções Transact-SQL SET. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>| Executa comandos como instruções Transact-SQL INSERT, DELETE, UPDATE e conjunto. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>| Recupera um valor único (por exemplo, um valor agregado) de um banco de dados. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>| Envia o <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>para o <xref:System.Data.SqlClient.SqlCommand.Connection%2A>e cria um objeto <xref:System.Xml.XmlReader>. |       Você pode redefinir o <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>propriedade e reutilização objeto SqlCommand.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> No entanto, você deve fechar o <xref:System.Data.SqlClient.SqlDataReader>antes de executar um comando de novo ou anterior.</xref:System.Data.SqlClient.SqlDataReader>       Se um <xref:System.Data.SqlClient.SqlException>é gerado pelo método de execução de um SqlCommand o <xref:System.Data.SqlClient.SqlConnection>permanece aberto quando o nível de severidade 19 ou menos.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlException> Quando o nível de severidade 20 ou maior, o servidor fecha normalmente <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> No entanto, o usuário pode reabrir a conexão e continuar.      > [!NOTE] > Nameless, também chamado de ordinal, parâmetros não são suportados pelo provedor de dados .NET Framework para SQL Server."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a SqlCommand, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader> and then the <xref:System.Data.SqlClient.SqlConnection> as it exits the `Using` code blocks.  \n  \n [!code-cs[Classic WebData SqlCommand Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._6_1.cs)]\n [!code-vb[Classic WebData SqlCommand Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._6_1.vb)]  \n  \n The following sample shows how to create and execute different types of SqlCommand objects.  \n  \n First you must create the sample database, by executing the following script:  \n  \n```  \nUSE [master]  \nGO  \n  \nCREATE DATABASE [MySchool]  \nGO  \n  \nUSE [MySchool]  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE procedure [dbo].[CourseExtInfo] @CourseId int  \nas  \nselect c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  \nfrom Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  \nwhere c.CourseID=@CourseId  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \ncreate procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  \nas  \nselect @CourseCount=Count(c.CourseID)  \nfrom course as c  \nwhere c.DepartmentID=@DepartmentId  \n  \nselect d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  \nfrom Department as d  \nwhere d.DepartmentID=@DepartmentId  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCreate PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   \n@Year int,@BudgetSum money output  \nAS  \nBEGIN  \n        SELECT @BudgetSum=SUM([Budget])  \n  FROM [MySchool].[dbo].[Department]  \n  Where YEAR([StartDate])=@Year   \n  \nSELECT [DepartmentID]  \n      ,[Name]  \n      ,[Budget]  \n      ,[StartDate]  \n      ,[Administrator]  \n  FROM [MySchool].[dbo].[Department]  \n  Where YEAR([StartDate])=@Year  \n  \nEND  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Course](~/add/includes/ajax-current-ext-md.md [nvarchar](10) NOT NULL,  \n[Year] [smallint] NOT NULL,  \n[Title] [nvarchar](100) NOT NULL,  \n[Credits] [int] NOT NULL,  \n[DepartmentID] [int] NOT NULL,  \n CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   \n(  \n[CourseID] ASC,  \n[Year] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Department](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[Name] [nvarchar](50) NOT NULL,  \n[Budget] [money] NOT NULL,  \n[StartDate] [datetime] NOT NULL,  \n[Administrator] [int] NULL,  \n CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   \n(  \n[DepartmentID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Person](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[LastName] [nvarchar](50) NOT NULL,  \n[FirstName] [nvarchar](50) NOT NULL,  \n[HireDate] [datetime] NULL,  \n[EnrollmentDate] [datetime] NULL,  \n CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   \n(  \n[PersonID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[StudentGrade](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[CourseID] [nvarchar](10) NOT NULL,  \n[StudentID] [int] NOT NULL,  \n[Grade] [decimal](3, 2) NOT NULL,  \n CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   \n(  \n[EnrollmentID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \ncreate view [dbo].[EnglishCourse]  \nas  \nselect c.CourseID,c.Title,c.Credits,c.DepartmentID  \nfrom Course as c join Department as d on c.DepartmentID=d.DepartmentID  \nwhere d.Name=N'English'  \n  \nGO  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  \nSET IDENTITY_INSERT [dbo].[Department] ON   \n  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  \nSET IDENTITY_INSERT [dbo].[Department] OFF  \nSET IDENTITY_INSERT [dbo].[Person] ON   \n  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  \nSET IDENTITY_INSERT [dbo].[Person] OFF  \nSET IDENTITY_INSERT [dbo].[StudentGrade] ON   \n  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  \nSET IDENTITY_INSERT [dbo].[StudentGrade] OFF  \nALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  \nREFERENCES [dbo].[Department] ([DepartmentID])  \nGO  \nALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  \nGO  \nALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  \nREFERENCES [dbo].[Person] ([PersonID])  \nGO  \nALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  \nGO  \n```  \n  \n Next, compile and execute the following:  \n  \n```  \nusing System;  \nusing System.Data;  \nusing System.Data.SqlClient;  \nusing System.Threading.Tasks;  \n  \nclass Program {  \n  \n   static class SqlHelper {  \n      // Set the connection, command, and then execute the command with non query.  \n      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   \n               // type is only for OLE DB.    \n               cmd.CommandType = commandType;  \n               cmd.Parameters.AddRange(parameters);  \n  \n               conn.Open();  \n               return cmd.ExecuteNonQuery();  \n            }  \n         }  \n      }  \n  \n      // Set the connection, command, and then execute the command and only return one value.  \n      public static Object ExecuteScalar(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n               cmd.CommandType = commandType;  \n               cmd.Parameters.AddRange(parameters);  \n  \n               conn.Open();  \n               return cmd.ExecuteScalar();  \n            }  \n         }  \n      }  \n  \n      // Set the connection, command, and then execute the command with query and return the reader.  \n      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         SqlConnection conn = new SqlConnection(connectionString);  \n  \n         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n            cmd.CommandType = commandType;  \n            cmd.Parameters.AddRange(parameters);  \n  \n            conn.Open();  \n            // When using CommandBehavior.CloseConnection, the connection will be closed when the   \n            // IDataReader is closed.  \n            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  \n  \n            return reader;  \n         }  \n      }  \n   }  \n  \n   static void Main(string[] args) {  \n      String connectionString = \"Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;\";  \n  \n      CountCourses(connectionString, 2012);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Following result is the departments that started from 2007:\");  \n      GetDepartments(connectionString, 2007);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Add the credits when the credits of course is lower than 4.\");  \n      AddCredits(connectionString, 4);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Please press any key to exit...\");  \n      Console.ReadKey();  \n   }  \n  \n   static void CountCourses(String connectionString, Int32 year) {  \n      String commandText = \"Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year\";  \n      SqlParameter parameterYear = new SqlParameter(\"@Year\", SqlDbType.Int);  \n      parameterYear.Value = year;  \n  \n      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  \n      Int32 count;  \n      if (Int32.TryParse(oValue.ToString(), out count))  \n         Console.WriteLine(\"There {0} {1} course{2} in {3}.\", count > 1 ? \"are\" : \"is\", count, count > 1 ? \"s\" : null, year);  \n   }  \n  \n   // Display the Departments that start from the specified year.  \n   static void GetDepartments(String connectionString, Int32 year) {  \n      String commandText = \"dbo.GetDepartmentsOfSpecifiedYear\";  \n  \n      // Specify the year of StartDate  \n      SqlParameter parameterYear = new SqlParameter(\"@Year\", SqlDbType.Int);  \n      parameterYear.Value = year;  \n  \n      // When the direction of parameter is set as Output, you can get the value after   \n      // executing the command.  \n      SqlParameter parameterBudget = new SqlParameter(\"@BudgetSum\", SqlDbType.Money);  \n      parameterBudget.Direction = ParameterDirection.Output;  \n  \n      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  \n          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  \n         Console.WriteLine(\"{0,-20}{1,-20}{2,-20}{3,-20}\", \"Name\", \"Budget\", \"StartDate\",  \n             \"Administrator\");  \n         while (reader.Read()) {  \n            Console.WriteLine(\"{0,-20}{1,-20:C}{2,-20:d}{3,-20}\", reader[\"Name\"],  \n                reader[\"Budget\"], reader[\"StartDate\"], reader[\"Administrator\"]);  \n         }  \n      }  \n      Console.WriteLine(\"{0,-20}{1,-20:C}\", \"Sum:\", parameterBudget.Value);  \n   }  \n  \n   // If credits of course is lower than the certain value, the method will add the credits.  \n   static void AddCredits(String connectionString, Int32 creditsLow) {  \n      String commandText = \"Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits\";  \n  \n      SqlParameter parameterCredits = new SqlParameter(\"@Credits\", creditsLow);  \n  \n      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  \n  \n      Console.WriteLine(\"{0} row{1} {2} updated.\", rows, rows > 1 ? \"s\" : null, rows > 1 ? \"are\" : \"is\");  \n   }  \n}  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand()
  nameWithType: SqlCommand.SqlCommand()
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> classe."
  remarks: "O construtor base inicializa todos os campos com seus valores padrão. A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| cadeia de caracteres vazia (&quot;&quot;) |   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| Nulo |       Você pode alterar o valor de qualquer uma dessas propriedades por meio de uma chamada separada para a propriedade.</xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets the `CommandTimeout` property.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._39_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._39_1.cs)]"
  syntax:
    content: public SqlCommand ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String)
  nameWithType: SqlCommand.SqlCommand(String)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> classe com o texto da consulta."
  remarks: "Quando uma instância de <xref:System.Data.SqlClient.SqlCommand>é criado, os seguintes propriedades são definidas como valores iniciais de leitura/gravação.</xref:System.Data.SqlClient.SqlCommand>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| Nulo |       Você pode alterar o valor de qualquer uma dessas propriedades por meio de uma chamada separada para a propriedade.</xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, passing in the connection string and command text.  \n  \n [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._21_1.vb)]\n [!code-cs[Classic WebData SqlCommand.SqlCommand1 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._21_1.cs)]"
  syntax:
    content: public SqlCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "O texto da consulta."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> classe com o texto da consulta e uma <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: "A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| Um novo <xref:System.Data.SqlClient.SqlConnection>que é o valor para o `connection` parâmetro. |       Você pode alterar o valor de qualquer um desses parâmetros, definindo a propriedade relacionada.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlCommand.SqlCommand2 Example#1](~/add/codesnippet/csharp/c858d494-4959-470c-91ba-_1.cs)]\n [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/add/codesnippet/visualbasic/c858d494-4959-470c-91ba-_1.vb)]"
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "O texto da consulta."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "Um <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> que representa a conexão a uma instância do SQL Server."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection,SqlTransaction)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> classe com o texto da consulta, uma <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>e o <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref>."
  remarks: "A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| Um novo <xref:System.Data.SqlClient.SqlConnection>que é o valor para o `connection` parâmetro. |       Você pode alterar o valor de qualquer um desses parâmetros, definindo a propriedade relacionada.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "O texto da consulta."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "Um <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> que representa a conexão a uma instância do SQL Server."
    - id: transaction
      type: System.Data.SqlClient.SqlTransaction
      description: "O <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> no qual o <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> executa."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> classe com o texto do comando especificado, conexão, transações e configuração de criptografia."
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);
    parameters:
    - id: cmdText
      type: System.String
      description: "O texto da consulta."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "Um <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> que representa a conexão a uma instância do SQL Server."
    - id: transaction
      type: System.Data.SqlClient.SqlTransaction
      description: "O <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> no qual o <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> executa."
    - id: columnEncryptionSetting
      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
      description: "A configuração de criptografia. Para obter mais informações, consulte [sempre criptografado](https://msdn.microsoft.com/library/mt163865.aspx)."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  id: BeginExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteNonQuery()
  nameWithType: SqlCommand.BeginExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por esta <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "O método BeginExecuteNonQuery inicia o processo de execução de maneira assíncrona um [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instrução ou procedimento armazenado que não retornam linhas, para que outras tarefas podem ser executadas simultaneamente, enquanto a instrução está em execução. Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>método para concluir a operação.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> O método BeginExecuteNonQuery retorna imediatamente (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> não tem efeito sobre BeginExecuteNonQuery), mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>chamada de método, ele não deve executar outras chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>antes da execução do comando é concluído faz com que o <xref:System.Data.SqlClient.SqlCommand>objeto a ser bloqueado até que a execução seja concluída.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>       Observe que o texto de comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros forem enviados, esse método pode bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas.       Porque essa sobrecarga não oferece suporte a um procedimento de retorno de chamada, os desenvolvedores devem ambos sondagem para determinar se o comando foi concluída, usando o <xref:System.IAsyncResult.IsCompleted%2A>propriedade do <xref:System.IAsyncResult>retornado pelo método BeginExecuteNonQuery; ou aguarde a conclusão de um ou mais comandos usando a <xref:System.IAsyncResult.AsyncWaitHandle%2A>propriedade de retornado <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>"
  example:
  - "The following console application creates updates data within the **AdventureWorks** sample database, doing its work asynchronously. In order to emulate a long-running process, this example inserts a WAITFOR statement in the command text. Normally, you would not take efforts to make your commands run slower, but doing this in this case makes it easier to demonstrate the asynchronous behavior.  \n  \n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._34_1.vb)]\n [!code-cs[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/add/codesnippet/csharp/m-system.data.sqlclient._34_1.cs)]"
  syntax:
    content: public IAsyncResult BeginExecuteNonQuery ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que pode ser usado para pesquisar ou aguardar os resultados ou ambos; esse valor também é necessária ao invocar <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*>, que retorna o número de linhas afetadas.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Qualquer erro que ocorreu ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O par nome/valor &quot;Asynchronous Processing = true&quot; não foi incluído na cadeia de conexão definindo a conexão para este <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  id: BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteNonQuery(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por esta <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>, recebe informações de procedimento e o estado de um retorno de chamada."
  remarks: "O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>método inicia o processo de forma assíncrona a execução de uma instrução Transact-SQL ou procedimento armazenado que não retorna linhas, para que outras tarefas podem ser executadas simultaneamente, enquanto a instrução está em execução.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>método para concluir a operação.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>método retorna imediatamente (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> não tem efeito sobre BeginExecuteNonQuery), mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>chamada de método, ele não deve executar outras chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>antes da execução do comando é concluído faz com que o <xref:System.Data.SqlClient.SqlCommand>objeto a ser bloqueado até que a execução seja concluída.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>       O `callback` parâmetro permite que você especifique um <xref:System.AsyncCallback>delegado que é chamado quando a instrução é concluída.</xref:System.AsyncCallback> Você pode chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>método dentro deste procedimento delegado, ou de qualquer outro local dentro de seu aplicativo.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> Além disso, você pode passar qualquer objeto de `asyncStateObject` parâmetro e o procedimento de retorno de chamada podem recuperar essas informações usando o <xref:System.IAsyncResult.AsyncState%2A>propriedade.</xref:System.IAsyncResult.AsyncState%2A>       Observe que o texto de comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros forem enviados, esse método pode bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas.       Como o procedimento de retorno de chamada é executado de dentro de um thread em segundo plano fornecido pelo Microsoft .NET common language runtime, é muito importante que você adotar uma abordagem rigorosa para lidar com interações entre threads de seus aplicativos. Por exemplo, você não deve interagir com conteúdo de um formulário de dentro de seu procedimento de retorno de chamada; Você precisa atualizar o formulário, você deve alternar para thread do formulário para fazer seu trabalho. O exemplo neste tópico demonstra esse comportamento.       Todos os erros que ocorrem durante a execução da operação são gerados como exceções no procedimento de retorno de chamada. Você deve tratar a exceção do procedimento de retorno de chamada, não no aplicativo principal. Consulte o exemplo neste tópico para obter informações adicionais sobre o tratamento de exceções no procedimento de retorno de chamada."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteNonQuery method, executing a Transact-SQL statement that includes a delay of several seconds (emulating a long-running command).  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteNonQueryForm.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteNonQueryForm.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>delegado é invocado quando a execução do comando foi concluída.</xref:System.AsyncCallback> Passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Microsoft Visual Basic) para indicar que nenhum retorno de chamada é necessário."
    - id: stateObject
      type: System.Object
      description: "Um objeto de estado definido pelo usuário que é passado para o procedimento de retorno de chamada. Recuperar esse objeto de dentro do procedimento de retorno de chamada usando o <xref:System.IAsyncResult.AsyncState*>propriedade.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que pode ser usado para pesquisar ou aguardar os resultados ou ambos; esse valor também é necessária ao invocar <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*>, que retorna o número de linhas afetadas.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Qualquer erro que ocorreu ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O par nome/valor &quot;Asynchronous Processing = true&quot; não foi incluído na cadeia de conexão definindo a conexão para este <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader
  id: BeginExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader()
  nameWithType: SqlCommand.BeginExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por esta <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>e recupera um ou mais conjuntos de resultados do servidor."
  remarks: "O método BeginExecuteReader inicia o processo de forma assíncrona a execução de uma instrução Transact-SQL ou procedimento armazenado que retorna linhas, para que outras tarefas podem ser executadas simultaneamente, enquanto a instrução está em execução. Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>método para concluir a operação e recuperar o <xref:System.Data.SqlClient.SqlDataReader>retornada pelo comando.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> O método BeginExecuteReader retorna imediatamente, mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>chamada de método, ele não deve executar outras chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>antes da execução do comando é concluído faz com que o <xref:System.Data.SqlClient.SqlCommand>objeto a ser bloqueado até que a execução seja concluída.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       Observe que o texto de comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros forem enviados, esse método pode bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas. Embora a execução do comando é assíncrona, a busca de valor é ainda síncrono. Isso significa que as chamadas para <xref:System.Data.SqlClient.SqlDataReader.Read%2A>pode bloquear se são necessários mais dados e de rede subjacente blocos de operação de leitura.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Porque essa sobrecarga não oferece suporte a um procedimento de retorno de chamada, os desenvolvedores devem ambos sondagem para determinar se o comando foi concluída, usando o <xref:System.IAsyncResult.IsCompleted%2A>propriedade do <xref:System.IAsyncResult>retornado pelo método BeginExecuteReader; ou aguarde a conclusão de um ou mais comandos usando a <xref:System.IAsyncResult.AsyncWaitHandle%2A>propriedade de retornado <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>ou BeginExecuteReader para acessar dados XML, do SQL Server retornará resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>para consultas de leitura de FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Para obter mais informações, consulte o artigo Q310378, &quot;PRB: XML dados é truncado quando você usar SqlDataReader,&quot; na Base de dados de Conhecimento Microsoft em http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. As soon as the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._4_1.cs)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._4_1.vb)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que pode ser usado para pesquisar ou aguardar os resultados ou ambos; esse valor também é necessária ao invocar <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, que retorna um <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> instância pode ser usada para recuperar as linhas retornadas.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Qualquer erro que ocorreu ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O par nome/valor &quot;Asynchronous Processing = true&quot; não foi incluído na cadeia de conexão definindo a conexão para este <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  id: BeginExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por esta <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> usando um do <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> valores."
  remarks: "O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>método inicia o processo de forma assíncrona a execução de uma instrução Transact-SQL ou procedimento armazenado que retorna linhas, para que outras tarefas podem ser executadas simultaneamente, enquanto a instrução está em execução.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>método para concluir a operação e recuperar o <xref:System.Data.SqlClient.SqlDataReader>retornada pelo comando.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>método retorna imediatamente, mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>chamada de método, ele não deve executar outras chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>antes da execução do comando é concluído faz com que o <xref:System.Data.SqlClient.SqlCommand>objeto a ser bloqueado até que a execução seja concluída.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       O `behavior` parâmetro permite que você especifique opções que controlam o comportamento do comando e sua conexão. Esses valores podem ser combinados (usando a linguagem de programação `OR` operador); em geral, os desenvolvedores usam o `CommandBehavior.CloseConnection` valor para certificar-se de que a conexão é fechada pelo tempo de execução quando o <xref:System.Data.SqlClient.SqlDataReader>está fechado.</xref:System.Data.SqlClient.SqlDataReader>       Observe que o texto de comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros forem enviados, esse método pode bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas. Embora a execução do comando é assíncrona, a busca de valor é ainda síncrono. Isso significa que as chamadas para <xref:System.Data.SqlClient.SqlDataReader.Read%2A>pode bloquear se são necessários mais dados e de rede subjacente blocos de operação de leitura.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Porque essa sobrecarga não oferece suporte a um procedimento de retorno de chamada, os desenvolvedores devem ou sondar para determinar se o comando foi concluída, usando a <xref:System.IAsyncResult.IsCompleted%2A>propriedade <xref:System.IAsyncResult>retornada pelo <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>método; ou aguarde a conclusão de um ou mais comandos usando a <xref:System.IAsyncResult.AsyncWaitHandle%2A>propriedade de <xref:System.IAsyncResult>.</xref:System.IAsyncResult> retornado</xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>para acessar dados XML, do SQL Server retorna todos os resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>para consultas de leitura de FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Para obter mais informações, consulte o artigo Q310378, &quot;PRB: XML dados é truncado quando você usar SqlDataReader,&quot; na Base de dados de Conhecimento Microsoft em http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \n  \n This example also passes the `CommandBehavior.CloseConnection` and `CommandBehavior.SingleRow` values in the behavior parameter, causing the connection to be closed with the returned <xref:System.Data.SqlClient.SqlDataReader> is closed, and to optimize for a single row result.  \n  \n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/add/codesnippet/visualbasic/d7d83823-a2e6-4b2d-a7a2-_1.vb)]\n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/add/codesnippet/csharp/d7d83823-a2e6-4b2d-a7a2-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Uma da <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> valores, indicando as opções de recuperação de dados e execução de instrução."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que pode ser usado para pesquisar, aguarde resultados ou ambos; esse valor também é necessária ao invocar <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, que retorna um <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> instância pode ser usada para recuperar as linhas retornadas.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Qualquer erro que ocorreu ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O par nome/valor &quot;Asynchronous Processing = true&quot; não foi incluído na cadeia de conexão definindo a conexão para este <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  id: BeginExecuteReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por esta <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> e recupera um ou mais conjuntos de resultados do servidor, mesmo com informações de procedimento e o estado de um retorno de chamada."
  remarks: "O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>método inicia o processo de forma assíncrona a execução de uma instrução Transact-SQL ou procedimento armazenado que retorna linhas, para que outras tarefas podem ser executadas simultaneamente, enquanto a instrução está em execução.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>método para concluir a operação e recuperar o <xref:System.Data.SqlClient.SqlDataReader>retornada pelo comando.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>método retorna imediatamente, mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>chamada de método, ele não deve executar outras chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>antes da conclusão da execução do comando causa o <xref:System.Data.SqlClient.SqlCommand>objeto a ser bloqueado até que a execução seja concluída.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       O `callback` parâmetro permite que você especifique um <xref:System.AsyncCallback>delegado que é chamado quando a instrução é concluída.</xref:System.AsyncCallback> Você pode chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>método dentro deste procedimento delegado, ou de qualquer outro local dentro de seu aplicativo.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Além disso, você pode passar qualquer objeto de `stateObject` parâmetro e o procedimento de retorno de chamada podem recuperar essas informações usando o <xref:System.IAsyncResult.AsyncState%2A>propriedade.</xref:System.IAsyncResult.AsyncState%2A>       Observe que o texto de comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros forem enviados, esse método pode bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas. Embora a execução do comando é assíncrona, a busca de valor é ainda síncrono. Isso significa que as chamadas para <xref:System.Data.SqlClient.SqlDataReader.Read%2A>pode bloquear se são necessários mais dados e de rede subjacente blocos de operação de leitura.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Como o procedimento de retorno de chamada é executado de dentro de um thread em segundo plano fornecido pelo tempo de execução Microsoft .NET, é muito importante que você adotar uma abordagem rigorosa para lidar com interações entre threads de seus aplicativos. Por exemplo, você não deve interagir com conteúdo de um formulário de dentro de seu procedimento de retorno de chamada; Você precisa atualizar o formulário, você deve alternar para thread do formulário para fazer seu trabalho. O exemplo neste tópico demonstra esse comportamento.       Todos os erros que ocorrem durante a execução da operação são gerados como exceções no procedimento de retorno de chamada. Você deve tratar a exceção do procedimento de retorno de chamada, não no aplicativo principal. Consulte o exemplo neste tópico para obter informações adicionais sobre o tratamento de exceções no procedimento de retorno de chamada.       Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>para acessar dados XML, do SQL Server retorna todos os resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>para consultas de leitura de FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Para obter mais informações, consulte o artigo Q310378, &quot;PRB: XML dados é truncado quando você usar SqlDataReader,&quot; na Base de dados de Conhecimento Microsoft em http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteReader method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to BeginExecuteReader.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteReaderAsync.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteReaderAsync.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>delegado é invocado quando a execução do comando foi concluída.</xref:System.AsyncCallback> Passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Microsoft Visual Basic) para indicar que nenhum retorno de chamada é necessário."
    - id: stateObject
      type: System.Object
      description: "Um objeto de estado definido pelo usuário que é passado para o procedimento de retorno de chamada. Recuperar esse objeto de dentro do procedimento de retorno de chamada usando o <xref:System.IAsyncResult.AsyncState*>propriedade.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que pode ser usado para pesquisar, aguarde resultados ou ambos; esse valor também é necessária ao invocar <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, que retorna um <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> instância que pode ser usada para recuperar as linhas retornadas.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Qualquer erro que ocorreu ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O par nome/valor &quot;Asynchronous Processing = true&quot; não foi incluído na cadeia de conexão definindo a conexão para este <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  id: BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por esta <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>, usando um do <xref uid=&quot;langword_csharp_CommandBehavior&quot; name=&quot;CommandBehavior&quot; href=&quot;&quot;> </xref> valores e recuperar um ou mais os conjuntos de resultados do servidor, mesmo com informações de procedimento e o estado de um retorno de chamada."
  remarks: "O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>método inicia o processo de forma assíncrona a execução de uma instrução Transact-SQL ou procedimento armazenado que retorna linhas, para que outras tarefas podem ser executadas simultaneamente, enquanto a instrução está em execução.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>método para concluir a operação e recuperar o <xref:System.Data.SqlClient.SqlDataReader>retornada pelo comando.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>método retorna imediatamente, mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>chamada de método, ele não deve executar outras chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>antes da execução do comando é concluído faz com que o <xref:System.Data.SqlClient.SqlCommand>objeto a ser bloqueado até que a execução seja concluída.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       O `callback` parâmetro permite que você especifique um <xref:System.AsyncCallback>delegado que é chamado quando a instrução é concluída.</xref:System.AsyncCallback> Você pode chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>método dentro deste procedimento delegado, ou de qualquer outro local dentro de seu aplicativo.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Além disso, você pode passar qualquer objeto de `stateObject` parâmetro e o procedimento de retorno de chamada podem recuperar essas informações usando o <xref:System.IAsyncResult.AsyncState%2A>propriedade.</xref:System.IAsyncResult.AsyncState%2A>       O `behavior` parâmetro permite que você especifique opções que controlam o comportamento do comando e sua conexão. Esses valores podem ser combinados (usando a linguagem de programação `Or` operador); em geral, os desenvolvedores usam o `CloseConnection` valor para certificar-se de que a conexão é fechada pelo tempo de execução quando o <xref:System.Data.SqlClient.SqlDataReader>está fechado.</xref:System.Data.SqlClient.SqlDataReader> Os desenvolvedores também podem otimizar o comportamento do <xref:System.Data.SqlClient.SqlDataReader>especificando o `SingleRow` valor quando se sabe com antecedência que a instrução Transact-SQL ou procedimento armazenado retorna apenas uma única linha.</xref:System.Data.SqlClient.SqlDataReader>       Observe que o texto de comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros forem enviados, esse método pode bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas. Embora a execução do comando é assíncrona, a busca de valor é ainda síncrono. Isso significa que as chamadas para <xref:System.Data.SqlClient.SqlDataReader.Read%2A>pode bloquear se são necessários mais dados e de rede subjacente blocos de operação de leitura.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Como o procedimento de retorno de chamada é executado de dentro de um thread em segundo plano fornecido pelo Microsoft .NET common language runtime, é muito importante que você adotar uma abordagem rigorosa para lidar com interações entre threads de seus aplicativos. Por exemplo, você não deve interagir com conteúdo de um formulário de dentro de seu procedimento de retorno de chamada - você tem a atualização do formulário, você deve alternar para thread do formulário para fazer seu trabalho. O exemplo neste tópico demonstra esse comportamento.       Todos os erros que ocorrem durante a execução da operação são gerados como exceções no procedimento de retorno de chamada. Você deve tratar a exceção do procedimento de retorno de chamada, não no aplicativo principal. Consulte o exemplo neste tópico para obter informações adicionais sobre o tratamento de exceções no procedimento de retorno de chamada.       Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>para acessar dados XML, SQL Server retornará resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>para consultas de leitura de FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Para obter mais informações, consulte o artigo Q310378, &quot;PRB: XML dados é truncado quando você usar SqlDataReader,&quot; na Base de dados de Conhecimento Microsoft em http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n This example passes the `CommandBehavior.CloseConnection` value in the `behavior` parameter, causing the returned <xref:System.Data.SqlClient.SqlDataReader> to automatically close its connection when it is closed.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>delegado é invocado quando a execução do comando foi concluída.</xref:System.AsyncCallback> Passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Microsoft Visual Basic) para indicar que nenhum retorno de chamada é necessário."
    - id: stateObject
      type: System.Object
      description: "Um objeto de estado definido pelo usuário que é passado para o procedimento de retorno de chamada. Recuperar esse objeto de dentro do procedimento de retorno de chamada usando o <xref:System.IAsyncResult.AsyncState*>propriedade.</xref:System.IAsyncResult.AsyncState*>"
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Uma da <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> valores, indicando as opções de recuperação de dados e execução de instrução."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que pode ser usado para pesquisar ou aguardar os resultados ou ambos; esse valor também é necessária ao invocar <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, que retorna um <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> instância que pode ser usada para recuperar as linhas retornadas.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Qualquer erro que ocorreu ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O par nome/valor &quot;Asynchronous Processing = true&quot; não foi incluído na cadeia de conexão definindo a conexão para este <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  id: BeginExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteXmlReader()
  nameWithType: SqlCommand.BeginExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por esta <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> e retorna resultados como um <xref:System.Xml.XmlReader>objeto.</xref:System.Xml.XmlReader>"
  remarks: "O método BeginExecuteXmlReader inicia o processo de forma assíncrona executar uma instrução Transact-SQL que retorna linhas como XML, para que outras tarefas podem ser executadas simultaneamente, enquanto a instrução está em execução. Quando a instrução for concluída, os desenvolvedores devem chamar o `EndExecuteXmlReader` método para concluir a operação e recuperar o XML retornado pelo comando. O método BeginExecuteXmlReader retorna imediatamente, mas até que o código é executado correspondente `EndExecuteXmlReader` chamada de método, ele não deve executar outras chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand> Chamando o `EndExecuteXmlReader` antes da execução do comando é concluído faz com que o <xref:System.Data.SqlClient.SqlCommand>objeto a ser bloqueado até que a execução seja concluída.</xref:System.Data.SqlClient.SqlCommand>       O <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>propriedade normalmente especifica uma instrução Transact-SQL com uma cláusula FOR XML válida.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> No entanto, `CommandText` também pode especificar uma instrução que retorna `ntext` dados que contém XML válido.       Um típico <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>consulta pode ser formatada como o exemplo c# a seguir: ```   SqlCommand command = new SqlCommand(&quot;SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` esse método também pode ser usado para recuperar um conjunto de resultados de uma linha e coluna única.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Nesse caso, se mais de uma linha é retornada, o `EndExecuteXmlReader` método anexa o <xref:System.Xml.XmlReader>para o valor na primeira linha e descarta o resto do resultado definido.</xref:System.Xml.XmlReader>       O recurso de conjunto (MARS) vários resultados ativos permite que várias ações de usar a mesma conexão.       Observe que o texto de comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros forem enviados, esse método pode bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas. Embora a execução do comando é assíncrona, a busca de valor é ainda síncrono.       Porque essa sobrecarga não oferece suporte a um procedimento de retorno de chamada, os desenvolvedores precisam a sondagem para determinar se o comando foi concluída, usando o <xref:System.IAsyncResult.IsCompleted%2A>propriedade do <xref:System.IAsyncResult>retornado pelo método BeginExecuteXmlReader; ou aguarde a conclusão de um ou mais comandos usando a <xref:System.IAsyncResult.AsyncWaitHandle%2A>propriedade de retornado <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>para acessar dados XML, do SQL Server retorna todos os resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>para consultas de leitura de FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Para obter mais informações, consulte o artigo Q310378, &quot;PRB: XML dados é truncado quando você usar SqlDataReader,&quot; na Base de dados de Conhecimento Microsoft em http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving XML data asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the XML and displays its contents.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._41_1.cs)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._41_1.vb)]"
  syntax:
    content: public IAsyncResult BeginExecuteXmlReader ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que pode ser usado para pesquisar ou aguardar os resultados ou ambos; esse valor também é necessária ao invocar <xref uid=&quot;langword_csharp_EndExecuteXmlReader&quot; name=&quot;EndExecuteXmlReader&quot; href=&quot;&quot;> </xref>, que retorna um único valor XML.</xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Qualquer erro que ocorreu ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O par nome/valor &quot;Asynchronous Processing = true&quot; não foi incluído na cadeia de conexão definindo a conexão para este <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  id: BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteXmlReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por esta <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> e retorna resultados como um <xref:System.Xml.XmlReader>do objeto, usando um procedimento de retorno de chamada.</xref:System.Xml.XmlReader>"
  remarks: "O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>método inicia o processo de forma assíncrona a execução de uma instrução Transact-SQL ou procedimento armazenado que retorna linhas como XML, para que outras tarefas podem ser executadas simultaneamente, enquanto a instrução está em execução.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>método para concluir a operação e recuperar os dados XML solicitados.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>método retorna imediatamente, mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>chamada de método, ele não deve executar outras chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>antes da execução do comando é concluído faz com que o <xref:System.Data.SqlClient.SqlCommand>objeto a ser bloqueado até que a execução seja concluída.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       O <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>propriedade normalmente especifica uma instrução Transact-SQL com uma cláusula FOR XML válida.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> No entanto, `CommandText` também pode especificar uma instrução que retorna dados que contém XML válido. Esse método também pode ser usado para recuperar um conjunto de resultados de uma linha e coluna única. Nesse caso, se mais de uma linha é retornada, o <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>método anexa o <xref:System.Xml.XmlReader>para o valor na primeira linha e descarta o resto do resultado definido.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       Uma consulta BeginExecuteXmlReader típica pode ser formatada como o exemplo c# a seguir: ```   SqlCommand command = new SqlCommand(&quot;SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` esse método também pode ser usado para recuperar um conjunto de resultados de uma linha e coluna única. Nesse caso, se mais de uma linha é retornada, o <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>método anexa o <xref:System.Xml.XmlReader>para o valor na primeira linha e descarta o resto do resultado definido.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       O recurso de conjunto (MARS) vários resultados ativos permite que várias ações de usar a mesma conexão.       O `callback` parâmetro permite que você especifique um <xref:System.AsyncCallback>delegado que é chamado quando a instrução é concluída.</xref:System.AsyncCallback> Você pode chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>método dentro deste procedimento delegado, ou de qualquer outro local dentro de seu aplicativo.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> Além disso, você pode passar qualquer objeto de `stateObject` parâmetro e o procedimento de retorno de chamada podem recuperar essas informações usando o <xref:System.IAsyncResult.AsyncState%2A>propriedade.</xref:System.IAsyncResult.AsyncState%2A>       Observe que o texto de comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros for enviada, esse método pode bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas.       Todos os erros que ocorrem durante a execução da operação são gerados como exceções no procedimento de retorno de chamada. Você deve tratar a exceção do procedimento de retorno de chamada, não no aplicativo principal. Consulte o exemplo neste tópico para obter informações adicionais sobre o tratamento de exceções no procedimento de retorno de chamada.       Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>para acessar dados XML, SQL Server retornará resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>para consultas de leitura de FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Para obter mais informações, consulte o artigo Q310378, &quot;PRB: XML dados é truncado quando você usar SqlDataReader,&quot; na Base de dados de Conhecimento Microsoft em http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteXmlReader method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter--doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method corresponding to the initial call to BeginExecuteXmlReader.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.ListBox> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteXmlReaderAsync.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteXmlReaderAsync.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>delegado é invocado quando a execução do comando foi concluída.</xref:System.AsyncCallback> Passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Microsoft Visual Basic) para indicar que nenhum retorno de chamada é necessário."
    - id: stateObject
      type: System.Object
      description: "Um objeto de estado definido pelo usuário que é passado para o procedimento de retorno de chamada. Recuperar esse objeto de dentro do procedimento de retorno de chamada usando o <xref:System.IAsyncResult.AsyncState*>propriedade.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que pode ser usado para pesquisar, aguarde resultados ou ambos; esse valor também é necessária quando o <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*>é chamado, que retorna os resultados do comando como XML.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Qualquer erro que ocorreu ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O par nome/valor &quot;Asynchronous Processing = true&quot; não foi incluído na cadeia de conexão definindo a conexão para este <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Cancel
  id: Cancel
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: SqlCommand.Cancel()
  fullName: System.Data.SqlClient.SqlCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Tenta cancelar a execução de um <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "Se não houver nada a ser cancelado, nada ocorre. No entanto, se houver um comando no processo e a tentativa de cancelar falha, nenhuma exceção é gerada.       No, casos raros, se você chamar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>, em seguida, chamar <xref:System.Data.SqlClient.SqlDataReader.Close%2A>(implicitily ou explicitamente) antes de chamar Cancelar e, em seguida, chame Cancelar, o comando Cancelar não será enviado para o SQL Server e o conjunto de resultados pode continuar a transmitir depois de chamar <xref:System.Data.SqlClient.SqlConnection.Close%2A>.</xref:System.Data.SqlClient.SqlConnection.Close%2A> </xref:System.Data.SqlClient.SqlDataReader.Close%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Para evitar isso, certifique-se de que você chamar Cancelar antes de fechar o leitor ou a conexão."
  example:
  - "The following example demonstrates the use of the Cancel method.  \n  \n [!code-vb[Classic WebData SqlCommand.Cancel#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._13_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Cancel#1](~/add/codesnippet/csharp/m-system.data.sqlclient._13_1.cs)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Clone
  id: Clone
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: SqlCommand.Clone()
  fullName: System.Data.SqlClient.SqlCommand.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Cria um novo <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto que é uma cópia da instância atual."
  syntax:
    content: public System.Data.SqlClient.SqlCommand Clone ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Um novo <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto que é uma cópia desta instância."
  overload: System.Data.SqlClient.SqlCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  id: ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define a configuração de criptografia de coluna para este comando."
  syntax:
    content: public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }
    return:
      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
      description: "A configuração de criptografia de coluna para esse comando."
  overload: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandText
  id: CommandText
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: System.Data.SqlClient.SqlCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define a instrução Transact-SQL, nome da tabela ou procedimento armazenado a ser executado na fonte de dados."
  remarks: "Quando o <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>estiver definida como `StoredProcedure`, a propriedade CommandText deve ser definida como o nome do procedimento armazenado.</xref:System.Data.SqlClient.SqlCommand.CommandType%2A> O usuário pode ser necessário usar a sintaxe de escape de caracteres se o nome do procedimento armazenado contiver caracteres especiais. O comando é executado esse procedimento armazenado quando você chama um do `Execute` métodos.       O Microsoft .NET Framework Data Provider para SQL Server não suporta o espaço reservado de ponto de interrogação (?) para passar parâmetros para uma instrução Transact-SQL ou um procedimento armazenado chamado por um comando de `CommandType.Text`. Nesse caso, os parâmetros nomeados devem ser usados. Por exemplo: ```   SELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID   ``` para obter mais informações, consulte [Configurando parâmetros e tipos de dados do parâmetro](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._56_1.vb)]\n [!code-cs[Classic WebData SqlCommand.CommandText Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._56_1.cs)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "A instrução Transact-SQL ou procedimento armazenado para executar. O padrão é uma cadeia de caracteres vazia."
  overload: System.Data.SqlClient.SqlCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: System.Data.SqlClient.SqlCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define o tempo de espera antes de encerrar a tentativa de executar um comando e gerar um erro."
  remarks: "Um valor de 0 não indica nenhum limite (uma tentativa de executar um comando aguardará indefinidamente).      > [!NOTE] > CommandTimeout a propriedade será ignorada durante as chamadas de método assíncrono, como <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>       CommandTimeout não tem nenhum efeito quando o comando é executado em uma conexão de contexto (um <xref:System.Data.SqlClient.SqlConnection>aberta com &quot;conexão de contexto = true&quot; na cadeia de conexão).</xref:System.Data.SqlClient.SqlConnection>      > [!NOTE] > Essa propriedade é o tempo limite cumulativo (para todos os pacotes que são lidas durante a invocação de um método de rede) para todas as leituras de rede durante a execução do comando ou o processamento dos resultados. Um tempo limite ainda poderá ocorrer após a primeira linha será retornada e não inclui o tempo de processamento de usuário, tempo de rede somente leitura.   >> Por exemplo, com um tempo de 30 segundo limite, se <xref:System.Data.SqlClient.SqlDataReader.Read%2A>requer dois pacotes de rede e, em seguida, ele tem 30 segundos para ler os dois pacotes de rede.</xref:System.Data.SqlClient.SqlDataReader.Read%2A> Se você chamar <xref:System.Data.SqlClient.SqlDataReader.Read%2A>novamente, ele terá outro 30 segundos para ler todos os dados que ele exige.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>      ```   using System;   using System.Data.SqlClient;   ///    public class A {      ///       public static void Main() {         string connectionString = &quot;&quot;;         // Wait for 5 second delay in the command         string queryString = &quot;waitfor delay &quot;00:00:05&quot;&quot;;         using (SqlConnection connection = new SqlConnection(connectionString)) {            connection.Open();            SqlCommand command = new SqlCommand(queryString, connection);            // Setting command timeout to 1 second            command.CommandTimeout = 1;            try {               command.ExecuteNonQuery();            }            catch (SqlException e) {               Console.WriteLine(&quot;Got expected SqlException due to command timeout &quot;);               Console.WriteLine(e);            }         }      }   }   ```"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "O tempo em segundos para aguardar o comando a ser executado. O padrão é de 30 segundos."
  overload: System.Data.SqlClient.SqlCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandType
  id: CommandType
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: System.Data.SqlClient.SqlCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define um valor que indica como o <xref:System.Data.SqlClient.SqlCommand.CommandText*>é de propriedade deve ser interpretado.</xref:System.Data.SqlClient.SqlCommand.CommandText*>"
  remarks: "Quando você define a propriedade CommandType como `StoredProcedure`, você deve definir o <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>propriedade para o nome do procedimento armazenado.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> O comando é executado esse procedimento armazenado quando você chama um dos métodos Execute.       O Microsoft .NET Framework Data Provider para SQL Server não oferece suporte para o espaço reservado de ponto de interrogação (?) para passar parâmetros para uma instrução SQL ou um procedimento armazenado chamado com um CommandType do <xref:System.Data.CommandType>.</xref:System.Data.CommandType> Nesse caso, os parâmetros nomeados devem ser usados. Por exemplo: selecione * FROM clientes WHERE CustomerID = @CustomerID para obter mais informações, consulte [Configurando parâmetros e tipos de dados do parâmetro](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._8_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._8_1.cs)]"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "Uma da <xref href=&quot;System.Data.CommandType&quot;> </xref> valores. O padrão é <xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor não era válido <xref href=&quot;System.Data.CommandType&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Connection
  id: Connection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: System.Data.SqlClient.SqlCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define o <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> usado por esta instância do <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "Se o comando está inscrita em uma transação existente e a conexão for alterada, a tentativa de executar o comando lançará <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>       Se o <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>propriedade não for null e a transação já foi confirmada ou revertida, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>é definido como null.</xref:System.Data.SqlClient.SqlCommand.Transaction%2A> </xref:System.Data.SqlClient.SqlCommand.Transaction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._22_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Connection Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._22_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlConnection Connection { get; set; }
    return:
      type: System.Data.SqlClient.SqlConnection
      description: "A conexão a uma fonte de dados. O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade de Conexão for alterada enquanto o comando foi inscrita em uma transação."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: SqlCommand.CreateDbParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "A ser adicionado."
  overload: System.Data.SqlClient.SqlCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: SqlCommand.CreateParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Cria uma nova instância de um <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> objeto."
  remarks: "O método CreateParameter é uma versão fortemente tipada de <xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A>"
  syntax:
    content: public System.Data.SqlClient.SqlParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlParameter
      description: "A <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbConnection
  id: DbConnection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: System.Data.SqlClient.SqlCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "A ser adicionado."
  overload: System.Data.SqlClient.SqlCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: System.Data.SqlClient.SqlCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "A ser adicionado."
  overload: System.Data.SqlClient.SqlCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: System.Data.SqlClient.SqlCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "A ser adicionado."
  overload: System.Data.SqlClient.SqlCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define um valor que indica se o objeto de comando deve estar visível em um controle do Windows Form Designer."
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "Um valor que indica se o objeto de comando deve estar visível em um controle. O padrão é **true**."
  overload: System.Data.SqlClient.SqlCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlCommand.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Data.SqlClient.SqlCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  id: EndExecuteNonQuery(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteNonQuery(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Conclui a execução assíncrona de uma instrução Transact-SQL."
  remarks: "Quando você chama <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>para executar um [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instrução, você deve chamar EndExecuteNonQuery para concluir a operação.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Se o processo de executar o comando não tiver ainda concluído, blocos este método até que a operação seja concluída. Os usuários podem verificar que o comando foi concluído sua operação usando o <xref:System.IAsyncResult>instância retornada pelo <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>método.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> </xref:System.IAsyncResult> Se um procedimento de retorno de chamada foi especificado na chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, esse método deve ser chamado.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteNonQuery method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>.
  syntax:
    content: public int EndExecuteNonQuery (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>retornado pela chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "O número de linhas afetadas (o mesmo comportamento <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>).</xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>"
  overload: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>o parâmetro é nulo (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteNonQuery foi chamado mais de uma vez para a execução de um único comando ou o método era incompatível em relação a seu método de execução (por exemplo, o código chamado EndExecuteNonQuery para concluir a execução de uma chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "A quantidade de tempo especificado na <> </> *> decorrido e a operação assíncrona especificada com <> </> *> não foi concluída.       Em algumas situações, <xref:System.IAsyncResult>pode ser definido como <xref uid=&quot;langword_csharp_IsCompleted&quot; name=&quot;IsCompleted&quot; href=&quot;&quot;> </xref> incorretamente.</xref:System.IAsyncResult> Se isso ocorre e EndExecuteNonQuery é chamado, EndExecuteNonQuery pode gerar um erro de SqlException se a quantidade de tempo especificada em <> </> *> decorrido e a operação assíncrona especificada com <> </> *> não foi concluída. Para corrigir essa situação, você deve aumentar o valor de CommandTimeout ou reduzir o trabalho sendo feito pela operação assíncrona."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  id: EndExecuteReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteReader(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Conclui a execução assíncrona de uma instrução Transact-SQL, retornando o pedido <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  remarks: "Quando você chama <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>para executar uma instrução Transact-SQL, você deve chamar EndExecuteReader para concluir a operação.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Se o processo de executar o comando não tiver ainda concluído, blocos este método até que a operação seja concluída. Os usuários podem verificar que o comando foi concluído sua operação usando o <xref:System.IAsyncResult>instância retornada pelo <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>método.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.IAsyncResult> Se um procedimento de retorno de chamada foi especificado na chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, esse método deve ser chamado.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteReader method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.
  syntax:
    content: public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>retornado pela chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader*> </xref:System.IAsyncResult>"
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "Um <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> objeto que pode ser usado para recuperar as linhas solicitadas."
  overload: System.Data.SqlClient.SqlCommand.EndExecuteReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>o parâmetro é nulo (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteReader foi chamado mais de uma vez para a execução de um único comando ou o método era incompatível em relação a seu método de execução (por exemplo, o código chamado EndExecuteReader para concluir a execução de uma chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  id: EndExecuteXmlReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteXmlReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Conclui a execução assíncrona de uma instrução Transact-SQL, retornando os dados solicitados como XML."
  remarks: "Quando você chama <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>para executar uma instrução Transact-SQL, você deve chamar EndExecuteXmlReader para concluir a operação.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Se o processo de executar o comando não tiver ainda concluído, blocos este método até que a operação seja concluída. Os usuários podem verificar que o comando foi concluído sua operação usando o <xref:System.IAsyncResult>instância retornada pelo <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>método.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.IAsyncResult> Se um procedimento de retorno de chamada foi especificado na chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, esse método deve ser chamado.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteXmlReader method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.
  syntax:
    content: public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>retornado pela chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*> </xref:System.IAsyncResult>"
    return:
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>objeto que pode ser usado para buscar os dados XML resultantes.</xref:System.Xml.XmlReader>"
  overload: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>o parâmetro é nulo (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteXmlReader foi chamado mais de uma vez para a execução de um único comando ou o método era incompatível em relação a seu método de execução (por exemplo, o código chamado EndExecuteXmlReader para concluir a execução de uma chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "A ser adicionado."
    return:
      type: System.Data.Common.DbDataReader
      description: "A ser adicionado."
  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "A ser adicionado."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A ser adicionado."
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: "A ser adicionado."
  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: SqlCommand.ExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Executa uma instrução Transact-SQL em relação a conexão e retorna o número de linhas afetadas."
  remarks: "Você pode usar o ExecuteNonQuery para executar operações de catálogo (por exemplo, consultar a estrutura de um banco de dados ou criar objetos de banco de dados como tabelas), ou para alterar os dados em um banco de dados sem usar um <xref:System.Data.DataSet>executando instruções UPDATE, INSERT ou DELETE.</xref:System.Data.DataSet>       Embora o ExecuteNonQuery não retorna nenhuma linha, quaisquer parâmetros de saída ou valores de retorno mapeados para parâmetros são preenchidos com dados.       Para instruções UPDATE, INSERT e DELETE, o valor de retorno é o número de linhas afetadas pelo comando. Quando um gatilho existe em uma tabela que está sendo inserido ou atualizado, o valor de retorno inclui o número de linhas afetadas pela operação insert ou update e o número de linhas afetadas pelo gatilho ou gatilhos. Para todos os outros tipos de instruções, o valor de retorno é -1. Se ocorrer uma reversão, o valor de retorno também será -1."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteNonQuery. The example is passed a string that is a Transact-SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._23_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._23_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "O número de linhas afetadas."
  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Ocorreu uma exceção ao executar o comando em uma linha bloqueada. Essa exceção não é gerada quando você estiver usando o Microsoft .NET Framework versão 1.0.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  id: ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Uma versão assíncrona de <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>, que executa um [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instrução em relação à conexão e retorna o número de linhas afetado.</xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*> O token de cancelamento pode ser usado para solicitar que a operação ser abandonado antes de expira o tempo limite do comando.  Exceções serão relatadas por meio do objeto de tarefa retornado."
  remarks: "Para obter mais informações sobre a programação assíncrona no [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] provedor de dados para [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<int> ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A instrução de cancelamento."
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamando ExecuteNonQueryAsync mais de uma vez para a mesma instância antes da conclusão da tarefa.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>é especificado na cadeia de conexão."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]retornou um erro ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: SqlCommand.ExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Envia o <> </> *> para o <> </> *> e cria um <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  remarks: "Quando o <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>estiver definida como `StoredProcedure`, o <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>propriedade deve ser definida como o nome do procedimento armazenado.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> O comando é executado esse procedimento armazenado quando você chamar ExecuteReader.      > [!NOTE] > Se uma transação for bloqueada, uma exceção não pode ser lançada até <xref:System.Data.SqlClient.SqlDataReader.Read%2A>é chamado.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       O recurso de conjunto (MARS) de resultados ativos múltiplos permite várias ações usando a mesma conexão.       Se você usar ExecuteReader ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>para acessar dados XML, SQL Server retornará resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>para consultas de leitura de FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Para obter mais informações, consulte o artigo Q310378, &quot;PRB: XML dados é truncado quando você usar SqlDataReader,&quot; na Base de dados de Conhecimento Microsoft em http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteReader Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._22_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._22_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Ocorreu uma exceção ao executar o comando em uma linha bloqueada. Essa exceção não é gerada quando você estiver usando o Microsoft .NET Framework versão 1.0.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O estado atual do que a conexão é fechado. ExecuteReader requer um aberto <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Envia o <> </> *> para o <> </> *> e cria um <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> usando um do <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> valores."
  remarks: "Quando o <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>estiver definida como `StoredProcedure`, o <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>propriedade deve ser definida como o nome do procedimento armazenado.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> O comando é executado esse procedimento armazenado quando você chama <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>      > [!NOTE] > Use <xref:System.Data.CommandBehavior>para recuperar dados binários e valores grandes.</xref:System.Data.CommandBehavior> Caso contrário, um <xref:System.OutOfMemoryException>podem ocorrer e a conexão será fechada.</xref:System.OutOfMemoryException>       O recurso de conjunto (MARS) de resultados ativos múltiplos permite várias ações usando a mesma conexão.       Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>para acessar dados XML, SQL Server retornará resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>para consultas de leitura de FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Para obter mais informações, consulte o artigo Q310378, &quot;PRB: XML dados é truncado quando você usar SqlDataReader,&quot; na Base de dados de Conhecimento Microsoft em http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source. <xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteReader2#1](~/add/codesnippet/csharp/m-system.data.sqlclient._14_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._14_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Uma da <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> valores."
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  id: ExecuteReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync()
  nameWithType: SqlCommand.ExecuteReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Uma versão assíncrona de <> </> *>, que envia o <> </> *> para o <xref:System.Data.SqlClient.SqlCommand.Connection*>e cria um <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*> Exceções serão relatadas por meio do objeto de tarefa retornado."
  remarks: "Para obter mais informações sobre a programação assíncrona no [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] provedor de dados para [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Inválido <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> valor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamando ExecuteReaderAsync mais de uma vez para a mesma instância antes da conclusão da tarefa.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>é especificado na cadeia de conexão."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]retornou um erro ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  id: ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Uma versão assíncrona de <> </> *>, que envia o <> </> *> para o <xref:System.Data.SqlClient.SqlCommand.Connection*>e cria um <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*> Exceções serão relatadas por meio do objeto de tarefa retornado."
  remarks: "Para obter mais informações sobre a programação assíncrona no [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] provedor de dados para [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Opções de recuperação de dados e execução de instrução.  Quando é definido como <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;> </xref>, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>lê a linha inteira antes de retornar uma tarefa concluída.</xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>"
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Inválido <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> valor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamando ExecuteReaderAsync mais de uma vez para a mesma instância antes da conclusão da tarefa.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>é especificado na cadeia de conexão."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]retornou um erro ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Uma versão assíncrona de <> </> *>, que envia o <> </> *> para o <xref:System.Data.SqlClient.SqlCommand.Connection*>e cria um <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*>       O token de cancelamento pode ser usado para solicitar que a operação ser abandonado antes de expira o tempo limite do comando.  Exceções serão relatadas por meio do objeto de tarefa retornado."
  remarks: "Para obter mais informações sobre a programação assíncrona no [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] provedor de dados para [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A instrução de cancelamento."
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Inválido <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> valor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamando <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*>mais de uma vez para a mesma instância antes da conclusão da tarefa.</xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*>       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>é especificado na cadeia de conexão."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]retornou um erro ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Uma versão assíncrona de <> </> *>, que envia o <> </> *> para o <xref:System.Data.SqlClient.SqlCommand.Connection*>e cria um <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> o token de cancelamento pode ser usado para solicitar que a operação ser abandonado antes de expira o tempo limite do comando.</xref:System.Data.SqlClient.SqlCommand.Connection*>  Exceções serão relatadas por meio do objeto de tarefa retornado."
  remarks: "Para obter mais informações sobre a programação assíncrona no [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] provedor de dados para [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Opções de recuperação de dados e execução de instrução.  Quando é definido como <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;> </xref>, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>lê a linha inteira antes de retornar uma tarefa concluída.</xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A instrução de cancelamento."
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Inválido <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> valor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamando ExecuteReaderAsync mais de uma vez para a mesma instância antes da conclusão da tarefa.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>é especificado na cadeia de conexão."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]retornou um erro ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: SqlCommand.ExecuteScalar()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Executa a consulta e retorna a primeira coluna da primeira linha no conjunto de resultados retornado pela consulta. Colunas ou linhas adicionais são ignoradas."
  remarks: "Use o método ExecuteScalar para recuperar um valor único (por exemplo, um valor agregado) de um banco de dados. Isso requer menos código do que usando o <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>método e, em seguida, executar as operações que você precisa para gerar o valor único usando os dados retornados por <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>       Uma consulta ExecuteScalar típica pode ser formatada como o exemplo c# a seguir:```   cmd.CommandText = &quot;SELECT COUNT(*) FROM dbo.region&quot;;   Int32 count = (Int32) cmd.ExecuteScalar();   ```"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteScalar. The example is passed a string representing a new value to be inserted into a table, and a string to use to connect to the data source. The function returns the new **Identity** column value if a new row was inserted, 0 on failure.  \n  \n [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._31_1.vb)]\n [!code-cs[DataWorks SqlCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.sqlclient._31_1.cs)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "A primeira coluna da primeira linha no conjunto de resultados ou uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic) se o conjunto de resultados estiver vazio. Retorna um máximo 2033 caracteres."
  overload: System.Data.SqlClient.SqlCommand.ExecuteScalar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Ocorreu uma exceção ao executar o comando em uma linha bloqueada. Essa exceção não é gerada quando você estiver usando o Microsoft .NET Framework versão 1.0.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  id: ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Uma versão assíncrona de <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar*>, que executa a consulta de forma assíncrona e retorna a primeira coluna da primeira linha no conjunto de resultados retornado pela consulta.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalar*> Colunas ou linhas adicionais são ignoradas.       O token de cancelamento pode ser usado para solicitar que a operação ser abandonado antes de expira o tempo limite do comando. Exceções serão relatadas por meio do objeto de tarefa retornado."
  remarks: "Para obter mais informações sobre a programação assíncrona no [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] provedor de dados para [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<object> ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A instrução de cancelamento."
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamando ExecuteScalarAsync mais de uma vez para a mesma instância antes da conclusão da tarefa.       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>é especificado na cadeia de conexão."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]retornou um erro ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  id: ExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReader()
  nameWithType: SqlCommand.ExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Envia o <> </> *> para o <> </> *> e cria um <xref:System.Xml.XmlReader>objeto.</xref:System.Xml.XmlReader>"
  remarks: "O <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>propriedade normalmente especifica um [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instrução com uma cláusula FOR XML válida.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> No entanto, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>também pode especificar uma instrução que retorna `ntext` ou `nvarchar` dados que contém XML válido ou o conteúdo de uma coluna definida com o `xml` tipo de dados.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A>       Uma consulta ExecuteXmlReader típica pode ser formatada como no seguinte exemplo do Microsoft Visual c#: ```   SqlCommand command = new SqlCommand(&quot;SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` esse método também pode ser usado para recuperar um conjunto de resultados de uma linha e coluna única que contém dados XML. Nesse caso, se mais de uma linha for retornada, o método ExecuteXmlReader anexa o <xref:System.Xml.XmlReader>para o valor na primeira linha e descarta o resto do resultado definido.</xref:System.Xml.XmlReader>       O recurso de conjunto (MARS) de resultados ativos múltiplos permite várias ações usando a mesma conexão.       Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>para acessar dados XML, SQL Server retornará resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Para evitar esse comportamento, use ExecuteXmlReader ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>para consultas de leitura de FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Para obter mais informações, consulte o artigo Q310378, &quot;PRB: XML dados é truncado quando você usar SqlDataReader,&quot; na Base de dados de Conhecimento Microsoft em http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteXmlReader. The example is passed a string that is a Transact-SQL FOR XML SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteXmlReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._42_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._42_1.vb)]"
  syntax:
    content: public System.Xml.XmlReader ExecuteXmlReader ();
    parameters: []
    return:
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>objeto.</xref:System.Xml.XmlReader>"
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Ocorreu uma exceção ao executar o comando em uma linha bloqueada. Essa exceção não é gerada quando você estiver usando o Microsoft .NET Framework versão 1.0.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  id: ExecuteXmlReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReaderAsync()
  nameWithType: SqlCommand.ExecuteXmlReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Uma versão assíncrona de <> </> *>, que envia o <> </> *> para o <xref:System.Data.SqlClient.SqlCommand.Connection*>e cria um <xref:System.Xml.XmlReader>objeto.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection*>       Exceções serão relatadas por meio do objeto de tarefa retornado."
  remarks: "Para obter mais informações sobre a programação assíncrona no [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] provedor de dados para [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamando <xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>mais de uma vez para a mesma instância antes da conclusão da tarefa.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>é especificado na cadeia de conexão."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]retornou um erro ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  id: ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Uma versão assíncrona de <> </> *>, que envia o <> </> *> para o <xref:System.Data.SqlClient.SqlCommand.Connection*>e cria um <xref:System.Xml.XmlReader>objeto.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection*>       O token de cancelamento pode ser usado para solicitar que a operação ser abandonado antes de expira o tempo limite do comando.  Exceções serão relatadas por meio do objeto de tarefa retornado."
  remarks: "Para obter mais informações sobre a programação assíncrona no [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] provedor de dados para [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A instrução de cancelamento."
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamando <xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>mais de uma vez para a mesma instância antes da conclusão da tarefa.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>       O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fechado ou descartado durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>é especificado na cadeia de conexão."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]retornou um erro ao executar o texto do comando.       Ocorreu um tempo limite durante uma operação de streaming. Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro em um <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>ou <xref:System.IO.TextReader>objeto foi fechado durante uma operação de streaming.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Para obter mais informações sobre a transmissão, consulte [suporte de Streaming do SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Notification
  id: Notification
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Notification
  nameWithType: SqlCommand.Notification
  fullName: System.Data.SqlClient.SqlCommand.Notification
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define um valor que especifica o <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> objeto associado a esse comando."
  remarks: "Você deve definir o valor para essa propriedade antes do comando é executado para que ele entre em vigor."
  syntax:
    content: public System.Data.Sql.SqlNotificationRequest Notification { get; set; }
    return:
      type: System.Data.Sql.SqlNotificationRequest
      description: "Quando definido como null (padrão), nenhuma notificação deve ser solicitada."
  overload: System.Data.SqlClient.SqlCommand.Notification*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  id: NotificationAutoEnlist
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
  fullName: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define um valor que indica se o aplicativo deve receber automaticamente as notificações de consulta de um comum <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> objeto."
  remarks: "Esse recurso é usado em aplicativos ASP.NET para receber notificações para todos os comandos executados em uma página ASP no SQL Server. Isso permite que o ASP.NET para o cache da página até que as consultas usadas para renderizar a página pode produzir um resultado diferente. Inscrição automática.       Essa propriedade se aplica apenas às versões do SQL Server que oferecem suporte a notificações de consulta. Para versões anteriores, a definição dessa propriedade **true** não tem efeito sobre o aplicativo."
  syntax:
    content: public bool NotificationAutoEnlist { get; set; }
    return:
      type: System.Boolean
      description: '**True** se o aplicativo automaticamente recebam notificações de consulta; caso contrário, **false**. O valor padrão é **true**.'
  overload: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Parameters
  id: Parameters
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: System.Data.SqlClient.SqlCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets the <xref href=&quot;System.Data.SqlClient.SqlParameterCollection&quot;></xref>."
  remarks: "O Microsoft .NET Framework Data Provider para SQL Server não suporta o espaço reservado de ponto de interrogação (?) para passar parâmetros para uma instrução SQL ou um procedimento armazenado chamado por um comando de `CommandType.Text`. Nesse caso, os parâmetros nomeados devem ser usados. Por exemplo: selecione * FROM clientes WHERE CustomerID = @CustomerID > [!NOTE] > se os parâmetros na coleção não correspondem aos requisitos da consulta a ser executada, pode resultar em um erro.       Para obter mais informações, consulte [Configurando parâmetros e tipos de dados do parâmetro](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to create a <xref:System.Data.SqlClient.SqlCommand> and add parameters to the <xref:System.Data.SqlClient.SqlParameterCollection>.  \n  \n [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._32_1.vb)]\n [!code-cs[DataWorks SqlParameterCollection.AddWithValue#1](~/add/codesnippet/csharp/p-system.data.sqlclient._32_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlParameterCollection Parameters { get; }
    return:
      type: System.Data.SqlClient.SqlParameterCollection
      description: "Os parâmetros da instrução Transact-SQL ou procedimento armazenado. O padrão é uma coleção vazia."
  overload: System.Data.SqlClient.SqlCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Prepare
  id: Prepare
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: SqlCommand.Prepare()
  fullName: System.Data.SqlClient.SqlCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Cria uma versão preparada do comando em uma instância do SQL Server."
  remarks: "Se <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>for definido como `StoredProcedure`, a chamada para preparar deve ter êxito, embora isso pode causar uma não-operacional</xref:System.Data.SqlClient.SqlCommand.CommandType%2A>       Antes de chamar preparar, especifique o tipo de dados de cada parâmetro na instrução a serem preparados. Para cada parâmetro que tem um tipo de dados de comprimento variável, você deve definir o <xref:System.Data.SqlClient.SqlParameter.Size%2A>propriedade para o tamanho máximo necessário.</xref:System.Data.SqlClient.SqlParameter.Size%2A> Preparar retornará um erro se essas condições não forem atendidas.      > [!NOTE] > Se o contexto do banco de dados é alterado por meio da execução do Transact-SQL `USE <database>` instrução, ou chamando o <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>método e, em seguida, preparar deve ser chamado pela segunda vez.</xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>       Se você chamar um `Execute` método depois de preparar, qualquer valor de parâmetro de chamada que é maior do que o valor especificado pelo <xref:System.Data.SqlClient.SqlParameter.Size%2A>propriedade será truncada automaticamente para o tamanho original especificado do parâmetro e não há erros de truncamento são retornados.</xref:System.Data.SqlClient.SqlParameter.Size%2A>       Parâmetros de saída (se preparado ou não) deve ter um tipo de dados especificado pelo usuário. Se você especificar um tipo de dados de comprimento variável, você também deve especificar o máximo <xref:System.Data.SqlClient.SqlParameter.Size%2A>.</xref:System.Data.SqlClient.SqlParameter.Size%2A>       Antes do Visual Studio 2010, preparar lançou uma exceção.  A partir do Visual Studio 2010, esse método não lançará uma exceção."
  example:
  - "The following example demonstrates the use of the Prepare method.  \n  \n [!code-vb[Classic WebData SqlCommand.Prepare#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._45_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Prepare#1](~/add/codesnippet/csharp/m-system.data.sqlclient._45_1.cs)]"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.Prepare*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: SqlCommand.ResetCommandTimeout()
  fullName: System.Data.SqlClient.SqlCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Redefine o <xref:System.Data.SqlClient.SqlCommand.CommandTimeout*>propriedade para o valor padrão.</xref:System.Data.SqlClient.SqlCommand.CommandTimeout*>"
  remarks: "O valor padrão de <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>é de 30 segundos.</xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.StatementCompleted
  id: StatementCompleted
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: StatementCompleted
  nameWithType: SqlCommand.StatementCompleted
  fullName: System.Data.SqlClient.SqlCommand.StatementCompleted
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Ocorre quando a execução de uma instrução Transact-SQL é concluída."
  syntax:
    content: public event System.Data.StatementCompletedEventHandler StatementCompleted;
    return:
      type: System.Data.StatementCompletedEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlCommand.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Cria um novo <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto que é uma cópia da instância atual."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um novo <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto que é uma cópia desta instância."
  overload: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Transaction
  id: Transaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: System.Data.SqlClient.SqlCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define o <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> dentro do qual o <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> executa."
  remarks: "Não é possível definir a propriedade de transação, se ela já estiver definida como um valor específico, e o comando está no processo de execução. Se você definir a propriedade de transação um <xref:System.Data.SqlClient.SqlTransaction>que não está conectado ao mesmo objeto <xref:System.Data.SqlClient.SqlConnection>como o <xref:System.Data.SqlClient.SqlCommand>do objeto, uma exceção será lançada na próxima vez que você tentar executar uma instrução.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlTransaction>"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction Transaction { get; set; }
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "The <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;></xref>. O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define como os resultados do comando são aplicados ao <xref href=&quot;System.Data.DataRow&quot;> </xref> quando usado pelo **atualização** método o <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>."
  remarks: "O padrão <xref:System.Data.UpdateRowSource>valor é **ambos** , a menos que o comando é gerado automaticamente (como no caso do <xref:System.Data.SqlClient.SqlCommandBuilder>), caso em que o padrão é **nenhum**.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.UpdateRowSource>       Para obter mais informações sobre como usar o **UpdatedRowSource** propriedade, consulte [parâmetros DataAdapter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "Uma da <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> valores."
  overload: System.Data.SqlClient.SqlCommand.UpdatedRowSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.SqlClient.SqlCommand.#ctor
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand()
  nameWithType: SqlCommand.SqlCommand()
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand()
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String)
  nameWithType: SqlCommand.SqlCommand(String)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection)
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection,SqlTransaction)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
- uid: System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  nameWithType: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
- uid: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommandColumnEncryptionSetting
  nameWithType: SqlCommandColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery()
  nameWithType: SqlCommand.BeginExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery()
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader()
  nameWithType: SqlCommand.BeginExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader()
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(CommandBehavior)
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object)
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader()
  nameWithType: SqlCommand.BeginExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader()
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
- uid: System.Data.SqlClient.SqlCommand.Cancel
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Cancel()
  nameWithType: SqlCommand.Cancel()
  fullName: System.Data.SqlClient.SqlCommand.Cancel()
- uid: System.Data.SqlClient.SqlCommand.Clone
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Clone()
  nameWithType: SqlCommand.Clone()
  fullName: System.Data.SqlClient.SqlCommand.Clone()
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.CommandText
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: System.Data.SqlClient.SqlCommand.CommandText
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: System.Data.SqlClient.SqlCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlCommand.CommandType
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: System.Data.SqlClient.SqlCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.SqlClient.SqlCommand.Connection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: System.Data.SqlClient.SqlCommand.Connection
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: SqlCommand.CreateDbParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.SqlClient.SqlCommand.CreateParameter
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: SqlCommand.CreateParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateParameter()
- uid: System.Data.SqlClient.SqlParameter
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameter
  nameWithType: SqlParameter
  fullName: System.Data.SqlClient.SqlParameter
- uid: System.Data.SqlClient.SqlCommand.DbConnection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: System.Data.SqlClient.SqlCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: System.Data.SqlClient.SqlCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.SqlClient.SqlCommand.DbTransaction
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: System.Data.SqlClient.SqlCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: System.Data.SqlClient.SqlCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlCommand.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlCommand.Dispose(Boolean)
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteNonQuery(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult)
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteReader(IAsyncResult)
- uid: System.Data.SqlClient.SqlDataReader
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteXmlReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(IAsyncResult)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<DbDataReader>
  nameWithType: Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Data.Common.DbDataReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: DbDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: SqlCommand.ExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: SqlCommand.ExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader()
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync()
  nameWithType: SqlCommand.ExecuteReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync()
- uid: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<SqlDataReader>
  nameWithType: Task<SqlDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Data.SqlClient.SqlDataReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.SqlClient.SqlDataReader
    name: SqlDataReader
    nameWithType: SqlDataReader
    fullName: SqlDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: SqlCommand.ExecuteScalar()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalar()
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReader()
  nameWithType: SqlCommand.ExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReader()
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync()
  nameWithType: SqlCommand.ExecuteXmlReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync()
- uid: System.Threading.Tasks.Task{System.Xml.XmlReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<XmlReader>
  nameWithType: Task<XmlReader>
  fullName: System.Threading.Tasks.Task<System.Xml.XmlReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Xml.XmlReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: XmlReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.Notification
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Notification
  nameWithType: SqlCommand.Notification
  fullName: System.Data.SqlClient.SqlCommand.Notification
- uid: System.Data.Sql.SqlNotificationRequest
  parent: System.Data.Sql
  isExternal: false
  name: SqlNotificationRequest
  nameWithType: SqlNotificationRequest
  fullName: System.Data.Sql.SqlNotificationRequest
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
  fullName: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
- uid: System.Data.SqlClient.SqlCommand.Parameters
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: System.Data.SqlClient.SqlCommand.Parameters
- uid: System.Data.SqlClient.SqlParameterCollection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameterCollection
  nameWithType: SqlParameterCollection
  fullName: System.Data.SqlClient.SqlParameterCollection
- uid: System.Data.SqlClient.SqlCommand.Prepare
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Prepare()
  nameWithType: SqlCommand.Prepare()
  fullName: System.Data.SqlClient.SqlCommand.Prepare()
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: SqlCommand.ResetCommandTimeout()
  fullName: System.Data.SqlClient.SqlCommand.ResetCommandTimeout()
- uid: System.Data.SqlClient.SqlCommand.StatementCompleted
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: StatementCompleted
  nameWithType: SqlCommand.StatementCompleted
  fullName: System.Data.SqlClient.SqlCommand.StatementCompleted
- uid: System.Data.StatementCompletedEventHandler
  parent: System.Data
  isExternal: false
  name: StatementCompletedEventHandler
  nameWithType: StatementCompletedEventHandler
  fullName: System.Data.StatementCompletedEventHandler
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlCommand.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlCommand.System.ICloneable.Clone()
- uid: System.Data.SqlClient.SqlCommand.Transaction
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: System.Data.SqlClient.SqlCommand.Transaction
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: System.Data.SqlClient.SqlCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.SqlClient.SqlCommand.#ctor*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand.SqlCommand
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery
  nameWithType: SqlCommand.BeginExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader
  nameWithType: SqlCommand.BeginExecuteReader
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader
  nameWithType: SqlCommand.BeginExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.Cancel*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Cancel
  nameWithType: SqlCommand.Cancel
- uid: System.Data.SqlClient.SqlCommand.Clone*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Clone
  nameWithType: SqlCommand.Clone
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.CommandText*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandText
  nameWithType: SqlCommand.CommandText
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
- uid: System.Data.SqlClient.SqlCommand.CommandType*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandType
  nameWithType: SqlCommand.CommandType
- uid: System.Data.SqlClient.SqlCommand.Connection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Connection
  nameWithType: SqlCommand.Connection
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: SqlCommand.CreateDbParameter
- uid: System.Data.SqlClient.SqlCommand.CreateParameter*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateParameter
  nameWithType: SqlCommand.CreateParameter
- uid: System.Data.SqlClient.SqlCommand.DbConnection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
- uid: System.Data.SqlClient.SqlCommand.DbTransaction*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
- uid: System.Data.SqlClient.SqlCommand.Dispose*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Dispose
  nameWithType: SqlCommand.Dispose
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteNonQuery
  nameWithType: SqlCommand.EndExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteReader
  nameWithType: SqlCommand.EndExecuteReader
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteXmlReader
  nameWithType: SqlCommand.EndExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: SqlCommand.ExecuteDbDataReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: SqlCommand.ExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQueryAsync
  nameWithType: SqlCommand.ExecuteNonQueryAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: SqlCommand.ExecuteReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync
  nameWithType: SqlCommand.ExecuteReaderAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: SqlCommand.ExecuteScalar
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalarAsync
  nameWithType: SqlCommand.ExecuteScalarAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReader
  nameWithType: SqlCommand.ExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync
  nameWithType: SqlCommand.ExecuteXmlReaderAsync
- uid: System.Data.SqlClient.SqlCommand.Notification*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Notification
  nameWithType: SqlCommand.Notification
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
- uid: System.Data.SqlClient.SqlCommand.Parameters*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Parameters
  nameWithType: SqlCommand.Parameters
- uid: System.Data.SqlClient.SqlCommand.Prepare*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Prepare
  nameWithType: SqlCommand.Prepare
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: SqlCommand.ResetCommandTimeout
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlCommand.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlCommand.Transaction*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Transaction
  nameWithType: SqlCommand.Transaction
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
