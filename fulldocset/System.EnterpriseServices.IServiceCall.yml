### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.IServiceCall
  id: IServiceCall
  children:
  - System.EnterpriseServices.IServiceCall.OnCall
  langs:
  - csharp
  name: IServiceCall
  nameWithType: IServiceCall
  fullName: System.EnterpriseServices.IServiceCall
  type: Interface
  summary: "Implementa o trabalho em lotes que é enviado por meio da atividade criada por <xref href=&quot;System.EnterpriseServices.Activity&quot;> </xref>."
  remarks: "Use IServiceCall para executar o trabalho em lotes que usa serviços COM+ sem criar um componente especificamente para usar esses serviços. Ambientes de script, como o Internet Information Services (IIS) e o ASP.NET podem usar esta interface para usar serviços COM+ sem a necessidade de criar um componente COM+."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("BD3E2E12-42DD-40f4-A09A-95A50C58304B")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IServiceCall
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.IServiceCall.OnCall
  id: OnCall
  parent: System.EnterpriseServices.IServiceCall
  langs:
  - csharp
  name: OnCall()
  nameWithType: IServiceCall.OnCall()
  fullName: System.EnterpriseServices.IServiceCall.OnCall()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Inicia a execução do trabalho em lotes implementado nesse método."
  remarks: "O trabalho em lotes com este método é executado no apartment do thread e o contexto da atividade criado pela chamada para <xref:System.EnterpriseServices.Activity>.</xref:System.EnterpriseServices.Activity> O trabalho em lotes neste método é executado por uma chamada para um <xref:System.EnterpriseServices.Activity.SynchronousCall%2A?displayProperty=fullName>ou <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A?displayProperty=fullName>.</xref:System.EnterpriseServices.Activity.AsynchronousCall%2A?displayProperty=fullName> </xref:System.EnterpriseServices.Activity.SynchronousCall%2A?displayProperty=fullName>      > [!CAUTION] > Certifique-se de que esse método é thread-safe em situações em que o objeto de atividade criado por <xref:System.EnterpriseServices.Activity>não foi criado com um contexto sincronizado, porque nessas situações muitas chamadas para OnCall podem ser executados ao mesmo tempo.</xref:System.EnterpriseServices.Activity>       Para obter o melhor desempenho do sistema, a configuração de contexto da atividade criada pelo <xref:System.EnterpriseServices.Activity>devem corresponder ao lote de trabalho executado pelo método OnCall.</xref:System.EnterpriseServices.Activity> Por exemplo, se o trabalho em lotes no método OnCall usa objetos em um pool, a atividade criada pelo <xref:System.EnterpriseServices.Activity>devem ser configurados para usar o multi-threaded apartment (MTA).</xref:System.EnterpriseServices.Activity>       Para obter informações sobre objetos em um pool, consulte o tópico &quot;Requisitos para em um pool objetos&quot; no SDK da plataforma no MSDN."
  syntax:
    content: public void OnCall ();
    parameters: []
  overload: System.EnterpriseServices.IServiceCall.OnCall*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.IServiceCall.OnCall
  parent: System.EnterpriseServices.IServiceCall
  isExternal: false
  name: OnCall()
  nameWithType: IServiceCall.OnCall()
  fullName: System.EnterpriseServices.IServiceCall.OnCall()
- uid: System.EnterpriseServices.IServiceCall.OnCall*
  parent: System.EnterpriseServices.IServiceCall
  isExternal: false
  name: OnCall
  nameWithType: IServiceCall.OnCall
