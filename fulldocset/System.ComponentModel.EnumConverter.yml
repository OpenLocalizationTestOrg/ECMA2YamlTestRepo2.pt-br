### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EnumConverter
  id: EnumConverter
  children:
  - System.ComponentModel.EnumConverter.#ctor(System.Type)
  - System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.EnumConverter.Comparer
  - System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.EnumConverter.EnumType
  - System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.EnumConverter.Values
  langs:
  - csharp
  name: EnumConverter
  nameWithType: EnumConverter
  fullName: System.ComponentModel.EnumConverter
  type: Class
  summary: "Fornece um conversor de tipo para converter <xref:System.Enum>objetos para e a partir de diversas outras representações.</xref:System.Enum>"
  remarks: "Este conversor pode converter um objeto de enumeração somente em uma cadeia de caracteres. A classe EnumConverter fornece o <xref:System.ComponentModel.EnumConverter.Comparer%2A>propriedade para obter um <xref:System.Collections.IComparer>interface que pode ser usado para classificar os valores da enumeração.</xref:System.Collections.IComparer> </xref:System.ComponentModel.EnumConverter.Comparer%2A> Por padrão, os valores de enumeração são classificados na ordem em que aparecem no arquivo.       Para obter mais informações sobre conversores de tipo, consulte o <xref:System.ComponentModel.TypeConverter>classe base e [como: implementar um conversor de tipo](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>      > [!NOTE] > Você nunca deve criar uma instância de um EnumConverter. Em vez disso, chame o <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>método de <xref:System.ComponentModel.TypeDescriptor>classe.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> Para obter mais informações, consulte os exemplos de <xref:System.ComponentModel.TypeConverter>classe base.</xref:System.ComponentModel.TypeConverter>"
  example:
  - "The following code example converts a variable of type <xref:System.Enum> to a string, and vice versa. The example requires that you have declared an <xref:System.Enum> called `Servers` and that it has the following members:  \n  \n```  \nWindows=1, Exchange=2, BizTalk=3  \n```  \n  \n [!code-cs[Converters#12](~/add/codesnippet/csharp/t-system.componentmodel._114_1.cs)]\n [!code-vb[Converters#12](~/add/codesnippet/visualbasic/t-system.componentmodel._114_1.vb)]\n [!code-cpp[Converters#12](~/add/codesnippet/cpp/t-system.componentmodel._114_1.cpp)]"
  syntax:
    content: 'public class EnumConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: EnumConverter(Type)
  nameWithType: EnumConverter.EnumConverter(Type)
  fullName: System.ComponentModel.EnumConverter.EnumConverter(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.EnumConverter&quot;> </xref> classe para o tipo fornecido."
  syntax:
    content: public EnumConverter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Um <xref:System.Type>que representa o tipo de enumeração para associar com esse conversor de enumeração.</xref:System.Type>"
  overload: System.ComponentModel.EnumConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: EnumConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.EnumConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se esse conversor pode converter um objeto no tipo de origem especificado para um objeto de enumeração usando o contexto especificado."
  remarks: "Este conversor pode converter um objeto de enumeração somente em uma cadeia de caracteres.       O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    - id: sourceType
      type: System.Type
      description: "Um <xref:System.Type>que representa o tipo que você quer converter.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esse conversor puder realizar a conversão; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.EnumConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: EnumConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.EnumConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se esse conversor pode converter um objeto para o tipo de destino específico usando o contexto."
  remarks: "O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    - id: destinationType
      type: System.Type
      description: "Um <xref:System.Type>que representa o tipo que você deseja converter.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esse conversor puder realizar a conversão; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.EnumConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.Comparer
  id: Comparer
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: Comparer
  nameWithType: EnumConverter.Comparer
  fullName: System.ComponentModel.EnumConverter.Comparer
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um <xref:System.Collections.IComparer>que pode ser usado para classificar os valores da enumeração.</xref:System.Collections.IComparer>"
  remarks: "Por padrão, os valores de enumeração são classificados na ordem em que aparecem no arquivo."
  syntax:
    content: protected virtual System.Collections.IComparer Comparer { get; }
    return:
      type: System.Collections.IComparer
      description: "Um <xref:System.Collections.IComparer>para classificar os valores de enumeração.</xref:System.Collections.IComparer>"
  overload: System.ComponentModel.EnumConverter.Comparer*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: EnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.EnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o objeto de valor especificado para um objeto de enumeração."
  remarks: "Este conversor pode converter um objeto de enumeração somente em uma cadeia de caracteres.       O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Um <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> opcional Se não for fornecido, a cultura atual é assumida."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para converter.</xref:System.Object>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o objeto <code> value </code>.</xref:System.Object>"
  overload: System.ComponentModel.EnumConverter.ConvertFrom*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>value</code>não é um valor válido para o tipo de destino."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A conversão não pode ser executada."
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: EnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.EnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o objeto de valor especificado para o tipo de destino especificado."
  remarks: "Este conversor pode converter um objeto de enumeração somente em uma cadeia de caracteres.       O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`.      > [!NOTE] > O comportamento do <xref:System.ComponentModel.EnumConverter.ConvertTo%2A>método será indefinido se a enumeração tem vários campos com o mesmo valor.</xref:System.ComponentModel.EnumConverter.ConvertTo%2A>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Um <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> opcional Se não for fornecido, a cultura atual é assumida."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para converter.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "O <xref:System.Type>para converter o valor de.</xref:System.Type>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o objeto <code> value </code>.</xref:System.Object>"
  overload: System.ComponentModel.EnumConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>não é um valor válido para a enumeração."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A conversão não pode ser executada."
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.EnumType
  id: EnumType
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: EnumType
  nameWithType: EnumConverter.EnumType
  fullName: System.ComponentModel.EnumConverter.EnumType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Especifica o tipo do enumerador que esse conversor está associado."
  syntax:
    content: protected Type EnumType { get; }
    return:
      type: System.Type
      description: "O tipo do enumerador esse conversor está associado."
  overload: System.ComponentModel.EnumConverter.EnumType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém uma coleção de valores padrão para o tipo de dados que se destina a este validador."
  remarks: "O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`.      > [!NOTE] > Todos os campos de enumeração que são marcados com <xref:System.ComponentModel.BrowsableAttribute>definido como `false` não serão retornados.</xref:System.ComponentModel.BrowsableAttribute>"
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Um <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>que contém um conjunto padrão de valores válidos, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o tipo de dados não der suporte a um conjunto de valores padrão.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.EnumConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se a lista de valores padrão retornado de <xref:System.ComponentModel.TypeConverter.GetStandardValues*>é uma lista exclusiva usando o contexto especificado.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  remarks: "O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`."
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>retornado por <xref:System.ComponentModel.TypeConverter.GetStandardValues*>é uma lista completa de valores possíveis; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se outros valores são possíveis.</xref:System.ComponentModel.TypeConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.EnumConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se esse objeto oferece suporte a um conjunto padrão de valores que podem ser escolhidos em uma lista usando o contexto especificado."
  remarks: "O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>porque <xref:System.ComponentModel.TypeConverter.GetStandardValues*>deve ser chamado para localizar um conjunto comum de valores que o objeto suporta.</xref:System.ComponentModel.TypeConverter.GetStandardValues*> Este método nunca retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.EnumConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: IsValid(ITypeDescriptorContext,Object)
  nameWithType: EnumConverter.IsValid(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.EnumConverter.IsValid(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se o valor do objeto especificado é válido para este tipo."
  remarks: "O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`."
  syntax:
    content: public override bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    - id: value
      type: System.Object
      description: "<xref:System.Object>Para teste.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor especificado é válido para este objeto; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.EnumConverter.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.Values
  id: Values
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: Values
  nameWithType: EnumConverter.Values
  fullName: System.ComponentModel.EnumConverter.Values
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém ou define um <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>que especifica os valores possíveis para a enumeração.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  syntax:
    content: protected System.ComponentModel.TypeConverter.StandardValuesCollection Values { get; set; }
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Um <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>que especifica os valores possíveis para a enumeração.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.EnumConverter.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.EnumConverter.#ctor(System.Type)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: EnumConverter(Type)
  nameWithType: EnumConverter.EnumConverter(Type)
  fullName: System.ComponentModel.EnumConverter.EnumConverter(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: EnumConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.EnumConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: EnumConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.EnumConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.EnumConverter.Comparer
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: Comparer
  nameWithType: EnumConverter.Comparer
  fullName: System.ComponentModel.EnumConverter.Comparer
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: EnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.EnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: EnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.EnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.EnumConverter.EnumType
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: EnumType
  nameWithType: EnumConverter.EnumType
  fullName: System.ComponentModel.EnumConverter.EnumType
- uid: System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: IsValid(ITypeDescriptorContext,Object)
  nameWithType: EnumConverter.IsValid(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.EnumConverter.IsValid(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.EnumConverter.Values
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: Values
  nameWithType: EnumConverter.Values
  fullName: System.ComponentModel.EnumConverter.Values
- uid: System.ComponentModel.EnumConverter.#ctor*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: EnumConverter
  nameWithType: EnumConverter.EnumConverter
- uid: System.ComponentModel.EnumConverter.CanConvertFrom*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: EnumConverter.CanConvertFrom
- uid: System.ComponentModel.EnumConverter.CanConvertTo*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: EnumConverter.CanConvertTo
- uid: System.ComponentModel.EnumConverter.Comparer*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: Comparer
  nameWithType: EnumConverter.Comparer
- uid: System.ComponentModel.EnumConverter.ConvertFrom*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: EnumConverter.ConvertFrom
- uid: System.ComponentModel.EnumConverter.ConvertTo*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: ConvertTo
  nameWithType: EnumConverter.ConvertTo
- uid: System.ComponentModel.EnumConverter.EnumType*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: EnumType
  nameWithType: EnumConverter.EnumType
- uid: System.ComponentModel.EnumConverter.GetStandardValues*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: EnumConverter.GetStandardValues
- uid: System.ComponentModel.EnumConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: EnumConverter.GetStandardValuesExclusive
- uid: System.ComponentModel.EnumConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: EnumConverter.GetStandardValuesSupported
- uid: System.ComponentModel.EnumConverter.IsValid*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: IsValid
  nameWithType: EnumConverter.IsValid
- uid: System.ComponentModel.EnumConverter.Values*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: Values
  nameWithType: EnumConverter.Values
