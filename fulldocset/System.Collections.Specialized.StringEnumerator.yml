### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.StringEnumerator
  id: StringEnumerator
  children:
  - System.Collections.Specialized.StringEnumerator.Current
  - System.Collections.Specialized.StringEnumerator.MoveNext
  - System.Collections.Specialized.StringEnumerator.Reset
  langs:
  - csharp
  name: StringEnumerator
  nameWithType: StringEnumerator
  fullName: System.Collections.Specialized.StringEnumerator
  type: Class
  summary: "Dá suporte a uma iteração simples sobre uma <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "O `foreach` instrução de linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.  Portanto, usando `foreach` é recomendada, em vez de manipulação direta do enumerador.       Enumeradores podem ser usados para ler os dados na coleção, mas eles não podem ser usados para modificar a coleção subjacente.       Inicialmente, o enumerador está posicionado antes do primeiro elemento na coleção. <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>também traz o enumerador de volta para essa posição.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> AT isso posicionar, chamando <xref:System.Collections.Specialized.StringEnumerator.Current%2A>lança uma exceção.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> Portanto, você deve chamar <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       <xref:System.Collections.Specialized.StringEnumerator.Current%2A>Retorna o mesmo objeto até que o <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>ou <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>é chamado.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A></xref:System.Collections.Specialized.StringEnumerator.Current%2A> <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>define <xref:System.Collections.Specialized.StringEnumerator.Current%2A>para o próximo elemento.</xref:System.Collections.Specialized.StringEnumerator.Current%2A></xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Se <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>passa o final da coleção, o enumerador está posicionado após o último elemento da coleção e <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>retorna `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Quando o enumerador está nessa posição, chamadas subsequentes para <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>também retornam `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Se a última chamada <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>retornado `false`, chamar <xref:System.Collections.Specialized.StringEnumerator.Current%2A>lança uma exceção.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Definir <xref:System.Collections.Specialized.StringEnumerator.Current%2A>para o primeiro elemento da coleção novamente, você pode chamar <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>seguido pelo <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.Current%2A>       Um enumerador permanece válido desde que a coleção permaneça inalterada. Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada ou <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>gera um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Se a coleção é modificada entre <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>e <xref:System.Collections.Specialized.StringEnumerator.Current%2A>, <xref:System.Collections.Specialized.StringEnumerator.Current%2A>retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       O enumerador não tem acesso exclusivo à coleção; Portanto, enumerando através de uma coleção intrinsecamente não é um procedimento de thread-safe. Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador lançar uma exceção. Para garantir a segurança de thread durante a enumeração, você pode bloquear a coleção durante toda a enumeração ou capture as exceções resultante de alterações feitas por outros threads."
  example:
  - "The following code example demonstrates several of the properties and methods of StringEnumerator.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/t-system.collections.spe_8_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/t-system.collections.spe_8_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_8_1.vb)]"
  syntax:
    content: public class StringEnumerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringEnumerator.Current
  id: Current
  parent: System.Collections.Specialized.StringEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: StringEnumerator.Current
  fullName: System.Collections.Specialized.StringEnumerator.Current
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém o elemento atual na coleção."
  remarks: "Após a criação de um enumerador ou depois de um <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>é chamado, <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de Current; caso contrário, o atual é indefinido.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A>       Atual também gera uma exceção se a última chamada <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>retornado `false`, que indica o final da coleção.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Atual não move a posição do enumerador e o mesmo objeto de retorno de chamadas consecutivas para atual até que o <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>ou <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>é chamado.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Um enumerador permanece válido desde que a coleção permaneça inalterada. Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada ou <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>gera um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Se a coleção é modificada entre <xref:System.Collections.IEnumerator.MoveNext%2A>e <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>"
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/p-system.collections.spe_8_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/p-system.collections.spe_8_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/p-system.collections.spe_8_1.vb)]"
  syntax:
    content: public string Current { get; }
    return:
      type: System.String
      description: "O elemento atual na coleção."
  overload: System.Collections.Specialized.StringEnumerator.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O enumerador está posicionado antes do primeiro elemento da coleção ou depois do último elemento."
  platform:
  - net462
- uid: System.Collections.Specialized.StringEnumerator.MoveNext
  id: MoveNext
  parent: System.Collections.Specialized.StringEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: StringEnumerator.MoveNext()
  fullName: System.Collections.Specialized.StringEnumerator.MoveNext()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Avança o enumerador para o próximo elemento da coleção."
  remarks: "Após a criação de um enumerador ou depois de um <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>é chamado, um enumerador está posicionado antes do primeiro elemento da coleção e a primeira chamada para MoveNext move o enumerador o primeiro elemento da coleção.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A>       Se MoveNext passa o final da coleção, o enumerador está posicionado após o último elemento da coleção e retorna MoveNext `false`. Quando o enumerador está nessa posição, chamadas subsequentes para MoveNext também retornam `false` até <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>é chamado.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A>       Um enumerador permanece válido desde que a coleção permaneça inalterada. Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada ou <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>gera um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Se a coleção é modificada entre <xref:System.Collections.IEnumerator.MoveNext%2A>e <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>"
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/m-system.collections.spe_12_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/m-system.collections.spe_12_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/m-system.collections.spe_12_1.vb)]"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o enumerador foi avançado com êxito para o próximo elemento; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o enumerador tiver passado o final da coleção."
  overload: System.Collections.Specialized.StringEnumerator.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A coleção foi modificada depois que o enumerador foi criado."
  platform:
  - net462
- uid: System.Collections.Specialized.StringEnumerator.Reset
  id: Reset
  parent: System.Collections.Specialized.StringEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: StringEnumerator.Reset()
  fullName: System.Collections.Specialized.StringEnumerator.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Define o enumerador como sua posição inicial, que é antes do primeiro elemento na coleção."
  remarks: "Redefinição move o enumerador para o início da coleção, antes do primeiro elemento. Após a redefinição, <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>"
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/m-system.collections.spe_14_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/m-system.collections.spe_14_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/m-system.collections.spe_14_1.vb)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Collections.Specialized.StringEnumerator.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A coleção foi modificada depois que o enumerador foi criado."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Collections.Specialized.StringEnumerator.Current
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Current
  nameWithType: StringEnumerator.Current
  fullName: System.Collections.Specialized.StringEnumerator.Current
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.StringEnumerator.MoveNext
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: StringEnumerator.MoveNext()
  fullName: System.Collections.Specialized.StringEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.StringEnumerator.Reset
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Reset()
  nameWithType: StringEnumerator.Reset()
  fullName: System.Collections.Specialized.StringEnumerator.Reset()
- uid: System.Collections.Specialized.StringEnumerator.Current*
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Current
  nameWithType: StringEnumerator.Current
- uid: System.Collections.Specialized.StringEnumerator.MoveNext*
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: StringEnumerator.MoveNext
- uid: System.Collections.Specialized.StringEnumerator.Reset*
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Reset
  nameWithType: StringEnumerator.Reset
