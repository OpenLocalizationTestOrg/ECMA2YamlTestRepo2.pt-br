### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.Grammar
  id: Grammar
  children:
  - System.Speech.Recognition.Grammar.#ctor
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  - System.Speech.Recognition.Grammar.#ctor(System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.Enabled
  - System.Speech.Recognition.Grammar.IsStg
  - System.Speech.Recognition.Grammar.Loaded
  - System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  - System.Speech.Recognition.Grammar.Name
  - System.Speech.Recognition.Grammar.Priority
  - System.Speech.Recognition.Grammar.ResourceName
  - System.Speech.Recognition.Grammar.RuleName
  - System.Speech.Recognition.Grammar.SpeechRecognized
  - System.Speech.Recognition.Grammar.StgInit(System.Object[])
  - System.Speech.Recognition.Grammar.Weight
  langs:
  - csharp
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
  type: Class
  summary: "Um objeto de tempo de execução que faz referência a uma gramática de reconhecimento de fala, que um aplicativo pode usar para definir as restrições de reconhecimento de fala."
  remarks: "Uma gramática de reconhecimento de fala é um conjunto de regras e restrições que definem como entrada significativa pode reconhecer um mecanismo de reconhecimento de fala. Para obter mais informações sobre criação e uso de gramáticas de reconhecimento de fala, consulte [o reconhecimento de fala](http://msdn.microsoft.com/en-us/6a7dc524-07fc-4862-8d48-8c10dc64b919), [criar gramáticas usando XML](http://msdn.microsoft.com/en-us/2d799487-49c6-4cc9-b42f-f71cd3824fe1), [criar gramáticas usando GrammarBuilder](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae), e [criar gramáticas usando SrgsGrammar](http://msdn.microsoft.com/en-us/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906).       Depois que você criar uma gramática, você deve criá-lo em um objeto de gramática que um mecanismo de reconhecimento de fala pode carregar e que seu aplicativo pode usar em tempo de execução para gerenciar o reconhecimento de fala. Você pode usar um <xref:System.Speech.Recognition.Grammar.%23ctor%2A>construtor para criar uma instância de gramática de um <xref:System.Speech.Recognition.GrammarBuilder>ou um <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>objeto, ou de um arquivo ou um <xref:System.IO.Stream>que contém uma descrição de uma gramática em um formato com suporte.</xref:System.IO.Stream> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> Os formatos com suporte incluem o seguinte:-arquivos de formato XML que está de acordo com o W3C [especificação de gramática de reconhecimento de fala (SRGS) versão 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -gramáticas foram compiladas para um arquivo binário com. cfg arquivo construtores de gramática de extensão que aceitam as gramáticas XML em um formato binário para otimizá-los para carregamento e o consumo por um mecanismo de reconhecimento de fala de compilação de arquivos de gramática de formato XML em seus argumentos. Você pode reduzir a quantidade de tempo necessário para construir um objeto de gramática de uma gramática XML formato ao compilar a gramática de antemão, usando um do <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>métodos.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>       Reconhecimento de fala de um aplicativo, como gerenciado por um <xref:System.Speech.Recognition.SpeechRecognizer>ou <xref:System.Speech.Recognition.SpeechRecognitionEngine>de objeto, pode carregar várias gramáticas de reconhecimento de fala.</xref:System.Speech.Recognition.SpeechRecognitionEngine> </xref:System.Speech.Recognition.SpeechRecognizer> O aplicativo independentemente pode habilitar ou desabilitar gramáticas individuais definindo o <xref:System.Speech.Recognition.Grammar.Enabled%2A>propriedade e modificar o comportamento de reconhecimento através das propriedades de gramática, como o <xref:System.Speech.Recognition.Grammar.Priority%2A>e <xref:System.Speech.Recognition.Grammar.Weight%2A>Propriedades.</xref:System.Speech.Recognition.Grammar.Weight%2A> </xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.Speech.Recognition.Grammar.Enabled%2A>       A gramática <xref:System.Speech.Recognition.Grammar.SpeechRecognized>evento é gerado quando a entrada corresponde a um caminho por meio de gramática.</xref:System.Speech.Recognition.Grammar.SpeechRecognized>      > [!NOTE] > É uma prática recomendada para verificar a segurança de qualquer URI ou DLL usado para criar um objeto de gramática.   >> Windows e a plataforma de fala fornecem segurança para construir uma instância de gramática de uma DLL ou de uma gramática que oferece suporte a scripts de aplicativos.   >> Scripts nos objetos de gramática sempre são executados como se o download de uma página da web a `Internet Zone`. O tempo de execução de linguagem comum (CLR) isola qualquer DLL carregada para obter uma definição de gramática."
  example:
  - "The following example constructs a Grammar object from a speech recognition grammar defined in a XML file (cities.xml). The content of the cities.xml file appears in the following XML example.  \n  \n```c#  \n// Load a cities grammar from a local file and return the grammar object.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item> Seattle </item>  \n      <item> Los Angeles </item>  \n      <item> New York </item>  \n      <item> Miami </item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Grammar: {(_uri != null ? "uri=" + _uri.ToString () + " " : "") + "rule=" + _ruleName }")]

      public class Grammar
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe"
  syntax:
    content: protected Grammar ();
    parameters: []
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe de <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Este construtor não passar os parâmetros para o manipulador de inicialização e a descrição não deve definir um manipulador de inicialização que requer argumentos.       Este construtor pode criar um <xref:System.Speech.Recognition.Grammar>instância nos seguintes formatos:-arquivos de formato XML que está de acordo com o W3C [especificação de gramática de reconhecimento de fala (SRGS) versão 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -gramáticas foram compiladas para um binário de arquivo com uma extensão de arquivo. cfg esse construtor compila arquivos de gramática de formato XML em um formato binário para otimizá-los para carregamento e o consumo por um mecanismo de reconhecimento de fala.</xref:System.Speech.Recognition.Grammar> Você pode reduzir a quantidade de tempo necessário para construir um <xref:System.Speech.Recognition.Grammar>objeto a partir de uma gramática XML formato ao compilar a gramática de antemão, usando um do <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>métodos.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Uma gramática SRGS pode definir uma regra raiz. Para criar um <xref:System.Speech.Recognition.Grammar>do objeto de um fluxo e especificar uma regra raiz, use o <xref:System.Speech.Recognition.Grammar.%23ctor%2A>ou <xref:System.Speech.Recognition.Grammar.%23ctor%2A>construtor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Para criar um <xref:System.Speech.Recognition.Grammar>do objeto de um fluxo e especifique um URI de base para usar ao resolver referências de regra relativo, use o <xref:System.Speech.Recognition.Grammar.%23ctor%2A>construtor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar from a local SRGS file (cities.xml) using a file stream. The content of the cities.xml file appears following C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream and    \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromStream()  \n{  \n  string fileName = @\"c:\\temp\\cities.xml\";  \n  Grammar citiesGrammar =  \n    new Grammar(new FileStream(fileName, FileMode.Open));  \n  citiesGrammar.Name = \"Stream Cities Grammar\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Um fluxo que descreve uma gramática de reconhecimento de fala em um formato com suporte."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>Descreve uma gramática não contém uma regra raiz."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "O fluxo não contém uma descrição válida de uma gramática ou descreve uma gramática que contém uma referência de regra não pode ser resolvida."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  id: '#ctor(System.Speech.Recognition.GrammarBuilder)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe um <xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref> objeto."
  remarks: "Para obter mais informações sobre como usar o <xref:System.Speech.Recognition.GrammarBuilder>classe para definir uma gramática, consulte [criar gramáticas usando GrammarBuilder](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</xref:System.Speech.Recognition.GrammarBuilder>"
  example:
  - "The following example creates a speech recognition grammar using <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects. The Grammar constructor creates a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.GrammarBuilder> object.  \n  \n```c#  \n  \n// Create a grammar using a GrammarBuilder and return the new grammar.   \nprivate static Grammar CreateGrammarBuilderGrammar()  \n{  \n  GrammarBuilder builder = new GrammarBuilder();  \n  \n  Choices cityChoice = new Choices (new string[]   \n  {\"Seattle\", \"New York\", \"Miami\", \"Los Angeles\"});  \n  \n  builder.Append(\"I would like to fly from\");  \n  builder.Append(cityChoice);  \n  builder.Append(\"to\");  \n  builder.Append(cityChoice);  \n  \n  Grammar citiesGrammar = new Grammar(builder);  \n  citiesGrammar.Name = \"GrammarBuilder Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.GrammarBuilder builder);
    parameters:
    - id: builder
      type: System.Speech.Recognition.GrammarBuilder
      description: "Uma instância de <xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref> que contém as restrições da gramática de reconhecimento de fala."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância de um <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe um <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> objeto."
  remarks: "Este construtor não passar todos os parâmetros para o manipulador de inicialização e o <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>não deve conter um manipulador de inicialização que requer argumentos.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       Um <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>pode ter uma regra raiz.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> Para criar um <xref:System.Speech.Recognition.Grammar>objeto que especifica uma regra raiz, use o <xref:System.Speech.Recognition.Grammar.%23ctor%2A>ou <xref:System.Speech.Recognition.Grammar.%23ctor%2A>construtor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Para criar o reconhecimento de fala <xref:System.Speech.Recognition.Grammar>de um <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>e especifique um URI de base para usar ao resolver referências de regra relativa, use o <xref:System.Speech.Recognition.Grammar.%23ctor%2A>construtor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance, which is then used to construct a <xref:System.Speech.Recognition.Grammar> object.  \n  \n```c#  \nprivate static Grammar CreateSrgsDocumentGrammar()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Cities rule and add it to the document.  \n  SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n  \n  SrgsOneOf cityChoice = new SrgsOneOf();  \n  cityChoice.Add(new SrgsItem(\"Seattle\"));  \n  cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n  cityChoice.Add(new SrgsItem(\"New York\"));  \n  cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n  citiesRule.Add(cityChoice);  \n  document.Rules.Add(citiesRule);  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"I would like to fly from\");  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  item.Add(new SrgsText(\"to\"));  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the Grammar object.  \n  Grammar citiesGrammar = new Grammar(document);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "As restrições para a gramática de reconhecimento de fala."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>srgsDocument</code>não contém uma regra raiz."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>contém uma referência de regra não pode ser resolvida."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe a partir de um arquivo."
  remarks: "Este construtor não passar os parâmetros para o manipulador de inicialização e a descrição não deve definir um manipulador de inicialização que requer argumentos.       Este construtor pode criar um <xref:System.Speech.Recognition.Grammar>instância nos seguintes formatos:-arquivos de formato XML que está de acordo com o W3C [especificação de gramática de reconhecimento de fala (SRGS) versão 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -gramáticas foram compiladas para um binário de arquivo com uma extensão de arquivo. cfg esse construtor compila arquivos de gramática de formato XML em um formato binário para otimizá-los para carregamento e o consumo por um mecanismo de reconhecimento de fala.</xref:System.Speech.Recognition.Grammar> Você pode reduzir a quantidade de tempo necessário para construir um <xref:System.Speech.Recognition.Grammar>objeto a partir de uma gramática XML formato ao compilar a gramática de antemão, usando um do <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>métodos.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Uma gramática SRGS pode definir uma regra raiz. Para criar um <xref:System.Speech.Recognition.Grammar>de uma cadeia de caracteres do objeto e especificar uma regra raiz, use o <xref:System.Speech.Recognition.Grammar.%23ctor%2A>construtor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Para criar um <xref:System.Speech.Recognition.Grammar>objeto que especifica um URI de base para usar ao resolver referências de regra relativo, abra o arquivo em um fluxo de arquivos e usar o <xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName>construtor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a speech recognition grammar from a local SRGS file to build a <xref:System.Speech.Recognition.Grammar> object. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n// Load a cities grammar from a local file and  \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho do arquivo que descreve uma gramática de reconhecimento de fala em um formato com suporte."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>contém a cadeia de caracteres vazia (&quot;&quot;), ou o arquivo descreve uma gramática não contém uma regra raiz."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "O arquivo não contém uma descrição válida ou descreve uma gramática que contém uma referência de regra não pode ser resolvida."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe um <xref:System.IO.Stream>e especifica uma regra raiz.</xref:System.IO.Stream>"
  remarks: "Este construtor não passar os parâmetros para o manipulador de inicialização e a descrição não deve definir um manipulador de inicialização que requer argumentos.       Este construtor pode criar um <xref:System.Speech.Recognition.Grammar>instância nos seguintes formatos:-arquivos de formato XML que está de acordo com o W3C [especificação de gramática de reconhecimento de fala (SRGS) versão 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -gramáticas foram compiladas para um binário de arquivo com uma extensão de arquivo. cfg esse construtor compila arquivos de gramática de formato XML em um formato binário para otimizá-los para carregamento e o consumo por um mecanismo de reconhecimento de fala.</xref:System.Speech.Recognition.Grammar> Você pode reduzir a quantidade de tempo necessário para construir um <xref:System.Speech.Recognition.Grammar>objeto a partir de uma gramática XML formato ao compilar a gramática de antemão, usando um do <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>métodos.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Para criar um <xref:System.Speech.Recognition.Grammar>de um fluxo e especifique um URI de base para usar ao resolver referências de regra relativa, use o <xref:System.Speech.Recognition.Grammar.%23ctor%2A>construtor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file stream and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream, use a specific  \n// rule as the root of the grammar, and return the new grammar.   \nprivate static Grammar CreateGrammarFromStream2()  \n{  \n  FileInfo file = new FileInfo(@\"c:\\temp\\cities.xml\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), \"Main\");  \n  citiesGrammar.Name = \"Stream Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Um fluxo que descreve uma gramática de reconhecimento de fala em um formato com suporte."
    - id: ruleName
      type: System.String
      description: "O identificador da regra a ser usado como o ponto de entrada da gramática de reconhecimento de fala, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar a regra de raiz padrão da descrição da gramática."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>não pode ser resolvido ou não é público, ou <code>ruleName</code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e a descrição de gramática não define uma regra raiz."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "O fluxo não contém uma descrição válida ou descreve uma gramática que contém uma referência de regra não pode ser resolvida."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância de um <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe um <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> de objeto e especifica uma regra raiz."
  remarks: "Este construtor não passar todos os parâmetros para o manipulador de inicialização e o <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>não deve conter um manipulador de inicialização que requer argumentos.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       Para criar um <xref:System.Speech.Recognition.Grammar>de objeto um <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>e especifique um URI de base para usar ao resolver referências de regra relativa, use o <xref:System.Speech.Recognition.Grammar.%23ctor%2A>construtor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and specifies a rule to use as the root rule of the grammar. The example constructs a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and loads it into the speech recognition engine.  \n  \n```c#  \nusing System;  \nusing System.Speech.Recognition;  \nusing System.Speech.Recognition.SrgsGrammar;  \n  \nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n  \n    // Initialize an in-process speech recognition engine.  \n    {  \n      using (SpeechRecognitionEngine recognizer =  \n         new SpeechRecognitionEngine())  \n      {  \n  \n        // Create the SrgsDocument.  \n        SrgsDocument document = new SrgsDocument();  \n  \n        // Create the Cities rule and add it to the document.  \n        SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n        citiesRule.Scope = SrgsRuleScope.Public;  \n  \n        SrgsOneOf cityChoice = new SrgsOneOf();  \n        cityChoice.Add(new SrgsItem(\"Seattle\"));  \n        cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n        cityChoice.Add(new SrgsItem(\"New York\"));  \n        cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n        citiesRule.Add(cityChoice);  \n        document.Rules.Add(citiesRule);  \n  \n        // Create the Main rule and add it to the document.  \n        SrgsRule mainRule = new SrgsRule(\"Main\");  \n        mainRule.Scope = SrgsRuleScope.Public;  \n  \n        mainRule.Add(new SrgsItem(\"I would like to fly from\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n        mainRule.Add(new SrgsItem(\"to\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n  \n        document.Rules.Add(mainRule);  \n  \n        // Create the Grammar object and specify which rule to use as the root.  \n        Grammar citiesGrammar = new Grammar(document,\"Main\");  \n  \n        // Load the grammar object to the recognizer.  \n        recognizer.LoadGrammarAsync(citiesGrammar);  \n  \n        // Attach a handler for the SpeechRecognized event.  \n        recognizer.SpeechRecognized +=  \n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \n  \n        // Set the input to the recognizer.  \n        recognizer.SetInputToDefaultAudioDevice();  \n  \n        // Start recognition.  \n        recognizer.RecognizeAsync();  \n        Console.WriteLine(\"Starting aynchronous recognition...\");  \n  \n        // Keep the console window open.  \n        Console.ReadLine();  \n      }  \n    }  \n  \n    // Handle the SpeechRecognized event.  \n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n    {  \n      Console.WriteLine(\"  Speech recognized: \" + e.Result.Text);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "As restrições para a gramática de reconhecimento de fala."
    - id: ruleName
      type: System.String
      description: "O identificador da regra a ser usado como o ponto de entrada da gramática de reconhecimento de fala, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar a regra de raiz padrão do <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>não pode ser resolvido ou não é público, ou <code>ruleName</code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e <code>srgsDocument</code> não contém uma regra raiz."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>contém uma referência de regra não pode ser resolvida."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> de um arquivo de classe e especifica uma regra raiz."
  remarks: "Este construtor não passar os parâmetros para o manipulador de inicialização e a descrição não deve definir um manipulador de inicialização que requer argumentos.       Este construtor pode criar um <xref:System.Speech.Recognition.Grammar>instância nos seguintes formatos:-arquivos de formato XML que está de acordo com o W3C [especificação de gramática de reconhecimento de fala (SRGS) versão 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -gramáticas foram compiladas para um binário de arquivo com uma extensão de arquivo. cfg esse construtor compila arquivos de gramática de formato XML em um formato binário para otimizá-los para carregamento e o consumo por um mecanismo de reconhecimento de fala.</xref:System.Speech.Recognition.Grammar> Você pode reduzir a quantidade de tempo necessário para construir um <xref:System.Speech.Recognition.Grammar>objeto a partir de uma gramática XML formato ao compilar a gramática de antemão, usando um do <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>métodos.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Para criar um <xref:System.Speech.Recognition.Grammar>que especifica um URI de base a ser usado para resolver referências de regra relativo, abra um fluxo para o arquivo e use o <xref:System.Speech.Recognition.Grammar.%23ctor%2A>construtor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from a local file, use a specific  \n// rule as the root of the grammar, and return the new grammar.  \nprivate static Grammar CreateGrammarFromFile2()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\", \"Main\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path, string ruleName);
    parameters:
    - id: path
      type: System.String
      description: "O caminho do arquivo que descreve uma gramática de reconhecimento de fala em um formato com suporte."
    - id: ruleName
      type: System.String
      description: "O identificador da regra a ser usado como o ponto de entrada da gramática de reconhecimento de fala, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar a regra de raiz padrão da descrição da gramática."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>não pode ser resolvido ou não é público, <code>path</code> é a cadeia de caracteres vazia (&quot;&quot;), ou <code>ruleName</code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e a descrição de gramática não define uma regra raiz."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "O arquivo não contém uma descrição válida ou descreve uma gramática que contém uma referência de regra não pode ser resolvida."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe um <xref:System.IO.Stream>e especifica uma regra raiz.</xref:System.IO.Stream>"
  remarks: "Parâmetros para um manipulador de inicialização também podem ser especificados."
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Um <xref:System.IO.Stream>conectado a um objeto de entrada/saída (incluindo arquivos de recursos do Visual Studio e DLLs) que contém uma especificação de gramática.</xref:System.IO.Stream>"
    - id: ruleName
      type: System.String
      description: "O identificador da regra a ser usado como o ponto de entrada da gramática de reconhecimento de fala, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar a regra de raiz padrão da descrição da gramática."
    - id: parameters
      type: System.Object[]
      description: "Parâmetros a serem passados para o manipulador de inicialização especificado pelo <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>propriedade para o ponto de entrada ou a regra raiz do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> a ser criado.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Esse parâmetro pode ser nulo."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>está conectado a uma gramática que:-não contém a regra especificada em <code>ruleName</code>       - requer parâmetros de inicialização diferentes das especificadas no <code>parameters</code>       - contém uma referência de regra relativo que não pode ser resolvida por base o padrão <xref:System.Uri> regra para gramáticas"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  id: '#ctor(System.IO.Stream,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe a partir de um fluxo, especifica uma regra raiz e define uma base URI Uniform Resource Identifier () para resolver referências de regra relativo."
  remarks: "Este construtor não passar os parâmetros para o manipulador de inicialização e a descrição não deve definir um manipulador de inicialização que requer argumentos.       Este construtor pode criar um <xref:System.Speech.Recognition.Grammar>instância nos seguintes formatos:-arquivos de formato XML que está de acordo com o W3C [especificação de gramática de reconhecimento de fala (SRGS) versão 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -gramáticas foram compiladas para um binário de arquivo com uma extensão de arquivo. cfg esse construtor compila arquivos de gramática de formato XML em um formato binário para otimizá-los para carregamento e o consumo por um mecanismo de reconhecimento de fala.</xref:System.Speech.Recognition.Grammar> Você pode reduzir a quantidade de tempo necessário para construir um <xref:System.Speech.Recognition.Grammar>objeto a partir de uma gramática XML formato ao compilar a gramática de antemão, usando um do <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>métodos.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Este construtor não valida `baseUri`. No entanto, o `LoadGrammar` método de um <xref:System.Speech.Recognition.SpeechRecognitionEngine>ou <xref:System.Speech.Recognition.SpeechRecognizer>objeto lança uma exceção se ele não puder resolver todas as referências de regra na descrição de gramática.</xref:System.Speech.Recognition.SpeechRecognizer> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Se `baseUri` não é `null`, o `LoadGrammar` método usa o URI para resolver quaisquer referências de regra caso contrário, ele não pode resolver. Se `baseUri` representa um arquivo, em seguida, o `LoadGrammar` usa o arquivo designado e o diretório do arquivo quando ele tenta resolver referências de regra relativo."
  example:
  - "The following example loads a local SRGS file (shuttle.xml) from a file stream. The file contains a relative rule reference to a rule in the cities.xml file, and specifies a base URI to use to resolve the rule reference. The content of the shuttle.xml and cities.xml files appears in the XML examples that follow the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateGrammarFromStream3()  \n{  \n  FileInfo file = new FileInfo(@\".\\shuttle.xml\");  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), null, baseUri);  \n  citiesGrammar.Name = \"Stream Cities Grammar 3\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- shuttle.xml:   \n    Defines an SRGS grammar for asking about a shuttle service. This grammar  \n    references a Cities rule that is defined in the cities.xml grammar. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      Can I get a shuttle in  \n      <ruleref uri=\"cities.xml#Cities\"/>  \n    </item>  \n  </rule>  \n</grammar>  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Um fluxo que descreve uma gramática de reconhecimento de fala em um formato com suporte."
    - id: ruleName
      type: System.String
      description: "O identificador da regra a ser usado como o ponto de entrada da gramática de reconhecimento de fala, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar a regra de raiz padrão da descrição da gramática."
    - id: baseUri
      type: System.Uri
      description: "O URI de base a ser usado para resolver qualquer referência relativa de regra na descrição de gramática ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>não pode ser resolvido ou não é público, ou <code>ruleName</code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e a descrição de gramática não define uma regra raiz."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "O fluxo não contém uma descrição válida ou descreve uma gramática que contém uma referência de regra não pode ser resolvida."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe a partir de uma instância de <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>e especifica o nome de uma regra para ser o ponto de entrada para a gramática."
  remarks: "Parâmetros para um manipulador de inicialização também podem ser especificados."
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Uma instância de <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> que contém as restrições da gramática de reconhecimento de fala."
    - id: ruleName
      type: System.String
      description: "O identificador da regra a ser usado como o ponto de entrada da gramática de reconhecimento de fala, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar a regra de raiz padrão da descrição da gramática."
    - id: parameters
      type: System.Object[]
      description: "Parâmetros a serem passados para o manipulador de inicialização especificado pelo <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>propriedade para o ponto de entrada ou a regra raiz do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> a ser criado.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Esse parâmetro pode ser nulo."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Qualquer um dos parâmetros contém um valor inválido.      -A <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> especificado por <code> srgsDocument </code> não contém a regra especificada por <code> ruleName </code>.      -O conteúdo dos parâmetros de matriz não coincidem com os argumentos de qualquer um dos manipuladores de inicialização da regra."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância de um <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe um <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> objeto Especifica uma regra raiz e define uma base URI Uniform Resource Identifier () para resolver referências de regra relativo."
  remarks: "Este construtor não passar todos os parâmetros para o manipulador de inicialização e o <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>não deve conter um manipulador de inicialização que requer argumentos.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       Este construtor não valida `baseUri`. No entanto, o `LoadGrammar` método de um <xref:System.Speech.Recognition.SpeechRecognitionEngine>ou <xref:System.Speech.Recognition.SpeechRecognizer>objeto lança uma exceção se ele não puder resolver todas as referências de regra na descrição de gramática.</xref:System.Speech.Recognition.SpeechRecognizer> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Se `baseUri` não é `null`, o `LoadGrammar` método usa o URI para resolver quaisquer referências de regra caso contrário, ele não pode resolver. Se `baseUri` representa um arquivo, em seguida, o `LoadGrammar` método usa o arquivo designado e o diretório do arquivo quando ele tenta resolver referências de regra relativo."
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> that contains a relative rule reference to the cities.xml file, and specifies a URI to use to resolve the rule reference. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateSrgsDocumentGrammar3()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"Can I get a shuttle in\");  \n  \n  // Create a relative URI for the cities rule.  \n  Uri ruleUri = new Uri(\"cities.xml#Cities\", UriKind.Relative);  \n  \n  item.Add(new SrgsRuleRef(ruleUri));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the grammar.  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(document, null, baseUri);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar 3\";  \n  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "As restrições para a gramática de reconhecimento de fala."
    - id: ruleName
      type: System.String
      description: "O identificador da regra a ser usado como o ponto de entrada da gramática de reconhecimento de fala, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar a regra de raiz padrão do <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
    - id: baseUri
      type: System.Uri
      description: "O URI de base a ser usado para resolver qualquer referência à regra relativo no <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>não pode ser resolvido ou não é público, ou <code>ruleName</code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e <code>srgsDocument</code> não contém uma regra raiz."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>contém uma referência de regra não pode ser resolvida."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  id: '#ctor(System.String,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe a partir de um arquivo que contém uma definição de gramática e especifica o nome de uma regra para ser o ponto de entrada para a gramática."
  remarks: "Parâmetros para um manipulador de inicialização também podem ser especificados."
  syntax:
    content: public Grammar (string path, string ruleName, object[] parameters);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para um arquivo, incluindo DLLs, que contém uma especificação de gramática."
    - id: ruleName
      type: System.String
      description: "O identificador da regra a ser usado como o ponto de entrada da gramática de reconhecimento de fala, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar a regra de raiz padrão da descrição da gramática."
    - id: parameters
      type: System.Object[]
      description: "Parâmetros a serem passados para o manipulador de inicialização especificado pelo <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>propriedade para o ponto de entrada ou a regra raiz do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> a ser criado.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Esse parâmetro pode ser nulo."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Qualquer um dos parâmetros contém um valor inválido.      -O arquivo especificado por <code> path </code> não contém uma gramática válida ou a regra especificada em <code> ruleName </code>.      -O conteúdo dos parâmetros de matriz não coincidem com os argumentos de qualquer um dos manipuladores de inicialização da regra.      -A gramática não tem uma referência de regra relativo que não pode ser resolvida por base o padrão <xref:System.Uri>regra para gramáticas.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe um <xref:System.IO.Stream>e especifica uma regra raiz e um URI de base para resolver as referências relativas.</xref:System.IO.Stream>"
  remarks: "Parâmetros para um manipulador de inicialização também podem ser especificados."
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Um <xref:System.IO.Stream>conectado a um objeto de entrada/saída (incluindo arquivos de recursos do Visual Studio e DLLs) que contém uma especificação de gramática.</xref:System.IO.Stream>"
    - id: ruleName
      type: System.String
      description: "O identificador da regra a ser usado como o ponto de entrada da gramática de reconhecimento de fala, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar a regra de raiz padrão da descrição da gramática."
    - id: baseUri
      type: System.Uri
      description: "O URI de base a ser usado para resolver qualquer referência relativa de regra na descrição de gramática ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: parameters
      type: System.Object[]
      description: "Parâmetros a serem passados para o manipulador de inicialização especificado pelo <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>propriedade para o ponto de entrada ou a regra raiz do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> a ser criado.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Esse parâmetro pode ser nulo."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Qualquer um dos parâmetros contém um valor inválido.      -A <code> stream </code> está conectado a uma gramática não contém a regra especificada por <code> ruleName </code>.      -O conteúdo dos parâmetros de matriz não coincidem com os argumentos de qualquer um dos manipuladores de inicialização da regra.      -A gramática contém uma referência de regra relativo que não pode ser resolvida por base o padrão <xref:System.Uri>regra para gramáticas ou o URI fornecido pelo <code> baseUri </code>.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe a partir de uma instância de <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>e especifica o nome de uma regra para ser o ponto de entrada para a gramática e um URI de base para resolver as referências relativas."
  remarks: "Parâmetros para um manipulador de inicialização também podem ser especificados."
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Uma instância de <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> que contém as restrições da gramática de reconhecimento de fala."
    - id: ruleName
      type: System.String
      description: "O identificador da regra a ser usado como o ponto de entrada da gramática de reconhecimento de fala, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar a regra de raiz padrão da descrição da gramática."
    - id: baseUri
      type: System.Uri
      description: "O URI de base a ser usado para resolver qualquer referência relativa de regra na descrição de gramática ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: parameters
      type: System.Object[]
      description: "Parâmetros a serem passados para o manipulador de inicialização especificado pela propriedade <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>para o ponto de entrada ou a regra raiz do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> a ser criado. Esse parâmetro pode ser nulo.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Qualquer um dos parâmetros contém um valor inválido.      -A <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> especificado por <code> srgsDocument </code> não contém a regra especificada em <code> ruleName </code>.      -O conteúdo dos parâmetros de matriz não coincidem com os argumentos de qualquer um dos manipuladores de inicialização da regra.      -A gramática não tem uma referência de regra relativo que não pode ser resolvida por base o padrão <xref:System.Uri>regra para gramáticas ou o URI fornecido pelo <code> baseUri </code>.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Enabled
  id: Enabled
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém ou define um valor que controla se um <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> pode ser usado por um reconhecedor de fala para executar o reconhecimento."
  remarks: "Uma instância de <xref:System.Speech.Recognition.Grammar>podem ser ativados ou desativados independentemente sendo carregado pelo mecanismo de reconhecimento de fala.</xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "O <xref uid=&quot;langword_csharp_Enabled&quot; name=&quot;Enabled&quot; href=&quot;&quot;> </xref> propriedade retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se um reconhecedor de fala pode executar o reconhecimento usando a gramática de reconhecimento de fala; caso contrário, a propriedade retornará <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.IsStg
  id: IsStg
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Determina se uma gramática é fortemente tipada."
  remarks: "Fortemente tipado <xref:System.Speech.Recognition.Grammar>objeto (`IsStg` é igual a `true`) pode retornar resultados fortemente tipado (objetos, em vez de texto não processado) para um aplicativo cliente.</xref:System.Speech.Recognition.Grammar> Por exemplo, uma gramática fortemente tipado pode retornar <xref:System.DateTime>objetos em vez de entrada não reconhecida processada.</xref:System.DateTime>       Você pode implementar gramáticas fortemente tipada, anexando o código para as regras de uma gramática. Como um mecanismo de reconhecimento processa qualquer determinada regra, considerando como entrada os resultados parciais atuais, o código associado é executado e as informações textuais torna-se objetos de tipo avançado. Isso permite que um cliente para tornar mais fácil usar verificando semântica avançada, suporte a várias culturas, e a lógica de gramática interno.       Instâncias do tipo mais acentuado <xref:System.Speech.Recognition.Grammar>objetos normalmente são obtidos de recursos em um assembly como um <xref:System.Type>do tempo de execução do CLR (Common Language).</xref:System.Type> </xref:System.Speech.Recognition.Grammar> Os tipos de localizada usados para dar suporte a idiomas diferentes são exemplos de tais <xref:System.Speech.Recognition.Grammar>objetos.</xref:System.Speech.Recognition.Grammar>"
  syntax:
    content: protected virtual bool IsStg { get; }
    return:
      type: System.Boolean
      description: "O <xref uid=&quot;langword_csharp_IsStg&quot; name=&quot;IsStg&quot; href=&quot;&quot;> </xref> propriedade retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a gramática está fortemente tipadas; caso contrário, a propriedade retornará <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.IsStg*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Loaded
  id: Loaded
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém se um <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> foi carregado por um reconhecedor de fala."
  remarks: "Uma vez um <xref:System.Speech.Recognition.Grammar>tenha sido carregado, os valores de <xref:System.Speech.Recognition.Grammar.Weight%2A>, e <xref:System.Speech.Recognition.Grammar.Priority%2A>não pode ser alterado.</xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.Speech.Recognition.Grammar.Weight%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Loaded { get; }
    return:
      type: System.Boolean
      description: "O <xref uid=&quot;langword_csharp_Loaded&quot; name=&quot;Loaded&quot; href=&quot;&quot;> </xref> propriedade retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a gramática de reconhecimento de fala referenciado carregada no reconhecedor de fala; caso contrário, a propriedade retornará <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Loaded*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  id: LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "O <xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref> método retorna uma instância localizada de um <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objeto derivado de <xref:System.Type>.</xref:System.Type>"
  remarks: "Localizada gramáticas obtidas com `LoadLocalizedGrammarFromType` são normalmente fortemente tipado (consulte <xref:System.Speech.Recognition.Grammar.IsStg%2A>para obter mais informações sobre as gramáticas com rigidez de tipos).</xref:System.Speech.Recognition.Grammar.IsStg%2A> Se `onInitParameters` for uma referência nula (Nothing no Visual Basic) localizado gramática deve ter nenhum método de inicialização, ou um método que não usa nenhum argumento."
  syntax:
    content: public static System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType (Type type, object[] onInitParameters);
    parameters:
    - id: type
      type: System.Type
      description: "Em um assembly, o <xref:System.Type>de um objeto com base em <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>.</xref:System.Type>"
    - id: onInitParameters
      type: System.Object[]
      description: "Os parâmetros a serem passados para um método de inicialização de localizedobject baseados em <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>. Esse parâmetro pode ser nulo."
    return:
      type: System.Speech.Recognition.Grammar
      description: "O <xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref> método retorna um objeto válido com base em <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se houve um erro."
  overload: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Name
  id: Name
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém ou define o nome de um <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objeto."
  remarks: ''
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The Grammar objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> propriedade retorna o nome do <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objeto. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Priority
  id: Priority
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém ou define o valor da prioridade de um <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objeto."
  remarks: "O `Priority` propriedade é usada para selecionar uma gramática quando mais de uma gramática produzirá um resultado de reconhecimento idênticos. Se um reconhecedor de fala tem mais de uma gramática de reconhecimento fala carregados e habilitados que correspondem a entrada, e a correspondência é o melhor resultado do reconhecedor, então o reconhecedor usa a gramática que tem o mais alto `Priority`. Se as gramáticas que produzem o resultado de reconhecimento idênticos também têm o mesmo `Priority` de valor, então a gramática que usa o reconhecedor não está definida."
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public int Priority { get; set; }
    return:
      type: System.Int32
      description: "O <xref uid=&quot;langword_csharp_Priority&quot; name=&quot;Priority&quot; href=&quot;&quot;> </xref> propriedade retorna um valor inteiro que representa a prioridade relativa de um determinado <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>. O intervalo é de -128 a 127, inclusive. O padrão é 0."
  overload: System.Speech.Recognition.Grammar.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.ResourceName
  id: ResourceName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém ou define um valor com o nome de um recurso binário que foi usado para carregar atual <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>."
  syntax:
    content: protected string ResourceName { get; set; }
    return:
      type: System.String
      description: "O <xref uid=&quot;langword_csharp_ResourceName&quot; name=&quot;ResourceName&quot; href=&quot;&quot;> </xref> propriedade retorna o nome do recurso binário do qual a gramática fortemente tipada, usado por <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>, foi carregada."
  overload: System.Speech.Recognition.Grammar.ResourceName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.RuleName
  id: RuleName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém o nome do ponto de entrada ou regra raiz de um <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objeto."
  remarks: "Para construir um <xref:System.Speech.Recognition.Grammar>do objeto e definir o nome de sua regra raiz, use uma da <xref:System.Speech.Recognition.Grammar.%23ctor%2A>construtores que usa o `ruleName` parâmetro.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Se a regra raiz de um <xref:System.Speech.Recognition.Grammar>não tem nome, a propriedade retorna `null`.</xref:System.Speech.Recognition.Grammar>       As regras de raiz de <xref:System.Speech.Recognition.Grammar>instâncias construído a partir de <xref:System.Speech.Recognition.GrammarBuilder>objetos normalmente não têm nome, RuleName retorna `null`.</xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public string RuleName { get; }
    return:
      type: System.String
      description: "O <xref uid=&quot;langword_csharp_RuleName&quot; name=&quot;RuleName&quot; href=&quot;&quot;> </xref> propriedade retorna o identificador para a regra raiz da gramática de reconhecimento de fala referenciado. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.RuleName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  id: SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Gerado quando o reconhecedor de fala executa reconhecimento usando o <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objeto."
  remarks: "O reconhecedor de fala também gera um `SpeechRecognized` evento quando ele reconhece a entrada. O <xref:System.Speech.Recognition.Grammar>do objeto SpeechRecognized é gerado antes do reconhecedor de fala `SpeechRecognized` evento.</xref:System.Speech.Recognition.Grammar> Para obter mais informações, consulte o <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, e <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted>eventos.</xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted> </xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName> </xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>       As tarefas específicas a uma gramática específica sempre devem ser tratadas pelo manipuladores para o <xref:System.Speech.Recognition.Grammar>SpeechRecognized evento de um objeto.</xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example shows the use of an event handler for the <xref:System.Speech.Recognition.Grammar> object's SpeechRecognized event. It outputs the recognition results to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \npublic partial class Form1 : Form  \n{  \n  SpeechRecognitionEngine sre;  \n  \n  public Form1()  \n  {  \n  InitializeComponent();  \n  \n  // Create an in-process speech recognizer.  \n  sre = new SpeechRecognitionEngine();  \n  \n  // Configure input to the speech recognizer.  \n  sre.SetInputToDefaultAudioDevice();  \n  \n  // Create a simple grammar and load it.  \n  Grammar testGrammar = new Grammar(new GrammarBuilder(\"testing\"));  \n  sre.LoadGrammarAsync(testGrammar);  \n  \n  // Add a handler for the grammar's speech recognized event.  \n  testGrammar.SpeechRecognized += new EventHandler<SpeechRecognizedEventArgs>(testGrammar_SpeechRecognized);  \n  \n  // Start asynchronous speech recognition.  \n  sre.RecognizeAsync();  \n  }  \n  \n  // Handle the grammar's SpeechRecognized event, output the recognized text.  \n  void testGrammar_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n  {  \n    Console.WriteLine(\"Recognized text: \" + e.Result.Text);  \n  }  \n}  \n```"
  syntax:
    content: public event EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs> SpeechRecognized;
    return:
      type: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  id: StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "O <xref uid=&quot;langword_csharp_StgInit&quot; name=&quot;StgInit&quot; href=&quot;&quot;> </xref> método inicializa uma gramática fortemente tipada."
  remarks: "Fortemente tipado <xref:System.Speech.Recognition.Grammar>objeto (`IsStg` é igual a `true`) pode retornar resultados fortemente tipado (objetos, em vez de texto não processado) para um aplicativo cliente.</xref:System.Speech.Recognition.Grammar> Por exemplo, uma gramática fortemente tipado pode retornar <xref:System.DateTime>objetos em vez de entrada não reconhecida processada.</xref:System.DateTime>       Você pode implementar gramáticas fortemente tipada, anexando o código para as regras de uma gramática. Como um mecanismo de reconhecimento processa qualquer determinada regra, considerando como entrada os resultados parciais atuais, o código associado é executado e as informações textuais torna-se objetos de tipo avançado. Isso permite que um cliente para tornar mais fácil usar verificando semântica avançada, suporte a várias culturas, e a lógica de gramática interno.       Instâncias do tipo mais acentuado <xref:System.Speech.Recognition.Grammar>objetos normalmente são obtidos de recursos em um assembly como um <xref:System.Type>do tempo de execução do CLR (Common Language).</xref:System.Type> </xref:System.Speech.Recognition.Grammar> Os tipos de localizada usados para dar suporte a idiomas diferentes são exemplos de tais <xref:System.Speech.Recognition.Grammar>objetos.</xref:System.Speech.Recognition.Grammar>"
  syntax:
    content: protected void StgInit (object[] parameters);
    parameters:
    - id: parameters
      type: System.Object[]
      description: "Parâmetros a serem passados para inicializar a gramática fortemente tipada. Esse parâmetro pode ser nulo."
  overload: System.Speech.Recognition.Grammar.StgInit*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Weight
  id: Weight
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém ou define o valor de peso de um <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objeto."
  remarks: "Devido à complexidade de uso de um mecanismo de reconhecimento de **peso**, seu efeito no desempenho da gramática de um determinado não é diretamente como previsível que <xref:System.Speech.Recognition.Grammar.Priority%2A>.</xref:System.Speech.Recognition.Grammar.Priority%2A>       O reconhecimento de fala é um sistema ponderado. Ele avalia todos os caminhos de reconhecimento possíveis com base em uma combinação de peso da gramática, os pesos definidos para alternativas dentro a gramática e as probabilidades definidas pelos modelos de fala. O mecanismo de reconhecimento de fala usa a combinação dessas pesos e probabilidades para classificação reconhecimentos alternativas potenciais. Gramáticas com pesos mais altos contribuirá com mais para a classificação das alternativas de reconhecimento de gramáticas com pesos inferiores.       O efeito da propriedade peso em um reconhecedor de fala é dependente de implementação do reconhecedor de. Embora a propriedade de peso pode ser usada para ajustar a precisão do reconhecimento de fala de um aplicativo, ele deve ser usado somente depois de estudo controlado de diagnóstico de um ambiente de determinado reconhecimento e com informações completas sobre o mecanismo de reconhecimento em uso."
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public float Weight { get; set; }
    return:
      type: System.Single
      description: "O <xref uid=&quot;langword_csharp_Weight&quot; name=&quot;Weight&quot; href=&quot;&quot;> </xref> propriedade retorna um ponto flutuante valor que indica a importância relativa que uma instância do mecanismo de reconhecimento deve atribuir a gramática ao processar a entrada de voz. É o intervalo de 0,0 a 1,0 inclusive. O padrão é 1.0."
  overload: System.Speech.Recognition.Grammar.Weight*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Speech.Recognition.Grammar.#ctor
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
- uid: System.Speech.Recognition.GrammarBuilder
  parent: System.Speech.Recognition
  isExternal: false
  name: GrammarBuilder
  nameWithType: GrammarBuilder
  fullName: System.Speech.Recognition.GrammarBuilder
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsDocument
  nameWithType: SrgsDocument
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.Enabled
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.Recognition.Grammar.IsStg
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Speech.Recognition.Grammar.Name
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.Grammar.ResourceName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
- uid: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeechRecognizedEventArgs>
  nameWithType: EventHandler<SpeechRecognizedEventArgs>
  fullName: System.EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.SpeechRecognizedEventArgs
    name: SpeechRecognizedEventArgs
    nameWithType: SpeechRecognizedEventArgs
    fullName: SpeechRecognizedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
- uid: System.Speech.Recognition.Grammar.Weight
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.Grammar.#ctor*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar
  nameWithType: Grammar.Grammar
- uid: System.Speech.Recognition.Grammar.Enabled*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
- uid: System.Speech.Recognition.Grammar.IsStg*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType
  nameWithType: Grammar.LoadLocalizedGrammarFromType
- uid: System.Speech.Recognition.Grammar.Name*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
- uid: System.Speech.Recognition.Grammar.ResourceName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.StgInit*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit
  nameWithType: Grammar.StgInit
- uid: System.Speech.Recognition.Grammar.Weight*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
