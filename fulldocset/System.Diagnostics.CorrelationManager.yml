### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.CorrelationManager
  id: CorrelationManager
  children:
  - System.Diagnostics.CorrelationManager.ActivityId
  - System.Diagnostics.CorrelationManager.LogicalOperationStack
  - System.Diagnostics.CorrelationManager.StartLogicalOperation
  - System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)
  - System.Diagnostics.CorrelationManager.StopLogicalOperation
  langs:
  - csharp
  name: CorrelationManager
  nameWithType: CorrelationManager
  fullName: System.Diagnostics.CorrelationManager
  type: Class
  summary: "Correlaciona rastreamentos que fazem parte de uma transação lógica."
  remarks: "Rastreamentos gerados a partir de uma única operação lógica podem ser marcados com uma identidade exclusiva de operação, para diferenciá-los de rastreamentos a partir de uma operação lógica diferente. Por exemplo, pode ser útil para rastreamentos de grupo correlacionado por solicitação do ASP.NET. A classe CorrelationManager fornece métodos usados para armazenar uma identidade de operação lógica em um contexto de thread associado e identificar automaticamente a cada evento de rastreamento gerado pelo thread com a identidade armazenado.       Também podem ser aninhadas operações lógicas. O <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A>propriedade expõe a pilha de identidades de operação lógica aninhada.</xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> Cada chamada para o <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A>método envia uma nova identidade da operação lógica para a pilha.</xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> Cada chamada para o <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>método aparece uma identidade de operação lógica da pilha.</xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>      > [!NOTE] > Identidades de operação lógica são objetos, permitindo o uso de um tipo para uma identidade de operação lógica."
  example:
  - "The following code example demonstrates the use of the CorrelationManager class by identifying the logical operation associated with a traced event. Two logical operations are started, one in the main thread and the other in a worker thread. An error event is logged in both logical operations.  \n  \n [!code-cpp[System.Diagnostics.CorrelationManager#1](~/add/codesnippet/cpp/t-system.diagnostics.cor_1.cpp)]\n [!code-cs[System.Diagnostics.CorrelationManager#1](~/add/codesnippet/csharp/t-system.diagnostics.cor_1.cs)]\n [!code-vb[System.Diagnostics.CorrelationManager#1](~/add/codesnippet/visualbasic/t-system.diagnostics.cor_1.vb)]"
  syntax:
    content: public class CorrelationManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.CorrelationManager.ActivityId
  id: ActivityId
  parent: System.Diagnostics.CorrelationManager
  langs:
  - csharp
  name: ActivityId
  nameWithType: CorrelationManager.ActivityId
  fullName: System.Diagnostics.CorrelationManager.ActivityId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define a identidade de uma atividade global."
  remarks: "A propriedade ActivityId obtém e define a identidade de atividade global <xref:System.Runtime.Remoting.Messaging.CallContext>para o thread.</xref:System.Runtime.Remoting.Messaging.CallContext> O ActivityId é usada para operações de transferência de rastreamento de ouvintes de rastreamento que substituem o <xref:System.Diagnostics.TraceListener.TraceTransfer%2A>método, como a <xref:System.Diagnostics.XmlWriterTraceListener>classe.</xref:System.Diagnostics.XmlWriterTraceListener> </xref:System.Diagnostics.TraceListener.TraceTransfer%2A>"
  syntax:
    content: public Guid ActivityId { get; set; }
    return:
      type: System.Guid
      description: "Um <xref:System.Guid>estrutura que identifica a atividade global.</xref:System.Guid>"
  overload: System.Diagnostics.CorrelationManager.ActivityId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CorrelationManager.LogicalOperationStack
  id: LogicalOperationStack
  parent: System.Diagnostics.CorrelationManager
  langs:
  - csharp
  name: LogicalOperationStack
  nameWithType: CorrelationManager.LogicalOperationStack
  fullName: System.Diagnostics.CorrelationManager.LogicalOperationStack
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém a pilha de operação lógica do contexto da chamada."
  remarks: "Cada chamada para o <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A>método envia uma nova identidade da operação lógica para pilha da propriedade LogicalOperationStack.</xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> Cada chamada para o <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>método aparece uma identidade de operação lógica da pilha.</xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>"
  syntax:
    content: public System.Collections.Stack LogicalOperationStack { get; }
    return:
      type: System.Collections.Stack
      description: "Um <xref href=&quot;System.Collections.Stack&quot;> </xref> objeto que representa a pilha de operação lógica para o contexto de chamada."
  overload: System.Diagnostics.CorrelationManager.LogicalOperationStack*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CorrelationManager.StartLogicalOperation
  id: StartLogicalOperation
  parent: System.Diagnostics.CorrelationManager
  langs:
  - csharp
  name: StartLogicalOperation()
  nameWithType: CorrelationManager.StartLogicalOperation()
  fullName: System.Diagnostics.CorrelationManager.StartLogicalOperation()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicia uma operação lógica em um thread."
  remarks: "A operação lógica é iniciada usando um GUID gerado automaticamente para um identificador de operação lógica."
  syntax:
    content: public void StartLogicalOperation ();
    parameters: []
  overload: System.Diagnostics.CorrelationManager.StartLogicalOperation*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)
  id: StartLogicalOperation(System.Object)
  parent: System.Diagnostics.CorrelationManager
  langs:
  - csharp
  name: StartLogicalOperation(Object)
  nameWithType: CorrelationManager.StartLogicalOperation(Object)
  fullName: System.Diagnostics.CorrelationManager.StartLogicalOperation(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicia uma operação lógica com a identidade especificada em um thread."
  remarks: "O `operationId` parâmetro pode ser qualquer objeto, como um <xref:System.String>que permite que a operação a ser identificado para fins de rastreamento.</xref:System.String> O objeto representado pelo `operationId` é adicionada para o <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A>propriedade.</xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A>"
  example:
  - "The following code example demonstrates the use of the StartLogicalOperation method by initializing a logical operation to be associated with the main thread. For the complete code example, see the <xref:System.Diagnostics.CorrelationManager> class.  \n  \n [!code-cs[System.Diagnostics.CorrelationManager#2](~/add/codesnippet/csharp/m-system.diagnostics.cor_1.cs)]\n [!code-vb[System.Diagnostics.CorrelationManager#2](~/add/codesnippet/visualbasic/m-system.diagnostics.cor_1.vb)]"
  syntax:
    content: public void StartLogicalOperation (object operationId);
    parameters:
    - id: operationId
      type: System.Object
      description: "Um objeto que identifica a operação."
  overload: System.Diagnostics.CorrelationManager.StartLogicalOperation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>operationId</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.CorrelationManager.StopLogicalOperation
  id: StopLogicalOperation
  parent: System.Diagnostics.CorrelationManager
  langs:
  - csharp
  name: StopLogicalOperation()
  nameWithType: CorrelationManager.StopLogicalOperation()
  fullName: System.Diagnostics.CorrelationManager.StopLogicalOperation()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Interrompe a operação lógica atual."
  remarks: "A operação lógica é interrompida e a identidade da operação lógica é removida do <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A>propriedade.</xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A>"
  syntax:
    content: public void StopLogicalOperation ();
    parameters: []
  overload: System.Diagnostics.CorrelationManager.StopLogicalOperation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack*>propriedade é uma pilha vazia.</xref:System.Diagnostics.CorrelationManager.LogicalOperationStack*>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Diagnostics.CorrelationManager.ActivityId
  parent: System.Diagnostics.CorrelationManager
  isExternal: false
  name: ActivityId
  nameWithType: CorrelationManager.ActivityId
  fullName: System.Diagnostics.CorrelationManager.ActivityId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.CorrelationManager.LogicalOperationStack
  parent: System.Diagnostics.CorrelationManager
  isExternal: false
  name: LogicalOperationStack
  nameWithType: CorrelationManager.LogicalOperationStack
  fullName: System.Diagnostics.CorrelationManager.LogicalOperationStack
- uid: System.Collections.Stack
  parent: System.Collections
  isExternal: false
  name: Stack
  nameWithType: Stack
  fullName: System.Collections.Stack
- uid: System.Diagnostics.CorrelationManager.StartLogicalOperation
  parent: System.Diagnostics.CorrelationManager
  isExternal: false
  name: StartLogicalOperation()
  nameWithType: CorrelationManager.StartLogicalOperation()
  fullName: System.Diagnostics.CorrelationManager.StartLogicalOperation()
- uid: System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)
  parent: System.Diagnostics.CorrelationManager
  isExternal: false
  name: StartLogicalOperation(Object)
  nameWithType: CorrelationManager.StartLogicalOperation(Object)
  fullName: System.Diagnostics.CorrelationManager.StartLogicalOperation(Object)
- uid: System.Diagnostics.CorrelationManager.StopLogicalOperation
  parent: System.Diagnostics.CorrelationManager
  isExternal: false
  name: StopLogicalOperation()
  nameWithType: CorrelationManager.StopLogicalOperation()
  fullName: System.Diagnostics.CorrelationManager.StopLogicalOperation()
- uid: System.Diagnostics.CorrelationManager.ActivityId*
  parent: System.Diagnostics.CorrelationManager
  isExternal: false
  name: ActivityId
  nameWithType: CorrelationManager.ActivityId
- uid: System.Diagnostics.CorrelationManager.LogicalOperationStack*
  parent: System.Diagnostics.CorrelationManager
  isExternal: false
  name: LogicalOperationStack
  nameWithType: CorrelationManager.LogicalOperationStack
- uid: System.Diagnostics.CorrelationManager.StartLogicalOperation*
  parent: System.Diagnostics.CorrelationManager
  isExternal: false
  name: StartLogicalOperation
  nameWithType: CorrelationManager.StartLogicalOperation
- uid: System.Diagnostics.CorrelationManager.StopLogicalOperation*
  parent: System.Diagnostics.CorrelationManager
  isExternal: false
  name: StopLogicalOperation
  nameWithType: CorrelationManager.StopLogicalOperation
