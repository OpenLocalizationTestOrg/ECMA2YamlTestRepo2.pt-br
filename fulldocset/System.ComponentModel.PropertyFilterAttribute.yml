### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.PropertyFilterAttribute
  id: PropertyFilterAttribute
  children:
  - System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)
  - System.ComponentModel.PropertyFilterAttribute.Default
  - System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)
  - System.ComponentModel.PropertyFilterAttribute.Filter
  - System.ComponentModel.PropertyFilterAttribute.GetHashCode
  - System.ComponentModel.PropertyFilterAttribute.Match(System.Object)
  langs:
  - csharp
  name: PropertyFilterAttribute
  nameWithType: PropertyFilterAttribute
  fullName: System.ComponentModel.PropertyFilterAttribute
  type: Class
  summary: "Especifica quais propriedades devem ser relatadas por descritores de tipo, especificamente o <xref:System.ComponentModel.TypeDescriptor.GetProperties*>método.</xref:System.ComponentModel.TypeDescriptor.GetProperties*>"
  remarks: "O PropertyFilterAttribute [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] oferece suporte a um mecanismo interno que limita o número de propriedades em um tipo que são retornados pelo personalizado <xref:System.Windows.DependencyObject>descritor de tipo.</xref:System.Windows.DependencyObject> Se o [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] for encontrado, o descritor de tipo limita o escopo de propriedades retornadas. PropertyFilterAttribute difere do típico [!INCLUDE[TLA#tla_netframewkattr#plural](~/add/includes/tlasharptla-netframewkattrsharpplural-md.md)] porque não é possível aplicá-la a uma classe como metadados. O mecanismo de filtro funciona por meio de código em vez de por meio de metadados estático."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property)]

      public sealed class PropertyFilterAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)
  id: '#ctor(System.ComponentModel.PropertyFilterOptions)'
  parent: System.ComponentModel.PropertyFilterAttribute
  langs:
  - csharp
  name: PropertyFilterAttribute(PropertyFilterOptions)
  nameWithType: PropertyFilterAttribute.PropertyFilterAttribute(PropertyFilterOptions)
  fullName: System.ComponentModel.PropertyFilterAttribute.PropertyFilterAttribute(PropertyFilterOptions)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref> classe."
  syntax:
    content: public PropertyFilterAttribute (System.ComponentModel.PropertyFilterOptions filter);
    parameters:
    - id: filter
      type: System.ComponentModel.PropertyFilterOptions
      description: "As opções que descrevem esse filtro de propriedade."
  overload: System.ComponentModel.PropertyFilterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyFilterAttribute.Default
  id: Default
  parent: System.ComponentModel.PropertyFilterAttribute
  langs:
  - csharp
  name: Default
  nameWithType: PropertyFilterAttribute.Default
  fullName: System.ComponentModel.PropertyFilterAttribute.Default
  type: Field
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Esse membro oferece suporte a [!INCLUDE[TLA#tla_netframewk](~/add/includes/tlasharptla-netframewk-md.md)] infraestrutura e não se destina a ser usado diretamente no seu código."
  syntax:
    content: public static readonly System.ComponentModel.PropertyFilterAttribute Default;
    return:
      type: System.ComponentModel.PropertyFilterAttribute
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.PropertyFilterAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PropertyFilterAttribute.Equals(Object)
  fullName: System.ComponentModel.PropertyFilterAttribute.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Retorna um valor que indica se o atual <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] é igual ao objeto especificado."
  remarks: "Essa implementação compara o <xref:System.ComponentModel.PropertyFilterOptions>valores em cada <xref:System.ComponentModel.PropertyFilterAttribute>para igualdade de valor.</xref:System.ComponentModel.PropertyFilterAttribute> </xref:System.ComponentModel.PropertyFilterOptions> Se o <xref:System.ComponentModel.PropertyFilterOptions>é o mesmo, então os dois <xref:System.ComponentModel.PropertyFilterAttribute>instâncias são iguais.</xref:System.ComponentModel.PropertyFilterAttribute> </xref:System.ComponentModel.PropertyFilterOptions>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto a ser comparado a este <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref> é igual à atual <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyFilterAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyFilterAttribute.Filter
  id: Filter
  parent: System.ComponentModel.PropertyFilterAttribute
  langs:
  - csharp
  name: Filter
  nameWithType: PropertyFilterAttribute.Filter
  fullName: System.ComponentModel.PropertyFilterAttribute.Filter
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Obtém as opções de filtro para este <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]."
  remarks: "O valor do filtro é o mesmo valor que foi fornecido para o `filter` argumento do construtor de quando isso <xref:System.ComponentModel.PropertyFilterAttribute>foi construído.</xref:System.ComponentModel.PropertyFilterAttribute> Não há nenhum outro meio de definir o valor do filtro."
  syntax:
    content: public System.ComponentModel.PropertyFilterOptions Filter { get; }
    return:
      type: System.ComponentModel.PropertyFilterOptions
      description: "As opções de filtro de propriedade."
  overload: System.ComponentModel.PropertyFilterAttribute.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyFilterAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.PropertyFilterAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PropertyFilterAttribute.GetHashCode()
  fullName: System.ComponentModel.PropertyFilterAttribute.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Retorna o código hash para a atual <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um valor inteiro de 32 bits com sinal."
  overload: System.ComponentModel.PropertyFilterAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyFilterAttribute.Match(System.Object)
  id: Match(System.Object)
  parent: System.ComponentModel.PropertyFilterAttribute
  langs:
  - csharp
  name: Match(Object)
  nameWithType: PropertyFilterAttribute.Match(Object)
  fullName: System.ComponentModel.PropertyFilterAttribute.Match(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Retorna um valor que indica se a propriedade filtrar opções do atual <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] corresponde às opções de filtro de propriedade do objeto fornecido."
  remarks: "Para atributos que armazenam sinalizadores, que é verdadeiro para <xref:System.ComponentModel.PropertyFilterAttribute>, um resultado de correspondência pode ser diferente de um <xref:System.ComponentModel.PropertyFilterAttribute.Equals%2A>resultado.</xref:System.ComponentModel.PropertyFilterAttribute.Equals%2A> </xref:System.ComponentModel.PropertyFilterAttribute> Por exemplo, um filtro de <xref:System.ComponentModel.PropertyFilterOptions>corresponde a um filtro de <xref:System.ComponentModel.PropertyFilterOptions>, pois <xref:System.ComponentModel.PropertyFilterOptions>é uma mesclagem de todos os valores de filtro.</xref:System.ComponentModel.PropertyFilterOptions> </xref:System.ComponentModel.PropertyFilterOptions> </xref:System.ComponentModel.PropertyFilterOptions>"
  syntax:
    content: public override bool Match (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto a ser comparado. Este objeto deve ser um <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se houver uma correspondência; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyFilterAttribute.Match*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: PropertyFilterAttribute(PropertyFilterOptions)
  nameWithType: PropertyFilterAttribute.PropertyFilterAttribute(PropertyFilterOptions)
  fullName: System.ComponentModel.PropertyFilterAttribute.PropertyFilterAttribute(PropertyFilterOptions)
- uid: System.ComponentModel.PropertyFilterOptions
  parent: System.ComponentModel
  isExternal: false
  name: PropertyFilterOptions
  nameWithType: PropertyFilterOptions
  fullName: System.ComponentModel.PropertyFilterOptions
- uid: System.ComponentModel.PropertyFilterAttribute.Default
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Default
  nameWithType: PropertyFilterAttribute.Default
  fullName: System.ComponentModel.PropertyFilterAttribute.Default
- uid: System.ComponentModel.PropertyFilterAttribute
  parent: System.ComponentModel
  isExternal: false
  name: PropertyFilterAttribute
  nameWithType: PropertyFilterAttribute
  fullName: System.ComponentModel.PropertyFilterAttribute
- uid: System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: PropertyFilterAttribute.Equals(Object)
  fullName: System.ComponentModel.PropertyFilterAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.PropertyFilterAttribute.Filter
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Filter
  nameWithType: PropertyFilterAttribute.Filter
  fullName: System.ComponentModel.PropertyFilterAttribute.Filter
- uid: System.ComponentModel.PropertyFilterAttribute.GetHashCode
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: PropertyFilterAttribute.GetHashCode()
  fullName: System.ComponentModel.PropertyFilterAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.PropertyFilterAttribute.Match(System.Object)
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Match(Object)
  nameWithType: PropertyFilterAttribute.Match(Object)
  fullName: System.ComponentModel.PropertyFilterAttribute.Match(Object)
- uid: System.ComponentModel.PropertyFilterAttribute.#ctor*
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: PropertyFilterAttribute
  nameWithType: PropertyFilterAttribute.PropertyFilterAttribute
- uid: System.ComponentModel.PropertyFilterAttribute.Equals*
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Equals
  nameWithType: PropertyFilterAttribute.Equals
- uid: System.ComponentModel.PropertyFilterAttribute.Filter*
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Filter
  nameWithType: PropertyFilterAttribute.Filter
- uid: System.ComponentModel.PropertyFilterAttribute.GetHashCode*
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: PropertyFilterAttribute.GetHashCode
- uid: System.ComponentModel.PropertyFilterAttribute.Match*
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Match
  nameWithType: PropertyFilterAttribute.Match
