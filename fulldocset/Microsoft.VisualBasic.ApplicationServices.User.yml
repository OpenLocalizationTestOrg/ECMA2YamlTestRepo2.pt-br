### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.User
  id: User
  children:
  - Microsoft.VisualBasic.ApplicationServices.User.#ctor
  - Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  - Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  - Microsoft.VisualBasic.ApplicationServices.User.Name
  langs:
  - csharp
  name: User
  nameWithType: User
  fullName: Microsoft.VisualBasic.ApplicationServices.User
  type: Class
  summary: "Fornece acesso às informações sobre o usuário atual."
  remarks: "As propriedades e métodos expostos pelo `My.User` objeto fornece acesso às informações sobre o usuário atual. O significado de &quot;usuário atual&quot; difere ligeiramente entre aplicativos Windows e Web. Em um aplicativo do Windows, o usuário atual é o usuário que executa o aplicativo. Em um aplicativo Web, o usuário atual é o usuário que acessa o aplicativo.       O `My.User` propriedade também fornece acesso a <xref:System.Security.Principal.IPrincipal>para o usuário atual.</xref:System.Security.Principal.IPrincipal> Um objeto principal representa o contexto de segurança do usuário, incluindo a identidade do usuário e quaisquer funções aos quais o usuário pertence.       Para aplicativos do Windows, esta propriedade fornece a mesma funcionalidade que o <xref:System.Threading.Thread.CurrentPrincipal%2A>propriedade.</xref:System.Threading.Thread.CurrentPrincipal%2A> Para aplicativos Web, esta propriedade fornece a mesma funcionalidade que o <xref:System.Web.HttpContext.User%2A>propriedade do objeto retornado pelo <xref:System.Web.HttpContext.Current%2A>propriedade.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A>      > [!NOTE] > Aplicativos para Windows, somente os projetos criados **aplicativo do Windows** modelo inicializar o `My.User` objeto por padrão. Em todos os outros tipos de projeto do Windows, você deverá inicializar o `My.User` objeto chamando o <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>método explicitamente ou atribuindo um valor para <xref:System.Threading.Thread.CurrentPrincipal%2A>.</xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>      > [!NOTE] > O `My.User` objeto não pode relatar informações sobre o usuário atual do Windows, quando executado no Windows 95 e Windows 98, pois esses sistemas operacionais não suportam o conceito de um usuário conectado. Você deve implementar a autenticação personalizada para usar o `My.User` objeto nesses sistemas operacionais."
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public class User
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Inicializa uma nova instância do <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.User&quot;> </xref> classe."
  remarks: "As propriedades e métodos expostos pelo `My.User` objeto fornecem acesso a informações sobre o usuário atual."
  syntax:
    content: public User ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  id: CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Obtém ou define o objeto atual (para segurança baseada em função)."
  remarks: "Você pode definir o `My.User.CurrentPrincipal` propriedade para um objeto que implementa o <xref:System.Security.Principal.IPrincipal>interface para habilitar a autenticação personalizada.</xref:System.Security.Principal.IPrincipal>       Na maioria dos tipos de projeto, esta propriedade obtém e define a entidade de segurança do thread atual. Em um aplicativo ASP.NET, esta propriedade obtém e define as informações de segurança para a identidade do usuário da solicitação HTTP atual.       Este é um membro avançado; ele não aparece no IntelliSense, a menos que você clique no **todas as** guia.      ## Disponibilidade por tipo de projeto | | |   |-|-|   | Tipo de projeto | Disponível |   | Aplicativo do Windows | **Yes**|   | A biblioteca de classe | **Yes**|   | Aplicativo de console | **Yes**|   | Biblioteca de controle do Windows | **Yes**|   | Biblioteca de controle de Web | **Yes**|   | Serviço do Windows | **Yes**|   | Site da Web | **Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Um <xref:System.Security.Principal.IPrincipal>valor que representa o contexto de segurança.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária para definir a entidade."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  id: InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Define a entidade de segurança do thread atual para o usuário do Windows que iniciou o aplicativo."
  remarks: "Você pode usar o `My.User.InitializeWithWindowsUser` método para definir a entidade de segurança do thread atual para o usuário do Windows que iniciou o aplicativo. O modelo de aplicativo do Visual Basic em um aplicativo do Windows chama esse método durante a inicialização por padrão. Em outros tipos de projeto, você deve definir a entidade de segurança do thread atual ao chamar esse método explicitamente ou atribuindo um valor para <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>       Em projetos do Windows, o `My.User` objeto baseia-se a entidade de segurança do thread atual; portanto, esse método pode alterar as informações `My.User` retorna. Em um aplicativo ASP.NET, o `My.User` objeto baseia-se na identidade do usuário da solicitação HTTP atual e não é afetado por este método.      > [!NOTE] > O comportamento exato do `My.User` objeto depende do tipo de aplicativo e o sistema operacional no qual o aplicativo é executado. Para obter mais informações, consulte o <xref:Microsoft.VisualBasic.ApplicationServices.User>Visão geral da classe.</xref:Microsoft.VisualBasic.ApplicationServices.User>       Este é um membro avançado; ele não aparece no IntelliSense, a menos que você clique no **todas as** guia.      ## Disponibilidade por tipo de projeto | | |   |-|-|   | Tipo de projeto | Disponível |   | Aplicativo do Windows | **Yes**|   | A biblioteca de classe | **Yes**|   | Aplicativo de console | **Yes**|   | Biblioteca de controle do Windows | **Yes**|   | Biblioteca de controle de Web | **Yes**|   | Serviço do Windows | **Yes**|   | Site da Web | **Yes**|"
  syntax:
    content: public void InitializeWithWindowsUser ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  id: InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Obtém ou define o objeto principal que representa o usuário atual."
  remarks: "No <xref:Microsoft.VisualBasic.ApplicationServices.User>de objeto, essa propriedade encapsula o <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>propriedade.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:Microsoft.VisualBasic.ApplicationServices.User> Substitua este método em uma classe derivada para fornecer um comportamento diferente. Por exemplo, o <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>propriedade substitui essa propriedade.</xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Um <xref:System.Security.Principal.IPrincipal>objeto representando o usuário atual.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  id: IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Obtém um valor que indica se o usuário foi autenticado."
  remarks: "O `My.User.IsAuthenticated` propriedade permite que seu código determinar se o usuário atual foi autenticado.      > [!NOTE] > O comportamento exato do `My.User` objeto depende do tipo do aplicativo e o sistema operacional no qual o aplicativo é executado. Para obter mais informações, consulte o <xref:Microsoft.VisualBasic.ApplicationServices.User>Visão geral da classe.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Disponibilidade por tipo de projeto | | |   |-|-|   | Tipo de projeto | Disponível |   | Aplicativo do Windows | **Yes**|   | A biblioteca de classe | **Yes**|   | Aplicativo de console | **Yes**|   | Biblioteca de controle do Windows | **Yes**|   | Biblioteca de controle de Web | **Yes**|   | Serviço do Windows | **Yes**|   | Site da Web | **Yes**|"
  example:
  - "This example verifies that the user has been authenticated before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#2](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#2)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o usuário foi autenticado; Caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  id: IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Determina se o usuário atual pertence à função especificada."
  remarks: "O `My.User.IsInRole` método permite que seu código determinar se o usuário atual é um membro da função especificada.       A sobrecarga do `My.User.IsInRole` método que utiliza uma cadeia de caracteres oferece acesso fácil ao <xref:System.Security.Principal.IPrincipal.IsInRole%2A>método da entidade de segurança atual.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       A sobrecarga do `My.User.IsInRole` método que utiliza um `BuiltInRole` enumeração tem um comportamento diferente, dependendo do objeto atual. Se for uma entidade de usuário do Windows (<xref:System.Security.Principal.WindowsPrincipal>), esta função converte `role` equivalente <xref:System.Security.Principal.WindowsBuiltInRole>enumeração e retorna o resultado de chamar <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> </xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Se o servidor principal atual é qualquer outra entidade de segurança, essa função passa o nome do valor na enumeração `role` para a entidade de segurança <xref:System.Security.Principal.IPrincipal.IsInRole%2A>método.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      > [!NOTE] > O comportamento exato do `My.User` objeto depende do tipo do aplicativo e o sistema operacional no qual o aplicativo é executado. Para obter mais informações, consulte o <xref:Microsoft.VisualBasic.ApplicationServices.User>Visão geral da classe.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Disponibilidade por tipo de projeto | | |   |-|-|   | Tipo de projeto | Disponível |   | Aplicativo do Windows | **Yes**|   | A biblioteca de classe | **Yes**|   | Aplicativo de console | **Yes**|   | Biblioteca de controle do Windows | **Yes**|   | Biblioteca de controle de Web | **Yes**|   | Serviço do Windows | **Yes**|   | Site da Web | **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);
    parameters:
    - id: role
      type: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
      description: "A função interna do Windows para o qual verificar a associação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o usuário atual é um membro da função especificada. Caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Determina se o usuário atual pertence à função especificada."
  remarks: "O `My.User.IsInRole` método permite que seu código determinar se o usuário atual é um membro da função especificada.       A sobrecarga do `My.User.IsInRole` método que utiliza uma cadeia de caracteres oferece acesso fácil ao <xref:System.Security.Principal.IPrincipal.IsInRole%2A>método da entidade de segurança atual.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       A sobrecarga do `My.User.IsInRole` método que utiliza um `BuiltInRole` enumeração tem um comportamento diferente, dependendo do objeto atual. Se for uma entidade de usuário do Windows (<xref:System.Security.Principal.WindowsPrincipal>), esta função converte `role` equivalente <xref:System.Security.Principal.WindowsBuiltInRole>enumeração e retorna o resultado de chamar <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> </xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Se o servidor principal atual é qualquer outra entidade de segurança, essa função passa o nome do valor na enumeração `role` para a entidade de segurança <xref:System.Security.Principal.IPrincipal.IsInRole%2A>método.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      > [!NOTE] > O comportamento exato do `My.User` objeto depende do tipo do aplicativo e o sistema operacional no qual o aplicativo é executado. Para obter mais informações, consulte o <xref:Microsoft.VisualBasic.ApplicationServices.User>Visão geral da classe.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Disponibilidade por tipo de projeto | | |   |-|-|   | Tipo de projeto | Disponível |   | Aplicativo do Windows | **Yes**|   | A biblioteca de classe | **Yes**|   | Aplicativo de console | **Yes**|   | Biblioteca de controle do Windows | **Yes**|   | Biblioteca de controle de Web | **Yes**|   | Serviço do Windows | **Yes**|   | Site da Web | **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "O nome da função para a qual verificar a associação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o usuário atual é um membro da função especificada. Caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  id: Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Obtém o nome do usuário atual."
  remarks: "You can use the `My.User` object to get information about the current user.  \n  \n The principal that authenticates the user also controls the format of the user name. By default, an application uses Windows authentication, and the user name has the format DOMAIN\\USERNAME. A custom implementation of the principal does not necessarily use the same format.  \n  \n> [!NOTE]\n>  The `My.User.Name` property returns an empty string when run under Windows 95 and Windows 98 because those operating systems do not recognize user names.  \n  \n> [!NOTE]\n>  The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs. For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|**Yes**|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. O nome do usuário atual."
  overload: Microsoft.VisualBasic.ApplicationServices.User.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: BuiltInRole
  nameWithType: BuiltInRole
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User
  nameWithType: User.User
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser
  nameWithType: User.InitializeWithWindowsUser
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole
  nameWithType: User.IsInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
