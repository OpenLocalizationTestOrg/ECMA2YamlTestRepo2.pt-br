### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcParameter
  id: OdbcParameter
  children:
  - System.Data.Odbc.OdbcParameter.#ctor
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)
  - System.Data.Odbc.OdbcParameter.DbType
  - System.Data.Odbc.OdbcParameter.Direction
  - System.Data.Odbc.OdbcParameter.IsNullable
  - System.Data.Odbc.OdbcParameter.OdbcType
  - System.Data.Odbc.OdbcParameter.ParameterName
  - System.Data.Odbc.OdbcParameter.Precision
  - System.Data.Odbc.OdbcParameter.ResetDbType
  - System.Data.Odbc.OdbcParameter.ResetOdbcType
  - System.Data.Odbc.OdbcParameter.Scale
  - System.Data.Odbc.OdbcParameter.Size
  - System.Data.Odbc.OdbcParameter.SourceColumn
  - System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
  - System.Data.Odbc.OdbcParameter.SourceVersion
  - System.Data.Odbc.OdbcParameter.System#ICloneable#Clone
  - System.Data.Odbc.OdbcParameter.ToString
  - System.Data.Odbc.OdbcParameter.Value
  langs:
  - csharp
  name: OdbcParameter
  nameWithType: OdbcParameter
  fullName: System.Data.Odbc.OdbcParameter
  type: Class
  summary: "Representa um parâmetro para um <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> e, opcionalmente, seu mapeamento para uma <xref href=&quot;System.Data.DataColumn&quot;> </xref>. Essa classe não pode ser herdada."
  remarks: "Nomes de parâmetros não diferenciam maiusculas de minúsculas.       Ao consultar um banco de dados Oracle usando o provedor Microsoft OLE DB para Oracle (MSDAORA) e o provedor de dados ODBC .NET Framework, usando o `LIKE` cláusula para valores de consulta nos campos de comprimento fixo pode não retornar esperadas todas as correspondências. A razão é que, quando Oracle coincide com os valores dos campos de comprimento fixo em um `LIKE` cláusula, ele corresponde toda a duração da cadeia de caracteres, incluindo qualquer preenchimento espaços à direita. Por exemplo, se uma tabela em um banco de dados Oracle contém um campo denominado &quot;Campo1&quot; é definido como `char(3)`, e insira o valor &quot;a&quot; em uma linha da tabela, o código a seguir não retornará a linha.      ```vb#   Dim queryString As String = &quot;SELECT * FROM Table1 WHERE Field1 LIKE ?&quot;   Dim command As OleDbCommand = New OleDbCommand(queryString, connection)   command.Parameters.Add(&quot;@p1&quot;, OleDbType.Char, 3).Value = &quot;a&quot;   Dim reader As OleDbDataReader = command.ExecuteReader()   ```      ```c#   string queryString = &quot;SELECT * FROM Table1 WHERE Field1 LIKE ?&quot;;   OleDbCommand command = new OleDbCommand(queryString, connection);   command.Parameters.Add(&quot;@p1&quot;, OleDbType.Char, 3).Value = &quot;a&quot;;   OleDbDataReader reader = command.ExecuteReader();   ```Isso ocorre porque o Oracle armazena o valor da coluna como &quot;a&quot; (preenchimento &quot;a&quot;, com espaços até o comprimento de campo fixo de 3 à direita), que o Oracle não tratará como uma correspondência para o valor do parâmetro de &quot;a&quot; no caso de um `LIKE` comparação dos campos de comprimento fixo.       Para resolver esse problema, acrescente um caractere curinga de porcentagem (&quot;%&quot;) para o valor do parâmetro (`&quot;a%&quot;`), ou usar um SQL `=` comparação em vez disso."
  example:
  - "The following example creates multiple instances of OdbcParameter through the <xref:System.Data.Odbc.OdbcParameterCollection> within the <xref:System.Data.Odbc.OdbcDataAdapter>. These parameters are used to select data from the data source and place the data in the <xref:System.Data.DataSet>. This example assumes that a <xref:System.Data.DataSet> and an <xref:System.Data.Odbc.OdbcDataAdapter> have already been created by using the appropriate schema, commands, and connection.  \n  \n [!code-cs[Classic WebData OdbcParameter#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcp_1_1.cs)]\n [!code-vb[Classic WebData OdbcParameter#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcp_1_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Data.Odbc.OdbcParameter/OdbcParameterConverter))]

      public sealed class OdbcParameter : System.Data.Common.DbParameter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbParameter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter()
  nameWithType: OdbcParameter.OdbcParameter()
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> classe."
  remarks: "O construtor base inicializa todos os campos com seus valores padrão."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OdbcParameter.OdbcParameter#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcp_1_1.cs)]\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcp_1_1.vb)]"
  syntax:
    content: public OdbcParameter ();
    parameters: []
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> classe que usa o tipo de dados e o nome do parâmetro."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcParameter.OdbcParameter1#1](~/add/codesnippet/visualbasic/dcf1840c-d8ee-4878-9114-_1.vb)]\n [!code-cs[Classic WebData OdbcParameter.OdbcParameter1#1](~/add/codesnippet/csharp/dcf1840c-d8ee-4878-9114-_1.cs)]"
  syntax:
    content: public OdbcParameter (string name, System.Data.Odbc.OdbcType type);
    parameters:
    - id: name
      type: System.String
      description: "O nome do parâmetro."
    - id: type
      type: System.Data.Odbc.OdbcType
      description: "Uma da <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> valores."
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor fornecido no <code> type </code> parâmetro é um tipo de dados de back-end inválido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> classe que usa o nome do parâmetro e um <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> objeto."
  remarks: "Tenha cuidado ao usar essa sobrecarga do <xref:System.Data.Odbc.OdbcParameter>construtor para especificar valores de parâmetro de número inteiro.</xref:System.Data.Odbc.OdbcParameter> Porque essa sobrecarga toma uma `value` do tipo <xref:System.Object>, você deve converter o valor inteiro para um <xref:System.Object>Digite quando o valor for zero, como o exemplo c# a seguir demonstra.</xref:System.Object> </xref:System.Object>      ```   Parameter = new OdbcParameter(&quot;@pname&quot;, Convert.ToInt32(0));   ```Se você não realizar essa conversão, o compilador assumirá que você está tentando chamar o <xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=fullName>sobrecarga de construtor.</xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=fullName>"
  syntax:
    content: public OdbcParameter (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "O nome do parâmetro."
    - id: value
      type: System.Object
      description: "Um <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> objeto."
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType,Int32)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> classe que usa o nome de parâmetro, tipo de dados e comprimento."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OdbcParameter.OdbcParameter2#1](~/add/codesnippet/csharp/7ed6d552-f3e9-4f28-af5c-_1.cs)]\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter2#1](~/add/codesnippet/visualbasic/7ed6d552-f3e9-4f28-af5c-_1.vb)]"
  syntax:
    content: public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size);
    parameters:
    - id: name
      type: System.String
      description: "O nome do parâmetro."
    - id: type
      type: System.Data.Odbc.OdbcType
      description: "Uma da <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> valores."
    - id: size
      type: System.Int32
      description: "O comprimento do parâmetro."
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor fornecido no <code> type </code> parâmetro é um tipo de dados de back-end inválido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType,Int32,String)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> classe que usa o nome de parâmetro, tipo de dados, comprimento e nome da coluna de origem."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OdbcParameter.OdbcParameter3#1](~/add/codesnippet/csharp/6bdbd90e-e8bb-418c-bf3d-_1.cs)]\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter3#1](~/add/codesnippet/visualbasic/6bdbd90e-e8bb-418c-bf3d-_1.vb)]"
  syntax:
    content: public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size, string sourcecolumn);
    parameters:
    - id: name
      type: System.String
      description: "O nome do parâmetro."
    - id: type
      type: System.Data.Odbc.OdbcType
      description: "Uma da <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> valores."
    - id: size
      type: System.Int32
      description: "O comprimento do parâmetro."
    - id: sourcecolumn
      type: System.String
      description: "O nome da coluna de origem."
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor fornecido no <code> type </code> parâmetro é um tipo de dados de back-end inválido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> classe que usa o nome do parâmetro, tipo de dados, comprimento, nome da coluna de origem, direção do parâmetro, precisão numérica e outras propriedades."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and displays the <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>.  \n  \n [!code-cs[Classic WebData OdbcParameter.OdbcParameter4#1](~/add/codesnippet/csharp/46568e54-ed99-4cb1-9dd6-_1.cs)]\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter4#1](~/add/codesnippet/visualbasic/46568e54-ed99-4cb1-9dd6-_1.vb)]"
  syntax:
    content: public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "O nome do parâmetro."
    - id: odbcType
      type: System.Data.Odbc.OdbcType
      description: "Uma da <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> valores."
    - id: size
      type: System.Int32
      description: "O comprimento do parâmetro."
    - id: parameterDirection
      type: System.Data.ParameterDirection
      description: "Uma da <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> valores."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor do campo pode ser nulo. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: precision
      type: System.Byte
      description: "O número total de dígitos à esquerda e à direita do ponto decimal para o qual <xref:System.Data.Odbc.OdbcParameter.Value*>é resolvido.</xref:System.Data.Odbc.OdbcParameter.Value*>"
    - id: scale
      type: System.Byte
      description: "O número total de casas decimais para o qual <xref:System.Data.Odbc.OdbcParameter.Value*>é resolvido.</xref:System.Data.Odbc.OdbcParameter.Value*>"
    - id: srcColumn
      type: System.String
      description: "O nome da coluna de origem."
    - id: srcVersion
      type: System.Data.DataRowVersion
      description: "Uma da <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valores."
    - id: value
      type: System.Object
      description: "Um <xref:System.Object>que é o valor da <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor fornecido no <code> type </code> parâmetro é um tipo de dados de back-end inválido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> classe que usa o nome do parâmetro, tipo de dados, comprimento, nome da coluna de origem, direção do parâmetro, precisão numérica e outras propriedades."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and displays the <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n  Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 11, ParameterDirection.Output, True, 0, 0, \"Description\", DataRowVersion.Current, False, \"garden hose\")  \n  MessageBox.Show(parameter.ToString())  \nEnd Sub  \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n{  \n  OdbcParameter parameter = new OdbcParameter(\"Description\",OdbcType.VarChar,  \n              11,ParameterDirection.Output,true,0,0,\"Description\",  \n              DataRowVersion.Current, false, \"garden hose\");  \n  MessageBox.Show(parameter.ToString());  \n}  \n```"
  syntax:
    content: public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "O nome do parâmetro."
    - id: odbcType
      type: System.Data.Odbc.OdbcType
      description: "Uma da <xref:System.Data.Odbc.OdbcParameter.OdbcType*>valores.</xref:System.Data.Odbc.OdbcParameter.OdbcType*>"
    - id: size
      type: System.Int32
      description: "O comprimento do parâmetro."
    - id: parameterDirection
      type: System.Data.ParameterDirection
      description: "Uma da <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> valores."
    - id: precision
      type: System.Byte
      description: "O número total de dígitos à esquerda e à direita do ponto decimal para o qual <xref:System.Data.Odbc.OdbcParameter.Value*>é resolvido.</xref:System.Data.Odbc.OdbcParameter.Value*>"
    - id: scale
      type: System.Byte
      description: "O número total de casas decimais para o qual <xref:System.Data.Odbc.OdbcParameter.Value*>é resolvido.</xref:System.Data.Odbc.OdbcParameter.Value*>"
    - id: sourceColumn
      type: System.String
      description: "O nome da coluna de origem."
    - id: sourceVersion
      type: System.Data.DataRowVersion
      description: "Uma da <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valores."
    - id: sourceColumnNullMapping
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a coluna de origem correspondente for anulável; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se não for."
    - id: value
      type: System.Object
      description: "Um <xref:System.Object>que é o valor da <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor fornecido no <code> type </code> parâmetro é um tipo de dados de back-end inválido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.DbType
  id: DbType
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: DbType
  nameWithType: OdbcParameter.DbType
  fullName: System.Data.Odbc.OdbcParameter.DbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define o <xref href=&quot;System.Data.DbType&quot;> </xref> do parâmetro."
  remarks: "O <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>e vinculadas DbType.</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> Portanto, definir o DbType altera <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>a <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>.</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> suporte</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>       Para obter uma lista dos tipos de dados com suporte, consulte o <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>membro.</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> Para obter mais informações, consulte [parâmetros DataAdapter](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > <xref:System.Data.DbType>não tem suporte pelo Microsoft .NET Framework Data Provider para ODBC.</xref:System.Data.DbType>"
  example:
  - "The following example calls a **Stored Procedure** with three parameters using the ODBC managed provider.  \n  \n [!code-vb[Classic WebData OdbcParameter.DbType#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcp_1_1.vb)]\n [!code-cs[Classic WebData OdbcParameter.DbType#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcp_1_1.cs)]"
  syntax:
    content: public override System.Data.DbType DbType { get; set; }
    return:
      type: System.Data.DbType
      description: "Uma da <xref href=&quot;System.Data.DbType&quot;> </xref> valores. O padrão é <xref:System.String>.</xref:System.String>"
  overload: System.Data.Odbc.OdbcParameter.DbType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A propriedade não foi definida como uma opção válida <xref href=&quot;System.Data.DbType&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Direction
  id: Direction
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Direction
  nameWithType: OdbcParameter.Direction
  fullName: System.Data.Odbc.OdbcParameter.Direction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define um valor que indica se o parâmetro apenas de entrada, é somente de saída, bidirecional ou um parâmetro de valor de retorno do procedimento armazenado."
  remarks: "Se o <xref:System.Data.ParameterDirection>é `Output`e a execução de associado <xref:System.Data.Odbc.OdbcCommand>não retorna um valor, o <xref:System.Data.Odbc.OdbcParameter>conterá um valor nulo.</xref:System.Data.Odbc.OdbcParameter> </xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.ParameterDirection> Valores nulos são tratados usando a <xref:System.DBNull>classe.</xref:System.DBNull>       `Output`, `InputOut`, e `ReturnValue` parâmetros retornados pela chamada <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>não pode ser acessado até que você chame <xref:System.Data.Odbc.OdbcDataReader.Close%2A>ou `Dispose` em <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcDataReader.Close%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateMyProc(connection As OdbcConnection)  \n  \n   Dim command As OdbcCommand = connection.CreateCommand()  \n   command.CommandText = \"{ call MyProc(?,?,?) }\"  \n   command.Parameters.Add(\"\", OdbcType.Int).Value = 1  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 2  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 3  \n  \nEnd Sub  \n```  \n  \n```c#  \npublic void CreateMyProc(OdbcConnection connection)   \n{  \n   OdbcCommand command = connection.CreateCommand();  \n   command.CommandText = \"{ call MyProc(?,?,?) }\";  \n   command.Parameters.Add(\"\", OdbcType.Int).Value = 1;  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 2;  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 3;  \n}  \n```"
  syntax:
    content: public override System.Data.ParameterDirection Direction { get; set; }
    return:
      type: System.Data.ParameterDirection
      description: "Uma da <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> valores. O padrão é <xref uid=&quot;langword_csharp_Input&quot; name=&quot;Input&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcParameter.Direction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A propriedade não foi definida para um dos válidos <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.IsNullable
  id: IsNullable
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: IsNullable
  nameWithType: OdbcParameter.IsNullable
  fullName: System.Data.Odbc.OdbcParameter.IsNullable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define um valor que indica se o parâmetro aceita valores nulos."
  remarks: "Valores nulos são tratados usando a <xref:System.DBNull>classe.</xref:System.DBNull>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n   Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 88)  \n   parameter.IsNullable = True  \n   parameter.Direction = ParameterDirection.Output  \nEnd Sub  \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n{  \n   OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar, 88);  \n   parameter.IsNullable = true;  \n   parameter.Direction = ParameterDirection.Output;  \n}  \n```"
  syntax:
    content: public override bool IsNullable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se valores nulos são aceitas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcParameter.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.OdbcType
  id: OdbcType
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcType
  nameWithType: OdbcParameter.OdbcType
  fullName: System.Data.Odbc.OdbcParameter.OdbcType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define o <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> do parâmetro."
  remarks: "O OdbcType e <xref:System.Data.Odbc.OdbcParameter.DbType%2A>estão vinculados.</xref:System.Data.Odbc.OdbcParameter.DbType%2A> Portanto, as <xref:System.Data.Odbc.OdbcParameter.DbType%2A>alterações OdbcType para <xref:System.Data.Odbc.OdbcType>.</xref:System.Data.Odbc.OdbcType> suporte</xref:System.Data.Odbc.OdbcParameter.DbType%2A> de configuração       Para obter uma lista dos tipos de dados com suporte, consulte o <xref:System.Data.Odbc.OdbcType>membro.</xref:System.Data.Odbc.OdbcType> Para obter mais informações, consulte [parâmetros DataAdapter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.Odbc.OdbcType OdbcType { get; set; }
    return:
      type: System.Data.Odbc.OdbcType
      description: "Um <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> valor que é o <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> do parâmetro. O padrão é <xref uid=&quot;langword_csharp_Nchar&quot; name=&quot;Nchar&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcParameter.OdbcType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.ParameterName
  id: ParameterName
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: ParameterName
  nameWithType: OdbcParameter.ParameterName
  fullName: System.Data.Odbc.OdbcParameter.ParameterName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define o nome do <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>."
  remarks: "Em vez de parâmetros nomeados, o provedor de .NET ODBC usa parâmetros posicionais são marcados com um ponto de interrogação (?) na sintaxe do texto de comando. Objetos de parâmetro no <xref:System.Data.Odbc.OdbcParameterCollection>e os parâmetros reais aceito pelo procedimento armazenado ou instrução SQL parametrizada correspondem uns aos outros com base na ordem em que o <xref:System.Data.Odbc.OdbcParameter>objetos são inseridos na coleção em vez de pelo nome do parâmetro.</xref:System.Data.Odbc.OdbcParameter> </xref:System.Data.Odbc.OdbcParameterCollection> Nomes de parâmetro podem ser fornecidos, mas serão ignorados durante a vinculação de objeto de parâmetro."
  example:
  - "The following example assumes that the data source has a table name **MyTable** and a stored procedure named MyProc that is defined as:  \n  \n```  \nCREATE TABLE MyTable (col1 int, col2 smallmoney, col3 decimal)  \nCREATE PROC MyProc (@p1 int, @p2 smallmoney, @p3 decimal) AS INSERT INTO MyTable VALUES (@p1, @p2, @p3)  \n```  \n  \n The following example creates parameters and calls the MyProc stored procedure:  \n  \n```vb#  \nPublic Sub CreateMyProc(connection As OdbcConnection)  \n  \n   Dim command As OdbcCommand = connection.CreateCommand()  \n  \n   command.CommandText = \"{ call MyProc(?,?,?) }\"  \n   command.Parameters.Add(\"\", OdbcType.Int).Value = 1  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 2  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 3  \n  \nEnd Sub  \n```  \n  \n```c#  \npublic void CreateMyProc(OdbcConnection connection)   \n{  \n   OdbcCommand command = myConnection.CreateCommand();  \n  \n   command.CommandText = \"{ call MyProc(?,?,?) }\";  \n   command.Parameters.Add(\"\", OdbcType.Int).Value = 1;  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 2;  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 3;  \n}  \n```"
  syntax:
    content: public override string ParameterName { get; set; }
    return:
      type: System.String
      description: "O nome do <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Data.Odbc.OdbcParameter.ParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Precision
  id: Precision
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Precision
  nameWithType: OdbcParameter.Precision
  fullName: System.Data.Odbc.OdbcParameter.Precision
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define o número de dígitos usados para representar o <xref:System.Data.Odbc.OdbcParameter.Value*>propriedade.</xref:System.Data.Odbc.OdbcParameter.Value*>"
  remarks: "Definir essa propriedade como um valor diferente do valor no banco de dados depende da implementação do provedor de dados e pode retornar o erro código, truncate ou round dados.       A propriedade de precisão afeta somente os parâmetros cujos <xref:System.Data.Odbc.OdbcType>é `Decimal` ou `Numeric`.</xref:System.Data.Odbc.OdbcType> Para outros tipos de dados, a precisão é ignorada.      > [!NOTE] > Não há suporte para o uso dessa propriedade para forçar os dados passados para o banco de dados. Para arredondar, truncate, ou forçar caso contrário, os dados antes de passar para o banco de dados, use o <xref:System.Math>que faz parte da classe de `System` namespace antes de atribuir um valor para o parâmetro `Value` propriedade.</xref:System.Math>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Price\", OdbcType.Decimal)  \n    parameter.Value = 3.1416  \n    parameter.Precision = 8  \n    parameter.Scale = 4  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Price\", OdbcType.Decimal);  \n    parameter.Value = 3.1416;  \n    parameter.Precision = 8;  \n    parameter.Scale = 4;  \n }  \n```"
  syntax:
    content: public byte Precision { get; set; }
    return:
      type: System.Byte
      description: "O número máximo de dígitos usados para representar o <> </> *> propriedade. O valor padrão é 0, que indica que o provedor de dados define a precisão de <> </> *>."
  overload: System.Data.Odbc.OdbcParameter.Precision*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.ResetDbType
  id: ResetDbType
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: ResetDbType()
  nameWithType: OdbcParameter.ResetDbType()
  fullName: System.Data.Odbc.OdbcParameter.ResetDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Redefine o tipo associado a esta <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>."
  remarks: "Ao executar um comando que inclui valores de parâmetro, código pode definir explicitamente o tipo de um parâmetro ou o parâmetro pode inferir o tipo do valor. Chamar este método redefine o parâmetro para que ele pode inferir novamente seu tipo do valor transmitido no parâmetro. Chamar esse método afeta os dois o <xref:System.Data.Odbc.OdbcParameter.DbType%2A>e as <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>Propriedades de <xref:System.Data.Odbc.OdbcParameter>.</xref:System.Data.Odbc.OdbcParameter> </xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Odbc.OdbcParameter.DbType%2A>       Chamando ResetDbType redefine <xref:System.Data.Odbc.OdbcParameter.DbType%2A>para seu valor padrão (String).</xref:System.Data.Odbc.OdbcParameter.DbType%2A>"
  syntax:
    content: public override void ResetDbType ();
    parameters: []
  overload: System.Data.Odbc.OdbcParameter.ResetDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.ResetOdbcType
  id: ResetOdbcType
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: ResetOdbcType()
  nameWithType: OdbcParameter.ResetOdbcType()
  fullName: System.Data.Odbc.OdbcParameter.ResetOdbcType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Redefine o tipo associado a esta <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>."
  remarks: "Ao executar um comando que inclui valores de parâmetro, código pode definir explicitamente o tipo de um parâmetro ou o parâmetro pode inferir o tipo do valor. Chamar este método redefine o parâmetro para que ele pode inferir novamente seu tipo do valor transmitido no parâmetro. Chamar esse método afeta os dois o <xref:System.Data.Odbc.OdbcParameter.DbType%2A>e as <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>Propriedades de <xref:System.Data.Odbc.OdbcParameter>.</xref:System.Data.Odbc.OdbcParameter> </xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Odbc.OdbcParameter.DbType%2A>"
  syntax:
    content: public void ResetOdbcType ();
    parameters: []
  overload: System.Data.Odbc.OdbcParameter.ResetOdbcType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Scale
  id: Scale
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Scale
  nameWithType: OdbcParameter.Scale
  fullName: System.Data.Odbc.OdbcParameter.Scale
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define o número de casas decimais para o qual <xref:System.Data.Odbc.OdbcParameter.Value*>é resolvido.</xref:System.Data.Odbc.OdbcParameter.Value*>"
  remarks: "A propriedade de escala é usada somente para parâmetros de entrada numéricos e decimais.       O efeito de definir esta propriedade como um valor diferente do valor no banco de dados depende da implementação do provedor de dados e pode retornar um código de erro ou truncar ou dados de ida e volta.       A propriedade escala afeta apenas os parâmetros cujos <xref:System.Data.Odbc.OdbcType>é `Decimal` ou `Numeric`.</xref:System.Data.Odbc.OdbcType> Para outros tipos de dados, a escala é ignorada.       Ao usar o SQL Server Native Client 10 (ou posterior) para associar um parâmetro cujo tipo é Decimal, Numeric, VarNumeric, DBDate ou DBTimeStamp, você deve especificar manualmente um valor de escala apropriado.      > [!NOTE] > Não há suporte para o uso dessa propriedade para forçar os dados passados para o banco de dados. Para arredondar, truncate, ou forçar caso contrário, os dados antes de passar para o banco de dados, use o <xref:System.Math>que faz parte da classe de `System` namespace antes de atribuir um valor para o parâmetro `Value` propriedade.</xref:System.Math>      > [!NOTE] > Provedores de dados do .NET framework que estão incluídos com o .NET Framework versão 1.0 não verificam a `scale` de <xref:System.Decimal>valores de parâmetro.</xref:System.Decimal> Isso pode causar modificados dados inseridos na fonte de dados. Se você estiver usando o .NET Framework versão 1.0, validar o s`cale` de d`ecimal` valores antes de definir o valor do parâmetro. Quando você usa o .NET Framework versão 1.1 ou posterior, `scale` valores que excedem o `decimal` escala do parâmetro só pode estar truncada em escala, se esse for o comportamento do ODBC driver subjacente."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Price\", OdbcType.Decimal)  \n    parameter.Value = 3.1416  \n    parameter.Precision = 8  \n    parameter.Scale = 4  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Price\", OdbcType.Decimal);  \n    parameter.Value = 3.1416;  \n    parameter.Precision = 8;  \n    parameter.Scale = 4;  \n }  \n```"
  syntax:
    content: public byte Scale { get; set; }
    return:
      type: System.Byte
      description: "O número de casas decimais para o qual <xref:System.Data.Odbc.OdbcParameter.Value*>é resolvido.</xref:System.Data.Odbc.OdbcParameter.Value*> O padrão é 0."
  overload: System.Data.Odbc.OdbcParameter.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Size
  id: Size
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Size
  nameWithType: OdbcParameter.Size
  fullName: System.Data.Odbc.OdbcParameter.Size
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define o tamanho máximo dos dados da coluna."
  remarks: "A propriedade de tamanho é usada para tipos binários e de cadeia de caracteres.       Para tipos de dados não-String e dados de cadeia de caracteres ANSI, a propriedade de tamanho se refere ao número de bytes. Para dados de cadeia de caracteres Unicode, o tamanho se refere ao número de caracteres. A contagem de cadeias de caracteres não inclui o caractere de terminação.       Para tipos de dados de comprimento variável, `Size` descreve a quantidade máxima de dados para transmitir para o servidor. Por exemplo, para um valor de cadeia de caracteres Unicode, `Size` pode ser usado para limitar a quantidade de dados enviados ao servidor para os caracteres de cem primeiro.       Para parâmetros de saída e bidirecionais e valores de retorno, você deve definir o valor de `Size`. Isso não é necessário para parâmetros de entrada, e se não foi explicitamente definido, o valor é inferido do tamanho real do parâmetro especificado quando uma instrução parametrizada é executada.       O <xref:System.Data.Common.DbParameter.DbType%2A>, <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>, e propriedades de tamanho de um parâmetro podem ser inferidas definindo <xref:System.Data.Odbc.OdbcParameter.Value%2A>.</xref:System.Data.Odbc.OdbcParameter.Value%2A> </xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Common.DbParameter.DbType%2A> Portanto, você não precisa especificá-los. No entanto, eles não são expostos no <xref:System.Data.Odbc.OdbcParameter>as configurações de propriedade.</xref:System.Data.Odbc.OdbcParameter> Por exemplo, se o tamanho do parâmetro foi inferido, `Size` não tem valor inferido após a execução da instrução.      > [!NOTE] > Para um `OdbcParameter` com um <xref:System.Data.Odbc.OdbcParameter.Direction%2A>de `ParameterDirection.Output`, `ParameterDirection.InputOutput`, ou `ParameterDirection.ReturnValue`, uma exceção é lançada quando o comando é executado, se o tamanho do valor retornado pela fonte de dados exceder especificado `Size` de <xref:System.Data.Odbc.OdbcParameter>.</xref:System.Data.Odbc.OdbcParameter> </xref:System.Data.Odbc.OdbcParameter.Direction%2A>       Para tipos de dados de comprimento fixo, o valor de `Size` será ignorado. Ele pode ser recuperado para fins informativos e retorna o número máximo de bytes que o provedor usa ao transmitir o valor do parâmetro para o servidor."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim myValue As String = \"12 foot scarf - multiple colors, one previous owner\"  \n    Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar)  \n    parameter.Direction = ParameterDirection.Output  \n    parameter.Size = myValue.Length  \n    parameter.Value = myValue  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    string myValue = \"12 foot scarf - multiple colors, one previous owner\";  \n    OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar);  \n    parameter.Direction = ParameterDirection.Output;  \n    parameter.Size = myValue.Length;  \n    parameter.Value = myValue;  \n }  \n```"
  syntax:
    content: public override int Size { get; set; }
    return:
      type: System.Int32
      description: "O tamanho máximo dos dados da coluna. O valor padrão é inferido do valor do parâmetro."
  overload: System.Data.Odbc.OdbcParameter.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.SourceColumn
  id: SourceColumn
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: SourceColumn
  nameWithType: OdbcParameter.SourceColumn
  fullName: System.Data.Odbc.OdbcParameter.SourceColumn
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define o nome da coluna de origem mapeado para o <xref href=&quot;System.Data.DataSet&quot;> </xref> e usado para carregar ou retornar <xref:System.Data.Odbc.OdbcParameter.Value*>.</xref:System.Data.Odbc.OdbcParameter.Value*>"
  remarks: "Quando SourceColumn é definida como algo diferente de uma cadeia de caracteres vazia, o valor do parâmetro é recuperado da coluna com o `SourceColumn` nome. Se <xref:System.Data.Odbc.OdbcParameter.Direction%2A>for definido como `Input`, o valor é obtido de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcParameter.Direction%2A> Se `Direction` é definido como `Output`, o valor é obtido da fonte de dados. Um `Direction` de `InputOutput` é uma combinação de ambos.       Para obter mais informações sobre como usar a propriedade SourceColumn, consulte [parâmetros DataAdapter](~/add/includes/ajax-current-ext-md.md) e [Atualizar fontes de dados com DataAdapters](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 88)  \n    parameter.SourceColumn = \"Description\"  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar, 88);  \n    parameter.SourceColumn = \"Description\";  \n }  \n```"
  syntax:
    content: public override string SourceColumn { get; set; }
    return:
      type: System.String
      description: "O nome da coluna de origem que será usado para definir o valor desse parâmetro. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Data.Odbc.OdbcParameter.SourceColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
  id: SourceColumnNullMapping
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: SourceColumnNullMapping
  nameWithType: OdbcParameter.SourceColumnNullMapping
  fullName: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Define ou obtém um valor que indica se a coluna de origem é anulável. Isso permite <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> corretamente gerar instruções de atualização para colunas anuláveis."
  remarks: "SourceColumnNullMapping é usado pelo <xref:System.Data.Common.DbCommandBuilder>ao gerar comandos de atualização corretamente ao lidar com colunas anuláveis.</xref:System.Data.Common.DbCommandBuilder> Em geral, o uso de SourceColumnNullMapping é limitado aos desenvolvedores herdando <xref:System.Data.Common.DbCommandBuilder>.</xref:System.Data.Common.DbCommandBuilder>       <xref:System.Data.Common.DbCommandBuilder>usa essa propriedade para determinar se a coluna de origem é anulável e define essa propriedade como `true` se ele for anulável, e `false` se não for.</xref:System.Data.Common.DbCommandBuilder> Quando <xref:System.Data.Common.DbCommandBuilder>é gerar sua instrução de atualização, ele examina o SourceColumnNullMapping para cada parâmetro.</xref:System.Data.Common.DbCommandBuilder> Se a propriedade for `true`, <xref:System.Data.Common.DbCommandBuilder>gera um cláusulas WHERE, como o exemplo a seguir.</xref:System.Data.Common.DbCommandBuilder> Esta expressão de consulta &quot;FieldName&quot; representa o nome do campo: ```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ``` SourceColumnNullMapping se para o campo é false, <xref:System.Data.Common.DbCommandBuilder>gera a seguinte cláusula WHERE: ```   FieldName = @OriginalFieldName   ``` Além disso, @IsNull_FieldName contém 1 se o campo de origem contém null e 0 se não estiver.</xref:System.Data.Common.DbCommandBuilder> Esse mecanismo permite uma otimização de desempenho no SQL Server e fornece código comum que funciona em vários provedores."
  syntax:
    content: public override bool SourceColumnNullMapping { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a coluna de origem é nulo; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se não for."
  overload: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.SourceVersion
  id: SourceVersion
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: SourceVersion
  nameWithType: OdbcParameter.SourceVersion
  fullName: System.Data.Odbc.OdbcParameter.SourceVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define o <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> para usar ao carregar <xref:System.Data.Odbc.OdbcParameter.Value*>.</xref:System.Data.Odbc.OdbcParameter.Value*>"
  remarks: "O `SourceVersion` é usado pelo <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>durante um <xref:System.Data.DbDataAdapter.Common.Update%2A>operação para determinar se o valor do parâmetro está definido como atual ou Original.</xref:System.Data.DbDataAdapter.Common.Update%2A> </xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> Isso permite que as chaves primárias a serem atualizadas.       Essa propriedade é definida para a versão do <xref:System.Data.DataRow>usado por qualquer o `Item` propriedade (`DataRow` indexador), ou o <xref:System.Data.DataRow.GetChildRows%2A>método.</xref:System.Data.DataRow.GetChildRows%2A> </xref:System.Data.DataRow>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 88)  \n    parameter.SourceColumn = \"Description\"  \n    parameter.SourceVersion = DataRowVersion.Current  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar, 88);  \n    parameter.SourceColumn = \"Description\";  \n    parameter.SourceVersion = DataRowVersion.Current;  \n }  \n```"
  syntax:
    content: public override System.Data.DataRowVersion SourceVersion { get; set; }
    return:
      type: System.Data.DataRowVersion
      description: "Uma da <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valores. O padrão é atual."
  overload: System.Data.Odbc.OdbcParameter.SourceVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcParameter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcParameter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Data.Odbc.OdbcParameter>instância é convertida em um <xref:System.ICloneable>interface.</xref:System.ICloneable> </xref:System.Data.Odbc.OdbcParameter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um novo <xref:System.Object>que é uma cópia dessa instância.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.ToString
  id: ToString
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: ToString()
  nameWithType: OdbcParameter.ToString()
  fullName: System.Data.Odbc.OdbcParameter.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém uma cadeia de caracteres que contém o <xref:System.Data.Odbc.OdbcParameter.ParameterName*>.</xref:System.Data.Odbc.OdbcParameter.ParameterName*>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém o <xref:System.Data.Odbc.OdbcParameter.ParameterName*>.</xref:System.Data.Odbc.OdbcParameter.ParameterName*>"
  overload: System.Data.Odbc.OdbcParameter.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Value
  id: Value
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Value
  nameWithType: OdbcParameter.Value
  fullName: System.Data.Odbc.OdbcParameter.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define o valor do parâmetro."
  remarks: "Para parâmetros de entrada, o valor é vinculado ao <xref:System.Data.Odbc.OdbcCommand>que é enviado ao servidor.</xref:System.Data.Odbc.OdbcCommand> Para parâmetros de valor de retorno e saída, o valor é definido na conclusão do <xref:System.Data.Odbc.OdbcCommand>e depois o <xref:System.Data.Odbc.OdbcDataReader>está fechado.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcCommand>       Quando você envia um valor de parâmetro nulo para o servidor, o usuário deve especificar <xref:System.DBNull>, não null.</xref:System.DBNull> Um valor nulo no sistema é um objeto vazio que não tem nenhum valor. <xref:System.DBNull>é usado para representar valores nulos.</xref:System.DBNull> Se o parâmetro é usado para chamar um procedimento armazenado com parâmetros que têm valores padrão, definindo o valor como nulo faz com que o valor padrão a ser usado.       Se o aplicativo especifica o tipo de banco de dados, o valor associado é convertido para esse tipo de quando o provedor envia os dados para o servidor. O provedor tenta converter qualquer tipo de valor se ele dá suporte a <xref:System.IConvertible>interface.</xref:System.IConvertible> Erros de conversão podem resultar se o tipo especificado não é compatível com o valor.       Tanto o <xref:System.Data.Odbc.OdbcParameter.DbType%2A>e <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>Propriedades podem ser inferidas, definindo o valor.</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Odbc.OdbcParameter.DbType%2A> Se aplicável, o tamanho, precisão e escala é também inferido do valor quando a instrução parametrizada é executada. No entanto, valores deduzidos não são expostos ao usuário.       A propriedade de valor é substituída pelo `Update` método."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 88)  \n    parameter.Value = \"garden hose\"  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar, 88);  \n    parameter.Value = \"garden hose\";  \n }  \n```"
  syntax:
    content: public override object Value { get; set; }
    return:
      type: System.Object
      description: "Um <xref:System.Object>que é o valor do parâmetro.</xref:System.Object> O valor padrão é nulo."
  overload: System.Data.Odbc.OdbcParameter.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbParameter
  isExternal: false
  name: System.Data.Common.DbParameter
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.Odbc.OdbcParameter.#ctor
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter()
  nameWithType: OdbcParameter.OdbcParameter()
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter()
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcType
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcType
  nameWithType: OdbcType
  fullName: System.Data.Odbc.OdbcType
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType,Int32)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType,Int32,String)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
- uid: System.Data.ParameterDirection
  parent: System.Data
  isExternal: false
  name: ParameterDirection
  nameWithType: ParameterDirection
  fullName: System.Data.ParameterDirection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
- uid: System.Data.Odbc.OdbcParameter.DbType
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: DbType
  nameWithType: OdbcParameter.DbType
  fullName: System.Data.Odbc.OdbcParameter.DbType
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Data.Odbc.OdbcParameter.Direction
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Direction
  nameWithType: OdbcParameter.Direction
  fullName: System.Data.Odbc.OdbcParameter.Direction
- uid: System.Data.Odbc.OdbcParameter.IsNullable
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: IsNullable
  nameWithType: OdbcParameter.IsNullable
  fullName: System.Data.Odbc.OdbcParameter.IsNullable
- uid: System.Data.Odbc.OdbcParameter.OdbcType
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcType
  nameWithType: OdbcParameter.OdbcType
  fullName: System.Data.Odbc.OdbcParameter.OdbcType
- uid: System.Data.Odbc.OdbcParameter.ParameterName
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ParameterName
  nameWithType: OdbcParameter.ParameterName
  fullName: System.Data.Odbc.OdbcParameter.ParameterName
- uid: System.Data.Odbc.OdbcParameter.Precision
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Precision
  nameWithType: OdbcParameter.Precision
  fullName: System.Data.Odbc.OdbcParameter.Precision
- uid: System.Data.Odbc.OdbcParameter.ResetDbType
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ResetDbType()
  nameWithType: OdbcParameter.ResetDbType()
  fullName: System.Data.Odbc.OdbcParameter.ResetDbType()
- uid: System.Data.Odbc.OdbcParameter.ResetOdbcType
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ResetOdbcType()
  nameWithType: OdbcParameter.ResetOdbcType()
  fullName: System.Data.Odbc.OdbcParameter.ResetOdbcType()
- uid: System.Data.Odbc.OdbcParameter.Scale
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Scale
  nameWithType: OdbcParameter.Scale
  fullName: System.Data.Odbc.OdbcParameter.Scale
- uid: System.Data.Odbc.OdbcParameter.Size
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Size
  nameWithType: OdbcParameter.Size
  fullName: System.Data.Odbc.OdbcParameter.Size
- uid: System.Data.Odbc.OdbcParameter.SourceColumn
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceColumn
  nameWithType: OdbcParameter.SourceColumn
  fullName: System.Data.Odbc.OdbcParameter.SourceColumn
- uid: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: OdbcParameter.SourceColumnNullMapping
  fullName: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
- uid: System.Data.Odbc.OdbcParameter.SourceVersion
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceVersion
  nameWithType: OdbcParameter.SourceVersion
  fullName: System.Data.Odbc.OdbcParameter.SourceVersion
- uid: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcParameter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcParameter.System.ICloneable.Clone()
- uid: System.Data.Odbc.OdbcParameter.ToString
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ToString()
  nameWithType: OdbcParameter.ToString()
  fullName: System.Data.Odbc.OdbcParameter.ToString()
- uid: System.Data.Odbc.OdbcParameter.Value
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Value
  nameWithType: OdbcParameter.Value
  fullName: System.Data.Odbc.OdbcParameter.Value
- uid: System.Data.Odbc.OdbcParameter.#ctor*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter
  nameWithType: OdbcParameter.OdbcParameter
- uid: System.Data.Odbc.OdbcParameter.DbType*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: DbType
  nameWithType: OdbcParameter.DbType
- uid: System.Data.Odbc.OdbcParameter.Direction*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Direction
  nameWithType: OdbcParameter.Direction
- uid: System.Data.Odbc.OdbcParameter.IsNullable*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: IsNullable
  nameWithType: OdbcParameter.IsNullable
- uid: System.Data.Odbc.OdbcParameter.OdbcType*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcType
  nameWithType: OdbcParameter.OdbcType
- uid: System.Data.Odbc.OdbcParameter.ParameterName*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ParameterName
  nameWithType: OdbcParameter.ParameterName
- uid: System.Data.Odbc.OdbcParameter.Precision*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Precision
  nameWithType: OdbcParameter.Precision
- uid: System.Data.Odbc.OdbcParameter.ResetDbType*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ResetDbType
  nameWithType: OdbcParameter.ResetDbType
- uid: System.Data.Odbc.OdbcParameter.ResetOdbcType*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ResetOdbcType
  nameWithType: OdbcParameter.ResetOdbcType
- uid: System.Data.Odbc.OdbcParameter.Scale*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Scale
  nameWithType: OdbcParameter.Scale
- uid: System.Data.Odbc.OdbcParameter.Size*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Size
  nameWithType: OdbcParameter.Size
- uid: System.Data.Odbc.OdbcParameter.SourceColumn*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceColumn
  nameWithType: OdbcParameter.SourceColumn
- uid: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: OdbcParameter.SourceColumnNullMapping
- uid: System.Data.Odbc.OdbcParameter.SourceVersion*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceVersion
  nameWithType: OdbcParameter.SourceVersion
- uid: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcParameter.System.ICloneable.Clone
- uid: System.Data.Odbc.OdbcParameter.ToString*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ToString
  nameWithType: OdbcParameter.ToString
- uid: System.Data.Odbc.OdbcParameter.Value*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Value
  nameWithType: OdbcParameter.Value
