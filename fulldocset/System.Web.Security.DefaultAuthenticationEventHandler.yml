### YamlMime:ManagedReference
items:
- uid: System.Web.Security.DefaultAuthenticationEventHandler
  id: DefaultAuthenticationEventHandler
  langs:
  - csharp
  name: DefaultAuthenticationEventHandler
  nameWithType: DefaultAuthenticationEventHandler
  fullName: System.Web.Security.DefaultAuthenticationEventHandler
  type: Delegate
  summary: "Representa o método que manipula o **DefaultAuthentication_OnAuthenticate** eventos de um <xref href=&quot;System.Web.Security.DefaultAuthenticationModule&quot;> </xref>."
  remarks: "O representante de DefaultAuthenticationEventHandler está definido para o <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>evento de <xref:System.Web.Security.DefaultAuthenticationModule>classe.</xref:System.Web.Security.DefaultAuthenticationModule> </xref:System.Web.Security.DefaultAuthenticationModule.Authenticate> Você pode acessar o <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>evento o <xref:System.Web.Security.DefaultAuthenticationModule>classe especificando uma sub-rotina chamada **DefaultAuthentication_OnAuthenticate** no arquivo global. asax para seu aplicativo ASP.NET.</xref:System.Web.Security.DefaultAuthenticationModule> </xref:System.Web.Security.DefaultAuthenticationModule.Authenticate> O <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>é gerado após o <xref:System.Web.HttpApplication.AuthenticateRequest>eventos e é usado para garantir que o <xref:System.Web.HttpContext.User%2A>propriedade <xref:System.Web.HttpContext>é preenchida com um <xref:System.Security.Principal.IPrincipal>objeto.</xref:System.Security.Principal.IPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.HttpApplication.AuthenticateRequest> </xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>       Você pode usar o <xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A>propriedade o <xref:System.Web.Security.DefaultAuthenticationEventArgs>objeto fornecido para o **DefaultAuthentication_OnAuthenticate** evento para definir o <xref:System.Web.HttpContext.User%2A>propriedade <xref:System.Web.HttpContext>para um personalizado <xref:System.Security.Principal.IPrincipal>objeto.</xref:System.Security.Principal.IPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.DefaultAuthenticationEventArgs> </xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A> Se você não especificar um valor para o <xref:System.Web.HttpContext.User%2A>propriedade do <xref:System.Web.HttpContext>fornecido durante a **DefaultAuthentication_OnAuthenticate** evento, o <xref:System.Web.Security.DefaultAuthenticationModule>define o <xref:System.Web.HttpContext.User%2A>propriedade do <xref:System.Web.HttpContext>para um <xref:System.Security.Principal.GenericPrincipal>objeto que não contém nenhuma informação de usuário.</xref:System.Security.Principal.GenericPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.DefaultAuthenticationModule> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A>       O **DefaultAuthentication_OnAuthenticate** é gerado após o <xref:System.Web.HttpApplication.AuthenticateRequest>eventos e antes do <xref:System.Web.HttpApplication.AuthorizeRequest>evento.</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.HttpApplication.AuthenticateRequest> Se você tiver uma seção que depende do nome de usuário para negar ou permitir o acesso ao seu aplicativo, modificando o <xref:System.Web.HttpContext.User%2A>propriedade <xref:System.Web.HttpContext>pode afetar o comportamento do seu aplicativo.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> Certifique-se que o nome de usuário definido durante a **DefaultAuthentication_OnAuthenticate** eventos é considerado quando você especifica a seção em sua configuração."
  example:
  - "The following code example uses the **DefaultAuthentication_OnAuthenticate** event to test whether the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> is `null`. If the property is `null`, the sample sets the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> to a <xref:System.Security.Principal.GenericPrincipal> object, where the <xref:System.Security.Principal.GenericPrincipal.Identity%2A> of the <xref:System.Security.Principal.GenericPrincipal> object is a <xref:System.Security.Principal.GenericIdentity> with a <xref:System.Security.Principal.GenericIdentity.Name%2A> value of \"default\".  \n  \n> [!NOTE]\n>  The **DefaultAuthentication_OnAuthenticate** event is raised before the <xref:System.Web.HttpApplication.AuthorizeRequest> event. As a result, if you set the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> to a custom identity, it can affect the behavior of your application. For example, if you are using the <xref:System.Web.Security.FormsAuthentication> class and you are ensuring that only authenticated users have access to your site, by using the  section and specifying `<deny users=\"?\" />`, this sample will cause the  element to be ignored, as the user will have a name, which is \"default\". Instead you would specify `<deny users=\"default\" />` to ensure that only authenticated users can access your site.  \n  \n [!code-cs[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/csharp/t-system.web.security.de_0_1.asax)]\n [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/visualbasic/t-system.web.security.de_0_1.asax)]"
  syntax:
    content: public delegate void DefaultAuthenticationEventHandler(object sender, DefaultAuthenticationEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
