### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  id: IDesignerLoaderService
  children:
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  langs:
  - csharp
  name: IDesignerLoaderService
  nameWithType: IDesignerLoaderService
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  type: Interface
  summary: "Fornece uma interface que pode estender um carregador de designer para dar suporte a carregamento assíncrono de componentes externos."
  remarks: "Um <xref:System.ComponentModel.Design.Serialization.DesignerLoader>pode implementar essa interface para gerenciar o carregamento de designer que envolve componentes externos.</xref:System.ComponentModel.Design.Serialization.DesignerLoader> Essa interface também permite que os componentes externos iniciar um recarregamento da superfície de design chamando <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A> Um carregador de designer não tem que implementar essa interface se ele não requer suporte para o carregamento assíncrono.       Designer de carregamento usando uma implementação personalizada do IDesignerLoaderService pode ocorrer em uma variedade de maneiras. Componentes externos, às vezes, estão envolvidos no processo de carregamento. Para facilitar o carregamento com dependências externas, a interface de serviço de carregador de designer fornece um mecanismo que determina quando o carregamento for concluído e permite que cada parte da carga de trabalho para sinalizar que foi concluída. O IDesignerLoaderService normalmente determina quando ela estiver concluída, testando um contador que controla o número de dependências de carga restante. Quando cada parte da carga for concluído, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>é chamado e o serviço diminui o contador.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> Para definir o número de processos de carregamento dependentes, chame <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>uma vez para cada processo de carregamento que chama <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>quando o carregamento for concluído.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> Quando o carregamento final é concluído, as chamadas de serviço <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A>no host do carregador.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A>"
  syntax:
    content: public interface IDesignerLoaderService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  id: AddLoadDependency
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  langs:
  - csharp
  name: AddLoadDependency()
  nameWithType: IDesignerLoaderService.AddLoadDependency()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Registra um componente externo como parte do processo de carga gerenciado por esta interface."
  remarks: "Chame AddLoadDependency uma vez para cada objeto externo que participam do processo de carregamento. <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>é chamado quando o trabalho do processo de carregamento é feito.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>"
  syntax:
    content: public void AddLoadDependency ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  id: DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  langs:
  - csharp
  name: DependentLoadComplete(Boolean,ICollection)
  nameWithType: IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Indica que uma carga dependente foi concluída."
  remarks: "Esse método é chamado para indicar que uma operação de carregamento dependente foi concluída. Chamar DependentLoadComplete uma vez para cada processo que foi registrado por meio da chamada <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, que já foi concluída.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>       Se a carga dependente for bem-sucedida, os conjuntos de chamador de `successful` parâmetro `true` e passa em uma coleção vazia ou `null` para o `errorCollection` parâmetro. Se a carga dependente encontrar erros, o chamador define o `successful` parâmetro `false` e passa uma coleção de exceções que indicam o motivo ou os motivos da falha para o `errorCollection` parâmetro."
  syntax:
    content: public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);
    parameters:
    - id: successful
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a carga do designer for bem-sucedida; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se erros impediram a carga de conclusão."
    - id: errorCollection
      type: System.Collections.ICollection
      description: "Uma coleção de erros que ocorreram durante o carregamento, se houver. Se não ocorreu nenhum erro, passe em uma coleção vazia ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  id: Reload
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  langs:
  - csharp
  name: Reload()
  nameWithType: IDesignerLoaderService.Reload()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Recarrega o documento de design."
  remarks: "Qualquer objeto pode chamar esse método para solicitar que a recarga de carregador o documento de design. Se o carregador dá suporte ao recarregar e está em conformidade com o recarregamento, o carregador de designer pode retornar `true`. Caso contrário, retornará `false`, indicando que a recarga não ocorrerá. Chamadores não podem contar com a recarga acontecendo imediatamente. o carregador de designer pode agendá-la para outro momento, ou ele pode tentar recarregar uma vez.       O chamador pode exibir uma mensagem para o usuário se o designer não pode ser recarregado."
  syntax:
    content: public bool Reload ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a solicitação de recarregamento for aceita, ou <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o carregador não permitir a recarga."
  overload: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: AddLoadDependency()
  nameWithType: IDesignerLoaderService.AddLoadDependency()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: DependentLoadComplete(Boolean,ICollection)
  nameWithType: IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: Reload()
  nameWithType: IDesignerLoaderService.Reload()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency*
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: AddLoadDependency
  nameWithType: IDesignerLoaderService.AddLoadDependency
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete*
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: DependentLoadComplete
  nameWithType: IDesignerLoaderService.DependentLoadComplete
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload*
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: Reload
  nameWithType: IDesignerLoaderService.Reload
