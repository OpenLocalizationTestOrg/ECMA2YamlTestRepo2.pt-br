### YamlMime:ManagedReference
items:
- uid: System.Configuration.SectionInformation
  id: SectionInformation
  children:
  - System.Configuration.SectionInformation.AllowDefinition
  - System.Configuration.SectionInformation.AllowExeDefinition
  - System.Configuration.SectionInformation.AllowLocation
  - System.Configuration.SectionInformation.AllowOverride
  - System.Configuration.SectionInformation.ConfigSource
  - System.Configuration.SectionInformation.ForceDeclaration
  - System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)
  - System.Configuration.SectionInformation.ForceSave
  - System.Configuration.SectionInformation.GetParentSection
  - System.Configuration.SectionInformation.GetRawXml
  - System.Configuration.SectionInformation.InheritInChildApplications
  - System.Configuration.SectionInformation.IsDeclarationRequired
  - System.Configuration.SectionInformation.IsDeclared
  - System.Configuration.SectionInformation.IsLocked
  - System.Configuration.SectionInformation.IsProtected
  - System.Configuration.SectionInformation.Name
  - System.Configuration.SectionInformation.OverrideMode
  - System.Configuration.SectionInformation.OverrideModeDefault
  - System.Configuration.SectionInformation.OverrideModeEffective
  - System.Configuration.SectionInformation.ProtectionProvider
  - System.Configuration.SectionInformation.ProtectSection(System.String)
  - System.Configuration.SectionInformation.RequirePermission
  - System.Configuration.SectionInformation.RestartOnExternalChanges
  - System.Configuration.SectionInformation.RevertToParent
  - System.Configuration.SectionInformation.SectionName
  - System.Configuration.SectionInformation.SetRawXml(System.String)
  - System.Configuration.SectionInformation.Type
  - System.Configuration.SectionInformation.UnprotectSection
  langs:
  - csharp
  name: SectionInformation
  nameWithType: SectionInformation
  fullName: System.Configuration.SectionInformation
  type: Class
  summary: "Contém metadados sobre uma seção individual dentro da hierarquia de configuração. Essa classe não pode ser herdada."
  remarks: "O objeto SectionInformation contém os metadados sobre uma seção individual dentro da hierarquia de configuração. Esse objeto pode ser usado para validar e alterar as propriedades de uma seção individual."
  example:
  - "The following example shows how to get the SectionInformation metadata that is associated with a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#91](~/add/codesnippet/visualbasic/t-system.configuration.s_2_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#91](~/add/codesnippet/csharp/t-system.configuration.s_2_1.cs)]  \n  \n The following example is an excerpt of the configuration file that is used by the previous example.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n  <configSections>  \n    <section name=\"MyUrls\" type=\"Samples.AspNet.UrlsSection,  \n      ConfigurationElement, Version=1.0.0.0, Culture=neutral,  \n      PublicKeyToken=null\" allowDefinition=\"Everywhere\"  \n      allowExeDefinition=\"MachineToApplication\"  \n      restartOnExternalChanges=\"true\" />  \n  </configSections>  \n  <MyUrls name=\"MyFavorites\">  \n    <simple name=\"Contoso\" url=\"http://www.contoso.com\" port=\"8080\" />  \n    <urls>  \n      <clear />  \n      <add name=\"Microsoft\" url=\"http://www.microsoft.com\" port=\"0\" />  \n    </urls>  \n  </MyUrls>  \n</configuration>  \n```"
  syntax:
    content: public sealed class SectionInformation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowDefinition
  id: AllowDefinition
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowDefinition
  nameWithType: SectionInformation.AllowDefinition
  fullName: System.Configuration.SectionInformation.AllowDefinition
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define um valor que indica onde na hierarquia de arquivos de configuração a seção de configuração associadas pode ser definida."
  remarks: "AllowDefinition aplica-se somente a arquivos de configuração de aplicativos da Web. Para aplicativos cliente, você deve usar <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>.</xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>"
  example:
  - "The examples in this section show how to get the AllowDefinition property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_17_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_17_1.cs)]  \n  \n The following example gets the AllowDefinition value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#96](~/add/codesnippet/visualbasic/p-system.configuration.s_17_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#96](~/add/codesnippet/csharp/p-system.configuration.s_17_2.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationAllowDefinition AllowDefinition { get; set; }
    return:
      type: System.Configuration.ConfigurationAllowDefinition
      description: "Um valor que indica onde na configuração do arquivo hierarquia associado <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> objeto pode ser declarado."
  overload: System.Configuration.SectionInformation.AllowDefinition*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "O valor selecionado está em conflito com um valor que já foi definido."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowExeDefinition
  id: AllowExeDefinition
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowExeDefinition
  nameWithType: SectionInformation.AllowExeDefinition
  fullName: System.Configuration.SectionInformation.AllowExeDefinition
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define um valor que indica onde na hierarquia de arquivos de configuração a seção de configuração associadas pode ser declarada."
  remarks: "AllowExeDefinition aplica-se somente a arquivos de configuração de aplicativos cliente. Para aplicativos Web, você deve usar <xref:System.Configuration.SectionInformation.AllowDefinition%2A>.</xref:System.Configuration.SectionInformation.AllowDefinition%2A>"
  example:
  - "The examples in this section show how to get the AllowExeDefinition property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_18_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_18_1.cs)]  \n  \n The following example gets the AllowExeDefinition value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#97](~/add/codesnippet/visualbasic/p-system.configuration.s_18_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#97](~/add/codesnippet/csharp/p-system.configuration.s_18_2.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition { get; set; }
    return:
      type: System.Configuration.ConfigurationAllowExeDefinition
      description: "Um valor que indica onde na configuração do arquivo hierarquia associado <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> objeto pode ser declarado para .exe arquivos."
  overload: System.Configuration.SectionInformation.AllowExeDefinition*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "O valor selecionado está em conflito com um valor que já foi definido."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowLocation
  id: AllowLocation
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowLocation
  nameWithType: SectionInformation.AllowLocation
  fullName: System.Configuration.SectionInformation.AllowLocation
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define um valor que indica se a seção de configuração permite que o <xref uid=&quot;langword_csharp_location&quot; name=&quot;location&quot; href=&quot;&quot;> </xref> atributo."
  remarks: "Quando definido como `false`, a propriedade AllowLocation indica que a seção seja acessada por leitores de código nativo. Portanto, o uso do `location` atributo não é permitido, pois os leitores de código nativo não suportam o conceito de `location`."
  example:
  - "The examples in this section show how to get the AllowLocation property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_6_1.cs)]  \n  \n The following example gets the AllowLocation value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#98](~/add/codesnippet/visualbasic/p-system.configuration.s_6_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#98](~/add/codesnippet/csharp/p-system.configuration.s_6_2.cs)]"
  syntax:
    content: public bool AllowLocation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref uid=&quot;langword_csharp_location&quot; name=&quot;location&quot; href=&quot;&quot;> </xref> atributo for permitida; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.AllowLocation*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "O valor selecionado está em conflito com um valor que já foi definido."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowOverride
  id: AllowOverride
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowOverride
  nameWithType: SectionInformation.AllowOverride
  fullName: System.Configuration.SectionInformation.AllowOverride
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define um valor que indica se a seção de configuração associadas pode ser substituída pelos arquivos de configuração de nível inferior."
  remarks: ''
  example:
  - "The examples in this section show how to get the AllowOverride property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_16_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_16_1.cs)]  \n  \n The following example gets the AllowOverride value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#99](~/add/codesnippet/visualbasic/p-system.configuration.s_16_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#99](~/add/codesnippet/csharp/p-system.configuration.s_16_2.cs)]"
  syntax:
    content: public bool AllowOverride { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a seção pode ser substituída; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.AllowOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ConfigSource
  id: ConfigSource
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ConfigSource
  nameWithType: SectionInformation.ConfigSource
  fullName: System.Configuration.SectionInformation.ConfigSource
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define o nome do arquivo de inclusão no qual a seção de configuração associado é definida, se existir um arquivo."
  remarks: "A propriedade ConfigSource representa o valor da `configSource` atributo especificado para um <xref:System.Configuration.ConfigurationSection>objeto que está associado com o <xref:System.Configuration.SectionInformation>objeto.</xref:System.Configuration.SectionInformation> </xref:System.Configuration.ConfigurationSection>       Um <xref:System.Configuration.ConfigurationSection>implementação pode opcionalmente especificar um arquivo separado no qual as definições de configuração nessa seção são definidas.</xref:System.Configuration.ConfigurationSection> Isso pode ser útil de várias maneiras:-usando arquivos de inclusão pode resultar em uma estrutura modular e mais lógica para arquivos de configuração.      -Permissões e segurança de acesso a arquivos podem ser usadas para restringir o acesso às seções de definições de configuração.      -Configurações em um arquivo de inclusão que não são usadas durante a inicialização do aplicativo podem ser modificadas e recarregadas sem a necessidade de uma reinicialização do aplicativo.       O exemplo a seguir mostra como esse atributo é usado em um arquivo de configuração para especificar que o `pages` seção é definida em um arquivo de inclusão externo: `<pages configSource=&quot;pages.config&quot;/>` se qualquer uma das configurações em uma configuração de incluir o arquivo requer que o aplicativo reiniciar quando eles são modificados, definir o <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A>propriedade para `true`.</xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A>       Em aplicativos ASP.NET, em tempo de execução você pode atribuir à propriedade ConfigSource o nome de um arquivo de configuração alternativa. Nesse caso, o conteúdo do arquivo é substituído pelas informações de cadeia de caracteres de conexão padrão que estão contidas no arquivo Web. config. Isso também ocorre quando o arquivo alternativo não existe e é criado em tempo de execução. Se o arquivo Web. config não contém quaisquer informações de cadeia de caracteres de conexão, uma seção vazia é adicionada ao arquivo alternativo."
  syntax:
    content: public string ConfigSource { get; set; }
    return:
      type: System.String
      description: "O nome do arquivo no qual incluir associado <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> for definida, se esse arquivo existir; caso contrário, uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Configuration.SectionInformation.ConfigSource*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ForceDeclaration
  id: ForceDeclaration
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ForceDeclaration()
  nameWithType: SectionInformation.ForceDeclaration()
  fullName: System.Configuration.SectionInformation.ForceDeclaration()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Força a seção de configuração associada para aparecer no arquivo de configuração."
  remarks: "O método ForceDeclaration força isso <xref:System.Configuration.SectionInformation>declaração a ser gravado no arquivo de configuração.</xref:System.Configuration.SectionInformation>      > [!NOTE] > ForceDeclaration o método pode forçar uma <xref:System.Configuration.SectionInformation>declaração a ser gravado em um arquivo de configuração, mesmo se a seção não é necessária porque ele já está declarado em um arquivo pai.</xref:System.Configuration.SectionInformation> Usando o método ForceDeclaration pode fazer um arquivo de configuração mais portáteis de um computador para outro. Ele permite que você verifique se a seção existe mesmo quando você não tem controle sobre os arquivos de configuração pai."
  syntax:
    content: public void ForceDeclaration ();
    parameters: []
  overload: System.Configuration.SectionInformation.ForceDeclaration*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)
  id: ForceDeclaration(System.Boolean)
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ForceDeclaration(Boolean)
  nameWithType: SectionInformation.ForceDeclaration(Boolean)
  fullName: System.Configuration.SectionInformation.ForceDeclaration(Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Força a seção de configuração associada para aparecer no arquivo de configuração ou remove uma seção existente no arquivo de configuração."
  remarks: "O método ForceDeclaration força isso <xref:System.Configuration.SectionInformation>declaração a ser gravado no arquivo de configuração se `force` é `true`.</xref:System.Configuration.SectionInformation> Se `force` é `false`, essa ação pode ser ignorada se o <xref:System.Configuration.SectionInformation>declaração é exigida pelo sistema.</xref:System.Configuration.SectionInformation>      > [!NOTE] > ForceDeclaration o método pode forçar uma <xref:System.Configuration.SectionInformation>declaração a ser gravado em um arquivo de configuração, mesmo se esta seção não é necessária porque ele já está declarado em um arquivo pai.</xref:System.Configuration.SectionInformation> Usando o <xref:System.Configuration.SectionInformation.ForceDeclaration%2A>método pode fazer uma configuração de arquivo mais portáteis de um computador para outro.</xref:System.Configuration.SectionInformation.ForceDeclaration%2A> Isso também permite que você verifique se a seção existe mesmo se você não tem controle sobre os arquivos de configuração pai."
  example:
  - "The following example shows how to use the ForceDeclaration method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#113](~/add/codesnippet/visualbasic/m-system.configuration.s_0_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#113](~/add/codesnippet/csharp/m-system.configuration.s_0_1.cs)]"
  syntax:
    content: public void ForceDeclaration (bool force);
    parameters:
    - id: force
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a seção associada deve ser gravada no arquivo de configuração; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.ForceDeclaration*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>force</code>é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e a seção associada não pode ser exportada para o arquivo de configuração filho ou ele não está declarado."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ForceSave
  id: ForceSave
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ForceSave
  nameWithType: SectionInformation.ForceSave
  fullName: System.Configuration.SectionInformation.ForceSave
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define um valor que indica se a seção de configuração associado será salva mesmo se ele não tiver sido modificado."
  remarks: ''
  example:
  - "The following example shows how to use the ForceSave property of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#1](~/add/codesnippet/csharp/p-system.configuration.s_7_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#1](~/add/codesnippet/visualbasic/p-system.configuration.s_7_1.vb)]"
  syntax:
    content: public bool ForceSave { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se associado <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> objeto será salvo, mesmo se não tiver sido modificada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       <div class=&quot;alert NOTE&quot;>    Se o arquivo de configuração é salvo (mesmo se não houver nenhuma modificação), o ASP.NET reinicia o aplicativo.      </div>"
  overload: System.Configuration.SectionInformation.ForceSave*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.GetParentSection
  id: GetParentSection
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: GetParentSection()
  nameWithType: SectionInformation.GetParentSection()
  fullName: System.Configuration.SectionInformation.GetParentSection()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém a seção de configuração que contém a seção de configuração associada a este objeto."
  remarks: "Se este <xref:System.Configuration.ConfigurationSection>objeto não tem seções nenhum pai, o método GetParentSection retorna o mesmo valor que o <xref:System.Configuration.SectionInformation.Name%2A>propriedade.</xref:System.Configuration.SectionInformation.Name%2A> </xref:System.Configuration.ConfigurationSection>"
  example:
  - "The following example shows how to use the GetParentSection method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#92](~/add/codesnippet/visualbasic/m-system.configuration.s_5_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#92](~/add/codesnippet/csharp/m-system.configuration.s_5_1.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationSection GetParentSection ();
    parameters: []
    return:
      type: System.Configuration.ConfigurationSection
      description: "A seção de configuração que contém o <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> que é associada a essa <xref href=&quot;System.Configuration.SectionInformation&quot;> </xref> objeto."
  overload: System.Configuration.SectionInformation.GetParentSection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método é chamado de uma seção de pai."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.GetRawXml
  id: GetRawXml
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: GetRawXml()
  nameWithType: SectionInformation.GetRawXml()
  fullName: System.Configuration.SectionInformation.GetRawXml()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Retorna um objeto de nó XML que representa o objeto associado da seção de configuração."
  remarks: ''
  example:
  - "The following example shows how to use the GetRawXml method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#93](~/add/codesnippet/visualbasic/m-system.configuration.s_4_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#93](~/add/codesnippet/csharp/m-system.configuration.s_4_1.cs)]"
  syntax:
    content: public string GetRawXml ();
    parameters: []
    return:
      type: System.String
      description: "A representação XML para essa seção de configuração."
  overload: System.Configuration.SectionInformation.GetRawXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Esse objeto de configuração está bloqueado e não pode ser editado."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.InheritInChildApplications
  id: InheritInChildApplications
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: InheritInChildApplications
  nameWithType: SectionInformation.InheritInChildApplications
  fullName: System.Configuration.SectionInformation.InheritInChildApplications
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define um valor que indica se as configurações que são especificadas na seção de configuração associados são herdadas por aplicativos que residem em um subdiretório do aplicativo relevante."
  remarks: "InheritInChildApplications propriedade representa o `inheritInChildApplications`atributo de um `location` elemento em um arquivo de configuração.       Definir InheritInChildApplications `false` para impedir que as configurações que são específicas para um determinado local (como o diretório raiz de um site da Web) do que está sendo herdado por aplicativos que existem em subdiretórios.       O exemplo a seguir mostra como usar esse atributo em um arquivo de configuração para especificar que as configurações definidas no elemento de local para a raiz de um site da Web não devem ser herdadas por aplicativos de filho: `<location path=&quot;.&quot; inheritInChildApplications=&quot;false&quot;>` InheritInChildApplications a propriedade se aplica somente ao local de definições de configuração específicas."
  example:
  - "The following example shows how to get the InheritInChildApplications value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#100](~/add/codesnippet/visualbasic/p-system.configuration.s_13_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#100](~/add/codesnippet/csharp/p-system.configuration.s_13_1.cs)]"
  syntax:
    content: public bool InheritInChildApplications { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as configurações especificadas neste <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> objeto são herdadas por aplicativos filho; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.InheritInChildApplications*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsDeclarationRequired
  id: IsDeclarationRequired
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsDeclarationRequired
  nameWithType: SectionInformation.IsDeclarationRequired
  fullName: System.Configuration.SectionInformation.IsDeclarationRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém um valor que indica se a seção de configuração deve ser declarada no arquivo de configuração."
  remarks: ''
  example:
  - "The examples in this section show how to get the IsDeclarationRequired property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_0_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_0_1.cs)]  \n  \n The following example gets the IsDeclarationRequired value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#103](~/add/codesnippet/visualbasic/p-system.configuration.s_0_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#103](~/add/codesnippet/csharp/p-system.configuration.s_0_2.cs)]"
  syntax:
    content: public bool IsDeclarationRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se associado <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> objeto deve ser declarado no arquivo de configuração; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.IsDeclarationRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsDeclared
  id: IsDeclared
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsDeclared
  nameWithType: SectionInformation.IsDeclared
  fullName: System.Configuration.SectionInformation.IsDeclared
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém um valor que indica se a seção de configuração associada é declarada no arquivo de configuração."
  remarks: ''
  example:
  - "The examples in this section show how to get the IsDeclared property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_2_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_2_1.cs)]  \n  \n The following example gets the IsDeclared value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#104](~/add/codesnippet/visualbasic/p-system.configuration.s_2_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#104](~/add/codesnippet/csharp/p-system.configuration.s_2_2.cs)]"
  syntax:
    content: public bool IsDeclared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> é declarado no arquivo de configuração; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.IsDeclared*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsLocked
  id: IsLocked
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsLocked
  nameWithType: SectionInformation.IsLocked
  fullName: System.Configuration.SectionInformation.IsLocked
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém um valor que indica se a seção de configuração associada está bloqueada."
  remarks: "A propriedade retorna IsLocked `true` quando a seção correspondente está bloqueada pelo <xref:System.Configuration.SectionInformation.AllowOverride%2A>ou o <xref:System.Configuration.SectionInformation.AllowDefinition%2A>propriedade.</xref:System.Configuration.SectionInformation.AllowDefinition%2A> </xref:System.Configuration.SectionInformation.AllowOverride%2A> Uma seção está bloqueada se ele não pode ser substituído ou definido no arquivo de configuração atual."
  example:
  - "The examples in this section show how to get the IsLocked property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_5_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_5_1.cs)]  \n  \n The following example gets the IsLocked value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#105](~/add/codesnippet/visualbasic/p-system.configuration.s_5_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#105](~/add/codesnippet/csharp/p-system.configuration.s_5_2.cs)]"
  syntax:
    content: public bool IsLocked { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a seção está bloqueada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.IsLocked*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsProtected
  id: IsProtected
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsProtected
  nameWithType: SectionInformation.IsProtected
  fullName: System.Configuration.SectionInformation.IsProtected
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém um valor que indica se a seção de configuração associado está protegida."
  remarks: "Seções de configuração protegidos são criptografados e somente leitura.       Para obter mais informações sobre seções de configuração protegida, consulte [Criptografando informações de configuração usando configuração protegida](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The examples in this section show how to get the IsProtected property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_14_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_14_1.cs)]  \n  \n The following example gets the IsProtected value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#106](~/add/codesnippet/visualbasic/p-system.configuration.s_14_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#106](~/add/codesnippet/csharp/p-system.configuration.s_14_2.cs)]"
  syntax:
    content: public bool IsProtected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> protegido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.IsProtected*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.Name
  id: Name
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: Name
  nameWithType: SectionInformation.Name
  fullName: System.Configuration.SectionInformation.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém o nome da seção de configuração associada."
  remarks: "O nome é o nome da seção sem o caminho."
  example:
  - "The following example shows how to get the Name value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#107](~/add/codesnippet/visualbasic/p-system.configuration.s_9_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#107](~/add/codesnippet/csharp/p-system.configuration.s_9_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "O nome completo da seção de configuração."
  overload: System.Configuration.SectionInformation.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.OverrideMode
  id: OverrideMode
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: OverrideMode
  nameWithType: SectionInformation.OverrideMode
  fullName: System.Configuration.SectionInformation.OverrideMode
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define o <xref href=&quot;System.Configuration.OverrideMode&quot;> </xref> valor de enumeração que especifica se a seção de configuração associadas pode ser substituída pelos arquivos de configuração filho."
  remarks: "O <xref:System.Configuration.SectionInformation.AllowOverride%2A>propriedade obtém ou define um valor que indica se os recursos declarada dentro de um `location` elemento pode ser substituído por arquivos de configuração filho.</xref:System.Configuration.SectionInformation.AllowOverride%2A> A propriedade OverrideMode obtém ou define um valor que especifica o comportamento semelhante, mas faz isso para um grupo ou um elemento de configuração específico e usa um do <xref:System.Configuration.OverrideMode>valores de enumeração.</xref:System.Configuration.OverrideMode> A propriedade OverrideMode permite que o comportamento seja herdada de um elemento pai.       Não é possível definir ambos programaticamente o <xref:System.Configuration.SectionInformation.AllowOverride%2A>e propriedade OverrideMode.</xref:System.Configuration.SectionInformation.AllowOverride%2A> Definindo o <xref:System.Configuration.SectionInformation.AllowOverride%2A>propriedade `true` define a propriedade OverrideMode <xref:System.Configuration.OverrideMode>.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.SectionInformation.AllowOverride%2A> Definindo o <xref:System.Configuration.SectionInformation.AllowOverride%2A>propriedade `false` define a propriedade OverrideMode como `false`.</xref:System.Configuration.SectionInformation.AllowOverride%2A>"
  syntax:
    content: public System.Configuration.OverrideMode OverrideMode { get; set; }
    return:
      type: System.Configuration.OverrideMode
      description: "Uma da <xref href=&quot;System.Configuration.OverrideMode&quot;> </xref> valores de enumeração."
  overload: System.Configuration.SectionInformation.OverrideMode*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Foi feita uma tentativa para alterar o <xref:System.Configuration.SectionInformation.AllowOverride*>e OverrideMode propriedades, que não é suportado por razões de compatibilidade.</xref:System.Configuration.SectionInformation.AllowOverride*>"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.OverrideModeDefault
  id: OverrideModeDefault
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: OverrideModeDefault
  nameWithType: SectionInformation.OverrideModeDefault
  fullName: System.Configuration.SectionInformation.OverrideModeDefault
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define um valor que especifica o comportamento de uma seção de configuração, arquivos de configuração filho de substituir o padrão."
  remarks: "A propriedade OverrideModeDefault de uma seção de configuração só pode ser definida como o <xref:System.Configuration.OverrideMode>ou <xref:System.Configuration.OverrideMode>valor o <xref:System.Configuration.OverrideMode>enumeração.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode> Definir a propriedade OverrideModeDefault como <xref:System.Configuration.OverrideMode>é equivalente a definir o valor para <xref:System.Configuration.OverrideMode>.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode>"
  syntax:
    content: public System.Configuration.OverrideMode OverrideModeDefault { get; set; }
    return:
      type: System.Configuration.OverrideMode
      description: "Uma da <xref href=&quot;System.Configuration.OverrideMode&quot;> </xref> valores de enumeração."
  overload: System.Configuration.SectionInformation.OverrideModeDefault*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "O comportamento de substituição é especificado em uma seção de configuração pai."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.OverrideModeEffective
  id: OverrideModeEffective
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: OverrideModeEffective
  nameWithType: SectionInformation.OverrideModeEffective
  fullName: System.Configuration.SectionInformation.OverrideModeEffective
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém o comportamento de substituição de uma seção de configuração que por sua vez com base em se os arquivos de configuração filho podem bloquear a seção de configuração."
  remarks: "Essa propriedade retorna um <xref:System.Configuration.OverrideMode>ou <xref:System.Configuration.OverrideMode>.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode>"
  syntax:
    content: public System.Configuration.OverrideMode OverrideModeEffective { get; }
    return:
      type: System.Configuration.OverrideMode
      description: "Uma da <xref href=&quot;System.Configuration.OverrideMode&quot;> </xref> valores de enumeração."
  overload: System.Configuration.SectionInformation.OverrideModeEffective*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ProtectionProvider
  id: ProtectionProvider
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ProtectionProvider
  nameWithType: SectionInformation.ProtectionProvider
  fullName: System.Configuration.SectionInformation.ProtectionProvider
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém o provedor de configuração protegida para a seção de configuração associada."
  remarks: "Para seções desprotegidas, a propriedade ProtectionProvider é `null`.       Para obter mais informações sobre seções de configuração protegida, consulte [Criptografando informações de configuração usando configuração protegida](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to get the <xref:System.Configuration.SectionInformation.ProtectSection%2A> value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#108](~/add/codesnippet/visualbasic/p-system.configuration.s_11_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#108](~/add/codesnippet/csharp/p-system.configuration.s_11_1.cs)]"
  syntax:
    content: public System.Configuration.ProtectedConfigurationProvider ProtectionProvider { get; }
    return:
      type: System.Configuration.ProtectedConfigurationProvider
      description: "O provedor de configuração protegida desta <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> objeto."
  overload: System.Configuration.SectionInformation.ProtectionProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ProtectSection(System.String)
  id: ProtectSection(System.String)
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ProtectSection(String)
  nameWithType: SectionInformation.ProtectSection(String)
  fullName: System.Configuration.SectionInformation.ProtectSection(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Marca uma seção de configuração para proteção."
  remarks: "O método ProtectSection marca a seção de criptografia para que ele será gravado em formato criptografado no disco.       Os seguintes provedores de proteção são incluídos por padrão: <xref:System.Configuration.DpapiProtectedConfigurationProvider> <xref:System.Configuration.RsaProtectedConfigurationProvider>> [!NOTE] > se você chamar o método ProtectSection com um `null` parâmetro ou uma cadeia de caracteres vazia, a <xref:System.Configuration.RsaProtectedConfigurationProvider>classe é usada como o provedor de proteção.</xref:System.Configuration.RsaProtectedConfigurationProvider> </xref:System.Configuration.RsaProtectedConfigurationProvider>       </xref:System.Configuration.DpapiProtectedConfigurationProvider>       Para obter mais informações sobre seções de configuração protegida, consulte [Criptografando informações de configuração usando configuração protegida](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to use the ProtectSection method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#94](~/add/codesnippet/visualbasic/m-system.configuration.s_3_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#94](~/add/codesnippet/csharp/m-system.configuration.s_3_1.cs)]"
  syntax:
    content: public void ProtectSection (string protectionProvider);
    parameters:
    - id: protectionProvider
      type: System.String
      description: "O nome do provedor de proteção a ser usado."
  overload: System.Configuration.SectionInformation.ProtectSection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Configuration.SectionInformation.AllowLocation*> property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The target section is already a protected data section."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.RequirePermission
  id: RequirePermission
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: RequirePermission
  nameWithType: SectionInformation.RequirePermission
  fullName: System.Configuration.SectionInformation.RequirePermission
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém um valor que indica se a seção de configuração associado requer permissões de acesso."
  remarks: "Quando RequirePermission está definido como `true`, o `GetSection` métodos são limitados pela configuração de nível de confiança do aplicativo. Isso significa que métodos ou propriedades que permitem o acesso aos manipuladores de seção de configuração são restritos, o nível de confiança definido para o aplicativo Web.      > [!NOTE] > Como confiança total e alta são os níveis de apenas permitem acesso aos arquivos fora do domínio de aplicativo atual, um aplicativo pode usar manipuladores de seção de configuração apenas nesses níveis de confiança.       Quando RequirePermission está definido como `false`, o acesso aos dados de configuração não é restrito pelas configurações de nível de confiança do aplicativo.      > [!NOTE] > As permissões de ACL (lista de controle de acesso) de arquivo apropriado ainda são necessárias, independentemente da configuração de RequirePermission. Permissões de ACL determinam quem pode acessar o arquivo de configuração."
  example:
  - "The following example shows two possible trust levels for a Web application when the RequirePermission property of the `appSettings` section is `true`.  \n  \n```  \n<system.web>  \n   // With the following trust value   \n   // the code below works.  \n  <trust level=\"Full\" />  \n</system.web>  \n  \n<system.web>  \n  // With the following trust value   \n  // the code below does not work.  \n  <trust level=\"Medium\" />  \n</system.web>  \n```  \n  \n The following example shows code that runs without errors when the trust level is set to full. Otherwise, the code results in an error.  \n  \n```c#  \nAppSettingsSection apSection =   \n  ConfigurationManager.GetSection(\"appSettings\") as AppSettingsSection;  \n  \nNameValueCollection apSectionCollection =  \n  ConfigurationManager.AppSettings;  \n```  \n  \n```vb#  \nDim apSection As AppSettingsSection = _   \n  TryCast(ConfigurationManager.GetSection(\"appSettings\"),   \n    AppSettingsSection)  \n  \n  Dim apSectionCollection As NameValueCollection = _   \n    ConfigurationManager.AppSettings  \n```"
  syntax:
    content: public bool RequirePermission { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref uid=&quot;langword_csharp_requirePermission&quot; name=&quot;requirePermission&quot; href=&quot;&quot;> </xref> atributo é definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.RequirePermission*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "O valor selecionado está em conflito com um valor que já foi definido."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.RestartOnExternalChanges
  id: RestartOnExternalChanges
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: RestartOnExternalChanges
  nameWithType: SectionInformation.RestartOnExternalChanges
  fullName: System.Configuration.SectionInformation.RestartOnExternalChanges
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define um valor que especifica se uma alteração em uma configuração externa incluir arquivo exige uma reinicialização do aplicativo."
  remarks: "Defina a propriedade RestartOnExternalChanges como `false` para evitar uma reinicialização do aplicativo quando as definições de configuração no arquivo de inclusão externos são modificadas para este <xref:System.Configuration.ConfigurationSection>objeto.</xref:System.Configuration.ConfigurationSection>"
  example:
  - "The following example shows how to get the RestartOnExternalChanges property value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#109](~/add/codesnippet/visualbasic/p-system.configuration.s_1_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#109](~/add/codesnippet/csharp/p-system.configuration.s_1_1.cs)]"
  syntax:
    content: public bool RestartOnExternalChanges { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o arquivo de inclusão de uma alteração em uma configuração externa requer uma reinicialização do aplicativo; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.RestartOnExternalChanges*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "O valor selecionado está em conflito com um valor que já foi definido."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.RevertToParent
  id: RevertToParent
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: RevertToParent()
  nameWithType: SectionInformation.RevertToParent()
  fullName: System.Configuration.SectionInformation.RevertToParent()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Faz com que a seção de configuração associado ao herdar todos os seus valores na seção pai."
  syntax:
    content: public void RevertToParent ();
    parameters: []
  overload: System.Configuration.SectionInformation.RevertToParent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Este método não pode ser chamado fora do modo de edição."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.SectionName
  id: SectionName
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: SectionName
  nameWithType: SectionInformation.SectionName
  fullName: System.Configuration.SectionInformation.SectionName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém o nome da seção de configuração associada."
  remarks: "O valor da propriedade SectionName é o nome de seção completa, que inclui a hierarquia de herança de configuração."
  example:
  - "The following example shows how to get the SectionName value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#110](~/add/codesnippet/visualbasic/p-system.configuration.s_10_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#110](~/add/codesnippet/csharp/p-system.configuration.s_10_1.cs)]"
  syntax:
    content: public string SectionName { get; }
    return:
      type: System.String
      description: "O nome do associado <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> objeto."
  overload: System.Configuration.SectionInformation.SectionName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.SetRawXml(System.String)
  id: SetRawXml(System.String)
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: SetRawXml(String)
  nameWithType: SectionInformation.SetRawXml(String)
  fullName: System.Configuration.SectionInformation.SetRawXml(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Define o objeto para uma representação XML da seção de configuração associado no arquivo de configuração."
  syntax:
    content: public void SetRawXml (string rawXml);
    parameters:
    - id: rawXml
      type: System.String
      description: "O XML a ser usado."
  overload: System.Configuration.SectionInformation.SetRawXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rawXml</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.Type
  id: Type
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: Type
  nameWithType: SectionInformation.Type
  fullName: System.Configuration.SectionInformation.Type
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define o nome da classe de seção."
  remarks: "A propriedade de tipo retorna o nome da classe seção que trata esta instância da <xref:System.Configuration.ConfigurationSection>classe.</xref:System.Configuration.ConfigurationSection>"
  example:
  - "The following example shows how to get the Type value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#111](~/add/codesnippet/visualbasic/p-system.configuration.s_3_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#111](~/add/codesnippet/csharp/p-system.configuration.s_3_1.cs)]"
  syntax:
    content: public string Type { get; set; }
    return:
      type: System.String
      description: "O nome da classe que está associada a essa <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> seção."
  overload: System.Configuration.SectionInformation.Type*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor selecionado é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia (&quot;&quot;)."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "O valor selecionado está em conflito com um valor que já foi definido."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.UnprotectSection
  id: UnprotectSection
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: UnprotectSection()
  nameWithType: SectionInformation.UnprotectSection()
  fullName: System.Configuration.SectionInformation.UnprotectSection()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Remove a criptografia de configuração protegida da seção de configuração associada."
  remarks: "Para obter mais informações sobre seções de configuração protegida, consulte [Criptografando informações de configuração usando configuração protegida](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to use this method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#112](~/add/codesnippet/visualbasic/m-system.configuration.s_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#112](~/add/codesnippet/csharp/m-system.configuration.s_6_1.cs)]"
  syntax:
    content: public void UnprotectSection ();
    parameters: []
  overload: System.Configuration.SectionInformation.UnprotectSection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.SectionInformation.AllowDefinition
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowDefinition
  nameWithType: SectionInformation.AllowDefinition
  fullName: System.Configuration.SectionInformation.AllowDefinition
- uid: System.Configuration.ConfigurationAllowDefinition
  parent: System.Configuration
  isExternal: false
  name: ConfigurationAllowDefinition
  nameWithType: ConfigurationAllowDefinition
  fullName: System.Configuration.ConfigurationAllowDefinition
- uid: System.Configuration.SectionInformation.AllowExeDefinition
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowExeDefinition
  nameWithType: SectionInformation.AllowExeDefinition
  fullName: System.Configuration.SectionInformation.AllowExeDefinition
- uid: System.Configuration.ConfigurationAllowExeDefinition
  parent: System.Configuration
  isExternal: false
  name: ConfigurationAllowExeDefinition
  nameWithType: ConfigurationAllowExeDefinition
  fullName: System.Configuration.ConfigurationAllowExeDefinition
- uid: System.Configuration.SectionInformation.AllowLocation
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowLocation
  nameWithType: SectionInformation.AllowLocation
  fullName: System.Configuration.SectionInformation.AllowLocation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SectionInformation.AllowOverride
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowOverride
  nameWithType: SectionInformation.AllowOverride
  fullName: System.Configuration.SectionInformation.AllowOverride
- uid: System.Configuration.SectionInformation.ConfigSource
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ConfigSource
  nameWithType: SectionInformation.ConfigSource
  fullName: System.Configuration.SectionInformation.ConfigSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SectionInformation.ForceDeclaration
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceDeclaration()
  nameWithType: SectionInformation.ForceDeclaration()
  fullName: System.Configuration.SectionInformation.ForceDeclaration()
- uid: System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceDeclaration(Boolean)
  nameWithType: SectionInformation.ForceDeclaration(Boolean)
  fullName: System.Configuration.SectionInformation.ForceDeclaration(Boolean)
- uid: System.Configuration.SectionInformation.ForceSave
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceSave
  nameWithType: SectionInformation.ForceSave
  fullName: System.Configuration.SectionInformation.ForceSave
- uid: System.Configuration.SectionInformation.GetParentSection
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetParentSection()
  nameWithType: SectionInformation.GetParentSection()
  fullName: System.Configuration.SectionInformation.GetParentSection()
- uid: System.Configuration.ConfigurationSection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSection
  nameWithType: ConfigurationSection
  fullName: System.Configuration.ConfigurationSection
- uid: System.Configuration.SectionInformation.GetRawXml
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetRawXml()
  nameWithType: SectionInformation.GetRawXml()
  fullName: System.Configuration.SectionInformation.GetRawXml()
- uid: System.Configuration.SectionInformation.InheritInChildApplications
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: InheritInChildApplications
  nameWithType: SectionInformation.InheritInChildApplications
  fullName: System.Configuration.SectionInformation.InheritInChildApplications
- uid: System.Configuration.SectionInformation.IsDeclarationRequired
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclarationRequired
  nameWithType: SectionInformation.IsDeclarationRequired
  fullName: System.Configuration.SectionInformation.IsDeclarationRequired
- uid: System.Configuration.SectionInformation.IsDeclared
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclared
  nameWithType: SectionInformation.IsDeclared
  fullName: System.Configuration.SectionInformation.IsDeclared
- uid: System.Configuration.SectionInformation.IsLocked
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsLocked
  nameWithType: SectionInformation.IsLocked
  fullName: System.Configuration.SectionInformation.IsLocked
- uid: System.Configuration.SectionInformation.IsProtected
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsProtected
  nameWithType: SectionInformation.IsProtected
  fullName: System.Configuration.SectionInformation.IsProtected
- uid: System.Configuration.SectionInformation.Name
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Name
  nameWithType: SectionInformation.Name
  fullName: System.Configuration.SectionInformation.Name
- uid: System.Configuration.SectionInformation.OverrideMode
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideMode
  nameWithType: SectionInformation.OverrideMode
  fullName: System.Configuration.SectionInformation.OverrideMode
- uid: System.Configuration.OverrideMode
  parent: System.Configuration
  isExternal: false
  name: OverrideMode
  nameWithType: OverrideMode
  fullName: System.Configuration.OverrideMode
- uid: System.Configuration.SectionInformation.OverrideModeDefault
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeDefault
  nameWithType: SectionInformation.OverrideModeDefault
  fullName: System.Configuration.SectionInformation.OverrideModeDefault
- uid: System.Configuration.SectionInformation.OverrideModeEffective
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeEffective
  nameWithType: SectionInformation.OverrideModeEffective
  fullName: System.Configuration.SectionInformation.OverrideModeEffective
- uid: System.Configuration.SectionInformation.ProtectionProvider
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectionProvider
  nameWithType: SectionInformation.ProtectionProvider
  fullName: System.Configuration.SectionInformation.ProtectionProvider
- uid: System.Configuration.ProtectedConfigurationProvider
  parent: System.Configuration
  isExternal: false
  name: ProtectedConfigurationProvider
  nameWithType: ProtectedConfigurationProvider
  fullName: System.Configuration.ProtectedConfigurationProvider
- uid: System.Configuration.SectionInformation.ProtectSection(System.String)
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectSection(String)
  nameWithType: SectionInformation.ProtectSection(String)
  fullName: System.Configuration.SectionInformation.ProtectSection(String)
- uid: System.Configuration.SectionInformation.RequirePermission
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RequirePermission
  nameWithType: SectionInformation.RequirePermission
  fullName: System.Configuration.SectionInformation.RequirePermission
- uid: System.Configuration.SectionInformation.RestartOnExternalChanges
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RestartOnExternalChanges
  nameWithType: SectionInformation.RestartOnExternalChanges
  fullName: System.Configuration.SectionInformation.RestartOnExternalChanges
- uid: System.Configuration.SectionInformation.RevertToParent
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RevertToParent()
  nameWithType: SectionInformation.RevertToParent()
  fullName: System.Configuration.SectionInformation.RevertToParent()
- uid: System.Configuration.SectionInformation.SectionName
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SectionName
  nameWithType: SectionInformation.SectionName
  fullName: System.Configuration.SectionInformation.SectionName
- uid: System.Configuration.SectionInformation.SetRawXml(System.String)
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SetRawXml(String)
  nameWithType: SectionInformation.SetRawXml(String)
  fullName: System.Configuration.SectionInformation.SetRawXml(String)
- uid: System.Configuration.SectionInformation.Type
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Type
  nameWithType: SectionInformation.Type
  fullName: System.Configuration.SectionInformation.Type
- uid: System.Configuration.SectionInformation.UnprotectSection
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: UnprotectSection()
  nameWithType: SectionInformation.UnprotectSection()
  fullName: System.Configuration.SectionInformation.UnprotectSection()
- uid: System.Configuration.SectionInformation.AllowDefinition*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowDefinition
  nameWithType: SectionInformation.AllowDefinition
- uid: System.Configuration.SectionInformation.AllowExeDefinition*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowExeDefinition
  nameWithType: SectionInformation.AllowExeDefinition
- uid: System.Configuration.SectionInformation.AllowLocation*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowLocation
  nameWithType: SectionInformation.AllowLocation
- uid: System.Configuration.SectionInformation.AllowOverride*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowOverride
  nameWithType: SectionInformation.AllowOverride
- uid: System.Configuration.SectionInformation.ConfigSource*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ConfigSource
  nameWithType: SectionInformation.ConfigSource
- uid: System.Configuration.SectionInformation.ForceDeclaration*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceDeclaration
  nameWithType: SectionInformation.ForceDeclaration
- uid: System.Configuration.SectionInformation.ForceSave*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceSave
  nameWithType: SectionInformation.ForceSave
- uid: System.Configuration.SectionInformation.GetParentSection*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetParentSection
  nameWithType: SectionInformation.GetParentSection
- uid: System.Configuration.SectionInformation.GetRawXml*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetRawXml
  nameWithType: SectionInformation.GetRawXml
- uid: System.Configuration.SectionInformation.InheritInChildApplications*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: InheritInChildApplications
  nameWithType: SectionInformation.InheritInChildApplications
- uid: System.Configuration.SectionInformation.IsDeclarationRequired*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclarationRequired
  nameWithType: SectionInformation.IsDeclarationRequired
- uid: System.Configuration.SectionInformation.IsDeclared*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclared
  nameWithType: SectionInformation.IsDeclared
- uid: System.Configuration.SectionInformation.IsLocked*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsLocked
  nameWithType: SectionInformation.IsLocked
- uid: System.Configuration.SectionInformation.IsProtected*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsProtected
  nameWithType: SectionInformation.IsProtected
- uid: System.Configuration.SectionInformation.Name*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Name
  nameWithType: SectionInformation.Name
- uid: System.Configuration.SectionInformation.OverrideMode*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideMode
  nameWithType: SectionInformation.OverrideMode
- uid: System.Configuration.SectionInformation.OverrideModeDefault*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeDefault
  nameWithType: SectionInformation.OverrideModeDefault
- uid: System.Configuration.SectionInformation.OverrideModeEffective*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeEffective
  nameWithType: SectionInformation.OverrideModeEffective
- uid: System.Configuration.SectionInformation.ProtectionProvider*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectionProvider
  nameWithType: SectionInformation.ProtectionProvider
- uid: System.Configuration.SectionInformation.ProtectSection*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectSection
  nameWithType: SectionInformation.ProtectSection
- uid: System.Configuration.SectionInformation.RequirePermission*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RequirePermission
  nameWithType: SectionInformation.RequirePermission
- uid: System.Configuration.SectionInformation.RestartOnExternalChanges*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RestartOnExternalChanges
  nameWithType: SectionInformation.RestartOnExternalChanges
- uid: System.Configuration.SectionInformation.RevertToParent*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RevertToParent
  nameWithType: SectionInformation.RevertToParent
- uid: System.Configuration.SectionInformation.SectionName*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SectionName
  nameWithType: SectionInformation.SectionName
- uid: System.Configuration.SectionInformation.SetRawXml*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SetRawXml
  nameWithType: SectionInformation.SetRawXml
- uid: System.Configuration.SectionInformation.Type*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Type
  nameWithType: SectionInformation.Type
- uid: System.Configuration.SectionInformation.UnprotectSection*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: UnprotectSection
  nameWithType: SectionInformation.UnprotectSection
