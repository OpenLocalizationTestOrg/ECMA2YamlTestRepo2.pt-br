### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  id: EncryptedKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause
  nameWithType: EncryptedKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  type: Class
  summary: "Representa uma cláusula de identificador de chave que identifica uma chave criptografada."
  remarks: "Normalmente, o EncryptedKeyIdentifierClause não precisa ser usada, diferente de quando um serviço de token de segurança personalizada é criado. Quando um serviço de token de segurança retorna um token de segurança, o token de segurança emitido contém referências aos tokens de segurança anexados ou não. Consultem referências associadas aos tokens de segurança que estão contidos dentro do cabeçalho de segurança de uma mensagem SOAP e referências não são tokens de segurança que não estão incluídas no cabeçalho de segurança de uma mensagem SOAP. Normalmente, essas referências confirmar a autenticidade do token de segurança emitido. Use a classe EncryptedKeyIdentifierClause para referenciar uma chave criptografada. O <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A>método retorna a chave criptografada.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A>       [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]aceita encapsuladas chaves são bem formadas em relação ao formato de conexão. O algoritmo de codificação de chave especificado na conexão é aceita e usado. Não é verificado para ser compatível com o <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>especificado pelo ponto de extremidade.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: 'public sealed class EncryptedKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> usando a chave especificada é criptografada e o algoritmo de criptografia usado para criptografar a chave de classe."
  remarks: "Use a constante de estática cadeias de caracteres no <xref:System.IdentityModel.Tokens.SecurityAlgorithms>para especificar o algoritmo de criptografia para o `encryptionMethod` parâmetro.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém uma chave é criptografada.</xref:System.Byte> Define o valor que é retornado o <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>método.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>"
    - id: encryptionMethod
      type: System.String
      description: "O algoritmo de criptografia que é usado para criptografar a chave. Define o valor de <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>propriedade.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>tem comprimento zero."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> classe usando a chave especificada é criptografada, o algoritmo de criptografia usada para criptografar a chave e um identificador de chave para a chave de criptografia."
  remarks: "Use a constante de estática cadeias de caracteres no <xref:System.IdentityModel.Tokens.SecurityAlgorithms>para especificar o algoritmo de criptografia para o `encryptionMethod` parâmetro.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém uma chave é criptografada.</xref:System.Byte> Define o valor que é retornado o <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>método.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>"
    - id: encryptionMethod
      type: System.String
      description: "O algoritmo de criptografia que é usado para criptografar a chave. Define o valor de <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>propriedade.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>"
    - id: encryptingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa o identificador de chave para a chave de criptografia que é especificado no `encryptedKey` parâmetro. Define o valor de <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>propriedade.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>tem comprimento zero."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> classe usando a chave especificada é criptografada, o algoritmo de criptografia usada para criptografar a chave, um identificador de chave para a chave de criptografia e um nome legível do usuário."
  remarks: "Use a constante de estática cadeias de caracteres no <xref:System.IdentityModel.Tokens.SecurityAlgorithms>para especificar o algoritmo de criptografia para o `encryptionMethod` parâmetro.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém uma chave é criptografada.</xref:System.Byte> Define o valor que é retornado o <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>método.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>"
    - id: encryptionMethod
      type: System.String
      description: "O algoritmo de criptografia que é usado para criptografar a chave. Define o valor de <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>propriedade.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>"
    - id: encryptingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa o identificador de chave para a chave de criptografia especificada no `encryptedKey` parâmetro. Define o valor de <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>propriedade.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>"
    - id: carriedKeyName
      type: System.String
      description: "Um nome legível do usuário que está associado com a chave especificada no `encryptedKey` parâmetro. Define o valor de <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>propriedade.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>tem comprimento zero."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> classe usando a chave especificada é criptografada, o algoritmo de criptografia usada para criptografar a chave, um identificador de chave para a chave e um nome de usuário legível."
  remarks: "Quando o `derivationNonce` e `derivationLength` são especificados a chave derivada implícita é usada em vez da chave de segurança direta do token.       Use a constante de estática cadeias de caracteres no <xref:System.IdentityModel.Tokens.SecurityAlgorithms>para especificar o algoritmo de criptografia para o `encryptionMethod` parâmetro.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém uma chave é criptografada.</xref:System.Byte> Define o valor que é retornado o <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>método.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>"
    - id: encryptionMethod
      type: System.String
      description: "O algoritmo de criptografia que é usado para criptografar a chave. Define o valor de <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>propriedade.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>"
    - id: encryptingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa o identificador de chave para a chave especificada no `encryptedKey` parâmetro. Define o valor de <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>propriedade.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>"
    - id: carriedKeyName
      type: System.String
      description: "Um nome legível do usuário que está associado com a chave especificada no `encryptedKey` parâmetro. Define o valor de <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>propriedade.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>"
    - id: derivationNonce
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém o valor de uso único que foi usado para criar uma chave derivada.</xref:System.Byte> Define o valor retornado pelo <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>método.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>"
    - id: derivationLength
      type: System.Int32
      description: "O tamanho da chave derivada. Define o valor de <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>propriedade.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>tem comprimento zero."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  id: CarriedKeyName
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém um nome legível do usuário que está associado com a chave criptografada."
  remarks: "Quando a propriedade CarriedKeyName é serializada em XML, ele é colocado no `CarriedKeyName`> elemento. Para as chaves criptografadas, o `CarriedKeyName`> é um elemento opcional que associa um nome legível do usuário com um valor de chave. Esse nome, em seguida, pode ser usado para fazer referência a chave usando o `KeyName`> elemento dentro do `KeyInfo`> elemento. O mesmo `CarriedKeyName`> valor do elemento, ao contrário de um valor de ID, pode ocorrer várias vezes em um único documento. O valor da chave deve ser a mesma em todos os `EncryptedKey`> elementos identificados com o mesmo `CarriedKeyName`> nome dentro de um documento XML."
  syntax:
    content: public string CarriedKeyName { get; }
    return:
      type: System.String
      description: "Um nome legível do usuário que está associado com a chave criptografada."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  id: EncryptingKeyIdentifier
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém um identificador de chave para a chave de criptografia."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> que representa o identificador de chave para a chave de criptografia."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  id: EncryptionMethod
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém o algoritmo de criptografia que é usado para criptografar a chave."
  remarks: "Normalmente, o valor da propriedade EncryptionMethod é uma das cadeias de caracteres constantes estáticas na <xref:System.IdentityModel.Tokens.SecurityAlgorithms>classe.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public string EncryptionMethod { get; }
    return:
      type: System.String
      description: "O algoritmo de criptografia que é usado para criptografar a chave."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  id: GetEncryptedKey
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: GetEncryptedKey()
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém a chave criptografada."
  remarks: "A matriz retornada pelo método GetEncryptedKey é um clone da chave criptografada."
  syntax:
    content: public byte[] GetEncryptedKey ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém a chave criptografada.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retorna um valor que indica se o identificador de chave para essa instância é equivalente à cláusula do identificador de chave especificado."
  syntax:
    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> a ser comparado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> keyIdentifierClause </code> é do tipo <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> e tem o mesmo criptografados chave, o método de criptografia e o nome legível pelo usuário como a instância atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  id: Matches(System.Byte[],System.String,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[],String,String)
  nameWithType: EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retorna um valor que indica se o identificador de chave para essa instância é equivalente a chave criptografada especificada, o método de criptografia e o nome legível do usuário."
  syntax:
    content: public bool Matches (byte[] encryptedKey, string encryptionMethod, string carriedKeyName);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém uma chave é criptografada.</xref:System.Byte>"
    - id: encryptionMethod
      type: System.String
      description: "O algoritmo de criptografia que é usado para criptografar a chave."
    - id: carriedKeyName
      type: System.String
      description: "Um nome legível do usuário que está associado com a chave criptografada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <code> encryptedKey </code>, <code> encryptionMethod </code> e <code> carriedKeyName </code> parâmetros têm os mesmos valores retornados pelo <> </> *> método e o <> </> *> e <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>Propriedades, respectivamente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: ToString()
  nameWithType: EncryptedKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retorna uma cadeia de caracteres que representa o objeto atual."
  remarks: "O método ToString retorna uma cadeia de caracteres que contém a chave e o algoritmo de criptografia que é usado para criptografar a chave."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "O objeto atual."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: GetEncryptedKey()
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey()
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[],String,String)
  nameWithType: EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: ToString()
  nameWithType: EncryptedKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString()
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: GetEncryptedKey
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: EncryptedKeyIdentifierClause.Matches
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: ToString
  nameWithType: EncryptedKeyIdentifierClause.ToString
