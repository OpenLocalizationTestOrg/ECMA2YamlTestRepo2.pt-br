### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlBoolean
  id: SqlBoolean
  children:
  - System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)
  - System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)
  - System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.ByteValue
  - System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlBoolean.Equals(System.Object)
  - System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.False
  - System.Data.SqlTypes.SqlBoolean.GetHashCode
  - System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.IsFalse
  - System.Data.SqlTypes.SqlBoolean.IsNull
  - System.Data.SqlTypes.SqlBoolean.IsTrue
  - System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.Null
  - System.Data.SqlTypes.SqlBoolean.One
  - System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Boolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)
  - System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.Parse(System.String)
  - System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlBoolean.ToSqlByte
  - System.Data.SqlTypes.SqlBoolean.ToSqlDecimal
  - System.Data.SqlTypes.SqlBoolean.ToSqlDouble
  - System.Data.SqlTypes.SqlBoolean.ToSqlInt16
  - System.Data.SqlTypes.SqlBoolean.ToSqlInt32
  - System.Data.SqlTypes.SqlBoolean.ToSqlInt64
  - System.Data.SqlTypes.SqlBoolean.ToSqlMoney
  - System.Data.SqlTypes.SqlBoolean.ToSqlSingle
  - System.Data.SqlTypes.SqlBoolean.ToSqlString
  - System.Data.SqlTypes.SqlBoolean.ToString
  - System.Data.SqlTypes.SqlBoolean.True
  - System.Data.SqlTypes.SqlBoolean.Value
  - System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.Zero
  langs:
  - csharp
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
  type: Struct
  summary: "Representa um valor inteiro 1 ou 0 para ser armazenado no ou recuperado de um banco de dados."
  remarks: "Qualquer valor diferente de zero é interpretado como 1.       A principal diferença entre uma estrutura de SqlBoolean e um valor booliano padrão é que, quando um booliano padrão tem dois valores possíveis, `true` e `false`, uma estrutura SqlBoolean tem três valores possíveis, <xref:System.Data.SqlTypes.SqlBoolean.True>, <xref:System.Data.SqlTypes.SqlBoolean.False>, ou <xref:System.Data.SqlTypes.SqlBoolean.Null>.</xref:System.Data.SqlTypes.SqlBoolean.Null> </xref:System.Data.SqlTypes.SqlBoolean.False> </xref:System.Data.SqlTypes.SqlBoolean.True>"
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlBoolean : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: SqlBoolean(Boolean)
  nameWithType: SqlBoolean.SqlBoolean(Boolean)
  fullName: System.Data.SqlTypes.SqlBoolean.SqlBoolean(Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura usando o valor booliano fornecido."
  syntax:
    content: public SqlBoolean (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "O valor para o novo <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura; <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: SqlBoolean(Int32)
  nameWithType: SqlBoolean.SqlBoolean(Int32)
  fullName: System.Data.SqlTypes.SqlBoolean.SqlBoolean(Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura usando o valor inteiro especificado."
  syntax:
    content: public SqlBoolean (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "O inteiro cujo valor será usado para o novo <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
  overload: System.Data.SqlTypes.SqlBoolean.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: And(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.And(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.And(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Calcula a operação AND bit a bit de dois especificado <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estruturas."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean And (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "O resultado da operação AND lógica."
  overload: System.Data.SqlTypes.SqlBoolean.And*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ByteValue
  id: ByteValue
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ByteValue
  nameWithType: SqlBoolean.ByteValue
  fullName: System.Data.SqlTypes.SqlBoolean.ByteValue
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém o valor da <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura como um byte."
  remarks: "O valor de byte será 0 ou 1."
  syntax:
    content: public byte ByteValue { get; }
    return:
      type: System.Byte
      description: "Um byte que representa o valor da <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
  overload: System.Data.SqlTypes.SqlBoolean.ByteValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)
  id: CompareTo(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: CompareTo(SqlBoolean)
  nameWithType: SqlBoolean.CompareTo(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.CompareTo(SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara este <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> objeto fornecido <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> de objeto e retorna uma indicação de seus valores relativos."
  remarks: "Qualquer instância de <xref:System.Data.SqlTypes.SqlBoolean>, independentemente de seu valor é considerado maior do que uma referência nula (`Nothing` no Visual Basic).</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlBoolean value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> objeto a ser comparado ou uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
    return:
      type: System.Int32
      description: "Um número assinado que indica os valores relativos da instância e do valor.       <table><thead><tr><th> Valor       </th><th> Descrição       </th></tr></thead><tbody><tr><td> Um inteiro negativo       </td><td> Esta instância é menor que <code> value </code>.       </td></tr><tr><td> Zero       </td><td> Esta instância é igual a <code> value </code>.       </td></tr><tr><td> Um número inteiro positivo       </td><td> Esta instância é maior do que <code> value </code>.       - ou - <code> value </code> é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic).       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlBoolean.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlBoolean.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlBoolean.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara este <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura para um objeto especificado e retorna uma indicação de seus valores relativos."
  remarks: "Qualquer instância de <xref:System.Data.SqlTypes.SqlBoolean>, independentemente de seu valor é considerado maior do que uma referência nula (`Nothing` no Visual Basic).</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Um objeto para comparar ou uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
    return:
      type: System.Int32
      description: "Um número assinado que indica os valores relativos da instância e do valor.       <table><thead><tr><th> Valor       </th><th> Descrição       </th></tr></thead><tbody><tr><td> Um inteiro negativo       </td><td> Esta instância é menor que <code> value </code>.       </td></tr><tr><td> Zero       </td><td> Esta instância é igual a <code> value </code>.       </td></tr><tr><td> Um número inteiro positivo       </td><td> Esta instância é maior do que <code> value </code>.       - ou - <code> value </code> é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic).       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlBoolean.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlBoolean.Equals(Object)
  fullName: System.Data.SqlTypes.SqlBoolean.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara o parâmetro de objeto fornecido para o <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto a ser comparado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto é uma instância de <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> e os dois são iguais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Equals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.Equals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.Equals(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara dois <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estruturas para determinar se eles são iguais."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que é <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias são iguais ou <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se as duas instâncias não são iguais. Se qualquer instância de <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> for nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlBoolean.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.False
  id: "False"
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: "False"
  nameWithType: SqlBoolean.False
  fullName: System.Data.SqlTypes.SqlBoolean.False
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Representa um valor falso que pode ser atribuído para o <xref:System.Data.SqlTypes.SqlBoolean.Value*>propriedade de uma instância do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  remarks: "O campo False é uma constante para o <xref:System.Data.SqlTypes.SqlBoolean>estrutura.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlBoolean False;
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlBoolean.GetHashCode()
  fullName: System.Data.SqlTypes.SqlBoolean.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Retorna o código hash para essa instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código de hash de inteiro de 32 bits."
  overload: System.Data.SqlTypes.SqlBoolean.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlBoolean.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlBoolean.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Retorna a linguagem de definição de esquema XML (XSD) especificada <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "Um <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> valor que indica o XSD especificado <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: GreaterThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.GreaterThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.GreaterThan(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara duas instâncias do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> para determinar se a primeira é maior que o segundo."
  remarks: "Se qualquer instância de `x` ou `y` é null, o valor da <xref:System.Data.SqlTypes.SqlBoolean>será nulo.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a primeira instância é maior do que a segunda instância; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: GreaterThanOrEquals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.GreaterThanOrEquals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara duas instâncias do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> para determinar se a primeira é maior que ou igual à segunda."
  remarks: "Se qualquer instância de `x` ou `y` é null, o valor da <xref:System.Data.SqlTypes.SqlBoolean>será nulo.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEquals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a primeira instância é maior que ou igual à segunda instância; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.IsFalse
  id: IsFalse
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: IsFalse
  nameWithType: SqlBoolean.IsFalse
  fullName: System.Data.SqlTypes.SqlBoolean.IsFalse
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Indica se o atual <xref:System.Data.SqlTypes.SqlBoolean.Value*>é <xref href=&quot;System.Data.SqlTypes.SqlBoolean.False&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  remarks: "Se o <xref:System.Data.SqlTypes.SqlBoolean.Value%2A>é <xref:System.Data.SqlTypes.SqlBoolean.Null>, essa propriedade ainda será `false`.</xref:System.Data.SqlTypes.SqlBoolean.Null> </xref:System.Data.SqlTypes.SqlBoolean.Value%2A>"
  syntax:
    content: public bool IsFalse { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref> is <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlBoolean.IsFalse*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlBoolean.IsNull
  fullName: System.Data.SqlTypes.SqlBoolean.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Indica se este <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura é nula."
  remarks: "Para obter mais informações, consulte [tratar valores nulos](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura for null; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.IsTrue
  id: IsTrue
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: IsTrue
  nameWithType: SqlBoolean.IsTrue
  fullName: System.Data.SqlTypes.SqlBoolean.IsTrue
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Indica se o atual <xref:System.Data.SqlTypes.SqlBoolean.Value*>é <xref href=&quot;System.Data.SqlTypes.SqlBoolean.True&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  remarks: "Se o <xref:System.Data.SqlTypes.SqlBoolean.Value%2A>é <xref:System.Data.SqlTypes.SqlBoolean.Null>, essa propriedade ainda será `false`.</xref:System.Data.SqlTypes.SqlBoolean.Null> </xref:System.Data.SqlTypes.SqlBoolean.Value%2A>"
  syntax:
    content: public bool IsTrue { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref> is <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlBoolean.IsTrue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: LessThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.LessThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.LessThan(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara duas instâncias do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> para determinar se a primeira for menor que o segundo."
  remarks: "Se qualquer instância de `x` ou `y` é null, o valor da <xref:System.Data.SqlTypes.SqlBoolean>será nulo.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a primeira instância for menor que a segunda instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: LessThanOrEquals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.LessThanOrEquals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara duas instâncias do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> para determinar se a primeira é menor ou igual à segunda."
  remarks: "Se qualquer instância de `x` ou `y` é null, o valor da <xref:System.Data.SqlTypes.SqlBoolean>será nulo.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEquals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a primeira instância é menor ou igual à segunda instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: NotEquals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.NotEquals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.NotEquals(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara duas instâncias do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> para igualdade."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que é <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se as duas instâncias não forem iguais ou <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias são iguais. Se qualquer instância de <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> for nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlBoolean.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlBoolean.Null
  fullName: System.Data.SqlTypes.SqlBoolean.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Representa <xref href=&quot;System.DBNull&quot;> </xref> que pode ser atribuído a essa instância do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
  remarks: "O campo de Null é uma constante para o <xref:System.Data.SqlTypes.SqlBoolean>estrutura.</xref:System.Data.SqlTypes.SqlBoolean> Para obter mais informações, consulte [tratar valores nulos](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlBoolean Null;
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.One
  id: One
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: One
  nameWithType: SqlBoolean.One
  fullName: System.Data.SqlTypes.SqlBoolean.One
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Representa um valor que pode ser atribuído ao <xref:System.Data.SqlTypes.SqlBoolean.ByteValue*>propriedade de uma instância do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura.</xref:System.Data.SqlTypes.SqlBoolean.ByteValue*>"
  remarks: "Um campo é uma constante para o <xref:System.Data.SqlTypes.SqlBoolean>estrutura.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlBoolean One;
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)
  id: OnesComplement(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: OnesComplement(SqlBoolean)
  nameWithType: SqlBoolean.OnesComplement(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.OnesComplement(SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Executa um um complemento a operação em fornecido <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estruturas."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean OnesComplement (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "O complemento de fornecido <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.OnesComplement*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_BitwiseAnd(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_BitwiseAnd(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Calcula a operação AND bit a bit de dois especificado <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estruturas."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_BitwiseAnd (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "O resultado da operação AND lógica."
  overload: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_BitwiseOr(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_BitwiseOr(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Calcula o OR bit a bit dos operandos."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_BitwiseOr (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Os resultados da operação OR lógica."
  overload: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Equality(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_Equality(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Equality(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara duas instâncias do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> para igualdade."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que é <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias são iguais ou <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se as duas instâncias não são iguais. Se qualquer instância de <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> for nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlBoolean.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_ExclusiveOr(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_ExclusiveOr(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Executa uma operação de (XOR) OR exclusivo bit a bit nos parâmetros fornecidos."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_ExclusiveOr (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "O resultado da operação lógica XOR."
  overload: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Boolean)
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Boolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlBoolean.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static bool op_Explicit (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
    return:
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlByte)
  nameWithType: SqlBoolean.op_Explicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A ser adicionado."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlBoolean.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A ser adicionado."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlDouble)
  nameWithType: SqlBoolean.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlDouble)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlDouble x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: "A ser adicionado."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlInt16)
  nameWithType: SqlBoolean.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A ser adicionado."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlInt32)
  nameWithType: SqlBoolean.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt32)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlInt32 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: "A ser adicionado."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlInt64)
  nameWithType: SqlBoolean.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A ser adicionado."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlMoney)
  nameWithType: SqlBoolean.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlMoney x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A ser adicionado."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlSingle)
  nameWithType: SqlBoolean.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlSingle x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A ser adicionado."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlString)
  nameWithType: SqlBoolean.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlString x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A ser adicionado."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)
  id: op_False(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_False(SqlBoolean)
  nameWithType: SqlBoolean.op_False(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_False(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "O operador false pode ser usado para testar o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> para determinar se é false.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  syntax:
    content: public static bool op_False (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "O <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura a ser testada."
    return:
      type: System.Boolean
      description: "Retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o parâmetro fornecido é <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> é false, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> caso contrário."
  overload: System.Data.SqlTypes.SqlBoolean.op_False*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_GreaterThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_GreaterThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_GreaterThan(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara dois <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estruturas para determinar se a primeira é maior que o segundo."
  remarks: "Se qualquer instância de `x` ou `y` é null, o valor da <xref:System.Data.SqlTypes.SqlBoolean>será nulo.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref> object."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref> object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a primeira instância é maior do que a segunda instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara dois <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estruturas para determinar se a primeira é maior que ou igual à segunda."
  remarks: "Se qualquer instância de `x` ou `y` é null, o valor da <xref:System.Data.SqlTypes.SqlBoolean>será nulo.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a primeira instância é maior que ou igual à segunda instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)
  id: op_Implicit(System.Boolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Implicit(Boolean)
  nameWithType: SqlBoolean.op_Implicit(Boolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Implicit(Boolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Implicit (bool x);
    parameters:
    - id: x
      type: System.Boolean
      description: "A ser adicionado."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  overload: System.Data.SqlTypes.SqlBoolean.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Inequality(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_Inequality(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Inequality(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara duas instâncias do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> para determinar se eles não são iguais."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que é <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se as duas instâncias não forem iguais ou <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias são iguais. Se qualquer instância de <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> for nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlBoolean.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_LessThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_LessThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_LessThan(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara duas instâncias do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> para determinar se a primeira for menor que o segundo."
  remarks: "Se qualquer instância de `x` ou `y` é null, o valor da <xref:System.Data.SqlTypes.SqlBoolean>será nulo.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a primeira instância for menor que a segunda instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_LessThanOrEqual(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara duas instâncias do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> para determinar se a primeira é menor ou igual à segunda."
  remarks: "Se qualquer instância de `x` ou `y` é null, o valor da <xref:System.Data.SqlTypes.SqlBoolean>será nulo.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a primeira instância é menor ou igual à segunda instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)
  id: op_LogicalNot(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_LogicalNot(SqlBoolean)
  nameWithType: SqlBoolean.op_LogicalNot(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_LogicalNot(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Executa uma operação não em uma <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LogicalNot (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "O <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> em que a operação não será executada."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> com o <xref:System.Data.SqlTypes.SqlBoolean.Value*> <xref href=&quot;System.Data.SqlTypes.SqlBoolean.True&quot;> </xref> se argumento for true, <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref> se o argumento era nulo, e <xref href=&quot;System.Data.SqlTypes.SqlBoolean.False&quot;> </xref> caso contrário.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlBoolean.op_LogicalNot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)
  id: op_OnesComplement(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_OnesComplement(SqlBoolean)
  nameWithType: SqlBoolean.op_OnesComplement(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_OnesComplement(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Executa um um complemento a operação em fornecido <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estruturas."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_OnesComplement (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "O complemento de fornecido <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.op_OnesComplement*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)
  id: op_True(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_True(SqlBoolean)
  nameWithType: SqlBoolean.op_True(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_True(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "O operador true pode ser usado para testar o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> para determinar se é true.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  syntax:
    content: public static bool op_True (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "O <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura a ser testada."
    return:
      type: System.Boolean
      description: "Retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o parâmetro fornecido é <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> for true, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> caso contrário."
  overload: System.Data.SqlTypes.SqlBoolean.op_True*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Or(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.Or(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.Or(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Executa uma operação OR bit a bit em dois especificado <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estruturas."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Or (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura cujo valor é o resultado da operação OR bit a bit."
  overload: System.Data.SqlTypes.SqlBoolean.Or*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Parse(String)
  nameWithType: SqlBoolean.Parse(String)
  fullName: System.Data.SqlTypes.SqlBoolean.Parse(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte especificado <xref:System.String>representação de um valor lógico para seus <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> equivalente.</xref:System.String>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Parse (string s);
    parameters:
    - id: s
      type: System.String
      description: "O <xref:System.String>a ser convertido.</xref:System.String>"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura que contém o valor analisado."
  overload: System.Data.SqlTypes.SqlBoolean.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Esse membro oferece suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no seu código."
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "An <xref uid=&quot;langword_csharp_XmlSchema&quot; name=&quot;XmlSchema&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Esse membro oferece suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no seu código."
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: <xref uid="langword_csharp_XmlReader " name="XmlReader " href=""></xref>
  overload: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Esse membro oferece suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no seu código."
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: <xref uid="langword_csharp_XmlWriter " name="XmlWriter " href=""></xref>
  overload: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlByte()
  nameWithType: SqlBoolean.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte essa <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> estrutura cujo valor é 1 ou 0. Se o <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> valor da estrutura é igual a <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, o novo <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> valor da estrutura é 1. Caso contrário, o novo <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> valor da estrutura é 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlDecimal()
  nameWithType: SqlBoolean.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte essa <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> estrutura cujo valor é 1 ou 0. Se o <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> valor da estrutura é igual a <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> , em seguida, o novo <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> valor da estrutura é 1. Caso contrário, o novo <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> valor da estrutura é 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlDouble()
  nameWithType: SqlBoolean.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte essa <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref> estrutura cujo valor é 1 ou 0. Se o <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> valor da estrutura é igual a <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> , em seguida, o novo <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref> valor da estrutura é 1. Caso contrário, o novo <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref> valor da estrutura é 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlInt16()
  nameWithType: SqlBoolean.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt16()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte essa <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "Um novo <xref uid=&quot;langword_csharp_SqlInt16&quot; name=&quot;SqlInt16&quot; href=&quot;&quot;> </xref> estrutura cujo valor é 1 ou 0. Se o <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> valor da estrutura é igual a <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> , em seguida, o novo <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref> valor da estrutura é 1. Caso contrário, o novo <xref uid=&quot;langword_csharp_SqlInt16&quot; name=&quot;SqlInt16&quot; href=&quot;&quot;> </xref> valor da estrutura é 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlInt32()
  nameWithType: SqlBoolean.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt32()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte essa <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "Um novo <xref uid=&quot;langword_csharp_SqlInt32&quot; name=&quot;SqlInt32&quot; href=&quot;&quot;> </xref> estrutura cujo valor é 1 ou 0. Se o <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> valor da estrutura é igual a <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, o novo <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref> valor da estrutura é 1. Caso contrário, o novo <xref uid=&quot;langword_csharp_SqlInt32&quot; name=&quot;SqlInt32&quot; href=&quot;&quot;> </xref> valor da estrutura é 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlInt64()
  nameWithType: SqlBoolean.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt64()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte essa <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Um novo <xref uid=&quot;langword_csharp_SqlInt64&quot; name=&quot;SqlInt64&quot; href=&quot;&quot;> </xref> estrutura cujo valor é 1 ou 0. Se o <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> valor da estrutura é igual a <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, o novo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> valor da estrutura é 1. Caso contrário, o novo <xref uid=&quot;langword_csharp_SqlInt64&quot; name=&quot;SqlInt64&quot; href=&quot;&quot;> </xref> valor da estrutura é 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlMoney()
  nameWithType: SqlBoolean.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlMoney()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte essa <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> estrutura cujo valor é 1 ou 0. Se o <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> valor da estrutura é igual a <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, o novo <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> valor é 1. Se o <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> valor da estrutura é igual a <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, o novo <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> valor é 0. Se <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> valor da estrutura não é 1 nem 0, o novo <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> valor é <xref href=&quot;System.Data.SqlTypes.SqlMoney.Null&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlSingle()
  nameWithType: SqlBoolean.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlSingle()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte essa <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura cujo valor é 1 ou 0.       Se o <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> valor igual a true da estrutura, o novo <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> valor da estrutura é 1; caso contrário, o novo <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> valor da estrutura é 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlString()
  nameWithType: SqlBoolean.ToSqlString()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte essa <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlString ToSqlString ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlString
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura cujo valor é 1 ou 0. Se o <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> valor da estrutura é igual a <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> , em seguida, <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> valor da estrutura é 1. Caso contrário, o novo <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> valor da estrutura é 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlBoolean.ToString()
  fullName: System.Data.SqlTypes.SqlBoolean.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte essa <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura como uma cadeia de caracteres."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém o valor da <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se o valor for nulo, a cadeia de caracteres conterá &quot;null&quot;."
  overload: System.Data.SqlTypes.SqlBoolean.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.True
  id: "True"
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: "True"
  nameWithType: SqlBoolean.True
  fullName: System.Data.SqlTypes.SqlBoolean.True
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Representa um valor true que pode ser atribuído ao <xref:System.Data.SqlTypes.SqlBoolean.Value*>propriedade de uma instância do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  remarks: "O campo True é uma constante para o <xref:System.Data.SqlTypes.SqlBoolean>estrutura.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlBoolean True;
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Value
  id: Value
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Value
  nameWithType: SqlBoolean.Value
  fullName: System.Data.SqlTypes.SqlBoolean.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém o <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> valor da estrutura. Essa propriedade é somente leitura."
  syntax:
    content: public bool Value { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref> is <xref href=&quot;System.Data.SqlTypes.SqlBoolean.True&quot;></xref>; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlBoolean.Value*
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "A propriedade é definida como null."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Xor(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.Xor(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.Xor(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Executa uma operação OR exclusivo bit a bit nos parâmetros fornecidos."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Xor (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "Um <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "O resultado da operação lógica XOR."
  overload: System.Data.SqlTypes.SqlBoolean.Xor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Zero
  id: Zero
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Zero
  nameWithType: SqlBoolean.Zero
  fullName: System.Data.SqlTypes.SqlBoolean.Zero
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Representa um valor igual a zero que pode ser atribuído para o <xref:System.Data.SqlTypes.SqlBoolean.ByteValue*>propriedade de uma instância do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> estrutura.</xref:System.Data.SqlTypes.SqlBoolean.ByteValue*>"
  remarks: "O campo de Zero é uma constante para o <xref:System.Data.SqlTypes.SqlBoolean>estrutura.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlBoolean Zero;
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlNullValueException
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlNullValueException
  nameWithType: SqlNullValueException
  fullName: System.Data.SqlTypes.SqlNullValueException
- uid: System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: SqlBoolean(Boolean)
  nameWithType: SqlBoolean.SqlBoolean(Boolean)
  fullName: System.Data.SqlTypes.SqlBoolean.SqlBoolean(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: SqlBoolean(Int32)
  nameWithType: SqlBoolean.SqlBoolean(Int32)
  fullName: System.Data.SqlTypes.SqlBoolean.SqlBoolean(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: And(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.And(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.And(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlBoolean.ByteValue
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ByteValue
  nameWithType: SqlBoolean.ByteValue
  fullName: System.Data.SqlTypes.SqlBoolean.ByteValue
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: CompareTo(SqlBoolean)
  nameWithType: SqlBoolean.CompareTo(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.CompareTo(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlBoolean.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlBoolean.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlBoolean.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlBoolean.Equals(Object)
  fullName: System.Data.SqlTypes.SqlBoolean.Equals(Object)
- uid: System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Equals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.Equals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.Equals(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.False
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: "False"
  nameWithType: SqlBoolean.False
  fullName: System.Data.SqlTypes.SqlBoolean.False
- uid: System.Data.SqlTypes.SqlBoolean.GetHashCode
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlBoolean.GetHashCode()
  fullName: System.Data.SqlTypes.SqlBoolean.GetHashCode()
- uid: System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlBoolean.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlBoolean.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GreaterThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.GreaterThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.GreaterThan(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GreaterThanOrEquals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.GreaterThanOrEquals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.IsFalse
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: IsFalse
  nameWithType: SqlBoolean.IsFalse
  fullName: System.Data.SqlTypes.SqlBoolean.IsFalse
- uid: System.Data.SqlTypes.SqlBoolean.IsNull
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: IsNull
  nameWithType: SqlBoolean.IsNull
  fullName: System.Data.SqlTypes.SqlBoolean.IsNull
- uid: System.Data.SqlTypes.SqlBoolean.IsTrue
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: IsTrue
  nameWithType: SqlBoolean.IsTrue
  fullName: System.Data.SqlTypes.SqlBoolean.IsTrue
- uid: System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: LessThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.LessThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.LessThan(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: LessThanOrEquals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.LessThanOrEquals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: NotEquals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.NotEquals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.NotEquals(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.Null
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: "Null"
  nameWithType: SqlBoolean.Null
  fullName: System.Data.SqlTypes.SqlBoolean.Null
- uid: System.Data.SqlTypes.SqlBoolean.One
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: One
  nameWithType: SqlBoolean.One
  fullName: System.Data.SqlTypes.SqlBoolean.One
- uid: System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: OnesComplement(SqlBoolean)
  nameWithType: SqlBoolean.OnesComplement(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.OnesComplement(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_BitwiseAnd(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_BitwiseAnd(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_BitwiseOr(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_BitwiseOr(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Equality(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_Equality(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Equality(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_ExclusiveOr(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_ExclusiveOr(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Boolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlBoolean.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlByte)
  nameWithType: SqlBoolean.op_Explicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlByte)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlBoolean.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlDouble)
  nameWithType: SqlBoolean.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlDouble)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlInt16)
  nameWithType: SqlBoolean.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlInt32)
  nameWithType: SqlBoolean.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlInt64)
  nameWithType: SqlBoolean.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlMoney)
  nameWithType: SqlBoolean.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlSingle)
  nameWithType: SqlBoolean.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlString)
  nameWithType: SqlBoolean.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlString)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_False(SqlBoolean)
  nameWithType: SqlBoolean.op_False(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_False(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_GreaterThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_GreaterThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_GreaterThan(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Implicit(Boolean)
  nameWithType: SqlBoolean.op_Implicit(Boolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Implicit(Boolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Inequality(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_Inequality(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Inequality(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_LessThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_LessThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_LessThan(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_LessThanOrEqual(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_LessThanOrEqual(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_LogicalNot(SqlBoolean)
  nameWithType: SqlBoolean.op_LogicalNot(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_LogicalNot(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_OnesComplement(SqlBoolean)
  nameWithType: SqlBoolean.op_OnesComplement(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_OnesComplement(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_True(SqlBoolean)
  nameWithType: SqlBoolean.op_True(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_True(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Or(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.Or(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.Or(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.Parse(System.String)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Parse(String)
  nameWithType: SqlBoolean.Parse(String)
  fullName: System.Data.SqlTypes.SqlBoolean.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlByte
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlByte()
  nameWithType: SqlBoolean.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlByte()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlDecimal()
  nameWithType: SqlBoolean.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDouble
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlDouble()
  nameWithType: SqlBoolean.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlDouble()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt16
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlInt16()
  nameWithType: SqlBoolean.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt16()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt32
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlInt32()
  nameWithType: SqlBoolean.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt32()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt64
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlInt64()
  nameWithType: SqlBoolean.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt64()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlMoney
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlMoney()
  nameWithType: SqlBoolean.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlMoney()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlSingle
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlSingle()
  nameWithType: SqlBoolean.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlSingle()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlString
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlString()
  nameWithType: SqlBoolean.ToSqlString()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlString()
- uid: System.Data.SqlTypes.SqlBoolean.ToString
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToString()
  nameWithType: SqlBoolean.ToString()
  fullName: System.Data.SqlTypes.SqlBoolean.ToString()
- uid: System.Data.SqlTypes.SqlBoolean.True
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: "True"
  nameWithType: SqlBoolean.True
  fullName: System.Data.SqlTypes.SqlBoolean.True
- uid: System.Data.SqlTypes.SqlBoolean.Value
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Value
  nameWithType: SqlBoolean.Value
  fullName: System.Data.SqlTypes.SqlBoolean.Value
- uid: System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Xor(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.Xor(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.Xor(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.Zero
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Zero
  nameWithType: SqlBoolean.Zero
  fullName: System.Data.SqlTypes.SqlBoolean.Zero
- uid: System.Data.SqlTypes.SqlBoolean.#ctor*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean.SqlBoolean
- uid: System.Data.SqlTypes.SqlBoolean.And*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: And
  nameWithType: SqlBoolean.And
- uid: System.Data.SqlTypes.SqlBoolean.ByteValue*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ByteValue
  nameWithType: SqlBoolean.ByteValue
- uid: System.Data.SqlTypes.SqlBoolean.CompareTo*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: CompareTo
  nameWithType: SqlBoolean.CompareTo
- uid: System.Data.SqlTypes.SqlBoolean.Equals*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Equals
  nameWithType: SqlBoolean.Equals
- uid: System.Data.SqlTypes.SqlBoolean.GetHashCode*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GetHashCode
  nameWithType: SqlBoolean.GetHashCode
- uid: System.Data.SqlTypes.SqlBoolean.GetXsdType*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GetXsdType
  nameWithType: SqlBoolean.GetXsdType
- uid: System.Data.SqlTypes.SqlBoolean.GreaterThan*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GreaterThan
  nameWithType: SqlBoolean.GreaterThan
- uid: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GreaterThanOrEquals
  nameWithType: SqlBoolean.GreaterThanOrEquals
- uid: System.Data.SqlTypes.SqlBoolean.IsFalse*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: IsFalse
  nameWithType: SqlBoolean.IsFalse
- uid: System.Data.SqlTypes.SqlBoolean.IsNull*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: IsNull
  nameWithType: SqlBoolean.IsNull
- uid: System.Data.SqlTypes.SqlBoolean.IsTrue*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: IsTrue
  nameWithType: SqlBoolean.IsTrue
- uid: System.Data.SqlTypes.SqlBoolean.LessThan*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: LessThan
  nameWithType: SqlBoolean.LessThan
- uid: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: LessThanOrEquals
  nameWithType: SqlBoolean.LessThanOrEquals
- uid: System.Data.SqlTypes.SqlBoolean.NotEquals*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: NotEquals
  nameWithType: SqlBoolean.NotEquals
- uid: System.Data.SqlTypes.SqlBoolean.OnesComplement*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: OnesComplement
  nameWithType: SqlBoolean.OnesComplement
- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_BitwiseAnd
  nameWithType: SqlBoolean.op_BitwiseAnd
- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_BitwiseOr
  nameWithType: SqlBoolean.op_BitwiseOr
- uid: System.Data.SqlTypes.SqlBoolean.op_Equality*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Equality
  nameWithType: SqlBoolean.op_Equality
- uid: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_ExclusiveOr
  nameWithType: SqlBoolean.op_ExclusiveOr
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit
  nameWithType: SqlBoolean.op_Explicit
- uid: System.Data.SqlTypes.SqlBoolean.op_False*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_False
  nameWithType: SqlBoolean.op_False
- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlBoolean.op_GreaterThan
- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlBoolean.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlBoolean.op_Implicit*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Implicit
  nameWithType: SqlBoolean.op_Implicit
- uid: System.Data.SqlTypes.SqlBoolean.op_Inequality*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Inequality
  nameWithType: SqlBoolean.op_Inequality
- uid: System.Data.SqlTypes.SqlBoolean.op_LessThan*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_LessThan
  nameWithType: SqlBoolean.op_LessThan
- uid: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlBoolean.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlBoolean.op_LogicalNot*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_LogicalNot
  nameWithType: SqlBoolean.op_LogicalNot
- uid: System.Data.SqlTypes.SqlBoolean.op_OnesComplement*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_OnesComplement
  nameWithType: SqlBoolean.op_OnesComplement
- uid: System.Data.SqlTypes.SqlBoolean.op_True*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_True
  nameWithType: SqlBoolean.op_True
- uid: System.Data.SqlTypes.SqlBoolean.Or*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Or
  nameWithType: SqlBoolean.Or
- uid: System.Data.SqlTypes.SqlBoolean.Parse*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Parse
  nameWithType: SqlBoolean.Parse
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlByte*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlByte
  nameWithType: SqlBoolean.ToSqlByte
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlDecimal
  nameWithType: SqlBoolean.ToSqlDecimal
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDouble*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlDouble
  nameWithType: SqlBoolean.ToSqlDouble
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt16*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlInt16
  nameWithType: SqlBoolean.ToSqlInt16
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt32*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlInt32
  nameWithType: SqlBoolean.ToSqlInt32
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt64*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlInt64
  nameWithType: SqlBoolean.ToSqlInt64
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlMoney*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlMoney
  nameWithType: SqlBoolean.ToSqlMoney
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlSingle*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlSingle
  nameWithType: SqlBoolean.ToSqlSingle
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlString*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlString
  nameWithType: SqlBoolean.ToSqlString
- uid: System.Data.SqlTypes.SqlBoolean.ToString*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToString
  nameWithType: SqlBoolean.ToString
- uid: System.Data.SqlTypes.SqlBoolean.Value*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Value
  nameWithType: SqlBoolean.Value
- uid: System.Data.SqlTypes.SqlBoolean.Xor*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Xor
  nameWithType: SqlBoolean.Xor
