### YamlMime:ManagedReference
items:
- uid: System.Net.Authorization
  id: Authorization
  children:
  - System.Net.Authorization.#ctor(System.String)
  - System.Net.Authorization.#ctor(System.String,System.Boolean)
  - System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)
  - System.Net.Authorization.Complete
  - System.Net.Authorization.ConnectionGroupId
  - System.Net.Authorization.Message
  - System.Net.Authorization.MutuallyAuthenticated
  - System.Net.Authorization.ProtectionRealm
  langs:
  - csharp
  name: Authorization
  nameWithType: Authorization
  fullName: System.Net.Authorization
  type: Class
  summary: "Contém uma mensagem de autenticação para um servidor de Internet."
  remarks: "O <xref:System.Net.AuthenticationManager>retorna uma instância da classe de autorização que contém uma mensagem de autenticação.</xref:System.Net.AuthenticationManager> Esta mensagem é enviada para o servidor de Internet para indicar que o cliente (como <xref:System.Net.WebRequest>ou um de seus descendentes) está autorizado a acessar o servidor.</xref:System.Net.WebRequest>       A instância de autorização é criada pelo módulo de autenticação que o <xref:System.Net.AuthenticationManager>designa para manipular a solicitação.</xref:System.Net.AuthenticationManager>"
  syntax:
    content: public class Authorization
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Authorization.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Authorization
  langs:
  - csharp
  name: Authorization(String)
  nameWithType: Authorization.Authorization(String)
  fullName: System.Net.Authorization.Authorization(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Cria uma nova instância do <xref href=&quot;System.Net.Authorization&quot;> </xref> classe com a mensagem de autorização especificado."
  remarks: "O <xref:System.Net.Authorization>instância é criada com o <xref:System.Net.Authorization.Message%2A>propriedade definida como `token` e <xref:System.Net.Authorization.Complete%2A>propriedade definida como `true`.</xref:System.Net.Authorization.Complete%2A> </xref:System.Net.Authorization.Message%2A> </xref:System.Net.Authorization>"
  example:
  - "The following code example shows how to create an <xref:System.Net.Authorization> object. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#3](~/add/codesnippet/csharp/m-system.net.authorizati_0_1.cs)]\n [!code-cpp[System.Net.Authentication#3](~/add/codesnippet/cpp/m-system.net.authorizati_0_1.cpp)]\n [!code-vb[System.Net.Authentication#3](~/add/codesnippet/visualbasic/m-system.net.authorizati_0_1.vb)]"
  syntax:
    content: public Authorization (string token);
    parameters:
    - id: token
      type: System.String
      description: "A mensagem de autorização criptografados esperada pelo servidor."
  overload: System.Net.Authorization.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Net.Authorization
  langs:
  - csharp
  name: Authorization(String,Boolean)
  nameWithType: Authorization.Authorization(String,Boolean)
  fullName: System.Net.Authorization.Authorization(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Cria uma nova instância do <xref href=&quot;System.Net.Authorization&quot;> </xref> classe com o status de mensagem e a conclusão de autorização especificada."
  remarks: "O <xref:System.Net.Authorization>instância é criada com o <xref:System.Net.Authorization.Message%2A>propriedade definida como `token` e <xref:System.Net.Authorization.Complete%2A>propriedade definida como `finished`.</xref:System.Net.Authorization.Complete%2A> </xref:System.Net.Authorization.Message%2A> </xref:System.Net.Authorization>"
  example:
  - "The following code example creates a new instance of the <xref:System.Net.Authorization> class with the specified authorization message and completion status.  \n  \n [!code-cpp[Authorization_ProtectionRealm#1](~/add/codesnippet/cpp/m-system.net.authorizati_2_1.cpp)]\n [!code-vb[Authorization_ProtectionRealm#1](~/add/codesnippet/visualbasic/m-system.net.authorizati_2_1.vb)]\n [!code-cs[Authorization_ProtectionRealm#1](~/add/codesnippet/csharp/m-system.net.authorizati_2_1.cs)]"
  syntax:
    content: public Authorization (string token, bool finished);
    parameters:
    - id: token
      type: System.String
      description: "A mensagem de autorização criptografados esperada pelo servidor."
    - id: finished
      type: System.Boolean
      description: "O status de conclusão da tentativa de autorização. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a tentativa de autorização for concluído; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Authorization.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)
  id: '#ctor(System.String,System.Boolean,System.String)'
  parent: System.Net.Authorization
  langs:
  - csharp
  name: Authorization(String,Boolean,String)
  nameWithType: Authorization.Authorization(String,Boolean,String)
  fullName: System.Net.Authorization.Authorization(String,Boolean,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Cria uma nova instância do <xref href=&quot;System.Net.Authorization&quot;> </xref> classe com a mensagem de autorização especificada, o status de conclusão e o identificador de grupo de conexão."
  remarks: ''
  example:
  - "The following code example creates a new instance of the <xref:System.Net.Authorization> class with the specified authorization message, completion status, and connection group identifier.  \n  \n [!code-vb[Authorization_Constructor3#1](~/add/codesnippet/visualbasic/m-system.net.authorizati_1_1.vb)]\n [!code-cpp[Authorization_Constructor3#1](~/add/codesnippet/cpp/m-system.net.authorizati_1_1.cpp)]\n [!code-cs[Authorization_Constructor3#1](~/add/codesnippet/csharp/m-system.net.authorizati_1_1.cs)]"
  syntax:
    content: public Authorization (string token, bool finished, string connectionGroupId);
    parameters:
    - id: token
      type: System.String
      description: "A mensagem de autorização criptografados esperada pelo servidor."
    - id: finished
      type: System.Boolean
      description: "O status de conclusão da tentativa de autorização. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a tentativa de autorização for concluído; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: connectionGroupId
      type: System.String
      description: "Um identificador exclusivo que pode ser usado para criar o cliente-servidor privado conexões que estão associadas somente a esse esquema de autenticação."
  overload: System.Net.Authorization.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.Complete
  id: Complete
  parent: System.Net.Authorization
  langs:
  - csharp
  name: Complete
  nameWithType: Authorization.Complete
  fullName: System.Net.Authorization.Complete
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém o status de conclusão da autorização."
  remarks: "A propriedade completa é definida como `true` quando o processo de autenticação entre o cliente e o servidor for concluído. Alguns módulos de autenticação, como o módulo de Kerberos, usam várias viagens de ida e entre o cliente e servidor para concluir o processo de autenticação. Para manter o <xref:System.Net.WebRequest>ou descendentes que iniciou o processo de autenticação interrompam enquanto autorização estiver ocorrendo, o módulo de autenticação define a propriedade completa `false`.</xref:System.Net.WebRequest>"
  example:
  - "The following code example uses the Complete property to get the completion status of the authorization. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#5](~/add/codesnippet/csharp/p-system.net.authorizati_1_1.cs)]\n [!code-cpp[System.Net.Authentication#5](~/add/codesnippet/cpp/p-system.net.authorizati_1_1.cpp)]\n [!code-vb[System.Net.Authentication#5](~/add/codesnippet/visualbasic/p-system.net.authorizati_1_1.vb)]"
  syntax:
    content: public bool Complete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o processo de autenticação é concluído; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Authorization.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.ConnectionGroupId
  id: ConnectionGroupId
  parent: System.Net.Authorization
  langs:
  - csharp
  name: ConnectionGroupId
  nameWithType: Authorization.ConnectionGroupId
  fullName: System.Net.Authorization.ConnectionGroupId
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém um identificador exclusivo para conexões de usuário específico."
  remarks: "A propriedade ConnectionGroupId é uma cadeia de caracteres exclusiva que associa uma conexão com uma entidade específica de autenticação. Por exemplo, o módulo de autorização de NTLM agrupa as informações de credenciais de autenticação para uma conexão específica para evitar a reutilização inválida da conexão."
  example:
  - "The following code example uses the ConnectionGroupId property to get the group identifier returned by the server. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#5](~/add/codesnippet/csharp/p-system.net.authorizati_3_1.cs)]\n [!code-cpp[System.Net.Authentication#5](~/add/codesnippet/cpp/p-system.net.authorizati_3_1.cpp)]\n [!code-vb[System.Net.Authentication#5](~/add/codesnippet/visualbasic/p-system.net.authorizati_3_1.vb)]"
  syntax:
    content: public string ConnectionGroupId { get; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres exclusiva que associa uma conexão uma entidade de autenticação."
  overload: System.Net.Authorization.ConnectionGroupId*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.Message
  id: Message
  parent: System.Net.Authorization
  langs:
  - csharp
  name: Message
  nameWithType: Authorization.Message
  fullName: System.Net.Authorization.Message
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém a mensagem retornada para o servidor em resposta a um desafio de autenticação."
  remarks: "A propriedade de mensagem contém a cadeia de caracteres de autorização que o cliente será retornada para o servidor quando acessar recursos protegidos. O conteúdo real da mensagem é definido pelo tipo de autenticação que o cliente e o servidor estão usando. A autenticação básica HTTP, por exemplo, usa uma mensagem diferente que a autenticação Kerberos.       Quando um módulo de autenticação oferece suporte a pré-autenticação, a propriedade de mensagem é enviada com a solicitação inicial."
  example:
  - "The following code example uses the Message property to get the message returned to the server in response to an authentication challenge. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#5](~/add/codesnippet/csharp/p-system.net.authorizati_2_1.cs)]\n [!code-cpp[System.Net.Authentication#5](~/add/codesnippet/cpp/p-system.net.authorizati_2_1.cpp)]\n [!code-vb[System.Net.Authentication#5](~/add/codesnippet/visualbasic/p-system.net.authorizati_2_1.vb)]"
  syntax:
    content: public string Message { get; }
    return:
      type: System.String
      description: "A mensagem que será retornada para o servidor em resposta a um desafio de autenticação."
  overload: System.Net.Authorization.Message*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.MutuallyAuthenticated
  id: MutuallyAuthenticated
  parent: System.Net.Authorization
  langs:
  - csharp
  name: MutuallyAuthenticated
  nameWithType: Authorization.MutuallyAuthenticated
  fullName: System.Net.Authorization.MutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um <xref:System.Boolean>valor que indica se a autenticação mútua ocorreu.</xref:System.Boolean>"
  remarks: "Essa propriedade retorna `false` se a autenticação não foi concluída."
  syntax:
    content: public bool MutuallyAuthenticated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cliente e servidor foram autenticadas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Authorization.MutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.ProtectionRealm
  id: ProtectionRealm
  parent: System.Net.Authorization
  langs:
  - csharp
  name: ProtectionRealm
  nameWithType: Authorization.ProtectionRealm
  fullName: System.Net.Authorization.ProtectionRealm
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o prefixo para URIs Uniform Resource Identifier () que podem ser autenticados com o <xref:System.Net.Authorization.Message*>propriedade.</xref:System.Net.Authorization.Message*>"
  remarks: "A propriedade ProtectionRealm contém uma lista de prefixos de URI que o <xref:System.Net.Authorization.Message%2A>propriedade pode ser usada para autenticar.</xref:System.Net.Authorization.Message%2A> <xref:System.Net.WebRequest>e seus descendentes comparam um URI para essa lista para determinar se o <xref:System.Net.Authorization>é válido para um URI específico.</xref:System.Net.Authorization></xref:System.Net.WebRequest>"
  example:
  - "The following code example gets or sets the prefix for URIs that can be authenticated with the <xref:System.Net.Authorization.Message%2A> property.  \n  \n [!code-cpp[Authorization_ProtectionRealm#1](~/add/codesnippet/cpp/p-system.net.authorizati_0_1.cpp)]\n [!code-vb[Authorization_ProtectionRealm#1](~/add/codesnippet/visualbasic/p-system.net.authorizati_0_1.vb)]\n [!code-cs[Authorization_ProtectionRealm#1](~/add/codesnippet/csharp/p-system.net.authorizati_0_1.cs)]"
  syntax:
    content: public string[] ProtectionRealm { get; set; }
    return:
      type: System.String[]
      description: "Uma matriz de cadeias de caracteres que contém os prefixos URI."
  overload: System.Net.Authorization.ProtectionRealm*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Authorization.#ctor(System.String)
  parent: System.Net.Authorization
  isExternal: false
  name: Authorization(String)
  nameWithType: Authorization.Authorization(String)
  fullName: System.Net.Authorization.Authorization(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Authorization.#ctor(System.String,System.Boolean)
  parent: System.Net.Authorization
  isExternal: false
  name: Authorization(String,Boolean)
  nameWithType: Authorization.Authorization(String,Boolean)
  fullName: System.Net.Authorization.Authorization(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)
  parent: System.Net.Authorization
  isExternal: false
  name: Authorization(String,Boolean,String)
  nameWithType: Authorization.Authorization(String,Boolean,String)
  fullName: System.Net.Authorization.Authorization(String,Boolean,String)
- uid: System.Net.Authorization.Complete
  parent: System.Net.Authorization
  isExternal: false
  name: Complete
  nameWithType: Authorization.Complete
  fullName: System.Net.Authorization.Complete
- uid: System.Net.Authorization.ConnectionGroupId
  parent: System.Net.Authorization
  isExternal: false
  name: ConnectionGroupId
  nameWithType: Authorization.ConnectionGroupId
  fullName: System.Net.Authorization.ConnectionGroupId
- uid: System.Net.Authorization.Message
  parent: System.Net.Authorization
  isExternal: false
  name: Message
  nameWithType: Authorization.Message
  fullName: System.Net.Authorization.Message
- uid: System.Net.Authorization.MutuallyAuthenticated
  parent: System.Net.Authorization
  isExternal: false
  name: MutuallyAuthenticated
  nameWithType: Authorization.MutuallyAuthenticated
  fullName: System.Net.Authorization.MutuallyAuthenticated
- uid: System.Net.Authorization.ProtectionRealm
  parent: System.Net.Authorization
  isExternal: false
  name: ProtectionRealm
  nameWithType: Authorization.ProtectionRealm
  fullName: System.Net.Authorization.ProtectionRealm
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Authorization.#ctor*
  parent: System.Net.Authorization
  isExternal: false
  name: Authorization
  nameWithType: Authorization.Authorization
- uid: System.Net.Authorization.Complete*
  parent: System.Net.Authorization
  isExternal: false
  name: Complete
  nameWithType: Authorization.Complete
- uid: System.Net.Authorization.ConnectionGroupId*
  parent: System.Net.Authorization
  isExternal: false
  name: ConnectionGroupId
  nameWithType: Authorization.ConnectionGroupId
- uid: System.Net.Authorization.Message*
  parent: System.Net.Authorization
  isExternal: false
  name: Message
  nameWithType: Authorization.Message
- uid: System.Net.Authorization.MutuallyAuthenticated*
  parent: System.Net.Authorization
  isExternal: false
  name: MutuallyAuthenticated
  nameWithType: Authorization.MutuallyAuthenticated
- uid: System.Net.Authorization.ProtectionRealm*
  parent: System.Net.Authorization
  isExternal: false
  name: ProtectionRealm
  nameWithType: Authorization.ProtectionRealm
