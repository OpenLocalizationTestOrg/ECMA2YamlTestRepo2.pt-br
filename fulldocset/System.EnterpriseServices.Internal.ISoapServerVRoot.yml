### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot
  id: ISoapServerVRoot
  children:
  - System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)
  - System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)
  langs:
  - csharp
  name: ISoapServerVRoot
  nameWithType: ISoapServerVRoot
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot
  type: Interface
  summary: "Publica autenticadas e criptografadas raízes virtuais de SOAP em servidores."
  remarks: "Consulte <xref:System.EnterpriseServices.Internal.SoapServerVRoot>para a implementação padrão.</xref:System.EnterpriseServices.Internal.SoapServerVRoot>       ISoapServerVRoot é usado internamente pelo .NET Framework. Você não precisa usá-lo diretamente no seu código."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("A31B6577-71D2-4344-AEDF-ADC1B0DC5347")]

      public interface ISoapServerVRoot
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  id: CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  langs:
  - csharp
  name: CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)
  nameWithType: ISoapServerVRoot.CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Cria uma raiz virtual do SOAP com opções de segurança."
  syntax:
    content: public void CreateVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, out string baseUrl, out string virtualRoot, out string physicalPath);
    parameters:
    - id: rootWebServer
      type: System.String
      description: "O servidor de Web raiz."
    - id: inBaseUrl
      type: System.String
      description: "A URL base que contém a raiz virtual."
    - id: inVirtualRoot
      type: System.String
      description: "O nome da raiz virtual."
    - id: homePage
      type: System.String
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref uid=&quot;langword_csharp_EnableDefaultDoc&quot; name=&quot;EnableDefaultDoc&quot; href=&quot;&quot;> </xref> propriedade for definida; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: discoFile
      type: System.String
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um arquivo de descoberta padrão será criado; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se não houver nenhum arquivo de descoberta. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> e existe um arquivo de Default.disco, o arquivo é excluído."
    - id: secureSockets
      type: System.String
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a criptografia SSL é obrigatória. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: authentication
      type: System.String
      description: "Especifique &quot;anônimo&quot; se nenhuma autenticação deve ser usado (usuário anônimo). Caso contrário, especifique uma cadeia de caracteres vazia."
    - id: operation
      type: System.String
      description: "Não usado. Especifique <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para esse parâmetro."
    - id: baseUrl
      type: System.String
      description: "Quando este método retorna, este parâmetro contém a URL base."
    - id: virtualRoot
      type: System.String
      description: "Quando este método retorna, este parâmetro contém o nome da raiz virtual."
    - id: physicalPath
      type: System.String
      description: "Quando este método retorna, este parâmetro contém o endereço de disco do diretório Virtual raiz."
  overload: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Um chamador na cadeia de chamada não tem permissão para acessar código não gerenciado."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O utilitário SOAP não está disponível."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)
  id: DeleteVirtualRootEx(System.String,System.String,System.String)
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  langs:
  - csharp
  name: DeleteVirtualRootEx(String,String,String)
  nameWithType: ISoapServerVRoot.DeleteVirtualRootEx(String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Exclui uma raiz virtual. Não foi totalmente implementado."
  remarks: "A funcionalidade de excluir uma raiz virtual não está disponível no momento na implementação desta interface. A implementação retorna sem excluir a raiz."
  syntax:
    content: public void DeleteVirtualRootEx (string rootWebServer, string baseUrl, string virtualRoot);
    parameters:
    - id: rootWebServer
      type: System.String
      description: "O servidor de Web raiz."
    - id: baseUrl
      type: System.String
      description: "A URL base que contém a raiz virtual."
    - id: virtualRoot
      type: System.String
      description: "O nome da raiz virtual."
  overload: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Um chamador na cadeia de chamada não tem permissão para acessar código não gerenciado."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O utilitário SOAP não está disponível."
  - type: System.EnterpriseServices.ServicedComponentException
    commentId: T:System.EnterpriseServices.ServicedComponentException
    description: "Falha na chamada para identificar o diretório do sistema."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)
  id: GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  langs:
  - csharp
  name: GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)
  nameWithType: ISoapServerVRoot.GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Retorna o status de segurança de uma raiz virtual do SOAP existente."
  syntax:
    content: public void GetVirtualRootStatus (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string exists, out string secureSockets, out string windowsAuth, out string anonymous, out string homePage, out string discoFile, out string physicalPath, out string baseUrl, out string virtualRoot);
    parameters:
    - id: rootWebServer
      type: System.String
      description: "O servidor de Web raiz."
    - id: inBaseUrl
      type: System.String
      description: "A URL base que contém a raiz virtual."
    - id: inVirtualRoot
      type: System.String
      description: "O nome da raiz virtual."
    - id: exists
      type: System.String
      description: "Quando este método retorna, este parâmetro contém um <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o diretório virtual existir; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: secureSockets
      type: System.String
      description: "Quando este método retorna, este parâmetro contém um <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a criptografia SSL for necessário; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: windowsAuth
      type: System.String
      description: "Quando este método retorna, este parâmetro contém <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a autenticação do Windows for definida, caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: anonymous
      type: System.String
      description: "Quando este método retorna, este parâmetro contém <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se nenhuma autenticação é definida (usuário anônimo); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: homePage
      type: System.String
      description: "Quando este método retorna, este parâmetro contém um <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se do diretório raiz Virtual <xref uid=&quot;langword_csharp_EnableDefaultDoc&quot; name=&quot;EnableDefaultDoc&quot; href=&quot;&quot;> </xref> propriedade for definida; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: discoFile
      type: System.String
      description: "Quando este método retorna, este parâmetro contém um <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se existe um arquivo de Default.disco; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: physicalPath
      type: System.String
      description: "Quando este método retorna, este parâmetro contém o endereço de disco do diretório Virtual raiz."
    - id: baseUrl
      type: System.String
      description: "Quando este método retorna, este parâmetro contém a URL base."
    - id: virtualRoot
      type: System.String
      description: "Quando este método retorna, este parâmetro contém o nome da raiz virtual."
  overload: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.EnterpriseServices.ServicedComponentException
  parent: System.EnterpriseServices
  isExternal: false
  name: ServicedComponentException
  nameWithType: ServicedComponentException
  fullName: System.EnterpriseServices.ServicedComponentException
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  isExternal: false
  name: CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)
  nameWithType: ISoapServerVRoot.CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  isExternal: false
  name: DeleteVirtualRootEx(String,String,String)
  nameWithType: ISoapServerVRoot.DeleteVirtualRootEx(String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(String,String,String)
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  isExternal: false
  name: GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)
  nameWithType: ISoapServerVRoot.GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx*
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  isExternal: false
  name: CreateVirtualRootEx
  nameWithType: ISoapServerVRoot.CreateVirtualRootEx
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx*
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  isExternal: false
  name: DeleteVirtualRootEx
  nameWithType: ISoapServerVRoot.DeleteVirtualRootEx
- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus*
  parent: System.EnterpriseServices.Internal.ISoapServerVRoot
  isExternal: false
  name: GetVirtualRootStatus
  nameWithType: ISoapServerVRoot.GetVirtualRootStatus
