### YamlMime:ManagedReference
items:
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  id: CriticalFinalizerObject
  children:
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  langs:
  - csharp
  name: CriticalFinalizerObject
  nameWithType: CriticalFinalizerObject
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  type: Class
  summary: "Garante que todo o código de finalização em classes derivadas é marcado como crítico."
  remarks: "Classes derivadas da classe CriticalFinalizerObject implicitamente são tratados como uma região de execução restrita (CER).  Isso requer código no finalizador somente chamar código com um contrato de confiabilidade forte. Para obter mais informações sobre as CERs, consulte o <xref:System.Runtime.ConstrainedExecution>namespace.</xref:System.Runtime.ConstrainedExecution>       Em classes derivadas da classe CriticalFinalizerObject, as garantias de runtime (CLR) de linguagem comum que todo o código crítico de finalização terá a oportunidade de executar, fornecido o finalizador segue as regras para uma CER, mesmo em situações em que o CLR forçadamente descarrega um domínio de aplicativo ou anula um thread. Se um finalizador viola as regras para uma CER, ele não pode executar com êxito. Além disso, o CLR estabelece uma ordenação fraca entre finalizadores normais e críticos: para objetos recuperados pela coleta de lixo ao mesmo tempo, todos os finalizadores não críticos são chamados antes de qualquer os finalizadores críticos. Por exemplo, uma classe como <xref:System.IO.FileStream>, que contém dados a <xref:System.Runtime.InteropServices.SafeHandle>classe derivada de CriticalFinalizerObject, pode executar um finalizador padrão para liberar os dados existentes em buffer.</xref:System.Runtime.InteropServices.SafeHandle> </xref:System.IO.FileStream>       Na maioria dos casos, você não precisa escrever classes que derivam da classe CriticalFinalizerObject. A biblioteca de classes do .NET Framework fornece duas classes, <xref:System.Runtime.InteropServices.SafeHandle>e <xref:System.Runtime.InteropServices.CriticalHandle>, que fornecem funcionalidade de finalização crítico para recursos do identificador.</xref:System.Runtime.InteropServices.CriticalHandle> </xref:System.Runtime.InteropServices.SafeHandle> Além disso, o .NET Framework fornece um conjunto de classes boa derivado a <xref:System.Runtime.InteropServices.SafeHandle>classe e esse conjunto está localizado no <xref:Microsoft.Win32.SafeHandles>namespace.</xref:Microsoft.Win32.SafeHandles> </xref:System.Runtime.InteropServices.SafeHandle> Essas classes são projetadas para fornecer funcionalidade comum para dar suporte a identificadores de arquivo e sistema operacional."
  example:
  - "The following code example shows the use of the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class to provide critical finalization for the standard input and output streams. The <xref:Microsoft.Win32.SafeHandles.SafeFileHandle>, derived from the <xref:System.Runtime.InteropServices.SafeHandle> class, is passed to the file stream in the <xref:System.IO.FileStream> constructor.  \n  \n [!code-cs[SafeHandle.SafeFileHandle#1](~/add/codesnippet/csharp/t-system.runtime.constra_0_1.cs)]\n [!code-vb[SafeHandle.SafeFileHandle#1](~/add/codesnippet/visualbasic/t-system.runtime.constra_0_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class CriticalFinalizerObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  id: '#ctor'
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  langs:
  - csharp
  name: CriticalFinalizerObject()
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.CriticalFinalizerObject()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.ConstrainedExecution.CriticalFinalizerObject&quot;> </xref> classe."
  syntax:
    content: protected CriticalFinalizerObject ();
    parameters: []
  overload: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  id: Finalize
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  langs:
  - csharp
  name: Finalize()
  nameWithType: CriticalFinalizerObject.Finalize()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "Libera todos os recursos usados pelo <xref href=&quot;System.Runtime.ConstrainedExecution.CriticalFinalizerObject&quot;> </xref> classe."
  remarks: "O finalizador para qualquer tipos derivados de <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>tem a oportunidade de executar e não será ser interrompida, supondo que o finalizador corretamente segue as regras para uma região de execução restrita (CER).</xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>"
  syntax:
    content: ~CriticalFinalizerObject ();
    parameters: []
  overload: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: CriticalFinalizerObject()
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.CriticalFinalizerObject()
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: Finalize()
  nameWithType: CriticalFinalizerObject.Finalize()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize()
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor*
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: CriticalFinalizerObject
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize*
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: Finalize
  nameWithType: CriticalFinalizerObject.Finalize
