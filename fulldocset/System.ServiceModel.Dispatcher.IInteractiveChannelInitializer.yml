### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  id: IInteractiveChannelInitializer
  children:
  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  langs:
  - csharp
  name: IInteractiveChannelInitializer
  nameWithType: IInteractiveChannelInitializer
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  type: Interface
  summary: "Define os métodos que permitem que um aplicativo cliente para exibir uma interface de usuário para coletar informações de identidade antes de criar o canal."
  remarks: "Implemente a interface IInteractiveChannelInitializer para permitir que um aplicativo cliente exibir uma interface de usuário que permite que o usuário do aplicativo criar ou selecionar as credenciais antes de abrir um canal.       Para implementar IInteractiveChannelInitializer, execute as seguintes etapas no <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>: 1.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>  Solicitar ao usuário e obter um <xref:System.Net.NetworkCredential?displayProperty=fullName>.</xref:System.Net.NetworkCredential?displayProperty=fullName> apropriado      2.  Adicionar um objeto de parâmetro de canal personalizado para a coleção retornada pelo <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>método no <xref:System.ServiceModel.IClientChannel>objeto com um parâmetro de tipo de <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>.</xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> Esse objeto de parâmetro do canal é usado por personalizado <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>para estabelecer os tokens de segurança para o canal.</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>      3.  Retorne.       Para inserir IInteractiveChannelInitializer: 1.  Substitua o <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName>método de <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName>classe.</xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName> </xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName>      2.  Nesse método, determinar se o ponto de extremidade requer uma IInteractiveChannelInitializer e nesse caso, adicione o IInteractiveChannelInitializer para o <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName>coleção.</xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName>       Há duas maneiras que os desenvolvedores de aplicativos podem fazer uso de um IInteractiveChannelInitializer inserido. O aplicativo cliente pode chamar tanto <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>ou <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName>(ou uma versão assíncrona) antes de abrir o canal (o *explícita* abordagem) ou simplesmente chamar a primeira operação (o *implícita* abordagem).</xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> </xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>       Se usar a abordagem implícita, o aplicativo deve chamar a primeira operação em um <xref:System.ServiceModel.ClientBase%601>ou <xref:System.ServiceModel.IClientChannel>extensão.</xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.ClientBase%601> Se ele chama qualquer coisa que não seja a primeira operação, uma exceção será lançada.       Se usar a abordagem explícita, o aplicativo deve executar as seguintes etapas na ordem: 1.  Chame <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>ou <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName>(ou uma versão assíncrona).</xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> </xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>      2.  Quando os inicializadores tem retornado, chame o <xref:System.ServiceModel.ICommunicationObject.Open%2A>método no <xref:System.ServiceModel.IClientChannel>objeto ou no <xref:System.ServiceModel.IClientChannel>objeto retornado do <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName>propriedade.</xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.ICommunicationObject.Open%2A>      3.  Chame operações.       É recomendável que controlam aplicativos de qualidade de produção do processo de interface do usuário, adotando a abordagem explícita.       Aplicativos que usam a abordagem implícita invocar os inicializadores de interface do usuário, mas se o usuário do aplicativo não responder dentro do período de tempo limite de envio da associação, uma exceção é lançada quando a interface do usuário retorna."
  syntax:
    content: public interface IInteractiveChannelInitializer
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  id: BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  langs:
  - csharp
  name: BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Uma chamada assíncrona para começar a usar uma interface do usuário para obter informações de credenciais."
  remarks: "Para implementar <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, execute as seguintes etapas no BeginDisplayInitializationUI: 1.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>  Solicitar que o usuário de que maneira achar mais conveniente e obter um <xref:System.Net.NetworkCredential?displayProperty=fullName>.</xref:System.Net.NetworkCredential?displayProperty=fullName> apropriado      2.  Adicionar um objeto de parâmetro de canal personalizado para a coleção retornada pelo <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>método no <xref:System.ServiceModel.IClientChannel>objeto com um parâmetro de tipo de <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>.</xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> Esse objeto de parâmetro do canal é usado por personalizado <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>para estabelecer os tokens de segurança para o canal.</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>      3.  Retorne."
  syntax:
    content: public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);
    parameters:
    - id: channel
      type: System.ServiceModel.IClientChannel
      description: "O canal do cliente."
    - id: callback
      type: System.AsyncCallback
      description: "O objeto de retorno de chamada."
    - id: state
      type: System.Object
      description: "Os dados de estado."
    return:
      type: System.IAsyncResult
      description: "O &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; usar para chamar quando o processamento foi concluído."
  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  id: EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  langs:
  - csharp
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Chamado quando o <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*>terminou.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*>"
  syntax:
    content: public void EndDisplayInitializationUI (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O &lt;xref:System.IAsyncResult?displayProperty=fullName&gt;."
  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: true
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: BeginDisplayInitializationUI
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: EndDisplayInitializationUI
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI
