### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  id: WorkflowRuntimeService
  children:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  langs:
  - csharp
  name: WorkflowRuntimeService
  nameWithType: WorkflowRuntimeService
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  type: Class
  summary: "Representa a classe base abstrata da qual os serviços de núcleo do mecanismo de tempo de execução do fluxo de trabalho são derivados."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Serviços que derivam da classe WorkflowRuntimeService podem ser iniciados e interrompidos pelo mecanismo de tempo de execução de fluxo de trabalho. A ordem na qual os serviços são iniciados ou interrompidos, no entanto, é indeterminada, e serviços podem exigir o suporte de outros serviços para inicializar próprios corretamente quando eles são iniciados e, por outro lado, podem exigir a dar suporte de outros serviços para corretamente desligado quando eles estão interrompidos. Para resolver esse problema, o mecanismo de tempo de execução do fluxo de trabalho fornece duas fases mecanismos para iniciar e parar serviços. Quando <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>é chamado, o fluxo de trabalho do mecanismo de tempo de execução chama o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>método para cada um dos seus serviços que derivam da classe WorkflowRuntimeService.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>  Depois que todos esses serviços tiverem sido iniciados, o mecanismo de tempo de execução do fluxo de trabalho gera o <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>evento, o que faz com que o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>método ser chamado para cada serviço de mecanismo de tempo de execução do fluxo de trabalho.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> O serviço pode substituir o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>método para participar desse processo de duas fases.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> Da mesma forma, quando <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>é chamado, o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>método, o <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>evento e o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>método fornecem esse mecanismo em duas fases.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>  A propriedade de estado contém um <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>valor que indica se o serviço está iniciando ou parando ou é totalmente iniciado ou parado.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>       Serviços que derivam da classe WorkflowRuntimeService podem gerar o <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName>evento quando encontra uma condição que faz com que uma exceção sem tratamento, chamando <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName>       Serviços derivam a <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>classe, a <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>classe, a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>classe e a <xref:System.Workflow.Runtime.Tracking.TrackingService>classe, por fim, deriva da classe WorkflowRuntimeService.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class WorkflowRuntimeService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: WorkflowRuntimeService()
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.WorkflowRuntimeService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando implementada em uma classe derivada, inicializa uma nova instância do <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref> classe."
  remarks: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>é inicializado como <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>"
  syntax:
    content: protected WorkflowRuntimeService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  id: OnStarted
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: OnStarted()
  nameWithType: WorkflowRuntimeService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando substituído em uma classe derivada, representa o método que será chamado quando o mecanismo de tempo de execução de fluxo de trabalho gerará o <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.Started&quot;> </xref> eventos."
  remarks: "O <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe implementa um mecanismo de partida em duas fases, para que os serviços de mecanismo de tempo de execução do fluxo de trabalho podem executar qualquer inicialização que depende de outros serviços depois que o mecanismo de tempo de execução do fluxo de trabalho foi invocado o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>método para todos os seus serviços de mecanismo de tempo de execução do fluxo de trabalho.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Após o tempo de execução do fluxo de trabalho mecanismo chamou o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>método de todos os seus serviços de mecanismo de tempo de execução do fluxo de trabalho, ele gera o <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> Você pode substituir o método OnStarted para fornecer funcionalidades inicialização final exigidas pelo serviço quando o <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>é gerado.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> A mecânica de assinatura e cancelar a assinatura no <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>evento é tratado internamente.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>      > [!NOTE] > Se seu serviço será adicionado ao mecanismo de tempo de execução de fluxo de trabalho por uma chamada para <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>depois que o mecanismo de tempo de execução do fluxo de trabalho já tiver sido iniciado, o mecanismo de tempo de execução do fluxo de trabalho se chamará <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>em seu serviço.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> No entanto, nessa situação, o <xref:System.Workflow.Runtime.WorkflowRuntime.Started>evento já ocorreu, portanto, seu serviço pode ser necessário que executar qualquer inicialização que ela normalmente executará em OnStarted de dentro de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>método.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Started> Você pode testar <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>para determinar se o mecanismo de tempo de execução do fluxo de trabalho foi iniciado.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>é definido como <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>antes de ser invocado OnStarted.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>  A implementação padrão de OnStarted não realiza nenhuma ação."
  syntax:
    content: protected virtual void OnStarted ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  id: OnStopped
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: OnStopped()
  nameWithType: WorkflowRuntimeService.OnStopped()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando substituído em uma classe derivada, representa o método que será chamado quando o mecanismo de tempo de execução de fluxo de trabalho gerará o <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.Stopped&quot;> </xref> eventos."
  remarks: "O <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe implementa um mecanismo de parada em duas fases, para que os serviços de mecanismo de tempo de execução do fluxo de trabalho poderão reter algumas funcionalidades após sua <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>método é chamado pelo mecanismo de tempo de execução de fluxo de trabalho para que eles podem, se necessário, dar suporte o desligamento de outros serviços.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Após o tempo de execução do fluxo de trabalho mecanismo chamou o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>método de todos os seus serviços de mecanismo de tempo de execução do fluxo de trabalho, ele gera o <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> Você pode substituir o método OnStopped para fornecer alguma funcionalidade do último desligamento exigida pelo seu serviço quando o <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>é gerado.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> A mecânica de assinatura e cancelar a assinatura no <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>evento é tratado internamente.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>      > [!NOTE] > Se seu <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>é removido do mecanismo de tempo de execução de fluxo de trabalho por uma chamada para <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>enquanto o mecanismo de tempo de execução do fluxo de trabalho é executado, o mecanismo de tempo de execução do fluxo de trabalho se chamará <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>em seu serviço.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> No entanto, nessa situação, o método OnStopped não será chamado para o serviço. Portanto, o serviço pode ter que executar qualquer desligamento final que normalmente executaria no OnStopped de dentro de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>método.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> Você pode testar <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>para determinar se o mecanismo de tempo de execução do fluxo de trabalho está em execução.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>é definido como <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>antes de ser invocado OnStopped.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>  A implementação padrão de OnStopped não realiza nenhuma ação."
  syntax:
    content: protected virtual void OnStopped ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  id: RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Gera o <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&quot;> </xref> eventos."
  remarks: "O serviço pode chamar RaiseServicesExceptionNotHandledEvent para gerar o <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName>evento quando encontra uma exceção de que ele não pode tratar durante sua execução.</xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName> Você deve transmitir o <xref:System.Guid>da instância do fluxo de trabalho associada à exceção sem tratamento.</xref:System.Guid> Por exemplo, um serviço de timer pode passar o <xref:System.Guid>associado com o temporizador para o qual a exceção ocorreu.</xref:System.Guid>"
  syntax:
    content: protected void RaiseServicesExceptionNotHandledEvent (Exception exception, Guid instanceId);
    parameters:
    - id: exception
      type: System.Exception
      description: "A exceção que não pôde ser tratada."
    - id: instanceId
      type: System.Guid
      description: "O <xref:System.Guid>da instância do fluxo de trabalho associada à exceção sem tratamento.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  id: Runtime
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Obtém o <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> para este serviço."
  remarks: "O mecanismo de tempo de execução do fluxo de trabalho define essa propriedade antes de chamar <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>no serviço.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>"
  syntax:
    content: protected System.Workflow.Runtime.WorkflowRuntime Runtime { get; }
    return:
      type: System.Workflow.Runtime.WorkflowRuntime
      description: "O <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref> objeto."
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  id: Start
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Start()
  nameWithType: WorkflowRuntimeService.Start()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando substituído em uma classe derivada, inicia o serviço e as alterações de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>para <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>"
  remarks: "Iniciar é chamado pelo mecanismo de tempo de execução de fluxo de trabalho em todos os seus serviços que derivam de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>quando <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>é chamado.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>       Iniciar também é chamado pelo mecanismo de tempo de execução de fluxo de trabalho quando um serviço de mecanismo de tempo de execução do fluxo de trabalho é adicionado ao mecanismo de tempo de execução de fluxo de trabalho por uma chamada para <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>depois que o mecanismo de tempo de execução do fluxo de trabalho já foi iniciado.</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> A implementação padrão de início controla se o serviço foi iniciado e usa essas informações para lançar a exceção apropriada se o serviço foi iniciado enquanto ele está sendo executado.       Você pode fornecer funcionalidade adicional necessária para que o serviço foi iniciado pelo mecanismo de tempo de execução de fluxo de trabalho por substituir esse método. Não há nenhuma garantia sobre quais, se houver, serviços serão executados quando o mecanismo de tempo de execução do fluxo de trabalho chama o início em seu serviço. Portanto, o método de início, você deve somente executar qualquer inicialização que não dependem da funcionalidade fornecida por outros serviços. Isso inclui a funcionalidade fornecida pelos serviços principais como o serviço do Agendador. O mecanismo de tempo de execução de fluxo de trabalho gerará o <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>eventos após ter chamado o método de início de seu fluxo de trabalho de todos os serviços de mecanismo de tempo de execução.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> Se o serviço exigir a inicialização adicional após todos os serviços de mecanismo de tempo de execução de fluxo de trabalho foram iniciados, você pode substituir o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>método para realizar essa inicialização quando o evento de inicialização é gerado.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>      > [!NOTE] > Se seu serviço será adicionado ao mecanismo de tempo de execução de fluxo de trabalho por uma chamada para <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>depois que o mecanismo de tempo de execução do fluxo de trabalho já tiver sido iniciado, o mecanismo de tempo de execução do fluxo de trabalho chamará o início em seu serviço.</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> No entanto, nessa situação, o <xref:System.Workflow.Runtime.WorkflowRuntime.Started>evento já ocorreu, portanto, seu serviço pode ser necessário que executar qualquer inicialização que normalmente executaria no <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>de dentro do método de início.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Started> Você pode testar <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>para determinar se o mecanismo de tempo de execução do fluxo de trabalho foi iniciado.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       Iniciar só deve ser chamado pelo mecanismo de tempo de execução de fluxo de trabalho."
  example:
  - "The following example demonstrates calling the Start method on an object derived from <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, TerminationTrackingService.  This example is from the Termination Tracking Service SDK sample.  For more information, see [Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#112](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#112)]\n [!code-vb[WF_Samples#112](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#112)]"
  syntax:
    content: protected virtual void Start ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic) - ou - o serviço já foi iniciado.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>"
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  id: State
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: State
  nameWithType: WorkflowRuntimeService.State
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Obtém o estado do <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref>."
  remarks: "O <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe implementa mecanismos de duas fases para iniciar e parar um serviço de mecanismo de tempo de execução do fluxo de trabalho.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> A primeira fase do mecanismo de início começa quando o mecanismo de tempo de execução do fluxo de trabalho chama a implementação de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>método para o serviço.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> Este método deve chamar a implementação base, <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>que define o estado para <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> A segunda fase ocorre depois que o mecanismo de tempo de execução do fluxo de trabalho inicia todos os seus serviços de mecanismo de tempo de execução do fluxo de trabalho quando ele gera o <xref:System.Workflow.Runtime.WorkflowRuntime.Started>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Started> O <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>gerencia internamente uma assinatura para esse evento e seu manipulador definirá o estado como <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>       O mecanismo de duas fases para parar um serviço de mecanismo de tempo de execução do fluxo de trabalho começa quando o mecanismo de tempo de execução do fluxo de trabalho chama a implementação de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>método para o serviço.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> Este método deve chamar a implementação base, <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>que define o estado para <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> Depois que ele tiver sido interrompido todos os seus serviços de mecanismo de tempo de execução do fluxo de trabalho, o mecanismo de tempo de execução do fluxo de trabalho gera o <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> O <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>gerencia internamente uma assinatura para esse evento e seu manipulador definirá o estado como <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>"
  syntax:
    content: protected System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State { get; }
    return:
      type: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
      description: "Uma da <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref> valores."
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  id: Stop
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Stop()
  nameWithType: WorkflowRuntimeService.Stop()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando substituído em uma classe derivada, interrompe o serviço e as alterações de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>para <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>"
  remarks: "Parar é chamado pelo mecanismo de tempo de execução de fluxo de trabalho em todos os seus serviços que derivam de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>quando <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>é chamado.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>  Parar também é chamado pelo mecanismo de tempo de execução de fluxo de trabalho quando um serviço de mecanismo de tempo de execução do fluxo de trabalho é removido do mecanismo de tempo de execução de fluxo de trabalho por uma chamada para <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> A implementação padrão de parada controla se o serviço foi iniciado e usa essas informações para lançar a exceção apropriada se o serviço foi interrompido antes de ser iniciado.       Você pode fornecer funcionalidade adicional necessária para o serviço interrompido pelo mecanismo de tempo de execução de fluxo de trabalho por substituir esse método. Há nenhuma garantia sobre quais, se houver, serviços será interrompido ou em execução quando a interrupção for chamada em seu serviço. O mecanismo de tempo de execução de fluxo de trabalho gerará o <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>eventos após ter chamado o método de parada de seu fluxo de trabalho de todos os serviços de mecanismo de tempo de execução.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> O serviço pode precisar manter algumas funcionalidades residual para dar suporte a outros serviços até que todos os serviços de mecanismo de tempo de execução fluxo de trabalho tiveram seus métodos stop chamados pelo mecanismo de tempo de execução de fluxo de trabalho. Se seu serviço deve manter essa funcionalidade, você pode substituir o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>método para executar qualquer ação adicional necessária para concluir a interromper o serviço quando o <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>é gerado.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>      > [!NOTE] > Se seu <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>é removido do mecanismo de tempo de execução de fluxo de trabalho por uma chamada para <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>enquanto o mecanismo de tempo de execução do fluxo de trabalho é executado, o mecanismo de tempo de execução do fluxo de trabalho chamará parar o serviço.</xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> No entanto, nessa situação, o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>método não será chamado para o serviço.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> Portanto, o serviço pode ter que executar qualquer funcionalidade adicional de desligamento que normalmente executaria no <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>de dentro do método de parada.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> Você pode testar <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>para determinar se o mecanismo de tempo de execução do fluxo de trabalho está em execução.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       Parar só deve ser chamado pelo mecanismo de tempo de execução de fluxo de trabalho."
  syntax:
    content: protected virtual void Stop ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic).</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>       - ou - o serviço ainda não foi iniciado."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: WorkflowRuntimeService()
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.WorkflowRuntimeService()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStarted()
  nameWithType: WorkflowRuntimeService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStopped()
  nameWithType: WorkflowRuntimeService.OnStopped()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
- uid: System.Workflow.Runtime.WorkflowRuntime
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime
  fullName: System.Workflow.Runtime.WorkflowRuntime
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Start()
  nameWithType: WorkflowRuntimeService.Start()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: State
  nameWithType: WorkflowRuntimeService.State
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
  parent: System.Workflow.Runtime.Hosting
  isExternal: false
  name: WorkflowRuntimeServiceState
  nameWithType: WorkflowRuntimeServiceState
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Stop()
  nameWithType: WorkflowRuntimeService.Stop()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: WorkflowRuntimeService
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStarted
  nameWithType: WorkflowRuntimeService.OnStarted
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStopped
  nameWithType: WorkflowRuntimeService.OnStopped
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: RaiseServicesExceptionNotHandledEvent
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Start
  nameWithType: WorkflowRuntimeService.Start
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: State
  nameWithType: WorkflowRuntimeService.State
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Stop
  nameWithType: WorkflowRuntimeService.Stop
