### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.SyntaxCheck
  id: SyntaxCheck
  children:
  - System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)
  - System.ComponentModel.SyntaxCheck.CheckPath(System.String)
  - System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)
  langs:
  - csharp
  name: SyntaxCheck
  nameWithType: SyntaxCheck
  fullName: System.ComponentModel.SyntaxCheck
  type: Class
  summary: "Fornece métodos para verificar o nome do computador e o caminho está de acordo com uma sintaxe específica. Essa classe não pode ser herdada."
  syntax:
    content: public static class SyntaxCheck
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)
  id: CheckMachineName(System.String)
  parent: System.ComponentModel.SyntaxCheck
  langs:
  - csharp
  name: CheckMachineName(String)
  nameWithType: SyntaxCheck.CheckMachineName(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckMachineName(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Verifica a sintaxe do nome do computador para confirmar que não contêm &quot;\\&quot;."
  syntax:
    content: public static bool CheckMachineName (string value);
    parameters:
    - id: value
      type: System.String
      description: "Uma cadeia de caracteres que contém o nome do computador para verificar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> value </code> corresponde ao formato de nome de máquina correta; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.SyntaxCheck.CheckMachineName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.SyntaxCheck.CheckPath(System.String)
  id: CheckPath(System.String)
  parent: System.ComponentModel.SyntaxCheck
  langs:
  - csharp
  name: CheckPath(String)
  nameWithType: SyntaxCheck.CheckPath(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckPath(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Verifica a sintaxe do caminho para ver se ele começa com &quot;\\\\\\&quot;."
  syntax:
    content: public static bool CheckPath (string value);
    parameters:
    - id: value
      type: System.String
      description: "Uma cadeia de caracteres que contém o caminho a ser verificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> value </code> coincide com o formato de caminho adequado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.SyntaxCheck.CheckPath*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)
  id: CheckRootedPath(System.String)
  parent: System.ComponentModel.SyntaxCheck
  langs:
  - csharp
  name: CheckRootedPath(String)
  nameWithType: SyntaxCheck.CheckRootedPath(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckRootedPath(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Verifica a sintaxe do caminho para ver se ele começa com &quot;\\&quot; ou letra da unidade&quot;C&quot;."
  syntax:
    content: public static bool CheckRootedPath (string value);
    parameters:
    - id: value
      type: System.String
      description: "Uma cadeia de caracteres que contém o caminho a ser verificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> value </code> coincide com o formato de caminho adequado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.SyntaxCheck.CheckRootedPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckMachineName(String)
  nameWithType: SyntaxCheck.CheckMachineName(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckMachineName(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.SyntaxCheck.CheckPath(System.String)
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckPath(String)
  nameWithType: SyntaxCheck.CheckPath(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckPath(String)
- uid: System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckRootedPath(String)
  nameWithType: SyntaxCheck.CheckRootedPath(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckRootedPath(String)
- uid: System.ComponentModel.SyntaxCheck.CheckMachineName*
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckMachineName
  nameWithType: SyntaxCheck.CheckMachineName
- uid: System.ComponentModel.SyntaxCheck.CheckPath*
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckPath
  nameWithType: SyntaxCheck.CheckPath
- uid: System.ComponentModel.SyntaxCheck.CheckRootedPath*
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckRootedPath
  nameWithType: SyntaxCheck.CheckRootedPath
