### YamlMime:ManagedReference
items:
- uid: System.Globalization.JapaneseCalendar
  id: JapaneseCalendar
  children:
  - System.Globalization.JapaneseCalendar.#ctor
  - System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.JapaneseCalendar.AlgorithmType
  - System.Globalization.JapaneseCalendar.Eras
  - System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetEra(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.JapaneseCalendar.GetYear(System.DateTime)
  - System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  - System.Globalization.JapaneseCalendar.MinSupportedDateTime
  - System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.JapaneseCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: JapaneseCalendar
  nameWithType: JapaneseCalendar
  fullName: System.Globalization.JapaneseCalendar
  type: Class
  summary: "Representa o calendário japonês."
  remarks: "O calendário japonês, que também é conhecido como o calendário Wareki, funciona exatamente como o calendário gregoriano, exceto que o ano e era são diferentes.      > [!NOTE] > Para obter informações sobre como usar a classe JapaneseCalendar e as outras classes de calendário no .NET Framework, consulte [trabalhando com calendários](~/add/includes/ajax-current-ext-md.md).       O calendário japonês reconhece um era para Reino do Imperador cada. A época atual é era Heisei, que o início do ano calendário gregoriano 1989. O nome era geralmente é exibido antes do ano. Por exemplo, o ano do calendário gregoriano 2001 é o ano calendário japonês Heisei 13. Observe que o primeiro ano de uma época é chamado de &quot;Gannen&quot;. Portanto, o ano do calendário gregoriano 1989 era o ano calendário japonês Heisei Gannen.       Essa classe atribui números para os eras da seguinte maneira: | O valor de GetEra | Nome de era | Abreviação de era | Datas do calendário gregoriano |   |------------------|--------------|----------------------|---------------------|   | 4 | 平成 (Heisei) | 平 (H, h) | 8 de janeiro de 1989 para apresentar |   | 3 | 昭和 (Imperador Showa) | 昭 (S, s) | 25 de dezembro de 1926 para 7 de janeiro de 1989 |   | 2 | 大正 (Taisho) | 大 (T, t) | 30 de julho de 1912 para 24 de dezembro de 1926 |   | 1 | 明治 (Meiji) | 明 (M, m) | 8 de setembro de 1868 para 29 de julho de 1912 |       Essa classe manipula as datas de 8 de setembro do ano 1 Meiji (no calendário gregoriano, 8 de setembro de 1868). Embora o calendário japonês foi alternado de um calendário lunar em um calendário solar no ano Meiji 6 (1873 do calendário gregoriano), essa implementação é baseada no calendário solar.       Anos bissextos no calendário japonês correspondem do mesmo anos bissextos no calendário gregoriano. Um ano bissexto no calendário gregoriano é definido como um ano gregoriano divisível por quatro, exceto se ela for divisível por 100. No entanto, os anos de calendário gregoriano que são divisíveis por 400 são bissextos. Um ano comum tem 365 dias e um ano bissexto tem 366 dias.       O calendário japonês tem 12 meses com 28 a 31 dias a cada: | Valor GetMonth | Mês | Inglês | Dias em anos comuns | Dias em anos bissextos |   |--------------------|-----------|-------------|--------------------------|------------------------|   | 1 | 1月 (Ichigatsu) | Janeiro | 31 | 31 |   | 2 | 2月 (Nigatsu) | Fevereiro | 28 | 29 |   | 3 | 3月 (Sangatsu) | Março | 31 | 31 |   | 4 | 4月 (Shigatsu) | Abril | 30 | 30 |   | 5 | 5月 (Gogatsu) | Pode | 31 | 31 |   | 6 | 6月 (Rokugatsu) | Junho | 30 | 30 |   | 7 | 7月 (Shichigatsu) | Julho | 31 | 31 |   | 8 | 8月 (Hachigatsu) | Agosto | 31 | 31 |   | 9 | 9月 (Kugatsu) | Setembro | 30 | 30 |   | 10 | 10月 (Juugatsu) | Outubro | 31 | 31 |   | 11 | 11月 (Juuichigatsu) | Novembro | 30 | 30 |   | 12 | 12月 (Juunigatsu) | Dezembro | 31 | 31 |       Nigatsu, que é equivalente para o mês do calendário gregoriano de fevereiro, tem 29 dias durante os anos bissextos e 28 durante anos comuns.       A data de 1º de janeiro de 2001. no calendário gregoriano é equivalente ao primeiro dia do Ichigatsu no ano 13 Heisei do calendário japonês.       Se o aplicativo está usando a classe JapaneseCalendar, <xref:System.DateTime.Parse%2A?displayProperty=fullName>reconhece as abreviações era na frente do ano.</xref:System.DateTime.Parse%2A?displayProperty=fullName> A abreviação é a abreviação do alfabeto latino maiusculas e minúsculas de caractere único ou a abreviação de Kanji caractere único.       Cada <xref:System.Globalization.CultureInfo>objeto oferece suporte a um conjunto de calendários.</xref:System.Globalization.CultureInfo> O <xref:System.Globalization.CultureInfo.Calendar%2A>propriedade retorna o calendário padrão para a cultura e o <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>propriedade retorna uma matriz que contém todos os calendários suportados pela cultura.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Para alterar o calendário usado por um <xref:System.Globalization.CultureInfo>o aplicativo deve definir a <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>propriedade <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>para um novo <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class JapaneseCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: JapaneseCalendar()
  nameWithType: JapaneseCalendar.JapaneseCalendar()
  fullName: System.Globalization.JapaneseCalendar.JapaneseCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> classe."
  syntax:
    content: public JapaneseCalendar ();
    parameters: []
  overload: System.Globalization.JapaneseCalendar.#ctor*
  exceptions:
  - type: System.TypeInitializationException
    commentId: T:System.TypeInitializationException
    description: "Não é possível inicializar um <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> objeto devido à ausência de informações de cultura."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna um <xref:System.DateTime>que é o número especificado de meses longe especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "A parte do dia de resultante <xref:System.DateTime>é afetado se o dia resultante não é um dia válido no mês do ano resultante resultante.</xref:System.DateTime> Ele é alterado para o último dia válido no mês do ano resultante resultante. A parte do ano de resultante <xref:System.DateTime>é afetado se o mês resultante está fora do ano de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime> Parte era resultante <xref:System.DateTime>é afetado se o ano resultante é fora era de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime> A parte de hora do dia de resultante <xref:System.DateTime>permanece o mesmo que o especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Por exemplo, se o mês especificado for Juugatsu (outubro), que tem 31 dias, o dia especificado é o dia 31 do mês, e `months` é 6, o ano resultante é mais que o ano especificado, o mês resultante é Shigatsu (abril) e o dia resultante é de 30 dias, o que é o último dia do Shigatsu (abril).       Se `months` for negativo, o resultante <xref:System.DateTime>é anterior à <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       A<xref:System.DateTime.Kind%2A> propriedade de retornado <xref:System.DateTime>valor sempre é igual a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Você pode preservar o <xref:System.DateTime.Kind%2A>propriedade do `time` parâmetro ao chamar o <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>método, como mostra o exemplo a seguir.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.j_17_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.j_17_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_17_2.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_17_2.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_17_2.vb)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ao qual adicionar meses.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "O número de meses a adicionar."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que resulta da adição do número especificado de meses especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultante <xref:System.DateTime>está fora do intervalo com suporte.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>é menor que-120000.       - ou - <code>months</code> é maior do que 120000."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna um <xref:System.DateTime>que é o número especificado de anos longe especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "A parte do dia de resultante <xref:System.DateTime>é afetado se o dia resultante não é um dia válido no mês do ano resultante resultante.</xref:System.DateTime> Ele é alterado para o último dia válido no mês do ano resultante resultante. A parte do mês de resultante <xref:System.DateTime>permanece o mesmo que o especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Parte era resultante <xref:System.DateTime>é afetado se o ano resultante é fora era de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime> A parte de hora do dia de resultante <xref:System.DateTime>permanece o mesmo que o especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Por exemplo, Nigatsu (fevereiro) tem 28 dias, exceto durante os anos bissextos quando ele tem 29 dias. Se a data especificada é o dia 29 de Nigatsu (fevereiro) em um ano bissexto e o valor de `years` é 1, a data resultante será o dia de 28 de Nigatsu (fevereiro) no ano seguinte.       Se `years` for negativo, o resultante <xref:System.DateTime>é anterior à <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       A<xref:System.DateTime.Kind%2A> propriedade de retornado <xref:System.DateTime>valor sempre é igual a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Você pode preservar o <xref:System.DateTime.Kind%2A>propriedade do `time` parâmetro ao chamar o <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>método, como mostra o exemplo a seguir.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.j_14_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.j_14_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_14_2.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_14_2.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_14_2.vb)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ao qual adicionar anos.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "O número de anos a adicionar."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que resulta da adição do número especificado de anos especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultante <xref:System.DateTime>está fora do intervalo com suporte.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>está fora do intervalo com suporte do <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> tipo.       - ou - <code>years</code> é menor que -10.000 ou maior que 10.000."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: JapaneseCalendar.AlgorithmType
  fullName: System.Globalization.JapaneseCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém um valor que indica se o calendário atual é solar baseado, lunar ou uma combinação de ambos."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.j_5_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.j_5_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Sempre retorna <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.Eras
  id: Eras
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: JapaneseCalendar.Eras
  fullName: System.Globalization.JapaneseCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a lista de eras no <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref>."
  remarks: "O calendário japonês reconhece um era para Reino do Imperador cada. A época atual é era Heisei, que o início do ano calendário gregoriano 1989. O nome era geralmente é exibido antes do ano. Por exemplo, o ano do calendário gregoriano 2001 é o ano calendário japonês Heisei 13. Observe que o primeiro ano de uma época é chamado de &quot;Gannen&quot;. Portanto, o ano do calendário gregoriano 1989 era o ano calendário japonês Heisei Gannen.       Essa classe atribui números para os eras da seguinte maneira: | O valor de GetEra | Nome de era | Abreviação de era | Datas do calendário gregoriano |   |------------------|--------------|----------------------|---------------------|   | 4 | 平成 (Heisei) | 平 (H, h) | 8 de janeiro de 1989 para apresentar |   | 3 | 昭和 (Imperador Showa) | 昭 (S, s) | 25 de dezembro de 1926 para 7 de janeiro de 1989 |   | 2 | 大正 (Taisho) | 大 (T, t) | 30 de julho de 1912 para 24 de dezembro de 1926 |   | 1 | 明治 (Meiji) | 明 (M, m) | 8 de setembro de 1868 para 29 de julho de 1912 |       Essa classe manipula as datas de 8 de setembro do ano Meiji 1 (1 de janeiro de 1868 do calendário gregoriano). Embora o calendário japonês foi alternado de um calendário lunar em um calendário solar no ano Meiji 6 (1873 do calendário gregoriano), essa implementação é baseada no calendário solar.      > [!NOTE] > Eras adicionais devem ser adicionados no futuro, aplicativos podem encontrar mais do que o esperado quatro eras para o calendário japonês. Aplicativos devem ser testados para garantir que eles continuem a funcionar no evento; consulte [Era tratamento para o calendário japonês](http://go.microsoft.com/fwlink/p/?LinkId=239618)."
  example:
  - "The following example displays the values contained in the Eras property.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.Eras#1](~/add/codesnippet/csharp/p-system.globalization.j_4_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/add/codesnippet/visualbasic/p-system.globalization.j_4_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/add/codesnippet/cpp/p-system.globalization.j_4_1.cpp)]"
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Uma matriz de inteiros que representa os eras no <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o dia do mês em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_13_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_13_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_13_1.vb)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro de 1 a 31 que representa o dia do mês em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.JapaneseCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o dia da semana especificado <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Os valores de <xref:System.DayOfWeek>são da seguinte maneira: | Valor de DayOfWeek | que indica |   |---------------------|---------------------|   | Domingo | 日曜日 (Nichiyoubi) |   | Segunda-feira | 月曜日 (Getsuyoubi) |   | Terça-feira | 火曜日 (Kayoubi) |   | Quarta-feira | 水曜日 (Suiyoubi) |   | Quinta-feira | 木曜日 (Mokuyoubi) |   | Sexta-feira | 金曜日 (Kinyoubi) |   | Sábado | 土曜日 (Doyoubi) |</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_9_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_9_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_9_1.vb)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "Um <xref:System.DayOfWeek>valor que representa o dia da semana especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DayOfWeek>"
  overload: System.Globalization.JapaneseCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o dia do ano em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "O dia do ano é definido como o número de dias desde o primeiro dia do ano. Por exemplo, GetDayOfYear para o primeiro dia do primeiro mês retorna 1 e GetDayOfYear para o último dia do mês anterior retorna o número total de dias em que ano, o que é o mesmo valor retornado pelo <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>.</xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_5_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_5_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_5_1.vb)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro de 1 a 366 que representa o dia do ano no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.JapaneseCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o número de dias no mês do ano especificado na especificado era especificado."
  remarks: "Por exemplo, este método retorna 28 ou 29 para Nigatsu (fevereiro de `month` = 2), dependendo se `year` é um ano bissexto."
  example:
  - "The following code example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/50a0d95d-a5e5-49bd-9864-_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/50a0d95d-a5e5-49bd-9864-_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/50a0d95d-a5e5-49bd-9864-_1.cs)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um inteiro de 1 a 12 que representa o mês."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.Int32
      description: "O número de dias do mês especificado no ano especificado na era especificado."
  overload: System.Globalization.JapaneseCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>month</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>era</code> está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o número de dias do ano especificado na era especificado."
  remarks: "Por exemplo, este método retorna 365 ou 366, dependendo se `year` é um ano bissexto."
  example:
  - "The following example calls GetDaysInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.j_4_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.j_4_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_4_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.Int32
      description: "O número de dias do ano especificado na era especificado."
  overload: System.Globalization.JapaneseCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>era</code> está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: JapaneseCalendar.GetEra(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna a era em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "O calendário japonês reconhece um era para Reino do Imperador cada. A época atual é era Heisei, que o início do ano calendário gregoriano 1989. O nome era geralmente é exibido antes do ano. Por exemplo, o ano do calendário gregoriano 2001 é o ano calendário japonês Heisei 13. Observe que o primeiro ano de uma época é chamado de &quot;Gannen&quot;. Portanto, o ano do calendário gregoriano 1989 era o ano calendário japonês Heisei Gannen.       Essa classe atribui números para os eras da seguinte maneira: | O valor de GetEra | Nome de era | Abreviação de era | Datas do calendário gregoriano |   |------------------|--------------|----------------------|---------------------|   | 4 | 平成 (Heisei) | 平 (H, h) | 8 de janeiro de 1989 para apresentar |   | 3 | 昭和 (Imperador Showa) | 昭 (S, s) | 25 de dezembro de 1926 para 7 de janeiro de 1989 |   | 2 | 大正 (Taisho) | 大 (T, t) | 30 de julho de 1912 para 24 de dezembro de 1926 |   | 1 | 明治 (Meiji) | 明 (M, m) | 8 de setembro de 1868 para 29 de julho de 1912 |       Em geral, a <xref:System.Globalization.JapaneseCalendar>classe dá suporte a datas de 8 de setembro do ano 1 Meiji (8 de setembro de 1868 do calendário gregoriano), que é o valor da <xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A>propriedade.</xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A> </xref:System.Globalization.JapaneseCalendar> No entanto, o método GetEra com êxito retorna era para datas de 1 de janeiro a 7 de setembro do ano Meiji 1 (1 de janeiro de 1868 por meio de 7 de setembro de 1868 no calendário gregoriano). Para datas anteriores a 1 de janeiro de 1868 no calendário gregoriano, o método gera uma <xref:System.ArgumentOutOfRangeException>exceção.</xref:System.ArgumentOutOfRangeException>"
  example:
  - "The following example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_10_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_10_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_10_1.vb)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro que representa a era em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.JapaneseCalendar.GetEra*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Resultante <xref:System.DateTime>está fora do intervalo com suporte.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: JapaneseCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcula o mês de salto para um ano especificado e era."
  remarks: "Em um calendário que oferece suporte a noção de um mês de salto, o mês de salto pode ocorrer depois de um determinado mês ou depois de qualquer mês em um ano. Por exemplo, o <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>método retorna um número entre 1 e 13 que indica o mês associado a uma data especificada.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Se houver um mês bissexto entre os oitavo e o nono meses do ano, o <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>método retorna 8 oitavo mês, 9 para o passo oitavo mês e 10 para o nono mês.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um ano."
    - id: era
      type: System.Int32
      description: "Uma época."
    return:
      type: System.Int32
      description: "O valor de retorno é sempre 0 porque o <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> tipo não oferece suporte a noção de um mês de salto."
  overload: System.Globalization.JapaneseCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ou <code>era</code> está fora do intervalo com suporte a <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> tipo."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: JapaneseCalendar.GetMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o mês em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_18_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_18_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_18_1.vb)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro de 1 a 12 que representa o mês em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.JapaneseCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o número de meses do ano especificado na era especificado."
  remarks: ''
  example:
  - "The following code example calls GetMonthsInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/0687c0ba-842c-4e70-872b-_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/0687c0ba-842c-4e70-872b-_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/0687c0ba-842c-4e70-872b-_1.cpp)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.Int32
      description: "O valor de retorno sempre é 12."
  overload: System.Globalization.JapaneseCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>era</code> está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna a semana do ano que inclui a data em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "Esse método pode ser usado para determinar o número de semanas do ano, definindo o `time` parâmetro para o último dia do ano.       O <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>propriedade contém os valores específicos de cultura que podem ser usados para o `rule` e `firstDayOfWeek` parâmetros.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>       A <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>propriedade <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>contém o padrão <xref:System.DayOfWeek>que representa o primeiro dia da semana para uma cultura específica, usando o calendário do valor especificado na <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.DayOfWeek> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>       A <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>propriedade <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>contém o padrão <xref:System.Globalization.CalendarWeekRule>que define uma semana para uma cultura específica, usando o calendário do valor especificado na <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CalendarWeekRule> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>       Por exemplo, em <xref:System.Globalization.GregorianCalendar>, o <xref:System.Globalization.Calendar.GetWeekOfYear%2A>método para 1 de janeiro retorna 1.</xref:System.Globalization.Calendar.GetWeekOfYear%2A> </xref:System.Globalization.GregorianCalendar>"
  example:
  - "The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used. If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.  \n  \n [!code-cs[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/csharp/ef15d25f-af8b-4734-b15e-_1.cs)]\n [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/visualbasic/ef15d25f-af8b-4734-b15e-_1.vb)]\n [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/cpp/ef15d25f-af8b-4734-b15e-_1.cpp)]"
  syntax:
    content: public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    - id: rule
      type: System.Globalization.CalendarWeekRule
      description: "Uma da <xref:System.Globalization.CalendarWeekRule>valores que define uma semana de calendário.</xref:System.Globalization.CalendarWeekRule>"
    - id: firstDayOfWeek
      type: System.DayOfWeek
      description: "Uma da <xref:System.DayOfWeek>valores que representa o primeiro dia da semana.</xref:System.DayOfWeek>"
    return:
      type: System.Int32
      description: "Um inteiro de base 1 que representa a semana do ano que inclui a data de <code> time </code> parâmetro."
  overload: System.Globalization.JapaneseCalendar.GetWeekOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>ou <code>firstDayOfWeek</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>rule</code> não é válido <xref:System.Globalization.CalendarWeekRule> valor."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: JapaneseCalendar.GetYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o ano em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_16_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_16_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_16_1.vb)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro que representa o ano em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.JapaneseCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se a data especificada na era especificado é um dia bissexto."
  remarks: "Anos bissextos no calendário japonês correspondem do mesmo anos bissextos no calendário gregoriano. Um ano bissexto no calendário gregoriano é definido como um ano gregoriano divisível por quatro, exceto se ela for divisível por 100. No entanto, os anos de calendário gregoriano que são divisíveis por 400 são bissextos. Um ano comum tem 365 dias e um ano bissexto tem 366 dias.       Um dia de salto é um dia em que ocorre apenas em um ano bissexto. Por exemplo, o dia 29 de Nigatsu (fevereiro) será a única bissexto."
  example:
  - "The following example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/add/codesnippet/csharp/98bd79da-f987-41c7-8e4e-_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/98bd79da-f987-41c7-8e4e-_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/add/codesnippet/cpp/98bd79da-f987-41c7-8e4e-_1.cpp)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um inteiro de 1 a 12 que representa o mês."
    - id: day
      type: System.Int32
      description: "Um inteiro de 1 a 31 que representa o dia."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o dia especificado é um dia bissexto; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>month</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>day</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>era</code> está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se o mês do ano especificado na especificado era especificado é um mês de salto."
  remarks: "Anos bissextos no calendário japonês correspondem do mesmo anos bissextos no calendário gregoriano. Um ano bissexto no calendário gregoriano é definido como um ano gregoriano divisível por quatro, exceto se ela for divisível por 100. No entanto, os anos de calendário gregoriano que são divisíveis por 400 são bissextos. Um ano comum tem 365 dias e um ano bissexto tem 366 dias.       Um mês de salto é um mês inteiro ocorre apenas em um ano bissexto. O calendário japonês não tem qualquer meses bissexto."
  example:
  - "The following example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/6e9c4cc5-e550-476d-bf72-_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/6e9c4cc5-e550-476d-bf72-_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/6e9c4cc5-e550-476d-bf72-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um inteiro de 1 a 12 que representa o mês."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.Boolean
      description: "Esse método sempre retornará <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a menos que substituído por uma classe derivada."
  overload: System.Globalization.JapaneseCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>month</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>era</code> está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se o ano especificado na era especificado é um ano bissexto."
  remarks: "Anos bissextos no calendário japonês correspondem do mesmo anos bissextos no calendário gregoriano. Um ano bissexto no calendário gregoriano é definido como um ano gregoriano divisível por quatro, exceto se ela for divisível por 100. No entanto, os anos de calendário gregoriano que são divisíveis por 400 são bissextos. Um ano comum tem 365 dias e um ano bissexto tem 366 dias."
  example:
  - "The following example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.j_2_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.j_2_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_2_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o ano especificado é um ano bissexto; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>era</code> está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: JapaneseCalendar.MaxSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a data e a hora atual com suporte mais recente <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> objeto."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.j_0_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.j_0_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.j_0_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Na última data e hora com suporte a <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> tipo, que é equivalente ao último momento de 31 de dezembro de 9999 C.E. no calendário gregoriano."
  overload: System.Globalization.JapaneseCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: JapaneseCalendar.MinSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a data e hora atual com suporte a mais antiga <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> objeto."
  remarks: "A primeira data em que o suporte a <xref:System.Globalization.JapaneseCalendar>classe é 8 de setembro de 1868 C.E., no primeiro ano da era Meiji.</xref:System.Globalization.JapaneseCalendar> Em geral, a data e hora em operações que usam o <xref:System.Globalization.JapaneseCalendar>classe lançar um <xref:System.ArgumentOutOfRangeException>exceção para datas antes dessa data.</xref:System.ArgumentOutOfRangeException> </xref:System.Globalization.JapaneseCalendar> No entanto, alguns membros, como o <xref:System.Globalization.JapaneseCalendar.GetEra%2A>método, suporte a datas de 1 de janeiro de 1868 por meio de 7 de setembro do ano 1 Meiji.</xref:System.Globalization.JapaneseCalendar.GetEra%2A>"
  example:
  - "The following example gets the earliest and latest dates supported by the calendar.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.j_1_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.j_1_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.j_1_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Data e hora com suporte mais recente do <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> tipo, que é equivalente ao primeiro momento em 8 de setembro de 1868 C.E. no calendário gregoriano."
  overload: System.Globalization.JapaneseCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna um <xref:System.DateTime>que é definido como a data e hora especificadas na era especificado.</xref:System.DateTime>"
  remarks: "O método ToDateTime é útil porque ele pode converter qualquer data no calendário atual em uma data do calendário gregoriano. A data no calendário gregoriano depois pode ser usada, por exemplo, para comparar as datas em calendários diferentes ou criar uma data equivalente em um calendário específico."
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um inteiro de 1 a 12 que representa o mês."
    - id: day
      type: System.Int32
      description: "Um inteiro de 1 a 31 que representa o dia."
    - id: hour
      type: System.Int32
      description: "Um inteiro de 0 a 23 que representa a hora."
    - id: minute
      type: System.Int32
      description: "Um inteiro de 0 a 59 que representa o minuto."
    - id: second
      type: System.Int32
      description: "Um inteiro de 0 a 59 que representa o segundo."
    - id: millisecond
      type: System.Int32
      description: "Um inteiro de 0 a 999 que representa o milissegundo."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que é definido como a data e hora especificadas na era atual.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>month</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>day</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>hour</code> é menor que zero ou maior que 23.       - ou - <code>minute</code> é menor que zero ou maior que 59.       - ou - <code>second</code> é menor que zero ou maior que 59.       - ou - <code>millisecond</code> é menor que zero ou maior do que 999.       - ou - <code>era</code> está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: JapaneseCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.JapaneseCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Converte um ano de quatro dígitos do ano especificado usando o <xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax*>propriedade para determinar o século apropriado.</xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax*>"
  remarks: "Esse método implementa <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=fullName>.</xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=fullName>       Como o ano do calendário japonês geralmente é menos de quatro dígitos, essa implementação sempre retorna o valor da `year` parâmetro.       ToFourDigitYear oferece suporte a um ano de dois dígitos ou um ano de quatro dígitos. No entanto, um ano válido é geralmente representado como dois dígitos (menos de 100). Passando um valor de ano de dois dígitos faz com que o método converter o valor para um valor de quatro dígitos de acordo com o <xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A>valor que representa o século apropriado.</xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A> Se o aplicativo fornece um valor de quatro dígitos, ou se ele fornece um valor negativo ou zero, ToFourDigitYear lança uma exceção."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro (normalmente de dois dígitos) que representa o ano para converter."
    return:
      type: System.Int32
      description: "Um inteiro que contém a representação de quatro dígitos do <code> year </code>."
  overload: System.Globalization.JapaneseCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: JapaneseCalendar.TwoDigitYearMax
  fullName: System.Globalization.JapaneseCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém ou define o último ano de um intervalo de 100 anos que pode ser representado por um ano de 2 dígitos."
  remarks: "Essa propriedade implementa <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName>.</xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName>       Como o ano do calendário japonês geralmente é menos de quatro dígitos, essa implementação Retorna 99 por padrão e não afeta o valor de retorno de <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>.</xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "O último ano de um intervalo de 100 anos que pode ser representado por um ano de 2 dígitos."
  overload: System.Globalization.JapaneseCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado em uma operação de definição é menor que 99.       - ou - o valor especificado em uma operação de definição é maior do que 8011 (ou <xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Em uma operação definida, a instância atual é somente leitura."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.TypeInitializationException
  isExternal: true
  name: System.TypeInitializationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.JapaneseCalendar.#ctor
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: JapaneseCalendar()
  nameWithType: JapaneseCalendar.JapaneseCalendar()
  fullName: System.Globalization.JapaneseCalendar.JapaneseCalendar()
- uid: System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.JapaneseCalendar.AlgorithmType
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: JapaneseCalendar.AlgorithmType
  fullName: System.Globalization.JapaneseCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.JapaneseCalendar.Eras
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: Eras
  nameWithType: JapaneseCalendar.Eras
  fullName: System.Globalization.JapaneseCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetEra(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: JapaneseCalendar.GetEra(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetEra(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: JapaneseCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: JapaneseCalendar.GetMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetMonth(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
- uid: System.Globalization.CalendarWeekRule
  parent: System.Globalization
  isExternal: true
  name: CalendarWeekRule
  nameWithType: CalendarWeekRule
  fullName: System.Globalization.CalendarWeekRule
- uid: System.Globalization.JapaneseCalendar.GetYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: JapaneseCalendar.GetYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetYear(DateTime)
- uid: System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: JapaneseCalendar.MaxSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.MinSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: JapaneseCalendar.MinSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MinSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: JapaneseCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.JapaneseCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.JapaneseCalendar.TwoDigitYearMax
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: JapaneseCalendar.TwoDigitYearMax
  fullName: System.Globalization.JapaneseCalendar.TwoDigitYearMax
- uid: System.Globalization.JapaneseCalendar.#ctor*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: JapaneseCalendar
  nameWithType: JapaneseCalendar.JapaneseCalendar
- uid: System.Globalization.JapaneseCalendar.AddMonths*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddMonths
  nameWithType: JapaneseCalendar.AddMonths
- uid: System.Globalization.JapaneseCalendar.AddYears*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddYears
  nameWithType: JapaneseCalendar.AddYears
- uid: System.Globalization.JapaneseCalendar.AlgorithmType*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: JapaneseCalendar.AlgorithmType
- uid: System.Globalization.JapaneseCalendar.Eras*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: Eras
  nameWithType: JapaneseCalendar.Eras
- uid: System.Globalization.JapaneseCalendar.GetDayOfMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: JapaneseCalendar.GetDayOfMonth
- uid: System.Globalization.JapaneseCalendar.GetDayOfWeek*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: JapaneseCalendar.GetDayOfWeek
- uid: System.Globalization.JapaneseCalendar.GetDayOfYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: JapaneseCalendar.GetDayOfYear
- uid: System.Globalization.JapaneseCalendar.GetDaysInMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: JapaneseCalendar.GetDaysInMonth
- uid: System.Globalization.JapaneseCalendar.GetDaysInYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: JapaneseCalendar.GetDaysInYear
- uid: System.Globalization.JapaneseCalendar.GetEra*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetEra
  nameWithType: JapaneseCalendar.GetEra
- uid: System.Globalization.JapaneseCalendar.GetLeapMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: JapaneseCalendar.GetLeapMonth
- uid: System.Globalization.JapaneseCalendar.GetMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonth
  nameWithType: JapaneseCalendar.GetMonth
- uid: System.Globalization.JapaneseCalendar.GetMonthsInYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: JapaneseCalendar.GetMonthsInYear
- uid: System.Globalization.JapaneseCalendar.GetWeekOfYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetWeekOfYear
  nameWithType: JapaneseCalendar.GetWeekOfYear
- uid: System.Globalization.JapaneseCalendar.GetYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetYear
  nameWithType: JapaneseCalendar.GetYear
- uid: System.Globalization.JapaneseCalendar.IsLeapDay*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: JapaneseCalendar.IsLeapDay
- uid: System.Globalization.JapaneseCalendar.IsLeapMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: JapaneseCalendar.IsLeapMonth
- uid: System.Globalization.JapaneseCalendar.IsLeapYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: JapaneseCalendar.IsLeapYear
- uid: System.Globalization.JapaneseCalendar.MaxSupportedDateTime*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: JapaneseCalendar.MaxSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.MinSupportedDateTime*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: JapaneseCalendar.MinSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.ToDateTime*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: JapaneseCalendar.ToDateTime
- uid: System.Globalization.JapaneseCalendar.ToFourDigitYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: JapaneseCalendar.ToFourDigitYear
- uid: System.Globalization.JapaneseCalendar.TwoDigitYearMax*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: JapaneseCalendar.TwoDigitYearMax
