### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.NameValueCollection
  id: NameValueCollection
  children:
  - System.Collections.Specialized.NameValueCollection.#ctor
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  - System.Collections.Specialized.NameValueCollection.AllKeys
  - System.Collections.Specialized.NameValueCollection.Clear
  - System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  - System.Collections.Specialized.NameValueCollection.Get(System.String)
  - System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  - System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  - System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  - System.Collections.Specialized.NameValueCollection.HasKeys
  - System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  - System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  - System.Collections.Specialized.NameValueCollection.Item(System.String)
  - System.Collections.Specialized.NameValueCollection.Remove(System.String)
  - System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  langs:
  - csharp
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
  type: Class
  summary: "Representa uma coleção de associado <xref:System.String>chaves e <xref:System.String>valores que podem ser acessados com a chave ou com o índice.</xref:System.String> </xref:System.String>"
  remarks: "Esta coleção baseia-se a <xref:System.Collections.Specialized.NameObjectCollectionBase>classe.</xref:System.Collections.Specialized.NameObjectCollectionBase> No entanto, diferentemente de <xref:System.Collections.Specialized.NameObjectCollectionBase>, essa classe armazena vários valores de cadeia de caracteres em uma única chave.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Essa classe pode ser usada para cabeçalhos, cadeias de caracteres de consulta e dados do formulário.       Cada elemento é um par chave/valor.       Coleções desse tipo não preserva a ordenação de elemento, e nenhuma ordem específica é garantida ao enumerar a coleção.       A capacidade de NameValueCollection é o número de elementos que a NameValueCollection pode conter. Como os elementos são adicionados ao NameValueCollection, a capacidade é aumentada automaticamente conforme necessário por meio de realocação.       O provedor de código hash dispensa códigos hash para chaves na coleção NameValueCollection. O provedor de código de hash padrão é <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       O comparador determina se duas chaves são iguais. O comparador padrão é <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Na versão 1.0 do .NET Framework, essa classe usa comparações de cadeia de caracteres sensíveis à cultura. No entanto, no .NET Framework versão 1.1 ou posterior, essa classe usa <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>ao comparar cadeias de caracteres.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> Para obter mais informações sobre como a cultura afeta as comparações e a classificação, consulte [executando operações de cadeia de caracteres de cultura](~/add/includes/ajax-current-ext-md.md).       `null`é permitido como uma chave ou um valor.      > [!CAUTION] > O <xref:System.Collections.Specialized.NameValueCollection.Get%2A>método não faz distinção entre `null` que é retornado porque a chave especificada não foi encontrada e `null` que é retornado porque o valor associado com a chave é `null`.</xref:System.Collections.Specialized.NameValueCollection.Get%2A>"
  example:
  - >-
    [!code-cpp[System.Collections.Specialized.NameValueCollection2#1](~/add/codesnippet/cpp/t-system.collections.spe_6_1.cpp)]
     [!code-vb[System.Collections.Specialized.NameValueCollection2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_6_1.vb)]
     [!code-cs[System.Collections.Specialized.NameValueCollection2#1](~/add/codesnippet/csharp/t-system.collections.spe_6_1.cs)]
  syntax:
    content: 'public class NameValueCollection : System.Collections.Specialized.NameObjectCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.Specialized.NameObjectCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
  - System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection()
  nameWithType: NameValueCollection.NameValueCollection()
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> classe está vazio, tem a capacidade inicial padrão e usa o provedor padrão de código de hash de maiusculas e minúsculas e o comparador de maiusculas e minúsculas do padrão."
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameValueCollection>é o número de elementos que o <xref:System.Collections.Specialized.NameValueCollection>pode conter.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameValueCollection>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameValueCollection>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       O provedor de código hash dispensa códigos hash para chaves em <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> O provedor de código de hash padrão é <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       O comparador determina se duas chaves são iguais. O comparador padrão é <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Este construtor é uma operação de (1)."
  syntax:
    content: public NameValueCollection ();
    parameters: []
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> classe está vazio, tem a capacidade inicial padrão e utiliza especificado <xref:System.Collections.IEqualityComparer>objeto.</xref:System.Collections.IEqualityComparer>"
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameValueCollection>objeto é o número de elementos que o <xref:System.Collections.Specialized.NameValueCollection>pode conter.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameValueCollection>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameValueCollection>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       O <xref:System.Collections.IEqualityComparer>objeto combina o comparador e o provedor de código de hash.</xref:System.Collections.IEqualityComparer>  O provedor de código hash dispensa códigos hash para chaves em <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>  O comparador determina se duas chaves são iguais.       Este construtor é uma operação de (1)."
  syntax:
    content: public NameValueCollection (System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "O <xref:System.Collections.IEqualityComparer>objeto a ser usado para determinar se duas chaves são iguais e gerar códigos de hash para as chaves na coleção.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(NameValueCollection)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Copia as entradas de especificado <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> para um novo <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> com a mesma inicial capacidade como o número de entradas copiadas e usando o mesmo hash de provedor de código e o comparador mesmo como a coleção de origem."
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameValueCollection>é o número de elementos que o <xref:System.Collections.Specialized.NameValueCollection>pode conter.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameValueCollection>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameValueCollection>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       O provedor de código hash dispensa códigos hash para chaves em <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> O provedor de código de hash padrão é <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       O comparador determina se duas chaves são iguais. O comparador padrão é <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Os elementos da nova <xref:System.Collections.Specialized.NameValueCollection>são classificados na mesma ordem que a origem <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection>       Este construtor é um O (`n`) operação, onde `n` é o número de elementos em `col`."
  syntax:
    content: public NameValueCollection (System.Collections.Specialized.NameValueCollection col);
    parameters:
    - id: col
      type: System.Collections.Specialized.NameValueCollection
      description: "O <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> para copiar para o novo <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> instância."
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>col</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32)
  nameWithType: NameValueCollection.NameValueCollection(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> classe está vazio, tem a capacidade inicial especificada e usa o provedor padrão de código de hash de maiusculas e minúsculas e o comparador de maiusculas e minúsculas do padrão."
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameValueCollection>é o número de elementos que o <xref:System.Collections.Specialized.NameValueCollection>pode conter.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameValueCollection>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameValueCollection>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       O provedor de código hash dispensa códigos hash para chaves em <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> O provedor de código de hash padrão é <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       O comparador determina se duas chaves são iguais. O comparador padrão é <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Este construtor é um O (`n`) operação, onde `n` é `capacity`."
  syntax:
    content: public NameValueCollection (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "O número inicial de entradas que o <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> pode conter."
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é menor que zero."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(IHashCodeProvider,IComparer)
  nameWithType: NameValueCollection.NameValueCollection(IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> classe está vazio, tem a capacidade inicial padrão e usa o provedor de código de hash especificado e o comparador especificado."
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameValueCollection>é o número de elementos que o <xref:System.Collections.Specialized.NameValueCollection>pode conter.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameValueCollection>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameValueCollection>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       O provedor de código hash dispensa códigos hash para chaves em <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> O provedor de código de hash padrão é <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       O comparador determina se duas chaves são iguais. O comparador padrão é <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Este construtor é uma operação de (1)."
  syntax:
    content: public NameValueCollection (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: "O <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> que fornecerá os códigos de hash para todas as chaves de <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
    - id: comparer
      type: System.Collections.IComparer
      description: "O <xref:System.Collections.IComparer>a ser usado para determinar se duas chaves são iguais.</xref:System.Collections.IComparer>"
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32,IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> classe está vazio, tem a capacidade inicial especificada e usa especificado <xref:System.Collections.IEqualityComparer>objeto.</xref:System.Collections.IEqualityComparer>"
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameValueCollection>objeto é o número de elementos que o <xref:System.Collections.Specialized.NameValueCollection>pode conter.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameValueCollection>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameValueCollection>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       O <xref:System.Collections.IEqualityComparer>objeto combina o comparador e o provedor de código de hash.</xref:System.Collections.IEqualityComparer>  O provedor de código hash dispensa códigos hash para chaves em <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>  O comparador determina se duas chaves são iguais.       Este construtor é um O (`n`) operação, onde `n` é o `capacity` parâmetro."
  syntax:
    content: public NameValueCollection (int capacity, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "O número inicial de entradas que o <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> objeto pode conter."
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "O <xref:System.Collections.IEqualityComparer>objeto a ser usado para determinar se duas chaves são iguais e gerar códigos de hash para as chaves na coleção.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é menor que zero."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32,NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(Int32,NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,NameValueCollection)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Copia as entradas de especificado <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> para um novo <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> com a capacidade inicial especificada ou o número de entradas a mesma capacidade inicial copiado, o que for maior e usar o provedor padrão de código de hash de maiusculas e minúsculas e o comparador de maiusculas e minúsculas do padrão."
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameValueCollection>é o número de elementos que o <xref:System.Collections.Specialized.NameValueCollection>pode conter.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameValueCollection>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameValueCollection>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       O provedor de código hash dispensa códigos hash para chaves em <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> O provedor de código de hash padrão é <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       O comparador determina se duas chaves são iguais. O comparador padrão é <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Este construtor é um O (`n`) operação, onde `n` é `capacity`.  Se o número de elementos em `col` é maior do que `capacity`, este construtor se torna um O (`n` + `m`) operação, onde `n` é `capacity` e `m` é o número de elementos em `col`."
  syntax:
    content: public NameValueCollection (int capacity, System.Collections.Specialized.NameValueCollection col);
    parameters:
    - id: capacity
      type: System.Int32
      description: "O número inicial de entradas que o <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> pode conter."
    - id: col
      type: System.Collections.Specialized.NameValueCollection
      description: "O <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> para copiar para o novo <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> instância."
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é menor que zero."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>col</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(SerializationInfo,StreamingContext)
  nameWithType: NameValueCollection.NameValueCollection(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> classe serializável e usa especificado <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> e &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt;."
  remarks: "Este construtor é uma operação de (1)."
  syntax:
    content: protected NameValueCollection (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Um <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto que contém as informações necessárias para serializar o novo <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> instância."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Um &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt; objeto que contém a origem e destino do fluxo serializado associado com o novo <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> instância."
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32,IHashCodeProvider,IComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> classe está vazio, tem a capacidade inicial especificada e usa o provedor de código de hash especificado e o comparador especificado."
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameValueCollection>é o número de elementos que o <xref:System.Collections.Specialized.NameValueCollection>pode conter.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameValueCollection>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameValueCollection>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       O provedor de código hash dispensa códigos hash para chaves em <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> O provedor de código de hash padrão é <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       O comparador determina se duas chaves são iguais. O comparador padrão é <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Este construtor é um O (`n`) operação, onde `n` é `capacity`."
  syntax:
    content: public NameValueCollection (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "O número inicial de entradas que o <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> pode conter."
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: "O <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> que fornecerá os códigos de hash para todas as chaves de <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
    - id: comparer
      type: System.Collections.IComparer
      description: "O <xref:System.Collections.IComparer>a ser usado para determinar se duas chaves são iguais.</xref:System.Collections.IComparer>"
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é menor que zero."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  id: Add(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Add(NameValueCollection)
  nameWithType: NameValueCollection.Add(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.Add(NameValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Copia as entradas do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> ao atual <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Se uma chave em `c` já existe no destino <xref:System.Collections.Specialized.NameValueCollection>instância, o valor associado na `c` é adicionado à lista existente separada por vírgulas de valores associados com a mesma chave no destino <xref:System.Collections.Specialized.NameValueCollection>instância.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection>       Se <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>já for igual à capacidade, a capacidade do <xref:System.Collections.Specialized.NameValueCollection>é aumentado, automaticamente realocando matriz interna, e os elementos existentes são copiados para a nova matriz antes de adicionar o novo elemento.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>       Se <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>é menor que a capacidade, esse método é uma operação de (1).</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> Se a capacidade precisa ser aumentado para acomodar o novo elemento, esse método se torna um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public void Add (System.Collections.Specialized.NameValueCollection c);
    parameters:
    - id: c
      type: System.Collections.Specialized.NameValueCollection
      description: "O <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> para copiar o atual <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  overload: System.Collections.Specialized.NameValueCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>c</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: NameValueCollection.Add(String,String)
  fullName: System.Collections.Specialized.NameValueCollection.Add(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Adiciona uma entrada com o nome especificado e o valor para o <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Se a chave especificada já existe no destino <xref:System.Collections.Specialized.NameValueCollection>instância, o valor especificado é adicionado à lista existente separada por vírgulas de valores no formulário `&quot;value1,value2,value3&quot;`.</xref:System.Collections.Specialized.NameValueCollection> Os valores são associados com a mesma chave no destino <xref:System.Collections.Specialized.NameValueCollection>instância.</xref:System.Collections.Specialized.NameValueCollection>       Se <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>já for igual à capacidade, a capacidade do <xref:System.Collections.Specialized.NameValueCollection>é aumentado, automaticamente realocando matriz interna, e os elementos existentes são copiados para a nova matriz antes de adicionar o novo elemento.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>       Se <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>é menor que a capacidade, esse método é uma operação de (1).</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> Se a capacidade precisa ser aumentado para acomodar o novo elemento, esse método se torna um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual void Add (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "A <xref:System.String>chave da entrada a ser adicionado.</xref:System.String> A chave pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.String
      description: "O <xref:System.String>valor da entrada a ser adicionado.</xref:System.String> O valor pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameValueCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.AllKeys
  id: AllKeys
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: AllKeys
  nameWithType: NameValueCollection.AllKeys
  fullName: System.Collections.Specialized.NameValueCollection.AllKeys
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém todas as chaves de <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Se a coleção estiver vazia, esse método retornará um elemento <xref:System.String>de matriz, não `null`.</xref:System.String>       As matrizes retornadas por AllKeys são armazenados em cache para melhorar o desempenho e serão atualizadas automaticamente quando a coleção é alterada. Uma classe derivada pode invalidar a versão armazenada em cache chamando <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>e, portanto, fazer com que as matrizes de ser recriadas.</xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>       Esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual string[] AllKeys { get; }
    return:
      type: System.String[]
      description: "A <xref:System.String>matriz que contém todas as chaves do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.AllKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Clear
  id: Clear
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: NameValueCollection.Clear()
  fullName: System.Collections.Specialized.NameValueCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "As matrizes em cache é invalidado e remove todas as entradas do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Esse método é uma operação de (1)."
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Collections.Specialized.NameValueCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: NameValueCollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.NameValueCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Copia todo o <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> para um unidimensional compatível <xref:System.Array>, começando no índice especificado da matriz de destino.</xref:System.Array>"
  remarks: "A matriz especificada deve ser de um tipo compatível.       Esse método usa <xref:System.Array.Copy%2A?displayProperty=fullName>para copiar os elementos.</xref:System.Array.Copy%2A?displayProperty=fullName>       Esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public void CopyTo (Array dest, int index);
    parameters:
    - id: dest
      type: System.Array
      description: "O unidimensional <xref:System.Array>que é o destino dos elementos copiados de <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>.</xref:System.Array> O <xref:System.Array>devem ter a indexação com base em zero.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O índice de base zero no `dest` no qual a cópia começa."
  overload: System.Collections.Specialized.NameValueCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dest</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>é menor que zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dest</code>é multidimensional.       o número de elementos na origem - ou - <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> é maior que o espaço disponível do <code>index</code> até o final do destino <code>dest</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O tipo da fonte de <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> não pode ser convertido automaticamente para o tipo de destino <code> dest </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  id: Get(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Get(Int32)
  nameWithType: NameValueCollection.Get(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.Get(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém os valores no índice especificado do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> combinadas em uma lista separada por vírgulas."
  remarks: "Esse método é um O (`n`) operação, onde `n` é o número de valores no índice especificado."
  syntax:
    content: public virtual string Get (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero da entrada que contém os valores para obter da coleção."
    return:
      type: System.String
      description: "Um <xref:System.String>que contém uma lista separada por vírgulas dos valores no índice especificado do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.Get*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>está fora do intervalo válido de índices para a coleção."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Get(System.String)
  id: Get(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Get(String)
  nameWithType: NameValueCollection.Get(String)
  fullName: System.Collections.Specialized.NameValueCollection.Get(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém os valores associados com a chave especificada do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> combinadas em uma lista separada por vírgulas."
  remarks: "> [!CAUTION]> Este método retorna `null` nos seguintes casos: 1) se a chave especificada não for encontrada. e 2) se a chave especificada for encontrada e seu valor associado `null`. Esse método não faz distinção entre os dois casos.       Esse método é um O (`n`) operação, onde `n` é o número de valores associados com a chave especificada."
  syntax:
    content: public virtual string Get (string name);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>chave da entrada que contém os valores a obter.</xref:System.String> A chave pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Um <xref:System.String>que contém uma lista separada por vírgulas dos valores associados com a chave especificada do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  id: GetKey(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: GetKey(Int32)
  nameWithType: NameValueCollection.GetKey(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetKey(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém a chave no índice especificado do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Esse método é uma operação de (1)."
  syntax:
    content: public virtual string GetKey (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero da chave a ser obtido da coleção."
    return:
      type: System.String
      description: "Um <xref:System.String>que contém a chave no índice especificado do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.GetKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>está fora do intervalo válido de índices para a coleção."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  id: GetValues(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: GetValues(Int32)
  nameWithType: NameValueCollection.GetValues(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém os valores no índice especificado do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Esse método é um O (`n`) operação, onde `n` é o número de valores no índice especificado."
  syntax:
    content: public virtual string[] GetValues (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero da entrada que contém os valores para obter da coleção."
    return:
      type: System.String[]
      description: "Um <xref:System.String>que contém os valores no índice especificado da matriz de <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.GetValues*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>está fora do intervalo válido de índices para a coleção."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  id: GetValues(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: GetValues(String)
  nameWithType: NameValueCollection.GetValues(String)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém os valores associados com a chave especificada do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "> [!CAUTION]> Este método retorna `null` nos seguintes casos: 1) se a chave especificada não for encontrada. e 2) se a chave especificada for encontrada e seu valor associado `null`. Esse método não faz distinção entre os dois casos.       Esse método é um O (`n`) operação, onde `n` é o número de valores associados com a chave especificada."
  syntax:
    content: public virtual string[] GetValues (string name);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>chave da entrada que contém os valores a obter.</xref:System.String> A chave pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String[]
      description: "A <xref:System.String>matriz que contém os valores associados com a chave especificada do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.HasKeys
  id: HasKeys
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: HasKeys()
  nameWithType: NameValueCollection.HasKeys()
  fullName: System.Collections.Specialized.NameValueCollection.HasKeys()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> contém chaves que não são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Esse método é uma operação de (1)."
  syntax:
    content: public bool HasKeys ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> contém chaves que não são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameValueCollection.HasKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  id: InvalidateCachedArrays
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: InvalidateCachedArrays()
  nameWithType: NameValueCollection.InvalidateCachedArrays()
  fullName: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Redefine as matrizes em cache da coleção para <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "As matrizes retornadas por <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A>são armazenados em cache para melhorar o desempenho e serão atualizados automaticamente quando a coleção é alterada.</xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> Uma classe derivada pode invalidar a versão armazenada em cache chamando InvalidateCachedArrays, forçando assim as matrizes de ser recriadas.       Esse método é uma operação de (1)."
  syntax:
    content: protected void InvalidateCachedArrays ();
    parameters: []
  overload: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: NameValueCollection.Item(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém a entrada no índice especificado do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: `myCollection[index]`.       Essa propriedade não pode ser definida. Para definir o valor em um índice especificado, use `Item[GetKey(index)]`.       A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar a propriedade do Item. Visual Basic implementa um Item como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.       Recuperar os valores no índice especificado é um O (`n`) operação, onde `n` é o número de valores."
  syntax:
    content: public string this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero da entrada a ser localizado na coleção."
    return:
      type: System.String
      description: "Um <xref:System.String>que contém a lista separada por vírgulas dos valores no índice especificado da coleção.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>está fora do intervalo válido de índices para a coleção."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: NameValueCollection.Item(String)
  fullName: System.Collections.Specialized.NameValueCollection.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém ou define a entrada com a chave especificada no <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: `myCollection[name]`.       Se a chave especificada já existe na coleção, a definição dessa propriedade substitui a lista de valores existente com o valor especificado. Para anexar o novo valor para a lista de valores existente, use o <xref:System.Collections.Specialized.NameValueCollection.Add%2A>método.</xref:System.Collections.Specialized.NameValueCollection.Add%2A>       Se a chave especificada não existe na coleção, a definição dessa propriedade cria uma nova entrada usando a chave especificada e o valor especificado.      > [!CAUTION] > Essa propriedade retorna `null` nos seguintes casos: 1) se a chave especificada não for encontrada; e 2) se a chave especificada for encontrada e seu valor associado for `null`. Essa propriedade não faz distinção entre os dois casos.       A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar a propriedade do Item. Visual Basic implementa um Item como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.       Recuperar ou definir os valores associados com a chave especificada é um O (`n`) operação, onde `n` é o número de valores."
  syntax:
    content: public string this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>chave de entrada a ser localizada.</xref:System.String> A chave pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Um <xref:System.String>que contém a lista separada por vírgulas de valores associados com a chave especificada, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.Item*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura e a operação tenta modificar a coleção."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: NameValueCollection.Remove(String)
  fullName: System.Collections.Specialized.NameValueCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Remove as entradas com a chave especificada do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  remarks: "Se o <xref:System.Collections.Specialized.NameValueCollection>não contém um elemento com a chave especificada, o <xref:System.Collections.Specialized.NameValueCollection>permanece inalterado.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Nenhuma exceção é lançada.       Coleções de elementos de contíguos, como listas, os elementos que seguem o elemento removido mover para cima para ocupar o ponto vagas. Se a coleção é indexada, os índices dos elementos que são movidos também são atualizados. Esse comportamento não se aplica às coleções onde os elementos são agrupados conceitualmente em blocos, como uma tabela de hash.       Esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>chave da entrada a ser removido.</xref:System.String> A chave pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameValueCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  id: Set(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Set(String,String)
  nameWithType: NameValueCollection.Set(String,String)
  fullName: System.Collections.Specialized.NameValueCollection.Set(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Define o valor da entrada de <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Se a chave especificada já existe na coleção, esse método substitui a lista de valores existente com o valor especificado. Para anexar o novo valor para a lista de valores existente, use o <xref:System.Collections.Specialized.NameValueCollection.Add%2A>método.</xref:System.Collections.Specialized.NameValueCollection.Add%2A>       Se a chave especificada não existe na coleção, esse método cria uma nova entrada usando a chave especificada e o valor especificado.       Esse método é uma operação de (1)."
  syntax:
    content: public virtual void Set (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>chave da entrada para adicionar o novo valor.</xref:System.String> A chave pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.String
      description: "O <xref:System.Object>que representa o novo valor para adicionar a entrada especificada.</xref:System.Object> O valor pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameValueCollection.Set*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  platform:
  - net462
references:
- uid: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.Specialized.NameObjectCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Collections.Specialized.NameValueCollection.#ctor
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection()
  nameWithType: NameValueCollection.NameValueCollection()
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection()
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(IEqualityComparer)
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32)
  nameWithType: NameValueCollection.NameValueCollection(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(IHashCodeProvider,IComparer)
  nameWithType: NameValueCollection.NameValueCollection(IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(IHashCodeProvider,IComparer)
- uid: System.Collections.IHashCodeProvider
  parent: System.Collections
  isExternal: false
  name: IHashCodeProvider
  nameWithType: IHashCodeProvider
  fullName: System.Collections.IHashCodeProvider
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32,IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,IEqualityComparer)
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32,NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(Int32,NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(SerializationInfo,StreamingContext)
  nameWithType: NameValueCollection.NameValueCollection(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32,IHashCodeProvider,IComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,IHashCodeProvider,IComparer)
- uid: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Add(NameValueCollection)
  nameWithType: NameValueCollection.Add(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.Add(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: NameValueCollection.Add(String,String)
  fullName: System.Collections.Specialized.NameValueCollection.Add(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection.AllKeys
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: AllKeys
  nameWithType: NameValueCollection.AllKeys
  fullName: System.Collections.Specialized.NameValueCollection.AllKeys
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.NameValueCollection.Clear
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Clear()
  nameWithType: NameValueCollection.Clear()
  fullName: System.Collections.Specialized.NameValueCollection.Clear()
- uid: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: NameValueCollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.NameValueCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Get(Int32)
  nameWithType: NameValueCollection.Get(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.Get(Int32)
- uid: System.Collections.Specialized.NameValueCollection.Get(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Get(String)
  nameWithType: NameValueCollection.Get(String)
  fullName: System.Collections.Specialized.NameValueCollection.Get(String)
- uid: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetKey(Int32)
  nameWithType: NameValueCollection.GetKey(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetKey(Int32)
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetValues(Int32)
  nameWithType: NameValueCollection.GetValues(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(Int32)
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetValues(String)
  nameWithType: NameValueCollection.GetValues(String)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(String)
- uid: System.Collections.Specialized.NameValueCollection.HasKeys
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: HasKeys()
  nameWithType: NameValueCollection.HasKeys()
  fullName: System.Collections.Specialized.NameValueCollection.HasKeys()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: InvalidateCachedArrays()
  nameWithType: NameValueCollection.InvalidateCachedArrays()
  fullName: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays()
- uid: System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: NameValueCollection.Item(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.Item(Int32)
- uid: System.Collections.Specialized.NameValueCollection.Item(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Item(String)
  nameWithType: NameValueCollection.Item(String)
  fullName: System.Collections.Specialized.NameValueCollection.Item(String)
- uid: System.Collections.Specialized.NameValueCollection.Remove(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Remove(String)
  nameWithType: NameValueCollection.Remove(String)
  fullName: System.Collections.Specialized.NameValueCollection.Remove(String)
- uid: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Set(String,String)
  nameWithType: NameValueCollection.Set(String,String)
  fullName: System.Collections.Specialized.NameValueCollection.Set(String,String)
- uid: System.Collections.Specialized.NameValueCollection.#ctor*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection.NameValueCollection
- uid: System.Collections.Specialized.NameValueCollection.Add*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Add
  nameWithType: NameValueCollection.Add
- uid: System.Collections.Specialized.NameValueCollection.AllKeys*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: AllKeys
  nameWithType: NameValueCollection.AllKeys
- uid: System.Collections.Specialized.NameValueCollection.Clear*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Clear
  nameWithType: NameValueCollection.Clear
- uid: System.Collections.Specialized.NameValueCollection.CopyTo*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: CopyTo
  nameWithType: NameValueCollection.CopyTo
- uid: System.Collections.Specialized.NameValueCollection.Get*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Get
  nameWithType: NameValueCollection.Get
- uid: System.Collections.Specialized.NameValueCollection.GetKey*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetKey
  nameWithType: NameValueCollection.GetKey
- uid: System.Collections.Specialized.NameValueCollection.GetValues*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetValues
  nameWithType: NameValueCollection.GetValues
- uid: System.Collections.Specialized.NameValueCollection.HasKeys*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: HasKeys
  nameWithType: NameValueCollection.HasKeys
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: InvalidateCachedArrays
  nameWithType: NameValueCollection.InvalidateCachedArrays
- uid: System.Collections.Specialized.NameValueCollection.Item*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Item
  nameWithType: NameValueCollection.Item
- uid: System.Collections.Specialized.NameValueCollection.Remove*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Remove
  nameWithType: NameValueCollection.Remove
- uid: System.Collections.Specialized.NameValueCollection.Set*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Set
  nameWithType: NameValueCollection.Set
