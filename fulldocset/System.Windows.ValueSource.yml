### YamlMime:ManagedReference
items:
- uid: System.Windows.ValueSource
  id: ValueSource
  children:
  - System.Windows.ValueSource.BaseValueSource
  - System.Windows.ValueSource.Equals(System.Object)
  - System.Windows.ValueSource.GetHashCode
  - System.Windows.ValueSource.IsAnimated
  - System.Windows.ValueSource.IsCoerced
  - System.Windows.ValueSource.IsCurrent
  - System.Windows.ValueSource.IsExpression
  - System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  - System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  langs:
  - csharp
  name: ValueSource
  nameWithType: ValueSource
  fullName: System.Windows.ValueSource
  type: Struct
  summary: "Relata as informações retornadas de &lt;xref:System.Windows.DependencyPropertyHelper.GetValueSource%2A?displayProperty=fullName&gt;."
  remarks: "A maioria das informações que transmite ValueSource está contida no <xref:System.Windows.ValueSource.BaseValueSource%2A>propriedade.</xref:System.Windows.ValueSource.BaseValueSource%2A> Esta propriedade contém um valor de enumeração que especifica exatamente um aspecto da geral [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] sistema de propriedade que é responsável por valor efetivo de uma propriedade de dependência.       O valor base, além de outras informações que podem ser interessantes sobre o valor de propriedade de dependência são se o valor está sendo animado e se o valor envolve uma expressão (por exemplo, uma associação, ou uma referência de recurso dinâmico). Estas informações são relatadas por <xref:System.Windows.ValueSource.IsAnimated%2A>e <xref:System.Windows.ValueSource.IsExpression%2A>respectivamente.</xref:System.Windows.ValueSource.IsExpression%2A> </xref:System.Windows.ValueSource.IsAnimated%2A> Além disso, se coerção está atuando em um valor de propriedade, a propriedade mantém um valor desejado, e o valor da propriedade tentará alcançar esse valor desejado se as restrições da coerção específica são alteradas ou eliminadas. Uma propriedade forçada que não está em seu valor desejado relatará que <xref:System.Windows.ValueSource.IsCoerced%2A>é `true`.</xref:System.Windows.ValueSource.IsCoerced%2A>"
  syntax:
    content: public struct ValueSource
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.ValueSource.BaseValueSource
  id: BaseValueSource
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
  fullName: System.Windows.ValueSource.BaseValueSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém um valor de <xref href=&quot;System.Windows.BaseValueSource&quot;> </xref> enumeração, que informa a fonte de desde que o sistema de propriedade de dependência com um valor."
  remarks: "O valor base não é o valor efetivo se animação ou coerção atua na propriedade. Verifique <xref:System.Windows.ValueSource.IsAnimated%2A>e <xref:System.Windows.ValueSource.IsCoerced%2A>se você deseja determinar se o valor base é o valor efetivo.</xref:System.Windows.ValueSource.IsCoerced%2A> </xref:System.Windows.ValueSource.IsAnimated%2A>       Talvez você também queira verificar <xref:System.Windows.ValueSource.IsExpression%2A>para ver se o valor base foi avaliado fora de uma expressão.</xref:System.Windows.ValueSource.IsExpression%2A>"
  syntax:
    content: public System.Windows.BaseValueSource BaseValueSource { get; }
    return:
      type: System.Windows.BaseValueSource
      description: "Um valor da enumeração."
  overload: System.Windows.ValueSource.BaseValueSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ValueSource.Equals(Object)
  fullName: System.Windows.ValueSource.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Retorna um valor que indica se este <xref href=&quot;System.Windows.ValueSource&quot;> </xref> é igual ao objeto especificado."
  remarks: "Essa implementação oferece suporte a igualdade de valor, com base em cada um dos valores de propriedade de cada <xref:System.Windows.ValueSource>estrutura.</xref:System.Windows.ValueSource>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "O objeto a ser comparado com esse <xref href=&quot;System.Windows.ValueSource&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto fornecido é equivalente à atual <xref href=&quot;System.Windows.ValueSource&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.GetHashCode
  id: GetHashCode
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ValueSource.GetHashCode()
  fullName: System.Windows.ValueSource.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Retorna o código hash para este <xref href=&quot;System.Windows.ValueSource&quot;> </xref>."
  remarks: "Esse código de hash se baseia o <xref:System.Windows.ValueSource.BaseValueSource%2A>valor.</xref:System.Windows.ValueSource.BaseValueSource%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código de hash de inteiro não assinado de 32 bits."
  overload: System.Windows.ValueSource.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsAnimated
  id: IsAnimated
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
  fullName: System.Windows.ValueSource.IsAnimated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém um valor que declara se a propriedade está sendo animada."
  remarks: "Para qualquer propriedade que está sendo animada no momento, a origem é relatado pelo <xref:System.Windows.ValueSource.BaseValueSource%2A>não é imediatamente relevante, porque a animação opera a precedência de propriedade de dependência maior que o valor base.</xref:System.Windows.ValueSource.BaseValueSource%2A> Para obter mais informações sobre precedência e animações, consulte [precedência de valor de propriedade de dependência](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsAnimated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a propriedade é animada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.IsAnimated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsCoerced
  id: IsCoerced
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
  fullName: System.Windows.ValueSource.IsCoerced
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém um valor que declara se este valor resultou de uma <xref href=&quot;System.Windows.CoerceValueCallback&quot;> </xref> implementação aplicada a uma propriedade de dependência."
  remarks: "Se a coerção está atuando em um valor de propriedade, a propriedade mantém um valor desejado e o valor da propriedade tentará alcançar esse valor desejado se as restrições da coerção específica são alteradas ou eliminadas. Uma propriedade forçada que não está em seu valor desejado relatará que IsCoerced é `true`.       Coerção age precedência maior que o valor base e não é estritamente um participante em como o valor base é definido. Portanto, o estado do que está sendo forçado é relatado por essa propriedade, em vez de um valor da <xref:System.Windows.BaseValueSource>enumeração.</xref:System.Windows.BaseValueSource> Para obter mais informações sobre a coerção, valores de base e a precedência, consulte [precedência de valor de propriedade de dependência](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsCoerced { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor de resultado de uma <xref href=&quot;System.Windows.CoerceValueCallback&quot;> </xref> implementação aplicada a uma propriedade de dependência; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.IsCoerced*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsCurrent
  id: IsCurrent
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
  fullName: System.Windows.ValueSource.IsCurrent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém se o valor foi definido com o <xref:System.Windows.DependencyObject.SetCurrentValue*>método.</xref:System.Windows.DependencyObject.SetCurrentValue*>"
  syntax:
    content: public bool IsCurrent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor foi definido com o <xref:System.Windows.DependencyObject.SetCurrentValue*>método; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.DependencyObject.SetCurrentValue*>"
  overload: System.Windows.ValueSource.IsCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsExpression
  id: IsExpression
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsExpression
  nameWithType: ValueSource.IsExpression
  fullName: System.Windows.ValueSource.IsExpression
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém um valor que declara se este valor resultou de uma expressão avaliada. Isso pode ser um <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> com suporte para uma associação ou uma expressão interna, como aqueles que oferecem suporte a [DynamicResource Markup Extension](~/add/includes/ajax-current-ext-md.md)."
  remarks: "Uma expressão avaliada reportará também o valor base específico, definir a condição em que a expressão foi aplicada, como um valor em <xref:System.Windows.ValueSource.BaseValueSource%2A>.</xref:System.Windows.ValueSource.BaseValueSource%2A> O <xref:System.Windows.ValueSource.BaseValueSource%2A>ainda é muito relevante para qualquer propriedade onde IsExpression é `true`.</xref:System.Windows.ValueSource.BaseValueSource%2A> Saber se um valor fornecido por meio de uma expressão pode ser particularmente útil se o valor foi definido indiretamente, por exemplo, por meio de um modelo ou um valor de propriedade herdada.       Se uma expressão não avaliada (Falha na associação; não foi encontrado nenhum recurso do nome), o valor será proveniente do algum outro participante no sistema de propriedade, provavelmente, o valor padrão. Fonte, em seguida, é relatada em <xref:System.Windows.ValueSource.BaseValueSource%2A>.</xref:System.Windows.ValueSource.BaseValueSource%2A> Avaliações de expressão com falha retornará `false` para IsExpression."
  syntax:
    content: public bool IsExpression { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor for proveniente de uma expressão avaliada. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.IsExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  id: op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: op_Equality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Equality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Equality(ValueSource,ValueSource)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Determina se dois <xref href=&quot;System.Windows.ValueSource&quot;> </xref> instâncias tiverem o mesmo valor."
  remarks: "Essa implementação chama <xref:System.Windows.ValueSource.Equals%2A>, e dá suporte ao valor de igualdade com base em todas as propriedades de <xref:System.Windows.ValueSource>.</xref:System.Windows.ValueSource> </xref:System.Windows.ValueSource.Equals%2A>"
  syntax:
    content: public static bool op_Equality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);
    parameters:
    - id: vs1
      type: System.Windows.ValueSource
      description: "A primeira <xref href=&quot;System.Windows.ValueSource&quot;> </xref> para comparar."
    - id: vs2
      type: System.Windows.ValueSource
      description: "A segunda <xref href=&quot;System.Windows.ValueSource&quot;> </xref> para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois <xref href=&quot;System.Windows.ValueSource&quot;> </xref> instâncias forem equivalentes; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  id: op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: op_Inequality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Inequality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Inequality(ValueSource,ValueSource)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Determina se dois <xref href=&quot;System.Windows.ValueSource&quot;> </xref> instâncias não tiverem o mesmo valor."
  remarks: "Essa implementação chama <xref:System.Windows.ValueSource.Equals%2A>, retornando seu negação e dá suporte a igualdade de valor com base em todas as propriedades de <xref:System.Windows.ValueSource>.</xref:System.Windows.ValueSource> </xref:System.Windows.ValueSource.Equals%2A>"
  syntax:
    content: public static bool op_Inequality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);
    parameters:
    - id: vs1
      type: System.Windows.ValueSource
      description: "A primeira <xref href=&quot;System.Windows.ValueSource&quot;> </xref> para comparar."
    - id: vs2
      type: System.Windows.ValueSource
      description: "A segunda <xref href=&quot;System.Windows.ValueSource&quot;> </xref> para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois <xref href=&quot;System.Windows.ValueSource&quot;> </xref> instâncias não são equivalentes; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.ValueSource.BaseValueSource
  parent: System.Windows.ValueSource
  isExternal: false
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
  fullName: System.Windows.ValueSource.BaseValueSource
- uid: System.Windows.BaseValueSource
  parent: System.Windows
  isExternal: false
  name: BaseValueSource
  nameWithType: BaseValueSource
  fullName: System.Windows.BaseValueSource
- uid: System.Windows.ValueSource.Equals(System.Object)
  parent: System.Windows.ValueSource
  isExternal: false
  name: Equals(Object)
  nameWithType: ValueSource.Equals(Object)
  fullName: System.Windows.ValueSource.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.ValueSource.GetHashCode
  parent: System.Windows.ValueSource
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueSource.GetHashCode()
  fullName: System.Windows.ValueSource.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ValueSource.IsAnimated
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
  fullName: System.Windows.ValueSource.IsAnimated
- uid: System.Windows.ValueSource.IsCoerced
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
  fullName: System.Windows.ValueSource.IsCoerced
- uid: System.Windows.ValueSource.IsCurrent
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
  fullName: System.Windows.ValueSource.IsCurrent
- uid: System.Windows.ValueSource.IsExpression
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsExpression
  nameWithType: ValueSource.IsExpression
  fullName: System.Windows.ValueSource.IsExpression
- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Equality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Equality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Equality(ValueSource,ValueSource)
- uid: System.Windows.ValueSource
  parent: System.Windows
  isExternal: false
  name: ValueSource
  nameWithType: ValueSource
  fullName: System.Windows.ValueSource
- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Inequality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Inequality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Inequality(ValueSource,ValueSource)
- uid: System.Windows.ValueSource.BaseValueSource*
  parent: System.Windows.ValueSource
  isExternal: false
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
- uid: System.Windows.ValueSource.Equals*
  parent: System.Windows.ValueSource
  isExternal: false
  name: Equals
  nameWithType: ValueSource.Equals
- uid: System.Windows.ValueSource.GetHashCode*
  parent: System.Windows.ValueSource
  isExternal: false
  name: GetHashCode
  nameWithType: ValueSource.GetHashCode
- uid: System.Windows.ValueSource.IsAnimated*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
- uid: System.Windows.ValueSource.IsCoerced*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
- uid: System.Windows.ValueSource.IsCurrent*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
- uid: System.Windows.ValueSource.IsExpression*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsExpression
  nameWithType: ValueSource.IsExpression
- uid: System.Windows.ValueSource.op_Equality*
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Equality
  nameWithType: ValueSource.op_Equality
- uid: System.Windows.ValueSource.op_Inequality*
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Inequality
  nameWithType: ValueSource.op_Inequality
