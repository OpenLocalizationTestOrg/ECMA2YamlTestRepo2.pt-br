### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ConcurrencyMode
  id: ConcurrencyMode
  children:
  - System.ServiceModel.ConcurrencyMode.Multiple
  - System.ServiceModel.ConcurrencyMode.Reentrant
  - System.ServiceModel.ConcurrencyMode.Single
  langs:
  - csharp
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
  type: Enum
  summary: "Especifica se uma classe de serviço oferece suporte a modos de thread único ou vários threads de operação."
  remarks: "ConcurrencyMode é usado em conjunto com o <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>propriedade para especificar se uma classe de serviço oferece suporte a modos de thread único ou vários threads de operação.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> Uma operação de thread único pode ser reentrante ou não reentrante.       A tabela a seguir mostra quando [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] permite uma operação a ser chamado enquanto outro está em andamento, dependendo do ConcurrencyMode.      | Valor de ConcurrencyMode | Uma nova operação pode ser invocada? |   |---------------------------|-------------------------------------|   | Único | Nunca. |   | Reentrante | Somente durante a chamada de outro serviço ou um retorno de chamada. |   | Vários | Sempre. |"
  example:
  - "The following code example demonstrates the different between using Single, Reentrant, and Multiple. This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] makes and what that means for your operation code.  \n  \n [!code-cs[C_BestPractices-Concurrency#1](~/add/codesnippet/csharp/reentrantandmultiple/reentrantandmultiple.cs#1)]"
  syntax:
    content: public enum ConcurrencyMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Multiple
  id: Multiple
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Multiple
  nameWithType: ConcurrencyMode.Multiple
  fullName: System.ServiceModel.ConcurrencyMode.Multiple
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "A instância do serviço é multi-threaded. Não há nenhuma garantia de sincronização é feita. Como outros threads podem alterar o objeto de serviço a qualquer momento, você deve tratar a sincronização e consistência de estado em todos os momentos."
  syntax:
    content: Multiple
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Reentrant
  id: Reentrant
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Reentrant
  nameWithType: ConcurrencyMode.Reentrant
  fullName: System.ServiceModel.ConcurrencyMode.Reentrant
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "A instância de serviço é de thread único e aceita chamadas reentrantes. O serviço reentrante aceita chamadas quando chama outro serviço; Portanto, é sua responsabilidade para deixar o estado do objeto consistente antes de textos explicativos e você deve confirmar que os dados do local de operação são válidos após textos explicativos. Observe que a instância do serviço é desbloqueada apenas por chama outro serviço em um [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] canal. Nesse caso, o serviço chamado pode reinserir o primeiro serviço por meio de um retorno de chamada. Se o primeiro serviço não for reentrante, a sequência de chamadas resulta em um deadlock. Para obter detalhes, consulte <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*>.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*>"
  syntax:
    content: Reentrant
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Single
  id: Single
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Single
  nameWithType: ConcurrencyMode.Single
  fullName: System.ServiceModel.ConcurrencyMode.Single
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "A instância de serviço é de thread único e não aceita chamadas reentrantes. Se o <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*>é de propriedade <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref>e outras mensagens chegam enquanto a instância de uma chamada de serviços, essas mensagens devem aguardar até que o serviço está disponível ou até que o tempo limite de mensagens.</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*>"
  syntax:
    content: Single
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.ConcurrencyMode.Multiple
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Multiple
  nameWithType: ConcurrencyMode.Multiple
  fullName: System.ServiceModel.ConcurrencyMode.Multiple
- uid: System.ServiceModel.ConcurrencyMode
  parent: System.ServiceModel
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
- uid: System.ServiceModel.ConcurrencyMode.Reentrant
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Reentrant
  nameWithType: ConcurrencyMode.Reentrant
  fullName: System.ServiceModel.ConcurrencyMode.Reentrant
- uid: System.ServiceModel.ConcurrencyMode.Single
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Single
  nameWithType: ConcurrencyMode.Single
  fullName: System.ServiceModel.ConcurrencyMode.Single
