### YamlMime:ManagedReference
items:
- uid: System.Messaging.SecurityContext
  id: SecurityContext
  children:
  - System.Messaging.SecurityContext.Dispose
  langs:
  - csharp
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: System.Messaging.SecurityContext
  type: Class
  summary: "Representa o contexto de segurança para uma mensagem em uma fila."
  remarks: "O contexto de segurança contém informações de segurança armazenadas em cache como um certificado interno, a chave privada correspondente, o SID do usuário, necessária para anexar um certificado e o identificador de remetente para uma mensagem ao solicitar a autenticação.       Se um cliente, como um aplicativo ASP.NET, representa um usuário para enviar uma mensagem para uma fila, a identidade do usuário é usada para acessar a fila. Se a fila for remota, essas credenciais são armazenadas em cache e usadas para mensagens enviadas para a fila subsequentemente. Portanto, o SID nas mensagens subsequentes será a identidade armazenada em cache do primeiro usuário que enviou uma mensagem à fila. A identidade armazenada em cache do primeiro usuário que enviou uma mensagem à fila será usada para os usuários subsequentes.       Para contornar esse problema, defina o contexto de segurança usando <xref:System.Messaging.Message.SecurityContext%2A>antes de enviar uma mensagem para uma fila remota para assegurar que credenciais do usuário atual são usadas para acessar a fila.</xref:System.Messaging.Message.SecurityContext%2A> No entanto, é a prática recomendada sugerida: 1.  Verifique a fila de uma fila autenticada.      2.  Execute o aplicativo ASP.NET como uma identidade de domínio e autorizar esse aplicativo para gravar na fila.      3.  Não represente o usuário ao usar a fila. Em vez disso, obtenha a identidade do chamador e executar a verificação no aplicativo ASP.NET de autorização ou incluir a identidade do chamador como parte da mensagem e executar a verificação do aplicativo receptor de autorização."
  syntax:
    content: 'public sealed class SecurityContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.SecurityContext.Dispose
  id: Dispose
  parent: System.Messaging.SecurityContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Messaging.SecurityContext.Dispose()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Libera todos os recursos usados pelo <xref href=&quot;System.Messaging.SecurityContext&quot;> </xref>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Messaging.SecurityContext.Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Messaging.SecurityContext.Dispose
  parent: System.Messaging.SecurityContext
  isExternal: false
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Messaging.SecurityContext.Dispose()
- uid: System.Messaging.SecurityContext.Dispose*
  parent: System.Messaging.SecurityContext
  isExternal: false
  name: Dispose
  nameWithType: SecurityContext.Dispose
