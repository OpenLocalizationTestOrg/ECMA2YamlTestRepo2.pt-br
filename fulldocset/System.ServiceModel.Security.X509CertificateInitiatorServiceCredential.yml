### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  id: X509CertificateInitiatorServiceCredential
  children:
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  langs:
  - csharp
  name: X509CertificateInitiatorServiceCredential
  nameWithType: X509CertificateInitiatorServiceCredential
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  type: Class
  summary: "Representa as configurações usadas pelo serviço para validar o certificado apresentado pelos clientes. Ele também contém um certificado de serviço a ser usado para criptografar as respostas ou retornos de chamada para clientes quando <xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;> </xref> modo de autenticação de segurança de mensagem é usado."
  remarks: "O certificado definido nesta classe é usado para criptografar mensagens para o cliente somente para associações que são configurados com `MutualCertificateDuplex` modo de autenticação de segurança de mensagem."
  syntax:
    content: public sealed class X509CertificateInitiatorServiceCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  id: Authentication
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém as configurações usadas para validar o certificado apresentado pelo cliente durante a autenticação."
  remarks: ''
  example:
  - "The following code shows how to use this property to set the certificate authentication properties.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication { get; }
    return:
      type: System.ServiceModel.Security.X509ClientCertificateAuthentication
      description: "As configurações usadas para validar o certificado apresentado pelo cliente durante a autenticação."
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  id: Certificate
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém ou define o certificado para uso em <xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;> </xref> modo de autenticação de segurança de mensagem."
  remarks: "Esta propriedade é usada para associações que são configuradas para modo de segurança de mensagem quando `MutualCertificateDuplex` modo de autenticação de segurança de mensagem é usado."
  example:
  - "The following code shows how to use this property to get the certificate.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "O <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> a ser usado para criptografar mensagens enviadas ao cliente pelo serviço no caso-se transporte duplex uncorrelated o <xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;> </xref> modo de autenticação de segurança de mensagem é usado."
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa de definir uma credencial de somente leitura."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: SetCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Permite que você especifique o certificado a ser usado para criptografar mensagens para o cliente, especificando o nome diferenciado do assunto. Essa configuração é usada somente com associações que estão configuradas com o <xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;> </xref> modo de autenticação de segurança de mensagem."
  remarks: "[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]o `subjectName` parâmetro, consulte <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>       Os valores para `storeLocation` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation>enumeração:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: o repositório de certificados atribuído ao computador local (padrão).</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: o repositório de certificados usado pelo usuário atual.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Se o aplicativo cliente é executado sob uma conta de sistema, em seguida, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Se o aplicativo cliente é executado sob uma conta de usuário, em seguida, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Os valores para `storeName` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName>enumeração.</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "The following code shows how to use this method to set the certificate.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: "O nome diferenciado do assunto."
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "O local do repositório de certificados que o serviço usa para obter o certificado."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "O nome do certificado x.&509; repositório para abrir."
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Especifica o certificado a ser usado para criptografar mensagens para o cliente. Essa configuração é usada somente com associações que estão configuradas com o <xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;> </xref> modo de autenticação de segurança de mensagem."
  remarks: "Os valores para `storeLocation` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation>enumeração:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: o repositório de certificados atribuído ao computador local (padrão).</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: o repositório de certificados usado pelo usuário atual.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Se o aplicativo é executado sob uma conta do sistema, em seguida, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Se o aplicativo é executado sob uma conta de usuário, em seguida, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Os valores para `storeName` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName>enumeração.</xref:System.Security.Cryptography.X509Certificates.StoreName>       Os valores para `findType` são incluídos no <xref:System.Security.Cryptography.X509Certificates.X509FindType>enumeração.</xref:System.Security.Cryptography.X509Certificates.X509FindType>       A enumeração mais comumente usada é <xref:System.Security.Cryptography.X509Certificates.X509FindType>, que faz uma pesquisa diferencia maiusculas de minúsculas no nome do assunto de certificados no armazenamento especificado.</xref:System.Security.Cryptography.X509Certificates.X509FindType> Isso pode ser uma pesquisa imprecisa. Se nenhum certificado ou vários certificados que correspondem aos critérios forem encontrados, um <xref:System.InvalidOperationException>é gerada.</xref:System.InvalidOperationException>"
  example:
  - "The following code shows how to use this method to set the certificate.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "O local do repositório de certificados que o serviço usa para obter o certificado."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "O nome do certificado x.&509; repositório para abrir."
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "O tipo de pesquisa x.&509; a ser executado."
    - id: findValue
      type: System.Object
      description: "O valor para pesquisar no repositório de certificados x.&509;."
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
- uid: System.ServiceModel.Security.X509ClientCertificateAuthentication
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509ClientCertificateAuthentication
  nameWithType: X509ClientCertificateAuthentication
  fullName: System.ServiceModel.Security.X509ClientCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: SetCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication*
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate*
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: SetCertificate
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate
