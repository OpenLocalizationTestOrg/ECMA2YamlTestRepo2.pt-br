### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.ParallelTimeline
  id: ParallelTimeline
  children:
  - System.Windows.Media.Animation.ParallelTimeline.#ctor
  - System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})
  - System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)
  - System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)
  - System.Windows.Media.Animation.ParallelTimeline.Clone
  - System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue
  - System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore
  - System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.ParallelTimeline.SlipBehavior
  - System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty
  langs:
  - csharp
  name: ParallelTimeline
  nameWithType: ParallelTimeline
  fullName: System.Windows.Media.Animation.ParallelTimeline
  type: Class
  summary: "Define um segmento de tempo que pode conter filho <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref> objetos. Esses cronogramas filho se tornar ativas de acordo com suas respectivas <xref:System.Windows.Media.Animation.Timeline.BeginTime*>Propriedades.</xref:System.Windows.Media.Animation.Timeline.BeginTime*> Além disso, cronogramas filhos são capazes de se sobrepõem (executado em paralelo) com o outro."
  remarks: "ParallelTimeline objetos podem ser filhos (aninhados) de <xref:System.Windows.Media.Animation.Storyboard>.</xref:System.Windows.Media.Animation.Storyboard> Isso pode fornecer melhor encapsulamento de sequências de tempo em animações complexas.       ParallelTimeline tem seu próprio <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>propriedade, portanto, todos os filhos da linha do tempo <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>são valores em relação ao valor de ParallelTimeline para <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>.</xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> pai</xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> </xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>"
  syntax:
    content: 'public class ParallelTimeline : System.Windows.Media.Animation.TimelineGroup'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Animation.Timeline
  - System.Windows.Media.Animation.TimelineGroup
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  - System.Windows.Media.Animation.TimelineGroup.AddChild(System.Object)
  - System.Windows.Media.Animation.TimelineGroup.AddText(System.String)
  - System.Windows.Media.Animation.TimelineGroup.AllocateClock
  - System.Windows.Media.Animation.TimelineGroup.Children
  - System.Windows.Media.Animation.TimelineGroup.ChildrenProperty
  - System.Windows.Media.Animation.TimelineGroup.CreateClock
  - System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.ParallelTimeline
  langs:
  - csharp
  name: ParallelTimeline()
  nameWithType: ParallelTimeline.ParallelTimeline()
  fullName: System.Windows.Media.Animation.ParallelTimeline.ParallelTimeline()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.Animation.ParallelTimeline&quot;> </xref> classe."
  syntax:
    content: public ParallelTimeline ();
    parameters: []
  overload: System.Windows.Media.Animation.ParallelTimeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})
  id: '#ctor(System.Nullable{System.TimeSpan})'
  parent: System.Windows.Media.Animation.ParallelTimeline
  langs:
  - csharp
  name: ParallelTimeline(Nullable<TimeSpan>)
  nameWithType: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>)
  fullName: System.Windows.Media.Animation.ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.Animation.ParallelTimeline&quot;> </xref> classe com o <xref:System.Windows.Media.Animation.Timeline.BeginTime*>.</xref:System.Windows.Media.Animation.Timeline.BeginTime*> especificado"
  syntax:
    content: public ParallelTimeline (Nullable<TimeSpan> beginTime);
    parameters:
    - id: beginTime
      type: System.Nullable{System.TimeSpan}
      description: "The <xref:System.Windows.Media.Animation.Timeline.BeginTime*> for this <xref href=&quot;System.Windows.Media.Animation.TimelineGroup&quot;></xref>.</xref:System.Windows.Media.Animation.Timeline.BeginTime*>"
  overload: System.Windows.Media.Animation.ParallelTimeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)
  id: '#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)'
  parent: System.Windows.Media.Animation.ParallelTimeline
  langs:
  - csharp
  name: ParallelTimeline(Nullable<TimeSpan>,Duration)
  nameWithType: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>,Duration)
  fullName: System.Windows.Media.Animation.ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>,Duration)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.Animation.ParallelTimeline&quot;> </xref> classe com especificado <> </> *> e <> </> *>."
  syntax:
    content: public ParallelTimeline (Nullable<TimeSpan> beginTime, System.Windows.Duration duration);
    parameters:
    - id: beginTime
      type: System.Nullable{System.TimeSpan}
      description: "The <xref:System.Windows.Media.Animation.Timeline.BeginTime*> for this <xref href=&quot;System.Windows.Media.Animation.TimelineGroup&quot;></xref>.</xref:System.Windows.Media.Animation.Timeline.BeginTime*>"
    - id: duration
      type: System.Windows.Duration
      description: "The <xref:System.Windows.Media.Animation.Timeline.Duration*> for this <xref href=&quot;System.Windows.Media.Animation.TimelineGroup&quot;></xref>.</xref:System.Windows.Media.Animation.Timeline.Duration*>"
  overload: System.Windows.Media.Animation.ParallelTimeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)
  id: '#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)'
  parent: System.Windows.Media.Animation.ParallelTimeline
  langs:
  - csharp
  name: ParallelTimeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  nameWithType: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  fullName: System.Windows.Media.Animation.ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.Animation.ParallelTimeline&quot;> </xref> classe com especificado <> </> *>, <> </> *> e <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>.</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>"
  syntax:
    content: public ParallelTimeline (Nullable<TimeSpan> beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);
    parameters:
    - id: beginTime
      type: System.Nullable{System.TimeSpan}
      description: "The <xref:System.Windows.Media.Animation.Timeline.BeginTime*> for this <xref href=&quot;System.Windows.Media.Animation.TimelineGroup&quot;></xref>.</xref:System.Windows.Media.Animation.Timeline.BeginTime*>"
    - id: duration
      type: System.Windows.Duration
      description: "The <xref:System.Windows.Media.Animation.Timeline.Duration*> for this <xref href=&quot;System.Windows.Media.Animation.TimelineGroup&quot;></xref>.</xref:System.Windows.Media.Animation.Timeline.Duration*>"
    - id: repeatBehavior
      type: System.Windows.Media.Animation.RepeatBehavior
      description: "The <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*> for this <xref href=&quot;System.Windows.Media.Animation.TimelineGroup&quot;></xref>.</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>"
  overload: System.Windows.Media.Animation.ParallelTimeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ParallelTimeline.Clone
  id: Clone
  parent: System.Windows.Media.Animation.ParallelTimeline
  langs:
  - csharp
  name: Clone()
  nameWithType: ParallelTimeline.Clone()
  fullName: System.Windows.Media.Animation.ParallelTimeline.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Cria um clone modificável <xref href=&quot;System.Windows.Media.Animation.ParallelTimeline&quot;> </xref>, fazendo cópias profundas dos valores do objeto. Ao copiar as propriedades de dependência, esse método copia associações de dados e as referências de recurso (mas eles não podem resolver) mas não animações ou seus valores atuais."
  remarks: "Esse método é usado para produzir cópias modificáveis de congelada <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.       Para obter mais informações, consulte <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Animation.ParallelTimeline Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.ParallelTimeline
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade será <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> mesmo se a fonte <> </> *> era de propriedade<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.ParallelTimeline.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Animation.ParallelTimeline
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: ParallelTimeline.CloneCurrentValue()
  fullName: System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Cria um clone modificável <xref href=&quot;System.Windows.Media.Animation.ParallelTimeline&quot;> </xref> objeto, fazendo cópias profundas dos valores atuais deste objeto. Referências de recurso, associações de dados e animações não são copiadas, mas são os valores atuais."
  remarks: "Esse método é usado para produzir cópias modificáveis de congelada <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.       Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Animation.ParallelTimeline CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.ParallelTimeline
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade será <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> mesmo se a fonte <> </> *> propriedade <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.ParallelTimeline
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: ParallelTimeline.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Cria uma nova instância deste <xref href=&quot;System.Windows.Freezable&quot;> </xref>."
  remarks: "Esse método substitui o <xref:System.Windows.Freezable.CreateInstanceCore%2A>método.</xref:System.Windows.Freezable.CreateInstanceCore%2A>"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "The new <xref href=&quot;System.Windows.Freezable&quot;></xref>."
  overload: System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  id: GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.ParallelTimeline
  langs:
  - csharp
  name: GetNaturalDurationCore(Clock)
  nameWithType: ParallelTimeline.GetNaturalDurationCore(Clock)
  fullName: System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(Clock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Retorna a duração natural (duração de uma única iteração) de um <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>."
  remarks: "Uma duração natural é o período de uma única iteração. Se esse método retornar <xref:System.Windows.Duration.Automatic%2A>significa que a duração natural é desconhecida.</xref:System.Windows.Duration.Automatic%2A> Nesse caso, o <xref:System.Windows.Media.Animation.Clock.NaturalDuration%2A>do <xref:System.Windows.Media.Animation.Clock>é determinado pelo autor.</xref:System.Windows.Media.Animation.Clock> </xref:System.Windows.Media.Animation.Clock.NaturalDuration%2A> Por exemplo, a duração de streaming de mídia deve ser determinada pelo provedor de streaming de mídia."
  syntax:
    content: protected override System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);
    parameters:
    - id: clock
      type: System.Windows.Media.Animation.Clock
      description: "O <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> para retornar a duração natural de."
    return:
      type: System.Windows.Duration
      description: "O <xref href=&quot;System.Windows.Duration&quot;> </xref> quantidade que representa a duração natural."
  overload: System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ParallelTimeline.SlipBehavior
  id: SlipBehavior
  parent: System.Windows.Media.Animation.ParallelTimeline
  langs:
  - csharp
  name: SlipBehavior
  nameWithType: ParallelTimeline.SlipBehavior
  fullName: System.Windows.Media.Animation.ParallelTimeline.SlipBehavior
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Obtém ou define um valor que especifica o comportamento essa linha do tempo quando um ou mais dos seus <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref> guias de filhos."
  remarks: "Geralmente é desejável para sincronizar animações e mídia. No entanto, isso é complicado pelo fato de que a reprodução de mídia pode ser atrasada por carregar ou armazenamento em buffer, dificultando a confiável reproduzir uma animação junto com a mídia. A propriedade SlipBehavior é usada para determinar o que acontece quando a mídia e animações são executadas juntos. Um valor de <xref:System.Windows.Media.Animation.SlipBehavior>(padrão) Especifica que linhas de tempo da animação não precisam ser sincronizados e serão executado quando especificado, independentemente do estado de outras mídias na linha do tempo.</xref:System.Windows.Media.Animation.SlipBehavior> Um valor de <xref:System.Windows.Media.Animation.SlipBehavior>por outro lado, especifica que uma animação aguardará (guia) até que a mídia está pronta para reprodução.</xref:System.Windows.Media.Animation.SlipBehavior> Os diagramas abaixo ilustram esse comportamento.       Isso <xref:System.Windows.Media.Animation.Storyboard>reproduz um vídeo e uma animação.</xref:System.Windows.Media.Animation.Storyboard> Quando SlipBehavior está definido como <xref:System.Windows.Media.Animation.SlipBehavior>e <xref:System.Windows.Media.Animation.Timeline.Duration%2A>propriedade do <xref:System.Windows.Media.Animation.Storyboard>é definido como <xref:System.Windows.Duration.Automatic%2A>, o <xref:System.Windows.Media.Animation.Storyboard>aumenta para reproduzir todas as mídias e animações.</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.Duration.Automatic%2A> </xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.Media.Animation.Timeline.Duration%2A> </xref:System.Windows.Media.Animation.SlipBehavior>       ![Diagrama: A chave para o Diagrama SlipBehavior](~/add/media/slipbehaviorkey.png &quot;diagrama: chave para o Diagrama SlipBehavior&quot;)![diagrama: valor da propriedade SlipBehavior de expansão](~/add/media/slipbehaviorgrow1.png &quot;diagrama: valor da propriedade SlipBehavior de expansão&quot;) isso <xref:System.Windows.Media.Animation.Storyboard>tem um SlipBehavior de <xref:System.Windows.Media.Animation.SlipBehavior>e um <xref:System.Windows.Media.Animation.Timeline.Duration%2A>de 5 segundos, que fornece 5 segundos de mídia e animações reproduzir independentemente de quanto de guia.</xref:System.Windows.Media.Animation.Timeline.Duration%2A> </xref:System.Windows.Media.Animation.SlipBehavior> </xref:System.Windows.Media.Animation.Storyboard>              ![Diagrama: Valor de propriedade SlipBehavior de expansão](~/add/media/slipbehaviorgrow2.png &quot;diagrama: valor da propriedade SlipBehavior de expansão&quot;) este <xref:System.Windows.Media.Animation.Storyboard>tem um SlipBehavior de <xref:System.Windows.Media.Animation.SlipBehavior>.</xref:System.Windows.Media.Animation.SlipBehavior> </xref:System.Windows.Media.Animation.Storyboard> Observe que o <xref:System.Windows.Media.Animation.DoubleAnimation>(e nenhum outro filho de mídia não o <xref:System.Windows.Media.Animation.Storyboard>) não progride, a menos que a linha do tempo de mídia também está em andamento.</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.Media.Animation.DoubleAnimation>  Se a mídia leva algum tempo para carregar ou se ele é armazenado em buffer, a animação aguardará (guias) com ele.  Isso permite que as animações sincronizar com um único arquivo de mídia.       ![Diagrama SlipBehavior para mídia e animação](~/add/media/slipbehaviorslip1.png &quot;Diagrama SlipBehavior para mídia e animação&quot;) isso <xref:System.Windows.Media.Animation.Storyboard>tem um SlipBehavior de <xref:System.Windows.Media.Animation.SlipBehavior>e um <xref:System.Windows.Media.Animation.Timeline.Duration%2A>de 5 segundos.</xref:System.Windows.Media.Animation.Timeline.Duration%2A> </xref:System.Windows.Media.Animation.SlipBehavior> </xref:System.Windows.Media.Animation.Storyboard>  Nesse cenário, o arquivo de mídia e animação são garantidos para reproduzir por 5 segundos.       ![Diagrama: Propriedade de SlipBehavior de um Storyboard](~/add/media/slipbehaviorslip2.png &quot;diagrama: propriedade SlipBehavior de um Storyboard&quot;) <a name=&quot;dependencyPropertyInfo_SlipBehavior&quot;> </a> # # informações de propriedade de dependência | | |   |-|-|   | Campo de identificador | <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty>      "
  syntax:
    content: public System.Windows.Media.Animation.SlipBehavior SlipBehavior { get; set; }
    return:
      type: System.Windows.Media.Animation.SlipBehavior
      description: "Um valor que indica como essa linha do tempo se comportará quando um ou mais dos seus <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref> guias de filhos. O valor padrão é <xref href=&quot;System.Windows.Media.Animation.SlipBehavior&quot;> </xref>."
  overload: System.Windows.Media.Animation.ParallelTimeline.SlipBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty
  id: SlipBehaviorProperty
  parent: System.Windows.Media.Animation.ParallelTimeline
  langs:
  - csharp
  name: SlipBehaviorProperty
  nameWithType: ParallelTimeline.SlipBehaviorProperty
  fullName: System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Identifica o <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior*>DependencyProperty.</xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior*>"
  remarks: "O identificador para o <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>DependencyProperty.</xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>"
  example:
  - '[Dependency Properties Overview](~/add/includes/ajax-current-ext-md.md)'
  syntax:
    content: public static readonly System.Windows.DependencyProperty SlipBehaviorProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.TimelineGroup
  isExternal: false
  name: System.Windows.Media.Animation.TimelineGroup
- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: ParallelTimeline()
  nameWithType: ParallelTimeline.ParallelTimeline()
  fullName: System.Windows.Media.Animation.ParallelTimeline.ParallelTimeline()
- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: ParallelTimeline(Nullable<TimeSpan>)
  nameWithType: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>)
  fullName: System.Windows.Media.Animation.ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>)
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: ParallelTimeline(Nullable<TimeSpan>,Duration)
  nameWithType: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>,Duration)
  fullName: System.Windows.Media.Animation.ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>,Duration)
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: ParallelTimeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  nameWithType: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  fullName: System.Windows.Media.Animation.ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
- uid: System.Windows.Media.Animation.RepeatBehavior
  parent: System.Windows.Media.Animation
  isExternal: false
  name: RepeatBehavior
  nameWithType: RepeatBehavior
  fullName: System.Windows.Media.Animation.RepeatBehavior
- uid: System.Windows.Media.Animation.ParallelTimeline.Clone
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: Clone()
  nameWithType: ParallelTimeline.Clone()
  fullName: System.Windows.Media.Animation.ParallelTimeline.Clone()
- uid: System.Windows.Media.Animation.ParallelTimeline
  parent: System.Windows.Media.Animation
  isExternal: false
  name: ParallelTimeline
  nameWithType: ParallelTimeline
  fullName: System.Windows.Media.Animation.ParallelTimeline
- uid: System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: ParallelTimeline.CloneCurrentValue()
  fullName: System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue()
- uid: System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: ParallelTimeline.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: GetNaturalDurationCore(Clock)
  nameWithType: ParallelTimeline.GetNaturalDurationCore(Clock)
  fullName: System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(Clock)
- uid: System.Windows.Media.Animation.Clock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
- uid: System.Windows.Media.Animation.ParallelTimeline.SlipBehavior
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: SlipBehavior
  nameWithType: ParallelTimeline.SlipBehavior
  fullName: System.Windows.Media.Animation.ParallelTimeline.SlipBehavior
- uid: System.Windows.Media.Animation.SlipBehavior
  parent: System.Windows.Media.Animation
  isExternal: false
  name: SlipBehavior
  nameWithType: SlipBehavior
  fullName: System.Windows.Media.Animation.SlipBehavior
- uid: System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: SlipBehaviorProperty
  nameWithType: ParallelTimeline.SlipBehaviorProperty
  fullName: System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor*
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: ParallelTimeline
  nameWithType: ParallelTimeline.ParallelTimeline
- uid: System.Windows.Media.Animation.ParallelTimeline.Clone*
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: Clone
  nameWithType: ParallelTimeline.Clone
- uid: System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue*
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: CloneCurrentValue
  nameWithType: ParallelTimeline.CloneCurrentValue
- uid: System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore*
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: CreateInstanceCore
  nameWithType: ParallelTimeline.CreateInstanceCore
- uid: System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore*
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: GetNaturalDurationCore
  nameWithType: ParallelTimeline.GetNaturalDurationCore
- uid: System.Windows.Media.Animation.ParallelTimeline.SlipBehavior*
  parent: System.Windows.Media.Animation.ParallelTimeline
  isExternal: false
  name: SlipBehavior
  nameWithType: ParallelTimeline.SlipBehavior
