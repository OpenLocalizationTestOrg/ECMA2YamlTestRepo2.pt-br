### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaInference
  id: XmlSchemaInference
  children:
  - System.Xml.Schema.XmlSchemaInference.#ctor
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  - System.Xml.Schema.XmlSchemaInference.Occurrence
  - System.Xml.Schema.XmlSchemaInference.TypeInference
  langs:
  - csharp
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference
  fullName: System.Xml.Schema.XmlSchemaInference
  type: Class
  summary: "Infere um esquema de linguagem de definição de esquema XML (XSD) de um documento XML. A classe XmlSchemaInference não pode ser herdada."
  remarks: "> [!IMPORTANT]>-Não use esquemas de fontes desconhecidas ou não confiáveis ou locais. Isso comprometerá a segurança do seu código.   >-Esquemas XML (incluindo esquemas embutidos) são inerentemente vulneráveis a ataques negação de serviço; não aceitá-los em cenários não confiáveis.   >-Mensagens de erro de validação de esquema e as exceções podem expor informações confidenciais sobre o modelo de conteúdo ou o caminho de URI para o arquivo de esquema. Tenha cuidado para não expor essas informações para chamadores não confiáveis.       A classe de XmlSchemaInference a <xref:System.Xml.Schema?displayProperty=fullName>namespace permite inferir um esquema de linguagem de definição de esquema XML (XSD) da estrutura de um documento XML.</xref:System.Xml.Schema?displayProperty=fullName> A classe XmlSchemaInference gera um esquema XML que possa validar o documento XML.       A classe de XmlSchemaInference compatível com os padrões W3C XML e esquemas XML. Ele pode ser usado para deduzir um novo esquema ou refinar um esquema existente."
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_24_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_24_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_24_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_3.xsd)]"
  syntax:
    content: public sealed class XmlSchemaInference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.Schema.XmlSchemaInference&quot;> </xref> classe."
  syntax:
    content: public XmlSchemaInference ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaInference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  id: InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Infere um esquema de linguagem de definição de esquema XML (XSD) do documento XML contido no <xref:System.Xml.XmlReader>o objeto especificado.</xref:System.Xml.XmlReader>"
  remarks: "O método InferSchema infere um ou mais esquemas W3C linguagem de definição de esquema XML (XSD) do XML de documento contido na instância de <xref:System.Xml.XmlReader>o objeto especificado.</xref:System.Xml.XmlReader> Se o documento XML contém elementos e atributos de vários namespaces, vários esquemas geradas: um para cada namespace usado no documento. O esquema principal é o esquema que pode validar o documento XML inteiro, e seu namespace de destino é o mesmo que o namespace do elemento de documento do documento XML.       A seguir estão as observações importantes a considerar ao usar o método InferSchema.      -O método InferSchema ignora qualquer `xsi:type`, `xsi:schemaLocation`, ou `xsi:noNamespaceSchemaLocation` atributos no documento XML.      -Se a <xref:System.Xml.XmlReader>objeto é digitado, ela contém as informações de tipo serão ignoradas.</xref:System.Xml.XmlReader>      -Se a <xref:System.Xml.XmlReader>objeto está posicionado em um elemento que não é o elemento raiz do documento XML, um esquema é inferido para somente esse elemento.</xref:System.Xml.XmlReader> Se o <xref:System.Xml.XmlReader>objeto não está posicionado em um elemento, o <xref:System.Xml.XmlReader.Read%2A>método é chamado no <xref:System.Xml.XmlReader>até que seja encontrado um elemento de parâmetro (por exemplo, quando <xref:System.Xml.XmlReader.NodeType%2A>é <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> Neste ponto, o processo de inferência inicia no elemento. Não se for encontrado nenhum elemento até o fim do documento, um <xref:System.ArgumentException>é gerada.</xref:System.ArgumentException>"
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_6_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/m-system.xml.schema.xmls_6_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_6_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_3.xsd)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>de documento para inferir um esquema de objeto que contém o XML.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objeto que contém os esquemas inferidos."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "O documento XML não está bem formado."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "O <xref:System.Xml.XmlReader>objeto não está posicionado no nó raiz ou em um elemento.</xref:System.Xml.XmlReader> Ocorrerá um erro durante o processo de inferência de esquema."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  id: InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Infere um esquema de linguagem de definição de esquema XML (XSD) do documento XML contido no <xref:System.Xml.XmlReader>objeto especificado e aprimora o esquema deduzido usando um esquema existente no <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> o objeto especificado com o mesmo namespace de destino.</xref:System.Xml.XmlReader>"
  remarks: "O método InferSchema infere um ou mais esquemas W3C linguagem de definição de esquema XML (XSD) do XML de documento contido na instância de <xref:System.Xml.XmlReader>o objeto especificado.</xref:System.Xml.XmlReader> Se o documento XML contém elementos e atributos de vários namespaces, vários esquemas geradas: um para cada namespace usado no documento. O esquema principal é o esquema que pode validar o documento XML inteiro, e seu namespace de destino é o mesmo que o namespace do elemento de documento do documento XML.       A seguir estão as observações importantes a considerar ao usar o método InferSchema.      -O método InferSchema ignora qualquer `xsi:type`, `xsi:schemaLocation`, ou `xsi:noNamespaceSchemaLocation` atributos no documento XML.      -Se a <xref:System.Xml.XmlReader>objeto é digitado, ela contém as informações de tipo serão ignoradas.</xref:System.Xml.XmlReader>      -Se a <xref:System.Xml.XmlReader>objeto está posicionado em um elemento que não é o elemento raiz do documento XML, um esquema é inferido para somente esse elemento.</xref:System.Xml.XmlReader> Se o <xref:System.Xml.XmlReader>objeto não está posicionado em um elemento, o <xref:System.Xml.XmlReader.Read%2A>método é chamado no <xref:System.Xml.XmlReader>até que seja encontrado um elemento de parâmetro (por exemplo, quando <xref:System.Xml.XmlReader.NodeType%2A>é <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> Neste ponto, o processo de inferência inicia no elemento. Não se for encontrado nenhum elemento até o fim do documento, um <xref:System.ArgumentException>é gerada.</xref:System.ArgumentException>      -Se um <xref:System.Xml.Schema.XmlSchemaSet>objeto é passado como um parâmetro e o elemento no qual o <xref:System.Xml.XmlReader>o objeto será posicionado é definido em um dos esquemas de <xref:System.Xml.Schema.XmlSchemaSet>, o esquema deduzido é usado para refinar um esquema existente no <xref:System.Xml.Schema.XmlSchemaSet>parâmetro com o mesmo namespace de destino; caso contrário, um novo esquema é inferido para o namespace.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - "The following example code takes XML document 1 as an input and generates a schema that can validate XML document 1. The example code then takes XML document 2 and refines the schema generated from XML document 1, based on the changes found in XML document 2.  \n  \n The following is XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#13](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_1.xml)]  \n  \n The following is XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#14](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_2.xml)]  \n  \n The following example code infers a schema from the first XML document contained in `reader`, and then refines the inferred schema with the changes found in the second XML document contained in `reader1`. The example code uses the first overloaded <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method to infer the schema, and the second overloaded InferSchema method to refine the existing schema in the <xref:System.Xml.Schema.XmlSchemaSet> object.  \n  \n [!code-cs[XmlSchemaInferenceExamples#4](~/add/codesnippet/csharp/0c36415c-5ade-4e0e-8494-_3.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#4](~/add/codesnippet/cpp/0c36415c-5ade-4e0e-8494-_3.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#4](~/add/codesnippet/visualbasic/0c36415c-5ade-4e0e-8494-_3.vb)]  \n  \n The following schema is the schema inferred from XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#15](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_4.xml)]  \n  \n The following schema is the refined version of the schema above, based on XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#16](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_5.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>de documento para inferir um esquema de objeto que contém o XML.</xref:System.Xml.XmlReader>"
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objeto que contém um esquema existente usado para refinar o esquema inferido."
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objeto que contém os esquemas inferidos."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "O documento XML não está bem formado."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "O <xref:System.Xml.XmlReader>objeto não está posicionado no nó raiz ou em um elemento.</xref:System.Xml.XmlReader> Ocorrerá um erro durante o processo de inferência de esquema."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  id: Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define o <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>valor que afeta as declarações de ocorrência de esquema inferidas do documento XML.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Se a propriedade de ocorrência for definida como <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, os primeiros elementos de tempo são encontrados no documento XML, a declaração de esquema é inferida como `minOccurs=&quot;1&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> Quando atributos são encontrados, a declaração de esquema é inferida como `use=&quot;required&quot;`.       Se a propriedade de ocorrência for definida como <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, declarações de esquema do elemento são inferidas como `minOccurs=&quot;0&quot;`, e declarações de esquema de atributo são inferidas como `use=&quot;optional&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       O valor padrão da propriedade ocorrência é <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how occurrence is affected by the Occurrence property. The example code infers occurrence from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#7](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer occurrence of elements and attributes in a relaxed way.  \n  \n [!code-cs[XmlSchemaInferenceExamples#2](~/add/codesnippet/csharp/p-system.xml.schema.xmls_3_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#2](~/add/codesnippet/cpp/p-system.xml.schema.xmls_3_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#2](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_3_2.vb)]  \n  \n Because the Occurrence property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#8](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_3.xml)]  \n  \n In the example code above, if the Occurrence property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#9](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "Um <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>objeto.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.Occurrence*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  id: TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define o <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>valor que afeta os tipos inferidos do documento XML.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Se a propriedade TypeInference está definida como <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, o tipo inferido de elementos e atributos no documento XML com conteúdo simples é sempre `xs:string`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> Se a propriedade TypeInference está definida como <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, tipos mais específicos, como são inferidos `xs:date`, `xs:decimal`, `xs:unsignedByte`e assim por diante.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       O valor padrão da propriedade TypeInference é <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how type inference is affected by the TypeInference property. The example code infers types from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#10](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer `xs:string` for elements and attributes with simple content.  \n  \n [!code-cs[XmlSchemaInferenceExamples#3](~/add/codesnippet/csharp/p-system.xml.schema.xmls_0_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#3](~/add/codesnippet/cpp/p-system.xml.schema.xmls_0_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#3](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_0_2.vb)]  \n  \n Because the TypeInference property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#11](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_3.xml)]  \n  \n In the example code above, if the TypeInference property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#12](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "Um <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>objeto.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.TypeInference*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Schema.XmlSchemaInferenceException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInferenceException
  nameWithType: XmlSchemaInferenceException
  fullName: System.Xml.Schema.XmlSchemaInferenceException
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.InferenceOption
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInference+InferenceOption
  nameWithType: XmlSchemaInference+InferenceOption
  fullName: System.Xml.Schema.XmlSchemaInference+InferenceOption
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
- uid: System.Xml.Schema.XmlSchemaInference.#ctor*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference.XmlSchemaInference
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema
  nameWithType: XmlSchemaInference.InferSchema
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
