### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.NameObjectCollectionBase
  id: NameObjectCollectionBase
  children:
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
  - System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  langs:
  - csharp
  name: NameObjectCollectionBase
  nameWithType: NameObjectCollectionBase
  fullName: System.Collections.Specialized.NameObjectCollectionBase
  type: Class
  summary: "Fornece o <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> associados de classe base para uma coleção de <xref:System.String>chaves e <xref:System.Object>valores que podem ser acessados com a chave ou com o índice.</xref:System.Object> </xref:System.String>"
  remarks: "A estrutura subjacente para essa classe é uma tabela de hash.       Cada elemento é um par chave/valor.       A capacidade de um NameObjectCollectionBase é o número de elementos que de NameObjectCollectionBase pode conter. Como os elementos são adicionados a um NameObjectCollectionBase, a capacidade é aumentada automaticamente conforme necessário por meio de realocação.       O provedor de código hash dispensa códigos hash para chaves na instância NameObjectCollectionBase. O provedor de código de hash padrão é <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       O comparador determina se duas chaves são iguais. O comparador padrão é <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Na versão 1.0 do .NET Framework, essa classe usa comparações de cadeia de caracteres sensíveis à cultura. No entanto, no .NET Framework versão 1.1 ou posterior, essa classe usa <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>ao comparar cadeias de caracteres.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> Para obter mais informações sobre como a cultura afeta as comparações e a classificação, consulte [executando operações de cadeia de caracteres de cultura](~/add/includes/ajax-current-ext-md.md).       `null`é permitido como uma chave ou um valor.      > [!CAUTION] > O <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A>método não faz distinção entre `null` que é retornado porque a chave especificada não foi encontrada e `null` que é retornado porque o valor associado com a chave é `null`.</xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A>"
  example:
  - "The following code example shows how to implement and use the NameObjectCollectionBase class.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#1](~/add/codesnippet/cpp/t-system.collections.spe_0_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#1](~/add/codesnippet/csharp/t-system.collections.spe_0_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#1](~/add/codesnippet/visualbasic/t-system.collections.spe_0_1.vb)]"
  syntax:
    content: 'public abstract class NameObjectCollectionBase : System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase()
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> classe está vazio."
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameObjectCollectionBase>é o número de elementos que o <xref:System.Collections.Specialized.NameObjectCollectionBase>pode conter.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameObjectCollectionBase>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Specialized.NameObjectCollectionBase>instância.</xref:System.Collections.Specialized.NameObjectCollectionBase> O provedor de código de hash padrão é <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       O comparador determina se duas chaves são iguais. O comparador padrão é <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Este construtor é uma operação de (1)."
  syntax:
    content: protected NameObjectCollectionBase ();
    parameters: []
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> classe está vazio, tem a capacidade inicial padrão e utiliza especificado <xref:System.Collections.IEqualityComparer>objeto.</xref:System.Collections.IEqualityComparer>"
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameObjectCollectionBase>objeto é o número de elementos que o <xref:System.Collections.Specialized.NameObjectCollectionBase>pode conter.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameObjectCollectionBase>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       O <xref:System.Collections.IEqualityComparer>objeto combina o comparador e o provedor de código de hash.</xref:System.Collections.IEqualityComparer>  O provedor de código hash dispensa códigos hash para chaves em <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>  O comparador determina se duas chaves são iguais.       Este construtor é uma operação de (1)."
  syntax:
    content: protected NameObjectCollectionBase (System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "O <xref:System.Collections.IEqualityComparer>objeto a ser usado para determinar se duas chaves são iguais e gerar códigos de hash para as chaves na coleção.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(Int32)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> classe está vazio, tem a capacidade inicial especificada e usa o provedor de código de hash padrão e o comparador padrão."
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameObjectCollectionBase>é o número de elementos que o <xref:System.Collections.Specialized.NameObjectCollectionBase>pode conter.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameObjectCollectionBase>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Specialized.NameObjectCollectionBase>instância.</xref:System.Collections.Specialized.NameObjectCollectionBase> O provedor de código de hash padrão é <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       O comparador determina se duas chaves são iguais. O comparador padrão é <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Este construtor é um O (`n`) operação, onde `n` é `capacity`."
  syntax:
    content: protected NameObjectCollectionBase (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "O número aproximado de entradas que o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância inicialmente pode conter."
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é menor que zero."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(IHashCodeProvider,IComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> classe está vazio, tem a capacidade inicial padrão e usa o provedor de código de hash especificado e o comparador especificado."
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameObjectCollectionBase>é o número de elementos que o <xref:System.Collections.Specialized.NameObjectCollectionBase>pode conter.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameObjectCollectionBase>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Specialized.NameObjectCollectionBase>instância.</xref:System.Collections.Specialized.NameObjectCollectionBase> O provedor de código de hash padrão é <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       O comparador determina se duas chaves são iguais. O comparador padrão é <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Este construtor é uma operação de (1)."
  syntax:
    content: protected NameObjectCollectionBase (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: "O <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> que fornecerá os códigos de hash para todas as chaves de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
    - id: comparer
      type: System.Collections.IComparer
      description: "O <xref:System.Collections.IComparer>a ser usado para determinar se duas chaves são iguais.</xref:System.Collections.IComparer>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(Int32,IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> classe está vazio, tem a capacidade inicial especificada e usa especificado <xref:System.Collections.IEqualityComparer>objeto.</xref:System.Collections.IEqualityComparer>"
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameObjectCollectionBase>objeto é o número de elementos que o <xref:System.Collections.Specialized.NameObjectCollectionBase>pode conter.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameObjectCollectionBase>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       O <xref:System.Collections.IEqualityComparer>objeto combina o comparador e o provedor de código de hash.</xref:System.Collections.IEqualityComparer>  O provedor de código hash dispensa códigos hash para chaves em <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>  O comparador determina se duas chaves são iguais.       Este construtor é um O (`n`) operação, onde `n` é o `capacity` parâmetro."
  syntax:
    content: protected NameObjectCollectionBase (int capacity, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "O número aproximado de entradas que o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> objeto pode conter inicialmente."
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "O <xref:System.Collections.IEqualityComparer>objeto a ser usado para determinar se duas chaves são iguais e gerar códigos de hash para as chaves na coleção.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é menor que zero."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(SerializationInfo,StreamingContext)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> classe serializável e usa especificado <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> e &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt;."
  remarks: "Este construtor é uma operação de (1)."
  syntax:
    content: protected NameObjectCollectionBase (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Um <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto que contém as informações necessárias para serializar o novo <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Um &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt; objeto que contém a origem e destino do fluxo serializado associado com o novo <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> classe está vazio, tem a capacidade inicial especificada e usa o provedor de código de hash especificado e o comparador especificado."
  remarks: "A capacidade de um <xref:System.Collections.Specialized.NameObjectCollectionBase>é o número de elementos que o <xref:System.Collections.Specialized.NameObjectCollectionBase>pode conter.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Como os elementos são adicionados a um <xref:System.Collections.Specialized.NameObjectCollectionBase>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Specialized.NameObjectCollectionBase>instância.</xref:System.Collections.Specialized.NameObjectCollectionBase> O provedor de código de hash padrão é <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       O comparador determina se duas chaves são iguais. O comparador padrão é <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Este construtor é um O (`n`) operação, onde `n` é `capacity`."
  syntax:
    content: protected NameObjectCollectionBase (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "O número aproximado de entradas que o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância inicialmente pode conter."
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: "O <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> que fornecerá os códigos de hash para todas as chaves de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
    - id: comparer
      type: System.Collections.IComparer
      description: "O <xref:System.Collections.IComparer>a ser usado para determinar se duas chaves são iguais.</xref:System.Collections.IComparer>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é menor que zero."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  id: BaseAdd(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseAdd(String,Object)
  nameWithType: NameObjectCollectionBase.BaseAdd(String,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Adiciona uma entrada com a chave especificada e o valor para o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  remarks: "Se <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>já for igual à capacidade, a capacidade do <xref:System.Collections.Specialized.NameObjectCollectionBase>é aumentado, automaticamente realocando matriz interna, e os elementos existentes são copiados para a nova matriz antes de adicionar o novo elemento.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>       Se <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>é menor que a capacidade, esse método é uma operação de (1).</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> Se a capacidade precisa ser aumentado para acomodar o novo elemento, esse método se torna um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses BaseAdd to create a new <xref:System.Collections.Specialized.NameObjectCollectionBase> with elements from an <xref:System.Collections.IDictionary>.  \n  \n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/add/codesnippet/visualbasic/08f4bd55-361e-4a55-bdc1-_1.vb)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/add/codesnippet/cpp/08f4bd55-361e-4a55-bdc1-_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/add/codesnippet/csharp/08f4bd55-361e-4a55-bdc1-_1.cs)]"
  syntax:
    content: protected void BaseAdd (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "A <xref:System.String>chave da entrada a ser adicionado.</xref:System.String> A chave pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>valor da entrada a ser adicionado.</xref:System.Object> O valor pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  id: BaseClear
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseClear()
  nameWithType: NameObjectCollectionBase.BaseClear()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Remove todas as entradas do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  remarks: "<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>é definido como zero, e referências a outros objetos de elementos da coleção também são liberadas.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>       Esse método é uma operação de (1)."
  example:
  - "The following code example uses BaseClear to remove all elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/add/codesnippet/csharp/m-system.collections.spe_13_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/add/codesnippet/visualbasic/m-system.collections.spe_13_1.vb)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/add/codesnippet/cpp/m-system.collections.spe_13_1.cpp)]"
  syntax:
    content: protected void BaseClear ();
    parameters: []
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseClear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  id: BaseGet(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGet(Int32)
  nameWithType: NameObjectCollectionBase.BaseGet(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém o valor da entrada no índice especificado do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  remarks: "Esse método é uma operação de (1)."
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/cpp/m-system.collections.spe_24_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/csharp/m-system.collections.spe_24_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/visualbasic/m-system.collections.spe_24_1.vb)]"
  syntax:
    content: protected object BaseGet (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice com base em zero do valor a ser obtido."
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o valor da entrada no índice especificado.</xref:System.Object>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGet*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>está fora do intervalo válido de índices para a coleção."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  id: BaseGet(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGet(String)
  nameWithType: NameObjectCollectionBase.BaseGet(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém o valor da primeira entrada com a chave especificada do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  remarks: "Se a coleção contém várias entradas com a chave especificada, esse método retorna apenas a primeira entrada. Para obter os valores das entradas subsequentes com a mesma chave, use o enumerador para iterar na coleção e comparar as chaves.      > [!CAUTION] > Este método retorna `null` nos seguintes casos: 1) se a chave especificada não for encontrada; e 2) se a chave especificada for encontrada e seu valor associado for `null`. Esse método não faz distinção entre os dois casos.       Esse método é uma operação de (1)."
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and BaseGet to get specific keys and values.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/cpp/m-system.collections.spe_41_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/csharp/m-system.collections.spe_41_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/visualbasic/m-system.collections.spe_41_1.vb)]"
  syntax:
    content: protected object BaseGet (string name);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>chave de entrada a ser obtida.</xref:System.String> A chave pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o valor da primeira entrada com a chave especificada, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGet*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  id: BaseGetAllKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGetAllKeys()
  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retorna um <xref:System.String>matriz que contém todas as chaves no <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância.</xref:System.String>"
  remarks: "Esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses BaseGetAllKeys and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A> to get an array of the keys or an array of the values.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/csharp/m-system.collections.spe_38_1.cs)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/cpp/m-system.collections.spe_38_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/visualbasic/m-system.collections.spe_38_1.vb)]"
  syntax:
    content: protected string[] BaseGetAllKeys ();
    parameters: []
    return:
      type: System.String[]
      description: "A <xref:System.String>matriz que contém todas as chaves no <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância.</xref:System.String>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  id: BaseGetAllValues
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGetAllValues()
  nameWithType: NameObjectCollectionBase.BaseGetAllValues()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retorna um <xref:System.Object>matriz que contém todos os valores de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância.</xref:System.Object>"
  remarks: "Esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A> and BaseGetAllValues to get an array of the keys or an array of the values.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/csharp/m-system.collections.spe_32_1.cs)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/cpp/m-system.collections.spe_32_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/visualbasic/m-system.collections.spe_32_1.vb)]"
  syntax:
    content: protected object[] BaseGetAllValues ();
    parameters: []
    return:
      type: System.Object[]
      description: "Um <xref:System.Object>matriz que contém todos os valores de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância.</xref:System.Object>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  id: BaseGetAllValues(System.Type)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGetAllValues(Type)
  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(Type)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retorna uma matriz do tipo especificado que contém todos os valores de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  remarks: "Esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: protected object[] BaseGetAllValues (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Um <xref:System.Type>que representa o tipo de matriz para retornar.</xref:System.Type>"
    return:
      type: System.Object[]
      description: "Uma matriz do tipo especificado que contém todos os valores de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code>não é válido <xref:System.Type>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  id: BaseGetKey(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGetKey(Int32)
  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém a chave da entrada no índice especificado do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  remarks: "Esse método é uma operação de (1)."
  example:
  - "The following code example uses BaseGetKey and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/cpp/3cf5a014-1166-4fdc-b41d-_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/csharp/3cf5a014-1166-4fdc-b41d-_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/visualbasic/3cf5a014-1166-4fdc-b41d-_1.vb)]"
  syntax:
    content: protected string BaseGetKey (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero da chave para obter."
    return:
      type: System.String
      description: "Um <xref:System.String>que representa a chave da entrada no índice especificado.</xref:System.String>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>está fora do intervalo válido de índices para a coleção."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  id: BaseHasKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseHasKeys()
  nameWithType: NameObjectCollectionBase.BaseHasKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância contém entradas cujas chaves não são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Esse método é uma operação de (1)."
  example:
  - "The following code example uses BaseHasKeys to determine if the collection contains keys that are not `null`.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/add/codesnippet/cpp/m-system.collections.spe_17_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/add/codesnippet/visualbasic/m-system.collections.spe_17_1.vb)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/add/codesnippet/csharp/m-system.collections.spe_17_1.cs)]"
  syntax:
    content: protected bool BaseHasKeys ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância contém entradas cujas chaves não são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  id: BaseRemove(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseRemove(String)
  nameWithType: NameObjectCollectionBase.BaseRemove(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Remove as entradas com a chave especificada do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  remarks: "Se o <xref:System.Collections.Specialized.NameObjectCollectionBase>não contém um elemento com a chave especificada, o <xref:System.Collections.Specialized.NameObjectCollectionBase>permanece inalterado.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Nenhuma exceção é lançada.       Coleções de elementos de contíguos, como listas, os elementos que seguem o elemento removido mover para cima para ocupar o ponto vagas. Se a coleção é indexada, os índices dos elementos que são movidos também são atualizados. Esse comportamento não se aplica às coleções onde os elementos são agrupados conceitualmente em blocos, como uma tabela de hash.       Esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses BaseRemove and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A> to remove elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/csharp/6fd86396-bc06-4c0a-8ef5-_1.cs)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/cpp/6fd86396-bc06-4c0a-8ef5-_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/visualbasic/6fd86396-bc06-4c0a-8ef5-_1.vb)]"
  syntax:
    content: protected void BaseRemove (string name);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>chave das entradas para remover.</xref:System.String> A chave pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  id: BaseRemoveAt(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseRemoveAt(Int32)
  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Remove a entrada no índice especificado do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  remarks: "Coleções de elementos de contíguos, como listas, os elementos que seguem o elemento removido mover para cima para ocupar o ponto vagas. Se a coleção é indexada, os índices dos elementos que são movidos também são atualizados. Esse comportamento não se aplica às coleções onde os elementos são agrupados conceitualmente em blocos, como uma tabela de hash.       Esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A> and BaseRemoveAt to remove elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/csharp/c118a875-5132-4e70-b0e9-_1.cs)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/cpp/c118a875-5132-4e70-b0e9-_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/visualbasic/c118a875-5132-4e70-b0e9-_1.vb)]"
  syntax:
    content: protected void BaseRemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero da entrada a ser removido."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>está fora do intervalo válido de índices para a coleção."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  id: BaseSet(System.Int32,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseSet(Int32,Object)
  nameWithType: NameObjectCollectionBase.BaseSet(Int32,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Define o valor da entrada no índice especificado do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  remarks: "Esse método é uma operação de (1)."
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A> to set the value of a specific element.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/cpp/2287b31c-3439-4899-9c69-_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/visualbasic/2287b31c-3439-4899-9c69-_1.vb)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/csharp/2287b31c-3439-4899-9c69-_1.cs)]"
  syntax:
    content: protected void BaseSet (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero da entrada a ser definida."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>que representa o novo valor da entrada a ser definida.</xref:System.Object> O valor pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseSet*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>está fora do intervalo válido de índices para a coleção."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  id: BaseSet(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseSet(String,Object)
  nameWithType: NameObjectCollectionBase.BaseSet(String,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Define o valor da primeira entrada com a chave especificada no <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância, se encontrado; caso contrário, adiciona uma entrada com a chave especificada e o valor para o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  remarks: "Se a coleção contém várias entradas com a chave especificada, esse método define apenas a primeira entrada. Para definir os valores das entradas subsequentes com a mesma chave, use o enumerador para iterar na coleção e comparar as chaves.       Esse método é uma operação de (1)."
  example:
  - "The following code example uses BaseSet to set the value of a specific element.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/cpp/3574a9bc-5d60-40e9-a4ae-_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/visualbasic/3574a9bc-5d60-40e9-a4ae-_1.vb)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/csharp/3574a9bc-5d60-40e9-a4ae-_1.cs)]"
  syntax:
    content: protected void BaseSet (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>chave de entrada a ser definida.</xref:System.String> A chave pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>que representa o novo valor da entrada a ser definida.</xref:System.Object> O valor pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseSet*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count
  id: Count
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: Count
  nameWithType: NameObjectCollectionBase.Count
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém o número de pares chave/valor contidos no <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  remarks: "A capacidade é o número de elementos que o <xref:System.Collections.Specialized.NameObjectCollectionBase>pode armazenar.</xref:System.Collections.Specialized.NameObjectCollectionBase> Contagem é o número de elementos que estão realmente em <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       A capacidade é sempre maior que ou igual à contagem. Se a contagem exceder a capacidade durante a adição de elementos, a capacidade é aumentada automaticamente realocando a matriz interna antes de copiar os elementos antigos e adição de novos elementos.       Recuperar o valor dessa propriedade é uma operação de (1)."
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "O número de pares chave/valor contidos no <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  overload: System.Collections.Specialized.NameObjectCollectionBase.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: NameObjectCollectionBase.GetEnumerator()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retorna um enumerador que itera por meio de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref>."
  remarks: "Este enumerador retorna as chaves da coleção como cadeias de caracteres.       O `foreach` instrução de linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.  Portanto, usando `foreach` é recomendada, em vez de manipulação direta do enumerador.       Enumeradores podem ser usados para ler os dados na coleção, mas eles não podem ser usados para modificar a coleção subjacente.       Inicialmente, o enumerador está posicionado antes do primeiro elemento na coleção. <xref:System.Collections.IEnumerator.Reset%2A>também traz o enumerador de volta para essa posição.</xref:System.Collections.IEnumerator.Reset%2A>  Nesta posição, <xref:System.Collections.IEnumerator.Current%2A>é indefinido.</xref:System.Collections.IEnumerator.Current%2A> Portanto, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A>para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>Retorna o mesmo objeto até que o <xref:System.Collections.IEnumerator.MoveNext%2A>ou <xref:System.Collections.IEnumerator.Reset%2A>é chamado.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>define <xref:System.Collections.IEnumerator.Current%2A>para o próximo elemento.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Se <xref:System.Collections.IEnumerator.MoveNext%2A>passa o final da coleção, o enumerador está posicionado após o último elemento da coleção e <xref:System.Collections.IEnumerator.MoveNext%2A>retorna `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Quando o enumerador está nessa posição, chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A>também retornam `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Se a última chamada <xref:System.Collections.IEnumerator.MoveNext%2A>retornado `false`, <xref:System.Collections.IEnumerator.Current%2A>é indefinido.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Definir <xref:System.Collections.IEnumerator.Current%2A>para o primeiro elemento da coleção novamente, você pode chamar <xref:System.Collections.IEnumerator.Reset%2A>seguido pelo <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       Um enumerador permanece válido desde que a coleção permaneça inalterada. Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e seu comportamento é indefinido.       O enumerador não tem acesso exclusivo à coleção; Portanto, enumerando através de uma coleção intrinsecamente não é um procedimento de segurança do thread.  Para garantir a segurança de thread durante a enumeração, você pode bloquear a coleção durante toda a enumeração.  Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.       Esse método é uma operação de (1)."
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>para o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Implementa o <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> interface e retorna os dados necessários para serializar o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
  remarks: "Esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Um <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto que contém as informações necessárias para serializar o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Um <xref:System.Runtime.Serialization.StreamingContext>objeto que contém a origem e destino do fluxo serializado associado a <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: NameObjectCollectionBase.IsReadOnly
  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância é somente leitura."
  remarks: "Uma coleção que é somente leitura não permite a adição, remoção ou modificação de elementos após a criação da coleção.       Uma coleção que é somente leitura é simplesmente uma coleção com um wrapper que impede a modificação da coleção; Portanto, se forem feitas alterações à coleção subjacente, a coleção somente leitura reflete as alterações.       Recuperar o valor dessa propriedade é uma operação de (1)."
  example:
  - "The following code example creates a read-only collection.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/add/codesnippet/cpp/p-system.collections.spe_25_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/add/codesnippet/csharp/p-system.collections.spe_25_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/add/codesnippet/visualbasic/p-system.collections.spe_25_1.vb)]"
  syntax:
    content: protected bool IsReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância é somente leitura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys
  id: Keys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: Keys
  nameWithType: NameObjectCollectionBase.Keys
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém um <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>que contém todas as chaves da instância de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  remarks: "Recuperar o valor dessa propriedade é uma operação de (1)."
  syntax:
    content: public virtual System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "Um <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>que contém todas as chaves da instância de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  id: OnDeserialization(System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: OnDeserialization(Object)
  nameWithType: NameObjectCollectionBase.OnDeserialization(Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Implementa o <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> de interface e gera o evento de desserialização quando a desserialização foi concluída."
  remarks: "O método OnDeserialization não está visível para COM clientes por padrão, herdando a <xref:System.Collections.Specialized.NameObjectCollectionBase>classe pode expô-lo e pode causar um comportamento indesejado em clientes COM.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual void OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: "A origem do evento de desserialização."
  overload: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto associado atual <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> instância é inválida."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Copia todo o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> para um unidimensional compatível <xref:System.Array>, começando no índice especificado da matriz de destino.</xref:System.Array>"
  remarks: "A matriz especificada deve ser de um tipo compatível.       Esse método usa <xref:System.Array.Copy%2A?displayProperty=fullName>para copiar os elementos.</xref:System.Array.Copy%2A?displayProperty=fullName>       O método CopyTo não está visível para COM clientes por padrão, herdando a <xref:System.Collections.Specialized.NameObjectCollectionBase>classe pode expô-lo e pode causar um comportamento indesejado em clientes COM.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "O unidimensional <xref:System.Array>que é o destino dos elementos copiados de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref>.</xref:System.Array> O <xref:System.Array>devem ter a indexação com base em zero.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O índice de base zero no `array` no qual a cópia começa."
  overload: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>é menor que zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>é multidimensional.       o número de elementos na origem - ou - <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> é maior que o espaço disponível do <code>index</code> até o final do destino <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O tipo da fonte de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> não pode ser convertido automaticamente para o tipo de destino <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém um valor que indica se o acesso para o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> objeto for sincronizado (thread-safe)."
  remarks: "Um <xref:System.Collections.Specialized.NameObjectCollectionBase>objeto não está sincronizado.</xref:System.Collections.Specialized.NameObjectCollectionBase> Classes derivadas podem fornecer uma versão sincronizada do <xref:System.Collections.Specialized.NameObjectCollectionBase>usando o <xref:System.Collections.ICollection.SyncRoot%2A>propriedade.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.Specialized.NameObjectCollectionBase>       Enumerar através de uma coleção intrinsecamente não é um procedimento de thread-safe. Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador lançar uma exceção. Para garantir a segurança de thread durante a enumeração, você pode bloquear a coleção durante toda a enumeração ou capture as exceções resultante de alterações feitas por outros threads.       O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.ICollection.SyncRoot%2A>propriedade durante toda a enumeração.</xref:System.Collections.ICollection.SyncRoot%2A>       [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/csharp/cfdb0c87-90d1-4db2-b260-_1.cs)][!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/cpp/cfdb0c87-90d1-4db2-b260-_1.cpp)][!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/visualbasic/cfdb0c87-90d1-4db2-b260-_1.vb) ] recuperar o valor dessa propriedade é uma operação de (1).    "
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se acessar para o <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> objeto for sincronizado (thread-safe); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém um objeto que pode ser usado para sincronizar o acesso a <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> objeto."
  remarks: "Classes derivadas podem fornecer sua própria versão sincronizada de <xref:System.Collections.Specialized.NameObjectCollectionBase>classe usando o <xref:System.Collections.ICollection.SyncRoot%2A>propriedade.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.Specialized.NameObjectCollectionBase> O código de sincronização necessário realizar operações no <xref:System.Collections.ICollection.SyncRoot%2A>propriedade o <xref:System.Collections.Specialized.NameObjectCollectionBase>objeto, não diretamente no <xref:System.Collections.Specialized.NameObjectCollectionBase>objeto.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.ICollection.SyncRoot%2A> Isso garante que a operação correta de coleções que são derivados de outros objetos. Especificamente, ele mantém uma sincronização adequada com outros threads que podem ser simultaneamente modificando o <xref:System.Collections.Specialized.NameObjectCollectionBase>objeto.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Enumerar através de uma coleção intrinsecamente não é um procedimento de thread-safe. Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador lançar uma exceção. Para garantir a segurança de thread durante a enumeração, você pode bloquear a coleção durante toda a enumeração ou capture as exceções resultante de alterações feitas por outros threads.       O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.ICollection.SyncRoot%2A>durante toda a enumeração.</xref:System.Collections.ICollection.SyncRoot%2A>       [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/csharp/240bf954-5c3e-40ea-821a-_1.cs)][!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/cpp/240bf954-5c3e-40ea-821a-_1.cpp)][!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/visualbasic/240bf954-5c3e-40ea-821a-_1.vb) ] recuperar o valor dessa propriedade é uma operação de (1).    "
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Um objeto que pode ser usado para sincronizar o acesso a <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> objeto."
  overload: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase()
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase()
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(Int32)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(IHashCodeProvider,IComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)
- uid: System.Collections.IHashCodeProvider
  parent: System.Collections
  isExternal: false
  name: IHashCodeProvider
  nameWithType: IHashCodeProvider
  fullName: System.Collections.IHashCodeProvider
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(Int32,IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(SerializationInfo,StreamingContext)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseAdd(String,Object)
  nameWithType: NameObjectCollectionBase.BaseAdd(String,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseClear()
  nameWithType: NameObjectCollectionBase.BaseClear()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGet(Int32)
  nameWithType: NameObjectCollectionBase.BaseGet(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGet(String)
  nameWithType: NameObjectCollectionBase.BaseGet(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(String)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllKeys()
  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllValues()
  nameWithType: NameObjectCollectionBase.BaseGetAllValues()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllValues(Type)
  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetKey(Int32)
  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseHasKeys()
  nameWithType: NameObjectCollectionBase.BaseHasKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemove(String)
  nameWithType: NameObjectCollectionBase.BaseRemove(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(String)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemoveAt(Int32)
  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseSet(Int32,Object)
  nameWithType: NameObjectCollectionBase.BaseSet(Int32,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(Int32,Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseSet(String,Object)
  nameWithType: NameObjectCollectionBase.BaseSet(String,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(String,Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Count
  nameWithType: NameObjectCollectionBase.Count
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetEnumerator()
  nameWithType: NameObjectCollectionBase.GetEnumerator()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: IsReadOnly
  nameWithType: NameObjectCollectionBase.IsReadOnly
  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Keys
  nameWithType: NameObjectCollectionBase.Keys
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: OnDeserialization(Object)
  nameWithType: NameObjectCollectionBase.OnDeserialization(Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseAdd
  nameWithType: NameObjectCollectionBase.BaseAdd
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseClear
  nameWithType: NameObjectCollectionBase.BaseClear
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGet
  nameWithType: NameObjectCollectionBase.BaseGet
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllKeys
  nameWithType: NameObjectCollectionBase.BaseGetAllKeys
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllValues
  nameWithType: NameObjectCollectionBase.BaseGetAllValues
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetKey
  nameWithType: NameObjectCollectionBase.BaseGetKey
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseHasKeys
  nameWithType: NameObjectCollectionBase.BaseHasKeys
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemove
  nameWithType: NameObjectCollectionBase.BaseRemove
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemoveAt
  nameWithType: NameObjectCollectionBase.BaseRemoveAt
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseSet
  nameWithType: NameObjectCollectionBase.BaseSet
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Count
  nameWithType: NameObjectCollectionBase.Count
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetEnumerator
  nameWithType: NameObjectCollectionBase.GetEnumerator
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetObjectData
  nameWithType: NameObjectCollectionBase.GetObjectData
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: IsReadOnly
  nameWithType: NameObjectCollectionBase.IsReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Keys
  nameWithType: NameObjectCollectionBase.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: OnDeserialization
  nameWithType: NameObjectCollectionBase.OnDeserialization
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.CopyTo
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
