### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DataControlFieldCollection
  id: DataControlFieldCollection
  children:
  - System.Web.UI.WebControls.DataControlFieldCollection.#ctor
  - System.Web.UI.WebControls.DataControlFieldCollection.Add(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.CloneFields
  - System.Web.UI.WebControls.DataControlFieldCollection.Contains(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(System.Web.UI.WebControls.DataControlField[],System.Int32)
  - System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
  - System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes
  - System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.Insert(System.Int32,System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.Item(System.Int32)
  - System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete
  - System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.DataControlFieldCollection.Remove(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection
  fullName: System.Web.UI.WebControls.DataControlFieldCollection
  type: Class
  summary: "Representa uma coleção de <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> objetos que são usados por controles de associação de dados como <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> e <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>."
  remarks: "A classe DataControlFieldCollection representa uma coleção de <xref:System.Web.UI.WebControls.DataControlField>objetos usados por controles de associação de dados para especificar como os seus controles filhos são apresentados.</xref:System.Web.UI.WebControls.DataControlField> A classe DataControlFieldCollection deriva <xref:System.Web.UI.StateManagedCollection>, uma classe de coleção de base abstrata usada especificamente para armazenar <xref:System.Web.UI.IStateManager>objetos.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.StateManagedCollection>       Um <xref:System.Web.UI.StateManagedCollection>objeto influencia o comportamento de um objeto DataControlFieldCollection.</xref:System.Web.UI.StateManagedCollection> <xref:System.Web.UI.WebControls.DataControlField>objetos que são adicionados dinamicamente à coleção serão adicionados novamente para o controle quando o estado é restaurado.</xref:System.Web.UI.WebControls.DataControlField> Isso significa que um campo deve ser adicionado, removido ou alterado apenas uma vez, em vez de em cada postback, como a maioria dos tipos de coleção no ASP.NET exigem.       (O <xref:System.Web.UI.WebControls.DataControlField>classe implementa o <xref:System.Web.UI.IStateManager>interface, que permite armazenar seu estado em estado de exibição do ASP.NET.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.DataControlField> ) Use a classe DataControlFieldCollection programaticamente para gerenciar um conjunto de <xref:System.Web.UI.WebControls.DataControlField>objetos.</xref:System.Web.UI.WebControls.DataControlField> Observe que é mais comum para definir esses campos declarativamente.       Você pode adicionar, inserir e remover <xref:System.Web.UI.WebControls.DataControlField>objetos usando os métodos apropriados da classe DataControlFieldCollection.</xref:System.Web.UI.WebControls.DataControlField> Para recuperar programaticamente <xref:System.Web.UI.WebControls.DataControlField>objetos de uma coleção, use um dos seguintes métodos:-Use o indexador para obter um único <xref:System.Web.UI.WebControls.DataControlField>objeto da coleção usando a notação de matriz.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DataControlField>      -Usar o <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>método para criar um <xref:System.Collections.IEnumerator?displayProperty=fullName>-objeto implementado, que pode ser usada para obter itens da coleção.</xref:System.Collections.IEnumerator?displayProperty=fullName> </xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>       O <xref:System.Web.UI.StateManagedCollection.Count%2A>propriedade especifica o número total de itens na coleção e é comumente usada para determinar o limite superior da coleção.</xref:System.Web.UI.StateManagedCollection.Count%2A> Você pode adicionar e remover itens da coleção usando o <xref:System.Web.UI.WebControls.DataControlFieldCollection.Add%2A>, <xref:System.Web.UI.WebControls.DataControlFieldCollection.Insert%2A>, <xref:System.Web.UI.WebControls.DataControlFieldCollection.Remove%2A>, e <xref:System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt%2A>métodos.</xref:System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.DataControlFieldCollection.Remove%2A> </xref:System.Web.UI.WebControls.DataControlFieldCollection.Insert%2A> </xref:System.Web.UI.WebControls.DataControlFieldCollection.Add%2A>       Se você estiver usando o <xref:System.Web.UI.WebControls.GridView>ou <xref:System.Web.UI.WebControls.DetailsView>controle, o <xref:System.Web.UI.WebControls.DataControlField>objetos que são criados automaticamente (por exemplo, quando o <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>é de propriedade `true`) não são armazenados na coleção fields publicamente acessível.</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> </xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Você só pode acessar e manipular <xref:System.Web.UI.WebControls.DataControlField>objetos que não são gerados automaticamente.</xref:System.Web.UI.WebControls.DataControlField>       A tabela a seguir lista as classes de campo de controle de dados diferentes e como eles são usados.      | Classe de parâmetro | Descrição |   |---------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataControlField>| A classe base abstrata para todos os campos. |   | <xref:System.Web.UI.WebControls.BoundField>| Um campo de controle de associação de dados que é usado para vincular a texto ou dados recuperados de um controle de fonte de dados do ASP.NET. |   | <xref:System.Web.UI.WebControls.ButtonFieldBase>| Um campo de controle de associação de dados que encapsula a funcionalidade do botão geral.</xref:System.Web.UI.WebControls.ButtonFieldBase> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField> <xref:System.Web.UI.WebControls.ButtonField>e <xref:System.Web.UI.WebControls.CheckBoxField>são derivados. |   | <xref:System.Web.UI.WebControls.ButtonField>| Um campo de controle associado a dados que exibe pelo menos um botão. |   | <xref:System.Web.UI.WebControls.CheckBoxField>| Um campo de controle associado a dados que exibe um controle <xref:System.Web.UI.WebControls.CheckBox>. |   | <xref:System.Web.UI.WebControls.CommandField>| Um campo de controle associado a dados que exibe ações que podem ser executadas nos dados exibidos por linha (ou coluna), como editar, atualizar ou excluir. |   | <xref:System.Web.UI.WebControls.HyperLinkField>| Um campo de controle associado a dados que exibe um controle <xref:System.Web.UI.WebControls.HyperLink>. |   | <xref:System.Web.UI.WebControls.ImageField>| Um campo de controle associado a dados que exibe um controle <xref:System.Web.UI.WebControls.Image>. |   | <xref:System.Web.UI.WebControls.TemplateField>| Um campo de controle associado a dados que exibe conteúdo personalizado em um controle associado a dados. |</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.WebControls.ImageField> </xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.CommandField> </xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.CheckBoxField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.CheckBoxField></xref:System.Web.UI.WebControls.ButtonField>"
  syntax:
    content: 'public sealed class DataControlFieldCollection : System.Web.UI.StateManagedCollection'
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClear
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: DataControlFieldCollection()
  nameWithType: DataControlFieldCollection.DataControlFieldCollection()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.DataControlFieldCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> classe."
  remarks: "Use este construtor para criar uma nova instância de <xref:System.Web.UI.WebControls.DataControlFieldCollection>classe.</xref:System.Web.UI.WebControls.DataControlFieldCollection>      > [!NOTE] > Este construtor é usado principalmente por desenvolvedores de controle."
  syntax:
    content: public DataControlFieldCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlFieldCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Add(System.Web.UI.WebControls.DataControlField)
  id: Add(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Add(DataControlField)
  nameWithType: DataControlFieldCollection.Add(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Add(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Acrescenta especificado <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> objeto ao final da coleção."
  remarks: "Use o método Add para acrescentar um <xref:System.Web.UI.WebControls.DataControlField>objeto ao final da coleção.</xref:System.Web.UI.WebControls.DataControlField> Essa implementação do método leva o <xref:System.Web.UI.WebControls.DataControlField>objeto especificado pelo `field` parâmetro e o anexa à coleção.</xref:System.Web.UI.WebControls.DataControlField>"
  example:
  - "The following code example demonstrates how to use the Add method to dynamically add a <xref:System.Web.UI.WebControls.CheckBoxField> object to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[CheckBoxFieldCtor#1](~/add/codesnippet/csharp/6b1fdd6c-f2f2-4668-8119-_1.aspx)]\n [!code-vb[CheckBoxFieldCtor#1](~/add/codesnippet/visualbasic/6b1fdd6c-f2f2-4668-8119-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "O <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> para acrescentar à coleção."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields
  id: CloneFields
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: CloneFields()
  nameWithType: DataControlFieldCollection.CloneFields()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria uma cópia da coleção atual."
  remarks: "Use o método CloneFields para criar uma cópia da coleção atual. Esse método é usado principalmente por caixas de diálogo de tempo de design para implementar o comportamento de reversão quando uma operação é cancelada."
  syntax:
    content: public System.Web.UI.WebControls.DataControlFieldCollection CloneFields ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlFieldCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> que contém uma cópia de cada campo de controle de dados na coleção atual."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Contains(System.Web.UI.WebControls.DataControlField)
  id: Contains(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Contains(DataControlField)
  nameWithType: DataControlFieldCollection.Contains(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Contains(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se o <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> coleção contém um determinado <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> objeto."
  remarks: "Esse método executa uma pesquisa linear. Ele determina a igualdade chamando <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "O <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> para localizar no <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> contém especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(System.Web.UI.WebControls.DataControlField[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.DataControlField[],System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: CopyTo(DataControlField[],Int32)
  nameWithType: DataControlFieldCollection.CopyTo(DataControlField[],Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(DataControlField[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia todo o <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> coleção para um unidimensional compatível <xref:System.Array>, começando no índice especificado da matriz de destino.</xref:System.Array>"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.DataControlField[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.DataControlField[]
      description: "O unidimensional <xref:System.Array>que é o destino dos elementos copiados de <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref>.</xref:System.Array> O <xref:System.Array>devem ter a indexação com base em zero.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O índice de base zero no `array` no qual a cópia começa."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>é menor que zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>é multidimensional.       - ou - o número de campos na fonte de <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> coleção é maior que o espaço disponível do <code>index</code> ao final da matriz de destino."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: DataControlFieldCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A ser adicionado."
    return:
      type: System.Object
      description: "A ser adicionado."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
  id: FieldsChanged
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: FieldsChanged
  nameWithType: DataControlFieldCollection.FieldsChanged
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando os campos no conjunto de alteram, geralmente como resultado de uma <> </> *>, <> </> *>, <> </> *> ou <> </> *> chamada de método. Esse evento também é gerado a qualquer momento uma <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> na coleção gera seu <xref uid=&quot;langword_csharp_FieldChanged&quot; name=&quot;FieldChanged&quot; href=&quot;&quot;> </xref> eventos."
  remarks: "O evento FieldsChanged é gerado quando o <xref:System.Web.UI.StateManagedCollection.Clear%2A>, <xref:System.Web.UI.WebControls.DataControlFieldCollection.Insert%2A>, ou <xref:System.Web.UI.WebControls.DataControlFieldCollection.Remove%2A>método é chamado.</xref:System.Web.UI.WebControls.DataControlFieldCollection.Remove%2A> </xref:System.Web.UI.WebControls.DataControlFieldCollection.Insert%2A> </xref:System.Web.UI.StateManagedCollection.Clear%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler FieldsChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: DataControlFieldCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "A ser adicionado."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(System.Web.UI.WebControls.DataControlField)
  id: IndexOf(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: IndexOf(DataControlField)
  nameWithType: DataControlFieldCollection.IndexOf(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina o índice de um determinado <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> objeto na coleção."
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "O <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> localizar na coleção."
    return:
      type: System.Int32
      description: "O índice do <code> field </code> parâmetro, se ele for encontrado na coleção; caso contrário, -1."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Insert(System.Int32,System.Web.UI.WebControls.DataControlField)
  id: Insert(System.Int32,System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Insert(Int32,DataControlField)
  nameWithType: DataControlFieldCollection.Insert(Int32,DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Insert(Int32,DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Insere especificado <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> objeto para o <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> coleção no índice especificado."
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice de base zero no qual o <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> é inserido."
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "O <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> para inserir."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than 0.  \n  \n \\- or -  \n  \n <code>index</code> is greater than <xref:System.Web.UI.StateManagedCollection.Count*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataControlFieldCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> objeto no índice especificado na coleção."
  remarks: "Use este indexador para obter um <xref:System.Web.UI.WebControls.DataControlField>de objeto o <xref:System.Web.UI.WebControls.DataControlFieldCollection>coleção no índice especificado, usando a notação de matriz.</xref:System.Web.UI.WebControls.DataControlFieldCollection> </xref:System.Web.UI.WebControls.DataControlField>"
  example:
  - "The following code example demonstrates how to use the Item indexer to access the fields of a <xref:System.Web.UI.WebControls.GridView> control when the user clicks a button in the control.  \n  \n [!code-cs[ButtonFieldBaseCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1071_1.aspx)]\n [!code-vb[ButtonFieldBaseCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1071_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.DataControlField this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice de base zero de <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> para recuperar da coleção."
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "O <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> no índice especificado na coleção."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete
  id: OnClearComplete
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: DataControlFieldCollection.OnClearComplete()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnClearComplete ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(System.Int32,System.Object)
  id: OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: OnInsertComplete(Int32,Object)
  nameWithType: DataControlFieldCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnInsertComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A ser adicionado."
    - id: value
      type: System.Object
      description: "A ser adicionado."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: DataControlFieldCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A ser adicionado."
    - id: value
      type: System.Object
      description: "A ser adicionado."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: DataControlFieldCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object o);
    parameters:
    - id: o
      type: System.Object
      description: "A ser adicionado."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Remove(System.Web.UI.WebControls.DataControlField)
  id: Remove(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Remove(DataControlField)
  nameWithType: DataControlFieldCollection.Remove(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Remove(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Remove o <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> de objeto o <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> coleção."
  syntax:
    content: public void Remove (System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "O <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> para remover do <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataControlFieldCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Remove o <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> objeto no índice especificado do <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> coleção."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice do <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> para remover."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: DataControlFieldCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "A ser adicionado."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.DataControlFieldCollection.#ctor
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: DataControlFieldCollection()
  nameWithType: DataControlFieldCollection.DataControlFieldCollection()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.DataControlFieldCollection()
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Add(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Add(DataControlField)
  nameWithType: DataControlFieldCollection.Add(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Add(DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CloneFields()
  nameWithType: DataControlFieldCollection.CloneFields()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields()
- uid: System.Web.UI.WebControls.DataControlFieldCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection
  fullName: System.Web.UI.WebControls.DataControlFieldCollection
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Contains(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Contains(DataControlField)
  nameWithType: DataControlFieldCollection.Contains(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Contains(DataControlField)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(System.Web.UI.WebControls.DataControlField[],System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CopyTo(DataControlField[],Int32)
  nameWithType: DataControlFieldCollection.CopyTo(DataControlField[],Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(DataControlField[],Int32)
- uid: System.Web.UI.WebControls.DataControlField[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.DataControlField
    name: DataControlField
    nameWithType: DataControlField
    fullName: DataControlField[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: DataControlFieldCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: FieldsChanged
  nameWithType: DataControlFieldCollection.FieldsChanged
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: DataControlFieldCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: IndexOf(DataControlField)
  nameWithType: DataControlFieldCollection.IndexOf(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(DataControlField)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Insert(System.Int32,System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Insert(Int32,DataControlField)
  nameWithType: DataControlFieldCollection.Insert(Int32,DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Insert(Int32,DataControlField)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataControlFieldCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Item(Int32)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnClearComplete()
  nameWithType: DataControlFieldCollection.OnClearComplete()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete()
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnInsertComplete(Int32,Object)
  nameWithType: DataControlFieldCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(Int32,Object)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: DataControlFieldCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: DataControlFieldCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Remove(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Remove(DataControlField)
  nameWithType: DataControlFieldCollection.Remove(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Remove(DataControlField)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataControlFieldCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: DataControlFieldCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.#ctor*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection.DataControlFieldCollection
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Add*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Add
  nameWithType: DataControlFieldCollection.Add
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CloneFields
  nameWithType: DataControlFieldCollection.CloneFields
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Contains*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Contains
  nameWithType: DataControlFieldCollection.Contains
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataControlFieldCollection.CopyTo
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: DataControlFieldCollection.CreateKnownType
- uid: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: DataControlFieldCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataControlFieldCollection.IndexOf
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Insert*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Insert
  nameWithType: DataControlFieldCollection.Insert
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Item*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Item
  nameWithType: DataControlFieldCollection.Item
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnClearComplete
  nameWithType: DataControlFieldCollection.OnClearComplete
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnInsertComplete
  nameWithType: DataControlFieldCollection.OnInsertComplete
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: DataControlFieldCollection.OnRemoveComplete
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnValidate
  nameWithType: DataControlFieldCollection.OnValidate
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Remove*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Remove
  nameWithType: DataControlFieldCollection.Remove
- uid: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataControlFieldCollection.RemoveAt
- uid: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: DataControlFieldCollection.SetDirtyObject
