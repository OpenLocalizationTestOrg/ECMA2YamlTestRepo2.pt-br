### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter
  id: ControlPropertyNameConverter
  children:
  - System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor
  - System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: ControlPropertyNameConverter
  nameWithType: ControlPropertyNameConverter
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter
  type: Class
  summary: "Fornece um conversor de tipo que recupera uma lista de nomes de propriedade para o controle atual."
  remarks: "A classe ControlPropertyNameConverter deriva de <xref:System.ComponentModel.StringConverter>classe e fornece uma lista de nomes de propriedade para exibição em um controle de grade de propriedade em ambientes de tempo de design.</xref:System.ComponentModel.StringConverter>      > [!CAUTION] > Você nunca deve acessar um conversor de tipo diretamente. Em vez disso, chame o conversor apropriado usando a <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName>classe.</xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> Para obter mais informações, consulte os exemplos de <xref:System.ComponentModel.TypeConverter>classe base.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: 'public class ControlPropertyNameConverter : System.ComponentModel.StringConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.ComponentModel.StringConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  langs:
  - csharp
  name: ControlPropertyNameConverter()
  nameWithType: ControlPropertyNameConverter.ControlPropertyNameConverter()
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.ControlPropertyNameConverter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.ControlPropertyNameConverter&quot;> </xref> classe."
  remarks: "Este construtor não se destina a ser chamado diretamente. Você nunca deve acessar diretamente um conversor de tipo. Em vez disso, chame o conversor apropriado usando a <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName>classe.</xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> Para obter mais informações, consulte os exemplos de <xref:System.ComponentModel.TypeConverter>classe base.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public ControlPropertyNameConverter ();
    parameters: []
  overload: System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ControlPropertyNameConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retorna uma coleção de nomes de propriedade para o controle em um designer que implementa <xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> quando fornecido com um contexto de formato."
  remarks: "O método GetStandardValues retorna um <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>coleção que contém um conjunto de cadeias de caracteres que representa os nomes das propriedades do controle atual.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>       Use o `context` parâmetro para extrair informações adicionais sobre o ambiente de tempo de design do qual este conversor é invocado. Esse parâmetro pode ser `null`, e podem retornar propriedades no objeto de contexto `null`. Se o `context` parâmetro é `null`, esse método retornará `null`."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato que pode ser usado para extrair informações adicionais sobre o ambiente do qual este conversor é invocado. Este parâmetro ou propriedades desse parâmetro podem ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Um <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>que contém um conjunto de cadeias de caracteres que representa os nomes de propriedade para o controle atual.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection> Se o controle atual for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, uma coleção vazia será retornada. If the <code>context</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> is returned."
  overload: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: ControlPropertyNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retorna um valor que indica se a coleção de valores padrão retornada pelo <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*>método é uma lista exclusiva de valores possíveis, usando o contexto especificado.</xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*>"
  remarks: "O método GetStandardValuesExclusive sempre retorna `false` para indicar que a lista de valores de propriedade retornados pelo <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A>método não é uma lista exclusiva de valores possíveis.</xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A>       Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado. Esse parâmetro pode ser `null`, e podem retornar propriedades no objeto de contexto `null`."
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato que pode ser usado para extrair informações adicionais sobre o ambiente do qual este conversor é invocado. Este parâmetro ou propriedades desse parâmetro podem ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>em todos os casos, que indica que a lista não é exclusiva."
  overload: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ControlPropertyNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retorna um valor que indica se esse objeto oferece suporte a um conjunto padrão de valores que podem ser escolhidos em uma lista, usando o contexto especificado."
  remarks: "O método GetStandardValuesSupported retorna um valor que indica se esse objeto oferece suporte a um conjunto de valores padrão.       O `context` parâmetro extrai informações adicionais sobre o ambiente de tempo de design do qual este conversor é invocado. Esse parâmetro pode ser `null`, e podem retornar propriedades no objeto de contexto `null`. Se o `context` parâmetro é `null`, esse método retornará `false`."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato que pode ser usado para extrair informações adicionais sobre o ambiente do qual este conversor é invocado. Este parâmetro ou propriedades desse parâmetro podem ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <code>context</code> parameter is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.StringConverter
  isExternal: false
  name: System.ComponentModel.StringConverter
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: ControlPropertyNameConverter()
  nameWithType: ControlPropertyNameConverter.ControlPropertyNameConverter()
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.ControlPropertyNameConverter()
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ControlPropertyNameConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: ControlPropertyNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ControlPropertyNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor*
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: ControlPropertyNameConverter
  nameWithType: ControlPropertyNameConverter.ControlPropertyNameConverter
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: ControlPropertyNameConverter.GetStandardValues
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive*
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: ControlPropertyNameConverter.GetStandardValuesExclusive
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported*
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: ControlPropertyNameConverter.GetStandardValuesSupported
