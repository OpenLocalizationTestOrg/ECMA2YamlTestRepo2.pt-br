### YamlMime:ManagedReference
items:
- uid: System.Net.Cache.RequestCacheLevel
  id: RequestCacheLevel
  children:
  - System.Net.Cache.RequestCacheLevel.BypassCache
  - System.Net.Cache.RequestCacheLevel.CacheIfAvailable
  - System.Net.Cache.RequestCacheLevel.CacheOnly
  - System.Net.Cache.RequestCacheLevel.Default
  - System.Net.Cache.RequestCacheLevel.NoCacheNoStore
  - System.Net.Cache.RequestCacheLevel.Reload
  - System.Net.Cache.RequestCacheLevel.Revalidate
  langs:
  - csharp
  name: RequestCacheLevel
  nameWithType: RequestCacheLevel
  fullName: System.Net.Cache.RequestCacheLevel
  type: Enum
  summary: "Especifica o comportamento de cache para recursos obtidos usando <xref:System.Net.WebRequest>e suas classes derivadas.</xref:System.Net.WebRequest>"
  remarks: "Membros dessa enumeração são usados para inicializar <xref:System.Net.Cache.RequestCachePolicy>objetos.</xref:System.Net.Cache.RequestCachePolicy> A configuração atual de um <xref:System.Net.Cache.RequestCachePolicy>objeto está disponível no <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A?displayProperty=fullName>propriedade.</xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A?displayProperty=fullName> </xref:System.Net.Cache.RequestCachePolicy>       Isso <xref:System.Net.Cache.HttpRequestCacheLevel>valor é o comportamento de cache padrão especificado no arquivo de configuração da máquina é fornecido com o .NET Framework.</xref:System.Net.Cache.HttpRequestCacheLevel> Nenhuma entrada é tomada de caches, adicionada aos caches ou removida de caches entre o cliente e servidor.       O <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName>propriedade é usada para obter ou definir a política de cache padrão para <xref:System.Net.HttpWebRequest>instâncias.</xref:System.Net.HttpWebRequest> </xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> O <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>propriedade é usada para obter ou definir a política de cache padrão para um <xref:System.Net.WebRequest>instâncias.</xref:System.Net.WebRequest> </xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> O <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>propriedade é usada para obter ou definir a política de cache para uma solicitação específica.</xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>       Uma cópia de um recurso só é adicionada ao cache se o fluxo de resposta para o recurso for recuperado e ler até o final do fluxo. Para que outra solicitação para o mesmo recurso pode usar uma cópia armazenada em cache, dependendo do nível de política de cache padrão para esta solicitação."
  example:
  - "The following code example creates policy that returns a resource only if it is in the cache.  \n  \n [!code-cpp[NclSimpleCache#13](~/add/codesnippet/cpp/t-system.net.cache.reque_0_1.cpp)]\n [!code-cs[NclSimpleCache#13](~/add/codesnippet/csharp/t-system.net.cache.reque_0_1.cs)]"
  syntax:
    content: public enum RequestCacheLevel
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.BypassCache
  id: BypassCache
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: BypassCache
  nameWithType: RequestCacheLevel.BypassCache
  fullName: System.Net.Cache.RequestCacheLevel.BypassCache
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "De acordo com uma solicitação usando o servidor. Nenhuma entrada é tomada de caches, adicionada aos caches ou removida de caches entre o cliente e servidor. Este é o comportamento de cache padrão especificado no arquivo de configuração da máquina é fornecido com o .NET Framework."
  syntax:
    content: BypassCache
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.CacheIfAvailable
  id: CacheIfAvailable
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: CacheIfAvailable
  nameWithType: RequestCacheLevel.CacheIfAvailable
  fullName: System.Net.Cache.RequestCacheLevel.CacheIfAvailable
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Atenda a uma solicitação para um recurso do cache, se o recurso está disponível. Caso contrário, envia uma solicitação para um recurso para o servidor. Se o item solicitado está disponível em qualquer cache entre o cliente e o servidor, a solicitação pode ser atendida pelo cache intermediário."
  remarks: "Uma cópia de um recurso solicitado só é adicionada ao cache se o fluxo de resposta para o recurso for recuperado e ler até o final do fluxo. Para que solicitações subsequentes para o mesmo recurso usaria uma cópia armazenada em cache."
  syntax:
    content: CacheIfAvailable
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.CacheOnly
  id: CacheOnly
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: CacheOnly
  nameWithType: RequestCacheLevel.CacheOnly
  fullName: System.Net.Cache.RequestCacheLevel.CacheOnly
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Atenda a uma solicitação usando o recurso armazenado em cache localmente. não enviar uma solicitação para um item que não está no cache. Quando esse nível de política de cache é especificado, um <xref:System.Net.WebException>exceção é gerada se o item não está no cache do cliente.</xref:System.Net.WebException>"
  syntax:
    content: CacheOnly
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.Default
  id: Default
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: Default
  nameWithType: RequestCacheLevel.Default
  fullName: System.Net.Cache.RequestCacheLevel.Default
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Atenda a uma solicitação para um recurso usando a cópia armazenada em cache do recurso ou enviando uma solicitação para o recurso para o servidor. A ação realizada é determinada pela política de cache atual e a idade do conteúdo no cache. Este é o nível de cache que deve ser usado pela maioria dos aplicativos."
  syntax:
    content: Default
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.NoCacheNoStore
  id: NoCacheNoStore
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: NoCacheNoStore
  nameWithType: RequestCacheLevel.NoCacheNoStore
  fullName: System.Net.Cache.RequestCacheLevel.NoCacheNoStore
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Nunca atende a uma solicitação, usando os recursos do cache e não recursos de cache. Se o recurso está presente no cache local, ele será removido. Esse nível de política indica para caches intermediários que eles devem remover o recurso. O protocolo de cache de HTTP, isso é conseguido usando o <xref uid=&quot;langword_csharp_no-cache&quot; name=&quot;no-cache&quot; href=&quot;&quot;> </xref> diretiva de controle de cache."
  syntax:
    content: NoCacheNoStore
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.Reload
  id: Reload
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: Reload
  nameWithType: RequestCacheLevel.Reload
  fullName: System.Net.Cache.RequestCacheLevel.Reload
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "De acordo com uma solicitação usando o servidor. A resposta pode ser salvo no cache. O protocolo de cache de HTTP, isso é conseguido usando o <xref uid=&quot;langword_csharp_no-cache&quot; name=&quot;no-cache&quot; href=&quot;&quot;> </xref> cache diretiva de controle e o cache não <xref uid=&quot;langword_csharp_Pragma&quot; name=&quot;Pragma&quot; href=&quot;&quot;> </xref> cabeçalho."
  syntax:
    content: Reload
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.Revalidate
  id: Revalidate
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: Revalidate
  nameWithType: RequestCacheLevel.Revalidate
  fullName: System.Net.Cache.RequestCacheLevel.Revalidate
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Atenda a uma solicitação usando a cópia armazenada em cache do recurso se o carimbo de hora é o mesmo que o carimbo de hora do recurso no servidor. Caso contrário, o recurso é baixado do servidor, apresentado para o chamador e armazenado no cache."
  remarks: "Uma cópia de um recurso só é adicionada ao cache se o fluxo de resposta para o recurso for recuperado e ler até o final do fluxo. Solicitações assim subsequentes para o mesmo recurso use uma cópia armazenada em cache se o carimbo de hora para o recurso em cache é o mesmo que o carimbo de hora do recurso no servidor."
  syntax:
    content: Revalidate
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Net.Cache.RequestCacheLevel.BypassCache
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: BypassCache
  nameWithType: RequestCacheLevel.BypassCache
  fullName: System.Net.Cache.RequestCacheLevel.BypassCache
- uid: System.Net.Cache.RequestCacheLevel
  parent: System.Net.Cache
  isExternal: false
  name: RequestCacheLevel
  nameWithType: RequestCacheLevel
  fullName: System.Net.Cache.RequestCacheLevel
- uid: System.Net.Cache.RequestCacheLevel.CacheIfAvailable
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: CacheIfAvailable
  nameWithType: RequestCacheLevel.CacheIfAvailable
  fullName: System.Net.Cache.RequestCacheLevel.CacheIfAvailable
- uid: System.Net.Cache.RequestCacheLevel.CacheOnly
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: CacheOnly
  nameWithType: RequestCacheLevel.CacheOnly
  fullName: System.Net.Cache.RequestCacheLevel.CacheOnly
- uid: System.Net.Cache.RequestCacheLevel.Default
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: Default
  nameWithType: RequestCacheLevel.Default
  fullName: System.Net.Cache.RequestCacheLevel.Default
- uid: System.Net.Cache.RequestCacheLevel.NoCacheNoStore
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: NoCacheNoStore
  nameWithType: RequestCacheLevel.NoCacheNoStore
  fullName: System.Net.Cache.RequestCacheLevel.NoCacheNoStore
- uid: System.Net.Cache.RequestCacheLevel.Reload
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: Reload
  nameWithType: RequestCacheLevel.Reload
  fullName: System.Net.Cache.RequestCacheLevel.Reload
- uid: System.Net.Cache.RequestCacheLevel.Revalidate
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: Revalidate
  nameWithType: RequestCacheLevel.Revalidate
  fullName: System.Net.Cache.RequestCacheLevel.Revalidate
