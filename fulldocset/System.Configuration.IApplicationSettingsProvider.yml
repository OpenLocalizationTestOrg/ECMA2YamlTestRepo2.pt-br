### YamlMime:ManagedReference
items:
- uid: System.Configuration.IApplicationSettingsProvider
  id: IApplicationSettingsProvider
  children:
  - System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: IApplicationSettingsProvider
  nameWithType: IApplicationSettingsProvider
  fullName: System.Configuration.IApplicationSettingsProvider
  type: Interface
  summary: "Define os recursos estendidos para provedores de configurações de aplicativo baseado no cliente."
  remarks: "A arquitetura de configurações do aplicativo permite que você forneça um mecanismo de armazenamento personalizado para as configurações do aplicativo por meio da criação de um provedor de configurações personalizadas, que é uma classe derivada de <xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider> Essa classe contém a funcionalidade básica para armazenar e recuperar propriedades. No entanto, você pode adicionar funcionalidade padronizada adicional ao implementar a interface IApplicationSettingsProvider no provedor de configurações personalizadas. Essa interface contém três métodos que permitem principalmente o provedor de configurações mais inteligente identificador alterações de versão de aplicativo. Normalmente, o provedor de configurações armazena configurações de aplicativo para versões diferentes de um aplicativo separadamente para prever as seguintes circunstâncias:-execução lado a lado de diferentes versões de um aplicativo.      -Retém as configurações do aplicativo ao atualizar um aplicativo.      -Redefinir as configurações de aplicativo para seus valores padrão para a versão usada atualmente.       O <xref:System.Configuration.LocalFileSettingsProvider>classe implementa a interface IApplicationSettingsProvider.</xref:System.Configuration.LocalFileSettingsProvider> Também se encontra no mesmo conjunto de métodos contidos por IApplicationSettingsProvider o <xref:System.Configuration.ApplicationSettingsBase>classe, habilitando o estabelecimento de um canal de comunicação predefinidas entre um wrapper de configurações do aplicativo e o seu provedor de configurações.</xref:System.Configuration.ApplicationSettingsBase>      > [!NOTE] > Essa interface é opcional. Se um provedor não implementa essa interface, a infraestrutura de configurações falhará sem notificação se ele tenta acessar qualquer um dos métodos definidos por esta interface."
  syntax:
    content: public interface IApplicationSettingsProvider
  implements: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Retorna o valor da propriedade de configurações especificadas para a versão anterior do mesmo aplicativo."
  remarks: "Você pode usar o método GetPreviousVersion em conjunto com o <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>método para migrar as configurações do aplicativo durante ou após a instalação de uma nova versão de um aplicativo.</xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Um <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> que descreve o uso do aplicativo atual."
    - id: property
      type: System.Configuration.SettingsProperty
      description: "O <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> cujo valor será retornado."
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "Um <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> que contém o valor da configuração da propriedade especificada como última foi definida na versão anterior do aplicativo; ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a configuração não pode ser encontrada."
  overload: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Redefine as configurações do aplicativo associadas ao aplicativo especificado com seus valores padrão."
  remarks: "O método Reset reinicializa os valores armazenados do grupo de configurações do aplicativo especificado. Por outro lado, <xref:System.Configuration.DefaultSettingValueAttribute>fornece um valor padrão para uma única propriedade durante a inicialização de propriedade, se ele não tem nenhum valor armazenado.</xref:System.Configuration.DefaultSettingValueAttribute>       O provedor de configurações determina quais são os padrões razoáveis para o grupo especificado das configurações de aplicativo. Por exemplo, a implementação em <xref:System.Configuration.LocalFileSettingsProvider>redefine as configurações do escopo do usuário aos respectivos valores compartilhados no `application.exe.config` arquivo; por outro lado, deixa as configurações no escopo do aplicativo inalteradas.</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Um <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> que descreve o uso do aplicativo atual."
  overload: System.Configuration.IApplicationSettingsProvider.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Indica ao provedor que o aplicativo foi atualizado. Isso oferece o provedor a oportunidade de atualizar suas configurações armazenadas conforme apropriado."
  remarks: "O .NET Framework permite que a instalação lado a lado e execução de diferentes versões do mesmo aplicativo. O provedor de configurações do aplicativo armazena as configurações do aplicativo para cada versão de um aplicativo separadamente para garantir o isolamento. No entanto, convém migrar as configurações da versão anterior de um aplicativo para a atual. Para fornecer essa funcionalidade de migração, use o método de atualização, implementado em uma classe derivada de <xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider>       Você pode usar o método de atualização em conjunto com o <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>método para migrar as configurações do aplicativo durante ou após a instalação de uma nova versão de um aplicativo.</xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>       Esse método deve ser suprimido para cada configuração de aplicativo que tem o <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>é aplicada a ele, ou para a classe de invólucro configurações inteira, derivado de <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.NoSettingsVersionUpgradeAttribute>"
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Um <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> que descreve o uso do aplicativo atual."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "Um <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> que contém o grupo de propriedade de configurações cujos valores devem ser recuperados."
  overload: System.Configuration.IApplicationSettingsProvider.Upgrade*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion
- uid: System.Configuration.IApplicationSettingsProvider.Reset*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: IApplicationSettingsProvider.Reset
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: IApplicationSettingsProvider.Upgrade
