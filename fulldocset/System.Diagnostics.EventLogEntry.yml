### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventLogEntry
  id: EventLogEntry
  children:
  - System.Diagnostics.EventLogEntry.Category
  - System.Diagnostics.EventLogEntry.CategoryNumber
  - System.Diagnostics.EventLogEntry.Data
  - System.Diagnostics.EventLogEntry.EntryType
  - System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)
  - System.Diagnostics.EventLogEntry.EventID
  - System.Diagnostics.EventLogEntry.Index
  - System.Diagnostics.EventLogEntry.InstanceId
  - System.Diagnostics.EventLogEntry.MachineName
  - System.Diagnostics.EventLogEntry.Message
  - System.Diagnostics.EventLogEntry.ReplacementStrings
  - System.Diagnostics.EventLogEntry.Source
  - System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Diagnostics.EventLogEntry.TimeGenerated
  - System.Diagnostics.EventLogEntry.TimeWritten
  - System.Diagnostics.EventLogEntry.UserName
  langs:
  - csharp
  name: EventLogEntry
  nameWithType: EventLogEntry
  fullName: System.Diagnostics.EventLogEntry
  type: Class
  summary: "Encapsula um único registro em log de eventos. Essa classe não pode ser herdada."
  remarks: "Você normalmente não criará instâncias do EventLogEntry diretamente ao trabalhar com a <xref:System.Diagnostics.EventLog>classe.</xref:System.Diagnostics.EventLog> O <xref:System.Diagnostics.EventLog.Entries%2A>membro do <xref:System.Diagnostics.EventLog>classe contém uma coleção de instâncias de EventLogEntry que você itera durante a leitura usando o <xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=fullName>membro de índice de classe.</xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=fullName> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Entries%2A>      > [!IMPORTANT] > Este tipo implementa o <xref:System.IDisposable>interface.</xref:System.IDisposable> Quando você terminar de usar o tipo, descarte-direta ou indiretamente. Para descartar o tipo diretamente, chame seu <xref:System.IDisposable.Dispose%2A>método em um `try` / `catch` bloco.</xref:System.IDisposable.Dispose%2A> Para descartar indiretamente dele, use uma construção de linguagem, como `using` (em c#) ou `Using` (no Visual Basic). Para obter mais informações, consulte a seção &quot;Usando um objeto que implementa IDisposable&quot; o <xref:System.IDisposable>tópico da interface.</xref:System.IDisposable>"
  example:
  - "The following code example demonstrates the use of the EventLogEntry class. In this example, a `switch` statement uses console input to search for event log entries for the specified event type.  If a match is found, log entry source information is displayed at the console.  \n  \n [!code-cpp[EventLogEntry_Source#1](~/add/codesnippet/cpp/t-system.diagnostics.eve_4_1.cpp)]\n [!code-cs[EventLogEntry_Source#1](~/add/codesnippet/csharp/t-system.diagnostics.eve_4_1.cs)]\n [!code-vb[EventLogEntry_Source#1](~/add/codesnippet/visualbasic/t-system.diagnostics.eve_4_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DesignTimeVisible(false)]

      [System.ComponentModel.ToolboxItem(false)]

      public sealed class EventLogEntry : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Category
  id: Category
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Category
  nameWithType: EventLogEntry.Category
  fullName: System.Diagnostics.EventLogEntry.Category
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o texto associado a <xref:System.Diagnostics.EventLogEntry.CategoryNumber*>propriedade para esta entrada.</xref:System.Diagnostics.EventLogEntry.CategoryNumber*>"
  remarks: "Cada aplicativo (origem do evento) pode definir suas próprias categorias numeradas e as cadeias de caracteres de texto para o qual eles são mapeados. O Visualizador de eventos pode usar a categoria para filtrar eventos no log."
  syntax:
    content: public string Category { get; }
    return:
      type: System.String
      description: "O texto de categoria específico do aplicativo."
  overload: System.Diagnostics.EventLogEntry.Category*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Não foi possível alocar o espaço para uma das cadeias de caracteres de inserção associadas à categoria."
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.CategoryNumber
  id: CategoryNumber
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: CategoryNumber
  nameWithType: EventLogEntry.CategoryNumber
  fullName: System.Diagnostics.EventLogEntry.CategoryNumber
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o número de categoria da entrada do log de eventos."
  remarks: "Cada aplicativo (origem do evento) pode definir suas próprias categorias numeradas e as cadeias de caracteres de texto para o qual eles são mapeados. O Visualizador de eventos pode usar a categoria para filtrar eventos no log. As categorias devem ser numeradas consecutivamente, começando com o número 1. O número de categoria é especificado o <xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=fullName>propriedade.</xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=fullName> O Visualizador de eventos pode exibir a categoria como um valor numérico, ou pode usar a categoria como um identificador de recurso para exibir uma cadeia de caracteres da categoria localizada. Para obter mais informações, consulte <xref:System.Diagnostics.EventInstance>.</xref:System.Diagnostics.EventInstance>"
  syntax:
    content: public short CategoryNumber { get; }
    return:
      type: System.Int16
      description: "O número de categoria específico do aplicativo para esta entrada."
  overload: System.Diagnostics.EventLogEntry.CategoryNumber*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Data
  id: Data
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Data
  nameWithType: EventLogEntry.Data
  fullName: System.Diagnostics.EventLogEntry.Data
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém os dados binários associados à entrada."
  remarks: "Obter esta propriedade cria uma matriz que contém uma cópia de dados da entrada eventos específicos binário, que exibe o Visualizador de eventos em formato hexadecimal e texto combinado. Dados de eventos específicos, às vezes, são usados para armazenar as informações que o aplicativo processará independentemente do Visualizador de eventos, por exemplo, para criar relatórios a partir do arquivo de log."
  syntax:
    content: public byte[] Data { get; }
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que contém os dados binários associados à entrada."
  overload: System.Diagnostics.EventLogEntry.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.EntryType
  id: EntryType
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: EntryType
  nameWithType: EventLogEntry.EntryType
  fullName: System.Diagnostics.EventLogEntry.EntryType
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o tipo de evento dessa entrada."
  remarks: "Todos os tipos de evento tem bem definido de dados comuns e, opcionalmente, podem incluir dados de eventos específicos. Cada evento é de um único tipo, o aplicativo indica quando o evento informa. O Visualizador de eventos usa o tipo de evento para determinar qual ícone será exibido na exibição de lista do log de eventos."
  example:
  - "The following code example demonstrates the use of the EntryType property. In this example, a `switch` statement uses console input to search for event log entries for the specified EntryType.  If a match is found, log entry source information is displayed at the console.  \n  \n [!code-cpp[EventLogEntry_Source#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_4_1.cpp)]\n [!code-cs[EventLogEntry_Source#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_4_1.cs)]\n [!code-vb[EventLogEntry_Source#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_4_1.vb)]"
  syntax:
    content: public System.Diagnostics.EventLogEntryType EntryType { get; }
    return:
      type: System.Diagnostics.EventLogEntryType
      description: "O tipo de evento que está associado com a entrada no log de eventos."
  overload: System.Diagnostics.EventLogEntry.EntryType*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)
  id: Equals(System.Diagnostics.EventLogEntry)
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Equals(EventLogEntry)
  nameWithType: EventLogEntry.Equals(EventLogEntry)
  fullName: System.Diagnostics.EventLogEntry.Equals(EventLogEntry)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Executa uma comparação entre duas entradas de log de eventos."
  remarks: "Esse método executa uma comparação byte por byte entre os dois objetos. Ela não determina se os dois <xref:System.Diagnostics.EventLogEntry>instâncias façam referência ao mesmo objeto.</xref:System.Diagnostics.EventLogEntry>"
  syntax:
    content: public bool Equals (System.Diagnostics.EventLogEntry otherEntry);
    parameters:
    - id: otherEntry
      type: System.Diagnostics.EventLogEntry
      description: "O <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> objetos são idênticas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.EventLogEntry.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.EventID
  id: EventID
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: EventID
  nameWithType: EventLogEntry.EventID
  fullName: System.Diagnostics.EventLogEntry.EventID
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o identificador de evento específicas do aplicativo para a entrada de evento atual."
  remarks: "Esse valor representa o identificador de evento para a entrada no log, com os dois bits superiores máscaras de eventos. O <xref:System.Diagnostics.EventLogEntry.InstanceId%2A>propriedade para uma entrada de log de eventos representa o identificador de recurso completo de 32 bits para o evento no arquivo de recurso de mensagem para a origem do evento.</xref:System.Diagnostics.EventLogEntry.InstanceId%2A> Duas entradas de log de eventos da mesma origem podem ter valores de EventID correspondentes, mas têm diferentes <xref:System.Diagnostics.EventLogEntry.InstanceId%2A>valores devido a diferenças nos dois bits superiores do identificador de evento.</xref:System.Diagnostics.EventLogEntry.InstanceId%2A>       Se o aplicativo gravou a entrada de evento usando um do <xref:System.Diagnostics.EventLog.WriteEntry%2A>métodos, a propriedade EventID corresponde opcional `eventId` parâmetro.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Se o aplicativo que gravou o evento usando <xref:System.Diagnostics.EventLog.WriteEvent%2A>ou a API do Win32 `ReportEvent`, a propriedade EventID corresponde ao identificador de recurso para o evento, com a parte superior, dois bits off mascarada.</xref:System.Diagnostics.EventLog.WriteEvent%2A>"
  syntax:
    content: public int EventID { get; }
    return:
      type: System.Int32
      description: "O identificador específico do aplicativo para a mensagem de evento."
  overload: System.Diagnostics.EventLogEntry.EventID*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Index
  id: Index
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Index
  nameWithType: EventLogEntry.Index
  fullName: System.Diagnostics.EventLogEntry.Index
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o índice desta entrada no log de eventos."
  remarks: "Esse número não é necessariamente com base em zero."
  syntax:
    content: public int Index { get; }
    return:
      type: System.Int32
      description: "O índice desta entrada no log de eventos."
  overload: System.Diagnostics.EventLogEntry.Index*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.InstanceId
  id: InstanceId
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: InstanceId
  nameWithType: EventLogEntry.InstanceId
  fullName: System.Diagnostics.EventLogEntry.InstanceId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o identificador de recurso que designa o texto da mensagem da entrada do evento."
  remarks: "Propriedade InstanceId identifica exclusivamente uma entrada de evento para uma fonte de evento configurado. InstanceId de uma entrada de log de eventos representa o identificador de recurso completo de 32 bits para o evento no arquivo de recurso de mensagem para a origem do evento. A <xref:System.Diagnostics.EventLogEntry.EventID%2A>propriedade é igual a InstanceId com o off &quot; superior dois bits mascarados.</xref:System.Diagnostics.EventLogEntry.EventID%2A> Duas entradas de log de eventos da mesma origem podem ter correspondência <xref:System.Diagnostics.EventLogEntry.EventID%2A>valores, mas possuem valores diferentes de InstanceId devido a diferenças nos dois bits superiores do identificador de recurso.</xref:System.Diagnostics.EventLogEntry.EventID%2A>       Se o aplicativo gravou a entrada de evento usando um do <xref:System.Diagnostics.EventLog.WriteEntry%2A>métodos, a propriedade InstanceId corresponde opcional `eventId` parâmetro.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Se o aplicativo que gravou o evento usando <xref:System.Diagnostics.EventLog.WriteEvent%2A>, a propriedade InstanceId corresponde ao identificador de recurso especificado no <xref:System.Diagnostics.EventInstance.InstanceId%2A>do `instance` parâmetro.</xref:System.Diagnostics.EventInstance.InstanceId%2A> </xref:System.Diagnostics.EventLog.WriteEvent%2A> Se o aplicativo gravou o evento usando a API do Win32 `ReportEvent`, a propriedade InstanceId corresponde ao identificador de recurso especificado no `dwEventID` parâmetro.       Para obter detalhes sobre a definição de mensagens de eventos e criação de arquivos de recurso de log de eventos, consulte o tópico &quot;Mensagem compilador&quot; na documentação do SDK da plataforma em [http://msdn.microsoft.com](http://msdn.microsoft.com/). Para obter detalhes sobre os identificadores de log de eventos, consulte o tópico &quot;Identificadores de eventos&quot; no SDK da plataforma."
  example:
  - "The following code example searches an event log for entries with a particular resource identifier. The code example displays the event message for each matching entry, and counts the total number of matching entries in the log. The message text for each entry may or may not be the same; each event message depends on the event source message file, insertion strings, and parameters used when it was written.  \n  \n [!code-cpp[EventLog_WriteEvent#10](~/add/codesnippet/cpp/p-system.diagnostics.eve_20_1.cpp)]\n [!code-vb[EventLog_WriteEvent#10](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_20_1.vb)]\n [!code-cs[EventLog_WriteEvent#10](~/add/codesnippet/csharp/p-system.diagnostics.eve_20_1.cs)]"
  syntax:
    content: public long InstanceId { get; }
    return:
      type: System.Int64
      description: "Um identificador de recurso que corresponde a uma definição de cadeia de caracteres no arquivo de recursos de mensagem de origem do evento."
  overload: System.Diagnostics.EventLogEntry.InstanceId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.MachineName
  id: MachineName
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: MachineName
  nameWithType: EventLogEntry.MachineName
  fullName: System.Diagnostics.EventLogEntry.MachineName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o nome do computador no qual esta entrada foi gerada."
  syntax:
    content: public string MachineName { get; }
    return:
      type: System.String
      description: "O nome do computador que contém o log de eventos."
  overload: System.Diagnostics.EventLogEntry.MachineName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Message
  id: Message
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Message
  nameWithType: EventLogEntry.Message
  fullName: System.Diagnostics.EventLogEntry.Message
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém a mensagem localizada associada a essa entrada de evento."
  remarks: "Obter esta propriedade abre o registro para determinar o nome do arquivo do arquivo. dll que contém o texto localizado. Se você receber um erro de registro ao testar seu código-fonte, verifique se o arquivo. dll existe no computador. Se cadeias de caracteres de inserção são incluídas na mensagem, captura erros em suas alocações."
  syntax:
    content: public string Message { get; }
    return:
      type: System.String
      description: "O texto formatado, localizado para a mensagem. Isso inclui cadeias de caracteres de substituição associados."
  overload: System.Diagnostics.EventLogEntry.Message*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Não foi possível alocar espaço para uma das cadeias de caracteres de inserção associadas à mensagem."
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.ReplacementStrings
  id: ReplacementStrings
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: ReplacementStrings
  nameWithType: EventLogEntry.ReplacementStrings
  fullName: System.Diagnostics.EventLogEntry.ReplacementStrings
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém as cadeias de caracteres de substituição associadas à entrada de log de eventos."
  remarks: "Essa propriedade recupera apenas as cadeias de caracteres de substituição para a entrada. Para recuperar a mensagem completa, leia o <xref:System.Diagnostics.EventLogEntry.Message%2A>propriedade.</xref:System.Diagnostics.EventLogEntry.Message%2A>       A propriedade ReplacementStrings contém as versões localizadas de cadeias de caracteres de substituição que são usadas na entrada do log de eventos. Se você fornecer arquivos de recursos que contêm cadeias de caracteres em cada idioma de destino para o seu aplicativo, você pode emitir as mensagens de log de eventos no idioma que é usado no computador. Para fazer isso, crie uma instância do <xref:System.Resources.ResourceManager>classe para o conjunto de recursos que contém cadeias de caracteres de substituição.</xref:System.Resources.ResourceManager> O primeiro parâmetro do <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29>construtor identifica o assembly de recurso a ser usado.</xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> Use o <xref:System.Resources.ResourceManager.GetString%2A>método de instância para fornecer mensagens localizadas para eventos de log.</xref:System.Resources.ResourceManager.GetString%2A> O código a seguir define automaticamente a mensagem para o idioma para a cultura atual.      ```   ResourceManager LocRM = new ResourceManager(&quot;ReplacementStrings.TestStrings&quot;,          typeof(Program).Assembly);   EventLog e1 = new EventLog(&quot;LocTest&quot;, &quot;MyMachine&quot;, &quot;LocTest&quot;);   // Get the string associated with the current culture.   e1.WriteEntry(LocRM.GetString(&quot;strMessage&quot;),      EventLogEntryType.Information);   ```"
  syntax:
    content: public string[] ReplacementStrings { get; }
    return:
      type: System.String[]
      description: "Uma matriz que contém as cadeias de caracteres de substituição armazenados no evento de entrada."
  overload: System.Diagnostics.EventLogEntry.ReplacementStrings*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Source
  id: Source
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Source
  nameWithType: EventLogEntry.Source
  fullName: System.Diagnostics.EventLogEntry.Source
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o nome do aplicativo que gerou este evento."
  remarks: "A origem do evento indica que o evento registrado em log. É geralmente o nome do aplicativo ou o nome de um subcomponente do aplicativo se o aplicativo for grande. Serviços e aplicativos geralmente gravar (e, portanto, são fontes para) o log de aplicativo ou um log personalizado. Drivers de dispositivo geralmente gravam no log do sistema."
  example:
  - "The following code example demonstrates the use of the Source property. In this example, a `switch` statement uses console input to search for event log entries for the specified <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.  If a match is found, the Source property information is displayed at the console.  \n  \n [!code-cpp[EventLogEntry_Source#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_27_1.cpp)]\n [!code-cs[EventLogEntry_Source#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_27_1.cs)]\n [!code-vb[EventLogEntry_Source#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_27_1.vb)]"
  syntax:
    content: public string Source { get; }
    return:
      type: System.String
      description: "O nome registrado com o log de eventos como a origem desse evento."
  overload: System.Diagnostics.EventLogEntry.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Preenche uma <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> com os dados necessários para serializar o objeto de destino."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> para popular com dados."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O destino (consulte <xref:System.Runtime.Serialization.StreamingContext>) desta serialização.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.TimeGenerated
  id: TimeGenerated
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: TimeGenerated
  nameWithType: EventLogEntry.TimeGenerated
  fullName: System.Diagnostics.EventLogEntry.TimeGenerated
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém a hora local em que esse evento foi gerado."
  remarks: "Este membro contém a hora em que um evento foi gerado. Isso não pode ser o mesmo que o tempo em que as informações do evento foi gravadas no log de eventos. Para o último, leia o <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>propriedade.</xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>       Geralmente, há um atraso entre a hora em que um evento é gerado e a hora em que ele está registrado. É mais importante saber quando o evento foi gerado, a menos que você deseja verificar se há um atraso significativo no log. Isso pode acontecer se os arquivos de log estão em um servidor diferente, e você está observando um afunilamento."
  syntax:
    content: public DateTime TimeGenerated { get; }
    return:
      type: System.DateTime
      description: "A hora local em que esse evento foi gerado."
  overload: System.Diagnostics.EventLogEntry.TimeGenerated*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.TimeWritten
  id: TimeWritten
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: TimeWritten
  nameWithType: EventLogEntry.TimeWritten
  fullName: System.Diagnostics.EventLogEntry.TimeWritten
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém a hora local em que esse evento foi gravado no log."
  remarks: "Este membro contém a hora em que as informações de um evento são gravadas no log de eventos. Isso pode não ser o mesmo tempo que quando o evento foi gerado. Para o último, leia o <xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A>propriedade.</xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A>"
  syntax:
    content: public DateTime TimeWritten { get; }
    return:
      type: System.DateTime
      description: "A hora local em que esse evento foi gravado no log."
  overload: System.Diagnostics.EventLogEntry.TimeWritten*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.UserName
  id: UserName
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: UserName
  nameWithType: EventLogEntry.UserName
  fullName: System.Diagnostics.EventLogEntry.UserName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o nome do usuário que é responsável por esse evento."
  remarks: "Geralmente, essa propriedade é em branco para eventos em logs que não sejam o log de segurança."
  syntax:
    content: public string UserName { get; }
    return:
      type: System.String
      description: "O identificador de segurança (SID) que identifica exclusivamente um usuário ou grupo."
  overload: System.Diagnostics.EventLogEntry.UserName*
  exceptions:
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Não foi possível obter informações de conta para o SID do usuário."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Diagnostics.EventLogEntry.Category
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Category
  nameWithType: EventLogEntry.Category
  fullName: System.Diagnostics.EventLogEntry.Category
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.EventLogEntry.CategoryNumber
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: CategoryNumber
  nameWithType: EventLogEntry.CategoryNumber
  fullName: System.Diagnostics.EventLogEntry.CategoryNumber
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Diagnostics.EventLogEntry.Data
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Data
  nameWithType: EventLogEntry.Data
  fullName: System.Diagnostics.EventLogEntry.Data
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLogEntry.EntryType
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: EntryType
  nameWithType: EventLogEntry.EntryType
  fullName: System.Diagnostics.EventLogEntry.EntryType
- uid: System.Diagnostics.EventLogEntryType
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntryType
  nameWithType: EventLogEntryType
  fullName: System.Diagnostics.EventLogEntryType
- uid: System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Equals(EventLogEntry)
  nameWithType: EventLogEntry.Equals(EventLogEntry)
  fullName: System.Diagnostics.EventLogEntry.Equals(EventLogEntry)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.EventLogEntry
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntry
  nameWithType: EventLogEntry
  fullName: System.Diagnostics.EventLogEntry
- uid: System.Diagnostics.EventLogEntry.EventID
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: EventID
  nameWithType: EventLogEntry.EventID
  fullName: System.Diagnostics.EventLogEntry.EventID
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.EventLogEntry.Index
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Index
  nameWithType: EventLogEntry.Index
  fullName: System.Diagnostics.EventLogEntry.Index
- uid: System.Diagnostics.EventLogEntry.InstanceId
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: InstanceId
  nameWithType: EventLogEntry.InstanceId
  fullName: System.Diagnostics.EventLogEntry.InstanceId
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.EventLogEntry.MachineName
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: MachineName
  nameWithType: EventLogEntry.MachineName
  fullName: System.Diagnostics.EventLogEntry.MachineName
- uid: System.Diagnostics.EventLogEntry.Message
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Message
  nameWithType: EventLogEntry.Message
  fullName: System.Diagnostics.EventLogEntry.Message
- uid: System.Diagnostics.EventLogEntry.ReplacementStrings
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: ReplacementStrings
  nameWithType: EventLogEntry.ReplacementStrings
  fullName: System.Diagnostics.EventLogEntry.ReplacementStrings
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLogEntry.Source
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Source
  nameWithType: EventLogEntry.Source
  fullName: System.Diagnostics.EventLogEntry.Source
- uid: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Diagnostics.EventLogEntry.TimeGenerated
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: TimeGenerated
  nameWithType: EventLogEntry.TimeGenerated
  fullName: System.Diagnostics.EventLogEntry.TimeGenerated
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Diagnostics.EventLogEntry.TimeWritten
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: TimeWritten
  nameWithType: EventLogEntry.TimeWritten
  fullName: System.Diagnostics.EventLogEntry.TimeWritten
- uid: System.Diagnostics.EventLogEntry.UserName
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: UserName
  nameWithType: EventLogEntry.UserName
  fullName: System.Diagnostics.EventLogEntry.UserName
- uid: System.Diagnostics.EventLogEntry.Category*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Category
  nameWithType: EventLogEntry.Category
- uid: System.Diagnostics.EventLogEntry.CategoryNumber*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: CategoryNumber
  nameWithType: EventLogEntry.CategoryNumber
- uid: System.Diagnostics.EventLogEntry.Data*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Data
  nameWithType: EventLogEntry.Data
- uid: System.Diagnostics.EventLogEntry.EntryType*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: EntryType
  nameWithType: EventLogEntry.EntryType
- uid: System.Diagnostics.EventLogEntry.Equals*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Equals
  nameWithType: EventLogEntry.Equals
- uid: System.Diagnostics.EventLogEntry.EventID*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: EventID
  nameWithType: EventLogEntry.EventID
- uid: System.Diagnostics.EventLogEntry.Index*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Index
  nameWithType: EventLogEntry.Index
- uid: System.Diagnostics.EventLogEntry.InstanceId*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: InstanceId
  nameWithType: EventLogEntry.InstanceId
- uid: System.Diagnostics.EventLogEntry.MachineName*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: MachineName
  nameWithType: EventLogEntry.MachineName
- uid: System.Diagnostics.EventLogEntry.Message*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Message
  nameWithType: EventLogEntry.Message
- uid: System.Diagnostics.EventLogEntry.ReplacementStrings*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: ReplacementStrings
  nameWithType: EventLogEntry.ReplacementStrings
- uid: System.Diagnostics.EventLogEntry.Source*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Source
  nameWithType: EventLogEntry.Source
- uid: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Diagnostics.EventLogEntry.TimeGenerated*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: TimeGenerated
  nameWithType: EventLogEntry.TimeGenerated
- uid: System.Diagnostics.EventLogEntry.TimeWritten*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: TimeWritten
  nameWithType: EventLogEntry.TimeWritten
- uid: System.Diagnostics.EventLogEntry.UserName*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: UserName
  nameWithType: EventLogEntry.UserName
