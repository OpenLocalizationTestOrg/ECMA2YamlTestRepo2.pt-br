### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.ApplicationManager
  id: ApplicationManager
  children:
  - System.Web.Hosting.ApplicationManager.Close
  - System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)
  - System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)
  - System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)
  - System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)
  - System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)
  - System.Web.Hosting.ApplicationManager.GetApplicationManager
  - System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)
  - System.Web.Hosting.ApplicationManager.GetRunningApplications
  - System.Web.Hosting.ApplicationManager.InitializeLifetimeService
  - System.Web.Hosting.ApplicationManager.IsIdle
  - System.Web.Hosting.ApplicationManager.Open
  - System.Web.Hosting.ApplicationManager.ShutdownAll
  - System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)
  - System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)
  langs:
  - csharp
  name: ApplicationManager
  nameWithType: ApplicationManager
  fullName: System.Web.Hosting.ApplicationManager
  type: Class
  summary: "Gerencia os domínios de aplicativo do ASP.NET para um aplicativo de hospedagem do ASP.NET."
  remarks: "O objeto ApplicationManager fornece gerenciamento de vida útil de objetos no ambiente de hospedagem de um aplicativo ASP.NET. Ele é responsável por: - ativação e inicialização de aplicativos ASP.NET.      -Gerenciar o tempo de vida do aplicativo e o tempo de vida de objetos registrado no aplicativo.      -Expondo objetos usados pelo ambiente de hospedagem para processar solicitações de aplicativo do ASP.NET.      -Fornecer uma lista de aplicativos em execução no processo de hospedagem a qualquer momento."
  syntax:
    content: 'public sealed class ApplicationManager : MarshalByRefObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.Close
  id: Close
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: Close()
  nameWithType: ApplicationManager.Close()
  fullName: System.Web.Hosting.ApplicationManager.Close()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Fecha todos os domínios de aplicativo."
  remarks: "Se uma chamada para o método Close reduz a contagem de referência de aplicativos usando o Gerenciador de aplicativos como 0, o método Close chama o <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A>método.</xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Web.Hosting.ApplicationManager.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)
  id: CreateObject(System.Web.Hosting.IApplicationHost,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: CreateObject(IApplicationHost,Type)
  nameWithType: ApplicationManager.CreateObject(IApplicationHost,Type)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(IApplicationHost,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Cria um objeto para o domínio de aplicativo especificado, com base no tipo."
  remarks: "CreateObject é introduzido no .NET Framework versão 3.5.  Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);
    parameters:
    - id: appHost
      type: System.Web.Hosting.IApplicationHost
      description: "Um <xref href=&quot;System.Web.Hosting.IApplicationHost&quot;> </xref> objeto."
    - id: type
      type: System.Type
      description: "O tipo de objeto a ser criado."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "Um novo objeto do tipo especificado em <code> type </code>."
  overload: System.Web.Hosting.ApplicationManager.CreateObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um caminho físico para o aplicativo não existe."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appHost</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)
  id: CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: CreateObject(String,Type,String,String,Boolean)
  nameWithType: ApplicationManager.CreateObject(String,Type,String,String,Boolean)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(String,Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Cria um objeto para o domínio de aplicativo especificado com base no tipo de caminhos virtuais e físicos e um valor booliano que indica o comportamento de falha quando já existe um objeto do tipo especificado."
  remarks: "O método CreateObject é usado para criar e registrar os objetos no aplicativo. Apenas um objeto de cada tipo pode ser criado. Se você precisar criar vários objetos do mesmo tipo, você deve implementar uma fábrica de objeto. Para obter mais informações, consulte o exemplo de código neste tópico.       Cada aplicativo, identificado por um identificador exclusivo do aplicativo, é executado em seu próprio domínio de aplicativo. O método CreateObject cria um objeto do tipo especificado no domínio do aplicativo do aplicativo especificado no `appID` parâmetro. Se não existir um domínio de aplicativo para o aplicativo especificado, um será criado antes do objeto é criado.       O `failIfExists` parâmetro controla o comportamento do método CreateObject quando já existe um objeto do tipo especificado no aplicativo. Quando `failIfExists` é `true`, o método CreateObject lança um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException>       Quando `failIfExists` é `false`, o método CreateObject retorna o objeto registrado existente do tipo especificado.       O método CreateObject chama a sobrecarga que utiliza mais `throwOnError` parâmetro com `throwOnError` definido como `false`."
  example:
  - "The following code example is an implementation of the object-factory design pattern for registered objects. Using the factory pattern enables you to register multiple instances of an object. The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.  \n  \n [!code-cs[System.Web.Hosting.ApplicationManager#1](~/add/codesnippet/csharp/37d6d853-1462-44e9-b1c3-_1.cs)]\n [!code-vb[System.Web.Hosting.ApplicationManager#1](~/add/codesnippet/visualbasic/37d6d853-1462-44e9-b1c3-_1.vb)]"
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);
    parameters:
    - id: appId
      type: System.String
      description: "O identificador exclusivo para o aplicativo que possui o objeto."
    - id: type
      type: System.Type
      description: "O tipo de objeto a ser criado."
    - id: virtualPath
      type: System.String
      description: "O caminho virtual para o aplicativo."
    - id: physicalPath
      type: System.String
      description: "O caminho físico para o aplicativo."
    - id: failIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para gerar uma exceção se um objeto do tipo especificado está registrada; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para retornar o objeto registrado existente do tipo especificado."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "Um novo objeto do <code> type </code>."
  overload: System.Web.Hosting.ApplicationManager.CreateObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>physicalPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>  \n  \n \\- or -  \n  \n <code>physicalPath</code> is not a valid application path.  \n  \n \\- or -  \n  \n <code>type</code> does not implement the <xref href=\"System.Web.Hosting.IRegisteredObject\"></xref> interface."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appID</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>failIfExists</code>é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e um objeto do tipo especificado já está registrado."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)
  id: CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: CreateObject(String,Type,String,String,Boolean,Boolean)
  nameWithType: ApplicationManager.CreateObject(String,Type,String,String,Boolean,Boolean)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(String,Type,String,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Cria um objeto para o domínio de aplicativo especificado com base no tipo, caminhos virtuais e físicos, um valor booliano que indica o comportamento de falha quando já existe um objeto do tipo especificado e um valor booliano que indica se as exceções de erro de inicialização hospedagem são geradas."
  remarks: "Esta sobrecarga do <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>método fornece o `throwOnError` parâmetro, que lhe permite controlar se as exceções de inicialização de hospedagem são geradas.</xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> A sobrecarga do <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>método que não fornecem `throwOnError` chama essa sobrecarga com o parâmetro definido `false`.</xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>"
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);
    parameters:
    - id: appId
      type: System.String
      description: "O identificador exclusivo para o aplicativo que possui o objeto."
    - id: type
      type: System.Type
      description: "O tipo de objeto a ser criado."
    - id: virtualPath
      type: System.String
      description: "O caminho virtual para o aplicativo."
    - id: physicalPath
      type: System.String
      description: "O caminho físico para o aplicativo."
    - id: failIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para gerar uma exceção se um objeto do tipo especificado está registrada; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para retornar o objeto registrado existente do tipo especificado."
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para lançar exceções para a hospedagem de erros de inicialização. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para não lançar exceções de inicialização de hospedagem."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "Um novo objeto do <code> type </code>."
  overload: System.Web.Hosting.ApplicationManager.CreateObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>physicalPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>  \n  \n \\- or -  \n  \n <code>physicalPath</code> is not a valid application path.  \n  \n \\- or -  \n  \n <code>type</code> does not implement the <xref href=\"System.Web.Hosting.IRegisteredObject\"></xref> interface."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appID</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>failIfExists</code>é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e um objeto do tipo especificado já está registrado."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)
  id: GetAppDomain(System.String)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetAppDomain(String)
  nameWithType: ApplicationManager.GetAppDomain(String)
  fullName: System.Web.Hosting.ApplicationManager.GetAppDomain(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém o domínio de aplicativo do aplicativo especificado."
  syntax:
    content: public AppDomain GetAppDomain (string appId);
    parameters:
    - id: appId
      type: System.String
      description: "O identificador exclusivo do aplicativo."
    return:
      type: System.AppDomain
      description: "O domínio de aplicativo do aplicativo."
  overload: System.Web.Hosting.ApplicationManager.GetAppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)
  id: GetAppDomain(System.Web.Hosting.IApplicationHost)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetAppDomain(IApplicationHost)
  nameWithType: ApplicationManager.GetAppDomain(IApplicationHost)
  fullName: System.Web.Hosting.ApplicationManager.GetAppDomain(IApplicationHost)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém o domínio de aplicativo de um aplicativo usando o host especificado."
  syntax:
    content: public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);
    parameters:
    - id: appHost
      type: System.Web.Hosting.IApplicationHost
      description: "Obter o domínio de aplicativo para o host."
    return:
      type: System.AppDomain
      description: "O domínio de aplicativo do aplicativo."
  overload: System.Web.Hosting.ApplicationManager.GetAppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetApplicationManager
  id: GetApplicationManager
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetApplicationManager()
  nameWithType: ApplicationManager.GetApplicationManager()
  fullName: System.Web.Hosting.ApplicationManager.GetApplicationManager()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Retorna uma instância única do <xref href=&quot;System.Web.Hosting.ApplicationManager&quot;> </xref> objeto associado a esse processo de host do ASP.NET."
  remarks: "Apenas uma instância do <xref:System.Web.Hosting.ApplicationManager>objeto é criado por um processo de host do ASP.NET no domínio de aplicativo padrão.</xref:System.Web.Hosting.ApplicationManager> Se uma instância do <xref:System.Web.Hosting.ApplicationManager>classe não estiver disponível, o método GetApplicationManager cria uma instância do primeiro o <xref:System.Web.Hosting.ApplicationManager>classe e, em seguida, retorna o objeto recém-criado.</xref:System.Web.Hosting.ApplicationManager> </xref:System.Web.Hosting.ApplicationManager> Se uma instância do <xref:System.Web.Hosting.ApplicationManager>classe criada anteriormente, o método GetApplicationManager retorna o objeto existente.</xref:System.Web.Hosting.ApplicationManager>"
  example:
  - "The following code example uses the GetApplicationManager method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.  \n  \n [!code-vb[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/visualbasic/m-system.web.hosting.app_0_1.aspx)]\n [!code-cs[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/csharp/m-system.web.hosting.app_0_1.aspx)]"
  syntax:
    content: public static System.Web.Hosting.ApplicationManager GetApplicationManager ();
    parameters: []
    return:
      type: System.Web.Hosting.ApplicationManager
      description: "A instância única do <xref href=&quot;System.Web.Hosting.ApplicationManager&quot;> </xref> objeto associado ao processo de host do ASP.NET está em execução."
  overload: System.Web.Hosting.ApplicationManager.GetApplicationManager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)
  id: GetObject(System.String,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetObject(String,Type)
  nameWithType: ApplicationManager.GetObject(String,Type)
  fullName: System.Web.Hosting.ApplicationManager.GetObject(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Retorna o objeto registrado do tipo especificado do aplicativo especificado."
  syntax:
    content: public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);
    parameters:
    - id: appId
      type: System.String
      description: "O identificador exclusivo para o aplicativo que possui o objeto."
    - id: type
      type: System.Type
      description: "O tipo de objeto a ser retornado."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "O objeto registrado do tipo especificado; ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o tipo não foi registrado por meio de uma chamada para o <xref:System.Web.Hosting.ApplicationManager.CreateObject*>método.</xref:System.Web.Hosting.ApplicationManager.CreateObject*>"
  overload: System.Web.Hosting.ApplicationManager.GetObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appId</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       —or—       <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetRunningApplications
  id: GetRunningApplications
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetRunningApplications()
  nameWithType: ApplicationManager.GetRunningApplications()
  fullName: System.Web.Hosting.ApplicationManager.GetRunningApplications()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Retorna um instantâneo de execução de aplicativos."
  remarks: ''
  example:
  - "The following code example uses the GetRunningApplications method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.  \n  \n [!code-vb[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/visualbasic/m-system.web.hosting.app_1_1.aspx)]\n [!code-cs[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/csharp/m-system.web.hosting.app_1_1.aspx)]"
  syntax:
    content: public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();
    parameters: []
    return:
      type: System.Web.Hosting.ApplicationInfo[]
      description: "Uma matriz de <xref href=&quot;System.Web.Hosting.ApplicationInfo&quot;> </xref> objetos que contêm informações sobre os aplicativos gerenciados por este <xref href=&quot;System.Web.Hosting.ApplicationManager&quot;> </xref> instância."
  overload: System.Web.Hosting.ApplicationManager.GetRunningApplications*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: ApplicationManager.InitializeLifetimeService()
  fullName: System.Web.Hosting.ApplicationManager.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Fornece o domínio de aplicativo um infinito tempo de vida, impedindo que uma concessão que está sendo criado."
  remarks: "Esse método substitui o <xref:System.MarshalByRefObject.InitializeLifetimeService%2A>método na sua classe base.</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> Sempre retorna `null` e, portanto, impede que uma concessão de ser criado que limita o tempo de vida do domínio de aplicativo."
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Hosting.ApplicationManager.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.IsIdle
  id: IsIdle
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: IsIdle()
  nameWithType: ApplicationManager.IsIdle()
  fullName: System.Web.Hosting.ApplicationManager.IsIdle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Retorna um valor que indica se todos os aplicativos hospedados pelo processo são ociosos e não processando solicitações."
  remarks: "O método IsIdle retorna `true` se todos os aplicativos hospedados pelo processo ociosos."
  syntax:
    content: public bool IsIdle ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se todos os aplicativos no processo ociosos; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.ApplicationManager.IsIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.Open
  id: Open
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: Open()
  nameWithType: ApplicationManager.Open()
  fullName: System.Web.Hosting.ApplicationManager.Open()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Faz um incremento de thread-safe para a contagem de referência de usuário da instância do Gerenciador do aplicativo."
  syntax:
    content: public void Open ();
    parameters: []
  overload: System.Web.Hosting.ApplicationManager.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.ShutdownAll
  id: ShutdownAll
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: ShutdownAll()
  nameWithType: ApplicationManager.ShutdownAll()
  fullName: System.Web.Hosting.ApplicationManager.ShutdownAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Descarrega todos os recursos de aplicativo."
  remarks: "Chamar o método ShutdownAll é equivalente a chamar o <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName>método em todos os domínios de aplicativo gerenciado por este <xref:System.Web.Hosting.ApplicationManager>instância; no entanto, o método ShutdownAll pode ser chamado de fora dos domínios de aplicativo gerenciado.</xref:System.Web.Hosting.ApplicationManager> </xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName>"
  syntax:
    content: public void ShutdownAll ();
    parameters: []
  overload: System.Web.Hosting.ApplicationManager.ShutdownAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)
  id: ShutdownApplication(System.String)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: ShutdownApplication(String)
  nameWithType: ApplicationManager.ShutdownApplication(String)
  fullName: System.Web.Hosting.ApplicationManager.ShutdownApplication(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Descarrega o aplicativo especificado."
  remarks: "Chamar o método ShutdownApplication é equivalente a chamar o <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName>método para um domínio de aplicativo específico; no entanto, o método ShutdownApplication pode ser chamado de domínios de aplicativo gerenciado fora.</xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName>"
  syntax:
    content: public void ShutdownApplication (string appId);
    parameters:
    - id: appId
      type: System.String
      description: "O identificador exclusivo do aplicativo ser descarregado."
  overload: System.Web.Hosting.ApplicationManager.ShutdownApplication*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appId</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)
  id: StopObject(System.String,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: StopObject(String,Type)
  nameWithType: ApplicationManager.StopObject(String,Type)
  fullName: System.Web.Hosting.ApplicationManager.StopObject(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Remove o objeto especificado na lista de objetos registrados em um aplicativo. Se o objeto a ser removido é o último objeto restante na lista de objetos registrados em um aplicativo, o aplicativo será descarregado."
  syntax:
    content: public void StopObject (string appId, Type type);
    parameters:
    - id: appId
      type: System.String
      description: "O identificador exclusivo para o aplicativo que possui o objeto."
    - id: type
      type: System.Type
      description: "O tipo do objeto a ser descarregado."
  overload: System.Web.Hosting.ApplicationManager.StopObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appId</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Hosting.ApplicationManager.Close
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: Close()
  nameWithType: ApplicationManager.Close()
  fullName: System.Web.Hosting.ApplicationManager.Close()
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: CreateObject(IApplicationHost,Type)
  nameWithType: ApplicationManager.CreateObject(IApplicationHost,Type)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(IApplicationHost,Type)
- uid: System.Web.Hosting.IRegisteredObject
  parent: System.Web.Hosting
  isExternal: false
  name: IRegisteredObject
  nameWithType: IRegisteredObject
  fullName: System.Web.Hosting.IRegisteredObject
- uid: System.Web.Hosting.IApplicationHost
  parent: System.Web.Hosting
  isExternal: false
  name: IApplicationHost
  nameWithType: IApplicationHost
  fullName: System.Web.Hosting.IApplicationHost
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: CreateObject(String,Type,String,String,Boolean)
  nameWithType: ApplicationManager.CreateObject(String,Type,String,String,Boolean)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(String,Type,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: CreateObject(String,Type,String,String,Boolean,Boolean)
  nameWithType: ApplicationManager.CreateObject(String,Type,String,String,Boolean,Boolean)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(String,Type,String,String,Boolean,Boolean)
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetAppDomain(String)
  nameWithType: ApplicationManager.GetAppDomain(String)
  fullName: System.Web.Hosting.ApplicationManager.GetAppDomain(String)
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetAppDomain(IApplicationHost)
  nameWithType: ApplicationManager.GetAppDomain(IApplicationHost)
  fullName: System.Web.Hosting.ApplicationManager.GetAppDomain(IApplicationHost)
- uid: System.Web.Hosting.ApplicationManager.GetApplicationManager
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetApplicationManager()
  nameWithType: ApplicationManager.GetApplicationManager()
  fullName: System.Web.Hosting.ApplicationManager.GetApplicationManager()
- uid: System.Web.Hosting.ApplicationManager
  parent: System.Web.Hosting
  isExternal: false
  name: ApplicationManager
  nameWithType: ApplicationManager
  fullName: System.Web.Hosting.ApplicationManager
- uid: System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetObject(String,Type)
  nameWithType: ApplicationManager.GetObject(String,Type)
  fullName: System.Web.Hosting.ApplicationManager.GetObject(String,Type)
- uid: System.Web.Hosting.ApplicationManager.GetRunningApplications
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetRunningApplications()
  nameWithType: ApplicationManager.GetRunningApplications()
  fullName: System.Web.Hosting.ApplicationManager.GetRunningApplications()
- uid: System.Web.Hosting.ApplicationInfo[]
  parent: System.Web.Hosting
  isExternal: false
  name: ApplicationInfo
  nameWithType: ApplicationInfo
  fullName: System.Web.Hosting.ApplicationInfo[]
  spec.csharp:
  - uid: System.Web.Hosting.ApplicationInfo
    name: ApplicationInfo
    nameWithType: ApplicationInfo
    fullName: ApplicationInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Hosting.ApplicationManager.InitializeLifetimeService
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: ApplicationManager.InitializeLifetimeService()
  fullName: System.Web.Hosting.ApplicationManager.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Hosting.ApplicationManager.IsIdle
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: IsIdle()
  nameWithType: ApplicationManager.IsIdle()
  fullName: System.Web.Hosting.ApplicationManager.IsIdle()
- uid: System.Web.Hosting.ApplicationManager.Open
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: Open()
  nameWithType: ApplicationManager.Open()
  fullName: System.Web.Hosting.ApplicationManager.Open()
- uid: System.Web.Hosting.ApplicationManager.ShutdownAll
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: ShutdownAll()
  nameWithType: ApplicationManager.ShutdownAll()
  fullName: System.Web.Hosting.ApplicationManager.ShutdownAll()
- uid: System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: ShutdownApplication(String)
  nameWithType: ApplicationManager.ShutdownApplication(String)
  fullName: System.Web.Hosting.ApplicationManager.ShutdownApplication(String)
- uid: System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: StopObject(String,Type)
  nameWithType: ApplicationManager.StopObject(String,Type)
  fullName: System.Web.Hosting.ApplicationManager.StopObject(String,Type)
- uid: System.Web.Hosting.ApplicationManager.Close*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: Close
  nameWithType: ApplicationManager.Close
- uid: System.Web.Hosting.ApplicationManager.CreateObject*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: CreateObject
  nameWithType: ApplicationManager.CreateObject
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetAppDomain
  nameWithType: ApplicationManager.GetAppDomain
- uid: System.Web.Hosting.ApplicationManager.GetApplicationManager*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetApplicationManager
  nameWithType: ApplicationManager.GetApplicationManager
- uid: System.Web.Hosting.ApplicationManager.GetObject*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetObject
  nameWithType: ApplicationManager.GetObject
- uid: System.Web.Hosting.ApplicationManager.GetRunningApplications*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetRunningApplications
  nameWithType: ApplicationManager.GetRunningApplications
- uid: System.Web.Hosting.ApplicationManager.InitializeLifetimeService*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: ApplicationManager.InitializeLifetimeService
- uid: System.Web.Hosting.ApplicationManager.IsIdle*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: IsIdle
  nameWithType: ApplicationManager.IsIdle
- uid: System.Web.Hosting.ApplicationManager.Open*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: Open
  nameWithType: ApplicationManager.Open
- uid: System.Web.Hosting.ApplicationManager.ShutdownAll*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: ShutdownAll
  nameWithType: ApplicationManager.ShutdownAll
- uid: System.Web.Hosting.ApplicationManager.ShutdownApplication*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: ShutdownApplication
  nameWithType: ApplicationManager.ShutdownApplication
- uid: System.Web.Hosting.ApplicationManager.StopObject*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: StopObject
  nameWithType: ApplicationManager.StopObject
