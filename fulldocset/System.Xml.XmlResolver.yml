### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlResolver
  id: XmlResolver
  children:
  - System.Xml.XmlResolver.#ctor
  - System.Xml.XmlResolver.Credentials
  - System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
  type: Class
  summary: "Resolve recursos XML externos nomeados por um identificador de recurso uniforme (URI)."
  remarks: "O tipo de XmlResolver é usado para resolver os recursos externos do XML, como entidades, definições de tipo de documento (DTDs) ou esquemas. Também é usado para processo incluir e importar elementos encontrados em folhas de estilo do Extensible Stylesheet Language (XSL) ou esquemas de linguagem XSD de definição de esquema XML.       XmlResolver trata todos os aspectos da negociação de conexão para os recursos, incluindo o tratamento de credenciais de segurança, abrir a conexão à fonte de dados e retornar o recurso na forma de um fluxo ou outro tipo de objeto. O objeto que chama o XmlResolver tem a tarefa de fluxo de interpretar.       O <xref:System.Xml>namespace inclui duas implementações concretas da classe XmlResolver:- <xref:System.Xml.XmlUrlResolver>é o resolvedor padrão para todas as classes de <xref:System.Xml>namespace.</xref:System.Xml> </xref:System.Xml.XmlUrlResolver> </xref:System.Xml> Ele dá suporte a `file://` e `http://` protocolos e solicitações de <xref:System.Net.WebRequest?displayProperty=fullName>classe.</xref:System.Net.WebRequest?displayProperty=fullName> Para obter exemplos de estender a classe para melhorar o desempenho, consulte o <xref:System.Xml.XmlUrlResolver>página de referência.</xref:System.Xml.XmlUrlResolver>      - <xref:System.Xml.XmlSecureResolver>Ajuda a proteger a outro objeto XmlResolver encapsulamento o objeto e restringindo os recursos que ele pode acessar.</xref:System.Xml.XmlSecureResolver> Por exemplo, o <xref:System.Xml.XmlSecureResolver>pode impedir o acesso a sites específicos ou zonas.</xref:System.Xml.XmlSecureResolver>       Você pode criar e especificar seu próprio resolvedor. Se você não especificar um resolvedor, o leitor usa um padrão <xref:System.Xml.XmlUrlResolver>sem credenciais de usuário.</xref:System.Xml.XmlUrlResolver>       Especifique o XmlResolver usar definindo o <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>propriedade e passando o <xref:System.Xml.XmlReaderSettings>do objeto para o <xref:System.Xml.XmlReader.Create%2A>método.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings> </xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>       Se os recursos são armazenados em um sistema que requer autenticação, você usar o <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>propriedade para especificar as credenciais necessárias.</xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>      ## Fornecendo credenciais de autenticação, o arquivo que contém os dados XML para ler pode ter uma política de acesso restrito. Se a autenticação é necessária para acessar um recurso de rede, use o <xref:System.Xml.XmlResolver.Credentials%2A>propriedade para especificar as credenciais necessárias.</xref:System.Xml.XmlResolver.Credentials%2A> Se o <xref:System.Xml.XmlResolver.Credentials%2A>propriedade não for definida, as credenciais são definidas como `null`.</xref:System.Xml.XmlResolver.Credentials%2A>       Por exemplo, suponha que as credenciais são necessárias ao solicitar dados da web para fins de autenticação. A menos que o diretório virtual da web permite o acesso anônimo, você deve definir o <xref:System.Xml.XmlResolver.Credentials%2A>propriedade para fornecer credenciais.</xref:System.Xml.XmlResolver.Credentials%2A> O exemplo a seguir cria um <xref:System.Xml.XmlReader>objeto que usa um <xref:System.Xml.XmlUrlResolver>com as credenciais padrão para acessar o site http://localhost/bookstore/inventory.xml.</xref:System.Xml.XmlUrlResolver> </xref:System.Xml.XmlReader>       [!code-cpp[XmlReaderSettings.cctor#2](~/add/codesnippet/cpp/t-system.xml.xmlresolver_1.cpp)][!code-cs[XmlReaderSettings.cctor#2](~/add/codesnippet/csharp/t-system.xml.xmlresolver_1.cs)][!code-vb[XmlReaderSettings.cctor#2](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_1.vb) ] você pode fornecer credenciais diferentes para diferentes URIs e adicioná-los a um cache.     Essas credenciais são usadas para verificar a autenticação para os URIs diferentes independentemente da origem original do XML. O exemplo a seguir mostra como adicionar credenciais para um cache.       [!code-vb[XslCompiledTransform.Load#11](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_2.vb)][!code-cs[XslCompiledTransform.Load#11](~/add/codesnippet/csharp/t-system.xml.xmlresolver_2.cs) ] # # considerações de segurança considere os itens a seguir ao trabalhar com a classe XmlResolver.        -XmlResolver objetos podem conter informações confidenciais, como as credenciais do usuário. Você deve ter cuidado ao cache XmlResolver objetos e não deve passar o objeto XmlResolver para um componente não confiável.      -Se você estiver criando uma propriedade de classe que usa a classe XmlResolver, a propriedade deve ser definida como uma propriedade somente gravação. A propriedade pode ser usada para especificar o XmlResolver usar, mas ele não pode ser usado para retornar um objeto XmlResolver.      -Se seu aplicativo aceita objetos XmlResolver de código não confiável, você não pode assumir que o URI passado para o <xref:System.Xml.XmlResolver.GetEntity%2A>método será o mesmo que o retornado pelo <xref:System.Xml.XmlResolver.ResolveUri%2A>método.</xref:System.Xml.XmlResolver.ResolveUri%2A> </xref:System.Xml.XmlResolver.GetEntity%2A> Classes derivadas da classe XmlResolver podem substituir o <xref:System.Xml.XmlResolver.GetEntity%2A>método e retornar dados que é diferentes do que estavam contido no URI original.</xref:System.Xml.XmlResolver.GetEntity%2A>      -Seu aplicativo pode reduzir a negação de memória de serviço para o <xref:System.Xml.XmlResolver.GetEntity%2A>método implementando um <xref:System.Runtime.InteropServices.ComTypes.IStream>que limita o número de bytes lidos.</xref:System.Runtime.InteropServices.ComTypes.IStream> </xref:System.Xml.XmlResolver.GetEntity%2A> Isso ajuda a proteger contra a situações onde código mal-intencionado tenta transmitir um fluxo de infinito de bytes para o <xref:System.Xml.XmlResolver.GetEntity%2A>método.</xref:System.Xml.XmlResolver.GetEntity%2A>"
  example:
  - "The following example creates an <xref:System.Xml.XmlUrlResolver> with default credentials. A <xref:System.Xml.XmlReader> is used to read and display the resulting data stream.  \n  \n [!code-cs[XmlResolver_ex#1](~/add/codesnippet/csharp/t-system.xml.xmlresolver_3.cs)]\n [!code-vb[XmlResolver_ex#1](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_3.vb)]"
  syntax:
    content: public abstract class XmlResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> classe."
  remarks: "Este construtor é chamado pelos construtores de classe derivada para inicializar o estado nesse tipo."
  syntax:
    content: protected XmlResolver ();
    parameters: []
  overload: System.Xml.XmlResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Quando substituído em uma classe derivada, define as credenciais usadas para autenticar solicitações da web."
  remarks: "Se o diretório virtual não exigir autenticação, essa propriedade não tem que ser definida. Caso contrário, as credenciais do usuário devem ser fornecidas.       O código c# a seguir define as credenciais no <xref:System.Xml.XmlResolver>objeto.</xref:System.Xml.XmlResolver>      ```   NetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = nc;   ```Você pode associar credenciais diferentes URIs diferentes e adicioná-los a um cache. Você pode usar as credenciais para verificar a autenticação para URIs diferentes independentemente da origem original do XML.      ```   NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);    CredentialCache myCache = new CredentialCache();    myCache.Add(new Uri(&quot;http://www.contoso.com/&quot;), &quot;Basic&quot;, myCred);    myCache.Add(new Uri(&quot;http://app.contoso.com/&quot;), &quot;Basic&quot;, myCred);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = myCache;   ```"
  example:
  - See <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName> for an example that uses this property.
  syntax:
    content: public virtual System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "As credenciais a ser usado para autenticar solicitações da web. Se essa propriedade não é definida, o valor padrão de <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; ou seja, o <xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref> tem sem credenciais de usuário."
  overload: System.Xml.XmlResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Quando substituído em uma classe derivada, mapeia um URI para um objeto que contém o recurso real."
  remarks: "Esse método é usado quando o chamador deseja mapear um determinado URI para o objeto que contém o recurso real que representa o URI. O tipo de objeto retornado é negociável; No entanto, a implementação sempre deve suportar <xref:System.IO.Stream?displayProperty=fullName>.</xref:System.IO.Stream?displayProperty=fullName>       Para obter a versão assíncrona do método, consulte <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.</xref:System.Xml.XmlResolver.GetEntityAsync%2A>      > [!IMPORTANT] > Seu aplicativo pode reduzir de negação de serviço para o método GetEntity memória implementando um <xref:System.Runtime.InteropServices.ComTypes.IStream>que limita o número de bytes lidos.</xref:System.Runtime.InteropServices.ComTypes.IStream> Isso ajuda a proteger contra a situações onde código mal-intencionado tenta transmitir um fluxo de bytes de infinito para o método GetEntity."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example using this method.
  syntax:
    content: public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "O URI retornado de <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Atualmente não usado."
    - id: ofObjectToReturn
      type: System.Type
      description: "O tipo de objeto a ser retornado. A versão atual somente retorna objetos de System.IO. Stream."
    return:
      type: System.Object
      description: "Um objeto de fluxo ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se for especificado um tipo diferente de fluxo."
  overload: System.Xml.XmlResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>não é um <xref uid=&quot;langword_csharp_Stream&quot; name=&quot;Stream&quot; href=&quot;&quot;> </xref> tipo."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "O URI especificado não é um URI absoluto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Há um erro de tempo de execução (por exemplo, uma conexão de servidor interrompida)."
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Assincronamente mapeia um URI para um objeto que contém o recurso real."
  remarks: "Essa é a versão assíncrona do <xref:System.Xml.XmlResolver.GetEntity%2A>, com a mesma funcionalidade.</xref:System.Xml.XmlResolver.GetEntity%2A> Para usar esse método, você deve definir o <xref:System.Xml.XmlReaderSettings.Async%2A>sinalizador como `true`.</xref:System.Xml.XmlReaderSettings.Async%2A>"
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "O URI retornado de <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Atualmente não usado."
    - id: ofObjectToReturn
      type: System.Type
      description: "O tipo de objeto a ser retornado. A versão atual somente retorna <xref:System.IO.Stream>objetos.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Um objeto de fluxo ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se for especificado um tipo diferente de fluxo."
  overload: System.Xml.XmlResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Quando substituído em uma classe derivada, resolve o URI absoluto dos URIs de base e relativo."
  remarks: "O URI absoluto pode ser usado como o URI de base para todas as solicitações subsequentes para entidades que estão em relação a esse URI."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example that uses this method.
  syntax:
    content: public virtual Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "O URI de base usado para resolver o URI relativo."
    - id: relativeUri
      type: System.String
      description: "O URI para resolver. O URI pode ser absoluta ou relativa. Se absoluto, esse valor substitui com eficiência o `baseUri` valor. Se relativo, ele combina com o `baseUri` para tornar um URI absoluto."
    return:
      type: System.Uri
      description: "O URI absoluto ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o URI relativo não pode ser resolvido."
  overload: System.Xml.XmlResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relativeUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  id: SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Permite que o resolvedor retornar tipos diferentes de &lt;xref:System.IO.Stream?displayProperty=fullName&gt;."
  syntax:
    content: public virtual bool SupportsType (Uri absoluteUri, Type type);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "O URI."
    - id: type
      type: System.Type
      description: "O tipo de retorno."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <code> type </code> com suporte; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlResolver.SupportsType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlResolver.#ctor
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
- uid: System.Xml.XmlResolver.Credentials
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlResolver.#ctor*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver.XmlResolver
- uid: System.Xml.XmlResolver.Credentials*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
- uid: System.Xml.XmlResolver.GetEntity*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlResolver.GetEntity
- uid: System.Xml.XmlResolver.GetEntityAsync*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlResolver.GetEntityAsync
- uid: System.Xml.XmlResolver.ResolveUri*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlResolver.ResolveUri
- uid: System.Xml.XmlResolver.SupportsType*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType
  nameWithType: XmlResolver.SupportsType
