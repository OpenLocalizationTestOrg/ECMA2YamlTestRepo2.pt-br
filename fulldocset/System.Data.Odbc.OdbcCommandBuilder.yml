### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcCommandBuilder
  id: OdbcCommandBuilder
  children:
  - System.Data.Odbc.OdbcCommandBuilder.#ctor
  - System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  - System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  - System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  - System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  - System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  langs:
  - csharp
  name: OdbcCommandBuilder
  nameWithType: OdbcCommandBuilder
  fullName: System.Data.Odbc.OdbcCommandBuilder
  type: Class
  summary: "Gera automaticamente os comandos de tabela única que são usados para reconciliar as alterações feitas em um <xref href=&quot;System.Data.DataSet&quot;> </xref> com a fonte de dados associado. Essa classe não pode ser herdada."
  remarks: "O <xref:System.Data.Odbc.OdbcDataAdapter>não gera automaticamente as instruções SQL necessárias para reconciliar as alterações feitas em um <xref:System.Data.DataSet>associado à fonte de dados.</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcDataAdapter> No entanto, você pode criar um objeto de OdbcCommandBuilder que gera instruções SQL para atualizações de tabela única, definindo a <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>propriedade de <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> O OdbcCommandBuilder, em seguida, gera qualquer instrução SQL adicional que você não definir.       A relação entre um <xref:System.Data.Odbc.OdbcDataAdapter>e seu OdbcCommandBuilder correspondente é sempre um para um.</xref:System.Data.Odbc.OdbcDataAdapter> Para criar essa correspondência, você deve definir o <xref:System.Data.Odbc.OdbcDataAdapter>propriedade do objeto OdbcCommandBuilder.</xref:System.Data.Odbc.OdbcDataAdapter> Isso faz com que o OdbcCommandBuilder ao se registrar como um ouvinte, que gera a saída de <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>eventos que afetam o <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>       Para gerar instruções INSERT, UPDATE ou DELETE, o OdbcCommandBuilder usa o <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>propriedade para recuperar um conjunto necessário de metadados.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> Se você alterar o valor de <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>após terem sido recuperados os metadados, como após a primeira atualização, em seguida, você deve chamar o <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>método para atualizar os metadados.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> </xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>      > [!NOTE] > Se a instrução SELECT é atribuído para o <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>propriedade usa um alias nomes de coluna, o resultante INSERT, UPDATE, e instruções DELETE podem não ser precisas ou falhar.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> Se o driver ODBC subjacente não pode fornecer o nome da coluna de base apropriado para o nome da coluna alias (usando o valor SQL_DESC_BASE_COLUMN_NAME de `SQLColAttribute`), o nome do alias pode ser usado nas instruções INSERT, UPDATE e DELETE geradas. Por exemplo, o Microsoft ODBC Driver for Oracle retorna o nome do alias como o nome da coluna base. Portanto, as instruções INSERT, UPDATE e DELETE geradas poderia causar erros.       O OdbcCommandBuilder também usa o <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>e as <xref:System.Data.Odbc.OdbcCommand.Transaction%2A>Propriedades referenciadas por <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> </xref:System.Data.Odbc.OdbcCommand.Transaction%2A> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommand.Connection%2A> O usuário deve chamar <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se uma ou mais dessas propriedades são modificadas, ou se o valor da <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>própria propriedade é alterada.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, e <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>Propriedades retêm os valores anteriores.</xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>       Se você chamar <xref:System.ComponentModel.Component.Dispose%2A>, o OdbcCommandBuilder seja desassociado do <xref:System.Data.Odbc.OdbcDataAdapter>, e os comandos gerados não são mais usados.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.ComponentModel.Component.Dispose%2A>"
  example:
  - "The following example uses <xref:System.Data.Odbc.OdbcCommand>, together with <xref:System.Data.Odbc.OdbcDataAdapter> and <xref:System.Data.Odbc.OdbcConnection>, to select rows from a data source. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table. The example then creates an OdbcCommandBuilder.  \n  \n [!code-cs[Classic WebData OdbcCommandBuilder#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_1_1.cs)]\n [!code-vb[Classic WebData OdbcCommandBuilder#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_1_1.vb)]"
  syntax:
    content: 'public sealed class OdbcCommandBuilder : System.Data.Common.DbCommandBuilder'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommandBuilder
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommandBuilder.CatalogLocation
  - System.Data.Common.DbCommandBuilder.CatalogSeparator
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SchemaSeparator
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: OdbcCommandBuilder()
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder()
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref> classe."
  remarks: "O construtor base inicializa todos os campos com seus valores padrão."
  syntax:
    content: public OdbcCommandBuilder ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  id: '#ctor(System.Data.Odbc.OdbcDataAdapter)'
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: OdbcCommandBuilder(OdbcDataAdapter)
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref> classe com associada <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> objeto."
  remarks: "O <xref:System.Data.Odbc.OdbcCommandBuilder>se registra como um ouvinte para <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>eventos gerados pelo <xref:System.Data.Odbc.OdbcDataAdapter>especificado nesta propriedade.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> </xref:System.Data.Odbc.OdbcCommandBuilder>       Quando você cria uma nova instância da <xref:System.Data.Odbc.OdbcCommandBuilder>, qualquer existente <xref:System.Data.Odbc.OdbcCommandBuilder>associado a esta <xref:System.Data.Odbc.OdbcDataAdapter>é liberado.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.Odbc.OdbcCommandBuilder>"
  syntax:
    content: public OdbcCommandBuilder (System.Data.Odbc.OdbcDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Odbc.OdbcDataAdapter
      description: "Um <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> objeto para associar a este <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref>."
  overload: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "A ser adicionado."
    - id: datarow
      type: System.Data.DataRow
      description: "A ser adicionado."
    - id: statementType
      type: System.Data.StatementType
      description: "A ser adicionado."
    - id: whereClause
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
  fullName: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém ou define um <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> objeto para o qual o <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref> objeto irá gerar instruções SQL."
  remarks: "O <xref:System.Data.Odbc.OdbcCommandBuilder>se registra como um ouvinte para <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>eventos gerados pelo <xref:System.Data.Odbc.OdbcDataAdapter>especificado nesta propriedade.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> </xref:System.Data.Odbc.OdbcCommandBuilder>       Quando você cria uma nova instância da <xref:System.Data.Odbc.OdbcCommandBuilder>, qualquer existente <xref:System.Data.Odbc.OdbcCommandBuilder>associado a esta <xref:System.Data.Odbc.OdbcDataAdapter>é liberado.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.Odbc.OdbcCommandBuilder>"
  syntax:
    content: public System.Data.Odbc.OdbcDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.Odbc.OdbcDataAdapter
      description: "Um <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> objeto que está associado com esta <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref>."
  overload: System.Data.Odbc.OdbcCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  id: DeriveParameters(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: DeriveParameters(OdbcCommand)
  nameWithType: OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  fullName: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Recupera informações de parâmetro do procedimento armazenado especificado no <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> e preenche o <xref:System.Data.Odbc.OdbcCommand.Parameters*>coleção especificada <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> objeto.</xref:System.Data.Odbc.OdbcCommand.Parameters*>"
  remarks: "DeriveParameters substitui quaisquer informações de parâmetro existentes para <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>       DeriveParameters requer uma chamada adicional para a fonte de dados para obter as informações. Se as informações de parâmetro são conhecidas antecipadamente, é mais eficiente para preencher a coleção de parâmetros definindo explicitamente as informações.       Você só pode usar DeriveParameters com procedimentos armazenados. Você não pode usar DeriveParameters para preencher o <xref:System.Data.Odbc.OdbcParameterCollection>com arbitrárias instruções Transact-SQL, como uma instrução SELECT com parâmetros.</xref:System.Data.Odbc.OdbcParameterCollection>"
  syntax:
    content: public static void DeriveParameters (System.Data.Odbc.OdbcCommand command);
    parameters:
    - id: command
      type: System.Data.Odbc.OdbcCommand
      description: "O <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> referenciando o procedimento armazenado do qual as informações de parâmetro são derivada. Os parâmetros derivados são adicionados para o <xref:System.Data.Odbc.OdbcCommand.Parameters*>coleção do <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>.</xref:System.Data.Odbc.OdbcCommand.Parameters*>"
  overload: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O driver ODBC subjacente não oferece suporte a retornar informações de parâmetro de procedimento armazenado, ou o texto do comando não é um nome válido de procedimento armazenado, ou o <xref href=&quot;System.Data.CommandType&quot;> </xref> especificado não estava <xref uid=&quot;langword_csharp_CommandType.StoredProcedure&quot; name=&quot;CommandType.StoredProcedure&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: OdbcCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> devem fazer exclusões na fonte de dados de objeto."
  remarks: "Você pode usar o método GetDeleteCommand para fins de informação ou solução de problemas, porque retorna a <xref:System.Data.Odbc.OdbcCommand>objeto a ser executado.</xref:System.Data.Odbc.OdbcCommand>       Você também pode usar GetDeleteCommand como a base de um comando modificado. Por exemplo, você pode chamar GetDeleteCommand e modificar o <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>valor e, em seguida, defina explicitamente que em <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>       Depois que a instrução SQL é gerada pela primeira vez, você deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se altera a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o GetDeleteCommand usará informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas pela primeira vez quando o aplicativo chama o <xref:System.Data.Common.DbDataAdapter.Update%2A>ou GetDeleteCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> devem fazer exclusões de objeto."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> devem fazer exclusões na fonte de dados de objeto."
  remarks: "Você pode usar o <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>fins de método de informação ou solução de problemas, porque retorna a <xref:System.Data.Odbc.OdbcCommand>objeto a ser executado.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>       Você também pode usar <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>como a base de um comando modificado.</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> Por exemplo, você pode chamar <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>e modifique o <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>valor e, em seguida, defina explicitamente que em <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>       Depois que a instrução SQL é gerada pela primeira vez, você deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se altera a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>estará usando informações da instrução anterior, que pode não estar correta.</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> As instruções SQL são geradas pela primeira vez quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A>ou <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       O comportamento padrão, ao gerar nomes de parâmetro, é usar @p1, @p2, e assim por diante para os vários parâmetros. Passando `true` para o `useColumnsForParameterNames` parâmetro permite que você force a <xref:System.Data.Odbc.OdbcCommandBuilder>para gerar parâmetros com base nos nomes de coluna em vez disso.</xref:System.Data.Odbc.OdbcCommandBuilder> Isso é realizada somente se as seguintes condições forem atendidas: - o <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>tiver sido especificado, e seu comprimento é igual ou maior que o nome de parâmetro gerado.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -O nome de parâmetro gerado atende aos critérios especificados a <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>expressão regular.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>for especificado.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, gerar nomes de parâmetro de correspondência de nomes de coluna, se possível. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, gerar @p1, @p2e assim por diante."
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> devem fazer exclusões de objeto."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: OdbcCommandBuilder.GetInsertCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> objeto necessário para executar as inserções na fonte de dados."
  remarks: "Você pode usar o método GetInsertCommand para fins de informação ou solução de problemas, porque retorna a <xref:System.Data.Odbc.OdbcCommand>objeto a ser executado.</xref:System.Data.Odbc.OdbcCommand>       Você também pode usar GetInsertCommand como a base de um comando modificado. Por exemplo, você pode chamar GetInsertCommand e modificar o <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>valor e, em seguida, defina explicitamente que em <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>       Depois que a instrução SQL é gerada pela primeira vez, você deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se altera a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o GetInsertCommand ainda usará informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas pela primeira vez quando o aplicativo chama o <xref:System.Data.Common.DbDataAdapter.Update%2A>ou GetInsertCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> necessário para executar as inserções de objeto."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> objeto necessário para executar as inserções na fonte de dados."
  remarks: "Você pode usar o <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>fins de método de informação ou solução de problemas, porque retorna a <xref:System.Data.Odbc.OdbcCommand>objeto a ser executado.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>       Você também pode usar <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>como a base de um comando modificado.</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> Por exemplo, você pode chamar <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>e modifique o <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>valor e, em seguida, defina explicitamente que em <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>       Depois que a instrução SQL é gerada pela primeira vez, você deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se altera a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>estará usando informações da instrução anterior, que pode não estar correta.</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> As instruções SQL são geradas pela primeira vez quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A>ou <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       O comportamento padrão, ao gerar nomes de parâmetro, é usar @p1, @p2, e assim por diante para os vários parâmetros. Passando `true` para o `useColumnsForParameterNames` parâmetro permite que você force a <xref:System.Data.Common.DbCommandBuilder>para gerar parâmetros com base nos nomes de coluna em vez disso.</xref:System.Data.Common.DbCommandBuilder> Isso é realizada somente se as seguintes condições forem atendidas: - o <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>tiver sido especificado, e seu comprimento é igual ou maior que o nome de parâmetro gerado.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -O nome de parâmetro gerado atende aos critérios especificados a <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>expressão regular.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>for especificado.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, gerar nomes de parâmetro de correspondência de nomes de coluna, se possível. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, gerar @p1, @p2e assim por diante."
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> necessário para executar as inserções de objeto."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "A ser adicionado."
    return:
      type: System.String
      description: "A ser adicionado."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: OdbcCommandBuilder.GetParameterName(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "A ser adicionado."
    return:
      type: System.String
      description: "A ser adicionado."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "A ser adicionado."
    return:
      type: System.String
      description: "A ser adicionado."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: OdbcCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> necessário para executar atualizações na fonte de dados de objeto."
  remarks: "Você pode usar o método GetUpdateCommand para fins de informação ou solução de problemas, porque retorna a <xref:System.Data.Odbc.OdbcCommand>objeto a ser executado.</xref:System.Data.Odbc.OdbcCommand>       Você também pode usar GetUpdateCommand como a base de um comando modificado. Por exemplo, você pode chamar GetUpdateCommand e modificar o <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>valor e, em seguida, defina explicitamente que em <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>       Depois que a instrução SQL é gerada pela primeira vez, você deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se altera a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o GetUpdateCommand ainda usará informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas pela primeira vez quando o aplicativo chama o <xref:System.Data.Common.DbDataAdapter.Update%2A>ou GetUpdateCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> objeto necessário para executar atualizações."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> necessário para executar atualizações na fonte de dados de objeto."
  remarks: "Você pode usar o <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>fins de método de informação ou solução de problemas, porque retorna a <xref:System.Data.Odbc.OdbcCommand>objeto a ser executado.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>       Você também pode usar <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>como a base de um comando modificado.</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> Por exemplo, você pode chamar <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>e modifique o <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>valor e, em seguida, defina explicitamente que em <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>       Depois que a instrução SQL é gerada pela primeira vez, você deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se altera a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>ainda estiver usando informações da instrução anterior, que pode não estar correta.</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> As instruções SQL são geradas pela primeira vez quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A>ou <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       O comportamento padrão, ao gerar nomes de parâmetro, é usar @p1, @p2, e assim por diante para os vários parâmetros. Passando `true` para o `useColumnsForParameterNames` parâmetro permite que você force a <xref:System.Data.Common.DbCommandBuilder>para gerar parâmetros com base nos nomes de coluna em vez disso.</xref:System.Data.Common.DbCommandBuilder> Isso é realizada somente se as seguintes condições forem atendidas: - o <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>tiver sido especificado, e seu comprimento é igual ou maior que o nome de parâmetro gerado.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -O nome de parâmetro gerado atende aos critérios especificados a <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>expressão regular.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>for especificado.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, gerar nomes de parâmetro de correspondência de nomes de coluna, se possível. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, gerar @p1, @p2e assim por diante."
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> objeto necessário para executar atualizações."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Fornecido um identificador sem aspas no caso de catálogo correto, retorna o correto entre aspas a forma de identificador. Isso inclui escape corretamente quaisquer aspas inseridas no identificador."
  syntax:
    content: public override string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "O identificador sem aspas original."
    return:
      type: System.String
      description: "A versão entre aspas do identificador. As aspas inseridas dentro do identificador corretamente são ignoradas."
  overload: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  id: QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Fornecido um identificador sem aspas no caso de catálogo correto, retorna o correto entre aspas a forma de identificador. Isso inclui escape corretamente quaisquer aspas inseridas no identificador."
  syntax:
    content: public string QuoteIdentifier (string unquotedIdentifier, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "O identificador sem aspas original."
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "Quando uma conexão for passado, faz com que o wrapper gerenciado obter o caractere de aspas do driver ODBC, chamar SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR). Quando nenhuma conexão é passado, a cadeia de caracteres está entre aspas usando valores de <> </> *> e <> </> *>."
    return:
      type: System.String
      description: "A versão entre aspas do identificador. As aspas inseridas dentro do identificador corretamente são ignoradas."
  overload: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "A ser adicionado."
  overload: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Recebe um identificador entre aspas, retorna a forma sem aspas correta de identificador, incluindo corretamente unescaping quaisquer aspas inseridas no identificador."
  syntax:
    content: public override string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "O identificador que terá seus removidas as aspas inseridas."
    return:
      type: System.String
      description: "O identificador sem aspas, com aspas inseridas corretamente sem escape."
  overload: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  id: UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Recebe um identificador entre aspas, retorna a forma sem aspas correta de identificador, incluindo corretamente unescaping quaisquer aspas inseridas no identificador."
  syntax:
    content: public string UnquoteIdentifier (string quotedIdentifier, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "O identificador que terá seus removidas as aspas inseridas."
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "The <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref>."
    return:
      type: System.String
      description: "O identificador sem aspas, com aspas inseridas corretamente sem escape."
  overload: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: System.Data.Common.DbCommandBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder()
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder()
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder()
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder(OdbcDataAdapter)
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
- uid: System.Data.Odbc.OdbcDataAdapter
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcDataAdapter
  nameWithType: OdbcDataAdapter
  fullName: System.Data.Odbc.OdbcDataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
  fullName: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DeriveParameters(OdbcCommand)
  nameWithType: OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  fullName: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(OdbcCommand)
- uid: System.Data.Odbc.OdbcCommand
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: OdbcCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: OdbcCommandBuilder.GetInsertCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: OdbcCommandBuilder.GetParameterName(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: OdbcCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DeriveParameters
  nameWithType: OdbcCommandBuilder.DeriveParameters
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: OdbcCommandBuilder.GetDeleteCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: OdbcCommandBuilder.GetInsertCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: OdbcCommandBuilder.GetParameterName
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: OdbcCommandBuilder.GetUpdateCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: OdbcCommandBuilder.QuoteIdentifier
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier
