### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.IHttpSessionState
  id: IHttpSessionState
  children:
  - System.Web.SessionState.IHttpSessionState.Abandon
  - System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  - System.Web.SessionState.IHttpSessionState.Clear
  - System.Web.SessionState.IHttpSessionState.CodePage
  - System.Web.SessionState.IHttpSessionState.CookieMode
  - System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  - System.Web.SessionState.IHttpSessionState.Count
  - System.Web.SessionState.IHttpSessionState.GetEnumerator
  - System.Web.SessionState.IHttpSessionState.IsCookieless
  - System.Web.SessionState.IHttpSessionState.IsNewSession
  - System.Web.SessionState.IHttpSessionState.IsReadOnly
  - System.Web.SessionState.IHttpSessionState.IsSynchronized
  - System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  - System.Web.SessionState.IHttpSessionState.Item(System.String)
  - System.Web.SessionState.IHttpSessionState.Keys
  - System.Web.SessionState.IHttpSessionState.LCID
  - System.Web.SessionState.IHttpSessionState.Mode
  - System.Web.SessionState.IHttpSessionState.Remove(System.String)
  - System.Web.SessionState.IHttpSessionState.RemoveAll
  - System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  - System.Web.SessionState.IHttpSessionState.SessionID
  - System.Web.SessionState.IHttpSessionState.StaticObjects
  - System.Web.SessionState.IHttpSessionState.SyncRoot
  - System.Web.SessionState.IHttpSessionState.Timeout
  langs:
  - csharp
  name: IHttpSessionState
  nameWithType: IHttpSessionState
  fullName: System.Web.SessionState.IHttpSessionState
  type: Interface
  summary: "Define o contrato para implementar um contêiner de estado de sessão personalizado."
  remarks: "Um contêiner de estado de sessão fornece acesso aos valores de estado de sessão e informações relacionadas para a sessão atual. Informações de sessão incluídas em um contêiner de estado de sessão são expostas ao código do aplicativo por meio de <xref:System.Web.SessionState.HttpSessionState>classe usando o <xref:System.Web.HttpContext.Session%2A>propriedade.</xref:System.Web.HttpContext.Session%2A> </xref:System.Web.SessionState.HttpSessionState> O <xref:System.Web.SessionState.HttpSessionState>classe é uma classe wrapper para um contêiner de estado de sessão.</xref:System.Web.SessionState.HttpSessionState>       A implementação de um contêiner de estado de sessão do ASP.NET é a <xref:System.Web.SessionState.HttpSessionStateContainer>classe.</xref:System.Web.SessionState.HttpSessionStateContainer> No início de uma solicitação durante o <xref:System.Web.HttpApplication.AcquireRequestState>evento, o <xref:System.Web.SessionState.SessionStateModule>cria e preenche um <xref:System.Web.SessionState.HttpSessionStateContainer>objeto e o atribui ao <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> atual</xref:System.Web.SessionState.HttpSessionStateContainer> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication.AcquireRequestState> No final de uma solicitação, durante o <xref:System.Web.HttpApplication.ReleaseRequestState>evento, o <xref:System.Web.SessionState.SessionStateModule>recupera o <xref:System.Web.SessionState.HttpSessionStateContainer>objeto do atual <xref:System.Web.HttpContext>e executa qualquer trabalho de sessão necessária, como escrever os valores de sessão para o armazenamento da sessão ou abandoná-la a sessão.</xref:System.Web.HttpContext> </xref:System.Web.SessionState.HttpSessionStateContainer> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication.ReleaseRequestState> Se a solicitação será finalizado abruptamente, como por meio de um redirecionamento, o <xref:System.Web.SessionState.SessionStateModule>executa a limpeza do mesmo ao chamar o <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A>método.</xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> </xref:System.Web.SessionState.SessionStateModule>       Para criar um contêiner de estado de sessão personalizado, crie uma classe que implementa a interface IHttpSessionState. Se você estiver criando seu próprio contêiner de estado de sessão personalizado, você também deve substituir o <xref:System.Web.SessionState.SessionStateModule>com seu próprio módulo personalizado.</xref:System.Web.SessionState.SessionStateModule> O módulo personalizado será criar uma instância do seu contêiner de estado de sessão personalizado e adicioná-lo à atual <xref:System.Web.HttpContext>usando o <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>método.</xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> </xref:System.Web.HttpContext> Um exemplo de um módulo de estado de sessão personalizado está incluído no <xref:System.Web.SessionState.SessionStateUtility>Visão geral da classe.</xref:System.Web.SessionState.SessionStateUtility>"
  example:
  - "The following code example implements the IHttpSessionState interface to create a new session-state container class named `MySessionState`.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#1](~/add/codesnippet/csharp/t-system.web.sessionstat_4_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_4_1.vb)]"
  syntax:
    content: public interface IHttpSessionState
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Abandon
  id: Abandon
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Abandon()
  nameWithType: IHttpSessionState.Abandon()
  fullName: System.Web.SessionState.IHttpSessionState.Abandon()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Encerra a sessão atual."
  remarks: "O método de abandono é usado para limpar os dados de sessão e gerar o **Session_OnEnd** evento definido no arquivo global asax para o aplicativo ASP.NET."
  example:
  - "The following code example implements the Abandon method of the <xref:System.Web.SessionState.IHttpSessionState> interface. The code example duplicates the behavior of the <xref:System.Web.SessionState.HttpSessionStateContainer> class in that it adds an <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property that is set to `true` when the Abandon method is called. The <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property is checked by the session-state module during the <xref:System.Web.HttpApplication.ReleaseRequestState> event to determine whether the session has been abandoned, and the session-state module clears out session data and executes the **Session_OnEnd** event.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#8](~/add/codesnippet/csharp/m-system.web.sessionstat_12_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#8](~/add/codesnippet/visualbasic/m-system.web.sessionstat_12_1.vb)]"
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: IHttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.IHttpSessionState.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Adiciona um novo item à coleção de estado da sessão."
  remarks: ''
  example:
  - "The following code example implements the Add method of the <xref:System.Web.SessionState.IHttpSessionState> interface to add a new item value to the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#15](~/add/codesnippet/csharp/m-system.web.sessionstat_8_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#15](~/add/codesnippet/visualbasic/m-system.web.sessionstat_8_1.vb)]"
  syntax:
    content: public void Add (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "O nome do item a ser adicionado à coleção de estado da sessão."
    - id: value
      type: System.Object
      description: "O valor do item a ser adicionado à coleção de estado da sessão."
  overload: System.Web.SessionState.IHttpSessionState.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Clear
  id: Clear
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Clear()
  nameWithType: IHttpSessionState.Clear()
  fullName: System.Web.SessionState.IHttpSessionState.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Limpa todos os valores da coleção de itens de estado da sessão."
  remarks: "Clear executa a mesma função que <xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A>.</xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A>"
  example:
  - "The following code example implements the Clear method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete all items from an internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/csharp/m-system.web.sessionstat_13_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/visualbasic/m-system.web.sessionstat_13_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CodePage
  id: CodePage
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
  fullName: System.Web.SessionState.IHttpSessionState.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém ou define o identificador de página de código para a sessão atual."
  remarks: "Um conjunto de caracteres (página de código) é usado para interpretar os dados de caracteres de vários bytes, determinando o valor de caractere e, portanto, a ordem de classificação. Configurações de página de código se aplicam somente aos dados de caracteres de vários bytes, não para dados de caractere Unicode.       Essa propriedade da página de código é fornecida para compatibilidade com versões anteriores do ASP somente. Se você não precisa manter a compatibilidade com versões anteriores com as páginas ASP, use o <xref:System.Text.Encoding.CodePage%2A>propriedade o <xref:System.Web.HttpResponse.ContentEncoding%2A>propriedade em vez disso.</xref:System.Web.HttpResponse.ContentEncoding%2A> </xref:System.Text.Encoding.CodePage%2A>"
  example:
  - "The following code example implements the CodePage property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the encoding for the current response.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#10](~/add/codesnippet/csharp/p-system.web.sessionstat_22_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#10](~/add/codesnippet/visualbasic/p-system.web.sessionstat_22_1.vb)]"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "O identificador de página de código para a sessão atual."
  overload: System.Web.SessionState.IHttpSessionState.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CookieMode
  id: CookieMode
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
  fullName: System.Web.SessionState.IHttpSessionState.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém um valor que indica se o aplicativo está configurado para sessões sem cookies."
  remarks: "A propriedade retorna CookieMode um <xref:System.Web.HttpCookieMode>valor de enumeração com base no valor da `cookieless` atributo do <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A>elemento de configuração.</xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> </xref:System.Web.HttpCookieMode> Se o `cookieless` atributo é definido como `true`, em seguida, a propriedade CookieMode retorna <xref:System.Web.HttpCookieMode>; caso contrário, a propriedade CookieMode retorna <xref:System.Web.HttpCookieMode>.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode>"
  example:
  - "The following code example sets the `cookieless` attribute of the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element to `true` in the Web.config file to change the CookieMode property. For this sample application configuration, the CookieMode property would return <xref:System.Web.HttpCookieMode>.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState  \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "Uma da <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> valores que indicam se o aplicativo está configurado para sessões sem cookies. O padrão é <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.SessionState.IHttpSessionState.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: IHttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.IHttpSessionState.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Copia a coleção de valores de item de estado da sessão para uma matriz unidimensional, começando no índice especificado na matriz."
  remarks: ''
  example:
  - "The following code example implements the CopyTo method of the <xref:System.Web.SessionState.IHttpSessionState> interface to copy session-state item values to an array.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#22](~/add/codesnippet/csharp/m-system.web.sessionstat_11_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#22](~/add/codesnippet/visualbasic/m-system.web.sessionstat_11_1.vb)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "O <xref:System.Array>que recebe os valores de sessão.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O índice em `array` onde a cópia inicia."
  overload: System.Web.SessionState.IHttpSessionState.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Count
  id: Count
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Count
  nameWithType: IHttpSessionState.Count
  fullName: System.Web.SessionState.IHttpSessionState.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém o número de itens na coleção de itens de estado da sessão."
  remarks: ''
  example:
  - "The following code example implements the Count property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return the number of items in the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#19](~/add/codesnippet/csharp/p-system.web.sessionstat_11_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#19](~/add/codesnippet/visualbasic/p-system.web.sessionstat_11_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de itens na coleção de itens de estado da sessão."
  overload: System.Web.SessionState.IHttpSessionState.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: IHttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.IHttpSessionState.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Retorna um enumerador que pode ser usado para ler todos os valores de item de estado da sessão na sessão atual."
  remarks: ''
  example:
  - "The following code example implements the GetEnumerator method of the <xref:System.Web.SessionState.IHttpSessionState> interface to return an enumerator for the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#21](~/add/codesnippet/csharp/m-system.web.sessionstat_17_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#21](~/add/codesnippet/visualbasic/m-system.web.sessionstat_17_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>que pode iterar por meio de valores na coleção de itens de estado da sessão.</xref:System.Collections.IEnumerator>"
  overload: System.Web.SessionState.IHttpSessionState.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless
  id: IsCookieless
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
  fullName: System.Web.SessionState.IHttpSessionState.IsCookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém um valor que indica se a ID de sessão é inserida na URL ou armazenada em um cookie HTTP."
  remarks: "Para obter informações sobre sessões sem cookies, consulte [identificadores de sessão](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example implements the IsCookieless property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#6](~/add/codesnippet/csharp/p-system.web.sessionstat_7_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#6](~/add/codesnippet/visualbasic/p-system.web.sessionstat_7_1.vb)]"
  syntax:
    content: public bool IsCookieless { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a sessão é incorporada na URL; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.IHttpSessionState.IsCookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession
  id: IsNewSession
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
  fullName: System.Web.SessionState.IHttpSessionState.IsNewSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém um valor que indica se a sessão foi criada com a solicitação atual."
  remarks: ''
  example:
  - "The following code example implements the IsNewSession property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#4](~/add/codesnippet/csharp/p-system.web.sessionstat_19_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#4](~/add/codesnippet/visualbasic/p-system.web.sessionstat_19_1.vb)]"
  syntax:
    content: public bool IsNewSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a sessão foi criada com a solicitação atual; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.IHttpSessionState.IsNewSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.IHttpSessionState.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém um valor que indica se a sessão é somente leitura."
  remarks: "Estado da sessão é definido como somente leitura, definindo o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atributo de página para `ReadOnly`.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>"
  example:
  - "The following code example implements the IsReadOnly property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return the value of an internal variable that was set in the constructor.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#24](~/add/codesnippet/csharp/p-system.web.sessionstat_4_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#24](~/add/codesnippet/visualbasic/p-system.web.sessionstat_4_1.vb)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a sessão for somente leitura; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.IHttpSessionState.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.IHttpSessionState.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém um valor que indica se o acesso à coleção de valores de estado de sessão é sincronizado (thread-safe)."
  remarks: ''
  example:
  - "The following code example implements the IsSynchronized property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#25](~/add/codesnippet/csharp/p-system.web.sessionstat_1_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#25](~/add/codesnippet/visualbasic/p-system.web.sessionstat_1_1.vb)]"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o acesso à coleção for sincronizado (thread-safe); Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.IHttpSessionState.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: IHttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém ou define um valor do item de estado da sessão por índice numérico."
  remarks: ''
  example:
  - "The following code example implements the <xref:System.Web.SessionState.IHttpSessionState.Item%2A> property of the <xref:System.Web.SessionState.IHttpSessionState> interface to store and return an internal dictionary session-state item value by numeric index.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#14](~/add/codesnippet/csharp/p-system.web.sessionstat_23_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#14](~/add/codesnippet/visualbasic/p-system.web.sessionstat_23_1.vb)]"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice numérico do valor do item de estado da sessão."
    return:
      type: System.Object
      description: "O valor do item de estado de sessão especificado no <code> index </code> parâmetro."
  overload: System.Web.SessionState.IHttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Item(String)
  nameWithType: IHttpSessionState.Item(String)
  fullName: System.Web.SessionState.IHttpSessionState.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém ou define um valor do item de estado da sessão por nome."
  remarks: ''
  example:
  - "The following code example implements the Item property of the <xref:System.Web.SessionState.IHttpSessionState> interface to store and return an internal dictionary session-state item value by its key name.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#13](~/add/codesnippet/csharp/p-system.web.sessionstat_16_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#13](~/add/codesnippet/visualbasic/p-system.web.sessionstat_16_1.vb)]"
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "O nome da chave do valor do item de estado da sessão."
    return:
      type: System.Object
      description: "O valor do item de estado de sessão especificado no <code> name </code> parâmetro."
  overload: System.Web.SessionState.IHttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Keys
  id: Keys
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Keys
  nameWithType: IHttpSessionState.Keys
  fullName: System.Web.SessionState.IHttpSessionState.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém uma coleção de chaves para todos os valores armazenados na coleção de itens de estado da sessão."
  remarks: ''
  example:
  - "The following code example implements the Keys property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return a collection of session-state item key names from the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#20](~/add/codesnippet/csharp/p-system.web.sessionstat_15_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#20](~/add/codesnippet/visualbasic/p-system.web.sessionstat_15_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "O <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>que contém todas as chaves de item de sessão.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  overload: System.Web.SessionState.IHttpSessionState.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.LCID
  id: LCID
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: LCID
  nameWithType: IHttpSessionState.LCID
  fullName: System.Web.SessionState.IHttpSessionState.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém ou define o identificador de localidade (LCID) da sessão atual."
  remarks: "Isso `LCID` propriedade é fornecida para compatibilidade com versões anteriores do ASP somente. Se você não precisa manter a compatibilidade com versões anteriores com as páginas ASP, use o <xref:System.Globalization.CultureInfo.LCID%2A>propriedade em vez disso.</xref:System.Globalization.CultureInfo.LCID%2A>       ASP.NET não armazena o identificador de localidade no estado de sessão. As chamadas de propriedade LCID o <xref:System.Globalization.CultureInfo.LCID%2A>para obter e definir o identificador.</xref:System.Globalization.CultureInfo.LCID%2A>"
  example:
  - "The following code example implements the LCID property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the locale identifier for the current page.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#9](~/add/codesnippet/csharp/p-system.web.sessionstat_12_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#9](~/add/codesnippet/visualbasic/p-system.web.sessionstat_12_1.vb)]"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Globalization.CultureInfo>instância que especifica a cultura da sessão atual.</xref:System.Globalization.CultureInfo>"
  overload: System.Web.SessionState.IHttpSessionState.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Mode
  id: Mode
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Mode
  nameWithType: IHttpSessionState.Mode
  fullName: System.Web.SessionState.IHttpSessionState.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém o modo de estado da sessão atual."
  remarks: "Para obter informações sobre os diferentes modos de estado de sessão, consulte [modos de estado de sessão](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example implements the Mode property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#5](~/add/codesnippet/csharp/p-system.web.sessionstat_13_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#5](~/add/codesnippet/visualbasic/p-system.web.sessionstat_13_1.vb)]"
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "Uma da <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> valores."
  overload: System.Web.SessionState.IHttpSessionState.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Remove(String)
  nameWithType: IHttpSessionState.Remove(String)
  fullName: System.Web.SessionState.IHttpSessionState.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Exclui um item da coleção de itens de estado da sessão."
  remarks: ''
  example:
  - "The following code example implements the Remove method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete a session-state item from the session-state item collection by key name.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#16](~/add/codesnippet/csharp/m-system.web.sessionstat_18_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#16](~/add/codesnippet/visualbasic/m-system.web.sessionstat_18_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do item a ser excluído da coleção de itens de estado da sessão."
  overload: System.Web.SessionState.IHttpSessionState.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll
  id: RemoveAll
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: IHttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Limpa todos os valores da coleção de itens de estado da sessão."
  remarks: "RemoveAll executa a mesma função que <xref:System.Web.SessionState.IHttpSessionState.Clear%2A>.</xref:System.Web.SessionState.IHttpSessionState.Clear%2A>"
  example:
  - "The following code example implements the RemoveAll method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete all items from an internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/csharp/m-system.web.sessionstat_1_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/visualbasic/m-system.web.sessionstat_1_1.vb)]"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: IHttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Exclui um item em um índice especificado da coleção de itens de estado da sessão."
  remarks: ''
  example:
  - "The following code example implements the RemoveAt method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete a session-state item from the internal session-state item collection by numerical index.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#17](~/add/codesnippet/csharp/m-system.web.sessionstat_15_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#17](~/add/codesnippet/visualbasic/m-system.web.sessionstat_15_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice do item a ser removido da coleção de estado da sessão."
  overload: System.Web.SessionState.IHttpSessionState.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.SessionID
  id: SessionID
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
  fullName: System.Web.SessionState.IHttpSessionState.SessionID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém o identificador de sessão exclusiva para a sessão."
  remarks: ''
  example:
  - "The following code example implements the SessionID property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#3](~/add/codesnippet/csharp/p-system.web.sessionstat_20_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#3](~/add/codesnippet/visualbasic/p-system.web.sessionstat_20_1.vb)]"
  syntax:
    content: public string SessionID { get; }
    return:
      type: System.String
      description: "ID da sessão."
  overload: System.Web.SessionState.IHttpSessionState.SessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects
  id: StaticObjects
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
  fullName: System.Web.SessionState.IHttpSessionState.StaticObjects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém uma coleção de objetos declarados por <xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;> </xref> marcas dentro do arquivo de aplicativo do ASP.NET global. asax."
  remarks: '`StaticObjects`é fornecida para compatibilidade com versões anteriores do ASP.'
  example:
  - "The following code example implements the StaticObjects property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#12](~/add/codesnippet/csharp/p-system.web.sessionstat_17_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#12](~/add/codesnippet/visualbasic/p-system.web.sessionstat_17_1.vb)]"
  syntax:
    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "Um <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> que contém objetos declarado no arquivo global. asax."
  overload: System.Web.SessionState.IHttpSessionState.StaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot
  id: SyncRoot
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
  fullName: System.Web.SessionState.IHttpSessionState.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém um objeto que pode ser usado para sincronizar o acesso à coleção de valores de estado de sessão."
  remarks: ''
  example:
  - "The following code example implements the SyncRoot property to return a copy of the current object that implements the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#23](~/add/codesnippet/csharp/p-system.web.sessionstat_2_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#23](~/add/codesnippet/visualbasic/p-system.web.sessionstat_2_1.vb)]"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Um objeto que pode ser usado para sincronizar o acesso à coleção."
  overload: System.Web.SessionState.IHttpSessionState.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Timeout
  id: Timeout
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
  fullName: System.Web.SessionState.IHttpSessionState.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém e define o período de tempo limite (em minutos) permitido entre solicitações até que o provedor de estado de sessão encerre a sessão."
  remarks: ''
  example:
  - "The following code example implements the Timeout property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the session timeout value that is stored in an internal variable created in the class constructor.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#2](~/add/codesnippet/csharp/p-system.web.sessionstat_6_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#2](~/add/codesnippet/visualbasic/p-system.web.sessionstat_6_1.vb)]"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "O período de tempo limite, em minutos."
  overload: System.Web.SessionState.IHttpSessionState.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.IHttpSessionState.Abandon
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Abandon()
  nameWithType: IHttpSessionState.Abandon()
  fullName: System.Web.SessionState.IHttpSessionState.Abandon()
- uid: System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Add(String,Object)
  nameWithType: IHttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.IHttpSessionState.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.SessionState.IHttpSessionState.Clear
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Clear()
  nameWithType: IHttpSessionState.Clear()
  fullName: System.Web.SessionState.IHttpSessionState.Clear()
- uid: System.Web.SessionState.IHttpSessionState.CodePage
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
  fullName: System.Web.SessionState.IHttpSessionState.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.IHttpSessionState.CookieMode
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
  fullName: System.Web.SessionState.IHttpSessionState.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: IHttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.IHttpSessionState.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SessionState.IHttpSessionState.Count
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Count
  nameWithType: IHttpSessionState.Count
  fullName: System.Web.SessionState.IHttpSessionState.Count
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: GetEnumerator()
  nameWithType: IHttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.IHttpSessionState.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
  fullName: System.Web.SessionState.IHttpSessionState.IsCookieless
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
  fullName: System.Web.SessionState.IHttpSessionState.IsNewSession
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.IHttpSessionState.IsReadOnly
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.IHttpSessionState.IsSynchronized
- uid: System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item(Int32)
  nameWithType: IHttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.Item(Int32)
- uid: System.Web.SessionState.IHttpSessionState.Item(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item(String)
  nameWithType: IHttpSessionState.Item(String)
  fullName: System.Web.SessionState.IHttpSessionState.Item(String)
- uid: System.Web.SessionState.IHttpSessionState.Keys
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Keys
  nameWithType: IHttpSessionState.Keys
  fullName: System.Web.SessionState.IHttpSessionState.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Web.SessionState.IHttpSessionState.LCID
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: LCID
  nameWithType: IHttpSessionState.LCID
  fullName: System.Web.SessionState.IHttpSessionState.LCID
- uid: System.Web.SessionState.IHttpSessionState.Mode
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Mode
  nameWithType: IHttpSessionState.Mode
  fullName: System.Web.SessionState.IHttpSessionState.Mode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.SessionState.IHttpSessionState.Remove(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Remove(String)
  nameWithType: IHttpSessionState.Remove(String)
  fullName: System.Web.SessionState.IHttpSessionState.Remove(String)
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAll()
  nameWithType: IHttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAll()
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: IHttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAt(Int32)
- uid: System.Web.SessionState.IHttpSessionState.SessionID
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
  fullName: System.Web.SessionState.IHttpSessionState.SessionID
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
  fullName: System.Web.SessionState.IHttpSessionState.StaticObjects
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
  fullName: System.Web.SessionState.IHttpSessionState.SyncRoot
- uid: System.Web.SessionState.IHttpSessionState.Timeout
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
  fullName: System.Web.SessionState.IHttpSessionState.Timeout
- uid: System.Web.SessionState.IHttpSessionState.Abandon*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Abandon
  nameWithType: IHttpSessionState.Abandon
- uid: System.Web.SessionState.IHttpSessionState.Add*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Add
  nameWithType: IHttpSessionState.Add
- uid: System.Web.SessionState.IHttpSessionState.Clear*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Clear
  nameWithType: IHttpSessionState.Clear
- uid: System.Web.SessionState.IHttpSessionState.CodePage*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
- uid: System.Web.SessionState.IHttpSessionState.CookieMode*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
- uid: System.Web.SessionState.IHttpSessionState.CopyTo*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CopyTo
  nameWithType: IHttpSessionState.CopyTo
- uid: System.Web.SessionState.IHttpSessionState.Count*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Count
  nameWithType: IHttpSessionState.Count
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: GetEnumerator
  nameWithType: IHttpSessionState.GetEnumerator
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
- uid: System.Web.SessionState.IHttpSessionState.Item*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item
  nameWithType: IHttpSessionState.Item
- uid: System.Web.SessionState.IHttpSessionState.Keys*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Keys
  nameWithType: IHttpSessionState.Keys
- uid: System.Web.SessionState.IHttpSessionState.LCID*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: LCID
  nameWithType: IHttpSessionState.LCID
- uid: System.Web.SessionState.IHttpSessionState.Mode*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Mode
  nameWithType: IHttpSessionState.Mode
- uid: System.Web.SessionState.IHttpSessionState.Remove*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Remove
  nameWithType: IHttpSessionState.Remove
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAll
  nameWithType: IHttpSessionState.RemoveAll
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAt
  nameWithType: IHttpSessionState.RemoveAt
- uid: System.Web.SessionState.IHttpSessionState.SessionID*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
- uid: System.Web.SessionState.IHttpSessionState.Timeout*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
