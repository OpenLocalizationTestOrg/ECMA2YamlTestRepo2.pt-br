### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.CompilerInfo
  id: CompilerInfo
  children:
  - System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
  - System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters
  - System.CodeDom.Compiler.CompilerInfo.CreateProvider
  - System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})
  - System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)
  - System.CodeDom.Compiler.CompilerInfo.GetExtensions
  - System.CodeDom.Compiler.CompilerInfo.GetHashCode
  - System.CodeDom.Compiler.CompilerInfo.GetLanguages
  - System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
  langs:
  - csharp
  name: CompilerInfo
  nameWithType: CompilerInfo
  fullName: System.CodeDom.Compiler.CompilerInfo
  type: Class
  summary: "Representa as definições de configuração de um provedor de idioma. Essa classe não pode ser herdada."
  remarks: "Use the CompilerInfo class to determine whether a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation is configured on the computer, or to examine the configuration and compiler settings for a specific language provider.  \n  \n The [\\&lt;system.codedom\\&gt; Element](../Topic/%3Csystem.codedom%3E%20Element.md) in the machine configuration file contains the language provider and compiler configuration settings. Each configured language provider has a corresponding compiler configuration element. Each element defines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation type, supported language names, supported file name extensions, and compiler parameters.  \n  \n The .NET Framework defines the initial compiler settings in the machine configuration file. Developers and compiler vendors can add configuration settings for a new <xref:System.CodeDom.Compiler.CodeDomProvider> implementation.  \n  \n The CompilerInfo class provides read-only access to these settings in the machine configuration file. Use the <xref:System.CodeDom.Compiler.CompilerInfo.GetLanguages%2A>, <xref:System.CodeDom.Compiler.CompilerInfo.GetExtensions%2A>, and <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> members to examine the corresponding configuration attributes for a language provider. Use the <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> method to obtain the compiler options and warning level attribute values for a language provider.  \n  \n For more details on language provider settings in the configuration file, see [Compiler and Language Provider Settings Schema](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  This class contains a link demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission. For details about link demands, see [Link Demands](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example displays language provider configuration settings. Command-line arguments are used to specify a language, file name extension, or provider type. For the given input, the example determines the corresponding language provider and displays the configured language compiler settings.  \n  \n [!code-cpp[CodeDom_CompilerInfo#1](~/add/codesnippet/cpp/t-system.codedom.compile_6_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_6_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#1](~/add/codesnippet/csharp/t-system.codedom.compile_6_1.cs)]"
  syntax:
    content: public sealed class CompilerInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
  id: CodeDomProviderType
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: CodeDomProviderType
  nameWithType: CompilerInfo.CodeDomProviderType
  fullName: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém o tipo de configurado <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref> implementação."
  remarks: "O arquivo de configuração do computador contém o nome de tipo totalmente qualificado para cada <xref:System.CodeDom.Compiler.CodeDomProvider>implementação no computador.</xref:System.CodeDom.Compiler.CodeDomProvider> O valor da propriedade CodeDomProviderType é um <xref:System.Type>instância que representa uma implementação de provedor de idioma definidas.</xref:System.Type>"
  example:
  - "The following code example determines whether the input language has a configured <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. If there is a provider configured for the specified language, the example displays the language provider configuration settings. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#7](~/add/codesnippet/cpp/p-system.codedom.compile_0_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#7](~/add/codesnippet/visualbasic/p-system.codedom.compile_0_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#7](~/add/codesnippet/csharp/p-system.codedom.compile_0_1.cs)]"
  syntax:
    content: public Type CodeDomProviderType { get; }
    return:
      type: System.Type
      description: "Somente leitura <xref:System.Type>instância que representa o tipo de provedor do idioma configurado.</xref:System.Type>"
  overload: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType*
  exceptions:
  - type: System.Configuration.ConfigurationException
    commentId: T:System.Configuration.ConfigurationException
    description: "O provedor do idioma não está configurado neste computador."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Não é possível localizar o tipo porque ele é um <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou cadeia de caracteres vazia.       - ou - não é possível localizar o tipo porque o nome para o <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref> não pode ser encontrado no arquivo de configuração."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters
  id: CreateDefaultCompilerParameters
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: CreateDefaultCompilerParameters()
  nameWithType: CompilerInfo.CreateDefaultCompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém as configurações de compilador configurado para a implementação de provedor de idioma."
  remarks: "Use the CreateDefaultCompilerParameters method to examine the compiler settings of the <xref:System.CodeDom.Compiler.CompilerInfo> instances returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName> and <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName> methods.  \n  \n The [\\&lt;system.codedom\\&gt; Element](../Topic/%3Csystem.codedom%3E%20Element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. Each language provider configuration element can contain optional `compilerOptions` and `warningLevel` attributes. These attributes define the default values for the <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=fullName> and <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=fullName> properties.  \n  \n If the language provider configuration element does not define the `compilerOptions` attribute, the <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=fullName> property value is an empty string (\"\"). If the language provider configuration element does not define the `warningLevel` attribute, the <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=fullName> property value is –1."
  example:
  - "The following code example determines whether the input language has a configured <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. If there is a provider configured for the specified language, the example displays the language provider configuration settings. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#7](~/add/codesnippet/cpp/m-system.codedom.compile_0_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#7](~/add/codesnippet/visualbasic/m-system.codedom.compile_0_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#7](~/add/codesnippet/csharp/m-system.codedom.compile_0_1.cs)]"
  syntax:
    content: public System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters ();
    parameters: []
    return:
      type: System.CodeDom.Compiler.CompilerParameters
      description: "Somente leitura <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> instância que contém as opções de compilador e as configurações definidas para o provedor do idioma."
  overload: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider
  id: CreateProvider
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: CreateProvider()
  nameWithType: CompilerInfo.CreateProvider()
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateProvider()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Retorna um <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref> instância para as configurações de provedor do idioma atual."
  remarks: "O método CreateProvider retorna um <xref:System.CodeDom.Compiler.CodeDomProvider>instância para as configurações do provedor de linguagem atual.</xref:System.CodeDom.Compiler.CodeDomProvider>       Use o método CreateProvider para obter um <xref:System.CodeDom.Compiler.CodeDomProvider>implementação para um <xref:System.CodeDom.Compiler.CompilerInfo>instância retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName>ou <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName>método.</xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName> </xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName> </xref:System.CodeDom.Compiler.CompilerInfo> </xref:System.CodeDom.Compiler.CodeDomProvider>"
  example:
  - "The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#8](~/add/codesnippet/cpp/m-system.codedom.compile_3_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#8](~/add/codesnippet/visualbasic/m-system.codedom.compile_3_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#8](~/add/codesnippet/csharp/m-system.codedom.compile_3_1.cs)]"
  syntax:
    content: public System.CodeDom.Compiler.CodeDomProvider CreateProvider ();
    parameters: []
    return:
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "Um provedor de CodeDOM associado com a configuração do provedor de idioma."
  overload: System.CodeDom.Compiler.CompilerInfo.CreateProvider*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})
  id: CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: CreateProvider(IDictionary<String,String>)
  nameWithType: CompilerInfo.CreateProvider(IDictionary<String,String>)
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateProvider(IDictionary<String,String>)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Retorna um <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref> instância para as configurações de idioma atual do provedor e opções especificadas."
  remarks: "O método CreateProvider retorna um <xref:System.CodeDom.Compiler.CodeDomProvider>instância para as configurações de provedor do idioma atual e as opções de provedor especificado.</xref:System.CodeDom.Compiler.CodeDomProvider> Para obter informações sobre opções de provedor com suporte, consulte a documentação específica do provedor de CodeDOM.       Use o método CreateProvider para obter um <xref:System.CodeDom.Compiler.CodeDomProvider>implementação para um <xref:System.CodeDom.Compiler.CompilerInfo>instância retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName>ou <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName>método.</xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName> </xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName> </xref:System.CodeDom.Compiler.CompilerInfo> </xref:System.CodeDom.Compiler.CodeDomProvider>"
  syntax:
    content: public System.CodeDom.Compiler.CodeDomProvider CreateProvider (System.Collections.Generic.IDictionary<string,string> providerOptions);
    parameters:
    - id: providerOptions
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Uma coleção de opções do provedor do arquivo de configuração."
    return:
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "Um provedor de CodeDOM associado com a configuração do provedor de linguagem e opções especificadas."
  overload: System.CodeDom.Compiler.CompilerInfo.CreateProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerOptions </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O provedor não oferece suporte a opções."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CompilerInfo.Equals(Object)
  fullName: System.CodeDom.Compiler.CompilerInfo.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Determina se o objeto especificado representa os mesmo provedor e compilador configurações de idioma atual do <xref href=&quot;System.CodeDom.Compiler.CompilerInfo&quot;> </xref>."
  remarks: "Esse método substitui o <xref:System.Object.Equals%28System.Object%29?displayProperty=fullName>método.</xref:System.Object.Equals%28System.Object%29?displayProperty=fullName>       As duas instâncias são consideradas iguais se os valores das propriedades a seguir são iguais: - o <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A>      -A <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>, <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>, e <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A>Propriedades da <xref:System.CodeDom.Compiler.CompilerParameters>instância retornada pelo <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A>método.</xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> </xref:System.CodeDom.Compiler.CompilerParameters> </xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> </xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A> </xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "O objeto a ser comparado com o atual <xref href=&quot;System.CodeDom.Compiler.CompilerInfo&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> o </code> é um <xref href=&quot;System.CodeDom.Compiler.CompilerInfo&quot;> </xref> objeto e seu valor é o mesmo que esta instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.GetExtensions
  id: GetExtensions
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: GetExtensions()
  nameWithType: CompilerInfo.GetExtensions()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetExtensions()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Retorna o arquivo de extensões de nome com suporte pelo provedor de idioma."
  remarks: "O [ \\&lt;system.codedom\\&gt; Elemento](../Topic/%3Csystem.codedom%3E%20Element.md) na configuração do computador o arquivo contém os compilador e o provedor de configuração configurações de idioma para cada <xref:System.CodeDom.Compiler.CodeDomProvider>implementação no computador.</xref:System.CodeDom.Compiler.CodeDomProvider> Cada provedor de idioma definidas dá suporte a uma ou mais extensões de nome de arquivo. Por exemplo, um <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=fullName>pode oferecer suporte a extensões de nome de arquivo &quot;CS&quot; e &quot;c#&quot;.</xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=fullName>"
  example:
  - "The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#8](~/add/codesnippet/cpp/m-system.codedom.compile_7_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#8](~/add/codesnippet/visualbasic/m-system.codedom.compile_7_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#8](~/add/codesnippet/csharp/m-system.codedom.compile_7_1.cs)]"
  syntax:
    content: public string[] GetExtensions ();
    parameters: []
    return:
      type: System.String[]
      description: "Uma matriz de extensões de nome de arquivo suportados pelo provedor de idioma."
  overload: System.CodeDom.Compiler.CompilerInfo.GetExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.GetHashCode
  id: GetHashCode
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CompilerInfo.GetHashCode()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Retorna o código hash para a instância atual."
  remarks: "Esse método substitui o <xref:System.Object.GetHashCode%2A?displayProperty=fullName>método.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Este método gera o mesmo código de hash de dois objetos são iguais de acordo com o <xref:System.CodeDom.Compiler.CompilerInfo.Equals%2A>método.</xref:System.CodeDom.Compiler.CompilerInfo.Equals%2A>"
  example:
  - "The following code example creates an instance of the <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName> class. The example displays the provider name, hash code, and default file name extension for the new provider instance. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#3](~/add/codesnippet/cpp/m-system.codedom.compile_5_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#3](~/add/codesnippet/visualbasic/m-system.codedom.compile_5_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#3](~/add/codesnippet/csharp/m-system.codedom.compile_5_1.cs)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código de hash de inteiro de 32 bits para atual <xref href=&quot;System.CodeDom.Compiler.CompilerInfo&quot;> </xref> instância, adequado para uso em algoritmos e estruturas de dados como uma tabela de hash de hash."
  overload: System.CodeDom.Compiler.CompilerInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.GetLanguages
  id: GetLanguages
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: GetLanguages()
  nameWithType: CompilerInfo.GetLanguages()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetLanguages()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém os nomes de idiomas suportados pelo provedor de idioma."
  remarks: "O [ \\&lt;system.codedom\\&gt; Elemento](../Topic/%3Csystem.codedom%3E%20Element.md) na configuração do computador o arquivo contém os compilador e o provedor de configuração configurações de idioma para cada <xref:System.CodeDom.Compiler.CodeDomProvider>implementação no computador.</xref:System.CodeDom.Compiler.CodeDomProvider> Cada provedor de idioma definidas dá suporte a um ou mais nomes de idioma. Por exemplo, o <xref:System.CodeDom.Compiler.CompilerInfo>de objeto para um <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=fullName>pode retornar uma matriz com o idioma nomes &quot;c#&quot;, &quot;cs&quot; e &quot;csharp&quot;.</xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=fullName> </xref:System.CodeDom.Compiler.CompilerInfo>"
  example:
  - "The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#8](~/add/codesnippet/cpp/m-system.codedom.compile_9_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#8](~/add/codesnippet/visualbasic/m-system.codedom.compile_9_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#8](~/add/codesnippet/csharp/m-system.codedom.compile_9_1.cs)]"
  syntax:
    content: public string[] GetLanguages ();
    parameters: []
    return:
      type: System.String[]
      description: "Uma matriz de nomes de idiomas suportados pelo provedor de idioma."
  overload: System.CodeDom.Compiler.CompilerInfo.GetLanguages*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
  id: IsCodeDomProviderTypeValid
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: IsCodeDomProviderTypeValid
  nameWithType: CompilerInfo.IsCodeDomProviderTypeValid
  fullName: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Retorna um valor que indica se a implementação de provedor de idioma está configurada no computador."
  remarks: "Use a propriedade IsCodeDomProviderTypeValid para verificar a <xref:System.CodeDom.Compiler.CodeDomProvider>implementação antes de acessar as propriedades do provedor ou métodos.</xref:System.CodeDom.Compiler.CodeDomProvider> Por exemplo, após você obter o idioma as configurações do provedor do <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>método, use a propriedade IsCodeDomProviderTypeValid para verificar a implementação do tipo de provedor antes de chamar o <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A>método ou usando o <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> </xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> </xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>"
  example:
  - "The following code example determines whether the input language has a configured <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. If there is a provider configured for the specified language, the example displays the language provider configuration settings. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#7](~/add/codesnippet/cpp/p-system.codedom.compile_12_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#7](~/add/codesnippet/visualbasic/p-system.codedom.compile_12_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#7](~/add/codesnippet/csharp/p-system.codedom.compile_12_1.cs)]"
  syntax:
    content: public bool IsCodeDomProviderTypeValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o tipo de implementação de provedor de idioma estiver configurado no computador. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationException
  nameWithType: ConfigurationException
  fullName: System.Configuration.ConfigurationException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CodeDomProviderType
  nameWithType: CompilerInfo.CodeDomProviderType
  fullName: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateDefaultCompilerParameters()
  nameWithType: CompilerInfo.CreateDefaultCompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters()
- uid: System.CodeDom.Compiler.CompilerParameters
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerParameters
  nameWithType: CompilerParameters
  fullName: System.CodeDom.Compiler.CompilerParameters
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateProvider()
  nameWithType: CompilerInfo.CreateProvider()
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateProvider()
- uid: System.CodeDom.Compiler.CodeDomProvider
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeDomProvider
  nameWithType: CodeDomProvider
  fullName: System.CodeDom.Compiler.CodeDomProvider
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateProvider(IDictionary<String,String>)
  nameWithType: CompilerInfo.CreateProvider(IDictionary<String,String>)
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateProvider(IDictionary<String,String>)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: CompilerInfo.Equals(Object)
  fullName: System.CodeDom.Compiler.CompilerInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.CompilerInfo.GetExtensions
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetExtensions()
  nameWithType: CompilerInfo.GetExtensions()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetExtensions()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.Compiler.CompilerInfo.GetHashCode
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: CompilerInfo.GetHashCode()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.CompilerInfo.GetLanguages
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetLanguages()
  nameWithType: CompilerInfo.GetLanguages()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetLanguages()
- uid: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: IsCodeDomProviderTypeValid
  nameWithType: CompilerInfo.IsCodeDomProviderTypeValid
  fullName: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
- uid: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CodeDomProviderType
  nameWithType: CompilerInfo.CodeDomProviderType
- uid: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateDefaultCompilerParameters
  nameWithType: CompilerInfo.CreateDefaultCompilerParameters
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateProvider
  nameWithType: CompilerInfo.CreateProvider
- uid: System.CodeDom.Compiler.CompilerInfo.Equals*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: Equals
  nameWithType: CompilerInfo.Equals
- uid: System.CodeDom.Compiler.CompilerInfo.GetExtensions*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetExtensions
  nameWithType: CompilerInfo.GetExtensions
- uid: System.CodeDom.Compiler.CompilerInfo.GetHashCode*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetHashCode
  nameWithType: CompilerInfo.GetHashCode
- uid: System.CodeDom.Compiler.CompilerInfo.GetLanguages*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetLanguages
  nameWithType: CompilerInfo.GetLanguages
- uid: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: IsCodeDomProviderTypeValid
  nameWithType: CompilerInfo.IsCodeDomProviderTypeValid
