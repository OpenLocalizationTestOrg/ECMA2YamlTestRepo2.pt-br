### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Tracking.TrackingService
  id: TrackingService
  children:
  - System.Workflow.Runtime.Tracking.TrackingService.#ctor
  - System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)
  - System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)
  - System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)
  - System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)
  - System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)
  langs:
  - csharp
  name: TrackingService
  nameWithType: TrackingService
  fullName: System.Workflow.Runtime.Tracking.TrackingService
  type: Class
  summary: "Fornece a interface básica entre um serviço de controle e a infra-estrutura de controle de tempo de execução."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Um serviço de controle é responsável por fornecer controle de canais e controlando perfis para o mecanismo de tempo de execução do fluxo de trabalho. O mecanismo de tempo de execução do fluxo de trabalho solicita um <xref:System.Workflow.Runtime.Tracking.TrackingChannel>de um serviço de controle para cada instância de fluxo de trabalho para o qual ele tem um <xref:System.Workflow.Runtime.Tracking.TrackingProfile>.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> </xref:System.Workflow.Runtime.Tracking.TrackingChannel> O mecanismo de tempo de execução do fluxo de trabalho usa essa <xref:System.Workflow.Runtime.Tracking.TrackingChannel>para enviar os registros de controle associada a essa instância de fluxo de trabalho.</xref:System.Workflow.Runtime.Tracking.TrackingChannel> Um <xref:System.Workflow.Runtime.Tracking.TrackingProfile>contém pontos de controle que especificam um conjunto de eventos para os quais a infra-estrutura de controle de tempo de execução deve enviar os registros do controle de rastreamento.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> Um <xref:System.Workflow.Runtime.Tracking.TrackingProfile>também pode especificar os dados a ser extraído da instância de fluxo de trabalho quando ocorre um desses eventos de rastreamento.</xref:System.Workflow.Runtime.Tracking.TrackingProfile>       A infra-estrutura de controle de tempo de execução usa um <xref:System.Workflow.Runtime.Tracking.TrackingProfile>para filtro de rastreamento de eventos emitidos por uma instância de fluxo de trabalho.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> Quando um evento de rastreamento é emitido que corresponda a um ponto de controle no <xref:System.Workflow.Runtime.Tracking.TrackingProfile>, a infra-estrutura de controle de tempo de execução extrai os dados especificados no <xref:System.Workflow.Runtime.Tracking.TrackingProfile>da instância de fluxo de trabalho e encapsula esses dados e informações sobre o evento de rastreamento em um registro de controle.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> </xref:System.Workflow.Runtime.Tracking.TrackingProfile> Esse registro de controle, em seguida, é enviado pelo <xref:System.Workflow.Runtime.Tracking.TrackingChannel>associado com a instância de fluxo de trabalho.</xref:System.Workflow.Runtime.Tracking.TrackingChannel> Um registro de controle pode ser um dos seguintes tipos: <xref:System.Workflow.Runtime.Tracking.ActivityTrackingRecord> <xref:System.Workflow.Runtime.Tracking.UserTrackingRecord> <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>o aplicativo de host pode usar o registro de rastreamento de qualquer forma que ele escolhe.</xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>       </xref:System.Workflow.Runtime.Tracking.UserTrackingRecord>       </xref:System.Workflow.Runtime.Tracking.ActivityTrackingRecord> Por exemplo, o aplicativo host pode armazenar as informações de rastreamento em um banco de dados e usá-lo para implementar uma interface de usuário sofisticada, ou ele pode usar as informações para informar o administrador de uma condição que exija alguma ação. Você pode registrar um serviço de controle com o mecanismo de tempo de execução do fluxo de trabalho chamando <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A?displayProperty=fullName>ou incluindo a entrada apropriada no arquivo de configuração do aplicativo.</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A?displayProperty=fullName>       Todos os serviços de controle devem herdar da classe abstrata TrackingService. Essa classe define a interface básica entre um serviço de controle e a infra-estrutura de controle de tempo de execução. As solicitações de mecanismo de tempo de execução do fluxo de trabalho um <xref:System.Workflow.Runtime.Tracking.TrackingProfile>para uma instância de fluxo de trabalho específico ou um fluxo de trabalho <xref:System.Type>chamando um dos sobrecarregados <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A>métodos ou <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A>método.</xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> </xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> </xref:System.Type> </xref:System.Workflow.Runtime.Tracking.TrackingProfile> O mecanismo de tempo de execução do fluxo de trabalho chama <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A>para solicitar um <xref:System.Workflow.Runtime.Tracking.TrackingChannel>.</xref:System.Workflow.Runtime.Tracking.TrackingChannel> </xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A>       O fluxo de trabalho de controle em tempo de execução de chamadas a <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A>e <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A>métodos sempre que uma instância de fluxo de trabalho é criada ou carregada do armazenamento de persistência.</xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> </xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> A sobrecarga associada a essas chamadas pode ser cara para o serviço de acompanhamento (muitos banco de dados chama, por exemplo). Você pode implementar a <xref:System.Workflow.Runtime.Tracking.IProfileNotification>interface em seu serviço de controle para contornar esse mecanismo baseado em chamada e usar eventos para notificar o mecanismo de tempo de execução do fluxo de trabalho de alterações para <xref:System.Workflow.Runtime.Tracking.TrackingProfile>.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> </xref:System.Workflow.Runtime.Tracking.IProfileNotification> Para controlar os serviços que implementam o <xref:System.Workflow.Runtime.Tracking.IProfileNotification>interface, o mecanismo de tempo de execução do fluxo de trabalho assina o <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileUpdated>e <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileRemoved>eventos.</xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileRemoved> </xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileUpdated> </xref:System.Workflow.Runtime.Tracking.IProfileNotification> O serviço de controle pode gerar o evento apropriado quando ocorre uma alteração em um de seus perfis de rastreamento. O <xref:System.Workflow.Runtime.Tracking.SqlTrackingService>classe implementa essa interface.</xref:System.Workflow.Runtime.Tracking.SqlTrackingService>       As chamadas de mecanismo de tempo de execução do fluxo de trabalho de <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A>método para testar se um <xref:System.Workflow.Runtime.Tracking.TrackingProfile>foi atualizado ou removido como resultado de uma chamada explícita por um host ou um serviço para <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A>em uma instância de fluxo de trabalho.</xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A> </xref:System.Workflow.Runtime.Tracking.TrackingProfile> </xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> Esse processo permite que um host ou um serviço alterar dinamicamente o perfil de rastreamento que está sendo usado para uma instância de fluxo de trabalho específico."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class TrackingService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: TrackingService()
  nameWithType: TrackingService.TrackingService()
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TrackingService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Quando implementada em uma classe derivada, inicializa uma nova instância do <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingService&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following example shows how to create a new instance of a `TerminationTrackingService` object, of a type that derives from `TrackingService`. This sample is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#111](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#111)]\n [!code-vb[WF_Samples#111](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#111)]"
  syntax:
    content: protected TrackingService ();
    parameters: []
  overload: System.Workflow.Runtime.Tracking.TrackingService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)
  id: GetProfile(System.Guid)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: GetProfile(Guid)
  nameWithType: TrackingService.GetProfile(Guid)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Deve ser substituído e quando implementado na classe derivada, retorna o perfil de rastreamento para a instância de fluxo de trabalho especificado."
  remarks: "Um serviço de controle é responsável por gerenciar os perfis de rastreamento disponíveis para tipos de fluxo de trabalho específico e as instâncias de fluxo de trabalho específico. Você pode implementar esse gerenciamento de forma que você escolher. Por exemplo, você pode retornar o mesmo <xref:System.Workflow.Runtime.Tracking.TrackingProfile>para cada fluxo de trabalho <xref:System.Type>e instância de fluxo de trabalho, ou você pode gerenciar um repositório sofisticado de rastreamento perfis referenciados por instância de fluxo de trabalho de fluxo de trabalho <xref:System.Type>e <xref:System.Version>.</xref:System.Version> </xref:System.Type> </xref:System.Type> </xref:System.Workflow.Runtime.Tracking.TrackingProfile>"
  example:
  - "The following example shows an implementation of the `GetProfile` method. In this example, several overloads of the `GetProfile` method call a single private `GetProfile` method, which returns a hard-coded, default tracking profile. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#115](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#115)]\n [!code-vb[WF_Samples#115](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#115)]"
  syntax:
    content: protected abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Guid workflowInstanceId);
    parameters:
    - id: workflowInstanceId
      type: System.Guid
      description: "O <xref:System.Guid>da instância do fluxo de trabalho.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.Tracking.TrackingProfile
      description: "O perfil de rastreamento para a instância de fluxo de trabalho especificado."
  overload: System.Workflow.Runtime.Tracking.TrackingService.GetProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)
  id: GetProfile(System.Type,System.Version)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: GetProfile(Type,Version)
  nameWithType: TrackingService.GetProfile(Type,Version)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(Type,Version)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Deve ser substituído e quando implementado na classe derivada, retorna o perfil de rastreamento, qualificado pela versão do fluxo de trabalho especificado <xref:System.Type>.</xref:System.Type>"
  remarks: "Um serviço de controle é responsável por gerenciar os perfis de rastreamento disponíveis para tipos de fluxo de trabalho específico e as instâncias de fluxo de trabalho específico. Você pode implementar esse gerenciamento de forma que você escolher. Por exemplo, você pode retornar o mesmo <xref:System.Workflow.Runtime.Tracking.TrackingProfile>para cada fluxo de trabalho <xref:System.Type>e instância de fluxo de trabalho, ou você pode gerenciar um repositório sofisticado de rastreamento perfis referenciados por instância de fluxo de trabalho de fluxo de trabalho <xref:System.Type>e <xref:System.Version>.</xref:System.Version> </xref:System.Type> </xref:System.Type> </xref:System.Workflow.Runtime.Tracking.TrackingProfile>"
  syntax:
    content: protected abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Type workflowType, Version profileVersionId);
    parameters:
    - id: workflowType
      type: System.Type
      description: "O <xref:System.Type>do fluxo de trabalho.</xref:System.Type>"
    - id: profileVersionId
      type: System.Version
      description: "O <xref:System.Version>do perfil de acompanhamento.</xref:System.Version>"
    return:
      type: System.Workflow.Runtime.Tracking.TrackingProfile
      description: "O perfil de rastreamento para o tipo de fluxo de trabalho especificado."
  overload: System.Workflow.Runtime.Tracking.TrackingService.GetProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)
  id: GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: GetTrackingChannel(TrackingParameters)
  nameWithType: TrackingService.GetTrackingChannel(TrackingParameters)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(TrackingParameters)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Deve ser substituído e quando implementado na classe derivada, retorna o canal que a infra-estrutura de controle de tempo de execução usa para enviar os registros de controle para o serviço de acompanhamento."
  remarks: "A infra-estrutura de controle de tempo de execução usa um <xref:System.Workflow.Runtime.Tracking.TrackingChannel>para cada serviço de controle para cada instância de fluxo de trabalho.</xref:System.Workflow.Runtime.Tracking.TrackingChannel> O mecanismo de tempo de execução do fluxo de trabalho chama GetTrackingChannel em cada serviço de rastreamento para obter o <xref:System.Workflow.Runtime.Tracking.TrackingChannel>para esse serviço.</xref:System.Workflow.Runtime.Tracking.TrackingChannel> Você pode usar as informações transmitidas em <xref:System.Workflow.Runtime.Tracking.TrackingParameters>para associar o controle de dados enviados no <xref:System.Workflow.Runtime.Tracking.TrackingChannel>para o serviço de controle com uma instância de fluxo de trabalho raiz específica.</xref:System.Workflow.Runtime.Tracking.TrackingChannel> </xref:System.Workflow.Runtime.Tracking.TrackingParameters>"
  example:
  - "The following example shows an implementation of the `GetTrackingChannel` method. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#113](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#113)]\n [!code-vb[WF_Samples#113](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#113)]"
  syntax:
    content: protected abstract System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel (System.Workflow.Runtime.Tracking.TrackingParameters parameters);
    parameters:
    - id: parameters
      type: System.Workflow.Runtime.Tracking.TrackingParameters
      description: "O <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingParameters&quot;> </xref> associado com a instância de fluxo de trabalho."
    return:
      type: System.Workflow.Runtime.Tracking.TrackingChannel
      description: "O <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingChannel&quot;> </xref> que é usado para enviar os registros de controle para o serviço de acompanhamento."
  overload: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)
  id: TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: TryGetProfile(Type,TrackingProfile)
  nameWithType: TrackingService.TryGetProfile(Type,TrackingProfile)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(Type,TrackingProfile)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Deve ser substituído na classe derivada e, quando implementada, recupera o perfil de rastreamento para o tipo de fluxo de trabalho especificado, se houver um disponível."
  remarks: "Um serviço de controle é responsável por gerenciar os perfis de rastreamento disponíveis para tipos de fluxo de trabalho específico e as instâncias de fluxo de trabalho específico. Você pode implementar esse gerenciamento de forma que você escolher. Por exemplo, você pode retornar o mesmo <xref:System.Workflow.Runtime.Tracking.TrackingProfile>para cada fluxo de trabalho <xref:System.Type>e instância de fluxo de trabalho, ou você pode gerenciar um repositório sofisticado de rastreamento perfis referenciados por instância de fluxo de trabalho de fluxo de trabalho <xref:System.Type>e <xref:System.Version>.</xref:System.Version> </xref:System.Type> </xref:System.Type> </xref:System.Workflow.Runtime.Tracking.TrackingProfile>"
  example:
  - "The following example demonstrates an implementation of the `TryGetProfile` method, which calls a private `GetProfile` method. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[Wf_samples#209](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#209)]\n [!code-vb[Wf_samples#209](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#209)]"
  syntax:
    content: protected abstract bool TryGetProfile (Type workflowType, out System.Workflow.Runtime.Tracking.TrackingProfile profile);
    parameters:
    - id: workflowType
      type: System.Type
      description: "O <xref:System.Type>do fluxo de trabalho para o qual obter o perfil de rastreamento.</xref:System.Type>"
    - id: profile
      type: System.Workflow.Runtime.Tracking.TrackingProfile
      description: "Quando este método retorna, contém o <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;> </xref> para carregar. Esse parâmetro é passado não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;> </xref> do fluxo de trabalho especificado <xref:System.Type>estiver disponível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type> If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, the <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;></xref> is returned in <code>profile</code>."
  overload: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)
  id: TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: TryReloadProfile(Type,Guid,TrackingProfile)
  nameWithType: TrackingService.TryReloadProfile(Type,Guid,TrackingProfile)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(Type,Guid,TrackingProfile)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Deve ser substituído na classe derivada e, quando implementada, recupera um novo perfil de rastreamento para a instância de fluxo de trabalho especificado se o perfil de rastreamento tiver sido alterada desde a última carregado."
  remarks: "TryReloadProfile é chamado pela infraestrutura de controle de tempo de execução para determinar se um novo <xref:System.Workflow.Runtime.Tracking.TrackingProfile>deve ser carregado para a instância de fluxo de trabalho especificado.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> Se um novo <xref:System.Workflow.Runtime.Tracking.TrackingProfile>é necessário, ele é retornado na `profile`.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> Se você desejar que a infra-estrutura de controle de tempo de execução para parar o controle de uma instância de fluxo de trabalho, o serviço de controle deve retornar `true` e defina `profile` igual a uma referência nula (`Nothing` no Visual Basic). O serviço de controle pode usar `workflowType` ou `workflowInstanceId` forma que você escolher determinar se um perfil de rastreamento deve ser recarregado. Por exemplo, o <xref:System.Workflow.Runtime.Tracking.SqlTrackingService>usa apenas `workflowInstanceId` para decidir se o perfil de rastreamento deve ser recarregado.</xref:System.Workflow.Runtime.Tracking.SqlTrackingService> TryReloadProfile é chamado pela infraestrutura de controle de tempo de execução de acordo com seu próprio controle semântica ou em resposta a uma chamada de serviço ou o host <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A?displayProperty=fullName>em uma instância de fluxo de trabalho.</xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A?displayProperty=fullName>"
  example:
  - "The following example shows a basic implementation of the `TryReloadProfile` method. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#116](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#116)]\n [!code-vb[WF_Samples#116](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#116)]"
  syntax:
    content: protected abstract bool TryReloadProfile (Type workflowType, Guid workflowInstanceId, out System.Workflow.Runtime.Tracking.TrackingProfile profile);
    parameters:
    - id: workflowType
      type: System.Type
      description: "O <xref:System.Type>da instância do fluxo de trabalho.</xref:System.Type>"
    - id: workflowInstanceId
      type: System.Guid
      description: "O <xref:System.Guid>da instância do fluxo de trabalho.</xref:System.Guid>"
    - id: profile
      type: System.Workflow.Runtime.Tracking.TrackingProfile
      description: "Quando este método retorna, contém o <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;> </xref> para carregar. Esse parâmetro é passado não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um novo <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;> </xref> deve ser carregado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, the <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;></xref> is returned in <code>profile</code>."
  overload: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
- uid: System.Workflow.Runtime.Tracking.TrackingService.#ctor
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TrackingService()
  nameWithType: TrackingService.TrackingService()
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TrackingService()
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetProfile(Guid)
  nameWithType: TrackingService.GetProfile(Guid)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(Guid)
- uid: System.Workflow.Runtime.Tracking.TrackingProfile
  parent: System.Workflow.Runtime.Tracking
  isExternal: false
  name: TrackingProfile
  nameWithType: TrackingProfile
  fullName: System.Workflow.Runtime.Tracking.TrackingProfile
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetProfile(Type,Version)
  nameWithType: TrackingService.GetProfile(Type,Version)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(Type,Version)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetTrackingChannel(TrackingParameters)
  nameWithType: TrackingService.GetTrackingChannel(TrackingParameters)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(TrackingParameters)
- uid: System.Workflow.Runtime.Tracking.TrackingChannel
  parent: System.Workflow.Runtime.Tracking
  isExternal: false
  name: TrackingChannel
  nameWithType: TrackingChannel
  fullName: System.Workflow.Runtime.Tracking.TrackingChannel
- uid: System.Workflow.Runtime.Tracking.TrackingParameters
  parent: System.Workflow.Runtime.Tracking
  isExternal: false
  name: TrackingParameters
  nameWithType: TrackingParameters
  fullName: System.Workflow.Runtime.Tracking.TrackingParameters
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TryGetProfile(Type,TrackingProfile)
  nameWithType: TrackingService.TryGetProfile(Type,TrackingProfile)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(Type,TrackingProfile)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TryReloadProfile(Type,Guid,TrackingProfile)
  nameWithType: TrackingService.TryReloadProfile(Type,Guid,TrackingProfile)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(Type,Guid,TrackingProfile)
- uid: System.Workflow.Runtime.Tracking.TrackingService.#ctor*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TrackingService
  nameWithType: TrackingService.TrackingService
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetProfile
  nameWithType: TrackingService.GetProfile
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetTrackingChannel
  nameWithType: TrackingService.GetTrackingChannel
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TryGetProfile
  nameWithType: TrackingService.TryGetProfile
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TryReloadProfile
  nameWithType: TrackingService.TryReloadProfile
