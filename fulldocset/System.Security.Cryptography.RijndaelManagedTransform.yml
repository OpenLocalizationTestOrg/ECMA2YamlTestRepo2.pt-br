### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RijndaelManagedTransform
  id: RijndaelManagedTransform
  children:
  - System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue
  - System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform
  - System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks
  - System.Security.Cryptography.RijndaelManagedTransform.Clear
  - System.Security.Cryptography.RijndaelManagedTransform.Dispose
  - System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize
  - System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize
  - System.Security.Cryptography.RijndaelManagedTransform.Reset
  - System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: RijndaelManagedTransform
  nameWithType: RijndaelManagedTransform
  fullName: System.Security.Cryptography.RijndaelManagedTransform
  type: Class
  summary: "Executa uma transformação de criptografia de dados usando o algoritmo Rijndael. Essa classe não pode ser herdada."
  remarks: "> [!NOTE]> Usar essa classe não é recomendado. Uma melhor prática é usar <xref:System.Security.Cryptography.RijndaelManaged>com um <xref:System.Security.Cryptography.CryptoStream>objeto.</xref:System.Security.Cryptography.CryptoStream> </xref:System.Security.Cryptography.RijndaelManaged> O <xref:System.Security.Cryptography.CryptoStream>objeto lida com os problemas de preenchimento que podem ocorrer ao usar RijndaelManagedTransform diretamente.</xref:System.Security.Cryptography.CryptoStream> Para obter um exemplo, consulte a <xref:System.Security.Cryptography.RijndaelManaged>classe.</xref:System.Security.Cryptography.RijndaelManaged>       Tanto o <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A>e <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A>métodos retornam uma instância da classe RijndaelManagedTransform que é inicializada com as informações da chave do atual <xref:System.Security.Cryptography.RijndaelManaged>objeto.</xref:System.Security.Cryptography.RijndaelManaged> </xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> </xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A>  Para criptografar ou descriptografar dados usando o algoritmo Rijndael, passe o objeto de RijndaelManagedTransform retornado por esses métodos para um <xref:System.Security.Cryptography.CryptoStream>objeto.</xref:System.Security.Cryptography.CryptoStream>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RijndaelManagedTransform : System.Security.Cryptography.ICryptoTransform
  inheritance:
  - System.Object
  implements:
  - System.Security.Cryptography.ICryptoTransform
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue
  id: BlockSizeValue
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: BlockSizeValue
  nameWithType: RijndaelManagedTransform.BlockSizeValue
  fullName: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém o tamanho do bloco."
  syntax:
    content: public int BlockSizeValue { get; }
    return:
      type: System.Int32
      description: "O tamanho dos blocos de dados em bytes."
  overload: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform
  id: CanReuseTransform
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: CanReuseTransform
  nameWithType: RijndaelManagedTransform.CanReuseTransform
  fullName: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um valor que indica se a transformação atual pode ser reutilizada."
  syntax:
    content: public bool CanReuseTransform { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks
  id: CanTransformMultipleBlocks
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: CanTransformMultipleBlocks
  nameWithType: RijndaelManagedTransform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um valor que indica se vários blocos podem ser transformados."
  syntax:
    content: public bool CanTransformMultipleBlocks { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se vários blocos podem ser transformados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.Clear
  id: Clear
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: Clear()
  nameWithType: RijndaelManagedTransform.Clear()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Libera todos os recursos usados pelo <xref href=&quot;System.Security.Cryptography.RijndaelManagedTransform&quot;> </xref> classe."
  remarks: "Esse método é uma chamada simple para a <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>classe.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName>       Chamando `Dispose` permite que os recursos usados pelo <xref:System.Security.Cryptography.RijndaelManagedTransform>para ser realocada para outros fins.</xref:System.Security.Cryptography.RijndaelManagedTransform> Para obter mais informações sobre `Dispose`, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.RijndaelManagedTransform.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.Dispose
  id: Dispose
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: Dispose()
  nameWithType: RijndaelManagedTransform.Dispose()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Libera todos os recursos usados pela instância atual do <xref href=&quot;System.Security.Cryptography.RijndaelManagedTransform&quot;> </xref> classe."
  remarks: "Chamar `Dispose` quando terminar de usar o <xref:System.Security.Cryptography.RijndaelManagedTransform>.</xref:System.Security.Cryptography.RijndaelManagedTransform> O `Dispose` método deixa o <xref:System.Security.Cryptography.RijndaelManagedTransform>em um estado inutilizável.</xref:System.Security.Cryptography.RijndaelManagedTransform> Depois de chamar `Dispose`, você deve liberar todas as referências para o <xref:System.Security.Cryptography.RijndaelManagedTransform>para o coletor de lixo possa recuperar a memória que o <xref:System.Security.Cryptography.RijndaelManagedTransform>estava ocupando.</xref:System.Security.Cryptography.RijndaelManagedTransform> </xref:System.Security.Cryptography.RijndaelManagedTransform>       Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada `Dispose` antes de liberar sua última referência a <xref:System.Security.Cryptography.RijndaelManagedTransform>.</xref:System.Security.Cryptography.RijndaelManagedTransform> Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.Security.Cryptography.RijndaelManagedTransform>do objeto `Finalize` método.</xref:System.Security.Cryptography.RijndaelManagedTransform>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.RijndaelManagedTransform.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize
  id: InputBlockSize
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: InputBlockSize
  nameWithType: RijndaelManagedTransform.InputBlockSize
  fullName: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém o tamanho do bloco de entrada."
  syntax:
    content: public int InputBlockSize { get; }
    return:
      type: System.Int32
      description: "Bloqueia o tamanho dos dados de entrada em bytes."
  overload: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize
  id: OutputBlockSize
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: OutputBlockSize
  nameWithType: RijndaelManagedTransform.OutputBlockSize
  fullName: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém o tamanho do bloco de saída."
  syntax:
    content: public int OutputBlockSize { get; }
    return:
      type: System.Int32
      description: "Bloqueia o tamanho dos dados de saída em bytes."
  overload: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.Reset
  id: Reset
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: Reset()
  nameWithType: RijndaelManagedTransform.Reset()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Redefine o estado interno de <xref href=&quot;System.Security.Cryptography.RijndaelManagedTransform&quot;> </xref> para que ele pode ser usado novamente para fazer um backup diferente criptografia ou descriptografia."
  remarks: "O método de reinicialização é chamado automaticamente quando você chama <xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A>.</xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A> O método de redefinição não é chamado quando, por exemplo, os dados criptografados de entrada é lixo e não podem ser descriptografados. Nesse caso, uma exceção será lançada e redefinição não é chamada. Você pode escolher manualmente chamar o método Reset nesse caso."
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Cryptography.RijndaelManagedTransform.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: RijndaelManagedTransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Calcula a transformação para a região especificada da matriz de bytes de entrada e copia a transformação resultante para a região especificada da matriz de bytes de saída."
  syntax:
    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "A entrada para executar a operação em."
    - id: inputOffset
      type: System.Int32
      description: "O deslocamento para a matriz de bytes de entrada para começar a usar os dados."
    - id: inputCount
      type: System.Int32
      description: "O número de bytes na matriz de bytes de entrada para usar como dados."
    - id: outputBuffer
      type: System.Byte[]
      description: "A saída para gravar os dados."
    - id: outputOffset
      type: System.Int32
      description: "O deslocamento para a matriz de bytes de saída para iniciar a gravação de dados."
    return:
      type: System.Int32
      description: "O número de bytes gravados."
  overload: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputBuffer</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>outputBuffer</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O comprimento do buffer de entrada é menor do que a soma de deslocamento de entrada e a contagem de entrada.       o valor de - ou - o <code> inputCount </code> parâmetro é menor ou igual a 0.       - ou - o valor da <code> inputCount </code> parâmetro for maior que o comprimento do <code> inputBuffer </code> parâmetro.       o comprimento de - ou - o <code> inputCount </code> parâmetro não é igualmente devisable pelo tamanho do bloco de entrada."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor de <code> inputOffset </code> parâmetro for negativo."
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: RijndaelManagedTransform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Calcula a transformação para a região especificada da matriz de bytes especificado."
  syntax:
    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "A entrada para executar a operação em."
    - id: inputOffset
      type: System.Int32
      description: "O deslocamento para a matriz de bytes para começar a usar os dados."
    - id: inputCount
      type: System.Int32
      description: "O número de bytes na matriz de bytes a serem usados como dados."
    return:
      type: System.Byte[]
      description: "A transformação computada."
  overload: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputBuffer</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor de <code> inputCount </code> parâmetro é menor que 0.       o valor de - ou - o <code> inputCount </code> parâmetro for maior que o comprimento de <code> inputBuffer </code> parâmetro."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor de <code> inputOffset </code> parâmetro for negativo."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O comprimento do <code> inputCount </code> parâmetro não é igualmente devisable pelo tamanho do bloco de entrada."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: BlockSizeValue
  nameWithType: RijndaelManagedTransform.BlockSizeValue
  fullName: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: CanReuseTransform
  nameWithType: RijndaelManagedTransform.CanReuseTransform
  fullName: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: RijndaelManagedTransform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.RijndaelManagedTransform.Clear
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: Clear()
  nameWithType: RijndaelManagedTransform.Clear()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Clear()
- uid: System.Security.Cryptography.RijndaelManagedTransform.Dispose
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: Dispose()
  nameWithType: RijndaelManagedTransform.Dispose()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Dispose()
- uid: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: InputBlockSize
  nameWithType: RijndaelManagedTransform.InputBlockSize
  fullName: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize
- uid: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: OutputBlockSize
  nameWithType: RijndaelManagedTransform.OutputBlockSize
  fullName: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize
- uid: System.Security.Cryptography.RijndaelManagedTransform.Reset
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: Reset()
  nameWithType: RijndaelManagedTransform.Reset()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Reset()
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: RijndaelManagedTransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: RijndaelManagedTransform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: BlockSizeValue
  nameWithType: RijndaelManagedTransform.BlockSizeValue
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: CanReuseTransform
  nameWithType: RijndaelManagedTransform.CanReuseTransform
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: RijndaelManagedTransform.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.RijndaelManagedTransform.Clear*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: Clear
  nameWithType: RijndaelManagedTransform.Clear
- uid: System.Security.Cryptography.RijndaelManagedTransform.Dispose*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: Dispose
  nameWithType: RijndaelManagedTransform.Dispose
- uid: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: InputBlockSize
  nameWithType: RijndaelManagedTransform.InputBlockSize
- uid: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: OutputBlockSize
  nameWithType: RijndaelManagedTransform.OutputBlockSize
- uid: System.Security.Cryptography.RijndaelManagedTransform.Reset*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: Reset
  nameWithType: RijndaelManagedTransform.Reset
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: TransformBlock
  nameWithType: RijndaelManagedTransform.TransformBlock
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: TransformFinalBlock
  nameWithType: RijndaelManagedTransform.TransformFinalBlock
