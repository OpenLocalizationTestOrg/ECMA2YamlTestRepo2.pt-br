### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.BuildProvider
  id: BuildProvider
  children:
  - System.Web.Compilation.BuildProvider.#ctor
  - System.Web.Compilation.BuildProvider.CodeCompilerType
  - System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  - System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  - System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  - System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  - System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.OpenReader
  - System.Web.Compilation.BuildProvider.OpenReader(System.String)
  - System.Web.Compilation.BuildProvider.OpenStream
  - System.Web.Compilation.BuildProvider.OpenStream(System.String)
  - System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.ReferencedAssemblies
  - System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  - System.Web.Compilation.BuildProvider.VirtualPath
  - System.Web.Compilation.BuildProvider.VirtualPathDependencies
  langs:
  - csharp
  name: BuildProvider
  nameWithType: BuildProvider
  fullName: System.Web.Compilation.BuildProvider
  type: Class
  summary: "Define um conjunto de propriedades e métodos para a geração de código-fonte no ambiente de compilação do ASP.NET. Esta classe é abstrata."
  remarks: "O ambiente de compilação do ASP.NET usa objetos BuildProvider para gerar código-fonte para diferentes tipos de arquivo em um aplicativo. Classes derivadas de BuildProvider predominantemente fornecem o código-fonte para páginas da Web, arquivos, recursos e outros itens personalizados.       Normalmente, você não criar uma instância da classe BuildProvider diretamente. Em vez disso, você implementa uma classe que deriva de BuildProvider e configurar a implementação de BuildProvider para uso no ambiente de compilação do ASP.NET.       Instâncias da classe BuildProvider são usadas com <xref:System.Web.Compilation.AssemblyBuilder>objetos para criar um ou mais arquivos em um assembly compilado.</xref:System.Web.Compilation.AssemblyBuilder> Uma instância de BuildProvider gera o código-fonte no idioma adequado para arquivos individuais e o <xref:System.Web.Compilation.AssemblyBuilder>objeto combina a fonte de contribuição de cada instância de BuildProvider em um único assembly.</xref:System.Web.Compilation.AssemblyBuilder>       O ambiente de compilação do ASP.NET usa instâncias da classe BuildProvider para criar arquivos dentro de um aplicativo. O <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>propriedade da classe BuildProvider indica o caminho do arquivo a ser criado.</xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> A extensão de arquivo de cada arquivo dentro de um aplicativo é mapeada para um provedor de compilação correspondentes. O ambiente de compilação do ASP.NET inicializa uma instância de BuildProvider para cada arquivo com base na extensão de arquivo e usa os métodos de BuildProvider para gerar código-fonte para o arquivo. O ASP.NET criar ambiente passa um <xref:System.Web.Compilation.AssemblyBuilder>objeto com base no idioma preferencial do compilador e o contexto do arquivo para os métodos de BuildProvider ao compilar um assembly de um ou mais arquivos, para que a instância BuildProvider pode contribuir código-fonte para o seu arquivo de assembly global.</xref:System.Web.Compilation.AssemblyBuilder>       Para definir a compilação personalizada ações para um arquivo de tipo dentro de um aplicativo ASP.NET, você deve derivar uma classe de BuildProvider, implementar membros dentro da classe derivada para criar o tipo de arquivo e configurar o provedor de compilação para a extensão de arquivo correspondente no arquivo de configuração de aplicativo.       O Especifica a extensão de arquivo para arquivos com suporte, e se o provedor de compilação oferece suporte a arquivos de código, os arquivos da Web, arquivos de recurso ou todos os arquivos. Use o `type` atributo para especificar o nome de tipo totalmente qualificado da implementação do provedor de compilação. Use o <xref:System.Web.Compilation.BuildProviderAppliesToAttribute>classe para especificar se o provedor de compilação se aplica a arquivos no diretório App_Code, para arquivos em um diretório de conteúdo da Web, recursos como global ou locais ou para todos os arquivos.</xref:System.Web.Compilation.BuildProviderAppliesToAttribute> Use o `extension` atributo para especificar a extensão de arquivo usada para identificar os arquivos que a classe BuildProvider dá suporte. Use o <xref:System.Web.Configuration.BuildProviderCollection>provedores em um arquivo de configuração de compilação de classe para examinar.</xref:System.Web.Configuration.BuildProviderCollection> Para obter mais informações sobre como configurar um provedor de compilação, consulte [buildProviders elemento de compilação (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384).       Para implementar um provedor de compilação que gera o código-fonte para um tipo de arquivo personalizado, derive uma classe de BuildProvider e substituir o <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>método para gerar o código-fonte para o tipo de arquivo com suporte.</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> O código-fonte gerado é adicionado para o <xref:System.Web.Compilation.AssemblyBuilder>objeto na forma de um gráfico CodeDOM, ou como o conteúdo que representa um arquivo de código de origem físico.</xref:System.Web.Compilation.AssemblyBuilder> Se o provedor de compilação requer uma linguagem de programação específica, substituir o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>propriedade para retornar um <xref:System.Web.Compilation.CompilerType>objeto para a linguagem de programação com suporte.</xref:System.Web.Compilation.CompilerType> </xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> Se o provedor de compilação não precisar de uma linguagem de programação específica, não substituem o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>propriedade; use a implementação da classe base, que indica que o provedor de compilação pode usar qualquer linguagem do .NET Framework, como Visual Basic ou c#.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>       Para implementar um provedor de compilação que gera o código-fonte para o conteúdo da Web, derive uma classe de BuildProvider e substituir o <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>método para retornar o <xref:System.Type>para a classe gerada pelo BuildProvider.</xref:System.Type> </xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> Substituir o <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>método para gerar o código-fonte para o tipo fornecido pelo arquivo com suporte.</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>      > [!NOTE] > Adicionar uma classe BuildProvider personalizada para o arquivo Web. config funciona em um site da Web do ASP.NET, mas não em um projeto de aplicativo da Web do ASP.NET. Em um projeto de aplicativo Web, o código que é gerado pela classe BuildProvider não pode ser incluído no aplicativo. Para obter mais informações, consulte [visão geral de pré-compilação projeto de aplicativo Web ASP.NET](http://msdn.microsoft.com/en-us/b940abbd-178d-4570-b441-52914fa7b887)."
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract BuildProvider base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see the <xref:System.CodeDom.CodeCompileUnit> class overview.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/t-system.web.compilation_0_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/t-system.web.compilation_0_1.vb)]"
  syntax:
    content: public abstract class BuildProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: BuildProvider()
  nameWithType: BuildProvider.BuildProvider()
  fullName: System.Web.Compilation.BuildProvider.BuildProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref> classe."
  remarks: "Porque o <xref:System.Web.Compilation.BuildProvider>classe é abstrata, não é possível criar uma instância de <xref:System.Web.Compilation.BuildProvider>diretamente usando o construtor.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider>       Ao derivar do <xref:System.Web.Compilation.BuildProvider>classe, substitua o construtor para implementar as ações de inicialização personalizada para sua implementação de provedor de compilação.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected BuildProvider ();
    parameters: []
  overload: System.Web.Compilation.BuildProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType
  id: CodeCompilerType
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
  fullName: System.Web.Compilation.BuildProvider.CodeCompilerType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Representa o tipo de compilador usado por um provedor de compilação para gerar o código-fonte para um tipo de arquivo personalizado."
  remarks: "Use a propriedade CodeCompilerType para fornecer as configurações para compilar o código-fonte para uma implementação de <xref:System.Web.Compilation.BuildProvider>.</xref:System.Web.Compilation.BuildProvider> A propriedade CodeCompilerType é `null` se o provedor de compilação não requer uma linguagem de código específico para gerar e compilar o código-fonte.       Para definir o valor para um <xref:System.Web.Compilation.CompilerType>objeto dentro de uma implementação de provedor de compilação, use o <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>ou <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>método.</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> </xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> </xref:System.Web.Compilation.CompilerType>       O <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A>propriedade especifica o <xref:System.CodeDom.Compiler.CodeDomProvider>implementação que é usada para gerar e compilar o código-fonte para um provedor de compilação.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> O <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>propriedade define as configurações que são usadas para compilar o código-fonte em um assembly.</xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the CodeCompilerType, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/p-system.web.compilation_4_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/p-system.web.compilation_4_1.vb)]"
  syntax:
    content: public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }
    return:
      type: System.Web.Compilation.CompilerType
      description: "Somente leitura <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref> que representa o gerador de código, o compilador de código e as configurações de compilador usadas para compilar o código-fonte para o caminho virtual. Retorna a classe base <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.BuildProvider.CodeCompilerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  id: GenerateCode(System.Web.Compilation.AssemblyBuilder)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GenerateCode(AssemblyBuilder)
  nameWithType: BuildProvider.GenerateCode(AssemblyBuilder)
  fullName: System.Web.Compilation.BuildProvider.GenerateCode(AssemblyBuilder)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Gera o código-fonte para o caminho virtual do provedor de compilação e adiciona o código-fonte para um construtor de assembly especificado."
  remarks: "Para implementar um provedor de compilação que gera o código-fonte para um tipo de arquivo personalizado, derive uma classe a partir de <xref:System.Web.Compilation.BuildProvider>classe e substituir o método GenerateCode para gerar o código-fonte para o tipo de arquivo com suporte.</xref:System.Web.Compilation.BuildProvider>       Normalmente, uma compilação implementação de provedor GenerateCode lê o <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>propriedade, analisa o conteúdo e adiciona o código-fonte gerado especificado <xref:System.Web.Compilation.AssemblyBuilder>objeto.</xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> Você pode contribuir código-fonte para o assembly na forma de um <xref:System.IO.TextWriter>objeto ou um gráfico CodeDOM.</xref:System.IO.TextWriter> Para adicionar o código-fonte para o assembly por meio de um <xref:System.IO.TextWriter>de objeto, use o <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>método.</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> </xref:System.IO.TextWriter> Para adicionar o código-fonte em um gráfico CodeDOM ao assembly, use o <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>método.</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>       Se o provedor de compilação gera o código-fonte em uma linguagem de programação específica, você deve substituir o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>propriedade para retornar um <xref:System.Web.Compilation.CompilerType>objeto para a linguagem de programação com suporte.</xref:System.Web.Compilation.CompilerType> </xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and GenerateCode members of the base class.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/fc642c18-5414-4093-bd92-_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/fc642c18-5414-4093-bd92-_1.vb)]"
  syntax:
    content: public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);
    parameters:
    - id: assemblyBuilder
      type: System.Web.Compilation.AssemblyBuilder
      description: "O construtor de assembly que referencia o código-fonte gerado pelo provedor de compilação."
  overload: System.Web.Compilation.BuildProvider.GenerateCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  id: GetCodeCompileUnit(System.Collections.IDictionary@)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetCodeCompileUnit(IDictionary)
  nameWithType: BuildProvider.GetCodeCompileUnit(IDictionary)
  fullName: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Representa o contêiner para o gráfico de CodeDOM gerado."
  remarks: "Esse método pode ser usado por meio de <xref:System.Web.Compilation.ClientBuildManager>classe para suportam de realce de sintaxe e o designer no Visual Studio.</xref:System.Web.Compilation.ClientBuildManager>"
  syntax:
    content: protected virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "Quando este método retorna, contém um dicionário que contém todos os números de linha associado e pragmas de linha do código-fonte. Esse parâmetro é passado não inicializado."
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "O contêiner para o gráfico de CodeDOM gerado pelo <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref> instância."
  overload: System.Web.Compilation.BuildProvider.GetCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  id: GetCustomString(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetCustomString(CompilerResults)
  nameWithType: BuildProvider.GetCustomString(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetCustomString(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Gera uma cadeia de caracteres a ser mantido no assembly compilado."
  remarks: "O <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>método de um <xref:System.Web.Compilation.BuildManager>objeto cria uma instância de um provedor de compilação para um caminho virtual de entrada e chama o método GetCustomString o <xref:System.Web.Compilation.BuildProvider>objeto.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildManager> </xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>       A base de <xref:System.Web.Compilation.BuildProvider>classe retorna `null` para o método GetCustomString, indicando que GetCustomString não está implementado.</xref:System.Web.Compilation.BuildProvider>       Determinadas implementações do provedor de compilação podem implementar GetCustomString em vez do <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>método.</xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> Um <xref:System.Web.Compilation.BuildProvider>objeto normalmente usa <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>para retornar um <xref:System.Type>objeto para um caminho virtual.</xref:System.Type> </xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> </xref:System.Web.Compilation.BuildProvider> No entanto, o método GetCustomString pode ser usado para indicar que um <xref:System.Web.Compilation.BuildProvider>objeto pode gerar vários tipos de um caminho virtual.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "Os resultados da compilação para o caminho virtual do provedor de compilação."
    return:
      type: System.String
      description: "Uma cadeia de caracteres a ser mantido no ambiente de compilação, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref> instância não implementa GetCustomString."
  overload: System.Web.Compilation.BuildProvider.GetCustomString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  id: GetDefaultCompilerType
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetDefaultCompilerType()
  nameWithType: BuildProvider.GetDefaultCompilerType()
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerType()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Retorna as configurações do compilador para o idioma padrão no aplicativo."
  remarks: "Use o método GetDefaultCompilerType para examinar o tipo de compilador padrão para um provedor de compilação. Use o <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>método para examinar o tipo de compilador configurado em um provedor de compilação para um nome de idioma específico.</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>       A base de <xref:System.Web.Compilation.BuildProvider>classe determina o tipo de compilador padrão usando o `defaultLanguage` valor na seção do arquivo de configuração do aplicativo do atributo.</xref:System.Web.Compilation.BuildProvider> Se não houver nenhuma configuração de idioma padrão na seção de compilação, o tipo de compilador padrão é definido usando o <xref:Microsoft.VisualBasic.VBCodeProvider>provedor do idioma.</xref:Microsoft.VisualBasic.VBCodeProvider>       Ao derivar do <xref:System.Web.Compilation.BuildProvider>classe, você pode usar GetDefaultCompilerType para definir o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>propriedade dentro de sua implementação.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> </xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();
    parameters: []
    return:
      type: System.Web.Compilation.CompilerType
      description: "Um <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref> que representa as configurações do compilador para o idioma padrão no aplicativo. A classe base retorna o compilador padrão com base no arquivo de configuração do aplicativo."
  overload: System.Web.Compilation.BuildProvider.GetDefaultCompilerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  id: GetDefaultCompilerTypeForLanguage(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetDefaultCompilerTypeForLanguage(String)
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Retorna as configurações do compilador para o provedor de compilação com base no idioma especificado."
  remarks: "Use o método GetDefaultCompilerTypeForLanguage para examinar o tipo de compilador configurado no provedor de compilação para um nome de idioma específico. Use o <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>método para examinar o tipo de compilador padrão para um provedor de compilação.</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>       A base de <xref:System.Web.Compilation.BuildProvider>classe determina o tipo de compilador padrão usando o <xref:System.Web.Configuration.Compiler>elementos no <xref:System.Web.Configuration.CompilationSection.Compilers%2A>propriedade o <xref:System.Web.Configuration.CompilationSection>objeto para o arquivo de configuração.</xref:System.Web.Configuration.CompilationSection> </xref:System.Web.Configuration.CompilationSection.Compilers%2A> </xref:System.Web.Configuration.Compiler> </xref:System.Web.Compilation.BuildProvider> Isso é equivalente à examinando os elementos em elementos e seções do arquivo de configuração. Por exemplo, para o `language` valor VB, o método da classe base retorna um <xref:System.Web.Compilation.CompilerType>objeto que corresponde às configurações configuradas para uma instância de <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName>.</xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName> </xref:System.Web.Compilation.CompilerType>       Quando você deriva o <xref:System.Web.Compilation.BuildProvider>classe, você pode usar GetDefaultCompilerTypeForLanguage para definir o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>valor de propriedade para o idioma com suporte pela sua implementação.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> </xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);
    parameters:
    - id: language
      type: System.String
      description: "Um nome de idioma de código."
    return:
      type: System.Web.Compilation.CompilerType
      description: "Um <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref> que representa as configurações do compilador para o provedor de compilação com base no idioma especificado. A classe base retorna o padrão de configurações do compilador para o idioma com base no arquivo de configuração do aplicativo."
  overload: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>language</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>language</code>não coincide com um compilador configurado para o provedor de compilação."
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  id: GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetGeneratedType(CompilerResults)
  nameWithType: BuildProvider.GetGeneratedType(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetGeneratedType(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Retorna um tipo gerado pelo provedor de compilação do caminho virtual."
  remarks: "Para implementar um provedor de compilação que gera o código-fonte para o conteúdo da Web como arquivos. aspx, derive uma classe a partir de <xref:System.Web.Compilation.BuildProvider>classe e substituir o método GetGeneratedType para retornar o tipo gerado pelo provedor de compilação.</xref:System.Web.Compilation.BuildProvider>       O sistema de compilação do ASP.NET compila arquivos para cada provedor de compilação e gera um <xref:System.CodeDom.Compiler.CompilerResults>objeto, que é passado para o método GetGeneratedType.</xref:System.CodeDom.Compiler.CompilerResults> Normalmente, uma compilação implementação de provedor GetGeneratedType usa o <xref:System.Reflection.Assembly.GetType%2A>método o <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A>propriedade da entrada `results` objeto para retornar o tipo fornecido.</xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> </xref:System.Reflection.Assembly.GetType%2A>"
  syntax:
    content: public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "Os resultados da compilação para o caminho virtual do provedor de compilação."
    return:
      type: System.Type
      description: "O tipo que é gerado pelo provedor de compilação para o caminho virtual. Retorna a classe base <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.BuildProvider.GetGeneratedType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  id: GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetResultFlags(CompilerResults)
  nameWithType: BuildProvider.GetResultFlags(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetResultFlags(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Retorna um valor que indica a ações necessárias quando um caminho virtual é criado."
  remarks: "O método GetResultFlags é usado pelo ambiente de compilação do ASP.NET ao usar instâncias de <xref:System.Web.Compilation.BuildProvider>classe para criar arquivos e carregar os assemblies compilados.</xref:System.Web.Compilation.BuildProvider>       A base de <xref:System.Web.Compilation.BuildProvider>classe método retorna o <xref:System.Web.Compilation.BuildProviderResultFlags>valor do campo, que indica que nenhuma ação especial é necessária quando o caminho virtual é criado.</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.Web.Compilation.BuildProvider>       Ao derivar da <xref:System.Web.Compilation.BuildProvider>classe, você pode implementar o método GetResultFlags para retornar a um outro <xref:System.Web.Compilation.BuildProviderResultFlags>valor para o tipo de arquivo personalizado ou o caminho virtual.</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.Web.Compilation.BuildProvider> Por exemplo, se uma recriação de seu caminho virtual requer que o contém <xref:System.AppDomain>objeto a ser recarregado, você pode retornar o <xref:System.Web.Compilation.BuildProviderResultFlags>valor de enumeração de seu método GetResultFlags.</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.AppDomain>"
  syntax:
    content: public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "Os resultados da compilação para o caminho virtual do provedor de compilação."
    return:
      type: System.Web.Compilation.BuildProviderResultFlags
      description: "Um <xref href=&quot;System.Web.Compilation.BuildProviderResultFlags&quot;> </xref> valor que indica o ambiente de compilação de ações necessárias depois que o caminho virtual é criado dentro do ASP.NET."
  overload: System.Web.Compilation.BuildProvider.GetResultFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenReader
  id: OpenReader
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenReader()
  nameWithType: BuildProvider.OpenReader()
  fullName: System.Web.Compilation.BuildProvider.OpenReader()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Abre um leitor de texto para leitura do caminho virtual do objeto de provedor de compilação atual."
  remarks: "Use o <xref:System.IO.TextReader.Read%2A>método retornado <xref:System.IO.TextReader>objeto para ler o conteúdo do <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>propriedade para um <xref:System.Web.Compilation.BuildProvider>objeto.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> </xref:System.IO.TextReader> </xref:System.IO.TextReader.Read%2A>       Depois de chamar o método OpenReader, você deve usar o <xref:System.IO.TextReader.Close%2A>método para fechar o <xref:System.IO.TextReader>de objeto e liberar recursos do sistema associados.</xref:System.IO.TextReader> </xref:System.IO.TextReader.Close%2A>"
  syntax:
    content: protected System.IO.TextReader OpenReader ();
    parameters: []
    return:
      type: System.IO.TextReader
      description: "Um aberta <xref:System.IO.TextReader>que pode ser usado para ler o conteúdo de <xref:System.Web.Compilation.BuildProvider.VirtualPath*>.</xref:System.Web.Compilation.BuildProvider.VirtualPath*> </xref:System.IO.TextReader>"
  overload: System.Web.Compilation.BuildProvider.OpenReader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenReader(System.String)
  id: OpenReader(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenReader(String)
  nameWithType: BuildProvider.OpenReader(String)
  fullName: System.Web.Compilation.BuildProvider.OpenReader(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Abre um leitor de texto para leitura de um caminho virtual especificado."
  remarks: "Use o <xref:System.IO.TextReader.Read%2A>método sobre o <xref:System.IO.TextReader>objeto para ler o conteúdo do caminho virtual.</xref:System.IO.TextReader> </xref:System.IO.TextReader.Read%2A>       Depois de chamar o <xref:System.Web.Compilation.BuildProvider.OpenReader%2A>método, você deve usar o <xref:System.IO.TextReader.Close%2A>método para fechar o <xref:System.IO.TextReader>de objeto e liberar recursos do sistema associados.</xref:System.IO.TextReader> </xref:System.IO.TextReader.Close%2A> </xref:System.Web.Compilation.BuildProvider.OpenReader%2A>"
  syntax:
    content: protected System.IO.TextReader OpenReader (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho virtual para leitura."
    return:
      type: System.IO.TextReader
      description: "Um aberta <xref:System.IO.TextReader>que pode ser usado para ler o conteúdo do caminho virtual especificado.</xref:System.IO.TextReader>"
  overload: System.Web.Compilation.BuildProvider.OpenReader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenStream
  id: OpenStream
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenStream()
  nameWithType: BuildProvider.OpenStream()
  fullName: System.Web.Compilation.BuildProvider.OpenStream()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Abre um fluxo para ler o caminho virtual do objeto de provedor de compilação atual."
  remarks: "Use o <xref:System.IO.Stream.Read%2A>método retornado <xref:System.IO.Stream>objeto para ler o conteúdo do caminho virtual para o <xref:System.Web.Compilation.BuildProvider>objeto.</xref:System.Web.Compilation.BuildProvider> </xref:System.IO.Stream> </xref:System.IO.Stream.Read%2A>       Depois de chamar o método OpenStream, você deve usar o <xref:System.IO.Stream.Close%2A>método para fechar o <xref:System.IO.Stream>de objeto e liberar recursos do sistema associados.</xref:System.IO.Stream> </xref:System.IO.Stream.Close%2A>"
  syntax:
    content: protected System.IO.Stream OpenStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Um aberta <xref:System.IO.Stream>que pode ser usado para ler o conteúdo de <xref:System.Web.Compilation.BuildProvider.VirtualPath*>.</xref:System.Web.Compilation.BuildProvider.VirtualPath*> </xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildProvider.OpenStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenStream(System.String)
  id: OpenStream(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenStream(String)
  nameWithType: BuildProvider.OpenStream(String)
  fullName: System.Web.Compilation.BuildProvider.OpenStream(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Abre um fluxo para leitura de um caminho virtual especificado."
  remarks: "Use o <xref:System.IO.Stream.Read%2A>método sobre o <xref:System.IO.Stream>objeto para ler o conteúdo do caminho virtual.</xref:System.IO.Stream> </xref:System.IO.Stream.Read%2A>       Depois de chamar o <xref:System.Web.Compilation.BuildProvider.OpenStream%2A>método, você deve usar o <xref:System.IO.Stream.Close%2A>método para fechar o <xref:System.IO.Stream>de objeto e liberar recursos do sistema associados.</xref:System.IO.Stream> </xref:System.IO.Stream.Close%2A> </xref:System.Web.Compilation.BuildProvider.OpenStream%2A>"
  syntax:
    content: protected System.IO.Stream OpenStream (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho virtual para leitura."
    return:
      type: System.IO.Stream
      description: "Um aberta <xref:System.IO.Stream>que pode ser usado para ler o conteúdo do caminho virtual especificado.</xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildProvider.OpenStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  id: ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: ProcessCompileErrors(CompilerResults)
  nameWithType: BuildProvider.ProcessCompileErrors(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.ProcessCompileErrors(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Quando substituído em uma classe derivada, permite que você revise as mensagens de erro do compilador para que você pode modificá-las para fornecer mais informações."
  remarks: "Normalmente, você substitui esse método para que você possa modificar os erros do compilador antes de eles serem exibidos para tornar o texto de erro mais úteis para o usuário. Isso é útil em situações em que você sabe o contexto de certos erros e pode fornecer informações ao usuário sobre como corrigi-los. A mensagem de erro do compilador original é geralmente específica de uma construção de linguagem específica e não faz a causa real ou solução óbvia para o usuário.       Você pode acessar os erros usando o <xref:System.CodeDom.Compiler.CompilerResults>objeto que é passado para o método.</xref:System.CodeDom.Compiler.CompilerResults>"
  syntax:
    content: public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "Resultados do compilador."
  overload: System.Web.Compilation.BuildProvider.ProcessCompileErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
  fullName: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Representa os assemblies para compilar com o código-fonte gerado pelo provedor de compilação."
  remarks: "O ASP.NET criar ambiente inicializa a coleção de assemblies que estão disponíveis para referência pelo provedor de compilação. O código-fonte gerado por um provedor de compilação pode usar os tipos públicos nos assemblies referenciados. A coleção de assembly referenciado consiste em outros assemblies criados no aplicativo ASP.NET e assemblies listados no elemento no arquivo de configuração.       Se o provedor de compilação gera o código-fonte que faz referência a assemblies adicionais, o provedor de compilação adiciona os assemblies adicionais usando o <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>método.</xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> O ambiente de compilação do ASP.NET resolve tipos externos durante a compilação do assembly usando ambos os assemblies referenciados adicionados por criar provedores e a coleção padrão de assemblies disponíveis para referência.       A coleção de ReferencedAssemblies inclui assemblies que são adicionados para referência por outros provedores de compilação por meio de <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>método.</xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>"
  syntax:
    content: protected System.Collections.ICollection ReferencedAssemblies { get; }
    return:
      type: System.Collections.ICollection
      description: "Uma coleção somente leitura de assemblies que podem ser referenciadas pelo código-fonte gerado pelo provedor de compilação."
  overload: System.Web.Compilation.BuildProvider.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  id: RegisterBuildProvider(System.String,System.Type)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: RegisterBuildProvider(String,Type)
  nameWithType: BuildProvider.RegisterBuildProvider(String,Type)
  fullName: System.Web.Compilation.BuildProvider.RegisterBuildProvider(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Registra um provedor de compilação."
  remarks: "Você pode usar esse método para registrar provedores de compilação em vez de defini-los no arquivo Web. config. Para obter mais informações sobre provedores de compilação, consulte o <xref:System.Web.Compilation.BuildProvider>classe e [buildProviders elemento de compilação (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384).</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public static void RegisterBuildProvider (string extension, Type providerType);
    parameters:
    - id: extension
      type: System.String
      description: "A extensão de nome de arquivo que é o provedor de compilação para."
    - id: providerType
      type: System.Type
      description: "A classe de provedor de compilação."
  overload: System.Web.Compilation.BuildProvider.RegisterBuildProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.VirtualPath
  id: VirtualPath
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
  fullName: System.Web.Compilation.BuildProvider.VirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Representa o arquivo a ser criado por esta implementação de provedor de compilação."
  remarks: "O caminho virtual de um <xref:System.Web.Compilation.BuildProvider>objeto é o caminho para o arquivo que está sendo compilado pelo provedor de compilação.</xref:System.Web.Compilation.BuildProvider> Por exemplo, se você tiver configurado um personalizado <xref:System.Web.Compilation.BuildProvider>da classe para criar todos os arquivos no site da Web com uma extensão personalizada de ABC, se seu site da Web chamado WebSite1, e o site da Web contém um arquivo denominado Example.abc, a propriedade VirtualPath contém o valor `/WebSite1/Example.abc`.</xref:System.Web.Compilation.BuildProvider>       A extensão de arquivo de cada arquivo dentro do aplicativo determina o tipo de arquivo e o provedor de compilação para o tipo de arquivo correspondente. Inicializa do ambiente de compilação do ASP.NET um <xref:System.Web.Compilation.BuildProvider>do objeto para cada arquivo com base no tipo de arquivo e usa o <xref:System.Web.Compilation.BuildProvider>métodos para gerar código-fonte para cada arquivo.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider>       Para obter mais informações sobre como configurar um provedor de compilação, consulte [buildProviders elemento de compilação (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)."
  syntax:
    content: protected string VirtualPath { get; }
    return:
      type: System.String
      description: "Uma cadeia de somente leitura que especifica o caminho virtual de um arquivo a ser compilado por esse provedor de compilação."
  overload: System.Web.Compilation.BuildProvider.VirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  id: VirtualPathDependencies
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
  fullName: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Representa uma coleção de caminhos virtuais que devem ser compilados antes do provedor de compilação gera o código."
  remarks: "A propriedade VirtualPathDependencies é uma coleção de caminhos virtuais que devem ser compilados antes do <xref:System.Web.Compilation.BuildProvider>instância gera o código-fonte.</xref:System.Web.Compilation.BuildProvider> Os assemblies de caminhos virtuais na VirtualPathDependencies são adicionados como referências a compilação para a <xref:System.Web.Compilation.BuildProvider>instância.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public virtual System.Collections.ICollection VirtualPathDependencies { get; }
    return:
      type: System.Collections.ICollection
      description: "Uma coleção somente leitura de cadeias de caracteres que representa os caminhos virtuais que esta instância do provedor de compilação é dependente."
  overload: System.Web.Compilation.BuildProvider.VirtualPathDependencies*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.BuildProvider.#ctor
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: BuildProvider()
  nameWithType: BuildProvider.BuildProvider()
  fullName: System.Web.Compilation.BuildProvider.BuildProvider()
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
  fullName: System.Web.Compilation.BuildProvider.CodeCompilerType
- uid: System.Web.Compilation.CompilerType
  parent: System.Web.Compilation
  isExternal: false
  name: CompilerType
  nameWithType: CompilerType
  fullName: System.Web.Compilation.CompilerType
- uid: System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GenerateCode(AssemblyBuilder)
  nameWithType: BuildProvider.GenerateCode(AssemblyBuilder)
  fullName: System.Web.Compilation.BuildProvider.GenerateCode(AssemblyBuilder)
- uid: System.Web.Compilation.AssemblyBuilder
  parent: System.Web.Compilation
  isExternal: false
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Web.Compilation.AssemblyBuilder
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCodeCompileUnit(IDictionary)
  nameWithType: BuildProvider.GetCodeCompileUnit(IDictionary)
  fullName: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(IDictionary)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCustomString(CompilerResults)
  nameWithType: BuildProvider.GetCustomString(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetCustomString(CompilerResults)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CompilerResults
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerResults
  nameWithType: CompilerResults
  fullName: System.CodeDom.Compiler.CompilerResults
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerType()
  nameWithType: BuildProvider.GetDefaultCompilerType()
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerType()
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerTypeForLanguage(String)
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(String)
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetGeneratedType(CompilerResults)
  nameWithType: BuildProvider.GetGeneratedType(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetGeneratedType(CompilerResults)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetResultFlags(CompilerResults)
  nameWithType: BuildProvider.GetResultFlags(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetResultFlags(CompilerResults)
- uid: System.Web.Compilation.BuildProviderResultFlags
  parent: System.Web.Compilation
  isExternal: false
  name: BuildProviderResultFlags
  nameWithType: BuildProviderResultFlags
  fullName: System.Web.Compilation.BuildProviderResultFlags
- uid: System.Web.Compilation.BuildProvider.OpenReader
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader()
  nameWithType: BuildProvider.OpenReader()
  fullName: System.Web.Compilation.BuildProvider.OpenReader()
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Web.Compilation.BuildProvider.OpenReader(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader(String)
  nameWithType: BuildProvider.OpenReader(String)
  fullName: System.Web.Compilation.BuildProvider.OpenReader(String)
- uid: System.Web.Compilation.BuildProvider.OpenStream
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream()
  nameWithType: BuildProvider.OpenStream()
  fullName: System.Web.Compilation.BuildProvider.OpenStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Compilation.BuildProvider.OpenStream(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream(String)
  nameWithType: BuildProvider.OpenStream(String)
  fullName: System.Web.Compilation.BuildProvider.OpenStream(String)
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ProcessCompileErrors(CompilerResults)
  nameWithType: BuildProvider.ProcessCompileErrors(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.ProcessCompileErrors(CompilerResults)
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
  fullName: System.Web.Compilation.BuildProvider.ReferencedAssemblies
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: RegisterBuildProvider(String,Type)
  nameWithType: BuildProvider.RegisterBuildProvider(String,Type)
  fullName: System.Web.Compilation.BuildProvider.RegisterBuildProvider(String,Type)
- uid: System.Web.Compilation.BuildProvider.VirtualPath
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
  fullName: System.Web.Compilation.BuildProvider.VirtualPath
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
  fullName: System.Web.Compilation.BuildProvider.VirtualPathDependencies
- uid: System.Web.Compilation.BuildProvider.#ctor*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: BuildProvider
  nameWithType: BuildProvider.BuildProvider
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
- uid: System.Web.Compilation.BuildProvider.GenerateCode*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GenerateCode
  nameWithType: BuildProvider.GenerateCode
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCodeCompileUnit
  nameWithType: BuildProvider.GetCodeCompileUnit
- uid: System.Web.Compilation.BuildProvider.GetCustomString*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCustomString
  nameWithType: BuildProvider.GetCustomString
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerType
  nameWithType: BuildProvider.GetDefaultCompilerType
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerTypeForLanguage
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetGeneratedType
  nameWithType: BuildProvider.GetGeneratedType
- uid: System.Web.Compilation.BuildProvider.GetResultFlags*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetResultFlags
  nameWithType: BuildProvider.GetResultFlags
- uid: System.Web.Compilation.BuildProvider.OpenReader*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader
  nameWithType: BuildProvider.OpenReader
- uid: System.Web.Compilation.BuildProvider.OpenStream*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream
  nameWithType: BuildProvider.OpenStream
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ProcessCompileErrors
  nameWithType: BuildProvider.ProcessCompileErrors
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: RegisterBuildProvider
  nameWithType: BuildProvider.RegisterBuildProvider
- uid: System.Web.Compilation.BuildProvider.VirtualPath*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
