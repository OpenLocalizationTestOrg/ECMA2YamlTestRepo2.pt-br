### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  id: SecurityAlgorithmSuite
  children:
  - System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  langs:
  - csharp
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
  type: Class
  summary: "Especifica as propriedades de algoritmos. Este é um <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> classe."
  remarks: "As instâncias dessa classe são usadas para especificar as características de criptografia dos algoritmos usados ao proteger as mensagens.       Essa classe é usada por classes derivadas para criar uma instância de conjuntos de algoritmo de segurança e contém propriedades que descrevem os algoritmos de segurança. Por exemplo, o `wsBasicHttp` associação usa uma classe derivada interna para especificar as propriedades de seus algoritmos de segurança."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.SecurityAlgorithmSuiteConverter))]

      public abstract class SecurityAlgorithmSuite
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: SecurityAlgorithmSuite()
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref> classe."
  remarks: "As instâncias dessa classe consistem em propriedades estáticas e propriedades somente leitura, portanto o construtor não inicializa as propriedades."
  syntax:
    content: protected SecurityAlgorithmSuite ();
    parameters: []
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  id: Basic128
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém o conjunto de algoritmos de Basic128."
  remarks: "Por padrão, o AES-128 é usado como o algoritmo de criptografia."
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "O Basic de 128 bits <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  id: Basic128Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa RSA15 como o algoritmo de codificação de chave e Basic de 128 bits como o algoritmo de criptografia de mensagem."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui algumas das propriedades especificando valores padrão, bem como alguns dos métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa RSA15 como o algoritmo de codificação de chave e Basic de 128 bits como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  id: Basic128Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa SHA256 para o conteúdo da assinatura e Basic de 128 bits como o algoritmo de criptografia de mensagem."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui algumas das propriedades especificando valores padrão, bem como alguns dos métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa SHA256 para o conteúdo da assinatura e Basic de 128 bits como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  id: Basic128Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa RSA15 como o algoritmo de codificação de chave, SHA256 para resumo da assinatura e Basic de 128 bits como o algoritmo de criptografia de mensagem."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui algumas das propriedades especificando valores padrão, bem como alguns dos métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa RSA15 como o algoritmo de codificação de chave, SHA256 para resumo da assinatura e Basic de 128 bits como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  id: Basic192
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa Basic de 192 bits como o algoritmo de criptografia de mensagem."
  remarks: "Por padrão, AES&192; é usado como o algoritmo de criptografia."
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa Basic de 192 bits como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  id: Basic192Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa RSA15 como algoritmo de codificação de chave de 192 bits Basic como o algoritmo de criptografia de mensagem."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui algumas das propriedades especificando valores padrão, bem como alguns dos métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa RSA15 como algoritmo de codificação de chave de 192 bits Basic como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  id: Basic192Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa SHA256 para o conteúdo da assinatura e Basic de 192 bits como o algoritmo de criptografia de mensagem."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui algumas das propriedades especificando valores padrão, bem como alguns dos métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa SHA256 para o conteúdo da assinatura e Basic de 192 bits como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  id: Basic192Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa RSA15 como o algoritmo de codificação de chave, SHA256 para resumo da assinatura e Basic de 192 bits como o algoritmo de criptografia de mensagem."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui algumas das propriedades especificando valores padrão, bem como alguns dos métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa RSA15 como o algoritmo de codificação de chave, SHA256 para resumo da assinatura e Basic de 192 bits como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  id: Basic256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa Basic de 256 bits como o algoritmo de criptografia de mensagem."
  remarks: "Por padrão, o AES-256 é usado para o algoritmo de criptografia."
  example:
  - "The following code shows how to set <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> to this property.  \n  \n [!code-vb[c_ProgrammingSecurity#8](~/add/codesnippet/visualbasic/p-system.servicemodel.se_4_1.vb)]\n [!code-cs[c_ProgrammingSecurity#8](~/add/codesnippet/csharp/p-system.servicemodel.se_4_1.cs)]"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa Basic de 256 bits como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  id: Basic256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa RSA15 como o algoritmo de codificação de chave e Basic de 256 bits como o algoritmo de criptografia de mensagem."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui algumas das propriedades especificando valores padrão, bem como alguns dos métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa RSA15 como o algoritmo de codificação de chave e Basic de 256 bits como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  id: Basic256Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa SHA256 para o conteúdo da assinatura e Basic de 256 bits como o algoritmo de criptografia de mensagem."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui algumas das propriedades especificando valores padrão, bem como alguns dos métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa SHA256 para o conteúdo da assinatura e Basic de 256 bits como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  id: Basic256Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa RSA15 como o algoritmo de codificação de chave, SHA256 para resumo da assinatura e Basic de 256 bits como o algoritmo de criptografia de mensagem."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui algumas das propriedades especificando valores padrão, bem como alguns dos métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa RSA15 como o algoritmo de codificação de chave, SHA256 para resumo da assinatura e Basic de 256 bits como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  id: Default
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém o conjunto de algoritmos padrão."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui as propriedades especificando valores padrão, bem como os métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Default { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "O padrão <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref> é <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>, que especifica a 256 bits (AES padrão) como o algoritmo de criptografia simétrica.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>"
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Default*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  id: DefaultAsymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém o algoritmo de codificação de chave assimétrica padrão como uma cadeia de caracteres."
  remarks: "Quando substituído, fornece um valor de cadeia de caracteres que será usado para comparação no <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A>método.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultAsymmetricKeyWrapAlgorithm { get; }
    return:
      type: System.String
      description: "O algoritmo padrão de codificação de chave assimétrica."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  id: DefaultAsymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém o algoritmo de assinatura assimétrica padrão como uma cadeia de caracteres."
  remarks: "Quando substituído, fornece um valor de cadeia de caracteres que será usado para comparação no <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A>método.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultAsymmetricSignatureAlgorithm { get; }
    return:
      type: System.String
      description: "O algoritmo de assinatura assimétrica padrão."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  id: DefaultCanonicalizationAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém o algoritmo padrão de conversão em formato canônico como uma cadeia de caracteres."
  remarks: "Quando substituído, fornece um valor de cadeia de caracteres que será usado para comparação no método <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultCanonicalizationAlgorithm { get; }
    return:
      type: System.String
      description: "O algoritmo padrão de conversão em formato canônico."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  id: DefaultDigestAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém o algoritmo de digest padrão como uma cadeia de caracteres."
  remarks: "Quando substituído, fornece um valor de cadeia de caracteres que será usado para comparação no <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A>método.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultDigestAlgorithm { get; }
    return:
      type: System.String
      description: "O algoritmo de resumo padrão."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  id: DefaultEncryptionAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém o algoritmo de criptografia padrão como uma cadeia de caracteres."
  remarks: "Quando substituído, fornece um valor de cadeia de caracteres que será usado para comparação no <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A>método.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultEncryptionAlgorithm { get; }
    return:
      type: System.String
      description: "O algoritmo de criptografia padrão."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  id: DefaultEncryptionKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém o comprimento de derivação de chave de criptografia padrão como uma <xref:System.Int32>valor.</xref:System.Int32>"
  remarks: "O valor retornado variará dependendo da subclasse que a implementa. Para `Basic256` criptografia, ele retorna 256."
  syntax:
    content: public abstract int DefaultEncryptionKeyDerivationLength { get; }
    return:
      type: System.Int32
      description: "O comprimento de derivação de chave de criptografia padrão."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  id: DefaultSignatureKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém o comprimento de derivação de chave de assinatura padrão como uma <xref:System.Int32>valor.</xref:System.Int32>"
  remarks: "O valor retornado variará dependendo da subclasse que a implementa. Para `Basic256` criptografia, ele retorna 192."
  syntax:
    content: public abstract int DefaultSignatureKeyDerivationLength { get; }
    return:
      type: System.Int32
      description: "O comprimento de derivação de chave de assinatura padrão."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  id: DefaultSymmetricKeyLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém o comprimento da chave simétrica padrão como uma <xref:System.Int32>valor.</xref:System.Int32>"
  remarks: "O valor retornado variará dependendo da subclasse que a implementa. Para `Basic256` criptografia, ele retorna 256."
  syntax:
    content: public abstract int DefaultSymmetricKeyLength { get; }
    return:
      type: System.Int32
      description: "O comprimento de chave simétrica do padrão."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  id: DefaultSymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém o algoritmo padrão de codificação de chave simétrica como uma cadeia de caracteres."
  syntax:
    content: public abstract string DefaultSymmetricKeyWrapAlgorithm { get; }
    return:
      type: System.String
      description: "O algoritmo padrão de codificação de chave simétrica."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  id: DefaultSymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém o algoritmo de assinatura simétrica padrão como uma cadeia de caracteres."
  syntax:
    content: public abstract string DefaultSymmetricSignatureAlgorithm { get; }
    return:
      type: System.String
      description: "O algoritmo de assinatura simétrica padrão."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  id: IsAsymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsAsymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se um comprimento de chave particular é suportado pelo algoritmo assimétrico."
  remarks: "Comprimentos de chave típicos são 128, 192 e 256 bits."
  syntax:
    content: public abstract bool IsAsymmetricKeyLengthSupported (int length);
    parameters:
    - id: length
      type: System.Int32
      description: "O comprimento da chave para verificar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o comprimento da chave é suportado pelo algoritmo assimétrico; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  id: IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsAsymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se um algoritmo de codificação de chave assimétrica tem suporte."
  remarks: '`algorithm`Obtém a cadeia de caracteres retornada de <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A> em comparação com'
  syntax:
    content: public virtual bool IsAsymmetricKeyWrapAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O algoritmo para verificar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se houver suporte para o algoritmo de codificação de chave assimétrica; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  id: IsAsymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsAsymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se um algoritmo de assinatura assimétrica tem suporte."
  remarks: '`algorithm`Obtém a cadeia de caracteres retornada de <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A> em comparação com'
  syntax:
    content: public virtual bool IsAsymmetricSignatureAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O nome do algoritmo para verificação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se houver suporte para o algoritmo de assinatura assimétrica; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  id: IsCanonicalizationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsCanonicalizationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se há suporte para um algoritmo de conversão em formato canônico."
  remarks: '`algorithm`Obtém a cadeia de caracteres retornada de <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A> em comparação com'
  syntax:
    content: public virtual bool IsCanonicalizationAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O nome do algoritmo para verificação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se houver suporte para o algoritmo de canonização; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  id: IsDigestAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsDigestAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se um algoritmo digest tem suporte."
  remarks: '`algorithm`Obtém a cadeia de caracteres retornada de <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A> em comparação com'
  syntax:
    content: public virtual bool IsDigestAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O nome do algoritmo para verificação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se houver suporte para o algoritmo digest; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  id: IsEncryptionAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsEncryptionAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se um algoritmo de criptografia tem suporte."
  remarks: '`algorithm`Obtém a cadeia de caracteres retornada de <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A> em comparação com'
  syntax:
    content: public virtual bool IsEncryptionAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O nome do algoritmo para verificação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se houver suporte para o algoritmo de criptografia; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  id: IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsEncryptionKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se um algoritmo de derivação de chave de criptografia tem suporte."
  syntax:
    content: public virtual bool IsEncryptionKeyDerivationAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O nome do algoritmo para verificação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se houver suporte para o algoritmo de derivação de chave de criptografia; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  id: IsSignatureKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSignatureKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se um algoritmo de derivação de chave de assinatura é suportado."
  syntax:
    content: public virtual bool IsSignatureKeyDerivationAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O nome do algoritmo para verificação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se houver suporte para o algoritmo de derivação de chave de assinatura; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  id: IsSymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Quando substituído em uma classe derivada, indica se um determinado comprimento de chave simétrico tem suporte."
  remarks: "O `length` é comparado a um intervalo de valores, dependendo da subclasse. Por exemplo, o `TripleDES` subclasse, esse método verifica se `length` entre 192 e 256, inclusive."
  syntax:
    content: public abstract bool IsSymmetricKeyLengthSupported (int length);
    parameters:
    - id: length
      type: System.Int32
      description: "O comprimento da chave para verificar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o comprimento da chave simétrico é suportado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  id: IsSymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se um algoritmo de codificação de chave simétrica tem suporte."
  syntax:
    content: public virtual bool IsSymmetricKeyWrapAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O nome do algoritmo para verificação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o algoritmo de codificação de chave simétrica é suportado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  id: IsSymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se um algoritmo de assinatura simétrica tem suporte."
  syntax:
    content: public virtual bool IsSymmetricSignatureAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O nome do algoritmo para verificação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se houver suporte para o algoritmo de assinatura simétrica; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  id: TripleDes
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém o conjunto de algoritmos Triple Data Encryption Standard (DES)."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui algumas das propriedades especificando valores padrão, bem como alguns dos métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "O DES triplo <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  id: TripleDesRsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa RSA15 como algoritmo de codificação de chave de 192 bits Triple Data Encryption Standard (DES) como o algoritmo de criptografia de mensagem."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui algumas das propriedades especificando valores padrão, bem como alguns dos métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa RSA15 como algoritmo de codificação de chave de 192 bits Triple Data Encryption Standard (DES) como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  id: TripleDesSha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa SHA256 para o conteúdo da assinatura e 192 bits Triple Data Encryption Standard (DES) como o algoritmo de criptografia de mensagem."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui algumas das propriedades especificando valores padrão, bem como alguns dos métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa SHA256 para o conteúdo da assinatura e 192 bits Triple Data Encryption Standard (DES) como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  id: TripleDesSha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um conjunto de algoritmos que usa RSA15 como o algoritmo de codificação de chave, SHA256 para resumo da assinatura e 192 bits Triple Data Encryption Standard (DES) como o algoritmo de criptografia de mensagem."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>retornado é realmente uma subclasse interna que substitui algumas das propriedades especificando valores padrão, bem como alguns dos métodos.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Um conjunto de algoritmos que usa RSA15 como o algoritmo de codificação de chave, SHA256 para resumo da assinatura e 192 bits Triple Data Encryption Standard (DES) como o algoritmo de criptografia de mensagem."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: SecurityAlgorithmSuite()
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.SecurityAlgorithmSuite()
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsCanonicalizationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsDigestAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSignatureKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyLengthSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyWrapAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricSignatureAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsCanonicalizationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsDigestAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionKeyDerivationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSignatureKeyDerivationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyLengthSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyWrapAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricSignatureAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
