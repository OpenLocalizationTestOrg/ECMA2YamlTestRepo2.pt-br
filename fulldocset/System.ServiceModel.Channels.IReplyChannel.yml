### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IReplyChannel
  id: IReplyChannel
  children:
  - System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)
  - System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)
  - System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)
  - System.ServiceModel.Channels.IReplyChannel.LocalAddress
  - System.ServiceModel.Channels.IReplyChannel.ReceiveRequest
  - System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)
  - System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)
  - System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)
  langs:
  - csharp
  name: IReplyChannel
  nameWithType: IReplyChannel
  fullName: System.ServiceModel.Channels.IReplyChannel
  type: Interface
  summary: "Define a interface que um canal deve implementar para estar no lado de recebimento de uma comunicação de solicitação-resposta entre pontos de extremidade de mensagens."
  remarks: "A interface IReplyChannel inclui variantes síncronas e assíncronas de um <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>retorno do método um <xref:System.ServiceModel.Channels.RequestContext>que pode ser usado para construir as respostas às solicitações recebidas.</xref:System.ServiceModel.Channels.RequestContext> </xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>       O contrato inclui síncronas e assíncronas variantes de recebimento, funcionalidade tente para receber e de espera de mensagem.       Um IReplyChannel não é necessariamente associado a um único remetente. Outras interfaces de canal e canais de fornecem a correlação entre o remetente e o canal de resposta, mas nenhuma restrição faz com que o contrato básico.       O modelo de pull é usado com um IReplyChannel para receber mensagens. Esse modelo consiste em chamar <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>(ou uma de suas variantes) e, em seguida, aguardando uma mensagem chegue.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>"
  syntax:
    content: 'public interface IReplyChannel : System.ServiceModel.Channels.IChannel'
  implements:
  - System.ServiceModel.Channels.IChannel
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)
  id: BeginReceiveRequest(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: BeginReceiveRequest(AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginReceiveRequest(AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicia uma operação assíncrona para receber uma solicitação disponível com um tempo limite padrão."
  remarks: "O método BeginReceiveRequest implementa o padrão para invocar <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest>assincronamente.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest> O tempo limite padrão é 1 minuto. Se um tempo limite de recebimento for definido na associação usada para configurar a conexão, esse valor é usado. Use <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>se você deseja especificar um tempo limite explícito com a chamada que substitui esses outros valores.</xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>       Se a mensagem de solicitação recebida é maior do que o máximo permitido pela associação está sendo usada, do tamanho da mensagem um <xref:System.ServiceModel.QuotaExceededException>é gerada.</xref:System.ServiceModel.QuotaExceededException> O tamanho máximo da mensagem é definido <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>propriedade.</xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> O valor padrão é 65536 bytes."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#1](~/add/codesnippet/csharp/b714b94c-13fc-4c03-a779-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginReceiveRequest (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "O <xref:System.AsyncCallback>delegate que recebe a notificação do recebimento de uma operação de solicitação é concluída.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Um objeto, especificado pelo aplicativo, que contém informações de estado associadas a receive assíncrona de uma operação de solicitação."
    return:
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que faz referência a recepção assíncrona da solicitação.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: BeginReceiveRequest(TimeSpan,AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginReceiveRequest(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicia uma operação assíncrona para receber uma solicitação disponível com um tempo limite especificado."
  remarks: "O método BeginReceiveRequest implementa o padrão para invocar <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29>assincronamente.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29> O tempo limite definido neste método substitui um tempo limite de recebimento definido na associação que é usada para configurar a conexão.       Se a mensagem de solicitação recebida é maior do que o máximo permitido pela associação está sendo usada, do tamanho da mensagem um <xref:System.ServiceModel.QuotaExceededException>é gerada.</xref:System.ServiceModel.QuotaExceededException> O tamanho máximo da mensagem é definido <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>propriedade.</xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> O valor padrão é 65536 bytes."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#2](~/add/codesnippet/csharp/6f48cd8d-c63c-4708-86c4-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginReceiveRequest (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>que especifica o intervalo de tempo de espera para o recebimento de uma solicitação disponível.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "O <xref:System.AsyncCallback>delegate que recebe a notificação do recebimento de uma operação de solicitação é concluída.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Um objeto, especificado pelo aplicativo, que contém informações de estado associadas a receive assíncrona de uma operação de solicitação."
    return:
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que faz referência a recepção assíncrona da solicitação.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicia uma operação assíncrona para receber uma mensagem de solicitação que tem um tempo limite especificado e o objeto de estado associados a ele."
  remarks: "Use o método de BeginTryReceiveRequest assíncrono quando é necessário para continuar sem aguardar o processamento de aplicativo. Use um dos síncronos <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29>métodos quando ele é aceitável para o thread atual a ser bloqueada enquanto ele responde à mensagem de solicitação ou até que o intervalo de tempo limite for excedido.</xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29>       Este método recebe notificação por meio de um retorno de chamada da identidade do manipulador de eventos para a operação. A operação não é completa até que uma mensagem se torna disponível no canal ou o tempo limite seja atingido."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#5](~/add/codesnippet/csharp/cdb71277-0f0f-4e22-85af-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginTryReceiveRequest (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>que especifica quanto tempo a operação de solicitação de recebimento tem para concluir antes de atingir o tempo limite e retornar <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "O <xref:System.AsyncCallback>delegate que recebe a notificação do recebimento de uma operação de solicitação é concluída.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Um objeto, especificado pelo aplicativo, que contém informações de estado associadas a receive assíncrona de uma operação de solicitação."
    return:
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que faz referência a operação de solicitação de recebimento assíncrono.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: BeginWaitForRequest(TimeSpan,AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginWaitForRequest(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicia uma operação de solicitação assíncrona que tem um tempo limite especificado e um objeto de estado associados a ele."
  remarks: "Use o síncrona <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29>método quando ele é aceitável para o thread atual a ser bloqueado enquanto aguarda uma mensagem de solicitação chegar na fila.</xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> O thread está bloqueado para cima especificado `timeout`.       Este método recebe notificação por meio de um retorno de chamada da identidade do manipulador de eventos para a operação. A operação não é completa até que uma mensagem de solicitação se torna disponível no canal ou o tempo limite seja atingido."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#10](~/add/codesnippet/csharp/80573a5a-f5c0-4be0-a875-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginWaitForRequest (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>que especifica o intervalo de tempo de espera para o recebimento de uma solicitação disponível.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "O <xref:System.AsyncCallback>delegate que recebe a notificação do recebimento de uma operação de solicitação é concluída.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Um objeto, especificado pelo aplicativo, que contém informações de estado associadas a receive assíncrona de uma operação de solicitação."
    return:
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que faz referência a operação assíncrona para aguardar uma mensagem de solicitação chegar.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)
  id: EndReceiveRequest(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: EndReceiveRequest(IAsyncResult)
  nameWithType: IReplyChannel.EndReceiveRequest(IAsyncResult)
  fullName: System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Conclui uma operação assíncrona para receber uma solicitação disponível."
  remarks: "Se a mensagem de solicitação recebida é maior do que o máximo permitido pela associação está sendo usada, do tamanho da mensagem um <xref:System.ServiceModel.QuotaExceededException>é gerada.</xref:System.ServiceModel.QuotaExceededException> O tamanho máximo da mensagem é definido <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>propriedade.</xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> O valor padrão é 65536 bytes."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#3](~/add/codesnippet/csharp/c3561a14-d2f1-46f1-99c2-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Channels.RequestContext EndReceiveRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>retornado por uma chamada para o <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive*>método.</xref:System.ServiceModel.Channels.IInputChannel.BeginReceive*> </xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Channels.RequestContext
      description: "O <xref:System.ServiceModel.Channels.RequestContext>usado para construir uma resposta para a solicitação.</xref:System.ServiceModel.Channels.RequestContext>"
  overload: System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)
  id: EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: EndTryReceiveRequest(IAsyncResult,RequestContext)
  nameWithType: IReplyChannel.EndTryReceiveRequest(IAsyncResult,RequestContext)
  fullName: System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(IAsyncResult,RequestContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Conclui a operação assíncrona especificada para receber uma mensagem de solicitação."
  remarks: ''
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#6](~/add/codesnippet/csharp/2c432ec9-bfc6-46e4-8a1c-_1.cs)]"
  syntax:
    content: public bool EndTryReceiveRequest (IAsyncResult result, out System.ServiceModel.Channels.RequestContext context);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>retornado por uma chamada para o &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; método.</xref:System.IAsyncResult>"
    - id: context
      type: System.ServiceModel.Channels.RequestContext
      description: "O <xref:System.ServiceModel.Channels.RequestContext>recebida.</xref:System.ServiceModel.Channels.RequestContext>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma mensagem de solicitação for recebida antes do intervalo especificado de tempo; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)
  id: EndWaitForRequest(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: EndWaitForRequest(IAsyncResult)
  nameWithType: IReplyChannel.EndWaitForRequest(IAsyncResult)
  fullName: System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Conclui a operação de mensagem de espera de solicitação assíncrona especificada."
  remarks: ''
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#11](~/add/codesnippet/csharp/fc7d466d-2acc-417f-aa1b-_1.cs)]"
  syntax:
    content: public bool EndWaitForRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que identifica o &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; operação seja concluída e a partir do qual recuperar o resultado final.</xref:System.IAsyncResult>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma solicitação é recebida antes do intervalo especificado de tempo; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.LocalAddress
  id: LocalAddress
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: LocalAddress
  nameWithType: IReplyChannel.LocalAddress
  fullName: System.ServiceModel.Channels.IReplyChannel.LocalAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém o endereço no qual esse canal de resposta recebe mensagens."
  remarks: ''
  example:
  - "The following code illustrates how to implement this property:  \n  \n [!code-cs[S_UE_MessageInterceptor#0](~/add/codesnippet/csharp/p-system.servicemodel.ch_2_1.cs)]"
  syntax:
    content: public System.ServiceModel.EndpointAddress LocalAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "O <xref:System.ServiceModel.EndpointAddress>no qual esse canal de resposta recebe mensagens.</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Channels.IReplyChannel.LocalAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest
  id: ReceiveRequest
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: ReceiveRequest()
  nameWithType: IReplyChannel.ReceiveRequest()
  fullName: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Retorna o contexto da solicitação recebida, se houver um disponível. Se um contexto não estiver disponível, aguarda até que haja um disponível."
  remarks: "<xref:System.ServiceModel.Channels.RequestContext>encapsula a mensagem de solicitação e um mecanismo para responder à mensagem.</xref:System.ServiceModel.Channels.RequestContext>       ReceiveRequest pode ser chamado várias vezes ou simultaneamente. Apenas uma chamada de ReceiveRequest completa por solicitação recebida.       Se a mensagem de solicitação recebida é maior do que o máximo permitido pela associação está sendo usada, do tamanho da mensagem um <xref:System.ServiceModel.QuotaExceededException>é gerada.</xref:System.ServiceModel.QuotaExceededException> O tamanho máximo da mensagem é definido <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>propriedade.</xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> O valor padrão é 65536 bytes."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#7](~/add/codesnippet/csharp/m-system.servicemodel.ch_9_1.cs)]"
  syntax:
    content: public System.ServiceModel.Channels.RequestContext ReceiveRequest ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.RequestContext
      description: "O <xref:System.ServiceModel.Channels.RequestContext>usado para criar respostas.</xref:System.ServiceModel.Channels.RequestContext>"
  overload: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)
  id: ReceiveRequest(System.TimeSpan)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: ReceiveRequest(TimeSpan)
  nameWithType: IReplyChannel.ReceiveRequest(TimeSpan)
  fullName: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Retorna o contexto da solicitação recebida, se houver um disponível. Se um contexto não estiver disponível, aguarda até que haja um disponível."
  remarks: "<xref:System.ServiceModel.Channels.RequestContext>encapsula a mensagem de solicitação e um mecanismo para responder à mensagem.</xref:System.ServiceModel.Channels.RequestContext>       <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>pode ser chamado várias vezes ou simultaneamente.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> Apenas um <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>chamada ser concluída por solicitação recebida.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>       Se a mensagem de solicitação recebida é maior do que o máximo permitido pela associação está sendo usada, do tamanho da mensagem um <xref:System.ServiceModel.QuotaExceededException>é gerada.</xref:System.ServiceModel.QuotaExceededException> O tamanho máximo da mensagem é definido <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>propriedade.</xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> O valor padrão é 65536 bytes."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#8](~/add/codesnippet/csharp/m-system.servicemodel.ch_3_1.cs)]"
  syntax:
    content: public System.ServiceModel.Channels.RequestContext ReceiveRequest (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>que especifica quanto tempo o recebimento de uma operação de solicitação tem para concluir antes de atingir o tempo limite e retornar <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.TimeSpan>"
    return:
      type: System.ServiceModel.Channels.RequestContext
      description: "O <xref:System.ServiceModel.Channels.RequestContext>usado para criar respostas.</xref:System.ServiceModel.Channels.RequestContext>"
  overload: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)
  id: TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: TryReceiveRequest(TimeSpan,RequestContext)
  nameWithType: IReplyChannel.TryReceiveRequest(TimeSpan,RequestContext)
  fullName: System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(TimeSpan,RequestContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Retorna um valor que indica se uma solicitação é recebida antes de um intervalo especificado de tempo."
  remarks: "Use TryReceiveRequest quando é aceitável para o thread atual a ser bloqueado enquanto aguarda uma mensagem de solicitação chegar na fila. O thread está bloqueado para cima especificado `timeout`. Se você precisar continuar sem aguardar o processamento de aplicativo, use o assíncrona <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>método.</xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>"
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#4](~/add/codesnippet/csharp/78581c5e-1028-4e54-ba3b-_1.cs)]"
  syntax:
    content: public bool TryReceiveRequest (TimeSpan timeout, out System.ServiceModel.Channels.RequestContext context);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>que especifica quanto tempo o recebimento de uma operação de solicitação tem para concluir antes de atingir o tempo limite e retornar <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.TimeSpan>"
    - id: context
      type: System.ServiceModel.Channels.RequestContext
      description: "O <xref:System.ServiceModel.Channels.RequestContext>recebida.</xref:System.ServiceModel.Channels.RequestContext>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma mensagem de solicitação for recebida antes do intervalo especificado de tempo; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)
  id: WaitForRequest(System.TimeSpan)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: WaitForRequest(TimeSpan)
  nameWithType: IReplyChannel.WaitForRequest(TimeSpan)
  fullName: System.ServiceModel.Channels.IReplyChannel.WaitForRequest(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Retorna um valor que indica se uma mensagem de solicitação é recebida antes de um intervalo especificado de tempo."
  remarks: "Chamar WaitForRequest não resulta em uma mensagem de solicitação está sendo recebidos ou processados de forma alguma.       O <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>método existe principalmente para transacionado cenários em que o usuário deseja receber a mensagem de uso de uma transação.</xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> Ao usar apenas <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>normalmente para isso, o usuário deve criar a transação e, em seguida, chamar <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>e esperamos que a mensagem chegar antes da transação de tempo limite, que pode não ser possível.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> </xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>       Em vez disso, o usuário pode chamar WaitForRequest e especifique o tempo limite (mesmo infinito), em seguida, quando uma mensagem chega, eles poderão abrir a transação, chame <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>e ter certeza de que eles podem obter a mensagem antes de expira a transação.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>       Use WaitForRequest quando é aceitável para o thread atual a ser bloqueado enquanto aguarda uma mensagem para chegar na fila. O thread está bloqueado para cima especificado `timeout`. Se você precisar continuar sem aguardar o processamento de aplicativo, use o assíncrona <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>método.</xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>"
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#9](~/add/codesnippet/csharp/m-system.servicemodel.ch_6_1.cs)]"
  syntax:
    content: public bool WaitForRequest (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>que especifica quanto tempo uma solicitação de operação deve concluir antes de atingir o tempo limite e retornar <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.TimeSpan>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma solicitação é recebida antes do intervalo especificado de tempo; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.IReplyChannel.WaitForRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginReceiveRequest(AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginReceiveRequest(AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginReceiveRequest(TimeSpan,AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginReceiveRequest(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(TimeSpan,AsyncCallback,Object)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginWaitForRequest(TimeSpan,AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginWaitForRequest(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: EndReceiveRequest(IAsyncResult)
  nameWithType: IReplyChannel.EndReceiveRequest(IAsyncResult)
  fullName: System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(IAsyncResult)
- uid: System.ServiceModel.Channels.RequestContext
  parent: System.ServiceModel.Channels
  isExternal: true
  name: RequestContext
  nameWithType: RequestContext
  fullName: System.ServiceModel.Channels.RequestContext
- uid: System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: EndTryReceiveRequest(IAsyncResult,RequestContext)
  nameWithType: IReplyChannel.EndTryReceiveRequest(IAsyncResult,RequestContext)
  fullName: System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(IAsyncResult,RequestContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: EndWaitForRequest(IAsyncResult)
  nameWithType: IReplyChannel.EndWaitForRequest(IAsyncResult)
  fullName: System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(IAsyncResult)
- uid: System.ServiceModel.Channels.IReplyChannel.LocalAddress
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: LocalAddress
  nameWithType: IReplyChannel.LocalAddress
  fullName: System.ServiceModel.Channels.IReplyChannel.LocalAddress
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: ReceiveRequest()
  nameWithType: IReplyChannel.ReceiveRequest()
  fullName: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest()
- uid: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: ReceiveRequest(TimeSpan)
  nameWithType: IReplyChannel.ReceiveRequest(TimeSpan)
  fullName: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(TimeSpan)
- uid: System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: TryReceiveRequest(TimeSpan,RequestContext)
  nameWithType: IReplyChannel.TryReceiveRequest(TimeSpan,RequestContext)
  fullName: System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(TimeSpan,RequestContext)
- uid: System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: WaitForRequest(TimeSpan)
  nameWithType: IReplyChannel.WaitForRequest(TimeSpan)
  fullName: System.ServiceModel.Channels.IReplyChannel.WaitForRequest(TimeSpan)
- uid: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginReceiveRequest
  nameWithType: IReplyChannel.BeginReceiveRequest
- uid: System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginTryReceiveRequest
  nameWithType: IReplyChannel.BeginTryReceiveRequest
- uid: System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginWaitForRequest
  nameWithType: IReplyChannel.BeginWaitForRequest
- uid: System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: EndReceiveRequest
  nameWithType: IReplyChannel.EndReceiveRequest
- uid: System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: EndTryReceiveRequest
  nameWithType: IReplyChannel.EndTryReceiveRequest
- uid: System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: EndWaitForRequest
  nameWithType: IReplyChannel.EndWaitForRequest
- uid: System.ServiceModel.Channels.IReplyChannel.LocalAddress*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: LocalAddress
  nameWithType: IReplyChannel.LocalAddress
- uid: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: ReceiveRequest
  nameWithType: IReplyChannel.ReceiveRequest
- uid: System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: TryReceiveRequest
  nameWithType: IReplyChannel.TryReceiveRequest
- uid: System.ServiceModel.Channels.IReplyChannel.WaitForRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: WaitForRequest
  nameWithType: IReplyChannel.WaitForRequest
