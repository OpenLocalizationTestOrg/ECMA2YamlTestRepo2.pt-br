### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SourceSwitch
  id: SourceSwitch
  children:
  - System.Diagnostics.SourceSwitch.#ctor(System.String)
  - System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.SourceSwitch.Level
  - System.Diagnostics.SourceSwitch.OnValueChanged
  - System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  langs:
  - csharp
  name: SourceSwitch
  nameWithType: SourceSwitch
  fullName: System.Diagnostics.SourceSwitch
  type: Class
  summary: "Fornece uma opção de vários níveis para controle de rastreamento e saída de depuração sem recompilar seu código."
  remarks: "O <xref:System.Diagnostics.TraceSource.Switch%2A>propriedade o <xref:System.Diagnostics.TraceSource>classe é um objeto SourceSwitch.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.TraceSource.Switch%2A> A classe SourceSwitch fornece um <xref:System.Diagnostics.SourceSwitch.Level%2A>propriedade para testar o nível de evento do comutador.</xref:System.Diagnostics.SourceSwitch.Level%2A> O <xref:System.Diagnostics.SourceSwitch.Level%2A>propriedade obtém ou define a opção <xref:System.Diagnostics.TraceLevel>valor.</xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.SourceSwitch.Level%2A>       Você pode definir o nível de evento de um SourceSwitch por meio do arquivo de configuração do aplicativo e, em seguida, use o nível de SourceSwitch configurado em seu aplicativo. Como alternativa, você pode criar um SourceSwitch no seu código e definir o nível diretamente, para instrumentar uma seção de código.       Para configurar um SourceSwitch, edite o arquivo de configuração que corresponde ao nome do seu aplicativo. Nesse arquivo, você pode definir o valor de um switch ou limpar todos os comutadores anteriormente definidos pelo aplicativo. O arquivo de configuração deve ser formatado como mostrado no exemplo a seguir.      ```   <switches>     <add name=&quot;SourceSwitch&quot; value=&quot;Verbose&quot;></add>   </switches>   ```A opção é usada para verificar se um rastreamento deve ser propagado ou ignorado. Cada <xref:System.Diagnostics.TraceSource>chamadas de método de rastreamento de <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>método antes de chamar os ouvintes.</xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> </xref:System.Diagnostics.TraceSource> Se o <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>método retorna `false`, o rastreamento será ignorado e o método trace será encerrado.</xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Se o <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>método retorna `true`, o rastreamento é passado para os ouvintes.</xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>"
  syntax:
    content: 'public class SourceSwitch : System.Diagnostics.Switch'
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  implements: []
  inheritedMembers:
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  platform:
  - net462
- uid: System.Diagnostics.SourceSwitch.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  name: SourceSwitch(String)
  nameWithType: SourceSwitch.SourceSwitch(String)
  fullName: System.Diagnostics.SourceSwitch.SourceSwitch(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.SourceSwitch&quot;> </xref> classe, especificando o nome da fonte."
  remarks: "O `name` parâmetro é usado para definir o valor de <xref:System.Diagnostics.Switch.DisplayName%2A>propriedade.</xref:System.Diagnostics.Switch.DisplayName%2A>       Para definir o nível de seu <xref:System.Diagnostics.SourceSwitch>, edite o arquivo de configuração que corresponde ao nome do seu aplicativo.</xref:System.Diagnostics.SourceSwitch> Nesse arquivo, você pode adicionar um comutador e defina seu valor, remova um comutador ou desmarcar todas as opções definidas anteriormente pelo aplicativo. Para adicionar uma alternância de origem, o arquivo de configuração deve ser formatado como mostrado no exemplo a seguir.      ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;SourceSwitch&quot; value=&quot;Verbose&quot; ></add>       </switches>     </system.diagnostics>   </configuration>   ```"
  syntax:
    content: public SourceSwitch (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome da origem."
  overload: System.Diagnostics.SourceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  name: SourceSwitch(String,String)
  nameWithType: SourceSwitch.SourceSwitch(String,String)
  fullName: System.Diagnostics.SourceSwitch.SourceSwitch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.SourceSwitch&quot;> </xref> classe, especificando o nome de exibição e o valor padrão para a alternância de origem."
  remarks: "O `displayName` parâmetro é usado para definir o valor da <xref:System.Diagnostics.Switch.DisplayName%2A>propriedade; o `defaultSwitchValue` parâmetro é salvo como um campo e usado para inicializar o <xref:System.Diagnostics.Switch.Value%2A>propriedade na primeira referência.</xref:System.Diagnostics.Switch.Value%2A> </xref:System.Diagnostics.Switch.DisplayName%2A>      > [!NOTE] > Se o comutador é definido em um arquivo de configuração e o `value` atributo for especificado, o valor do arquivo de configuração terá precedência e o `defaultSwitchValue` será ignorado.       Para definir o nível de seu <xref:System.Diagnostics.SourceSwitch>, edite o arquivo de configuração que corresponde ao nome do seu aplicativo.</xref:System.Diagnostics.SourceSwitch> Nesse arquivo, você pode adicionar um comutador e defina seu valor, remova um comutador ou desmarcar todas as opções definidas anteriormente pelo aplicativo. Para adicionar uma alternância de origem, o arquivo de configuração deve ser formatado como mostrado no exemplo a seguir.      ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;SourceSwitch&quot; value=&quot;Verbose&quot; ></add>       </switches>     </system.diagnostics>   </configuration>   ```"
  example:
  - "The following code example creates a <xref:System.Diagnostics.SourceSwitch> with the name \"SourceSwitch\" and a default value of <xref:System.Diagnostics.SourceLevels>. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource#7](~/add/codesnippet/csharp/m-system.diagnostics.sou_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#7](~/add/codesnippet/visualbasic/m-system.diagnostics.sou_0_1.vb)]"
  syntax:
    content: public SourceSwitch (string displayName, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "O nome do comutador de origem."
    - id: defaultSwitchValue
      type: System.String
      description: "O valor padrão para o comutador."
  overload: System.Diagnostics.SourceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SourceSwitch.Level
  id: Level
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  name: Level
  nameWithType: SourceSwitch.Level
  fullName: System.Diagnostics.SourceSwitch.Level
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define o nível do comutador."
  remarks: "Essa propriedade obtém seu valor da <xref:System.Diagnostics.Switch.SwitchSetting%2A>propriedade.</xref:System.Diagnostics.Switch.SwitchSetting%2A> A definição dessa propriedade também modifica o <xref:System.Diagnostics.Switch.SwitchSetting%2A>propriedade.</xref:System.Diagnostics.Switch.SwitchSetting%2A>      > [!NOTE] > Para extensibilidade, a propriedade de nível pode ser definida como qualquer inteiro, em vez de estar limitado a um <xref:System.Diagnostics.SourceLevels>valor de enumeração.</xref:System.Diagnostics.SourceLevels>"
  example:
  - "The following code example displays the value of the Level property for a source switch. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource#8](~/add/codesnippet/csharp/p-system.diagnostics.sou_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#8](~/add/codesnippet/visualbasic/p-system.diagnostics.sou_1.vb)]"
  syntax:
    content: public System.Diagnostics.SourceLevels Level { get; set; }
    return:
      type: System.Diagnostics.SourceLevels
      description: "Uma da <xref href=&quot;System.Diagnostics.SourceLevels&quot;> </xref> valores que representa o nível de evento do comutador."
  overload: System.Diagnostics.SourceSwitch.Level*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SourceSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: SourceSwitch.OnValueChanged()
  fullName: System.Diagnostics.SourceSwitch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Chamado quando o valor de <xref:System.Diagnostics.Switch.Value*>alterações de propriedade.</xref:System.Diagnostics.Switch.Value*>"
  remarks: "O método OnValueChanged converte o novo valor da <xref:System.Diagnostics.Switch.Value%2A>propriedade para a representação de inteiro de campo correspondente no <xref:System.Diagnostics.SourceLevels>enumeração e, em seguida, usa esse número inteiro para definir o <xref:System.Diagnostics.Switch.SwitchSetting%2A>propriedade.</xref:System.Diagnostics.Switch.SwitchSetting%2A> </xref:System.Diagnostics.SourceLevels> </xref:System.Diagnostics.Switch.Value%2A>"
  syntax:
    content: protected override void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.SourceSwitch.OnValueChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O novo valor de <xref:System.Diagnostics.Switch.Value*>não é um do <xref href=&quot;System.Diagnostics.SourceLevels&quot;> </xref> valores.</xref:System.Diagnostics.Switch.Value*>"
  platform:
  - net462
- uid: System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  id: ShouldTrace(System.Diagnostics.TraceEventType)
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  name: ShouldTrace(TraceEventType)
  nameWithType: SourceSwitch.ShouldTrace(TraceEventType)
  fullName: System.Diagnostics.SourceSwitch.ShouldTrace(TraceEventType)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Determina se os ouvintes de rastreamento devem ser chamados, com base no tipo de evento de rastreamento."
  remarks: "Este método é chamado pelo `Trace` métodos de <xref:System.Diagnostics.TraceSource>classe para determinar se os ouvintes devem ser chamados para gravar um rastreamento.</xref:System.Diagnostics.TraceSource>      > [!NOTE] > Código do aplicativo não deve chamar esse método; ele se destina a ser chamado somente por métodos de <xref:System.Diagnostics.TraceSource>classe.</xref:System.Diagnostics.TraceSource>"
  syntax:
    content: public bool ShouldTrace (System.Diagnostics.TraceEventType eventType);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uma da <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valores."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se os ouvintes de rastreamento devem ser chamados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.SourceSwitch.ShouldTrace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Switch
  isExternal: false
  name: System.Diagnostics.Switch
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.SourceSwitch.#ctor(System.String)
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: SourceSwitch(String)
  nameWithType: SourceSwitch.SourceSwitch(String)
  fullName: System.Diagnostics.SourceSwitch.SourceSwitch(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: SourceSwitch(String,String)
  nameWithType: SourceSwitch.SourceSwitch(String,String)
  fullName: System.Diagnostics.SourceSwitch.SourceSwitch(String,String)
- uid: System.Diagnostics.SourceSwitch.Level
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: Level
  nameWithType: SourceSwitch.Level
  fullName: System.Diagnostics.SourceSwitch.Level
- uid: System.Diagnostics.SourceLevels
  parent: System.Diagnostics
  isExternal: false
  name: SourceLevels
  nameWithType: SourceLevels
  fullName: System.Diagnostics.SourceLevels
- uid: System.Diagnostics.SourceSwitch.OnValueChanged
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: OnValueChanged()
  nameWithType: SourceSwitch.OnValueChanged()
  fullName: System.Diagnostics.SourceSwitch.OnValueChanged()
- uid: System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: ShouldTrace(TraceEventType)
  nameWithType: SourceSwitch.ShouldTrace(TraceEventType)
  fullName: System.Diagnostics.SourceSwitch.ShouldTrace(TraceEventType)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Diagnostics.SourceSwitch.#ctor*
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: SourceSwitch
  nameWithType: SourceSwitch.SourceSwitch
- uid: System.Diagnostics.SourceSwitch.Level*
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: Level
  nameWithType: SourceSwitch.Level
- uid: System.Diagnostics.SourceSwitch.OnValueChanged*
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: OnValueChanged
  nameWithType: SourceSwitch.OnValueChanged
- uid: System.Diagnostics.SourceSwitch.ShouldTrace*
  parent: System.Diagnostics.SourceSwitch
  isExternal: false
  name: ShouldTrace
  nameWithType: SourceSwitch.ShouldTrace
