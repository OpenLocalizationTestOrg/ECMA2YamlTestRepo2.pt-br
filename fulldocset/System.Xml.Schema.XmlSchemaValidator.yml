### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaValidator
  id: XmlSchemaValidator
  children:
  - System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  - System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaValidator.EndValidation
  - System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  - System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  - System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  - System.Xml.Schema.XmlSchemaValidator.Initialize
  - System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  - System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  - System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.SourceUri
  - System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  - System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  - System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  - System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  - System.Xml.Schema.XmlSchemaValidator.XmlResolver
  langs:
  - csharp
  name: XmlSchemaValidator
  nameWithType: XmlSchemaValidator
  fullName: System.Xml.Schema.XmlSchemaValidator
  type: Class
  summary: "Representa um mecanismo de validação do esquema de linguagem de definição de esquema XML (XSD). A classe XmlSchemaValidator não pode ser herdada."
  remarks: "> [!IMPORTANT]>-Não use esquemas de fontes desconhecidas ou não confiáveis ou locais. Isso comprometerá a segurança do seu código.   >-Esquemas XML (incluindo esquemas embutidos) são inerentemente vulneráveis a ataques negação de serviço; não aceitá-los em cenários não confiáveis.   >-Mensagens de erro de validação de esquema e as exceções podem expor informações confidenciais sobre o modelo de conteúdo ou o caminho de URI para o arquivo de esquema. Tenha cuidado para não expor essas informações para chamadores não confiáveis.       A classe XmlSchemaValidator fornece um mecanismo eficiente, de alto desempenho para validar dados XML com esquemas XML de maneira baseado em push. Por exemplo, a classe XmlSchemaValidator permite validar uma XML infoset in-loco sem a necessidade de serializá-lo como um documento XML e, em seguida, de nova análise o documento usando um leitor XML de validação. A classe de XmlSchemaValidator também pode ser usada para criar mecanismos de validação em fontes de dados XML personalizadas ou como uma maneira de criar um gravador XML de validação.       Para obter mais informações sobre a classe XmlSchemaValidator, consulte o [XmlSchemaValidator envio-de validação](~/add/includes/ajax-current-ext-md.md) tópico.      > [!IMPORTANT] > O <xref:System.Xml.Schema.XmlSchemaValidationFlags>e <xref:System.Xml.Schema.XmlSchemaValidationFlags>sinalizadores de um objeto XmlSchemaValidator não estão definidas de validação ser padrão.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidationFlags> Além disso, o <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A>é de propriedade de um objeto XmlSchemaValidator `null` por padrão.</xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> Como resultado, esquemas externos referenciadas em incluem, importações ou elementos de redefinição não são resolvidos por padrão."
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the XmlSchemaValidator class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_19_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_19_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_19_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/t-system.xml.schema.xmls_19_3.xsd)]"
  syntax:
    content: public sealed class XmlSchemaValidator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  id: '#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)'
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  nameWithType: XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> classe."
  remarks: "A seguir estão as observações importantes a considerar ao usar o construtor XmlSchemaValidator.      -O conteúdo do <xref:System.Xml.Schema.XmlSchemaSet>parâmetro são copiados em interno <xref:System.Xml.Schema.XmlSchemaSet>objeto quando o <xref:System.Xml.Schema.XmlSchemaValidationFlags>ou o <xref:System.Xml.Schema.XmlSchemaValidationFlags>Opções de validação são definidas.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> Como resultado, é alterado para a entrada <xref:System.Xml.Schema.XmlSchemaSet>objeto durante a validação não afetam o resultado da validação.</xref:System.Xml.Schema.XmlSchemaSet>      -Se a <xref:System.Xml.Schema.XmlSchemaSet>parâmetro especificado não está compilado, seu <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>método é chamado.</xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> </xref:System.Xml.Schema.XmlSchemaSet>      -A <xref:System.Xml.IXmlNamespaceResolver>parâmetro é especialmente importante para validar `xs:QName` tipos.</xref:System.Xml.IXmlNamespaceResolver> A <xref:System.Xml.Schema.XmlSchemaValidator>classe não copia os namespaces no escopo do <xref:System.Xml.IXmlNamespaceResolver>objeto, mas em vez disso, contém uma referência a.</xref:System.Xml.IXmlNamespaceResolver> </xref:System.Xml.Schema.XmlSchemaValidator> Isso permite que novos namespaces a serem adicionadas à <xref:System.Xml.IXmlNamespaceResolver>objeto durante o processo de validação.</xref:System.Xml.IXmlNamespaceResolver>      > [!IMPORTANT] > O <xref:System.Xml.Schema.XmlSchemaValidationFlags>e <xref:System.Xml.Schema.XmlSchemaValidationFlags>sinalizadores de validação de um <xref:System.Xml.Schema.XmlSchemaValidator>objeto não são padrão do conjunto de ser.</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidationFlags> Além disso, o <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A>propriedade de um <xref:System.Xml.Schema.XmlSchemaValidator>objeto `null` por padrão.</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> Como resultado, esquemas externos referenciadas em incluem, importações ou elementos de redefinição não são resolvidos por padrão."
  example:
  - For an example of the XmlSchemaValidator constructor, see the <xref:System.Xml.Schema.XmlSchemaValidator> class reference topic.
  syntax:
    content: public XmlSchemaValidator (System.Xml.XmlNameTable nameTable, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.IXmlNamespaceResolver namespaceResolver, System.Xml.Schema.XmlSchemaValidationFlags validationFlags);
    parameters:
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "Um <xref:System.Xml.XmlNameTable>objeto que contém nomes de elementos e atributos como cadeias de caracteres atomizados.</xref:System.Xml.XmlNameTable>"
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objeto que contém os esquemas de linguagem de definição de esquema XML (XSD) usados para validação."
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "Um <xref:System.Xml.IXmlNamespaceResolver>objeto usado para resolver namespaces encontrados durante a validação.</xref:System.Xml.IXmlNamespaceResolver>"
    - id: validationFlags
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaValidationFlags&quot;> </xref> valor que especifica as opções de validação de esquema."
  overload: System.Xml.Schema.XmlSchemaValidator.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos parâmetros especificados são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Ocorreu um erro durante a compilação de esquemas a <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> parâmetro."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  id: AddSchema(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: AddSchema(XmlSchema)
  nameWithType: XmlSchemaValidator.AddSchema(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaValidator.AddSchema(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Adiciona um esquema de linguagem de definição de esquema XML (XSD) para o conjunto de esquemas usados para validação."
  remarks: "A seguir estão as observações importantes a considerar ao usar o método AddSchema.      -O método AddSchema pode ser usado para simular o efeito de encontrar um esquema XML embutido no documento XML que está sendo validado.      -O namespace de destino a <xref:System.Xml.Schema.XmlSchema>parâmetro não pode coincidir com qualquer elemento ou atributo já encontrados pelo <xref:System.Xml.Schema.XmlSchemaValidator>objeto.</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchema>      -Se a <xref:System.Xml.Schema.XmlSchemaValidationFlags>opção de validação não for definida, o método AddSchema não faz nada.</xref:System.Xml.Schema.XmlSchemaValidationFlags>"
  syntax:
    content: public void AddSchema (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Um <xref:System.Xml.Schema.XmlSchema>objeto a ser adicionado ao conjunto de esquemas usados para validação.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaValidator.AddSchema*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref:System.Xml.Schema.XmlSchema>parâmetro especificado é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O namespace de destino a <xref:System.Xml.Schema.XmlSchema>parâmetro faz a correspondência de qualquer elemento ou atributo já encontrados pelo <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto.</xref:System.Xml.Schema.XmlSchema>"
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "O <xref:System.Xml.Schema.XmlSchema>parâmetro é inválido.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation
  id: EndValidation
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: EndValidation()
  nameWithType: XmlSchemaValidator.EndValidation()
  fullName: System.Xml.Schema.XmlSchemaValidator.EndValidation()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Termina a validação e verificações de restrições de identidade para todo o documento XML."
  remarks: "O método EndValidation termina validação e verificações de restrições de identidade para todo o documento XML se o <xref:System.Xml.Schema.XmlSchemaValidationFlags>validação opção está definida.</xref:System.Xml.Schema.XmlSchemaValidationFlags>"
  syntax:
    content: public void EndValidation ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaValidator.EndValidation*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "Um erro de restrição de identidade foi encontrado no documento XML."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  id: GetExpectedAttributes
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetExpectedAttributes()
  nameWithType: XmlSchemaValidator.GetExpectedAttributes()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Retorna os atributos esperados para o contexto do elemento atual."
  remarks: "A seguir estão as observações importantes a considerar ao usar o método GetExpectedAttributes.      -Se o método GetExpectedAttributes é chamado imediatamente após o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A>método, todos os atributos que podem aparecer no documento XML são retornados.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A>      -Se o método GetExpectedAttributes é chamado após uma ou mais chamadas para o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>método, os atributos que ainda não foram validados para o elemento atual são retornados.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchemaAttribute[]
      description: "Uma matriz de <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref> objetos ou uma matriz vazia se não houver nenhum atributo esperado."
  overload: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  id: GetExpectedParticles
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetExpectedParticles()
  nameWithType: XmlSchemaValidator.GetExpectedParticles()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Retorna as partículas esperadas no contexto do elemento atual."
  remarks: "As partículas válidas que podem ser retornadas pelo método GetExpectedParticles são instâncias da <xref:System.Xml.Schema.XmlSchemaElement>e <xref:System.Xml.Schema.XmlSchemaAny>classes.</xref:System.Xml.Schema.XmlSchemaAny> </xref:System.Xml.Schema.XmlSchemaElement>       Quando o compositor para o modelo de conteúdo é um `xs:sequence`, somente a partícula Avançar na sequência é retornada. Se o compositor para o modelo de conteúdo é um `xs:all` ou um `xs:choice`, todas as partículas válidas que podem seguir no contexto do elemento atual serão retornadas.       Por exemplo, na linguagem de definição de esquema para XML (XSD) XML e esquema documentos seguir, depois de validar o `book` elemento, o `book` elemento é o contexto do elemento atual. O método GetExpectedParticles retorna uma matriz que contém um único <xref:System.Xml.Schema.XmlSchemaElement>objeto representando o `title` elemento.</xref:System.Xml.Schema.XmlSchemaElement> Quando o contexto de validação é o `title` elemento, o método GetExpectedParticles retorna uma matriz vazia. Se o método GetExpectedParticles é chamado após o `title` elemento foi validado mas antes de `description` elemento foi validado, ele retorna uma matriz que contém um único <xref:System.Xml.Schema.XmlSchemaElement>objeto representando o `description` elemento.</xref:System.Xml.Schema.XmlSchemaElement> Se o método GetExpectedParticles é chamado após o `description` elemento foi validado, em seguida, ele retorna uma matriz que contém um único <xref:System.Xml.Schema.XmlSchemaAny>objeto que representa o caractere curinga.</xref:System.Xml.Schema.XmlSchemaAny>      ```vb#   Dim reader As XmlReader =  XmlReader.Create(&quot;input.xml&quot;)       Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()    schemaSet.Add(Nothing, &quot;schema.xsd&quot;)   Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)       Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)   validator.Initialize()      validator.ValidateElement(&quot;book&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(&quot;title&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next   validator.ValidateEndElement(Nothing)      For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(&quot;description&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()       Console.WriteLine(particle.GetType())   Next      validator.ValidateElement(&quot;namespace&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      validator.ValidateEndElement(Nothing)   ```      ```c#   XmlReader reader = XmlReader.Create(&quot;input.xml&quot;);      XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, &quot;schema.xsd&quot;);   XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);      XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);   validator.Initialize();      validator.ValidateElement(&quot;book&quot;, &quot;&quot;, null);      validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(&quot;title&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }   validator.ValidateEndElement(null);      foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(&quot;description&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())   {       Console.WriteLine(particle.GetType());   }      validator.ValidateElement(&quot;namespace&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      validator.ValidateEndElement(null);   ```O exemplo usa o seguinte XML como entrada.       `<xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;>`       `<xs:element name=&quot;book&quot;>`       `<xs:complexType>`       `<xs:sequence>`       `<xs:element name=&quot;title&quot; type=&quot;xs:string&quot; />`       `<xs:element name=&quot;description&quot; type=&quot;xs:string&quot; />`       `<xs:any processContents =&quot;lax&quot;/>`       `</xs:sequence>`       `</xs:complexType>`       `</xs:element>`       `</xs:schema>`O exemplo usa o seguinte esquema XSD como entrada.       `<book>`       `<title>My Book</title>`       `<description>My Book&quot;s Description</description>`       `<namespace>System.Xml.Schema</namespace>`       `</book>`"
  syntax:
    content: public System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchemaParticle[]
      description: "Uma matriz de <xref href=&quot;System.Xml.Schema.XmlSchemaParticle&quot;> </xref> objetos ou uma matriz vazia se não houver nenhum partículas esperadas."
  overload: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  id: GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetUnspecifiedDefaultAttributes(ArrayList)
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  fullName: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida as restrições de identidade nos atributos padrão e preenche o <xref href=&quot;System.Collections.ArrayList&quot;> </xref> especificado com <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref> objetos para os atributos com valores padrão que não foram previamente validados usando o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>método no contexto do elemento.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  remarks: "O método GetUnspecifiedDefaultAttributes deve ser chamado depois de validar todos os atributos do elemento atual com o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>método.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> O método GetUnspecifiedDefaultAttributes deve ser usado para determinar quais atributos padrão a ser inserido no documento XML que está sendo validado."
  syntax:
    content: public void GetUnspecifiedDefaultAttributes (System.Collections.ArrayList defaultAttributes);
    parameters:
    - id: defaultAttributes
      type: System.Collections.ArrayList
      description: "Um <xref href=&quot;System.Collections.ArrayList&quot;> </xref> para popular com <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref> objetos para os atributos que ainda não foram encontrados durante a validação no contexto do elemento."
  overload: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize
  id: Initialize
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: Initialize()
  nameWithType: XmlSchemaValidator.Initialize()
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inicializa o estado do <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto."
  remarks: "O método Initialize só será válido se chamado imediatamente após a construção de uma <xref:System.Xml.Schema.XmlSchemaValidator>objeto ou após uma chamada para <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>.</xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A> </xref:System.Xml.Schema.XmlSchemaValidator>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_4_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_4_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/m-system.xml.schema.xmls_4_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/m-system.xml.schema.xmls_4_3.xsd)]"
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaValidator.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamando o <> </> *> método é válido imediatamente após a construção de uma <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto ou após uma chamada para <> </> *> somente."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  id: Initialize(System.Xml.Schema.XmlSchemaObject)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: Initialize(XmlSchemaObject)
  nameWithType: XmlSchemaValidator.Initialize(XmlSchemaObject)
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize(XmlSchemaObject)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inicializa o estado do <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto usando o <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;> </xref> especificado para validação parcial."
  remarks: "O método de inicialização que usa um <xref:System.Xml.Schema.XmlSchemaObject>como um parâmetro inicializa um <xref:System.Xml.Schema.XmlSchemaValidator>objeto para seu estado inicial de validação parcial.</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchemaObject>"
  example:
  - "In the following example, an <xref:System.Xml.Schema.XmlSchemaObject> is initialized for partial validation using the Initialize method. The `orderNumber` schema element is passed by selecting the schema element by <xref:System.Xml.XmlQualifiedName> in the <xref:System.Xml.Schema.XmlSchemaObjectTable> collection returned by the <xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> object. The <xref:System.Xml.Schema.XmlSchemaValidator> object then validates this specific element.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(Nothing, \"schema.xsd\")  \nschemaSet.Compile()  \nDim nameTable As NameTable = New NameTable()  \nDim manager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \n  \nDim validator As XmlSchemaValidator = New XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None)  \nvalidator.Initialize(schemaSet.GlobalElements.Item(New XmlQualifiedName(\"orderNumber\")))  \n  \nvalidator.ValidateElement(\"orderNumber\", \"\", Nothing)  \nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \nvalidator.ValidateEndOfAttributes(Nothing)  \nvalidator.ValidateText(\"123\")  \nvalidator.ValidateEndElement(Nothing)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(null, \"schema.xsd\");  \nschemaSet.Compile();  \nNameTable nameTable = new NameTable();  \nXmlNamespaceManager manager = new XmlNamespaceManager(nameTable);  \n  \nXmlSchemaValidator validator = new XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  \nvalidator.Initialize(schemaSet.GlobalElements[new XmlQualifiedName(\"orderNumber\")]);  \n  \nvalidator.ValidateElement(\"orderNumber\", \"\", null);  \nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \nvalidator.ValidateEndOfAttributes(null);  \nvalidator.ValidateText(\"123\");  \nvalidator.ValidateEndElement(null);  \n```  \n  \n The example takes the following XML schema as input.  \n  \n `<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">`  \n  \n `<xs:element name=\"orderNumber\" type=\"xs:int\" />`  \n  \n `</xs:schema>`"
  syntax:
    content: public void Initialize (System.Xml.Schema.XmlSchemaObject partialValidationType);
    parameters:
    - id: partialValidationType
      type: System.Xml.Schema.XmlSchemaObject
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref>, <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref>, ou <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref> objeto usado para inicializar o contexto de validação do <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto de validação parcial."
  overload: System.Xml.Schema.XmlSchemaValidator.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamando o <> </> *> método é válido imediatamente após a construção de uma <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto ou após uma chamada para <> </> *> somente."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;></xref> parameter is not an <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;></xref>, <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;></xref>, or <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref> object."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;> </xref> parâmetro não pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  id: LineInfoProvider
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
  fullName: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define as informações de número de linha para o nó XML que está sendo validado."
  remarks: "-   As informações de linha são relatadas por qualquer <xref:System.Xml.Schema.XmlSchemaValidationException>lançada durante o processo de validação.</xref:System.Xml.Schema.XmlSchemaValidationException>      -O padrão <xref:System.Xml.IXmlLineInfo>objeto retornado pelo LineInfoProvider propriedade retorna 0 para o <xref:System.Xml.IXmlLineInfo.LineNumber%2A>e <xref:System.Xml.IXmlLineInfo.LinePosition%2A>Propriedades.</xref:System.Xml.IXmlLineInfo.LinePosition%2A> </xref:System.Xml.IXmlLineInfo.LineNumber%2A> </xref:System.Xml.IXmlLineInfo>"
  syntax:
    content: public System.Xml.IXmlLineInfo LineInfoProvider { get; set; }
    return:
      type: System.Xml.IXmlLineInfo
      description: "Um <xref:System.Xml.IXmlLineInfo>objeto.</xref:System.Xml.IXmlLineInfo>"
  overload: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  id: SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: SkipToEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Ignora a validação do conteúdo do elemento atual e prepara a <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto para validar o conteúdo no contexto do elemento pai."
  remarks: "A seguir estão as observações importantes a considerar ao usar o método SkipToEndElement.      -O método SkipToEndElement ignora a validação do conteúdo do elemento atual e prepara a <xref:System.Xml.Schema.XmlSchemaValidator>para validar o conteúdo no contexto do elemento pai do objeto; é equivalente a ignorar a validação para todos os filhos do elemento atual e, em seguida, chamar o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>método.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> </xref:System.Xml.Schema.XmlSchemaValidator>      -Se o conteúdo do elemento atual for ignorado com êxito, o <xref:System.Xml.Schema.XmlSchemaInfo>do objeto (se especificado) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>está definida como <xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo>      > [!NOTE] > São relatados erros de validação no conteúdo foram ignorado."
  syntax:
    content: public void SkipToEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades são definidas se o conteúdo do elemento atual for ignorado com êxito. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método SkipToEndElement não foi chamado na sequência correta. Por exemplo, chamar SkipToEndElement após chamar SkipToEndElement."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri
  id: SourceUri
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
  fullName: System.Xml.Schema.XmlSchemaValidator.SourceUri
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define o URI de origem para o nó XML que está sendo validado."
  remarks: "-   A fonte de URI é relatado por qualquer <xref:System.Xml.Schema.XmlSchemaValidationException>lançada durante o processo de validação.</xref:System.Xml.Schema.XmlSchemaValidationException>      -Se a propriedade SourceUri não está definida, o nome de arquivo para o documento XML é <xref:System.String.Empty>em mensagens de erro de validação.</xref:System.String.Empty>"
  syntax:
    content: public Uri SourceUri { get; set; }
    return:
      type: System.Uri
      description: "Um <xref:System.Uri>objeto que representa a URI de origem para o nó XML que está sendo validada; o padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Uri>"
  overload: System.Xml.Schema.XmlSchemaValidator.SourceUri*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateAttribute(String,String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida o nome do atributo, o URI de namespace e o valor no contexto do elemento atual."
  remarks: "A seguir estão as observações importantes a considerar ao usar o método ValidateAttribute.      -O <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>método deve ser chamado depois de validar todos os atributos do elemento atual com o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>método.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> </xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>      -Se um <xref:System.Xml.Schema.XmlSchemaAttribute>objeto passado para o <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>método, o método ValidateAttribute valida o atributo em relação a <xref:System.Xml.Schema.XmlSchemaAttribute>objeto.</xref:System.Xml.Schema.XmlSchemaAttribute> </xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> </xref:System.Xml.Schema.XmlSchemaAttribute>      -Se o atributo for validado com êxito no contexto atual do elemento, o <xref:System.Xml.Schema.XmlSchemaInfo>do objeto (se especificado) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, e <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedades são definidas com os resultados da validação.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/a1f6d4e1-a580-41fa-b406-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/a1f6d4e1-a580-41fa-b406-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/a1f6d4e1-a580-41fa-b406-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/a1f6d4e1-a580-41fa-b406-_3.xsd)]"
  syntax:
    content: public object ValidateAttribute (string localName, string namespaceUri, string attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local do atributo para validar."
    - id: namespaceUri
      type: System.String
      description: "O namespace URI do atributo para validar."
    - id: attributeValue
      type: System.String
      description: "O valor do atributo para validar."
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades são definidas na validação bem-sucedida do atributo. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Valor do atributo validado."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O atributo não é válido no contexto do elemento atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, chamar <> </> *> depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos parâmetros especificados são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida o nome do atributo, o URI de namespace e o valor no contexto do elemento atual."
  remarks: "A seguir estão as observações importantes a considerar ao usar o método ValidateAttribute.      -O <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>método deve ser chamado depois de validar todos os atributos do elemento atual com o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>método.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> </xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>      -Se um <xref:System.Xml.Schema.XmlSchemaAttribute>objeto passado para o <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>método, o método ValidateAttribute valida o atributo em relação a <xref:System.Xml.Schema.XmlSchemaAttribute>objeto.</xref:System.Xml.Schema.XmlSchemaAttribute> </xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> </xref:System.Xml.Schema.XmlSchemaAttribute>      -Se o atributo for validado com êxito no contexto atual do elemento, o <xref:System.Xml.Schema.XmlSchemaInfo>do objeto (se especificado) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, e <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedades são definidas com os resultados da validação.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/bdf9cba1-e5e2-4a4d-8a5a-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/bdf9cba1-e5e2-4a4d-8a5a-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/bdf9cba1-e5e2-4a4d-8a5a-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/bdf9cba1-e5e2-4a4d-8a5a-_3.xsd)]"
  syntax:
    content: public object ValidateAttribute (string localName, string namespaceUri, System.Xml.Schema.XmlValueGetter attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local do atributo para validar."
    - id: namespaceUri
      type: System.String
      description: "O namespace URI do atributo para validar."
    - id: attributeValue
      type: System.Xml.Schema.XmlValueGetter
      description: "Um <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref> usado para passar o valor do atributo como um tipo de tempo de execução de linguagem comum (CLR) compatível com o tipo de linguagem de definição de esquema XML (XSD) do atributo."
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades são definidas na validação bem-sucedida do atributo. Esse parâmetro e pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Valor do atributo validado."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O atributo não é válido no contexto do elemento atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, chamar <> </> *> depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos parâmetros especificados são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateElement(String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida o elemento no contexto atual."
  remarks: "A seguir estão as observações importantes a considerar ao usar o método ValidateElement.      -Se o nome do elemento é validado com êxito no contexto atual, o <xref:System.Xml.Schema.XmlSchemaInfo>do objeto (se especificado) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, e <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedades são definidas com os resultados da validação.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A> </xref:System.Xml.Schema.XmlSchemaInfo>      -Se o nome do elemento ou qualquer um de seus atributos são inválidos o contexto atual, o <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>está definida como <xref:System.Xml.Schema.XmlSchemaValidity>; caso contrário, a <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedade é definida como <xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/0c1583e7-54af-4d75-b62c-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/0c1583e7-54af-4d75-b62c-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/0c1583e7-54af-4d75-b62c-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/0c1583e7-54af-4d75-b62c-_3.xsd)]"
  syntax:
    content: public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local do elemento a ser validado."
    - id: namespaceUri
      type: System.String
      description: "O URI do namespace do elemento a validar."
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades são definidas na validação bem-sucedida do nome do elemento. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O nome do elemento não é válido no contexto atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, o <> </> *> método é chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  id: ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida o elemento no contexto atual com o `xsi:Type`, `xsi:Nil`, `xsi:SchemaLocation`, e `xsi:NoNamespaceSchemaLocation` especificados de valores de atributo."
  remarks: "A seguir estão as observações importantes a considerar ao usar o método ValidateElement.      -Se o nome do elemento é validado com êxito no contexto atual, o <xref:System.Xml.Schema.XmlSchemaInfo>do objeto (se especificado) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, e <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedades são definidas com os resultados da validação.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A> </xref:System.Xml.Schema.XmlSchemaInfo>      -Se o nome do elemento ou qualquer um de seus atributos não são válidos no contexto atual, o <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>está definida como <xref:System.Xml.Schema.XmlSchemaValidity>; caso contrário, a <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedade é definida como <xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>      -Se a <xref:System.Xml.Schema.XmlSchemaValidationFlags>valor não foi passado como um parâmetro para o <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A>construtor, `xsi:SchemaLocation` e `xsi:NoNamespaceSchemaLocation` valores de atributo são ignorados.</xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> </xref:System.Xml.Schema.XmlSchemaValidationFlags>"
  syntax:
    content: public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local do elemento a ser validado."
    - id: namespaceUri
      type: System.String
      description: "O URI do namespace do elemento a validar."
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades são definidas na validação bem-sucedida do nome do elemento. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: xsiType
      type: System.String
      description: "O `xsi:Type` valor do elemento de atributo. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: xsiNil
      type: System.String
      description: "O `xsi:Nil` valor do elemento de atributo. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: xsiSchemaLocation
      type: System.String
      description: "O `xsi:SchemaLocation` valor do elemento de atributo. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: xsiNoNamespaceSchemaLocation
      type: System.String
      description: "O `xsi:NoNamespaceSchemaLocation` valor do elemento de atributo. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O nome do elemento não é válido no contexto atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, o <> </> *> método é chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  id: ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Verifica se o conteúdo de texto do elemento é válido de acordo com seu tipo de dados para os elementos com conteúdo simples e verifica se o conteúdo do elemento atual foi concluído para elementos com conteúdo complexo."
  remarks: "A seguir estão as observações importantes a considerar ao usar o método ValidateEndElement.      -Para elementos com conteúdo simples, o ValidateEndElement método verifica se o conteúdo de texto do elemento é válido de acordo com seu tipo de dados e retorna o analisado valor digitado. O conteúdo de texto do elemento é obtido dos resultados de chamadas anteriores para <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>      -Para elementos com conteúdo complexo, o método ValidateEndElement verifica se o conteúdo do elemento atual for concluído.      -Se o elemento tem um valor padrão, o valor retornado do método ValidateEndElement é o valor padrão para o elemento.      -Se a <xref:System.Xml.Schema.XmlSchemaValidator>objeto foi construído com o <xref:System.Xml.Schema.XmlSchemaValidationFlags>valor como um parâmetro, as verificações de método ValidateEndElement a restrição de identidade regras (se houver) que se aplicam ao elemento.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidator>      -Se o elemento for validado com êxito no contexto atual, o <xref:System.Xml.Schema.XmlSchemaInfo>do objeto (se especificado) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, e <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedades são definidas com os resultados da validação.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  syntax:
    content: public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades são definidas na validação bem-sucedida do elemento. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Analisado, texto valor digitado do elemento se o elemento tem conteúdo simples."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O conteúdo do elemento não é válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, se o <> </> *> método é chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>.</xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  id: ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndElement(XmlSchemaInfo,Object)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Verifica se o conteúdo de texto do elemento especificado é válido de acordo com seu tipo de dados."
  remarks: "> [!IMPORTANT]> Se você está validando em relação a `xs:key`, `xs:keyref`, ou `xs:unique` restrições de identidade, não use a sobrecarga do método ValidateEndElement. Em vez disso, chame o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>método e passe o valor do elemento.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> Em seguida, chame o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>sobrecarga de método, que usa <xref:System.Xml.Schema.XmlSchemaInfo>como um argumento, para verificar se o conteúdo de texto do elemento é válido de acordo com seu tipo de dados.</xref:System.Xml.Schema.XmlSchemaInfo> </xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>       A seguir estão as observações importantes a considerar ao usar o método ValidateEndElement.      -Para elementos com conteúdo simples, o ValidateEndElement método verifica se o conteúdo de texto do elemento é válido de acordo com seu tipo de dados e retorna o analisado valor digitado. O conteúdo de texto do elemento é obtido do conteúdo digitado passado como um parâmetro.      -Se chamadas para o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>método foram feitas anteriormente, um <xref:System.InvalidOperationException>é gerada.</xref:System.InvalidOperationException> </xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>      -Se o elemento tem conteúdo complexo um <xref:System.InvalidOperationException>é gerada.</xref:System.InvalidOperationException>      -Se a <xref:System.Xml.Schema.XmlSchemaValidator>objeto foi construído com o <xref:System.Xml.Schema.XmlSchemaValidationFlags>valor como um parâmetro, as verificações de método ValidateEndElement a restrição de identidade regras (se houver) que se aplicam ao elemento.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidator>      -Se o elemento for validado com êxito no contexto atual, o <xref:System.Xml.Schema.XmlSchemaInfo>do objeto (se especificado) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, e <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedades são definidas com os resultados da validação.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/2cd331b9-caa2-4647-acb8-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/2cd331b9-caa2-4647-acb8-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/2cd331b9-caa2-4647-acb8-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/2cd331b9-caa2-4647-acb8-_3.xsd)]"
  syntax:
    content: public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades são definidas na validação bem-sucedida do conteúdo de texto do elemento. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: typedValue
      type: System.Object
      description: "O conteúdo de texto digitado do elemento."
    return:
      type: System.Object
      description: "Analisado, digitado simple conteúdo do elemento."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "Conteúdo de texto do elemento não é válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta (por exemplo, se o <> </> *> método é chamado depois de chamar <> </> *>), chamadas para o <> </> *> método foram feitas anteriormente, ou o elemento tem conteúdo complexo."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O parâmetro de conteúdo de texto digitado não pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  id: ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndOfAttributes(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Verifica se todos os atributos necessários no contexto do elemento estão presentes e prepara a <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto para validar o conteúdo filho do elemento."
  remarks: "A seguir estão as observações importantes a considerar ao usar o método ValidateEndOfAttributes.      -O <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>método sempre deve ser chamado antes de ValidateEndOfAttributes.</xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>      -O método ValidateEndOfAttributes deve ser chamado antes de prosseguir com a validação de conteúdo de um elemento.      -Se todos os atributos necessários no contexto do elemento estiverem presentes, o <xref:System.Xml.Schema.XmlSchemaInfo>do objeto (se especificado) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>está definida como <xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/2739ac73-0581-4d83-ad9c-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/2739ac73-0581-4d83-ad9c-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/2739ac73-0581-4d83-ad9c-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/2739ac73-0581-4d83-ad9c-_3.xsd)]"
  syntax:
    content: public void ValidateEndOfAttributes (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades são definidas na verificação bem-sucedida se todos os atributos necessários no contexto do elemento estão presentes. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "Não foram encontrados um ou mais dos atributos necessários no contexto do elemento atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método ValidateEndOfAttributes não foi chamado na sequência correta. Por exemplo, chamar ValidateEndOfAttributes após chamar <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>.</xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos parâmetros especificados são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  id: ValidateText(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateText(String)
  nameWithType: XmlSchemaValidator.ValidateText(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida se o texto <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> especificado é permitida no contexto do elemento atual e acumula o texto de validação se o elemento atual tiver conteúdo simples."
  remarks: "A seguir estão as observações importantes a considerar ao usar o método ValidateText.      -Se o elemento tem conteúdo simples, o texto `string` especificado é concatenado em cada chamada ao método ValidateText até o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>método é chamado.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> Quando o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>método é chamado, todo o texto é validado.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>      -Se o elemento tem conteúdo complexo, ocorre sem concatenação de texto."
  syntax:
    content: public void ValidateText (string elementValue);
    parameters:
    - id: elementValue
      type: System.String
      description: "Um texto <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> para validar no contexto do elemento atual."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O texto <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> especificado não é permitida no contexto do elemento atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, o <> </> *> método é chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O texto <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> parâmetro não pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  id: ValidateText(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateText(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateText(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(XmlValueGetter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida se o texto retornado pelo <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> o objeto especificado é permitido no contexto do elemento atual e acumula o texto de validação se o elemento atual tiver conteúdo simples."
  remarks: "A seguir estão as observações importantes a considerar ao usar o método ValidateText.      -Se o elemento tem conteúdo simples, o texto `string` especificado é concatenado em cada chamada ao método ValidateText até o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>método é chamado.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> Quando o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>método é chamado, todo o texto é validado.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>      -Se o elemento tem conteúdo complexo, ocorre sem concatenação de texto."
  syntax:
    content: public void ValidateText (System.Xml.Schema.XmlValueGetter elementValue);
    parameters:
    - id: elementValue
      type: System.Xml.Schema.XmlValueGetter
      description: "Um <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref> usado para passar o valor de texto como um tipo de tempo de execução de linguagem comum (CLR) compatível com o tipo de linguagem de definição de esquema XML (XSD) do atributo."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O texto <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> especificado não é permitida no contexto do elemento atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, o <> </> *> método é chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O texto <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> parâmetro não pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  id: ValidateWhitespace(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateWhitespace(String)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida se o branco espaço no <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> especificado é permitida no contexto do elemento atual e aumenta o espaço em branco para validação se o elemento atual tiver conteúdo simples."
  syntax:
    content: public void ValidateWhitespace (string elementValue);
    parameters:
    - id: elementValue
      type: System.String
      description: "Um espaço em branco <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> para validar no contexto do elemento atual."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "Espaço em branco não é permitido no contexto do elemento atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, se o <> </> *> método é chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  id: ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateWhitespace(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida se o espaço em branco retornado pelo <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> o objeto especificado é permitido no contexto do elemento atual e aumenta o espaço em branco para validação se o elemento atual tiver conteúdo simples."
  syntax:
    content: public void ValidateWhitespace (System.Xml.Schema.XmlValueGetter elementValue);
    parameters:
    - id: elementValue
      type: System.Xml.Schema.XmlValueGetter
      description: "Um <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref> usado para passar o valor de espaço em branco como um tipo de tempo de execução de linguagem comum (CLR) compatível com o tipo de linguagem de definição de esquema XML (XSD) do atributo."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "Espaço em branco não é permitido no contexto do elemento atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, se o <> </> *> método é chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  id: ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidationEventHandler
  nameWithType: XmlSchemaValidator.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "O <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> que recebe avisos de validação de esquema e os erros encontrados durante a validação de esquema."
  remarks: "Se nenhum <xref:System.Xml.Schema.ValidationEventHandler>for especificado, um que <xref:System.Xml.Schema.XmlSchemaValidationException>é gerada para todos os erros de validação de esquema com um <xref:System.Xml.Schema.XmlSeverityType>valor de <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSchemaValidationException> </xref:System.Xml.Schema.ValidationEventHandler> Um que <xref:System.Xml.Schema.XmlSchemaValidationException>não é gerada para avisos de validação com um <xref:System.Xml.Schema.XmlSeverityType>valor de <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSchemaValidationException>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/e-system.xml.schema.xmls_0_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/e-system.xml.schema.xmls_0_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/e-system.xml.schema.xmls_0_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/e-system.xml.schema.xmls_0_3.xsd)]"
  syntax:
    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;
    return:
      type: System.Xml.Schema.ValidationEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  id: ValidationEventSender
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define o objeto enviado como o objeto do remetente de um evento de validação."
  remarks: ''
  example:
  - For an example of a validation event, see the <xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler> event.
  syntax:
    content: public object ValidationEventSender { get; set; }
    return:
      type: System.Object
      description: "Um <xref:System.Object>; Este é o padrão <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto.</xref:System.Object>"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  id: XmlResolver
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Conjuntos de <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objeto usado para resolver `xs:import` e `xs:include` elementos, bem como `xsi:schemaLocation` e `xsi:noNamespaceSchemaLocation` atributos."
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Xml.Schema.XmlSchemaValidationFlags> and <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default. Additionally, the XmlResolver property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default. As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Um <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objeto; o padrão é um <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> objeto."
  overload: System.Xml.Schema.XmlSchemaValidator.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Schema.XmlSchemaException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaException
  nameWithType: XmlSchemaException
  fullName: System.Xml.Schema.XmlSchemaException
- uid: System.Xml.Schema.XmlSchemaValidationException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationException
  nameWithType: XmlSchemaValidationException
  fullName: System.Xml.Schema.XmlSchemaValidationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  nameWithType: XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.Schema.XmlSchemaValidationFlags
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationFlags
  nameWithType: XmlSchemaValidationFlags
  fullName: System.Xml.Schema.XmlSchemaValidationFlags
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: AddSchema(XmlSchema)
  nameWithType: XmlSchemaValidator.AddSchema(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaValidator.AddSchema(XmlSchema)
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: EndValidation()
  nameWithType: XmlSchemaValidator.EndValidation()
  fullName: System.Xml.Schema.XmlSchemaValidator.EndValidation()
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedAttributes()
  nameWithType: XmlSchemaValidator.GetExpectedAttributes()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes()
- uid: System.Xml.Schema.XmlSchemaAttribute[]
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaAttribute
  nameWithType: XmlSchemaAttribute
  fullName: System.Xml.Schema.XmlSchemaAttribute[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchemaAttribute
    name: XmlSchemaAttribute
    nameWithType: XmlSchemaAttribute
    fullName: XmlSchemaAttribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedParticles()
  nameWithType: XmlSchemaValidator.GetExpectedParticles()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles()
- uid: System.Xml.Schema.XmlSchemaParticle[]
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaParticle
  nameWithType: XmlSchemaParticle
  fullName: System.Xml.Schema.XmlSchemaParticle[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchemaParticle
    name: XmlSchemaParticle
    nameWithType: XmlSchemaParticle
    fullName: XmlSchemaParticle[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetUnspecifiedDefaultAttributes(ArrayList)
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  fullName: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize()
  nameWithType: XmlSchemaValidator.Initialize()
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize()
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize(XmlSchemaObject)
  nameWithType: XmlSchemaValidator.Initialize(XmlSchemaObject)
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize(XmlSchemaObject)
- uid: System.Xml.Schema.XmlSchemaObject
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObject
  nameWithType: XmlSchemaObject
  fullName: System.Xml.Schema.XmlSchemaObject
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
  fullName: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
- uid: System.Xml.IXmlLineInfo
  parent: System.Xml
  isExternal: true
  name: IXmlLineInfo
  nameWithType: IXmlLineInfo
  fullName: System.Xml.IXmlLineInfo
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SkipToEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInfo
  nameWithType: XmlSchemaInfo
  fullName: System.Xml.Schema.XmlSchemaInfo
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
  fullName: System.Xml.Schema.XmlSchemaValidator.SourceUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute(String,String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
- uid: System.Xml.Schema.XmlValueGetter
  parent: System.Xml.Schema
  isExternal: false
  name: XmlValueGetter
  nameWithType: XmlValueGetter
  fullName: System.Xml.Schema.XmlValueGetter
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement(String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement(XmlSchemaInfo,Object)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndOfAttributes(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText(String)
  nameWithType: XmlSchemaValidator.ValidateText(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateText(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(XmlValueGetter)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace(String)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventHandler
  nameWithType: XmlSchemaValidator.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
- uid: System.Xml.Schema.ValidationEventHandler
  parent: System.Xml.Schema
  isExternal: false
  name: ValidationEventHandler
  nameWithType: ValidationEventHandler
  fullName: System.Xml.Schema.ValidationEventHandler
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlResolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlSchemaValidator
  nameWithType: XmlSchemaValidator.XmlSchemaValidator
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: AddSchema
  nameWithType: XmlSchemaValidator.AddSchema
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: EndValidation
  nameWithType: XmlSchemaValidator.EndValidation
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedAttributes
  nameWithType: XmlSchemaValidator.GetExpectedAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedParticles
  nameWithType: XmlSchemaValidator.GetExpectedParticles
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetUnspecifiedDefaultAttributes
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize
  nameWithType: XmlSchemaValidator.Initialize
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SkipToEndElement
  nameWithType: XmlSchemaValidator.SkipToEndElement
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute
  nameWithType: XmlSchemaValidator.ValidateAttribute
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement
  nameWithType: XmlSchemaValidator.ValidateElement
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement
  nameWithType: XmlSchemaValidator.ValidateEndElement
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndOfAttributes
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText
  nameWithType: XmlSchemaValidator.ValidateText
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace
  nameWithType: XmlSchemaValidator.ValidateWhitespace
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
