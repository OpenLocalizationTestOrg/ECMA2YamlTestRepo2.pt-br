### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileBase
  id: ProfileBase
  children:
  - System.Web.Profile.ProfileBase.#ctor
  - System.Web.Profile.ProfileBase.Create(System.String)
  - System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)
  - System.Web.Profile.ProfileBase.GetProfileGroup(System.String)
  - System.Web.Profile.ProfileBase.GetPropertyValue(System.String)
  - System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)
  - System.Web.Profile.ProfileBase.IsAnonymous
  - System.Web.Profile.ProfileBase.IsDirty
  - System.Web.Profile.ProfileBase.Item(System.String)
  - System.Web.Profile.ProfileBase.LastActivityDate
  - System.Web.Profile.ProfileBase.LastUpdatedDate
  - System.Web.Profile.ProfileBase.Properties
  - System.Web.Profile.ProfileBase.Save
  - System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)
  - System.Web.Profile.ProfileBase.UserName
  langs:
  - csharp
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
  type: Class
  summary: "Fornece acesso não tipado para informações e valores de propriedade de perfil."
  remarks: "O ASP.NET usa a classe ProfileBase para criar a classe usada para o perfil de usuário. Quando um aplicativo que tenha habilitado o perfil do usuário é iniciado, o ASP.NET cria uma nova classe de tipo `ProfileCommon`, que herda da classe ProfileBase. Acessadores fortemente tipados são adicionados para o `ProfileCommon` classe para cada propriedade definida na seção de configuração. Os acessadores fortemente tipados do `ProfileCommon` classe chamada a <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>e <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>classe para recuperar e definir valores de propriedade, o perfil respectivamente de base de métodos para o ProfileBase.</xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> </xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> Uma instância do `ProfileCommon` classe é definida como o valor da <xref:System.Web.HttpContext.Profile%2A>propriedade para o aplicativo ASP.NET.</xref:System.Web.HttpContext.Profile%2A>       Para criar uma instância de um perfil de usuário em um aplicativo ASP.NET, é recomendável que você use o <xref:System.Web.Profile.ProfileBase.Create%2A>método.</xref:System.Web.Profile.ProfileBase.Create%2A>"
  example:
  - "The following code example shows a Web.config file that specifies a user profile that contains a `ZipCode` property of type `string` and a `RecentSearchList` property of type <xref:System.Collections.Specialized.StringCollection>. The generated <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will have strongly typed accessors for each of the specified properties.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <anonymousIdentification enabled=\"true\" />  \n  \n    <profile enabled=\"true\" defaultProvider=\"SqlProvider\" >  \n      <properties>  \n        <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n        <add name=\"RecentSearchList\"  \n          type=\"System.Collections.Specialized.StringCollection\"  \n          serializeAs=\"Xml\"  \n          allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile. Before attempting to run this code, set the provider to the default `AspNetSqlProvider` in the ASP.NET configuration settings for the Web site.  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_9_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/t-system.web.profile.pro_9_1.aspx)]  \n  \n The following code example defines a class that inherits from the ProfileBase class to create a custom profile. The type of the custom profile is specified in the `inherits` attribute of the  configuration element in the Web.config file for an application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileBase#1](~/add/codesnippet/csharp/t-system.web.profile.pro_9_2.cs)]\n [!code-vb[System.Web.Profile.ProfileBase#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_9_2.vb)]"
  syntax:
    content: 'public class ProfileBase : System.Configuration.SettingsBase'
  inheritance:
  - System.Object
  - System.Configuration.SettingsBase
  implements: []
  inheritedMembers:
  - System.Configuration.SettingsBase.Context
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.PropertyValues
  - System.Configuration.SettingsBase.Providers
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.#ctor
  id: '#ctor'
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: ProfileBase()
  nameWithType: ProfileBase.ProfileBase()
  fullName: System.Web.Profile.ProfileBase.ProfileBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Cria uma instância de <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> classe."
  remarks: "O ASP.NET usa a <xref:System.Web.Profile.ProfileBase>classe para criar a classe usada para o perfil de usuário.</xref:System.Web.Profile.ProfileBase> Quando um aplicativo que tenha habilitado o perfil do usuário é iniciado, o ASP.NET cria uma nova classe de tipo `ProfileCommon`, que herda da <xref:System.Web.Profile.ProfileBase>classe</xref:System.Web.Profile.ProfileBase> de Acessadores fortemente tipados são adicionados para o `ProfileCommon` classe para cada propriedade definida na seção de configuração. Os acessadores fortemente tipados do `ProfileCommon` classe chamada a <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>e <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>métodos do <xref:System.Web.Profile.ProfileBase>classe para recuperar e definir valores de propriedade, o perfil respectivamente base.</xref:System.Web.Profile.ProfileBase> </xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> </xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> Uma instância do `ProfileCommon` classe é definida como o valor da <xref:System.Web.HttpContext.Profile%2A>propriedade para o aplicativo ASP.NET.</xref:System.Web.HttpContext.Profile%2A>      > [!NOTE] > A classe base usada para gerar a classe armazenada no <xref:System.Web.HttpContext.Profile%2A>propriedade pode ser substituída usando o `inherits` atributo da seção do arquivo de configuração.</xref:System.Web.HttpContext.Profile%2A> Nesse caso, você deve especificar uma classe personalizada que herda a <xref:System.Web.Profile.ProfileBase>classe base.</xref:System.Web.Profile.ProfileBase>       Este construtor não se destina a ser usado no código do aplicativo. Para criar uma instância de um perfil de usuário, use o <xref:System.Web.Profile.ProfileBase.Create%2A>método.</xref:System.Web.Profile.ProfileBase.Create%2A>"
  example:
  - "The following Web.config file specifies a user profile that contains a `ZipCode` property of type `string` and a `RecentSearchList` property of type <xref:System.Collections.Specialized.StringCollection>. The generated <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will have strongly typed accessors for each of the specified properties.  \n  \n```  \n<configuration>  \n   <connectionStrings>  \n       <add name=\"SqlServices\" connectionString=\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n   </connectionStrings>  \n  \n  <system.web>  \n   <anonymousIdentification enabled=\"true\" />  \n  \n   <profile defaultProvider=\"SqlProvider\" >  \n     <providers>  \n       <add  \n         name=\"SqlProvider\"  \n         connectionStringName=\"SqlServices\"  \n         applicationName=\"ProfileBaseApplication\"  \n         type=\"System.Web.Profile.SqlProfileProvider\" />  \n     </providers>  \n  \n     <properties>  \n       <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n       <add name=\"RecentSearchList\"  \n            type=\"System.Collections.Specialized.StringCollection\"  \n            serializeAs=\"Xml\"  \n            allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n   </system.web>  \n</configuration>  \n```  \n  \n The following ASP.NET page reads and sets the `ZipCode` property specified for the user profile.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_1_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_1_1.aspx)]"
  syntax:
    content: public ProfileBase ();
    parameters: []
  overload: System.Web.Profile.ProfileBase.#ctor*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "O <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> atributo da seção do arquivo Web. config é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Não foi possível criar um tipo de propriedade especificado na seção do arquivo Web. config.       - ou - <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> de atributo para uma propriedade na seção do arquivo Web. config é definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> atributo do elemento é definido como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - ou - <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref> de atributo para uma propriedade na seção do arquivo Web. config é definida como <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> e <> </> *> propriedade especificada <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - ou - o nome de um provedor especificado usando o <xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;> </xref> não foi possível encontrar o atributo de uma propriedade de perfil no <> </> *> coleção.       - ou - <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> especificado para uma propriedade de perfil não foi encontrada.       - ou - uma propriedade de perfil foi especificada com um nome que corresponde a um nome de propriedade na classe base especificada no <xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;> </xref> atributo da seção."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Create(System.String)
  id: Create(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Create(String)
  nameWithType: ProfileBase.Create(String)
  fullName: System.Web.Profile.ProfileBase.Create(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Usado por ASP.NET para criar uma instância de um perfil para o nome de usuário especificado."
  remarks: "O método Create cria e inicializa uma nova instância de perfil e é útil para aplicativos que usam um objeto de perfil personalizado ou gerenciar os perfis de usuário em um ambiente de não-ASP.NET.       Esta sobrecarga do método Create pressupõe que o nome de usuário especificado é um usuário autenticado."
  example:
  - "The following code example creates an instance of a custom profile object, sets a property, and saves the profile to the data source.  \n  \n [!code-vb[System.Web.Profile.ProfileBase.Create#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_2_1.vb)]\n [!code-cs[System.Web.Profile.ProfileBase.Create#1](~/add/codesnippet/csharp/m-system.web.profile.pro_2_1.cs)]"
  syntax:
    content: public static System.Web.Profile.ProfileBase Create (string username);
    parameters:
    - id: username
      type: System.String
      description: "O nome do usuário para criar um perfil."
    return:
      type: System.Web.Profile.ProfileBase
      description: "Um <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> que representa o perfil para o usuário especificado."
  overload: System.Web.Profile.ProfileBase.Create*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "O <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> atributo da seção do arquivo Web. config é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O nível de permissão de hospedagem atual é menor que <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref>."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Não foi possível criar um tipo de propriedade especificado na seção do arquivo Web. config.       - ou - <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> de atributo para uma propriedade na seção do arquivo Web. config é definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> atributo do elemento é definido como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - ou - <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref> de atributo para uma propriedade na seção do arquivo Web. config é definida como <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> e <> </> *> propriedade especificada <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - ou - o nome de um provedor especificado usando o <xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;> </xref> não foi possível encontrar o atributo de uma propriedade de perfil no <> </> *> coleção.       - ou - <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> especificado para uma propriedade de perfil não foi encontrada.       - ou - uma propriedade de perfil foi especificada com um nome que corresponde a um nome de propriedade na classe base especificada no <xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;> </xref> atributo da seção."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)
  id: Create(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Create(String,Boolean)
  nameWithType: ProfileBase.Create(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Create(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Usado por ASP.NET para criar uma instância de um perfil para o nome de usuário especificado. Aceita um parâmetro que indica se o usuário é autenticado ou anônimo."
  remarks: "O método Create cria e inicializa uma nova instância de perfil e é útil para aplicativos que usam um objeto de perfil personalizado ou gerenciar os perfis de usuário em um ambiente de não-ASP.NET.       Esta sobrecarga do método de criação pode ser usada para criar um perfil para um usuário autenticado ou anônimo."
  example:
  - "The following code example creates an instance of a custom profile object, sets a property, and saves the profile to the data source.  \n  \n [!code-vb[System.Web.Profile.ProfileBase.Create#2](~/add/codesnippet/visualbasic/m-system.web.profile.pro_9_1.vb)]\n [!code-cs[System.Web.Profile.ProfileBase.Create#2](~/add/codesnippet/csharp/m-system.web.profile.pro_9_1.cs)]"
  syntax:
    content: public static System.Web.Profile.ProfileBase Create (string username, bool isAuthenticated);
    parameters:
    - id: username
      type: System.String
      description: "O nome do usuário para criar um perfil."
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar que o usuário é autenticado; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para indicar que o usuário é anônimo."
    return:
      type: System.Web.Profile.ProfileBase
      description: "Um <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> objeto que representa o perfil para o usuário especificado."
  overload: System.Web.Profile.ProfileBase.Create*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "O <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> atributo da seção do arquivo Web. config é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O nível de permissão de hospedagem atual é menor que <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref>."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Não foi possível criar um tipo de propriedade especificado na seção do arquivo Web. config.       - ou - <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> de atributo para uma propriedade na seção do arquivo Web. config é definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> atributo do elemento é definido como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - ou - <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref> de atributo para uma propriedade na seção do arquivo Web. config é definida como <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> e <> </> *> propriedade especificada <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - ou - o nome de um provedor especificado usando o <xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;> </xref> não foi possível encontrar o atributo de uma propriedade de perfil no <> </> *> coleção.       - ou - <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> especificado para uma propriedade de perfil não foi encontrada.       - ou - uma propriedade de perfil foi especificada com um nome que corresponde a um nome de propriedade na classe base especificada no <xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;> </xref> atributo da seção."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.GetProfileGroup(System.String)
  id: GetProfileGroup(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: GetProfileGroup(String)
  nameWithType: ProfileBase.GetProfileGroup(String)
  fullName: System.Web.Profile.ProfileBase.GetProfileGroup(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém um grupo de propriedades identificadas por um nome de grupo."
  remarks: "Propriedades de perfil podem ser separadas em grupos para melhor organização. A propriedade GetProfileGroup pode ser usada para recuperar um grupo de propriedades pelo nome do grupo. Você também pode acessar uma propriedade de perfil em um grupo, especificando o nome do grupo como membro do `Profile` disponível em cada página de propriedade. Por exemplo, o `ZipCode` que é um membro da propriedade de perfil a `Address` grupo de perfil pode ser acessado usando `Profile.Address.ZipCode`."
  example:
  - "The following Web.config file specifies a user profile that contains group of properties with a group name of `Address`. The grouped properties generated for the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will be preceded by the group name. For example, `Profile.Address.Street`.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=  \n      \"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\"  \n        name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <authorization>  \n      <deny users=\"?\" />  \n    </authorization>  \n  \n    <membership defaultProvider=\"SqlProvider\"   \n      userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <clear />  \n        <add   \n          name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"   \n          requiresUniqueEmail=\"false\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"MyApplication\" />  \n      </providers>  \n    </membership>  \n  \n    <profile defaultProvider=\"SqlProvider\">  \n      <providers>  \n        <add  \n          name=\"SqlProvider\"  \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"MyApplication\"  \n          type=\"System.Web.Profile.SqlProfileProvider\" />  \n  \n      </providers>  \n  \n      <properties>  \n        <add name=\"ZipCode\" />  \n        <group name=\"Address\">  \n          <add name=\"Street\" />  \n          <add name=\"City\" />  \n          <add name=\"State\" />  \n          <add name=\"CountryOrRegion\" />  \n        </group>  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following ASP.NET page reads and sets the grouped properties specified for the user profile.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_5_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_5_1.aspx)]"
  syntax:
    content: public System.Web.Profile.ProfileGroupBase GetProfileGroup (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "O nome do grupo de propriedades."
    return:
      type: System.Web.Profile.ProfileGroupBase
      description: "Um <xref href=&quot;System.Web.Profile.ProfileGroupBase&quot;> </xref> objeto para um grupo de propriedades configurado com o nome do grupo especificado."
  overload: System.Web.Profile.ProfileBase.GetProfileGroup*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "O nome de grupo de propriedade do perfil especificado não foi encontrado na seção de configuração."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.GetPropertyValue(System.String)
  id: GetPropertyValue(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: GetPropertyValue(String)
  nameWithType: ProfileBase.GetPropertyValue(String)
  fullName: System.Web.Profile.ProfileBase.GetPropertyValue(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém o valor de uma propriedade de perfil."
  remarks: "O ASP.NET usa a <xref:System.Web.Profile.ProfileBase>classe para criar a classe usada para o perfil de usuário.</xref:System.Web.Profile.ProfileBase> Quando um aplicativo que tenha habilitado o perfil do usuário é iniciado, o ASP.NET cria uma nova classe de tipo `ProfileCommon`, que herda da <xref:System.Web.Profile.ProfileBase>classe</xref:System.Web.Profile.ProfileBase> de Acessadores fortemente tipados são adicionados para o `ProfileCommon` classe para cada propriedade definida na seção de configuração. Os acessadores fortemente tipados do `ProfileCommon` classe chamar o método GetPropertyValue para recuperar valores não digitados do <xref:System.Web.Profile.ProfileProvider>que o acessador gerado, em seguida, converte o tipo especificado e retorna como o valor da propriedade.</xref:System.Web.Profile.ProfileProvider>       Você pode usar o método GetPropertyValue para recuperar valores de propriedade do perfil do usuário para seu aplicativo por nome. Valores retornados são não tipados e devem ser convertidos como o tipo de objeto específico quando recuperado. Para acessar fortemente tipada valores de propriedade de perfil, você pode acessar a propriedade por nome como um membro da propriedade do perfil disponível em cada página, por exemplo, `Profile.CustomerAddress`."
  example:
  - "The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_10_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_10_1.aspx)]"
  syntax:
    content: public object GetPropertyValue (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "O nome da propriedade do perfil."
    return:
      type: System.Object
      description: "O valor da propriedade do perfil especificado, digitado como <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileBase.GetPropertyValue*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Foi feita uma tentativa para definir um valor de propriedade em um perfil anônimo onde a propriedade <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> atributo é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Não existem propriedades definidas para o perfil atual.       - ou - o nome de propriedade do perfil especificado não existe no perfil atual.       - ou - o provedor para a propriedade do perfil especificado não reconhece a propriedade especificada."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)
  id: Initialize(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Initialize(String,Boolean)
  nameWithType: ProfileBase.Initialize(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Initialize(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Inicializa a valores de propriedade de perfil e informações para o usuário atual."
  remarks: "Esse método não se destina a ser usado em seu código. Use um do <xref:System.Web.Profile.ProfileBase.Create%2A>sobrecargas para criar uma instância do perfil do usuário.</xref:System.Web.Profile.ProfileBase.Create%2A>"
  syntax:
    content: public void Initialize (string username, bool isAuthenticated);
    parameters:
    - id: username
      type: System.String
      description: "O nome do usuário para inicializar o perfil."
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar que o usuário é autenticado; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para indicar que o usuário é anônimo."
  overload: System.Web.Profile.ProfileBase.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.IsAnonymous
  id: IsAnonymous
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: IsAnonymous
  nameWithType: ProfileBase.IsAnonymous
  fullName: System.Web.Profile.ProfileBase.IsAnonymous
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém um valor que indica se o perfil de usuário para um usuário anônimo."
  remarks: "Acesso anônimo para o perfil de usuário está ativado, usando a seção de configuração e o `allowAnonymous` atributo do elemento de configuração usado para especificar propriedades de perfil."
  syntax:
    content: public bool IsAnonymous { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o perfil de usuário é para um usuário anônimo; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileBase.IsAnonymous*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.IsDirty
  id: IsDirty
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: IsDirty
  nameWithType: ProfileBase.IsDirty
  fullName: System.Web.Profile.ProfileBase.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém um valor que indica se qualquer uma das propriedades de perfil foi modificado."
  remarks: "A propriedade IsDirty pode ser usada por um provedor de perfil durante o <xref:System.Configuration.SettingsBase.Save%2A>método para determinar se propriedades que são compostos de tipos primitivos, cadeias de caracteres, ou <xref:System.DateTime>objetos foram alterados.</xref:System.DateTime> </xref:System.Configuration.SettingsBase.Save%2A> As propriedades alteradas, em seguida, são atualizadas pelo provedor de perfil no <xref:System.Configuration.SettingsBase.Save%2A>método.</xref:System.Configuration.SettingsBase.Save%2A> O <xref:System.Configuration.SettingsBase.Save%2A>método é chamado automaticamente no final da execução da página se o <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>é de propriedade `true` chamado em um provedor de perfil a <xref:System.Configuration.SettingsBase.Save%2A>método explicitamente não pode determinar se uma propriedade de perfil com um tipo de classe personalizada ou um tipo complexo, como uma coleção, foi alterado.</xref:System.Configuration.SettingsBase.Save%2A> </xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> </xref:System.Configuration.SettingsBase.Save%2A> Você pode usar o <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>evento para determinar se um objeto personalizado foi modificado para continuar com o salvamento automático para objetos modificados ou cancelar o salvamento automático, se nenhum objeto foram modificado.</xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> O comportamento padrão da <xref:System.Web.Profile.ProfileBase>classe é definir a propriedade IsDirty como `true` dos propriedades que são de um tipo personalizado ou complexo na primeira vez que a propriedade é acessado.</xref:System.Web.Profile.ProfileBase>"
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se qualquer uma das propriedades do perfil foram modificados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileBase.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: ProfileBase.Item(String)
  fullName: System.Web.Profile.ProfileBase.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém ou define um valor de propriedade de perfil indexado pelo nome da propriedade."
  remarks: "Você pode usar essa propriedade para recuperar ou definir os valores de propriedade do perfil do usuário para seu aplicativo por nome. Valores retornados são digitados como `object` e devem ser convertidos como o tipo de objeto específico quando recuperado. Para acessar fortemente tipada valores de propriedade de perfil, você pode acessar a propriedade por nome como um membro do `Profile` propriedade disponível em cada página, por exemplo, `Profile.CustomerAddress`."
  example:
  - "The following code example lists the names of the properties in the user profile by binding the <xref:System.Configuration.SettingsProperty.Name%2A> property from the static <xref:System.Web.Profile.ProfileBase.Properties%2A> collection of <xref:System.Configuration.SettingsProperty> objects to a <xref:System.Web.UI.WebControls.GridView> control. The selected property value is retrieved by name using the Item collection. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n [!code-cs[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/csharp/p-system.web.profile.pro_3_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_3_1.aspx)]"
  syntax:
    content: public override object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "O nome da propriedade do perfil."
    return:
      type: System.Object
      description: "O valor da propriedade do perfil especificado, digitado como <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileBase.Item*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Foi feita uma tentativa para definir um valor de propriedade em um perfil anônimo onde a propriedade <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> atributo é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Não existem propriedades definidas para o perfil atual.       - ou - o nome de propriedade do perfil especificado não existe no perfil atual.       - ou - o provedor para a propriedade do perfil especificado não reconhece a propriedade especificada."
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "Foi feita uma tentativa para definir um valor de propriedade que foi marcado como somente leitura."
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "Foi feita uma tentativa para atribuir um valor a uma propriedade usando um tipo incompatível."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.LastActivityDate
  id: LastActivityDate
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: LastActivityDate
  nameWithType: ProfileBase.LastActivityDate
  fullName: System.Web.Profile.ProfileBase.LastActivityDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém a data e hora em que o perfil foi lido ou modificado a mais recente."
  remarks: "O valor da propriedade só é modificado pelo provedor de perfil padrão. As alterações feitas às propriedades de perfil por um provedor diferente do provedor de perfil padrão não afetam o valor da propriedade LastActivityDate."
  syntax:
    content: public DateTime LastActivityDate { get; }
    return:
      type: System.DateTime
      description: "A data e hora em que o perfil foi lidas ou modificado pelo provedor padrão mais recente."
  overload: System.Web.Profile.ProfileBase.LastActivityDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.LastUpdatedDate
  id: LastUpdatedDate
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: LastUpdatedDate
  nameWithType: ProfileBase.LastUpdatedDate
  fullName: System.Web.Profile.ProfileBase.LastUpdatedDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém a data e a hora em que o perfil foi modificado mais recente."
  remarks: "O valor da propriedade só é modificado pelo provedor de perfil padrão. As alterações feitas às propriedades de perfil por um provedor diferente do provedor de perfil padrão não afetam o valor da propriedade LastUpdatedDate."
  syntax:
    content: public DateTime LastUpdatedDate { get; }
    return:
      type: System.DateTime
      description: "A data e hora em que o perfil foi modificado pelo provedor padrão mais recente."
  overload: System.Web.Profile.ProfileBase.LastUpdatedDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Properties
  id: Properties
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Properties
  nameWithType: ProfileBase.Properties
  fullName: System.Web.Profile.ProfileBase.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém uma coleção de <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objetos para cada propriedade no perfil."
  remarks: "Você pode usar essa propriedade para obter informações sobre as propriedades de perfil configurado para um aplicativo, incluindo tipos e nomes de propriedade. Você também pode fazer referência a <xref:System.Web.Profile.ProfileProvider>de cada propriedade.</xref:System.Web.Profile.ProfileProvider> Um <xref:System.Web.Profile.ProfileProvider>gerencia o armazenamento e recuperação de valores de propriedade da fonte de dados e para.</xref:System.Web.Profile.ProfileProvider>"
  example:
  - "The following code example lists the names of the properties in the user profile by binding the <xref:System.Configuration.SettingsProperty.Name%2A> property from the static Properties collection of <xref:System.Configuration.SettingsProperty> objects to a <xref:System.Web.UI.WebControls.GridView> control. The selected property value is retrieved by name using the <xref:System.Web.Profile.ProfileBase.Item%2A> collection. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n [!code-cs[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/csharp/p-system.web.profile.pro_2_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_2_1.aspx)]"
  syntax:
    content: public static System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "Um <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> de <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objetos para cada propriedade no perfil para o aplicativo."
  overload: System.Web.Profile.ProfileBase.Properties*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Não foi possível criar um tipo de propriedade especificado na seção do arquivo Web. config.       - ou - <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> de atributo para uma propriedade na seção do arquivo Web. config é definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> atributo do elemento é definido como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - ou - <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref> de atributo para uma propriedade na seção do arquivo Web. config é definida como <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> e <> </> *> propriedade especificada <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - ou - o nome de um provedor especificado usando o <xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;> </xref> não foi possível encontrar o atributo de uma propriedade de perfil no <> </> *> coleção.       - ou - <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> especificado para uma propriedade de perfil não foi encontrada.       - ou - uma propriedade de perfil foi especificada com um nome que corresponde a um nome de propriedade na classe base especificada no <xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;> </xref> atributo da seção."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Save
  id: Save
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Save()
  nameWithType: ProfileBase.Save()
  fullName: System.Web.Profile.ProfileBase.Save()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Atualiza a fonte de dados de perfil com valores de propriedade de perfil alterado."
  remarks: "O método Save grava perfil modificado valores de propriedade para a fonte de dados. O provedor de perfil pode reduzir a quantidade de atividade na fonte de dados executando atualizações somente quando o <xref:System.Web.Profile.ProfileBase.IsDirty%2A>estiver definida como `true`.</xref:System.Web.Profile.ProfileBase.IsDirty%2A> Esse é o caso para o padrão <xref:System.Web.Profile.SqlProfileProvider>.</xref:System.Web.Profile.SqlProfileProvider> Depois que o método Save tiver salvo os valores de propriedade para a fonte de dados, <xref:System.Web.Profile.ProfileBase.IsDirty%2A>é definido como `false`.</xref:System.Web.Profile.ProfileBase.IsDirty%2A>       Você pode usar o <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>evento para implementar uma lógica personalizada que determina se uma propriedade de perfil com um tipo complexo ou um tipo personalizado foi modificada e continuar com o salvamento automático para objetos modificados ou cancelar o salvamento automático, se nenhum objeto foram modificado.</xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>"
  syntax:
    content: public override void Save ();
    parameters: []
  overload: System.Web.Profile.ProfileBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)
  id: SetPropertyValue(System.String,System.Object)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: SetPropertyValue(String,Object)
  nameWithType: ProfileBase.SetPropertyValue(String,Object)
  fullName: System.Web.Profile.ProfileBase.SetPropertyValue(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Define o valor de uma propriedade de perfil."
  remarks: "O ASP.NET usa a <xref:System.Web.Profile.ProfileBase>classe para criar a classe usada para o perfil de usuário.</xref:System.Web.Profile.ProfileBase> Quando um aplicativo que tenha habilitado o perfil do usuário é iniciado, o ASP.NET cria uma nova classe de tipo `ProfileCommon`, que herda da <xref:System.Web.Profile.ProfileBase>classe</xref:System.Web.Profile.ProfileBase> de Acessadores fortemente tipados são adicionados para o `ProfileCommon` classe para cada propriedade definida na seção de configuração. Os acessadores fortemente tipados do `ProfileCommon` classe chama o método de SetPropertyValue para passar valores de propriedade para o <xref:System.Web.Profile.ProfileProvider>a ser armazenado na fonte de dados.</xref:System.Web.Profile.ProfileProvider>       Você pode usar o método SetPropertyValue para atribuir valores de propriedade no perfil do usuário para seu aplicativo por nome. Os valores são não tipados e verificação de tipo será feita em tempo de execução, não o tempo de compilação. Para acessar fortemente tipada valores de propriedade de perfil, você pode acessar a propriedade por nome como um membro do `Profile` propriedade que está disponível em cada página, por exemplo, `Profile.CustomerAddress`."
  example:
  - "The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_3_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_3_1.aspx)]"
  syntax:
    content: public void SetPropertyValue (string propertyName, object propertyValue);
    parameters:
    - id: propertyName
      type: System.String
      description: "O nome da propriedade a ser definido."
    - id: propertyValue
      type: System.Object
      description: "O valor a ser atribuído à propriedade."
  overload: System.Web.Profile.ProfileBase.SetPropertyValue*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Foi feita uma tentativa para definir um valor de propriedade em um perfil anônimo onde a propriedade <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> atributo é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Não existem propriedades definidas para o perfil atual.       - ou - o nome de propriedade do perfil especificado não existe no perfil atual.       - ou - o provedor para a propriedade do perfil especificado não reconhece a propriedade especificada."
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "Foi feita uma tentativa para definir um valor em uma propriedade que foi marcada como somente leitura."
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "Foi feita uma tentativa para atribuir um valor a uma propriedade usando um tipo incompatível."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.UserName
  id: UserName
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: UserName
  nameWithType: ProfileBase.UserName
  fullName: System.Web.Profile.ProfileBase.UserName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Obtém o nome de usuário para o perfil."
  remarks: "A propriedade de nome de usuário retorna o nome do usuário autenticado que o perfil é associado ou o identificador de usuário anônimo atribuídos ao perfil, se o <xref:System.Web.Profile.ProfileBase.IsAnonymous%2A>é de propriedade `true`.</xref:System.Web.Profile.ProfileBase.IsAnonymous%2A>       Acesso anônimo para o perfil de usuário está ativado, usando a seção de configuração e o `allowAnonymous` atributo do elemento de configuração usado para especificar propriedades de perfil."
  syntax:
    content: public string UserName { get; }
    return:
      type: System.String
      description: "O nome de usuário para o perfil ou o identificador de usuário anônimo atribuídos ao perfil."
  overload: System.Web.Profile.ProfileBase.UserName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.SettingsBase
  isExternal: false
  name: System.Configuration.SettingsBase
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Web.Profile.ProfileBase.#ctor
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: ProfileBase()
  nameWithType: ProfileBase.ProfileBase()
  fullName: System.Web.Profile.ProfileBase.ProfileBase()
- uid: System.Web.Profile.ProfileBase.Create(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Create(String)
  nameWithType: ProfileBase.Create(String)
  fullName: System.Web.Profile.ProfileBase.Create(String)
- uid: System.Web.Profile.ProfileBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Create(String,Boolean)
  nameWithType: ProfileBase.Create(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Create(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Profile.ProfileBase.GetProfileGroup(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetProfileGroup(String)
  nameWithType: ProfileBase.GetProfileGroup(String)
  fullName: System.Web.Profile.ProfileBase.GetProfileGroup(String)
- uid: System.Web.Profile.ProfileGroupBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileGroupBase
  nameWithType: ProfileGroupBase
  fullName: System.Web.Profile.ProfileGroupBase
- uid: System.Web.Profile.ProfileBase.GetPropertyValue(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetPropertyValue(String)
  nameWithType: ProfileBase.GetPropertyValue(String)
  fullName: System.Web.Profile.ProfileBase.GetPropertyValue(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Initialize(String,Boolean)
  nameWithType: ProfileBase.Initialize(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Initialize(String,Boolean)
- uid: System.Web.Profile.ProfileBase.IsAnonymous
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsAnonymous
  nameWithType: ProfileBase.IsAnonymous
  fullName: System.Web.Profile.ProfileBase.IsAnonymous
- uid: System.Web.Profile.ProfileBase.IsDirty
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsDirty
  nameWithType: ProfileBase.IsDirty
  fullName: System.Web.Profile.ProfileBase.IsDirty
- uid: System.Web.Profile.ProfileBase.Item(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Item(String)
  nameWithType: ProfileBase.Item(String)
  fullName: System.Web.Profile.ProfileBase.Item(String)
- uid: System.Web.Profile.ProfileBase.LastActivityDate
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastActivityDate
  nameWithType: ProfileBase.LastActivityDate
  fullName: System.Web.Profile.ProfileBase.LastActivityDate
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Profile.ProfileBase.LastUpdatedDate
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastUpdatedDate
  nameWithType: ProfileBase.LastUpdatedDate
  fullName: System.Web.Profile.ProfileBase.LastUpdatedDate
- uid: System.Web.Profile.ProfileBase.Properties
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Properties
  nameWithType: ProfileBase.Properties
  fullName: System.Web.Profile.ProfileBase.Properties
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Web.Profile.ProfileBase.Save
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Save()
  nameWithType: ProfileBase.Save()
  fullName: System.Web.Profile.ProfileBase.Save()
- uid: System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: SetPropertyValue(String,Object)
  nameWithType: ProfileBase.SetPropertyValue(String,Object)
  fullName: System.Web.Profile.ProfileBase.SetPropertyValue(String,Object)
- uid: System.Web.Profile.ProfileBase.UserName
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: UserName
  nameWithType: ProfileBase.UserName
  fullName: System.Web.Profile.ProfileBase.UserName
- uid: System.Web.Profile.ProfileBase.#ctor*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase.ProfileBase
- uid: System.Web.Profile.ProfileBase.Create*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Create
  nameWithType: ProfileBase.Create
- uid: System.Web.Profile.ProfileBase.GetProfileGroup*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetProfileGroup
  nameWithType: ProfileBase.GetProfileGroup
- uid: System.Web.Profile.ProfileBase.GetPropertyValue*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetPropertyValue
  nameWithType: ProfileBase.GetPropertyValue
- uid: System.Web.Profile.ProfileBase.Initialize*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Initialize
  nameWithType: ProfileBase.Initialize
- uid: System.Web.Profile.ProfileBase.IsAnonymous*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsAnonymous
  nameWithType: ProfileBase.IsAnonymous
- uid: System.Web.Profile.ProfileBase.IsDirty*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsDirty
  nameWithType: ProfileBase.IsDirty
- uid: System.Web.Profile.ProfileBase.Item*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Item
  nameWithType: ProfileBase.Item
- uid: System.Web.Profile.ProfileBase.LastActivityDate*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastActivityDate
  nameWithType: ProfileBase.LastActivityDate
- uid: System.Web.Profile.ProfileBase.LastUpdatedDate*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastUpdatedDate
  nameWithType: ProfileBase.LastUpdatedDate
- uid: System.Web.Profile.ProfileBase.Properties*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Properties
  nameWithType: ProfileBase.Properties
- uid: System.Web.Profile.ProfileBase.Save*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Save
  nameWithType: ProfileBase.Save
- uid: System.Web.Profile.ProfileBase.SetPropertyValue*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: SetPropertyValue
  nameWithType: ProfileBase.SetPropertyValue
- uid: System.Web.Profile.ProfileBase.UserName*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: UserName
  nameWithType: ProfileBase.UserName
