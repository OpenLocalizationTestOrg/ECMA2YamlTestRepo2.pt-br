### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.NativeObjectSecurity
  id: NativeObjectSecurity
  children:
  - System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)
  - System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  langs:
  - csharp
  name: NativeObjectSecurity
  nameWithType: NativeObjectSecurity
  fullName: System.Security.AccessControl.NativeObjectSecurity
  type: Class
  summary: "Fornece a capacidade de controlar o acesso a objetos nativo sem a manipulação direta de listas de controle de acesso (ACLs). Tipos de objeto nativo são definidos pelo <xref href=&quot;System.Security.AccessControl.ResourceType&quot;> </xref> enumeração."
  syntax:
    content: 'public abstract class NativeObjectSecurity : System.Security.AccessControl.CommonObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.ObjectSecurity.AccessRightType
  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AccessRuleType
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.AuditRuleType
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType)'
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: NativeObjectSecurity(Boolean,ResourceType)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> classe com os valores especificados."
  syntax:
    content: protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o novo <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> é um objeto recipiente."
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "O tipo de objeto protegível com a qual o novo <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto está associado."
  overload: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)'
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> classe com os valores especificados. É recomendável que os valores da <code> includeSections </code> parâmetros passados para o construtor e manter os métodos ser idênticos. Para obter mais informações, consulte comentários."
  remarks: "Quando a persistência de um <xref:System.Security.AccessControl.NativeObjectSecurity>do objeto, se o valor da `includeSections` parâmetro passado para o <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>método não é idêntico ao valor da `includeSections` parâmetro passado para o construtor usado para criar esse <xref:System.Security.AccessControl.NativeObjectSecurity>objeto, seções de persistente <xref:System.Security.AccessControl.NativeObjectSecurity>objeto pode conter valores imprevisíveis.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.NativeObjectSecurity> Por exemplo, se um construtor for chamado com um `includeSections` valor de <xref:System.Security.AccessControl.AccessControlSections>e posteriormente um <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>método é chamado no objeto com um `includeSections` valor de <xref:System.Security.AccessControl.AccessControlSections>, resultante persistentes <xref:System.Security.AccessControl.NativeObjectSecurity>objeto conterá valores imprevisíveis para suas regras de auditoria, o grupo e o proprietário.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o novo <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> é um objeto recipiente."
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "O tipo de objeto protegível com a qual o novo <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto está associado."
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "O identificador do objeto protegível com a qual o novo <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto está associado."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Uma da <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> valores de enumeração que especifica as seções do descritor de segurança (regras de acesso, as regras de auditoria, proprietário, grupo primário) do objeto protegível para incluir na <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto."
  overload: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: NativeObjectSecurity(Boolean,ResourceType,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  syntax:
    content: protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "A ser adicionado."
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "A ser adicionado."
    - id: exceptionFromErrorCode
      type: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode
      description: "A ser adicionado."
    - id: exceptionContext
      type: System.Object
      description: "A ser adicionado."
  overload: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)'
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> classe com os valores especificados. É recomendável que os valores da <code> includeSections </code> parâmetros passados para o construtor e manter os métodos ser idênticos. Para obter mais informações, consulte comentários."
  remarks: "Quando a persistência de um <xref:System.Security.AccessControl.NativeObjectSecurity>do objeto, se o valor da `includeSections` parâmetro passado para o <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>método não é idêntico ao valor da `includeSections` parâmetro passado para o construtor usado para criar esse <xref:System.Security.AccessControl.NativeObjectSecurity>objeto, seções de persistente <xref:System.Security.AccessControl.NativeObjectSecurity>objeto pode conter valores imprevisíveis.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.NativeObjectSecurity> Por exemplo, se um construtor for chamado com um `includeSections` valor de <xref:System.Security.AccessControl.AccessControlSections>e posteriormente um <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>método é chamado no objeto com um `includeSections` valor de <xref:System.Security.AccessControl.AccessControlSections>, resultante persistentes <xref:System.Security.AccessControl.NativeObjectSecurity>objeto conterá valores imprevisíveis para suas regras de auditoria, o grupo e o proprietário.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, string name, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o novo <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> é um objeto recipiente."
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "O tipo de objeto protegível com a qual o novo <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto está associado."
    - id: name
      type: System.String
      description: "O nome do objeto protegível com a qual o novo <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto está associado."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Uma da <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> valores de enumeração que especifica as seções do descritor de segurança (regras de acesso, as regras de auditoria, proprietário, grupo primário) do objeto protegível para incluir na <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto."
  overload: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  syntax:
    content: protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "A ser adicionado."
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "A ser adicionado."
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "A ser adicionado."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "A ser adicionado."
    - id: exceptionFromErrorCode
      type: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode
      description: "A ser adicionado."
    - id: exceptionContext
      type: System.Object
      description: "A ser adicionado."
  overload: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  syntax:
    content: protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, string name, System.Security.AccessControl.AccessControlSections includeSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "A ser adicionado."
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "A ser adicionado."
    - id: name
      type: System.String
      description: "A ser adicionado."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "A ser adicionado."
    - id: exceptionFromErrorCode
      type: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode
      description: "A ser adicionado."
    - id: exceptionContext
      type: System.Object
      description: "A ser adicionado."
  overload: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  id: Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: Persist(SafeHandle,AccessControlSections)
  nameWithType: NativeObjectSecurity.Persist(SafeHandle,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Salva as seções especificadas do descritor de segurança associado a esta <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto no armazenamento permanente. Estamos recommend.persist que os valores da <code> includeSections </code> os parâmetros passados para o construtor e manter métodos ser idênticos. Para obter mais informações, consulte comentários."
  remarks: "Quando a persistência de um <xref:System.Security.AccessControl.NativeObjectSecurity>do objeto, se o valor da `includeSections` parâmetro passado para o <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>método não é idêntico ao valor da `includeSections` parâmetro passado para o construtor usado para criar esse <xref:System.Security.AccessControl.NativeObjectSecurity>objeto, seções de persistente <xref:System.Security.AccessControl.NativeObjectSecurity>objeto pode conter valores imprevisíveis.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.NativeObjectSecurity> Por exemplo, se um construtor for chamado com um `includeSections` valor de <xref:System.Security.AccessControl.AccessControlSections>e posteriormente um <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>método é chamado no objeto com um `includeSections` valor de <xref:System.Security.AccessControl.AccessControlSections>, resultante persistentes <xref:System.Security.AccessControl.NativeObjectSecurity>objeto conterá valores imprevisíveis para suas regras de auditoria, o grupo e o proprietário.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected override sealed void Persist (System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "O identificador do objeto protegível à qual essa <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto está associado."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Uma da <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> valores de enumeração que especifica as seções do descritor de segurança (regras de acesso, as regras de auditoria, proprietário, grupo primário) do objeto protegível para salvar."
  overload: System.Security.AccessControl.NativeObjectSecurity.Persist*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O objeto protegível à qual essa <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto está associado é um diretório ou um arquivo e diretório ou o arquivo não pôde ser encontrado."
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  id: Persist(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: Persist(String,AccessControlSections)
  nameWithType: NativeObjectSecurity.Persist(String,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(String,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Salva as seções especificadas do descritor de segurança associado a esta <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto no armazenamento permanente. É recomendável que os valores da <code> includeSections </code> parâmetros passados para o construtor e manter os métodos ser idênticos. Para obter mais informações, consulte comentários."
  remarks: "Quando a persistência de um <xref:System.Security.AccessControl.NativeObjectSecurity>do objeto, se o valor da `includeSections` parâmetro passado para o método de persistência não é idêntico ao valor da `includeSections` parâmetro passado para o construtor usado para criar esse <xref:System.Security.AccessControl.NativeObjectSecurity>objeto, seções de persistente <xref:System.Security.AccessControl.NativeObjectSecurity>objeto pode conter valores imprevisíveis.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> Por exemplo, se um construtor for chamado com um `includeSections` valor <xref:System.Security.AccessControl.AccessControlSections>, e posteriormente um método de persistência é chamado no objeto com um `includeSections` valor <xref:System.Security.AccessControl.AccessControlSections>, resultante persistentes <xref:System.Security.AccessControl.NativeObjectSecurity>objeto conterá valores imprevisíveis para suas regras de auditoria, o grupo e o proprietário.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected override sealed void Persist (string name, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: name
      type: System.String
      description: "O nome do objeto protegível à qual essa <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto está associado."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Uma da <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> valores de enumeração que especifica as seções do descritor de segurança (regras de acesso, as regras de auditoria, proprietário, grupo primário) do objeto protegível para salvar."
  overload: System.Security.AccessControl.NativeObjectSecurity.Persist*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O objeto protegível à qual essa <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto está associado é um diretório ou um arquivo e diretório ou o arquivo não pôde ser encontrado."
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  id: Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: Persist(SafeHandle,AccessControlSections,Object)
  nameWithType: NativeObjectSecurity.Persist(SafeHandle,AccessControlSections,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle,AccessControlSections,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Salva as seções especificadas do descritor de segurança associado a esta <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto no armazenamento permanente. É recomendável que os valores da <code> includeSections </code> parâmetros passados para o construtor e manter os métodos ser idênticos. Para obter mais informações, consulte comentários."
  remarks: "Quando a persistência de um <xref:System.Security.AccessControl.NativeObjectSecurity>do objeto, se o valor da `includeSections` parâmetro passado para o método de persistência não é idêntico ao valor da `includeSections` parâmetro passado para o construtor usado para criar esse <xref:System.Security.AccessControl.NativeObjectSecurity>objeto, seções de persistente <xref:System.Security.AccessControl.NativeObjectSecurity>objeto pode conter valores imprevisíveis.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> Por exemplo, se um construtor for chamado com um `includeSections` valor <xref:System.Security.AccessControl.AccessControlSections>, e posteriormente um método de persistência é chamado no objeto com um `includeSections` valor <xref:System.Security.AccessControl.AccessControlSections>, resultante persistentes <xref:System.Security.AccessControl.NativeObjectSecurity>objeto conterá valores imprevisíveis para suas regras de auditoria, o grupo e o proprietário.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected void Persist (System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections, object exceptionContext);
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "O identificador do objeto protegível à qual essa <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto está associado."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Uma da <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> valores de enumeração que especifica as seções do descritor de segurança (regras de acesso, as regras de auditoria, proprietário, grupo primário) do objeto protegível para salvar."
    - id: exceptionContext
      type: System.Object
      description: "Um objeto que contém informações contextuais sobre a origem ou destino da exceção."
  overload: System.Security.AccessControl.NativeObjectSecurity.Persist*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O objeto protegível à qual essa <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto está associado é um diretório ou um arquivo e diretório ou o arquivo não pôde ser encontrado."
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  id: Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: Persist(String,AccessControlSections,Object)
  nameWithType: NativeObjectSecurity.Persist(String,AccessControlSections,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(String,AccessControlSections,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Salva as seções especificadas do descritor de segurança associado a esta <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto no armazenamento permanente. É recomendável que os valores da <code> includeSections </code> parâmetros passados para o construtor e manter os métodos ser idênticos. Para obter mais informações, consulte comentários."
  remarks: "Quando a persistência de um <xref:System.Security.AccessControl.NativeObjectSecurity>do objeto, se o valor da `includeSections` parâmetro passado para o <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>método não é idêntico ao valor da `includeSections` parâmetro passado para o construtor usado para criar esse <xref:System.Security.AccessControl.NativeObjectSecurity>objeto, seções de persistente <xref:System.Security.AccessControl.NativeObjectSecurity>objeto pode conter valores imprevisíveis.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.NativeObjectSecurity> Por exemplo, se um construtor for chamado com um `includeSections` valor de <xref:System.Security.AccessControl.AccessControlSections>e posteriormente um <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>método é chamado no objeto com um `includeSections` valor de <xref:System.Security.AccessControl.AccessControlSections>, resultante persistentes <xref:System.Security.AccessControl.NativeObjectSecurity>objeto conterá valores imprevisíveis para suas regras de auditoria, o grupo e o proprietário.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected void Persist (string name, System.Security.AccessControl.AccessControlSections includeSections, object exceptionContext);
    parameters:
    - id: name
      type: System.String
      description: "O nome do objeto protegível à qual essa <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto está associado."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Uma da <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> valores de enumeração que especifica as seções do descritor de segurança (regras de acesso, as regras de auditoria, proprietário, grupo primário) do objeto protegível para salvar."
    - id: exceptionContext
      type: System.Object
      description: "Um objeto que contém informações contextuais sobre a origem ou destino da exceção."
  overload: System.Security.AccessControl.NativeObjectSecurity.Persist*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O objeto protegível à qual essa <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> objeto está associado é um diretório ou um arquivo e diretório ou o arquivo não pôde ser encontrado."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.CommonObjectSecurity
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity(Boolean,ResourceType)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.ResourceType
  parent: System.Security.AccessControl
  isExternal: false
  name: ResourceType
  nameWithType: ResourceType
  fullName: System.Security.AccessControl.ResourceType
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections)
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity(Boolean,ResourceType,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,NativeObjectSecurity+ExceptionFromErrorCode,Object)
- uid: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode
  parent: System.Security.AccessControl
  isExternal: false
  name: NativeObjectSecurity+ExceptionFromErrorCode
  nameWithType: NativeObjectSecurity+ExceptionFromErrorCode
  fullName: System.Security.AccessControl.NativeObjectSecurity+ExceptionFromErrorCode
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: Persist(SafeHandle,AccessControlSections)
  nameWithType: NativeObjectSecurity.Persist(SafeHandle,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle,AccessControlSections)
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: Persist(String,AccessControlSections)
  nameWithType: NativeObjectSecurity.Persist(String,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(String,AccessControlSections)
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: Persist(SafeHandle,AccessControlSections,Object)
  nameWithType: NativeObjectSecurity.Persist(SafeHandle,AccessControlSections,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle,AccessControlSections,Object)
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: Persist(String,AccessControlSections,Object)
  nameWithType: NativeObjectSecurity.Persist(String,AccessControlSections,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(String,AccessControlSections,Object)
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity
  nameWithType: NativeObjectSecurity.NativeObjectSecurity
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist*
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: Persist
  nameWithType: NativeObjectSecurity.Persist
