### YamlMime:ManagedReference
items:
- uid: System.Configuration.UriSection
  id: UriSection
  children:
  - System.Configuration.UriSection.#ctor
  - System.Configuration.UriSection.Idn
  - System.Configuration.UriSection.IriParsing
  - System.Configuration.UriSection.Properties
  - System.Configuration.UriSection.SchemeSettings
  langs:
  - csharp
  name: UriSection
  nameWithType: UriSection
  fullName: System.Configuration.UriSection
  type: Class
  summary: "Representa a seção de Uri dentro de um arquivo de configuração."
  remarks: "Existente <xref:System.Uri?displayProperty=fullName>classe foi estendida para oferecer suporte a identificadores de recursos internacionais (IRI) e nomes de domínio internacionalizados.</xref:System.Uri?displayProperty=fullName> Os usuários atuais não verão qualquer alteração no comportamento do .NET Framework 2.0, a menos que eles permitem especificamente IRI e IDN. Isso garante a compatibilidade com versões anteriores do .NET Framework.       As definições de configuração IRI e IDN podem ser recuperadas usando a classe UriSection."
  syntax:
    content: 'public sealed class UriSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Configuration.UriSection.#ctor
  id: '#ctor'
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: UriSection()
  nameWithType: UriSection.UriSection()
  fullName: System.Configuration.UriSection.UriSection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.UriSection&quot;> </xref> classe."
  remarks: "Existente <xref:System.Uri?displayProperty=fullName>classe foi estendida para oferecer suporte a identificadores de recursos internacionais (IRI) e nomes de domínio internacionalizados.</xref:System.Uri?displayProperty=fullName> Os usuários atuais não verão qualquer alteração no comportamento do .NET Framework 2.0, a menos que eles permitem especificamente IRI e IDN. Isso garante a compatibilidade com versões anteriores do .NET Framework.       As definições de configuração IRI e IDN podem ser recuperadas usando a <xref:System.Configuration.UriSection>classe.</xref:System.Configuration.UriSection>       Para obter mais informações sobre suporte a IRI, consulte a seção comentários para a <xref:System.Uri?displayProperty=fullName>classe.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public UriSection ();
    parameters: []
  overload: System.Configuration.UriSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.Idn
  id: Idn
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: Idn
  nameWithType: UriSection.Idn
  fullName: System.Configuration.UriSection.Idn
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém um <xref href=&quot;System.Configuration.IdnElement&quot;> </xref> objeto que contém a definição de configuração para internacional domínio IDN (nome) de processamento no &lt;xref:System.Uri?displayProperty=fullName&gt; classe."
  remarks: "Existente <xref:System.Uri?displayProperty=fullName>classe foi estendida para oferecer suporte a identificadores de recursos internacionais (IRI) e nomes de domínio internacionalizados.</xref:System.Uri?displayProperty=fullName> Os usuários atuais não verão qualquer alteração no comportamento do .NET Framework 2.0, a menos que eles permitem especificamente IRI e IDN. Isso garante a compatibilidade com versões anteriores do .NET Framework.       As definições de configuração IRI e IDN podem ser recuperadas usando a <xref:System.Configuration.UriSection>classe.</xref:System.Configuration.UriSection> A propriedade de Idn retorna a configuração IDN processamento de <xref:System.Uri?displayProperty=fullName>classe.</xref:System.Uri?displayProperty=fullName>       Processamento de IRI deve ser habilitado para processamento para ser possível de IDN. Se o processamento de IRI é desabilitado, o processamento de IDN será definido para a configuração padrão em que o comportamento do .NET Framework 2.0 é usado para fins de compatibilidade e nomes IDN não são usados.       O atributo de nome de domínio internacionalizado (IDN) controla apenas o processamento de IDN. Todos os outros processamentos de IRI (normalização de caractere, por exemplo) é executado por padrão.       O parâmetro de configuração para o <xref:System.Configuration.IdnElement>serão lidos uma vez quando o primeiro <xref:System.Uri?displayProperty=fullName>classe é construída.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IdnElement> Alterações na configuração depois desse tempo são ignoradas.       Para obter mais informações sobre suporte a IRI, consulte a seção comentários para a <xref:System.Uri?displayProperty=fullName>classe.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public System.Configuration.IdnElement Idn { get; }
    return:
      type: System.Configuration.IdnElement
      description: "O parâmetro de configuração para internacional domínio IDN (nome) de processamento no &lt;xref:System.Uri?displayProperty=fullName&gt; classe."
  overload: System.Configuration.UriSection.Idn*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.IriParsing
  id: IriParsing
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: IriParsing
  nameWithType: UriSection.IriParsing
  fullName: System.Configuration.UriSection.IriParsing
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém um <xref href=&quot;System.Configuration.IriParsingElement&quot;> </xref> objeto que contém a definição de configuração para identificadores de recursos internacionais (IRI) analisar o &lt;xref:System.Uri?displayProperty=fullName&gt; classe."
  remarks: "Existente <xref:System.Uri?displayProperty=fullName>classe foi estendida para oferecer suporte a identificadores de recursos internacionais (IRI) e nomes de domínio internacionalizados.</xref:System.Uri?displayProperty=fullName> Os usuários atuais não verão qualquer alteração no comportamento do .NET Framework 2.0, a menos que eles permitem especificamente IRI e IDN. Isso garante a compatibilidade com versões anteriores do .NET Framework.       As definições de configuração IRI e IDN podem ser recuperadas usando a <xref:System.Configuration.UriSection>classe.</xref:System.Configuration.UriSection> A propriedade IriParsing retorna a configuração para a análise de IRI na <xref:System.Uri?displayProperty=fullName>classe.</xref:System.Uri?displayProperty=fullName>       Processamento de IRI deve ser habilitado para processamento para ser possível de IDN. Se o processamento de IRI é desabilitado, o processamento de IDN será definido para a configuração padrão em que o comportamento do .NET Framework 2.0 é usado para fins de compatibilidade e nomes IDN não são usados.       O atributo de nome de domínio internacionalizado (IDN) controla apenas o processamento de IDN. Todos os outros processamentos de IRI (normalização de caractere, por exemplo) é executado por padrão.       O parâmetro de configuração para o <xref:System.Configuration.IriParsingElement>serão lidos uma vez quando o primeiro <xref:System.Uri?displayProperty=fullName>classe é construída.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IriParsingElement> Alterações na configuração depois desse tempo são ignoradas.       Para obter mais informações sobre suporte a IRI, consulte a seção comentários para a <xref:System.Uri?displayProperty=fullName>classe.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public System.Configuration.IriParsingElement IriParsing { get; }
    return:
      type: System.Configuration.IriParsingElement
      description: "A configuração para identificadores de recursos internacionais (IRI) analisar o &lt;xref:System.Uri?displayProperty=fullName&gt; classe."
  overload: System.Configuration.UriSection.IriParsing*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.Properties
  id: Properties
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: Properties
  nameWithType: UriSection.Properties
  fullName: System.Configuration.UriSection.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A ser adicionado."
  overload: System.Configuration.UriSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.SchemeSettings
  id: SchemeSettings
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
  fullName: System.Configuration.UriSection.SchemeSettings
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém um <xref href=&quot;System.Configuration.SchemeSettingElementCollection&quot;> </xref> objeto que contém as definições de configuração para o esquema de análise no &lt;xref:System.Uri?displayProperty=fullName&gt; classe."
  remarks: "A propriedade SchemeSettings não é genérica. Somente o genericUriParserOptions = &quot;DontUnescapePathDotsAndSlashes&quot; configuração para esquemas HTTP e HTTPS são aceitos. Todas as outras configurações são ignoradas."
  syntax:
    content: public System.Configuration.SchemeSettingElementCollection SchemeSettings { get; }
    return:
      type: System.Configuration.SchemeSettingElementCollection
      description: "As definições de configuração para o esquema de análise no &lt;xref:System.Uri?displayProperty=fullName&gt; classe"
  overload: System.Configuration.UriSection.SchemeSettings*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Configuration.UriSection.#ctor
  parent: System.Configuration.UriSection
  isExternal: false
  name: UriSection()
  nameWithType: UriSection.UriSection()
  fullName: System.Configuration.UriSection.UriSection()
- uid: System.Configuration.UriSection.Idn
  parent: System.Configuration.UriSection
  isExternal: false
  name: Idn
  nameWithType: UriSection.Idn
  fullName: System.Configuration.UriSection.Idn
- uid: System.Configuration.IdnElement
  parent: System.Configuration
  isExternal: false
  name: IdnElement
  nameWithType: IdnElement
  fullName: System.Configuration.IdnElement
- uid: System.Configuration.UriSection.IriParsing
  parent: System.Configuration.UriSection
  isExternal: false
  name: IriParsing
  nameWithType: UriSection.IriParsing
  fullName: System.Configuration.UriSection.IriParsing
- uid: System.Configuration.IriParsingElement
  parent: System.Configuration
  isExternal: false
  name: IriParsingElement
  nameWithType: IriParsingElement
  fullName: System.Configuration.IriParsingElement
- uid: System.Configuration.UriSection.Properties
  parent: System.Configuration.UriSection
  isExternal: false
  name: Properties
  nameWithType: UriSection.Properties
  fullName: System.Configuration.UriSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Configuration.UriSection.SchemeSettings
  parent: System.Configuration.UriSection
  isExternal: false
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
  fullName: System.Configuration.UriSection.SchemeSettings
- uid: System.Configuration.SchemeSettingElementCollection
  parent: System.Configuration
  isExternal: false
  name: SchemeSettingElementCollection
  nameWithType: SchemeSettingElementCollection
  fullName: System.Configuration.SchemeSettingElementCollection
- uid: System.Configuration.UriSection.#ctor*
  parent: System.Configuration.UriSection
  isExternal: false
  name: UriSection
  nameWithType: UriSection.UriSection
- uid: System.Configuration.UriSection.Idn*
  parent: System.Configuration.UriSection
  isExternal: false
  name: Idn
  nameWithType: UriSection.Idn
- uid: System.Configuration.UriSection.IriParsing*
  parent: System.Configuration.UriSection
  isExternal: false
  name: IriParsing
  nameWithType: UriSection.IriParsing
- uid: System.Configuration.UriSection.Properties*
  parent: System.Configuration.UriSection
  isExternal: false
  name: Properties
  nameWithType: UriSection.Properties
- uid: System.Configuration.UriSection.SchemeSettings*
  parent: System.Configuration.UriSection
  isExternal: false
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
