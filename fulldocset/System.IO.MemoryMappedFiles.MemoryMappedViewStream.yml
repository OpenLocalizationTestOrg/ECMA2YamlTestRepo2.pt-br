### YamlMime:ManagedReference
items:
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  id: MemoryMappedViewStream
  children:
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)
  langs:
  - csharp
  name: MemoryMappedViewStream
  nameWithType: MemoryMappedViewStream
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  type: Class
  summary: "Representa uma exibição de um arquivo de mapeamento de memória como um fluxo acessado em sequência."
  remarks: "Use o <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A>método de um <xref:System.IO.MemoryMappedFiles.MemoryMappedFile>objeto para obter esse fluxo.</xref:System.IO.MemoryMappedFiles.MemoryMappedFile> </xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A>"
  example:
  - "The following example obtains a MemoryMappedViewStream of a memory-mapped file and writes a value to the stream for inter-process communication.  \n  \n This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A?displayProperty=fullName> method.  \n  \n [!code-vb[system.io.memorymappedfiles_IPC_X#2](~/add/codesnippet/visualbasic/t-system.io.memorymapped_2_1.vb)]\n [!code-cs[system.io.memorymappedfiles_IPC_X#2](~/add/codesnippet/csharp/t-system.io.memorymapped_2_1.cs)]"
  syntax:
    content: 'public sealed class MemoryMappedViewStream : System.IO.UnmanagedMemoryStream'
  inheritance:
  - System.IO.Stream
  - System.IO.UnmanagedMemoryStream
  implements: []
  inheritedMembers:
  - System.IO.UnmanagedMemoryStream.CanRead
  - System.IO.UnmanagedMemoryStream.CanSeek
  - System.IO.UnmanagedMemoryStream.CanWrite
  - System.IO.UnmanagedMemoryStream.Capacity
  - System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)
  - System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
  - System.IO.UnmanagedMemoryStream.Length
  - System.IO.UnmanagedMemoryStream.Position
  - System.IO.UnmanagedMemoryStream.PositionPointer
  - System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.UnmanagedMemoryStream.ReadByte
  - System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MemoryMappedViewStream.Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush
  id: Flush
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  name: Flush()
  nameWithType: MemoryMappedViewStream.Flush()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Limpa todos os buffers para esse fluxo e faz com que todos os dados armazenados em buffer a ser gravado no arquivo de base."
  remarks: "Se você estiver usando modos de exibição que são adjacentes uns aos outros, esse método também limpa os dados a seguir, desde que seu tamanho seja igual a um múltiplo do tamanho de página do sistema:-todos os dados que precede o modo de exibição até o deslocamento de arquivo mais recente.      -Todos os dados que segue a exibição até o deslocamento de arquivo mais antigo."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset
  id: PointerOffset
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  name: PointerOffset
  nameWithType: MemoryMappedViewStream.PointerOffset
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "[Com suporte no .NET Framework 4.5.1 e versões posteriores]       Obtém o número de bytes pelo qual a posição inicial dessa exibição é deslocada do início do arquivo de mapeamento de memória."
  syntax:
    content: public long PointerOffset { get; }
    return:
      type: System.Int64
      description: "O número de bytes entre a posição inicial dessa exibição e o início do arquivo de mapeamento de memória."
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O objeto do qual essa instância foi criada é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle
  id: SafeMemoryMappedViewHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  name: SafeMemoryMappedViewHandle
  nameWithType: MemoryMappedViewStream.SafeMemoryMappedViewHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Obtém um identificador para o modo de exibição de um arquivo de mapeamento de memória."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle SafeMemoryMappedViewHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
      description: "Um wrapper para o identificador do sistema operacional para o modo de exibição do arquivo."
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: MemoryMappedViewStream.SetLength(Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Define o comprimento do fluxo atual."
  remarks: "Esse método é interno apenas, como um fluxo que representa uma exibição não é considerado para ter um comprimento."
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "O comprimento desejado do fluxo atual em bytes."
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não há suporte para esse método."
  platform:
  - net462
references:
- uid: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: System.IO.UnmanagedMemoryStream
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MemoryMappedViewStream.Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: Flush()
  nameWithType: MemoryMappedViewStream.Flush()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush()
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: PointerOffset
  nameWithType: MemoryMappedViewStream.PointerOffset
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: SafeMemoryMappedViewHandle
  nameWithType: MemoryMappedViewStream.SafeMemoryMappedViewHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeMemoryMappedViewHandle
  nameWithType: SafeMemoryMappedViewHandle
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: MemoryMappedViewStream.SetLength(Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: Dispose
  nameWithType: MemoryMappedViewStream.Dispose
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: Flush
  nameWithType: MemoryMappedViewStream.Flush
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: PointerOffset
  nameWithType: MemoryMappedViewStream.PointerOffset
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: SafeMemoryMappedViewHandle
  nameWithType: MemoryMappedViewStream.SafeMemoryMappedViewHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: SetLength
  nameWithType: MemoryMappedViewStream.SetLength
