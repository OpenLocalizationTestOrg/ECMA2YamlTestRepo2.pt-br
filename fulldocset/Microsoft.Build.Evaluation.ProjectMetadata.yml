### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Evaluation.ProjectMetadata
  id: ProjectMetadata
  children:
  - Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation
  - Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue
  - Microsoft.Build.Evaluation.ProjectMetadata.IsImported
  - Microsoft.Build.Evaluation.ProjectMetadata.ItemType
  - Microsoft.Build.Evaluation.ProjectMetadata.Location
  - Microsoft.Build.Evaluation.ProjectMetadata.Name
  - Microsoft.Build.Evaluation.ProjectMetadata.Predecessor
  - Microsoft.Build.Evaluation.ProjectMetadata.Project
  - Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable{Microsoft#Build#Evaluation#ProjectMetadata}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)
  - Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue
  - Microsoft.Build.Evaluation.ProjectMetadata.Xml
  langs:
  - csharp
  name: ProjectMetadata
  nameWithType: ProjectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectMetadata
  type: Class
  summary: "Representa avaliada metadados em tempo de design."
  remarks: "Nunca é usado para representar metadados internos, como % (nome de arquivo). Os metadados sempre estão associado com o código de origem do projeto.       Os metadados está contido por um <xref:Microsoft.Build.Evaluation.ProjectItemDefinition>ou <xref:Microsoft.Build.Evaluation.ProjectItem>.</xref:Microsoft.Build.Evaluation.ProjectItem> </xref:Microsoft.Build.Evaluation.ProjectItemDefinition>"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{xml.Value}]")]

      public class ProjectMetadata : IEquatable<Microsoft.Build.Evaluation.ProjectMetadata>
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<Microsoft.Build.Evaluation.ProjectMetadata>
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation
  id: ConditionLocation
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: ConditionLocation
  nameWithType: ProjectMetadata.ConditionLocation
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Local do atributo de condição."
  syntax:
    content: public Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }
    return:
      type: Microsoft.Build.Construction.ElementLocation
      description: "Retorna o local de atributo de condição."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue
  id: EvaluatedValue
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: EvaluatedValue
  nameWithType: ProjectMetadata.EvaluatedValue
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Obtém o valor de metadados avaliada."
  remarks: 'Não é possível definir diretamente: somente o valor não avaliado pode ser definido.'
  syntax:
    content: public string EvaluatedValue { get; }
    return:
      type: System.String
      description: "Retorna o valor avaliado metadados, que nunca é nulo."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.IsImported
  id: IsImported
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: IsImported
  nameWithType: ProjectMetadata.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.IsImported
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Determina se os metadados originou-se de um arquivo importado."
  syntax:
    content: public bool IsImported { get; }
    return:
      type: System.Boolean
      description: "Retorna VERDADEIRO se os metadados origem de um arquivo importado. FALSO caso contrário."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.IsImported*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.ItemType
  id: ItemType
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: ItemType
  nameWithType: ProjectMetadata.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.ItemType
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Obtém o tipo de item de definição de item de recipiente ou do item."
  syntax:
    content: public string ItemType { get; }
    return:
      type: System.String
      description: "Retorna o tipo de item de definição de item de recipiente ou do item."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.ItemType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Location
  id: Location
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: Location
  nameWithType: ProjectMetadata.Location
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Location
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Local do elemento."
  syntax:
    content: public Microsoft.Build.Construction.ElementLocation Location { get; }
    return:
      type: Microsoft.Build.Construction.ElementLocation
      description: "Retorna o local do elemento."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.Location*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Name
  id: Name
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: Name
  nameWithType: ProjectMetadata.Name
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Name
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Obtém o nome dos metadados."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Retorna o nome dos metadados."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.Name*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Predecessor
  id: Predecessor
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: Predecessor
  nameWithType: ProjectMetadata.Predecessor
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Predecessor
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Obtém os metadados do último (de uma definição de item ou itens) que foi substituído por esses metadados durante a avaliação."
  remarks: "Este método pesquisa todos os metadados com o mesmo nome que acabam acima no arquivo de projeto lógico e que é contido por definições de item do mesmo tipo de item e cujas condições são avaliadas como true. Se os metadados estiverem contidos por um item, este método pesquisa todos os metadados anteriores com o mesmo nome e o item cuja condição avaliada como true. Definições de item são pesquisadas antes de itens.       Se o projeto não tem sido reavaliado desde a última modificação, esse valor pode estar incorreto."
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectMetadata Predecessor { get; }
    return:
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "Retorna os metadados de último (de uma definição de item ou item) cujo valor foi substituído por esses metadados durante a avaliação. Retorna nulo se os metadados não foi substituído."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.Predecessor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Project
  id: Project
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: Project
  nameWithType: ProjectMetadata.Project
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Project
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Obtém o projeto que contém esses metadados."
  syntax:
    content: public Microsoft.Build.Evaluation.Project Project { get; }
    return:
      type: Microsoft.Build.Evaluation.Project
      description: "Retorna o projeto que contém metadados, que nunca é nulo."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.Project*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable{Microsoft#Build#Evaluation#ProjectMetadata}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)
  id: System#IEquatable{Microsoft#Build#Evaluation#ProjectMetadata}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)
  isEii: true
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: System.IEquatable(ProjectMetadata)
  nameWithType: ProjectMetadata.System.IEquatable(ProjectMetadata)
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.System.IEquatable(ProjectMetadata)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  syntax:
    content: bool IEquatable<ProjectMetadata>.Equals (Microsoft.Build.Evaluation.ProjectMetadata other);
    parameters:
    - id: other
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "A ser adicionado."
    return:
      type: System.Boolean
      description: "A ser adicionado."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable<Microsoft#Build#Evaluation#ProjectMetadata>#Equals*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue
  id: UnevaluatedValue
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: UnevaluatedValue
  nameWithType: ProjectMetadata.UnevaluatedValue
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Obtém ou define o valor de metadados não avaliado."
  remarks: "O método setter atualiza o valor não avaliado e o valor avaliado, mas não afeta mais nada no projeto até reavaliação.       Por exemplo,-se uma parte dos metadados denominados &quot;m&quot; for modificada no item do tipo &quot;i&quot;, ele não afeta &quot;j&quot;, que é avaliada de &quot;@(j-> &quot;(m) %&quot;)&quot; até que a reavaliação. – Se o valor não avaliado &quot;m&quot; é definido como algo que é modificada por avaliação, como &quot;$(p)&quot;, o valor será definido para &quot;$(p)&quot; até que a reavaliação.       A definição de metadados por meio de um <xref:Microsoft.Build.Evaluation.ProjectItem>pode causar associado <xref:Microsoft.Build.Construction.ProjectItemElement>a ser dividida, se o elemento item originados de uma expressão de item de lista, curinga ou ponto e vírgula.</xref:Microsoft.Build.Construction.ProjectItemElement> </xref:Microsoft.Build.Evaluation.ProjectItem> porque isso implica uma intenção de afetam somente esse item.       A definição de metadados por meio de ProjectMetadata não cause qualquer divisão, porque isso implica uma intenção para afetar todos os itens usando <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</xref:Microsoft.Build.Construction.ProjectMetadataElement> subjacente       O projeto está marcado como modificada. Não avaliados valores serão considerados conter caracteres sequências de escape conforme necessário.       Este método não pode deixar o projeto em um estado consistente de autoatendimento."
  syntax:
    content: public string UnevaluatedValue { get; set; }
    return:
      type: System.String
      description: "Retorna o valor de metadados não avaliado."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Xml
  id: Xml
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: Xml
  nameWithType: ProjectMetadata.Xml
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Xml
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Obtém o elemento de metadados de projeto associado."
  syntax:
    content: public Microsoft.Build.Construction.ProjectMetadataElement Xml { get; }
    return:
      type: Microsoft.Build.Construction.ProjectMetadataElement
      description: "Retorna o elemento de metadados do projeto associado, nunca pode ser nulo."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.Xml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: ConditionLocation
  nameWithType: ProjectMetadata.ConditionLocation
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation
- uid: Microsoft.Build.Construction.ElementLocation
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ElementLocation
  nameWithType: ElementLocation
  fullName: Microsoft.Build.Construction.ElementLocation
- uid: Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: EvaluatedValue
  nameWithType: ProjectMetadata.EvaluatedValue
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.ProjectMetadata.IsImported
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: IsImported
  nameWithType: ProjectMetadata.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.IsImported
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Evaluation.ProjectMetadata.ItemType
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: ItemType
  nameWithType: ProjectMetadata.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.ItemType
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Location
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Location
  nameWithType: ProjectMetadata.Location
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Location
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Name
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Name
  nameWithType: ProjectMetadata.Name
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Name
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Predecessor
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Predecessor
  nameWithType: ProjectMetadata.Predecessor
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Predecessor
- uid: Microsoft.Build.Evaluation.ProjectMetadata
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectMetadata
  nameWithType: ProjectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectMetadata
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Project
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Project
  nameWithType: ProjectMetadata.Project
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Project
- uid: Microsoft.Build.Evaluation.Project
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.Evaluation.Project
- uid: Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable{Microsoft#Build#Evaluation#ProjectMetadata}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: System.IEquatable(ProjectMetadata)
  nameWithType: ProjectMetadata.System.IEquatable(ProjectMetadata)
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.System.IEquatable(ProjectMetadata)
- uid: Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: UnevaluatedValue
  nameWithType: ProjectMetadata.UnevaluatedValue
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Xml
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Xml
  nameWithType: ProjectMetadata.Xml
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Xml
- uid: Microsoft.Build.Construction.ProjectMetadataElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectMetadataElement
  nameWithType: ProjectMetadataElement
  fullName: Microsoft.Build.Construction.ProjectMetadataElement
- uid: Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: ConditionLocation
  nameWithType: ProjectMetadata.ConditionLocation
- uid: Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: EvaluatedValue
  nameWithType: ProjectMetadata.EvaluatedValue
- uid: Microsoft.Build.Evaluation.ProjectMetadata.IsImported*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: IsImported
  nameWithType: ProjectMetadata.IsImported
- uid: Microsoft.Build.Evaluation.ProjectMetadata.ItemType*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: ItemType
  nameWithType: ProjectMetadata.ItemType
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Location*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Location
  nameWithType: ProjectMetadata.Location
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Name*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Name
  nameWithType: ProjectMetadata.Name
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Predecessor*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Predecessor
  nameWithType: ProjectMetadata.Predecessor
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Project*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Project
  nameWithType: ProjectMetadata.Project
- uid: Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable<Microsoft#Build#Evaluation#ProjectMetadata>#Equals*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: System.IEquatable<Microsoft.Build.Evaluation.ProjectMetadata>.Equals
  nameWithType: ProjectMetadata.System.IEquatable<Microsoft.Build.Evaluation.ProjectMetadata>.Equals
- uid: Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: UnevaluatedValue
  nameWithType: ProjectMetadata.UnevaluatedValue
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Xml*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Xml
  nameWithType: ProjectMetadata.Xml
