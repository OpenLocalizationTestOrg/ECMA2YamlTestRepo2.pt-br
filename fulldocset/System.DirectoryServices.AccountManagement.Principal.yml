### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.Principal
  id: Principal
  children:
  - System.DirectoryServices.AccountManagement.Principal.#ctor
  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  - System.DirectoryServices.AccountManagement.Principal.Context
  - System.DirectoryServices.AccountManagement.Principal.ContextRaw
  - System.DirectoryServices.AccountManagement.Principal.ContextType
  - System.DirectoryServices.AccountManagement.Principal.Delete
  - System.DirectoryServices.AccountManagement.Principal.Description
  - System.DirectoryServices.AccountManagement.Principal.DisplayName
  - System.DirectoryServices.AccountManagement.Principal.Dispose
  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.GetGroups
  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.GetHashCode
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  - System.DirectoryServices.AccountManagement.Principal.Guid
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.Name
  - System.DirectoryServices.AccountManagement.Principal.SamAccountName
  - System.DirectoryServices.AccountManagement.Principal.Save
  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.Sid
  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  - System.DirectoryServices.AccountManagement.Principal.ToString
  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  langs:
  - csharp
  name: Principal
  nameWithType: Principal
  fullName: System.DirectoryServices.AccountManagement.Principal
  type: Class
  summary: "Encapsula as operações comuns a todas as entidades de segurança e dados da conta. Esta é a classe base abstrata da qual segurança todas as entidades são derivadas."
  remarks: "Classes de extensão personalizada que derivar desta classe pode chamar o construtor do construtor de classe derivada para inicializar a classe base. Para obter mais informações, consulte o [Principal extensões](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00) tópico de visão geral."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Name ( {Name} )")]

      public abstract class Principal : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Principal()
  nameWithType: Principal.Principal()
  fullName: System.DirectoryServices.AccountManagement.Principal.Principal()
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> classe. Este construtor é chamado por construtores de classe derivada para inicializar a classe base e não se destina a ser chamado diretamente no seu código."
  remarks: "Classes de extensão personalizada que derivar desta classe pode chamar o construtor do construtor de classe derivada para inicializar a classe base. Para obter mais informações, consulte o [Principal extensões](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00) tópico de visão geral."
  syntax:
    content: protected Principal ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  id: CheckDisposedOrDeleted
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: CheckDisposedOrDeleted()
  nameWithType: Principal.CheckDisposedOrDeleted()
  fullName: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Determina se o <> </> *> ou <> </> *> tem sido chamados métodos nessa classe. Este método é chamado por classes que derivam da classe entidade de segurança."
  remarks: "Esse método verifica se o objeto foi descartado antes que ela determina se ele foi excluído."
  syntax:
    content: protected void CheckDisposedOrDeleted ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref:System.DirectoryServices.AccountManagement.Principal.Dispose*>método foi chamado neste objeto principal.</xref:System.DirectoryServices.AccountManagement.Principal.Dispose*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref:System.DirectoryServices.AccountManagement.Principal.Delete*>método foi chamado neste objeto principal.</xref:System.DirectoryServices.AccountManagement.Principal.Delete*>"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Context
  id: Context
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Context
  nameWithType: Principal.Context
  fullName: System.DirectoryServices.AccountManagement.Principal.Context
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém um contexto principal que está associado à entidade."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalContext Context { get; }
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "Um <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> objeto que contém o contexto associado a essa entidade."
  overload: System.DirectoryServices.AccountManagement.Principal.Context*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ContextRaw
  id: ContextRaw
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ContextRaw
  nameWithType: Principal.ContextRaw
  fullName: System.DirectoryServices.AccountManagement.Principal.ContextRaw
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém um contexto de entidade que está associado essa entidade."
  syntax:
    content: protected System.DirectoryServices.AccountManagement.PrincipalContext ContextRaw { get; set; }
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "Um <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> objeto que contém o contexto associado a essa entidade."
  overload: System.DirectoryServices.AccountManagement.Principal.ContextRaw*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ContextType
  id: ContextType
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ContextType
  nameWithType: Principal.ContextType
  fullName: System.DirectoryServices.AccountManagement.Principal.ContextType
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém o valor de enumeraton de tipo de contexto que especifica o tipo de contexto de entidade associado a essa entidade."
  remarks: "O tipo de contexto é definido no objeto de contexto principal no <xref:System.DirectoryServices.AccountManagement.PrincipalContext>construtor.</xref:System.DirectoryServices.AccountManagement.PrincipalContext> O valor armazenado nesta classe está associado a <xref:System.DirectoryServices.AccountManagement.PrincipalContext.ContextType%2A>propriedade.</xref:System.DirectoryServices.AccountManagement.PrincipalContext.ContextType%2A>"
  syntax:
    content: public System.DirectoryServices.AccountManagement.ContextType ContextType { get; }
    return:
      type: System.DirectoryServices.AccountManagement.ContextType
      description: "Um <xref href=&quot;System.DirectoryServices.AccountManagement.ContextType&quot;> </xref> valor de enumeração que especifica o tipo de contexto."
  overload: System.DirectoryServices.AccountManagement.Principal.ContextType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Delete
  id: Delete
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Delete()
  nameWithType: Principal.Delete()
  fullName: System.DirectoryServices.AccountManagement.Principal.Delete()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Exclui o objeto do repositório."
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.Delete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O objeto que não é persistente no repositório.       O objeto já foi excluído.       O tipo de contexto de destino deve corresponder ao tipo de contexto da entidade de segurança atual."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Description
  id: Description
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Description
  nameWithType: Principal.Description
  fullName: System.DirectoryServices.AccountManagement.Principal.Description
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define a descrição da entidade de segurança."
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "O texto de descrição para essa entidade de segurança ou null se não houver nenhuma descrição."
  overload: System.DirectoryServices.AccountManagement.Principal.Description*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.DisplayName
  id: DisplayName
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: DisplayName
  nameWithType: Principal.DisplayName
  fullName: System.DirectoryServices.AccountManagement.Principal.DisplayName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o nome de exibição para essa entidade."
  syntax:
    content: public string DisplayName { get; set; }
    return:
      type: System.String
      description: "A exibição de nome para essa entidade de segurança ou nula se não houver nenhum nome de exibição."
  overload: System.DirectoryServices.AccountManagement.Principal.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Dispose
  id: Dispose
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Dispose()
  nameWithType: Principal.Dispose()
  fullName: System.DirectoryServices.AccountManagement.Principal.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Descarta a instância atual do <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> objeto."
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  id: DistinguishedName
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: DistinguishedName
  nameWithType: Principal.DistinguishedName
  fullName: System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém o nome diferenciado (DN) para essa entidade."
  syntax:
    content: public string DistinguishedName { get; }
    return:
      type: System.String
      description: "O DN para essa entidade de segurança ou null se não houver nenhum DN."
  overload: System.DirectoryServices.AccountManagement.Principal.DistinguishedName*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Principal.Equals(Object)
  fullName: System.DirectoryServices.AccountManagement.Principal.Equals(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retorna um valor booleano que especifica se o objeto fornecido é igual ao objeto atual."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> objeto que é comparado com a instância atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto fornecido e objetos de entidade de segurança atuais representam a mesma entidade subjacente em armazenamento. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.AccountManagement.Principal.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  id: ExtensionGet(System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ExtensionGet(String)
  nameWithType: Principal.ExtensionGet(String)
  fullName: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Recupera um atributo de um objeto de classe estendida."
  syntax:
    content: protected object[] ExtensionGet (string attribute);
    parameters:
    - id: attribute
      type: System.String
      description: "O nome do atributo para recuperar."
    return:
      type: System.Object[]
      description: "Retorna uma matriz de objetos, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não existe nenhum atributo com esse nome. Consulte [System.DirectoryServices.AccountManagement princípio extensões](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00) para obter um exemplo sobre como usar essa função."
  overload: System.DirectoryServices.AccountManagement.Principal.ExtensionGet*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  id: ExtensionSet(System.String,System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ExtensionSet(String,Object)
  nameWithType: Principal.ExtensionSet(String,Object)
  fullName: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(String,Object)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Define o valor de um atributo em uma classe estendida."
  remarks: "Consulte [System.DirectoryServices.AccountManagement princípio extensões](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00) para obter um exemplo dessa função."
  syntax:
    content: protected void ExtensionSet (string attribute, object value);
    parameters:
    - id: attribute
      type: System.String
      description: "O nome do atributo."
    - id: value
      type: System.Object
      description: "O objeto que contém o valor do atributo."
  overload: System.DirectoryServices.AccountManagement.Principal.ExtensionSet*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: Principal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(PrincipalContext,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retorna um objeto de entidade que corresponda ao valor de identidade especificado."
  syntax:
    content: public static System.DirectoryServices.AccountManagement.Principal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio no qual as operações são executadas."
    - id: identityValue
      type: System.String
      description: "A identidade da entidade de segurança. Esse parâmetro pode ser qualquer formato que está contido no <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> enumeração."
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "Um <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> que corresponda ao valor de identidade especificado e o tipo de objeto ou nulo se nenhuma correspondência for encontrada."
  overload: System.DirectoryServices.AccountManagement.Principal.FindByIdentity*
  exceptions:
  - type: System.MultipleMatchesException
    commentId: T:System.MultipleMatchesException
    description: "Foram encontrados vários objetos de entidade correspondente do objeto atual."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: Principal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(PrincipalContext,IdentityType,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retorna um objeto de entidade que corresponda ao tipo de identidade especificado e o valor. Esta versão do método FindByIdentity determina o formato do valor de identidade."
  syntax:
    content: public static System.DirectoryServices.AccountManagement.Principal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio no qual as operações são executadas."
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: "Um <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> valor de enumeração que especifica o formato da `identityValue` parâmetro."
    - id: identityValue
      type: System.String
      description: "A identidade da entidade de segurança. Esse parâmetro pode ser qualquer formato que está contido no <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> enumeração."
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "Um <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> que corresponda ao valor de identidade especificado e o tipo de objeto ou nulo se nenhuma correspondência for encontrada."
  overload: System.DirectoryServices.AccountManagement.Principal.FindByIdentity*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: "Foram encontrados vários objetos de entidade correspondente do objeto atual."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O tipo de identidade não é válido <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> valor de enumeração."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  id: FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: FindByIdentityWithType(PrincipalContext,Type,String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext,Type,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(PrincipalContext,Type,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retorna um objeto de entidade que corresponda ao tipo de identidade especificado e o valor. Este método é chamado pela implementação de classe derivada **FindByIdentity** método para restringir a pesquisa para o tipo de classe derivada e não se destina a ser chamado diretamente no seu código."
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.Principal FindByIdentityWithType (System.DirectoryServices.AccountManagement.PrincipalContext context, Type principalType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio no qual as operações são executadas."
    - id: principalType
      type: System.Type
      description: "O tipo de objeto para o qual os resultados são retornados. Isso deve ser do tipo <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> ou um tipo derivado de <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> classe."
    - id: identityValue
      type: System.String
      description: "A identidade da entidade de segurança."
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "Um <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> que corresponda ao valor de identidade especificado e o tipo de objeto ou nulo se nenhuma correspondência for encontrada."
  overload: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retorna um objeto de entidade que corresponda ao tipo de identidade especificado e o valor. Este método é chamado pela implementação de classe derivada **FindByIdentity** método para restringir a pesquisa para o tipo de classe derivada e não se destina a ser chamado diretamente no seu código."
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.Principal FindByIdentityWithType (System.DirectoryServices.AccountManagement.PrincipalContext context, Type principalType, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio no qual as operações são executadas."
    - id: principalType
      type: System.Type
      description: "O tipo de objeto para o qual os resultados são retornados. Isso deve ser do tipo <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> ou um tipo derivado de <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> classe."
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: "Um <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> valor de enumeração que especifica o tipo do valor de identidade."
    - id: identityValue
      type: System.String
      description: "A identidade da entidade de segurança."
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "Um <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> que corresponda ao valor de identidade especificado e o tipo de objeto ou nulo se nenhuma correspondência for encontrada."
  overload: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups
  id: GetGroups
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetGroups()
  nameWithType: Principal.GetGroups()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetGroups()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retorna uma coleção de objetos de grupo que especifique os grupos dos quais o servidor principal atual é membro."
  remarks: "Esse método retorna somente os grupos dos quais a entidade é membro direto; Nenhuma pesquisa recursiva é executada. Resultados da pesquisa recursiva estão disponíveis para objetos de usuário. Para obter mais informações, consulte o <xref:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups%2A>método.</xref:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups%2A>       Os grupos que são retornados por este método podem incluir grupos de um escopo diferente e armazenamento que a entidade de segurança. Por exemplo, se a entidade de segurança é um objeto do AD DS que tem um DN de &quot;CN = SpecialGroups, DC = Fabrikam, DC = com, o conjunto retornado pode conter grupos aos quais pertence o&quot; CN = NormalGroups, DC = Fabrikam, DC = com.       Se a entidade atual for uma entidade de segurança do AD DS, os grupos retornados incluem o grupo primário de entidades de segurança, conforme indicado pelo atributo &quot;primaryGroupId&quot; no objeto do AD DS."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetGroups ();
    parameters: []
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: "Uma coleção de <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref> objetos que especifique os grupos dos quais o servidor principal atual é membro."
  overload: System.DirectoryServices.AccountManagement.Principal.GetGroups*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetGroups(PrincipalContext)
  nameWithType: Principal.GetGroups(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.Principal.GetGroups(PrincipalContext)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retorna uma coleção de objetos de grupo que a entidade é membro e que existe no repositório de fornecido pelo parâmetro de contexto especificado."
  remarks: "Esse método retorna somente os grupos dos quais a entidade é membro direto; Nenhuma pesquisa recursiva é executada. Resultados da pesquisa recursiva estão disponíveis para objetos de usuário. Para obter mais informações, consulte o <xref:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups%2A>método.</xref:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups%2A>       Os grupos que são retornados por este método podem incluir grupos de um escopo diferente e armazenamento que a entidade de segurança. Por exemplo, se a entidade de segurança é um objeto do AD DS que tem um DN de &quot;CN = SpecialGroups, DC = Fabrikam, DC = com, o conjunto retornado pode conter grupos aos quais pertence o&quot; CN = NormalGroups, DC = Fabrikam, DC = com.       Se a entidade atual for uma entidade de segurança do AD DS, os grupos retornados incluem o grupo primário de entidades de segurança conforme indicado pelo atributo de ID de grupo primário no objeto do AD DS."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetGroups (System.DirectoryServices.AccountManagement.PrincipalContext contextToQuery);
    parameters:
    - id: contextToQuery
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> objeto que especifica o contexto no qual a consulta é executada.       Quando o contexto está localizado em outro domínio, a consulta é executada em relação a representação dos objetos principal no contexto especificado."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: "Uma coleção de <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref> objetos que especifique os grupos dos quais o servidor principal atual é membro."
  overload: System.DirectoryServices.AccountManagement.Principal.GetGroups*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetHashCode
  id: GetHashCode
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Principal.GetHashCode()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetHashCode()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Recupera o hash criado a partir do conteúdo do objeto principal, adequado para uso em algoritmos e estruturas de dados como uma tabela de hash de hash."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash para o servidor principal atual."
  overload: System.DirectoryServices.AccountManagement.Principal.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  id: GetUnderlyingObject
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetUnderlyingObject()
  nameWithType: Principal.GetUnderlyingObject()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retorna o subjacente <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objeto que fornece os dados de contato para o objeto principal."
  syntax:
    content: public object GetUnderlyingObject ();
    parameters: []
    return:
      type: System.Object
      description: "Subjacente <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objeto."
  overload: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject*
  exceptions:
  - type: system.InvalidOperationExtension
    commentId: T:system.InvalidOperationExtension
    description: "A entidade de segurança atual não é persistente e não tem um tipo de <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objeto."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  id: GetUnderlyingObjectType
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetUnderlyingObjectType()
  nameWithType: Principal.GetUnderlyingObjectType()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retorna o tipo de objeto subjacente."
  syntax:
    content: public Type GetUnderlyingObjectType ();
    parameters: []
    return:
      type: System.Type
      description: "O tipo de objeto subjacente. Para o AD DS e AD LDS SAM o tipo é <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>."
  overload: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Guid
  id: Guid
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Guid
  nameWithType: Principal.Guid
  fullName: System.DirectoryServices.AccountManagement.Principal.Guid
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém o GUID associado a esta entidade."
  remarks: "Essa propriedade sempre retorna null quando o <xref:System.DirectoryServices.AccountManagement.Principal.ContextType%2A>estiver definida como máquina.</xref:System.DirectoryServices.AccountManagement.Principal.ContextType%2A>"
  syntax:
    content: public Nullable<Guid> Guid { get; }
    return:
      type: System.Nullable{System.Guid}
      description: "O Nullable <xref:System.Guid>associado essa entidade ou nulo se não houver nenhum GUID.</xref:System.Guid>"
  overload: System.DirectoryServices.AccountManagement.Principal.Guid*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  id: IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: IsMemberOf(GroupPrincipal)
  nameWithType: Principal.IsMemberOf(GroupPrincipal)
  fullName: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(GroupPrincipal)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retorna um valor booleano que especifica se a entidade é um membro do grupo especificado."
  remarks: "Se a entidade atual for uma entidade de segurança do AD DS, os grupos retornados incluem o grupo primário do servidor principal, conforme indicado pelo atributo de ID de grupo primário no objeto do AD DS."
  syntax:
    content: public bool IsMemberOf (System.DirectoryServices.AccountManagement.GroupPrincipal group);
    parameters:
    - id: group
      type: System.DirectoryServices.AccountManagement.GroupPrincipal
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref> objeto para o qual associação principal é determinada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a entidade for um membro do grupo especificado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.AccountManagement.Principal.IsMemberOf*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    commentId: T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref> especificados no grupo de parâmetro não pôde ser encontrado."
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: "Mais de uma correspondência <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref> foi encontrado."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: IsMemberOf(PrincipalContext,IdentityType,String)
  nameWithType: Principal.IsMemberOf(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(PrincipalContext,IdentityType,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retorna um valor booleano que especifica se a entidade é um membro do grupo especificado por valor e o tipo de identidade."
  remarks: "Se a entidade atual for uma entidade de segurança do AD DS, os grupos retornados incluem o grupo primário do servidor principal, conforme indicado pelo atributo de ID de grupo primário no objeto do AD DS."
  syntax:
    content: public bool IsMemberOf (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio no qual as operações são executadas."
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: "Um <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> valor de enumeração que especifica o tipo do valor de identidade."
    - id: identityValue
      type: System.String
      description: "A identidade do grupo."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a entidade for um membro do grupo especificado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.AccountManagement.Principal.IsMemberOf*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    commentId: T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    description: "O tipo de identidade ou o valor não corresponde a um <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref>."
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: "Mais de uma correspondência <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref> foi encontrado."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Name
  id: Name
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Name
  nameWithType: Principal.Name
  fullName: System.DirectoryServices.AccountManagement.Principal.Name
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o nome dessa entidade."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome da entidade de segurança ou null se o atributo de nome não está definido."
  overload: System.DirectoryServices.AccountManagement.Principal.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O aplicativo tentou definir o nome como nulo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não oferece suporte a essa propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.SamAccountName
  id: SamAccountName
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: SamAccountName
  nameWithType: Principal.SamAccountName
  fullName: System.DirectoryServices.AccountManagement.Principal.SamAccountName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o nome de conta SAM para essa entidade."
  syntax:
    content: public string SamAccountName { get; set; }
    return:
      type: System.String
      description: "O nome de conta SAM para essa entidade de segurança ou null se nenhum nome tiver sido definido."
  overload: System.DirectoryServices.AccountManagement.Principal.SamAccountName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O aplicativo tentou definir o nome de conta SAM como nulo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O aplicativo tentou definir o nome de conta SAM em uma entidade de segurança persistente."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Save
  id: Save
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Save()
  nameWithType: Principal.Save()
  fullName: System.DirectoryServices.AccountManagement.Principal.Save()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Salva as alterações feitas no objeto principal para o armazenamento. Se esse for um novo objeto principal, esse método insere no repositório."
  syntax:
    content: public void Save ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.Save*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A entidade de segurança ainda não foi associada com um <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> objeto.       Esse tipo de principal não pode ser inserido no repositório de."
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "Ocorreu uma exceção ao salvar alterações tnso o repositório ou atualizar a associação de grupo no repositório."
  - type: System.DirectoryServices.AccountManagement.PrincipalExistsException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalExistsException
    description: "A entidade de segurança já está no repositório."
  - type: System.DirectoryServices.AccountManagement.PasswordException
    commentId: T:System.DirectoryServices.AccountManagement.PasswordException
    description: "A senha não atende aos requisitos de complexidade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Save(PrincipalContext)
  nameWithType: Principal.Save(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.Principal.Save(PrincipalContext)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Salva as alterações feitas no objeto principal para o armazenamento. Se esse for um novo objeto principal, esse método insere no contexto especificado. Se a entidade de segurança já havia sido persistida, ele é movido do contexto original para o contexto especificado."
  remarks: "Se o contexto de entidade especificado é diferente do contexto existente, a entidade de segurança é movida para o contexto especificado e o objeto principal não está localizado no local antigo. Se o contexto especificado é idêntico ao contexto existente, este método salva as atualizações que foram feitas no objeto principal para o armazenamento. O tipo de contexto do contexto especificado deve ser o mesmo tipo que o tipo de contexto atual. Este método não pode ser chamado usando o tipo de contexto do computador."
  syntax:
    content: public void Save (System.DirectoryServices.AccountManagement.PrincipalContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio no qual as operações são executadas."
  overload: System.DirectoryServices.AccountManagement.Principal.Save*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A entidade de segurança ainda não foi associada com um <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> objeto.       Esse tipo de principal não pode ser inserido no repositório de."
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "Ocorreu uma exceção ao salvar alterações para o repositório ou atualizar a associação de grupo no repositório."
  - type: System.DirectoryServices.AccountManagement.PrincipalExistsException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalExistsException
    description: "A entidade de segurança já está no repositório."
  - type: System.DirectoryServices.AccountManagement.PasswordException
    commentId: T:System.DirectoryServices.AccountManagement.PasswordException
    description: "A senha não atende aos requisitos de complexidade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Sid
  id: Sid
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Sid
  nameWithType: Principal.Sid
  fullName: System.DirectoryServices.AccountManagement.Principal.Sid
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém a ID de segurança (SID) da entidade de segurança."
  syntax:
    content: public System.Security.Principal.SecurityIdentifier Sid { get; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> para essa entidade de segurança ou nulo se não houver nenhum SID."
  overload: System.DirectoryServices.AccountManagement.Principal.Sid*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  id: StructuralObjectClass
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: StructuralObjectClass
  nameWithType: Principal.StructuralObjectClass
  fullName: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém o atributo de diretório de classe do objeto estrutural."
  syntax:
    content: public string StructuralObjectClass { get; }
    return:
      type: System.String
      description: "O atributo de diretório de classe do objeto estrutural."
  overload: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ToString
  id: ToString
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ToString()
  nameWithType: Principal.ToString()
  fullName: System.DirectoryServices.AccountManagement.Principal.ToString()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retorna uma representação de cadeia de caracteres amigável de usuário do objeto principal atual."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma representação de cadeia de caracteres do atual <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> objeto."
  overload: System.DirectoryServices.AccountManagement.Principal.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  id: UserPrincipalName
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: UserPrincipalName
  nameWithType: Principal.UserPrincipalName
  fullName: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o nome principal do usuário (UPN) associado a esta entidade."
  remarks: "Configurar essa propriedade como null remove o UPN existente, se houver."
  syntax:
    content: public string UserPrincipalName { get; set; }
    return:
      type: System.String
      description: "O UPN associado a essa entidade de segurança ou nulo se não se o UPN não foi definido."
  overload: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName*
  exceptions:
  - type: System.Inval>DidOperationException
    commentId: T:System.Inval>DidOperationException
    description: "O repositório subjacente não oferece suporte a essa propriedade."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.MultipleMatchesException
  isExternal: true
  name: System.MultipleMatchesException
- uid: System.DirectoryServices.AccountManagement.MultipleMatchesException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MultipleMatchesException
  nameWithType: MultipleMatchesException
  fullName: System.DirectoryServices.AccountManagement.MultipleMatchesException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: system.InvalidOperationExtension
  isExternal: true
  name: system.InvalidOperationExtension
- uid: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: NoMatchingPrincipalException
  nameWithType: NoMatchingPrincipalException
  fullName: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.AccountManagement.PrincipalOperationException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalOperationException
  nameWithType: PrincipalOperationException
  fullName: System.DirectoryServices.AccountManagement.PrincipalOperationException
- uid: System.DirectoryServices.AccountManagement.PrincipalExistsException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalExistsException
  nameWithType: PrincipalExistsException
  fullName: System.DirectoryServices.AccountManagement.PrincipalExistsException
- uid: System.DirectoryServices.AccountManagement.PasswordException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PasswordException
  nameWithType: PasswordException
  fullName: System.DirectoryServices.AccountManagement.PasswordException
- uid: System.Inval>DidOperationException
  isExternal: true
  name: System.Inval>DidOperationException
- uid: System.DirectoryServices.AccountManagement.Principal.#ctor
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Principal()
  nameWithType: Principal.Principal()
  fullName: System.DirectoryServices.AccountManagement.Principal.Principal()
- uid: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: CheckDisposedOrDeleted()
  nameWithType: Principal.CheckDisposedOrDeleted()
  fullName: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted()
- uid: System.DirectoryServices.AccountManagement.Principal.Context
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Context
  nameWithType: Principal.Context
  fullName: System.DirectoryServices.AccountManagement.Principal.Context
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DirectoryServices.AccountManagement.Principal.ContextRaw
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextRaw
  nameWithType: Principal.ContextRaw
  fullName: System.DirectoryServices.AccountManagement.Principal.ContextRaw
- uid: System.DirectoryServices.AccountManagement.Principal.ContextType
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextType
  nameWithType: Principal.ContextType
  fullName: System.DirectoryServices.AccountManagement.Principal.ContextType
- uid: System.DirectoryServices.AccountManagement.ContextType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: ContextType
  nameWithType: ContextType
  fullName: System.DirectoryServices.AccountManagement.ContextType
- uid: System.DirectoryServices.AccountManagement.Principal.Delete
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Delete()
  nameWithType: Principal.Delete()
  fullName: System.DirectoryServices.AccountManagement.Principal.Delete()
- uid: System.DirectoryServices.AccountManagement.Principal.Description
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Description
  nameWithType: Principal.Description
  fullName: System.DirectoryServices.AccountManagement.Principal.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.AccountManagement.Principal.DisplayName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DisplayName
  nameWithType: Principal.DisplayName
  fullName: System.DirectoryServices.AccountManagement.Principal.DisplayName
- uid: System.DirectoryServices.AccountManagement.Principal.Dispose
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Dispose()
  nameWithType: Principal.Dispose()
  fullName: System.DirectoryServices.AccountManagement.Principal.Dispose()
- uid: System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DistinguishedName
  nameWithType: Principal.DistinguishedName
  fullName: System.DirectoryServices.AccountManagement.Principal.DistinguishedName
- uid: System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Equals(Object)
  nameWithType: Principal.Equals(Object)
  fullName: System.DirectoryServices.AccountManagement.Principal.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionGet(String)
  nameWithType: Principal.ExtensionGet(String)
  fullName: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(String)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionSet(String,Object)
  nameWithType: Principal.ExtensionSet(String,Object)
  fullName: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(String,Object)
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: Principal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(PrincipalContext,String)
- uid: System.DirectoryServices.AccountManagement.Principal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: Principal
  nameWithType: Principal
  fullName: System.DirectoryServices.AccountManagement.Principal
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: Principal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(PrincipalContext,IdentityType,String)
- uid: System.DirectoryServices.AccountManagement.IdentityType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: IdentityType
  nameWithType: IdentityType
  fullName: System.DirectoryServices.AccountManagement.IdentityType
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentityWithType(PrincipalContext,Type,String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext,Type,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(PrincipalContext,Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetGroups()
  nameWithType: Principal.GetGroups()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetGroups()
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<Principal>
  nameWithType: PrincipalSearchResult<Principal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.Principal
    name: Principal
    nameWithType: Principal
    fullName: Principal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetGroups(PrincipalContext)
  nameWithType: Principal.GetGroups(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.Principal.GetGroups(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.Principal.GetHashCode
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetHashCode()
  nameWithType: Principal.GetHashCode()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObject()
  nameWithType: Principal.GetUnderlyingObject()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject()
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObjectType()
  nameWithType: Principal.GetUnderlyingObjectType()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType()
- uid: System.DirectoryServices.AccountManagement.Principal.Guid
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Guid
  nameWithType: Principal.Guid
  fullName: System.DirectoryServices.AccountManagement.Principal.Guid
- uid: System.Nullable{System.Guid}
  parent: System
  isExternal: true
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Guid>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: IsMemberOf(GroupPrincipal)
  nameWithType: Principal.IsMemberOf(GroupPrincipal)
  fullName: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(GroupPrincipal)
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: GroupPrincipal
  nameWithType: GroupPrincipal
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: IsMemberOf(PrincipalContext,IdentityType,String)
  nameWithType: Principal.IsMemberOf(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(PrincipalContext,IdentityType,String)
- uid: System.DirectoryServices.AccountManagement.Principal.Name
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Name
  nameWithType: Principal.Name
  fullName: System.DirectoryServices.AccountManagement.Principal.Name
- uid: System.DirectoryServices.AccountManagement.Principal.SamAccountName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: SamAccountName
  nameWithType: Principal.SamAccountName
  fullName: System.DirectoryServices.AccountManagement.Principal.SamAccountName
- uid: System.DirectoryServices.AccountManagement.Principal.Save
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Save()
  nameWithType: Principal.Save()
  fullName: System.DirectoryServices.AccountManagement.Principal.Save()
- uid: System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Save(PrincipalContext)
  nameWithType: Principal.Save(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.Principal.Save(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.Principal.Sid
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Sid
  nameWithType: Principal.Sid
  fullName: System.DirectoryServices.AccountManagement.Principal.Sid
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: StructuralObjectClass
  nameWithType: Principal.StructuralObjectClass
  fullName: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
- uid: System.DirectoryServices.AccountManagement.Principal.ToString
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ToString()
  nameWithType: Principal.ToString()
  fullName: System.DirectoryServices.AccountManagement.Principal.ToString()
- uid: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: UserPrincipalName
  nameWithType: Principal.UserPrincipalName
  fullName: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
- uid: System.DirectoryServices.AccountManagement.Principal.#ctor*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Principal
  nameWithType: Principal.Principal
- uid: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: CheckDisposedOrDeleted
  nameWithType: Principal.CheckDisposedOrDeleted
- uid: System.DirectoryServices.AccountManagement.Principal.Context*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Context
  nameWithType: Principal.Context
- uid: System.DirectoryServices.AccountManagement.Principal.ContextRaw*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextRaw
  nameWithType: Principal.ContextRaw
- uid: System.DirectoryServices.AccountManagement.Principal.ContextType*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextType
  nameWithType: Principal.ContextType
- uid: System.DirectoryServices.AccountManagement.Principal.Delete*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Delete
  nameWithType: Principal.Delete
- uid: System.DirectoryServices.AccountManagement.Principal.Description*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Description
  nameWithType: Principal.Description
- uid: System.DirectoryServices.AccountManagement.Principal.DisplayName*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DisplayName
  nameWithType: Principal.DisplayName
- uid: System.DirectoryServices.AccountManagement.Principal.Dispose*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Dispose
  nameWithType: Principal.Dispose
- uid: System.DirectoryServices.AccountManagement.Principal.DistinguishedName*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DistinguishedName
  nameWithType: Principal.DistinguishedName
- uid: System.DirectoryServices.AccountManagement.Principal.Equals*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Equals
  nameWithType: Principal.Equals
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionGet*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionGet
  nameWithType: Principal.ExtensionGet
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionSet*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionSet
  nameWithType: Principal.ExtensionSet
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentity
  nameWithType: Principal.FindByIdentity
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentityWithType
  nameWithType: Principal.FindByIdentityWithType
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetGroups
  nameWithType: Principal.GetGroups
- uid: System.DirectoryServices.AccountManagement.Principal.GetHashCode*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetHashCode
  nameWithType: Principal.GetHashCode
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObject
  nameWithType: Principal.GetUnderlyingObject
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObjectType
  nameWithType: Principal.GetUnderlyingObjectType
- uid: System.DirectoryServices.AccountManagement.Principal.Guid*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Guid
  nameWithType: Principal.Guid
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: IsMemberOf
  nameWithType: Principal.IsMemberOf
- uid: System.DirectoryServices.AccountManagement.Principal.Name*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Name
  nameWithType: Principal.Name
- uid: System.DirectoryServices.AccountManagement.Principal.SamAccountName*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: SamAccountName
  nameWithType: Principal.SamAccountName
- uid: System.DirectoryServices.AccountManagement.Principal.Save*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Save
  nameWithType: Principal.Save
- uid: System.DirectoryServices.AccountManagement.Principal.Sid*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Sid
  nameWithType: Principal.Sid
- uid: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: StructuralObjectClass
  nameWithType: Principal.StructuralObjectClass
- uid: System.DirectoryServices.AccountManagement.Principal.ToString*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ToString
  nameWithType: Principal.ToString
- uid: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: UserPrincipalName
  nameWithType: Principal.UserPrincipalName
