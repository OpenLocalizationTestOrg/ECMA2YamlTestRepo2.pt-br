### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CspParameters
  id: CspParameters
  children:
  - System.Security.Cryptography.CspParameters.#ctor
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)
  - System.Security.Cryptography.CspParameters.CryptoKeySecurity
  - System.Security.Cryptography.CspParameters.Flags
  - System.Security.Cryptography.CspParameters.KeyContainerName
  - System.Security.Cryptography.CspParameters.KeyNumber
  - System.Security.Cryptography.CspParameters.KeyPassword
  - System.Security.Cryptography.CspParameters.ParentWindowHandle
  - System.Security.Cryptography.CspParameters.ProviderName
  - System.Security.Cryptography.CspParameters.ProviderType
  langs:
  - csharp
  name: CspParameters
  nameWithType: CspParameters
  fullName: System.Security.Cryptography.CspParameters
  type: Class
  summary: "Contém parâmetros que são passados para o provedor de serviços de criptografia (CSP) que executa cálculos criptográficos. Essa classe não pode ser herdada."
  remarks: "A classe CspParameters representa os parâmetros que você pode passar para classes de criptografia gerenciadas que internamente usa provedores de serviços criptográficos do Microsoft (CSPs) de não gerenciado Microsoft CAPI (Cryptography API). Classes com nomes que terminam em &quot;CryptoServiceProvider&quot; são wrappers de código gerenciado para o CSP correspondente.       Use a classe CspParameters para fazer o seguinte:-especificar um CSP específico passando o tipo de provedor para o <xref:System.Security.Cryptography.CspParameters.ProviderType>ou <xref:System.Security.Cryptography.CspParameters.ProviderName>propriedade.</xref:System.Security.Cryptography.CspParameters.ProviderName> </xref:System.Security.Cryptography.CspParameters.ProviderType>  Você também pode especificar um CSP usando uma sobrecarga de construtor.      -Crie um contêiner de chave onde você pode armazenar chaves de criptografia.  Contêineres de chave fornecem a maneira mais segura para manter as chaves de criptografia e mantê-los secreta de terceiros mal-intencionado.  Para obter mais informações sobre como criar contêineres de chave, consulte [como: repositório de chaves assimétricas em um contêiner de chave](~/add/includes/ajax-current-ext-md.md).      -Especifique se deseja criar uma chave de assinatura assimétrica ou uma chave de troca assimétrica usando o <xref:System.Security.Cryptography.CspParameters.KeyNumber>propriedade.</xref:System.Security.Cryptography.CspParameters.KeyNumber>"
  example:
  - "The following code example creates a key container using the CspParameters class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/t-system.security.crypto_47_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_47_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/t-system.security.crypto_47_1.cs)]  \n  \n The following code example uses the CspParameters class to select a Smart Card Cryptographic Service Provider.  It then signs and verifies data using the smart card.  \n  \n [!code-cs[Cryptography.SmartCardCSP#1](~/add/codesnippet/csharp/t-system.security.crypto_47_2.cs)]\n [!code-cpp[Cryptography.SmartCardCSP#1](~/add/codesnippet/cpp/t-system.security.crypto_47_2.cpp)]\n [!code-vb[Cryptography.SmartCardCSP#1](~/add/codesnippet/visualbasic/t-system.security.crypto_47_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class CspParameters
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters()
  nameWithType: CspParameters.CspParameters()
  fullName: System.Security.Cryptography.CspParameters.CspParameters()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> classe."
  remarks: "Essa forma de CspParameters inicializa o <xref:System.Security.Cryptography.CspParameters.ProviderType>campo com um valor de `24`, que especifica o provedor PROV_RSA_AES.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Este provedor padrão é compatível com o <xref:System.Security.Cryptography.Aes>algoritmo.</xref:System.Security.Cryptography.Aes>       Para obter informações sobre outros tipos de provedor, consulte o <xref:System.Security.Cryptography.CspParameters.ProviderType>campo.</xref:System.Security.Cryptography.CspParameters.ProviderType>"
  example:
  - "The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/m-system.security.crypto_108_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_108_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/m-system.security.crypto_108_1.cs)]"
  syntax:
    content: public CspParameters ();
    parameters: []
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32)
  nameWithType: CspParameters.CspParameters(Int32)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> classe com o código de tipo de provedor especificado."
  remarks: "Use o construtor CspParameters para especificar um tipo de provedor passando um valor numérico que representa o provedor.  Os valores numéricos que representam os tipos de provedor padrão são definidos no arquivo de cabeçalho WinCrypt.h: - para especificar um provedor compatível com o <xref:System.Security.Cryptography.RSA>algoritmo, passe um valor de `1`para o `dwTypeIn` parâmetro.</xref:System.Security.Cryptography.RSA>      -Para especificar um provedor compatível com o <xref:System.Security.Cryptography.DSA>algoritmo, passe um valor de `13`para o `dwTypeIn` parâmetro.</xref:System.Security.Cryptography.DSA>       Para obter informações sobre outros valores de tipo de provedor, consulte o <xref:System.Security.Cryptography.CspParameters.ProviderType>campo.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Para obter mais informações sobre os tipos de provedor padrão e seus comportamentos, consulte a documentação do Microsoft CAPI (Cryptography API) na biblioteca MSDN."
  example:
  - "The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/m-system.security.crypto_129_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_129_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/m-system.security.crypto_129_1.cs)]"
  syntax:
    content: public CspParameters (int dwTypeIn);
    parameters:
    - id: dwTypeIn
      type: System.Int32
      description: "Um código de tipo de provedor que especifica o tipo de provedor para criar."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String)
  nameWithType: CspParameters.CspParameters(Int32,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> classe com o nome e o código de tipo de provedor especificado."
  remarks: "Use o construtor CspParameters para especificar um tipo de provedor e um nome.       Especifique um tipo de provedor passando um valor numérico que representa o tipo de provedor desejado.  Os valores numéricos que representam os tipos de provedor padrão são definidos no arquivo de cabeçalho WinCrypt.h: - para especificar um provedor compatível com o <xref:System.Security.Cryptography.RSA>algoritmo, passe um valor de `1`para o `dwTypeIn` parâmetro.</xref:System.Security.Cryptography.RSA>      -Para especificar um provedor compatível com o <xref:System.Security.Cryptography.DSA>algoritmo, passe um valor de `13`para o `dwTypeIn` parâmetro.</xref:System.Security.Cryptography.DSA>       Para obter informações sobre outros valores de tipo de provedor, consulte o <xref:System.Security.Cryptography.CspParameters.ProviderType>campo.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Para obter mais informações sobre os tipos de provedor padrão e seus comportamentos, consulte a documentação do Microsoft CAPI (Cryptography API) na biblioteca MSDN."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.  It then signs and verifies data using the smart card.  \n  \n [!code-cs[Cryptography.SmartCardCSP#1](~/add/codesnippet/csharp/3115faba-ad85-4109-97d8-_1.cs)]\n [!code-cpp[Cryptography.SmartCardCSP#1](~/add/codesnippet/cpp/3115faba-ad85-4109-97d8-_1.cpp)]\n [!code-vb[Cryptography.SmartCardCSP#1](~/add/codesnippet/visualbasic/3115faba-ad85-4109-97d8-_1.vb)]"
  syntax:
    content: public CspParameters (int dwTypeIn, string strProviderNameIn);
    parameters:
    - id: dwTypeIn
      type: System.Int32
      description: "Um código de tipo de provedor que especifica o tipo de provedor para criar."
    - id: strProviderNameIn
      type: System.String
      description: "Um nome de provedor."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)
  id: '#ctor(System.Int32,System.String,System.String)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String,String)
  nameWithType: CspParameters.CspParameters(Int32,String,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> classe com o código de tipo de provedor especificado e o nome e o nome do contêiner especificado."
  remarks: "Use o construtor CspParameters para especificar um tipo de provedor, um nome de provedor e um nome de contêiner.       Você pode usar o nome do contêiner para recuperar uma chave dentro do contêiner.       Especifique um tipo de provedor passando um valor numérico que representa o tipo de provedor desejado.  Os valores numéricos que representam os tipos de provedor padrão são definidos no arquivo de cabeçalho WinCrypt.h: - para especificar um provedor compatível com o <xref:System.Security.Cryptography.RSA>algoritmo, passe um valor de `1`para o `dwTypeIn` parâmetro.</xref:System.Security.Cryptography.RSA>      -Para especificar um provedor compatível com o <xref:System.Security.Cryptography.DSA>algoritmo, passe um valor de `13`para o `dwTypeIn` parâmetro.</xref:System.Security.Cryptography.DSA>       Para obter informações sobre outros valores de tipo de provedor, consulte o <xref:System.Security.Cryptography.CspParameters.ProviderType>campo.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Para obter mais informações sobre os tipos de provedor padrão e seus comportamentos, consulte a documentação do Microsoft CAPI (Cryptography API) na biblioteca MSDN."
  syntax:
    content: public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);
    parameters:
    - id: dwTypeIn
      type: System.Int32
      description: "O código de tipo de provedor que especifica o tipo de provedor para criar."
    - id: strProviderNameIn
      type: System.String
      description: "Um nome de provedor."
    - id: strContainerNameIn
      type: System.String
      description: "Um nome de contêiner."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)
  id: '#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> classe usando um tipo de provedor, um nome de provedor, um nome de contêiner, informações de acesso e um identificador para uma caixa de diálogo de senha do cartão de inteligente não gerenciado."
  remarks: "Você pode usar o nome do contêiner para recuperar uma chave dentro do contêiner.       Especifique um tipo de provedor passando um valor numérico que representa o tipo de provedor desejado.  Os valores numéricos que representam os tipos de provedor padrão são definidos no arquivo de cabeçalho WinCrypt.h: - para especificar um provedor compatível com o <xref:System.Security.Cryptography.RSA>algoritmo, passe um valor de `1`para o `dwTypeIn` parâmetro.</xref:System.Security.Cryptography.RSA>      -Para especificar um provedor compatível com o <xref:System.Security.Cryptography.DSA>algoritmo, passe um valor de `13`para o `dwTypeIn` parâmetro.</xref:System.Security.Cryptography.DSA>       Para obter informações sobre outros valores de tipo de provedor, consulte o <xref:System.Security.Cryptography.CspParameters.ProviderType>campo.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Para obter mais informações sobre os tipos de provedor padrão e seus comportamentos, consulte a documentação do Microsoft CAPI (Cryptography API) na biblioteca MSDN."
  syntax:
    content: public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);
    parameters:
    - id: providerType
      type: System.Int32
      description: "O código de tipo de provedor que especifica o tipo de provedor para criar."
    - id: providerName
      type: System.String
      description: "Um nome de provedor."
    - id: keyContainerName
      type: System.String
      description: "Um nome de contêiner."
    - id: cryptoKeySecurity
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "Um objeto que representa acesso direitos e auditoria regras para o contêiner."
    - id: parentWindowHandle
      type: System.IntPtr
      description: "Um identificador para a janela pai para uma caixa de diálogo de senha do cartão inteligente."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)
  id: '#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> classe usando um tipo de provedor, um nome de provedor, um nome de contêiner, informações de acesso e uma senha associada a uma chave de cartão inteligente."
  remarks: "Você pode usar o nome do contêiner para recuperar uma chave dentro do contêiner.       Especifique um tipo de provedor passando um valor numérico que representa o tipo de provedor desejado.  Os valores numéricos que representam os tipos de provedor padrão são definidos no arquivo de cabeçalho WinCrypt.h: - para especificar um provedor compatível com o <xref:System.Security.Cryptography.RSA>algoritmo, passe um valor de `1`para o `dwTypeIn` parâmetro.</xref:System.Security.Cryptography.RSA>      -Para especificar um provedor compatível com o <xref:System.Security.Cryptography.DSA>algoritmo, passe um valor de `13`para o `dwTypeIn` parâmetro.</xref:System.Security.Cryptography.DSA>       Para obter informações sobre outros valores de tipo de provedor, consulte o <xref:System.Security.Cryptography.CspParameters.ProviderType>campo.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Para obter mais informações sobre os tipos de provedor padrão e seus comportamentos, consulte a documentação do Microsoft CAPI (Cryptography API) na biblioteca MSDN."
  syntax:
    content: public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);
    parameters:
    - id: providerType
      type: System.Int32
      description: "O código de tipo de provedor que especifica o tipo de provedor para criar."
    - id: providerName
      type: System.String
      description: "Um nome de provedor."
    - id: keyContainerName
      type: System.String
      description: "Um nome de contêiner."
    - id: cryptoKeySecurity
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "Regras de um objeto que representa acesso direitos e auditoria para um contêiner."
    - id: keyPassword
      type: System.Security.SecureString
      description: "Uma senha associada a uma chave de cartão inteligente."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity
  id: CryptoKeySecurity
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CryptoKeySecurity
  nameWithType: CspParameters.CryptoKeySecurity
  fullName: System.Security.Cryptography.CspParameters.CryptoKeySecurity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém ou define um <xref href=&quot;System.Security.AccessControl.CryptoKeySecurity&quot;> </xref> que representa os direitos de acesso e auditoria regras para um contêiner do objeto."
  remarks: "Use a propriedade CryptoKeySecurity para especificar um <xref:System.Security.AccessControl.CryptoKeySecurity>listas de objeto que gerencia a criação do controle de acesso discricionário (DACLS) e listas de controle de acesso de sistema (SACL) para um contêiner.</xref:System.Security.AccessControl.CryptoKeySecurity>"
  syntax:
    content: public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }
    return:
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "Um <xref href=&quot;System.Security.AccessControl.CryptoKeySecurity&quot;> </xref> que representa os direitos de acesso e auditoria regras para um contêiner do objeto."
  overload: System.Security.Cryptography.CspParameters.CryptoKeySecurity*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.Flags
  id: Flags
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: Flags
  nameWithType: CspParameters.Flags
  fullName: System.Security.Cryptography.CspParameters.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Representa os sinalizadores para <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> que modificam o comportamento do provedor de serviços de criptografia (CSP)."
  syntax:
    content: public System.Security.Cryptography.CspProviderFlags Flags { get; set; }
    return:
      type: System.Security.Cryptography.CspProviderFlags
      description: "Um valor de enumeração, ou uma combinação bit a bit dos valores de enumeração."
  overload: System.Security.Cryptography.CspParameters.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Valor não é um valor de enumeração válidos."
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.KeyContainerName
  id: KeyContainerName
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: KeyContainerName
  nameWithType: CspParameters.KeyContainerName
  fullName: System.Security.Cryptography.CspParameters.KeyContainerName
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Representa o nome do contêiner de chave para <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref>."
  remarks: "Use o campo Nome_do_recipiente_de_chaves para especificar um nome para o contêiner de chave.  Você pode usar o nome do contêiner para recuperar a chave persistente dentro do contêiner.       Para obter mais informações sobre como criar contêineres de chave, consulte [como: repositório de chaves assimétricas em um contêiner de chave](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/f-system.security.crypto_6_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/f-system.security.crypto_6_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/f-system.security.crypto_6_1.cs)]"
  syntax:
    content: public string KeyContainerName;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.KeyNumber
  id: KeyNumber
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: KeyNumber
  nameWithType: CspParameters.KeyNumber
  fullName: System.Security.Cryptography.CspParameters.KeyNumber
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Especifica se uma chave assimétrica é criada como uma chave de assinatura ou uma chave de troca."
  remarks: "O campo KeyNumber inicializa o <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A>propriedade quando você inicializar um <xref:System.Security.Cryptography.CspKeyContainerInfo>do objeto com um <xref:System.Security.Cryptography.CspParameters>objeto.</xref:System.Security.Cryptography.CspParameters> </xref:System.Security.Cryptography.CspKeyContainerInfo> </xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A>       Uma troca de chave é um par de chave assimétrico usado para criptografar as chaves de sessão para que eles podem ser com segurança armazenados e trocados com outros usuários.  Você pode usar o <xref:System.Security.Cryptography.KeyNumber>valor (`1`) para especificar uma chave de troca.</xref:System.Security.Cryptography.KeyNumber>  Esse valor corresponde do `AT_KEYEXCHANGE` valor usado de não gerenciado Microsoft Cryptographic API (CAPI).       Uma chave de assinatura é um par de chaves assimétricas, usado para autenticar mensagens assinadas digitalmente ou arquivos.  Você pode usar o <xref:System.Security.Cryptography.KeyNumber>valor (`2`) para especificar uma chave de assinatura.</xref:System.Security.Cryptography.KeyNumber>  Esse valor corresponde do `AT_SIGNATURE` valor usado em CAPI.       Por padrão, o campo KeyNumber Especifica uma chave de troca."
  example:
  - "The following code example demonstrates how to use the <xref:System.Security.Cryptography.KeyNumber> enumeration to specify a key type for an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.  \n  \n [!code-cs[Cryptography.KeyNumber#1](~/add/codesnippet/csharp/f-system.security.crypto_8_1.cs)]\n [!code-cpp[Cryptography.KeyNumber#1](~/add/codesnippet/cpp/f-system.security.crypto_8_1.cpp)]\n [!code-vb[Cryptography.KeyNumber#1](~/add/codesnippet/visualbasic/f-system.security.crypto_8_1.vb)]"
  syntax:
    content: public int KeyNumber;
    return:
      type: System.Int32
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.KeyPassword
  id: KeyPassword
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: KeyPassword
  nameWithType: CspParameters.KeyPassword
  fullName: System.Security.Cryptography.CspParameters.KeyPassword
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém ou define a senha associada com uma chave de cartão inteligente."
  remarks: "Use a propriedade KeyPassword para fornecer uma senha para uma chave de cartão inteligente.  Quando você especificar uma senha usando essa propriedade, uma caixa de diálogo de senha não será apresentada ao usuário."
  syntax:
    content: public System.Security.SecureString KeyPassword { get; set; }
    return:
      type: System.Security.SecureString
      description: "Uma senha associada a uma chave de cartão inteligente."
  overload: System.Security.Cryptography.CspParameters.KeyPassword*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle
  id: ParentWindowHandle
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: ParentWindowHandle
  nameWithType: CspParameters.ParentWindowHandle
  fullName: System.Security.Cryptography.CspParameters.ParentWindowHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém ou define um identificador para a janela pai não gerenciado para uma caixa de diálogo de senha do cartão inteligente."
  remarks: "Use a propriedade ParentWindowHandle para especificar um identificador para a janela pai não gerenciado para uma caixa de diálogo de senha do cartão inteligente.  Quando você especifica um identificador de usar essa propriedade, verá uma caixa de diálogo de senha do cartão inteligente para o usuário.       Você pode evitar a apresentação de uma caixa de diálogo de senha do cartão inteligente especificando explicitamente uma senha usando o <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>propriedade.</xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>"
  syntax:
    content: public IntPtr ParentWindowHandle { get; set; }
    return:
      type: System.IntPtr
      description: "Um identificador para a janela pai para uma caixa de diálogo de senha do cartão inteligente."
  overload: System.Security.Cryptography.CspParameters.ParentWindowHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.ProviderName
  id: ProviderName
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: ProviderName
  nameWithType: CspParameters.ProviderName
  fullName: System.Security.Cryptography.CspParameters.ProviderName
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Representa o nome do provedor <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref>."
  remarks: "Consulte a documentação do Microsoft CAPI (Cryptography API) na biblioteca do MSDN para obter detalhes sobre nomes de provedor."
  syntax:
    content: public string ProviderName;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.ProviderType
  id: ProviderType
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: ProviderType
  nameWithType: CspParameters.ProviderType
  fullName: System.Security.Cryptography.CspParameters.ProviderType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Representa o código de tipo de provedor de <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref>."
  remarks: "Use o campo ProviderType para especificar um tipo de provedor passando um valor numérico que representa o provedor.  Os valores numéricos que representam os tipos de provedor padrão são definidos no arquivo de cabeçalho WinCrypt.h: - para especificar um provedor compatível com o <xref:System.Security.Cryptography.RSA>da classe, passe um valor de `1`.</xref:System.Security.Cryptography.RSA>      -Para especificar um provedor compatível com o <xref:System.Security.Cryptography.DSA>da classe, passe um valor de `13`.</xref:System.Security.Cryptography.DSA>       A tabela a seguir lista os tipos de provedor e seus valores numéricos correspondentes definidas no arquivo de cabeçalho WinCrypt.h.      | Tipo de provedor | Valor numérico |   |-------------------|-------------------|   | `PROV_RSA_FULL`|1|   | `PROV_RSA_SIG`|2|   | `PROV_DSS`|3|   | `PROV_FORTEZZA`|4|   | `PROV_MS_EXCHANGE`|5|   | `PROV_SSL`|6|   | `PROV_RSA_SCHANNEL`|12|   | `PROV_DSS_DH`|13|   | `PROV_EC_ECDSA_SIG`|14|   | `PROV_EC_ECNRA_SIG`|15|   | `PROV_EC_ECDSA_FULL`|16|   | `PROV_EC_ECNRA_FULL`|17|   | `PROV_DH_SCHANNEL`|18|   | `PROV_SPYRUS_LYNKS`|20|   | `PROV_RNG`|21|   | `PROV_INTEL_SEC`|22|   | `PROV_REPLACE_OWF`|23|   | `PROV_RSA_AES`|24|       Para obter mais informações sobre os tipos de provedor padrão e seus comportamentos, consulte a documentação do Microsoft CAPI (Cryptography API) na biblioteca MSDN."
  syntax:
    content: public int ProviderType;
    return:
      type: System.Int32
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CspParameters.#ctor
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters()
  nameWithType: CspParameters.CspParameters()
  fullName: System.Security.Cryptography.CspParameters.CspParameters()
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32)
  nameWithType: CspParameters.CspParameters(Int32)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String)
  nameWithType: CspParameters.CspParameters(Int32,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String,String)
  nameWithType: CspParameters.CspParameters(Int32,String,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String)
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
- uid: System.Security.AccessControl.CryptoKeySecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CryptoKeySecurity
  fullName: System.Security.AccessControl.CryptoKeySecurity
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CspParameters.CryptoKeySecurity
  fullName: System.Security.Cryptography.CspParameters.CryptoKeySecurity
- uid: System.Security.Cryptography.CspParameters.Flags
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: Flags
  nameWithType: CspParameters.Flags
  fullName: System.Security.Cryptography.CspParameters.Flags
- uid: System.Security.Cryptography.CspProviderFlags
  parent: System.Security.Cryptography
  isExternal: false
  name: CspProviderFlags
  nameWithType: CspProviderFlags
  fullName: System.Security.Cryptography.CspProviderFlags
- uid: System.Security.Cryptography.CspParameters.KeyContainerName
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyContainerName
  nameWithType: CspParameters.KeyContainerName
  fullName: System.Security.Cryptography.CspParameters.KeyContainerName
- uid: System.Security.Cryptography.CspParameters.KeyNumber
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyNumber
  nameWithType: CspParameters.KeyNumber
  fullName: System.Security.Cryptography.CspParameters.KeyNumber
- uid: System.Security.Cryptography.CspParameters.KeyPassword
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyPassword
  nameWithType: CspParameters.KeyPassword
  fullName: System.Security.Cryptography.CspParameters.KeyPassword
- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ParentWindowHandle
  nameWithType: CspParameters.ParentWindowHandle
  fullName: System.Security.Cryptography.CspParameters.ParentWindowHandle
- uid: System.Security.Cryptography.CspParameters.ProviderName
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ProviderName
  nameWithType: CspParameters.ProviderName
  fullName: System.Security.Cryptography.CspParameters.ProviderName
- uid: System.Security.Cryptography.CspParameters.ProviderType
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ProviderType
  nameWithType: CspParameters.ProviderType
  fullName: System.Security.Cryptography.CspParameters.ProviderType
- uid: System.Security.Cryptography.CspParameters.#ctor*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters
  nameWithType: CspParameters.CspParameters
- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CspParameters.CryptoKeySecurity
- uid: System.Security.Cryptography.CspParameters.Flags*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: Flags
  nameWithType: CspParameters.Flags
- uid: System.Security.Cryptography.CspParameters.KeyPassword*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyPassword
  nameWithType: CspParameters.KeyPassword
- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ParentWindowHandle
  nameWithType: CspParameters.ParentWindowHandle
