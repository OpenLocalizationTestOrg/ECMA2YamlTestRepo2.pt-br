### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeTypeReference
  id: CodeTypeReference
  children:
  - System.CodeDom.CodeTypeReference.#ctor
  - System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)
  - System.CodeDom.CodeTypeReference.#ctor(System.String)
  - System.CodeDom.CodeTypeReference.#ctor(System.Type)
  - System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)
  - System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])
  - System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)
  - System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)
  - System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)
  - System.CodeDom.CodeTypeReference.ArrayElementType
  - System.CodeDom.CodeTypeReference.ArrayRank
  - System.CodeDom.CodeTypeReference.BaseType
  - System.CodeDom.CodeTypeReference.Options
  - System.CodeDom.CodeTypeReference.TypeArguments
  langs:
  - csharp
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
  type: Class
  summary: "Representa uma referência a um tipo."
  remarks: "Um objeto CodeTypeReference é usado para representar um tipo para objetos de CodeDOM. Quando tipos de CodeDOM tem um `Type` propriedade, ela é do tipo CodeTypeReference. Por exemplo, o <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=fullName>propriedade é um CodeTypeReference que representa o tipo de dados do campo.</xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=fullName>       Um CodeTypeReference pode ser inicializado com um <xref:System.Type>objeto ou uma cadeia de caracteres.</xref:System.Type> Geralmente é recomendável usar um <xref:System.Type>para fazer isso, embora não seja sempre possível.</xref:System.Type> Se a inicialização de uma instância dessa classe com uma cadeia de caracteres, ele é altamente recomendável sempre usar tipos totalmente qualificados, como &quot;System&quot; em vez de apenas &quot;Console&quot;, porque nem todos os idiomas oferecem suporte a namespaces de importação. Tipos de matriz podem ser especificados passando um objeto de tipo para uma matriz ou usando um dos construtores que aceitem classificação como um parâmetro.       O <xref:System.CodeDom.CodeTypeReference.BaseType%2A>propriedade especifica o nome do tipo de referência.</xref:System.CodeDom.CodeTypeReference.BaseType%2A> Para as referências aos tipos de matriz, o <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A>propriedade indica o tipo dos elementos da matriz e o <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A>propriedade indica o número de dimensões da matriz.</xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> </xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A>"
  example:
  - "The following example demonstrates use of a CodeTypeReference to represent a reference to a type.  \n  \n [!code-cs[CodeTypeOfExample#2](~/add/codesnippet/csharp/t-system.codedom.codetyp_1_1.cs)]\n [!code-vb[CodeTypeOfExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codetyp_1_1.vb)]\n [!code-cpp[CodeTypeOfExample#2](~/add/codesnippet/cpp/t-system.codedom.codetyp_1_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeTypeReference : System.CodeDom.CodeObject
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference()
  nameWithType: CodeTypeReference.CodeTypeReference()
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe."
  remarks: "Este construtor cria vazio <xref:System.CodeDom.CodeTypeReference>objeto.</xref:System.CodeDom.CodeTypeReference>  Se você usar esse construtor, defina propriedades para estabelecer a referência de tipo."
  syntax:
    content: public CodeTypeReference ();
    parameters: []
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)
  id: '#ctor(System.CodeDom.CodeTypeParameter)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(CodeTypeParameter)
  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeParameter)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(CodeTypeParameter)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe usando o parâmetro de tipo de código especificada."
  syntax:
    content: public CodeTypeReference (System.CodeDom.CodeTypeParameter typeParameter);
    parameters:
    - id: typeParameter
      type: System.CodeDom.CodeTypeParameter
      description: "Um <xref href=&quot;System.CodeDom.CodeTypeParameter&quot;> </xref> que representa o tipo do parâmetro de tipo."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(String)
  nameWithType: CodeTypeReference.CodeTypeReference(String)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe usando o nome do tipo especificado."
  remarks: "Se o `typeName` parâmetro faz referência a um tipo genérico, ela deve seguir as convenções de sintaxe para tipos genéricos. Por exemplo, a assinatura de reflexão para um <xref:System.Collections.Generic.Dictionary%602>tipo, onde `K` é uma cadeia de caracteres e `V` é um <xref:System.Collections.Generic.List%601>de inteiros, é representado por reflexão como o seguinte (com as informações de assembly removidas): `System.Collections.Generic.Dictionary`2[[System.String], [Collections`1[[System.Int32]]]]`.</xref:System.Collections.Generic.List%601> </xref:System.Collections.Generic.Dictionary%602>      > [!NOTE] > Use colchetes ([]) e não os c# colchetes angulares (<>) para delimitar os parâmetros genéricos.       Para evitar a possibilidade de cometer um erro de sintaxe para especificar, considere o uso de construtor que usa um tipo como um parâmetro em vez de uma cadeia de caracteres."
  syntax:
    content: public CodeTypeReference (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "O nome do tipo de referência."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(Type)
  nameWithType: CodeTypeReference.CodeTypeReference(Type)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe usando o tipo especificado."
  syntax:
    content: public CodeTypeReference (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O <xref:System.Type>para referência.</xref:System.Type>"
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)
  id: '#ctor(System.CodeDom.CodeTypeReference,System.Int32)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(CodeTypeReference,Int32)
  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeReference,Int32)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(CodeTypeReference,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe usando o tipo de matriz especificada e a classificação."
  remarks: "Este construtor pode ser usado para construir a matrizes de matrizes aninhando <xref:System.CodeDom.CodeTypeReference>objetos.</xref:System.CodeDom.CodeTypeReference>"
  syntax:
    content: public CodeTypeReference (System.CodeDom.CodeTypeReference arrayType, int rank);
    parameters:
    - id: arrayType
      type: System.CodeDom.CodeTypeReference
      description: "Um <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> que indica o tipo da matriz."
    - id: rank
      type: System.Int32
      description: "O número de dimensões da matriz."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])
  id: '#ctor(System.String,System.CodeDom.CodeTypeReference[])'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(String,CodeTypeReference[])
  nameWithType: CodeTypeReference.CodeTypeReference(String,CodeTypeReference[])
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,CodeTypeReference[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe usando os argumentos de nome e o tipo do tipo especificado."
  syntax:
    content: public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReference[] typeArguments);
    parameters:
    - id: typeName
      type: System.String
      description: "O nome do tipo de referência."
    - id: typeArguments
      type: System.CodeDom.CodeTypeReference[]
      description: "Uma matriz de <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> valores."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)
  id: '#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(String,CodeTypeReferenceOptions)
  nameWithType: CodeTypeReference.CodeTypeReference(String,CodeTypeReferenceOptions)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,CodeTypeReferenceOptions)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe usando o nome do tipo especificado e a opção de tipo de referência de código."
  syntax:
    content: public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);
    parameters:
    - id: typeName
      type: System.String
      description: "O nome do tipo de referência."
    - id: codeTypeReferenceOption
      type: System.CodeDom.CodeTypeReferenceOptions
      description: "A opção de referência de tipo de código, um do <xref href=&quot;System.CodeDom.CodeTypeReferenceOptions&quot;> </xref> valores."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(String,Int32)
  nameWithType: CodeTypeReference.CodeTypeReference(String,Int32)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe usando o nome de tipo de matriz especificada e a classificação."
  syntax:
    content: public CodeTypeReference (string baseType, int rank);
    parameters:
    - id: baseType
      type: System.String
      description: "O nome do tipo dos elementos da matriz."
    - id: rank
      type: System.Int32
      description: "O número de dimensões da matriz."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)
  id: '#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(Type,CodeTypeReferenceOptions)
  nameWithType: CodeTypeReference.CodeTypeReference(Type,CodeTypeReferenceOptions)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(Type,CodeTypeReferenceOptions)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe usando o tipo especificado e a referência de tipo de código."
  syntax:
    content: public CodeTypeReference (Type type, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);
    parameters:
    - id: type
      type: System.Type
      description: "O <xref:System.Type>para referência.</xref:System.Type>"
    - id: codeTypeReferenceOption
      type: System.CodeDom.CodeTypeReferenceOptions
      description: "A opção de referência de tipo de código, um do <xref href=&quot;System.CodeDom.CodeTypeReferenceOptions&quot;> </xref> valores."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.ArrayElementType
  id: ArrayElementType
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: ArrayElementType
  nameWithType: CodeTypeReference.ArrayElementType
  fullName: System.CodeDom.CodeTypeReference.ArrayElementType
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define o tipo dos elementos na matriz."
  remarks: "Isso é ignorado, a menos que o <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A>propriedade é maior que ou igual a 1.</xref:System.CodeDom.CodeTypeReference.ArrayRank%2A>"
  syntax:
    content: public System.CodeDom.CodeTypeReference ArrayElementType { get; set; }
    return:
      type: System.CodeDom.CodeTypeReference
      description: "Um <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> que indica o tipo dos elementos da matriz."
  overload: System.CodeDom.CodeTypeReference.ArrayElementType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.ArrayRank
  id: ArrayRank
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: ArrayRank
  nameWithType: CodeTypeReference.ArrayRank
  fullName: System.CodeDom.CodeTypeReference.ArrayRank
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define a classificação de matriz da matriz."
  syntax:
    content: public int ArrayRank { get; set; }
    return:
      type: System.Int32
      description: "O número de dimensões da matriz."
  overload: System.CodeDom.CodeTypeReference.ArrayRank*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.BaseType
  id: BaseType
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: BaseType
  nameWithType: CodeTypeReference.BaseType
  fullName: System.CodeDom.CodeTypeReference.BaseType
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define o nome do tipo que está sendo referenciado."
  remarks: "Esta propriedade contém o nome do tipo, a menos que ele seja um tipo de matriz, caso em que é o tipo de elemento de matriz.      > [!NOTE] > O nome da propriedade pode ser enganoso. Esta propriedade contém apenas o nome de tipo com ornamentos qualquer matriz ou argumentos de tipo genérico removido, não do tipo base ou pai como pode ser esperado. Por exemplo, o valor de BaseType para `System.Collections.Generic.Dictionary`2[[System.String], [Collections`1[[System.Int32]]]]` é `System.Collections.Generic.Dictionary`2`.      ## Representation of Generic Types    The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages. The return value can contain generic types. Generic types are formatted with the name of the type followed by a grave accent (&quot;`&quot;) seguido por uma contagem de argumentos de tipo genérico. Os argumentos de tipo genérico podem ser encontrados no <xref:System.CodeDom.CodeTypeReferenceCollection>retornado pelo <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>propriedade.</xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReferenceCollection> Os valores retornados pelo BaseType e associado <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>contêm o mesmo conteúdo, como o valor do tipo retornado por reflexão.</xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>       Por exemplo, um <xref:System.Collections.Generic.Dictionary%602>construído onde `K` é uma cadeia de caracteres e `V` é um <xref:System.Collections.Generic.List%601>construído de inteiros é representado por reflexão como o seguinte (com as informações de assembly removidas): ```   System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]   ``` recursivamente a propriedade BaseType de <xref:System.CodeDom.CodeTypeReference>para <xref:System.Collections.Generic.Dictionary%602>de análise produz as mesmo cadeias de caracteres como a representação de reflexão acima:-o BaseType propriedade para o pai <xref:System.CodeDom.CodeTypeReference>retorna o seguinte: <CodeContentPlaceHolder>1</CodeContentPlaceHolder> -o BaseType propriedade para o primeiro objeto na coleção <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> <xref:System.CodeDom.CodeTypeReference>retorna o seguinte : <CodeContentPlaceHolder>2</CodeContentPlaceHolder> -o BaseType propriedade para a segunda <xref:System.CodeDom.CodeTypeReference>objeto o <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>coleção retorna o seguinte: <CodeContentPlaceHolder>3</CodeContentPlaceHolder> - o <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>propriedade no <xref:System.CodeDom.CodeTypeReference>de objeto para `System.Collections.Generic.List`1&quot; Retorna o seguinte: ```       System.Int32       ``` a contagem de argumento de tipo deve ser usada durante a análise associado <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>valores.</xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReference> </xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReference>  </xref:System.CodeDom.CodeTypeReference></xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReference> </xref:System.Collections.Generic.Dictionary%602> </xref:System.CodeDom.CodeTypeReference> </xref:System.Collections.Generic.List%601> </xref:System.Collections.Generic.Dictionary%602> A prática comum é remover a contagem de argumento de tipo de código gerado, mas a prática é específico do compilador.  É importante observar que a contagem de argumentos de tipo pode ser encontrada em um nome de tipo aninhado, caso em que ele seja seguido por um sinal de adição (&quot;+&quot;).      > [!NOTE] > Durante a criação de um genérico <xref:System.CodeDom.CodeTypeReference>a prática recomendada é especificar os argumentos de tipo como <xref:System.CodeDom.CodeTypeReference>objetos ou use o construtor que aceite um <xref:System.Type>.</xref:System.Type> </xref:System.CodeDom.CodeTypeReference> </xref:System.CodeDom.CodeTypeReference> Use o construtor que cria um <xref:System.CodeDom.CodeTypeReference>de uma cadeia de caracteres pode levar a erros de argumento de tipo undiscoverable.</xref:System.CodeDom.CodeTypeReference>"
  syntax:
    content: public string BaseType { get; set; }
    return:
      type: System.String
      description: "O nome do tipo que está sendo referenciado."
  overload: System.CodeDom.CodeTypeReference.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.Options
  id: Options
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: Options
  nameWithType: CodeTypeReference.Options
  fullName: System.CodeDom.CodeTypeReference.Options
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define a opção de referência de tipo de código."
  syntax:
    content: public System.CodeDom.CodeTypeReferenceOptions Options { get; set; }
    return:
      type: System.CodeDom.CodeTypeReferenceOptions
      description: "Uma combinação bit a bit do <xref href=&quot;System.CodeDom.CodeTypeReferenceOptions&quot;> </xref> valores."
  overload: System.CodeDom.CodeTypeReference.Options*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.TypeArguments
  id: TypeArguments
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: TypeArguments
  nameWithType: CodeTypeReference.TypeArguments
  fullName: System.CodeDom.CodeTypeReference.TypeArguments
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém os argumentos de tipo para a referência de tipo genérico atual."
  remarks: "A propriedade TypeArguments é uma coleção de referências de tipo a ser substituído para as referências de parâmetro de tipo do tipo genérico atual. A coleção contém todos os argumentos de tipo para todos os tipos aninhados. Para obter um exemplo, consulte o <xref:System.CodeDom.CodeTypeReference.BaseType%2A>propriedade.</xref:System.CodeDom.CodeTypeReference.BaseType%2A>"
  syntax:
    content: public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }
    return:
      type: System.CodeDom.CodeTypeReferenceCollection
      description: "Um <xref href=&quot;System.CodeDom.CodeTypeReferenceCollection&quot;> </xref> que contém os argumentos de tipo atual <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> objeto."
  overload: System.CodeDom.CodeTypeReference.TypeArguments*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeObject
  isExternal: false
  name: System.CodeDom.CodeObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.CodeDom.CodeTypeReference.#ctor
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference()
  nameWithType: CodeTypeReference.CodeTypeReference()
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference()
- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(CodeTypeParameter)
  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeParameter)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(CodeTypeParameter)
- uid: System.CodeDom.CodeTypeParameter
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeParameter
  nameWithType: CodeTypeParameter
  fullName: System.CodeDom.CodeTypeParameter
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(String)
  nameWithType: CodeTypeReference.CodeTypeReference(String)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(Type)
  nameWithType: CodeTypeReference.CodeTypeReference(Type)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(CodeTypeReference,Int32)
  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeReference,Int32)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(CodeTypeReference,Int32)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(String,CodeTypeReference[])
  nameWithType: CodeTypeReference.CodeTypeReference(String,CodeTypeReference[])
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,CodeTypeReference[])
- uid: System.CodeDom.CodeTypeReference[]
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference[]
  spec.csharp:
  - uid: System.CodeDom.CodeTypeReference
    name: CodeTypeReference
    nameWithType: CodeTypeReference
    fullName: CodeTypeReference[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(String,CodeTypeReferenceOptions)
  nameWithType: CodeTypeReference.CodeTypeReference(String,CodeTypeReferenceOptions)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,CodeTypeReferenceOptions)
- uid: System.CodeDom.CodeTypeReferenceOptions
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceOptions
  nameWithType: CodeTypeReferenceOptions
  fullName: System.CodeDom.CodeTypeReferenceOptions
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(String,Int32)
  nameWithType: CodeTypeReference.CodeTypeReference(String,Int32)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,Int32)
- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(Type,CodeTypeReferenceOptions)
  nameWithType: CodeTypeReference.CodeTypeReference(Type,CodeTypeReferenceOptions)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(Type,CodeTypeReferenceOptions)
- uid: System.CodeDom.CodeTypeReference.ArrayElementType
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: ArrayElementType
  nameWithType: CodeTypeReference.ArrayElementType
  fullName: System.CodeDom.CodeTypeReference.ArrayElementType
- uid: System.CodeDom.CodeTypeReference.ArrayRank
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: ArrayRank
  nameWithType: CodeTypeReference.ArrayRank
  fullName: System.CodeDom.CodeTypeReference.ArrayRank
- uid: System.CodeDom.CodeTypeReference.BaseType
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: BaseType
  nameWithType: CodeTypeReference.BaseType
  fullName: System.CodeDom.CodeTypeReference.BaseType
- uid: System.CodeDom.CodeTypeReference.Options
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: Options
  nameWithType: CodeTypeReference.Options
  fullName: System.CodeDom.CodeTypeReference.Options
- uid: System.CodeDom.CodeTypeReference.TypeArguments
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: TypeArguments
  nameWithType: CodeTypeReference.TypeArguments
  fullName: System.CodeDom.CodeTypeReference.TypeArguments
- uid: System.CodeDom.CodeTypeReferenceCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceCollection
  nameWithType: CodeTypeReferenceCollection
  fullName: System.CodeDom.CodeTypeReferenceCollection
- uid: System.CodeDom.CodeTypeReference.#ctor*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference.CodeTypeReference
- uid: System.CodeDom.CodeTypeReference.ArrayElementType*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: ArrayElementType
  nameWithType: CodeTypeReference.ArrayElementType
- uid: System.CodeDom.CodeTypeReference.ArrayRank*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: ArrayRank
  nameWithType: CodeTypeReference.ArrayRank
- uid: System.CodeDom.CodeTypeReference.BaseType*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: BaseType
  nameWithType: CodeTypeReference.BaseType
- uid: System.CodeDom.CodeTypeReference.Options*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: Options
  nameWithType: CodeTypeReference.Options
- uid: System.CodeDom.CodeTypeReference.TypeArguments*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: TypeArguments
  nameWithType: CodeTypeReference.TypeArguments
