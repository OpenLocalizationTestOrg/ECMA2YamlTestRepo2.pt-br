### YamlMime:ManagedReference
items:
- uid: System.IO.FileMode
  id: FileMode
  children:
  - System.IO.FileMode.Append
  - System.IO.FileMode.Create
  - System.IO.FileMode.CreateNew
  - System.IO.FileMode.Open
  - System.IO.FileMode.OpenOrCreate
  - System.IO.FileMode.Truncate
  langs:
  - csharp
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
  type: Enum
  summary: "Especifica como o sistema operacional deve abrir um arquivo."
  remarks: "Para obter um exemplo de criação de um arquivo e gravar texto em um arquivo, consulte [como: gravar texto em um arquivo](~/add/includes/ajax-current-ext-md.md). Para obter um exemplo de texto de leitura de um arquivo, consulte [como: ler texto de um arquivo](~/add/includes/ajax-current-ext-md.md). Para obter um exemplo de leitura e gravação em um arquivo binário, consulte [como: ler e gravar um recentemente criado arquivo de dados](~/add/includes/ajax-current-ext-md.md).       Um `FileMode` parâmetro é especificado em muitos dos construtores para <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>e no `Open` métodos de <xref:System.IO.File>e <xref:System.IO.FileInfo>para controlar como um arquivo é aberto.</xref:System.IO.FileInfo> </xref:System.IO.File> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> </xref:System.IO.FileStream>       `FileMode`controle de parâmetros se um arquivo for substituído, criar, abrir, ou uma combinação de ambos. Use `Open` para abrir um arquivo existente. Para anexar a um arquivo, use `Append`. Para truncar um arquivo ou criar um arquivo se ele não existir, use `Create`."
  example:
  - "The following `FileStream` constructor opens an existing file (`FileMode.Open`).  \n  \n [!code-vb[Classic FileAccess Example#1](~/add/codesnippet/visualbasic/t-system.io.filemode_1.vb)]\n [!code-cpp[Classic FileAccess Example#1](~/add/codesnippet/cpp/t-system.io.filemode_1.cpp)]\n [!code-cs[Classic FileAccess Example#1](~/add/codesnippet/csharp/t-system.io.filemode_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IO.FileMode.Append
  id: Append
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Append
  nameWithType: FileMode.Append
  fullName: System.IO.FileMode.Append
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre o arquivo se existir e buscas no final do arquivo ou cria um novo arquivo. Isso requer &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Append?displayProperty=fullName&gt; permissão. <xref uid=&quot;langword_csharp_FileMode.Append&quot; name=&quot;FileMode.Append&quot; href=&quot;&quot;></xref>pode ser usado somente em conjunto com <xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>. Tentativa de acessar uma posição antes do final do gera arquivo uma <xref:System.IO.IOException>exceção e qualquer tentativa de leitura falhará e lança um <xref:System.NotSupportedException>exceção.</xref:System.NotSupportedException> </xref:System.IO.IOException>"
  syntax:
    content: Append
    return:
      type: System.IO.FileMode
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Create
  id: Create
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Create
  nameWithType: FileMode.Create
  fullName: System.IO.FileMode.Create
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Especifica que o sistema operacional deve criar um novo arquivo. Se o arquivo já existir, ele será substituído. Isso requer &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permissão. <xref uid=&quot;langword_csharp_FileMode.Create&quot; name=&quot;FileMode.Create&quot; href=&quot;&quot;></xref>equivale a solicitar que se o arquivo não existir, use CreateNew; Caso contrário, use Truncate. Se o arquivo já existe, mas é um arquivo oculto, um <xref:System.UnauthorizedAccessException>exceção será lançada.</xref:System.UnauthorizedAccessException>"
  syntax:
    content: Create
    return:
      type: System.IO.FileMode
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.CreateNew
  id: CreateNew
  parent: System.IO.FileMode
  langs:
  - csharp
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: System.IO.FileMode.CreateNew
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Especifica que o sistema operacional deve criar um novo arquivo. Isso requer &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permissão. Se o arquivo já existir, um <xref:System.IO.IOException>exceção será lançada.</xref:System.IO.IOException>"
  syntax:
    content: CreateNew
    return:
      type: System.IO.FileMode
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Open
  id: Open
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Open
  nameWithType: FileMode.Open
  fullName: System.IO.FileMode.Open
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Especifica que o sistema operacional deve abrir um arquivo existente. A capacidade de abrir o arquivo é dependente do valor especificado pelo <xref href=&quot;System.IO.FileAccess&quot;> </xref> enumeração. Um &lt;xref:System.IO.FileNotFoundException?displayProperty=fullName&gt; exceção é gerada se o arquivo não existe."
  syntax:
    content: Open
    return:
      type: System.IO.FileMode
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.OpenOrCreate
  id: OpenOrCreate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: System.IO.FileMode.OpenOrCreate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Especifica que o sistema operacional deve abrir um arquivo se ele existir. Caso contrário, um novo arquivo deve ser criado. Se o arquivo é aberto com <xref uid=&quot;langword_csharp_FileAccess.Read&quot; name=&quot;FileAccess.Read&quot; href=&quot;&quot;> </xref>, &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt; permissão é necessária. Se o acesso a arquivo é <xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>, &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permissão é necessária. Se o arquivo é aberto com <xref uid=&quot;langword_csharp_FileAccess.ReadWrite&quot; name=&quot;FileAccess.ReadWrite&quot; href=&quot;&quot;> </xref>, ambos &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt; e &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permissões são necessárias."
  syntax:
    content: OpenOrCreate
    return:
      type: System.IO.FileMode
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Truncate
  id: Truncate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: System.IO.FileMode.Truncate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Especifica que o sistema operacional deve abrir um arquivo existente. Quando o arquivo é aberto, ele deve ser truncado para que seu tamanho é zero bytes. Isso requer &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permissão. Tentativa de ler de um arquivo aberto com <xref uid=&quot;langword_csharp_FileMode.Truncate&quot; name=&quot;FileMode.Truncate&quot; href=&quot;&quot;> </xref> causar um <xref:System.ArgumentException>exceção.</xref:System.ArgumentException>"
  syntax:
    content: Truncate
    return:
      type: System.IO.FileMode
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IO.FileMode.Append
  parent: System.IO.FileMode
  isExternal: false
  name: Append
  nameWithType: FileMode.Append
  fullName: System.IO.FileMode.Append
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileMode.Create
  parent: System.IO.FileMode
  isExternal: false
  name: Create
  nameWithType: FileMode.Create
  fullName: System.IO.FileMode.Create
- uid: System.IO.FileMode.CreateNew
  parent: System.IO.FileMode
  isExternal: false
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: System.IO.FileMode.CreateNew
- uid: System.IO.FileMode.Open
  parent: System.IO.FileMode
  isExternal: false
  name: Open
  nameWithType: FileMode.Open
  fullName: System.IO.FileMode.Open
- uid: System.IO.FileMode.OpenOrCreate
  parent: System.IO.FileMode
  isExternal: false
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: System.IO.FileMode.OpenOrCreate
- uid: System.IO.FileMode.Truncate
  parent: System.IO.FileMode
  isExternal: false
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: System.IO.FileMode.Truncate
