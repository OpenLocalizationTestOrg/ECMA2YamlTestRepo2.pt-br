### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleLob
  id: OracleLob
  children:
  - System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleLob.BeginBatch
  - System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  - System.Data.OracleClient.OracleLob.CanRead
  - System.Data.OracleClient.OracleLob.CanSeek
  - System.Data.OracleClient.OracleLob.CanWrite
  - System.Data.OracleClient.OracleLob.ChunkSize
  - System.Data.OracleClient.OracleLob.Clone
  - System.Data.OracleClient.OracleLob.Connection
  - System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  - System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  - System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleLob.EndBatch
  - System.Data.OracleClient.OracleLob.Erase
  - System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  - System.Data.OracleClient.OracleLob.Flush
  - System.Data.OracleClient.OracleLob.IsBatched
  - System.Data.OracleClient.OracleLob.IsNull
  - System.Data.OracleClient.OracleLob.IsTemporary
  - System.Data.OracleClient.OracleLob.Length
  - System.Data.OracleClient.OracleLob.LobType
  - System.Data.OracleClient.OracleLob.Null
  - System.Data.OracleClient.OracleLob.Position
  - System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  - System.Data.OracleClient.OracleLob.Value
  - System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  langs:
  - csharp
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
  type: Class
  summary: "Representa um objeto grande binário (<xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;></xref>) tipo de dados armazenado em um servidor Oracle. Essa classe não pode ser herdada."
  remarks: "Um OracleLob difere de um <xref:System.Data.OracleClient.OracleBFile>em que os dados são armazenados no servidor, em vez de em um arquivo físico no sistema operacional.</xref:System.Data.OracleClient.OracleBFile> Ele também pode ser um objeto de leitura / gravação, ao contrário de um <xref:System.Data.OracleClient.OracleBFile>, que é sempre somente leitura.</xref:System.Data.OracleClient.OracleBFile>       Um OracleLob pode ser um destes <xref:System.Data.OracleClient.OracleType>tipos de dados.</xref:System.Data.OracleClient.OracleType>      | Tipo de dados de OracleType | Descrição |   |--------------------------|-----------------|   | `Blob`| Um Oracle `BLOB` tipo de dados que contém dados binários com um tamanho máximo de 4 gigabytes (GB). Isso mapeia para um <xref:System.Array>do tipo <xref:System.Byte>. |   | `Clob`| Um Oracle `CLOB` tipo de dados que contém dados de caracteres, com base no caractere padrão definido no servidor, com um tamanho máximo de 4 GB.</xref:System.Byte> </xref:System.Array> Isso mapeia para <xref:System.String>. |   | `NClob`| Um Oracle `NCLOB` tipo de dados que contém dados de caracteres, com base em conjunto no servidor com um tamanho máximo de 4 GB de caracteres nacional.</xref:System.String> Isso mapeia para <xref:System.String>. |       Um desenvolvedor de aplicativos .NET pode recuperar o Oracle `LOB` valores em tipos de dados .NET básicos, como <xref:System.Array>do tipo <xref:System.Byte>e <xref:System.String>, ou o tipo de dados especializado OracleLob.</xref:System.String> </xref:System.Byte> </xref:System.Array> </xref:System.String> O OracleLob classe oferece suporte ao ler e gravar o Oracle `LOB` no banco de dados Oracle.       A seguir estão as principais características do tipo de dados OracleLob que distinguem-lo de tipos de dados básicos do .NET: - depois de recuperar o Oracle `LOB` valor do banco de dados Oracle para a classe OracleLob, você pode alterar o `LOB` dados em uma transação aberta e as alterações são refletidos diretamente no banco de dados. Se você recuperar o Oracle `LOB` valor em uma <xref:System.Array>do tipo <xref:System.Byte>ou <xref:System.String>e atualizar essas matrizes, suas alterações não serão refletidas no banco de dados.</xref:System.String> </xref:System.Byte> </xref:System.Array>      -Quando você usa a classe OracleLob para acessar uma parte de uma `LOB` valor, somente o fragmento é passado do banco de dados Oracle para o cliente. Quando você usa o <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>método para acessar uma parte de uma `LOB` valor, todo o conteúdo do valor é passado do banco de dados Oracle para o cliente.</xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>       Para obter um objeto OracleLob, chame o <xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>método.</xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>       Você pode construir um OracleLob que é NULL usando este formato: ```   OracleLob myLob = OracleLob.Null;   ``` essa técnica é usada principalmente para testar se um `LOB` retornado do servidor for NULL, como mostra este exemplo: ```   If(myLob == OracleLob.Null)   ``` um nulo `LOB` se comporta da mesma forma para zero bytes `LOB` que <xref:System.Data.OracleClient.OracleLob.Read%2A>terá êxito e sempre retorna zero bytes.</xref:System.Data.OracleClient.OracleLob.Read%2A>       Selecionando um `LOB` coluna que contém um valor nulo retorna <xref:System.Data.OracleClient.OracleLob.Null>.</xref:System.Data.OracleClient.OracleLob.Null>       Você deve iniciar uma transação antes de obter um temporário `LOB`. Caso contrário, o <xref:System.Data.OracleClient.OracleDataReader>pode falhar ao obter dados mais tarde.</xref:System.Data.OracleClient.OracleDataReader>       Você também pode abrir um temporário `LOB` no Oracle chamando o DBMS_LOB. Sistema CREATETEMPORARY procedimento armazenado e associação de um `LOB` parâmetro de saída. No lado do cliente, um temporário `LOB` se comporta como uma tabela com base em `LOB`. Por exemplo, para atualizar temporárias `LOB`, ele deve ser incluído em uma transação.       O exemplo c# a seguir demonstra como abrir um temporário `LOB`.      ```   OracleConnection connection = new OracleConnection(&quot;server=MyServer; integrated security=yes;&quot;);   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = &quot;declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;&quot;;   command.Parameters.Add(new OracleParameter(&quot;tempblob&quot;, OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   byte[] tempbuff = new byte[10000];   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = &quot;MyTable.MyProc&quot;;   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter(&quot;ImportDoc&quot;, OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```      > [!NOTE]> O herdadas <xref:System.IO.Stream.WriteByte%2A>método falhará se usado com dados de caracteres e um <xref:System.InvalidOperationException>é gerada.</xref:System.InvalidOperationException> </xref:System.IO.Stream.WriteByte%2A> Use o <xref:System.Data.OracleClient.OracleLob.Write%2A>método em vez disso.</xref:System.Data.OracleClient.OracleLob.Write%2A>   >> Temporário `LOB`estão apenas fechados quando a conexão é fechada, mas com o pool e sob carga, temporária `LOB`s não fechar. Isso pode ser resolvido removendo temporárias `LOB`, invocando `tempLob.Dispose()`."
  syntax:
    content: 'public sealed class OracleLob : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.IO.Stream
  implements:
  - System.Data.SqlTypes.INullable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  id: Append(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Append(OracleLob)
  nameWithType: OracleLob.Append(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.Append(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Acrescenta dados especificado <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> ao atual <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>."
  remarks: "Para gravar o `LOB`, você deve recuperar o `LOB` usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.       Todos os dados da fonte de `LOB` é acrescentado ao final da atual `LOB`. A posição de nenhuma `LOB` for avaliada ou alterada durante esse processo.       Os tipos de dados subjacente devem ser sempre a mesma. Por exemplo, se você está anexando a partir de um <xref:System.Data.OracleClient.OracleType>o destino <xref:System.Data.OracleClient.OracleLob>também deve ser um <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>      > [!NOTE] > Nesta versão, uma operação de gravação para somente leitura `LOB` pode ter êxito, mas não atualiza o `LOB` no servidor. Nesse caso, no entanto, a cópia local do `LOB` é atualizado. Portanto, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto pode retornar os resultados da operação de gravação.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public void Append (System.Data.OracleClient.OracleLob source);
    parameters:
    - id: source
      type: System.Data.OracleClient.OracleLob
      description: "O <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> do qual acrescentar dados."
  overload: System.Data.OracleClient.OracleLob.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A fonte <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> é nulo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A fonte <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> é nulo, ou a conexão for fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A fonte <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.BeginBatch
  id: BeginBatch
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: BeginBatch()
  nameWithType: OracleLob.BeginBatch()
  fullName: System.Data.OracleClient.OracleLob.BeginBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Impede que os gatilhos do lado do servidor acionamento ao executar várias operações de leitura."
  remarks: "Abre o `LOB` na <xref:System.Data.OracleClient.OracleLobOpenMode>modo; portanto, o `LOB` só podem ser lidos, não gravada, até a chamada correspondente para <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleLobOpenMode> Para realizar gravações em lotes para o `LOB`, chamar <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>com <xref:System.Data.OracleClient.OracleLobOpenMode>.</xref:System.Data.OracleClient.OracleLobOpenMode> </xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>       Chamar BeginBatch mais de uma vez na mesma transação atualmente lança Oracle &quot;ORA-22293: LOB já aberto na mesma transação&quot; erro. Além disso, se você obtiver o `LOB` usando outro <xref:System.Data.OracleClient.OracleDataReader>, e o chamador original não chamou o <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>método, o mesmo erro é gerado.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleDataReader> Portanto, você deve chamar o <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>método quando tiver terminado de usar o <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.EndBatch%2A>"
  syntax:
    content: public void BeginBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.BeginBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão é fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  id: BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: BeginBatch(OracleLobOpenMode)
  nameWithType: OracleLob.BeginBatch(OracleLobOpenMode)
  fullName: System.Data.OracleClient.OracleLob.BeginBatch(OracleLobOpenMode)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Impede que do lado do servidor gatilhos acionados ao executar várias lida e operações de gravação no modo de acesso especificado."
  remarks: "Para gravar o `LOB`, você deve recuperar o `LOB` usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.       Chamando <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>mais de uma vez na mesma transação atualmente lança Oracle &quot;ORA-22293: LOB já aberto na mesma transação&quot; erro.</xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> Além disso, se você obtiver o `LOB` usando outro <xref:System.Data.OracleClient.OracleDataReader>, e o chamador original não chamou o <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>método, o mesmo erro é gerado.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleDataReader> Portanto, você deve chamar o <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>método quando tiver terminado de usar o <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.EndBatch%2A>"
  syntax:
    content: public void BeginBatch (System.Data.OracleClient.OracleLobOpenMode mode);
    parameters:
    - id: mode
      type: System.Data.OracleClient.OracleLobOpenMode
      description: "Modo (um do <xref href=&quot;System.Data.OracleClient.OracleLobOpenMode&quot;> </xref> valores) no qual o <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> podem ser acessados entre essa chamada BeginBatch e correspondente <xref:System.Data.OracleClient.OracleLob.EndBatch*>chame.</xref:System.Data.OracleClient.OracleLob.EndBatch*>"
  overload: System.Data.OracleClient.OracleLob.BeginBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão é fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanRead
  id: CanRead
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanRead
  nameWithType: OracleLob.CanRead
  fullName: System.Data.OracleClient.OracleLob.CanRead
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se o <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> fluxo pode ser lido."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> fluxo suporte leitura, caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se um <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> foi fechado ou descartado."
  overload: System.Data.OracleClient.OracleLob.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanSeek
  id: CanSeek
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanSeek
  nameWithType: OracleLob.CanSeek
  fullName: System.Data.OracleClient.OracleLob.CanSeek
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se frente e para trás operações de busca pode ser executada."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se um <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> foi fechado ou descartado, caso contrário, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleLob.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleLob.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanWrite
  id: CanWrite
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanWrite
  nameWithType: OracleLob.CanWrite
  fullName: System.Data.OracleClient.OracleLob.CanWrite
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Sempre retorna true, independentemente se o <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> oferece suporte à criação ou não."
  remarks: "Para gravar o `LOB`, você deve recuperar o `LOB` usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter iniciado uma transação local."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "Sempre retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, independentemente de um aberto ou não descartado <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> oferece suporte à criação ou não, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se um <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> foi fechado ou descartado."
  overload: System.Data.OracleClient.OracleLob.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.ChunkSize
  id: ChunkSize
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
  fullName: System.Data.OracleClient.OracleLob.ChunkSize
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica o número mínimo de bytes a serem recuperados ou enviados ao servidor durante uma operação de leitura/gravação."
  remarks: "O valor retornado pela propriedade ChunkSize não é uma configuração do .NET Framework Data Provider for Oracle. Em vez disso, ele é o valor que o Oracle Call Interface (OCI) usa ao se comunicar com o servidor. Use o tamanho máximo permitido para garantir que partes do lado do cliente são do mesmo tamanho. Ler ou gravar em partes menores não armazena em cache dados e faz com que um processamento otimizado menor para o servidor, como um pacote completo não é recebido ou enviado."
  syntax:
    content: public int ChunkSize { get; }
    return:
      type: System.Int32
      description: "O número mínimo de bytes para recuperar ou enviar."
  overload: System.Data.OracleClient.OracleLob.ChunkSize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão é fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleLob.Clone()
  fullName: System.Data.OracleClient.OracleLob.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cria um novo <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto que faz referência a Oracle mesmo <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> original <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto."
  remarks: "As propriedades do novo <xref:System.Data.OracleClient.OracleLob>objeto inicialmente ter os mesmos valores do objeto original.</xref:System.Data.OracleClient.OracleLob> No entanto, depois que o Clone for concluído, cada <xref:System.Data.OracleClient.OracleLob>objeto é independente dos outros.</xref:System.Data.OracleClient.OracleLob> Por exemplo, alterar o valor da <xref:System.Data.OracleClient.OracleLob.Position%2A>propriedade original <xref:System.Data.OracleClient.OracleLob>não altera o valor de <xref:System.Data.OracleClient.OracleLob.Position%2A>na cópia.</xref:System.Data.OracleClient.OracleLob.Position%2A> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Position%2A>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um novo <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto que faz referência a Oracle mesmo <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> original <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto."
  overload: System.Data.OracleClient.OracleLob.Clone*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão é fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Connection
  nameWithType: OracleLob.Connection
  fullName: System.Data.OracleClient.OracleLob.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém o <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> usado por esta instância do <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "A conexão a uma fonte de dados."
  overload: System.Data.OracleClient.OracleLob.Connection*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  id: CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(OracleLob)
  nameWithType: OracleLob.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cópias deste <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> para um destino <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Os tipos de dados subjacente devem ser sempre a mesma. Por exemplo, se você estiver copiando de um <xref:System.Data.OracleClient.OracleType>o destino <xref:System.Data.OracleClient.OracleLob>também deve ser um <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Se o deslocamento de destino está além do fim do destino `LOB`, o `LOB` é estendido para o qual os dados estão sendo copiados. O espaço entre o fim do `LOB` e o deslocamento de destino após o final será preenchido com zeros para `BLOB` tipos de dados e espaços para `CLOB` e `NCLOB` tipos de dados.       Para gravar o `LOB`, você deve recuperar o `LOB` usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.      > [!NOTE] > Nesta versão, uma operação de gravação para somente leitura `LOB` pode ter êxito, mas não atualizar o `LOB` no servidor. Nesse caso, no entanto, a cópia local do `LOB` será atualizado. Portanto, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto pode retornar os resultados da operação de gravação.</xref:System.Data.OracleClient.OracleLob>   >> De `CopyTo` método não limpa o conteúdo do destino `OracleLob` antes de executar a operação de cópia."
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "O destino <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    return:
      type: System.Int64
      description: "O número de bytes copiados. Isso exclui qualquer bytes preenchidos."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> especificado no <code> destination </code> parâmetro é nulo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não está em uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> o objeto é nulo ou a conexão for fechada."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleLob.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cópias deste <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> para um destino <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> com a quantidade especificada de dados."
  remarks: "Os tipos de dados subjacente devem ser sempre a mesma. Por exemplo, se você estiver copiando de um <xref:System.Data.OracleClient.OracleType>o destino <xref:System.Data.OracleClient.OracleLob>também deve ser um <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Se o deslocamento de destino está além do fim do destino `LOB`, o `LOB` é estendido para o qual os dados estão sendo copiados. O espaço entre o fim do `LOB` e deslocamento além do fim de destino é preenchido com zeros para `BLOB` tipos de dados e espaços para `CLOB` e `NCLOB` tipos de dados.       Para gravar o `LOB`, você deve recuperar o `LOB` usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.      > [!NOTE] > Nesta versão, uma operação de gravação para somente leitura `LOB` pode ter êxito, mas não atualiza o `LOB` no servidor. Nesse caso, no entanto, a cópia local do `LOB` é atualizado. Portanto, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto pode retornar os resultados da operação de gravação.</xref:System.Data.OracleClient.OracleLob>   >> De `CopyTo` método não limpa o conteúdo do destino `OracleLob` antes de executar a operação de cópia."
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "O destino<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>"
    - id: destinationOffset
      type: System.Int64
      description: "O deslocamento no qual copiar. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, isso deve ser um número par de bytes."
    return:
      type: System.Int64
      description: "O número de bytes copiados. Isso exclui qualquer bytes preenchidos."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> especificado no <code> destination </code> parâmetro está cheio."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um valor especificado no <code> destinationOffset </code> parâmetro for menor que zero ou maior que 4 gigabytes.       - ou - um valor especificado no <code> destinationOffset </code> parâmetro para um <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipo de dados não é par.       - ou - você deve especificar <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados como um número par de bytes."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não está em uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> o objeto é nulo ou a conexão for fechada."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cópias deste <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> para um destino <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> com a quantidade especificada de dados e o deslocamento de origem."
  remarks: "Os tipos de dados subjacente devem ser sempre a mesma. Por exemplo, se você estiver copiando de um <xref:System.Data.OracleClient.OracleType>o destino <xref:System.Data.OracleClient.OracleLob>também deve ser um <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Se o deslocamento de destino está além do fim do destino `LOB`, o `LOB` é estendido para o qual os dados estão sendo copiados. O espaço entre o fim do `LOB` e deslocamento além do fim de destino é preenchido com zeros para `BLOB` tipos de dados e espaços para `CLOB` e `NCLOB` tipos de dados.       Para gravar o `LOB`, você deve recuperar o `LOB` usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.      > [!NOTE] > Nesta versão, uma operação de gravação para somente leitura `LOB` pode ter êxito, mas não atualiza o `LOB` no servidor. Nesse caso, no entanto, a cópia local do `LOB` é atualizado. Portanto, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto pode retornar os resultados da operação de gravação.</xref:System.Data.OracleClient.OracleLob>   >> De `CopyTo` método não limpa o conteúdo do destino `OracleLob` antes de executar a operação de cópia."
  syntax:
    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);
    parameters:
    - id: sourceOffset
      type: System.Int64
      description: "O deslocamento da qual copiar. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, isso deve ser um número par."
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "The destination <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;></xref><xref href=&quot;System.Data.OracleClient&quot;></xref>."
    - id: destinationOffset
      type: System.Int64
      description: "O deslocamento de destino no qual copiar. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, isso deve ser um número par."
    - id: amount
      type: System.Int64
      description: "A quantidade de dados, em bytes, para copiar. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, isso deve ser um número par."
    return:
      type: System.Int64
      description: "O número de bytes copiados. Isso exclui qualquer bytes preenchidos."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> especificado no <code> destination </code> parâmetro está cheio."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um valor especificado no <code> amount </code>, <code> sourceOffset </code>, ou <code> destinationOffset </code> parâmetro for menor que zero ou maior que 4 gigabytes.       -or-       A value specified in the <code>amount</code>, <code>sourceOffset</code>, or <code>destinationOffset</code> parameter for a <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;></xref> data type is not even."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não está em uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> o objeto é nulo ou a conexão for fechada."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleLob.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleLob.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Data.OracleClient.OracleLob.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.EndBatch
  id: EndBatch
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: EndBatch()
  nameWithType: OracleLob.EndBatch()
  fullName: System.Data.OracleClient.OracleLob.EndBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Permite que gatilhos do lado do servidor continuar acionando depois de executar várias operações de gravação."
  remarks: "Chame o <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>método antes de começar a executar operações de gravação em <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>"
  syntax:
    content: public void EndBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.EndBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão é fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Erase
  id: Erase
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Erase()
  nameWithType: OracleLob.Erase()
  fullName: System.Data.OracleClient.OracleLob.Erase()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Apaga todos os dados deste <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Apagar não truncar os dados. O `LOB` comprimento permanece o mesmo para um `BLOB` tipo de dados, e os dados apagados são substituídos por 0x00. `CLOB`e `NCLOB` tipos de dados são substituídos por espaços.       Para gravar o `LOB`, você deve recuperar o `LOB` usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.      > [!NOTE] > Nesta versão, uma operação de gravação para somente leitura `LOB` pode ter êxito, mas não atualiza o `LOB` no servidor. Nesse caso, no entanto, a cópia local do `LOB` é atualizado. Portanto, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto pode retornar os resultados da operação de gravação.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long Erase ();
    parameters: []
    return:
      type: System.Int64
      description: "O número de bytes apagados."
  overload: System.Data.OracleClient.OracleLob.Erase*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não está em uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> o objeto é nulo ou a conexão for fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  id: Erase(System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Erase(Int64,Int64)
  nameWithType: OracleLob.Erase(Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.Erase(Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Apaga a quantidade especificada de dados neste <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "A soma dos valores de `offset` e `amount` parâmetros podem ser maiores do que o tamanho de <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> Portanto, especificando um valor maior do que o retornado pelo <xref:System.Data.OracleClient.OracleLob.Length%2A>propriedade for bem-sucedida; no entanto <xref:System.Data.OracleClient.OracleLob.Erase%2A>apaga apenas ao final de <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Erase%2A> </xref:System.Data.OracleClient.OracleLob.Length%2A> (Da mesma forma, se um valor negativo for passado para `offset`, <xref:System.Data.OracleClient.OracleLob.Erase%2A>seja bem-sucedida, mas apenas apagar a partir do início do <xref:System.Data.OracleClient.OracleLob>.)</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Erase%2A> Esse comportamento é diferente de <xref:System.Data.OracleClient.OracleLob.Read%2A>e <xref:System.Data.OracleClient.OracleLob.Write%2A>métodos e oferece a vantagem de poder apagar todos os dados do valor especificada pelo `offset` sem fazer uma ida e volta adicional para o servidor para verificar o tamanho real.</xref:System.Data.OracleClient.OracleLob.Write%2A> </xref:System.Data.OracleClient.OracleLob.Read%2A>       <xref:System.Data.OracleClient.OracleLob.Erase%2A>não truncar os dados.</xref:System.Data.OracleClient.OracleLob.Erase%2A> O `LOB` comprimento permanece o mesmo para um `BLOB` tipo de dados, e os dados apagados são substituídos por 0x00. `CLOB`e `NCLOB` tipos de dados são substituídos por espaços.       Para gravar o `LOB`, você deve recuperar o `LOB` usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.      > [!NOTE] > Nesta versão, uma operação de gravação para somente leitura `LOB` pode ter êxito, mas não atualiza o `LOB` no servidor. Nesse caso, no entanto, a cópia local do `LOB` é atualizado. Portanto, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto pode retornar os resultados da operação de gravação.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long Erase (long offset, long amount);
    parameters:
    - id: offset
      type: System.Int64
      description: "O deslocamento do qual deseja apagar. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, isso deve ser um número par."
    - id: amount
      type: System.Int64
      description: "A quantidade de dados, em bytes, para apagar. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, isso deve ser um número par."
    return:
      type: System.Int64
      description: "O número de bytes apagados."
  overload: System.Data.OracleClient.OracleLob.Erase*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não está em uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> o objeto é nulo ou a conexão for fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Flush
  id: Flush
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Flush()
  nameWithType: OracleLob.Flush()
  fullName: System.Data.OracleClient.OracleLob.Flush()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Atualmente não há suporte."
  remarks: "Nesta versão, este método não está funcionando."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsBatched
  id: IsBatched
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsBatched
  nameWithType: OracleLob.IsBatched
  fullName: System.Data.OracleClient.OracleLob.IsBatched
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se um aplicativo chamado o <xref:System.Data.OracleClient.OracleLob.BeginBatch*>método.</xref:System.Data.OracleClient.OracleLob.BeginBatch*>"
  remarks: 'Ao usar um servidor Oracle 8.0.5, um Oracle &quot;ORA-00600: código de erro interno&quot; exceção será lançada.'
  syntax:
    content: public bool IsBatched { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o aplicativo chamado o <xref:System.Data.OracleClient.OracleLob.BeginBatch*>método, caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.OracleClient.OracleLob.BeginBatch*>"
  overload: System.Data.OracleClient.OracleLob.IsBatched*
  exceptions:
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleLob.IsNull
  fullName: System.Data.OracleClient.OracleLob.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> é um <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;> </xref> fluxo."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref> is a <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref> stream, otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleLob.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsTemporary
  id: IsTemporary
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
  fullName: System.Data.OracleClient.OracleLob.IsTemporary
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> é um temporário <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>."
  remarks: "O exemplo a seguir demonstra como criar um temporário `LOB`.      ```   OracleConnection connection = new OracleConnection(&quot;server=MyServer; integrated security=yes;&quot;);   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = &quot;declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;&quot;;   command.Parameters.Add(new OracleParameter(&quot;tempblob&quot;, OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = &quot;MyTable.MyProc&quot;;   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter(&quot;ImportDoc&quot;, OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```"
  syntax:
    content: public bool IsTemporary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> é um temporário <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>, caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleLob.IsTemporary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão é fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Length
  id: Length
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Length
  nameWithType: OracleLob.Length
  fullName: System.Data.OracleClient.OracleLob.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que retorna o tamanho do <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "O tamanho do <xref:System.Data.OracleClient.OracleLob>sempre é retornado em bytes para todos os tipos de dados.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "O tamanho do <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> em bytes."
  overload: System.Data.OracleClient.OracleLob.Length*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão é fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.LobType
  id: LobType
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: LobType
  nameWithType: OracleLob.LobType
  fullName: System.Data.OracleClient.OracleLob.LobType
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que retorna o <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> tipo de dados."
  remarks: "Um <xref:System.Data.OracleClient.OracleLob>pode ser um dos seguintes <xref:System.Data.OracleClient.OracleType>tipos de dados.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob>      | Tipo de dados de OracleType | Descrição |   |--------------------------|-----------------|   | `Blob`| Um Oracle `BLOB` tipo de dados que contém dados binários com um tamanho máximo de 4 gigabytes. Isso mapeia para um <xref:System.Array>do tipo <xref:System.Byte>. |   | `Clob`| Um Oracle `CLOB` tipo de dados que contém dados de caracteres, com base no caractere padrão definido no servidor, com um tamanho máximo de 4 gigabytes.</xref:System.Byte> </xref:System.Array> Isso mapeia para <xref:System.String>. |   | `NClob`| Um Oracle `NCLOB` tipo de dados que contém dados de caracteres, com base em conjunto no servidor com um tamanho máximo de 4 gigabytes de caracteres nacional.</xref:System.String> Isso mapeia para <xref:System.String>. |</xref:System.String>"
  syntax:
    content: public System.Data.OracleClient.OracleType LobType { get; }
    return:
      type: System.Data.OracleClient.OracleType
      description: "Uma da <xref href=&quot;System.Data.OracleClient.OracleType&quot;> </xref> <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> tipos de dados."
  overload: System.Data.OracleClient.OracleLob.LobType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleLob.Null
  fullName: System.Data.OracleClient.OracleLob.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Representa um valor nulo <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto."
  remarks: "Você pode construir um <xref:System.Data.OracleClient.OracleLob>que é NULL usando este formato: ```   OracleLob myLob = OracleLOB.Null;   ``` essa técnica é usada principalmente para testar se um `LOB` retornado do servidor for NULL, como mostra este exemplo: ```   If(myLob == OracleLob.Null)   ``` um nulo `LOB` se comporta da mesma forma para um byte zero `LOB` que <xref:System.Data.OracleClient.OracleLob.Read%2A>terá êxito e sempre retorna zero bytes.</xref:System.Data.OracleClient.OracleLob.Read%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public static readonly System.Data.OracleClient.OracleLob Null;
    return:
      type: System.Data.OracleClient.OracleLob
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Position
  id: Position
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Position
  nameWithType: OracleLob.Position
  fullName: System.Data.OracleClient.OracleLob.Position
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém a atual posição de leitura de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo."
  remarks: "O fluxo deve oferecer suporte a busca obter ou definir a posição. Use o <xref:System.Data.OracleClient.OracleLob.CanSeek%2A>propriedade para determinar se o fluxo oferece suporte à busca.</xref:System.Data.OracleClient.OracleLob.CanSeek%2A>       Há suporte para busca em qualquer local além do comprimento do fluxo. Buscando uma posição ímpar para `CLOB` e `NCLOB` também há suporte para tipos de dados. Para obter mais informações, consulte a seção comentários a <xref:System.Data.OracleClient.OracleLob.Read%2A>propriedade.</xref:System.Data.OracleClient.OracleLob.Read%2A>       A propriedade de posição não manter controle do número de bytes do fluxo que tiverem sido consumidos, ignorado, ou ambos."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A posição atual dentro do <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo."
  overload: System.Data.OracleClient.OracleLob.Position*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão é fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleLob.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lê uma sequência de bytes do atual <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo e avança a posição dentro do fluxo pelo número de bytes lidos."
  remarks: "O método de leitura lê um máximo de `count` de fluxo de bytes do atual e armazena-os em `buffer` começando no `offset`. A posição atual dentro do fluxo for avançada pelo número de bytes lido; No entanto, se ocorrer uma exceção, a posição atual dentro do fluxo permanece inalterada. Leitura retorna o número de bytes lidos. O valor de retorno é zero apenas se a posição do final do fluxo. Leitura será bloqueado até que pelo menos um byte de dados podem ser lidos, que não há dados disponíveis. Leitura retorna 0 se você tentar ler de um `LOB` quando a posição atual está no final da `LOB`. Leitura pode retornar menos bytes que solicitado, mesmo se não foi atingido o fim do fluxo.       O provedor de dados .NET Framework para Oracle trata todos os `CLOB` e `NCLOB` dados como Unicode. Portanto, ao acessar `CLOB` e `NCLOB` tipos de dados, você sempre está lidando com o número de bytes, onde cada caractere é de 2 bytes. Por exemplo, se uma cadeia de caracteres de texto que contém três caracteres é salvo como um `NCLOB` em um servidor Oracle onde o conjunto de caracteres é de 4 bytes por caractere, e você executar uma `Read` operação, especifique o comprimento da cadeia de caracteres como 6 bytes, embora ele é armazenado como 12 bytes no servidor.       O exemplo c# a seguir demonstra como ler <xref:System.Data.OracleClient.OracleLob>objetos.</xref:System.Data.OracleClient.OracleLob>      ```   public static void ReadLobExample(OracleCommand command)   {      int actual = 0;         //Select some data.      // Table Schema:      //  &quot;CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)&quot;;      //  &quot;INSERT INTO TableWithLobs values (1, &quot;AA&quot;, &quot;AAA&quot;, N&quot;AAAA&quot;)&quot;;      command.CommandText = &quot;SELECT * FROM TableWithLobs&quot;;      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain the LOBs (all 3 varieties).         OracleLob BLOB = reader.GetOracleLob(1);         OracleLob CLOB  = reader.GetOracleLob(2);         OracleLob NCLOB = reader.GetOracleLob(3);            //Example - Reading binary data (in chunks).         byte[] buffer = new byte[100];         while((actual = BLOB.Read(buffer, 0, buffer.Length)) >0)            Console.WriteLine(BLOB.LobType + &quot;.Read(&quot; + buffer + &quot;, &quot; + buffer.Length + &quot;) => &quot; + actual);            //Example - Reading CLOB/NCLOB data (in chunks).         //Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).         //However, because the OracleLob object inherits directly from the.NET stream object,          //all the existing classes that manipluate streams can also be used. For example, the          //.NET StreamReader makes converting the raw bytes into actual characters easier.         StreamReader streamreader = new StreamReader(CLOB, Encoding.Unicode);         char[] cbuffer = new char[100];         while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) >0)            Console.WriteLine(CLOB.LobType + &quot;.Read(&quot; + new string(cbuffer, 0, actual) + &quot;, &quot; + cbuffer.Length + &quot;) => &quot; + actual);            //Example - Reading data (all at once).         //You could use StreamReader.ReadToEnd to obtain all the string data,or simply         //call OracleLob.Value to obtain a contiguous allocation of all the data.         Console.WriteLine(NCLOB.LobType + &quot;.Value => &quot; + NCLOB.Value);      }   }   ```Você pode construir um <xref:System.Data.OracleClient.OracleLob>que é NULL usando este formato: ```   OracleLob myLob = OracleLob.Null;   ``` essa técnica é usada principalmente para testar se um `LOB` retornado do servidor for NULL, como mostra o exemplo a seguir.</xref:System.Data.OracleClient.OracleLob>      ```   If(myLob == OracleLob.Null)   ```Um valor nulo `LOB` se comporta da mesma forma para um byte zero `LOB` leitura bem-sucedida e sempre retorna zero bytes."
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Uma matriz de bytes. Quando este método retorna, o buffer contém a matriz de bytes especificada com os valores entre `offset` e (`offset` + `count`) substituídos pelos bytes lidos da origem atual."
    - id: offset
      type: System.Int32
      description: "O deslocamento de bytes baseado em zero em `buffer` no qual começar a armazenar os dados lidos do fluxo atual. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, isso deve ser um número par."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes a serem lidos do fluxo atual. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, isso deve ser um número par."
    return:
      type: System.Int32
      description: "O número total de bytes lidos no buffer. Isso pode ser menor que o número de bytes solicitado se que muitos bytes não estão disponíveis no momento ou zero (0) se o fim do fluxo foi atingido."
  overload: System.Data.OracleClient.OracleLob.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> buffer </code> é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um valor de <code> offset </code> ou <code> count </code> parâmetro não é positivo.       - ou - a soma dos parâmetros de deslocamento e contagem é maior do que o comprimento do buffer.       Um valor especificado em - ou - o <code> amount </code> ou <code> offset </code> parâmetro for menor que zero ou maior que 4 gigabytes."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não está em uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> o objeto é nulo ou a conexão for fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleLob.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleLob.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Define a posição atual <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo."
  remarks: "Se `offset` é negativo, a nova posição deve preceder a posição especificada pelo `origin` pelo número de bytes especificado por `offset`. Se `offset` for zero, a nova posição deve ser a posição especificada pelo `origin`. Se `offset` for positivo, a nova posição deve seguir a posição especificada pelo `origin` pelo número de bytes especificado por `offset`.       Há suporte para busca em qualquer local além do comprimento do fluxo. Buscando uma posição ímpar para `CLOB` e `NCLOB` também há suporte para tipos de dados. Para obter mais informações, consulte a seção comentários a <xref:System.Data.OracleClient.OracleLob.Read%2A>propriedade.</xref:System.Data.OracleClient.OracleLob.Read%2A>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Um deslocamento de bytes em relação a origem. Se `offset` é negativo, a nova posição precede a posição especificada pelo `origin` pelo número de bytes especificado por `offset`. Se `offset` for zero, a nova posição é a posição especificada pelo `origin`. Se `offset` for positivo, a nova posição segue a posição especificada pelo `origin` pelo número de bytes especificado por `offset`."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Um valor do tipo <xref:System.IO.SeekOrigin>que indica o ponto de referência usado para obter a nova posição.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "A nova posição dentro do fluxo atual."
  overload: System.Data.OracleClient.OracleLob.Seek*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> origin </code> parâmetro não tem um valor válido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A posição resultante é além do comprimento do valor."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: OracleLob.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleLob.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Define o comprimento do <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo para um valor menor que o tamanho atual."
  remarks: "Uma tentativa de aumentar o tamanho do <xref:System.Data.OracleClient.OracleLob>fluxo falhará e retornará &quot;mensagem: ORA-22926: especificado trim comprimento é maior que o comprimento do valor de LOB atual&quot; do servidor Oracle.</xref:System.Data.OracleClient.OracleLob>       Um fluxo deve oferecer suporte tanto gravação e busca para SetLength à função.       O provedor de dados .NET Framework para Oracle trata todos os `CLOB` e `NCLOB` dados como Unicode. Portanto, ao acessar `CLOB` e `NCLOB` tipos de dados, você sempre está lidando com o número de bytes, onde cada caractere é de 2 bytes. Por exemplo, se uma cadeia de caracteres de texto que contém três caracteres é salvo como um `NCLOB` em um servidor Oracle onde o conjunto de caracteres é de 4 bytes por caractere, e você executar uma `SetLength` operação, especifique o comprimento da cadeia de caracteres como 6 bytes, embora ele é armazenado como 12 bytes no servidor.       Para gravar o `LOB`, você deve recuperar o `LOB` usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.      > [!NOTE] > A operação de gravação para somente leitura `LOB` pode ter êxito, mas não atualiza o `LOB` no servidor. Nesse caso, no entanto, a cópia local do `LOB` é atualizado. Portanto, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto pode retornar os resultados da operação de gravação.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "O comprimento desejado do atual <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo em bytes. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, isso deve ser um número par."
  overload: System.Data.OracleClient.OracleLob.SetLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um valor especificado no <code> value </code> parâmetro para um <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipo de dados não é par.       Um valor especificado em - ou - o <code> value </code> parâmetro for menor que zero ou maior que 4 gigabytes."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não está em uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> o objeto é nulo ou a conexão for fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Value
  id: Value
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Value
  nameWithType: OracleLob.Value
  fullName: System.Data.OracleClient.OracleLob.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém o valor de fluxo de tempo de execução de linguagem comum equivalente do valor subjacente."
  remarks: "Para <xref:System.Data.OracleClient.OracleType>tipos de dados, o valor retorna todos os dados subjacentes como uma matriz do tipo de contígua `Byte[]`.</xref:System.Data.OracleClient.OracleType> Para <xref:System.Data.OracleClient.OracleType>e <xref:System.Data.OracleClient.OracleType>tipos de dados, o valor retorna todos os dados como um `String` tipo de dados.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleType> Para dados nulos, o valor retorna <xref:System.DBNull>.</xref:System.DBNull> Comparando os valores retornados, você pode distinguir entre os dados vazios, nulo dados e dados.      > [!NOTE] > Uma vantagem de usar `LOB` tipos de dados é a capacidade de recuperar grandes quantidades de dados em partes no cliente. No entanto, quando você usa o valor, você obter todos os dados para o `LOB` coluna como uma parte de contígua, que pode aumentar significativamente a sobrecarga de aplicativo."
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "For <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref>, an array of type <xref uid=&quot;langword_csharp_Byte[]&quot; name=&quot;Byte[]&quot; href=&quot;&quot;></xref>. For <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref> and <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref>, a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Para dados nulos, <xref href=&quot;System.DBNull&quot;> </xref>."
  overload: System.Data.OracleClient.OracleLob.Value*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleLob.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Grava uma sequência de bytes atual <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo e avança a posição atual dentro do fluxo pelo número de bytes gravados."
  remarks: "Se a operação de gravação for bem-sucedida, a posição dentro do fluxo avança pelo número de bytes gravados. Se ocorrer uma exceção, a posição dentro do fluxo permanecerá inalterada.       Gravando além do fim de `LOB` é permitida e amplia o `LOB` pelo número de bytes gravados.       O provedor de dados .NET Framework para Oracle trata todos os `CLOB` e `NCLOB` dados como Unicode. Portanto, ao acessar `CLOB` e `NCLOB` tipos de dados, você sempre está lidando com o número de bytes, onde cada caractere é de 2 bytes. Por exemplo, se uma cadeia de caracteres de texto que contém três caracteres é salvo como um `NCLOB` em um servidor Oracle onde o conjunto de caracteres é de 4 bytes por caractere, e você executar uma `Write` operação, especifique o comprimento da cadeia de caracteres como 6 bytes, embora ele é armazenado como 12 bytes no servidor.       Para gravar o `LOB`, você deve recuperar o `LOB` usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.       O exemplo c# a seguir demonstra como gravar <xref:System.Data.OracleClient.OracleLob>objetos.</xref:System.Data.OracleClient.OracleLob>      ```   public static void WriteLobExample(OracleCommand command)   {      //Note: Updating LOB data requires a transaction.      command.Transaction = command.Connection.BeginTransaction();      //Select some data.      //    Table Schema:      //        &quot;CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)&quot;;      //        &quot;INSERT INTO tablewithlobs values (1, &quot;AA&quot;, &quot;AAA&quot;)&quot;;      command.CommandText = &quot;SELECT * FROM TableWithLobs FOR UPDATE&quot;;      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain both LOBs.         OracleLob BLOB1    = reader.GetOracleLob(1);         OracleLob BLOB2    = reader.GetOracleLob(2);         //Perform any desired operations on the LOB, (read, position, and so on).         //...         //Example - Writing binary data (directly to the backend).         //To write, you can use any of the stream classes, or write raw binary data using          //the OracleLob write method. Writing character vs. binary is the same;         //however note that character is always in terms of Unicode byte counts         //(for example: even number of bytes - 2 bytes for every Unicode character).         byte[] buffer = new byte[100];         buffer[0] = 0xCC;         buffer[1] = 0xDD;         BLOB1.Write(buffer, 0, 2);         BLOB1.Position = 0;         Console.WriteLine(BLOB1.LobType + &quot;.Write(&quot; + buffer + &quot;, 0, 2) => &quot; + BLOB1.Value);            //Example - Copying data into another LOB.         long actual = BLOB1.CopyTo(BLOB2);         Console.WriteLine(BLOB1.LobType + &quot;.CopyTo(&quot; + BLOB2.Value + &quot;) => &quot; + actual);            //Commit the transaction now that everything succeeded.         //Note: On error, Transaction.Dispose is called (from the using statement)         //and will automatically roll-back the pending transaction.         command.Transaction.Commit();      }   }   ```      > [!NOTE]> A operação de gravação para somente leitura `LOB` pode ter êxito, mas não atualiza o `LOB` no servidor. Nesse caso, no entanto, a cópia local do `LOB` é atualizado. Portanto, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto pode retornar os resultados da operação de gravação.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Uma matriz de bytes. Esse método copia o número de bytes especificado na `count` de `buffer` para o fluxo atual."
    - id: offset
      type: System.Int32
      description: "O deslocamento de bytes baseado em zero em `buffer` no qual começar a copiar bytes para o fluxo atual. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, isso deve ser um número par."
    - id: count
      type: System.Int32
      description: "O número de bytes a serem gravados no fluxo atual. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, isso deve ser um número par."
  overload: System.Data.OracleClient.OracleLob.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> buffer </code> parâmetro é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um valor de <code> offset </code> ou <code> count </code> parâmetro não é positivo.       - ou - a soma da <code> offset </code> e <code> count </code> parâmetros é maior do que o <code> buffer </code> comprimento.       Um valor especificado em - ou - o <code> count </code> ou <code> offset </code> parâmetro for menor que zero ou maior que 4 gigabytes.       - ou - você deve especificar <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados como um número par de bytes."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não está em uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> o objeto é nulo ou a conexão for fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou descartado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro do Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: OracleLob.WriteByte(Byte)
  fullName: System.Data.OracleClient.OracleLob.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Grava um byte para a posição atual no <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo e avança a posição dentro do fluxo por um byte."
  remarks: "Se a operação de gravação for bem-sucedida, a posição dentro do fluxo avança por um byte. Se ocorrer uma exceção, a posição dentro do fluxo permanecerá inalterada.       Gravando além do fim do `LOB` é permitida e amplia o `LOB` por um byte.       Para gravar o `LOB`, você deve recuperar o `LOB` usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.      > [!NOTE] > A operação de gravação para somente leitura `LOB` pode ter êxito, mas não atualiza o `LOB` no servidor. Nesse caso, no entanto, a cópia local do `LOB` é atualizado. Portanto, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto pode retornar os resultados da operação de gravação.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "O byte para gravar no fluxo."
  overload: System.Data.OracleClient.OracleLob.WriteByte*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Append(OracleLob)
  nameWithType: OracleLob.Append(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.Append(OracleLob)
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleLob.BeginBatch
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch()
  nameWithType: OracleLob.BeginBatch()
  fullName: System.Data.OracleClient.OracleLob.BeginBatch()
- uid: System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch(OracleLobOpenMode)
  nameWithType: OracleLob.BeginBatch(OracleLobOpenMode)
  fullName: System.Data.OracleClient.OracleLob.BeginBatch(OracleLobOpenMode)
- uid: System.Data.OracleClient.OracleLobOpenMode
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLobOpenMode
  nameWithType: OracleLobOpenMode
  fullName: System.Data.OracleClient.OracleLobOpenMode
- uid: System.Data.OracleClient.OracleLob.CanRead
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanRead
  nameWithType: OracleLob.CanRead
  fullName: System.Data.OracleClient.OracleLob.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleLob.CanSeek
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanSeek
  nameWithType: OracleLob.CanSeek
  fullName: System.Data.OracleClient.OracleLob.CanSeek
- uid: System.Data.OracleClient.OracleLob.CanWrite
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanWrite
  nameWithType: OracleLob.CanWrite
  fullName: System.Data.OracleClient.OracleLob.CanWrite
- uid: System.Data.OracleClient.OracleLob.ChunkSize
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
  fullName: System.Data.OracleClient.OracleLob.ChunkSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleLob.Clone
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Clone()
  nameWithType: OracleLob.Clone()
  fullName: System.Data.OracleClient.OracleLob.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleLob.Connection
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Connection
  nameWithType: OracleLob.Connection
  fullName: System.Data.OracleClient.OracleLob.Connection
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(OracleLob)
  nameWithType: OracleLob.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleLob.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob,Int64)
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
- uid: System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleLob.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleLob.Dispose(Boolean)
- uid: System.Data.OracleClient.OracleLob.EndBatch
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: EndBatch()
  nameWithType: OracleLob.EndBatch()
  fullName: System.Data.OracleClient.OracleLob.EndBatch()
- uid: System.Data.OracleClient.OracleLob.Erase
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase()
  nameWithType: OracleLob.Erase()
  fullName: System.Data.OracleClient.OracleLob.Erase()
- uid: System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase(Int64,Int64)
  nameWithType: OracleLob.Erase(Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.Erase(Int64,Int64)
- uid: System.Data.OracleClient.OracleLob.Flush
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Flush()
  nameWithType: OracleLob.Flush()
  fullName: System.Data.OracleClient.OracleLob.Flush()
- uid: System.Data.OracleClient.OracleLob.IsBatched
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsBatched
  nameWithType: OracleLob.IsBatched
  fullName: System.Data.OracleClient.OracleLob.IsBatched
- uid: System.Data.OracleClient.OracleLob.IsNull
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsNull
  nameWithType: OracleLob.IsNull
  fullName: System.Data.OracleClient.OracleLob.IsNull
- uid: System.Data.OracleClient.OracleLob.IsTemporary
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
  fullName: System.Data.OracleClient.OracleLob.IsTemporary
- uid: System.Data.OracleClient.OracleLob.Length
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Length
  nameWithType: OracleLob.Length
  fullName: System.Data.OracleClient.OracleLob.Length
- uid: System.Data.OracleClient.OracleLob.LobType
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: LobType
  nameWithType: OracleLob.LobType
  fullName: System.Data.OracleClient.OracleLob.LobType
- uid: System.Data.OracleClient.OracleType
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleType
  nameWithType: OracleType
  fullName: System.Data.OracleClient.OracleType
- uid: System.Data.OracleClient.OracleLob.Null
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: "Null"
  nameWithType: OracleLob.Null
  fullName: System.Data.OracleClient.OracleLob.Null
- uid: System.Data.OracleClient.OracleLob.Position
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Position
  nameWithType: OracleLob.Position
  fullName: System.Data.OracleClient.OracleLob.Position
- uid: System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleLob.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Read(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleLob.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleLob.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: SetLength(Int64)
  nameWithType: OracleLob.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleLob.SetLength(Int64)
- uid: System.Data.OracleClient.OracleLob.Value
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Value
  nameWithType: OracleLob.Value
  fullName: System.Data.OracleClient.OracleLob.Value
- uid: System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleLob.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Write(Byte[],Int32,Int32)
- uid: System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: OracleLob.WriteByte(Byte)
  fullName: System.Data.OracleClient.OracleLob.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OracleClient.OracleLob.Append*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Append
  nameWithType: OracleLob.Append
- uid: System.Data.OracleClient.OracleLob.BeginBatch*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch
  nameWithType: OracleLob.BeginBatch
- uid: System.Data.OracleClient.OracleLob.CanRead*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanRead
  nameWithType: OracleLob.CanRead
- uid: System.Data.OracleClient.OracleLob.CanSeek*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanSeek
  nameWithType: OracleLob.CanSeek
- uid: System.Data.OracleClient.OracleLob.CanWrite*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanWrite
  nameWithType: OracleLob.CanWrite
- uid: System.Data.OracleClient.OracleLob.ChunkSize*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
- uid: System.Data.OracleClient.OracleLob.Clone*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Clone
  nameWithType: OracleLob.Clone
- uid: System.Data.OracleClient.OracleLob.Connection*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Connection
  nameWithType: OracleLob.Connection
- uid: System.Data.OracleClient.OracleLob.CopyTo*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo
  nameWithType: OracleLob.CopyTo
- uid: System.Data.OracleClient.OracleLob.Dispose*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Dispose
  nameWithType: OracleLob.Dispose
- uid: System.Data.OracleClient.OracleLob.EndBatch*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: EndBatch
  nameWithType: OracleLob.EndBatch
- uid: System.Data.OracleClient.OracleLob.Erase*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase
  nameWithType: OracleLob.Erase
- uid: System.Data.OracleClient.OracleLob.Flush*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Flush
  nameWithType: OracleLob.Flush
- uid: System.Data.OracleClient.OracleLob.IsBatched*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsBatched
  nameWithType: OracleLob.IsBatched
- uid: System.Data.OracleClient.OracleLob.IsNull*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsNull
  nameWithType: OracleLob.IsNull
- uid: System.Data.OracleClient.OracleLob.IsTemporary*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
- uid: System.Data.OracleClient.OracleLob.Length*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Length
  nameWithType: OracleLob.Length
- uid: System.Data.OracleClient.OracleLob.LobType*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: LobType
  nameWithType: OracleLob.LobType
- uid: System.Data.OracleClient.OracleLob.Position*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Position
  nameWithType: OracleLob.Position
- uid: System.Data.OracleClient.OracleLob.Read*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Read
  nameWithType: OracleLob.Read
- uid: System.Data.OracleClient.OracleLob.Seek*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Seek
  nameWithType: OracleLob.Seek
- uid: System.Data.OracleClient.OracleLob.SetLength*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: SetLength
  nameWithType: OracleLob.SetLength
- uid: System.Data.OracleClient.OracleLob.Value*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Value
  nameWithType: OracleLob.Value
- uid: System.Data.OracleClient.OracleLob.Write*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Write
  nameWithType: OracleLob.Write
- uid: System.Data.OracleClient.OracleLob.WriteByte*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: WriteByte
  nameWithType: OracleLob.WriteByte
