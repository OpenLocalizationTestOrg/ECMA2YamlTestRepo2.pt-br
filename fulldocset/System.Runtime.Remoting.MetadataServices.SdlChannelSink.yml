### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  id: SdlChannelSink
  children:
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
  langs:
  - csharp
  name: SdlChannelSink
  nameWithType: SdlChannelSink
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  type: Class
  summary: "Fornece a implementação de um servidor de coletor de canal que gera WSDL Web Services Description Language () dinamicamente no servidor."
  remarks: "O SdlChannelSink é usado para criar o WSDL em situações onde a URL termina com a cadeia de caracteres &quot;? wsdl&quot;.       A tabela a seguir mostra o canal de propriedades de configuração que podem ser especificadas para esse coletor de canal. Combinam as duas primeiras propriedades para controlar a publicação WSDL dos objetos publicados pelo domínio do aplicativo. Se `false` for especificado para a primeira propriedade, nenhuma WSDL será retornado, independentemente da segunda propriedade. (O padrão é `true`.) Caso contrário, o segundo controla se o objeto de metadados globais URI tem permissão para responder. (O padrão é `false`.)      | Propriedade | Descrição |   |--------------|-----------------|   | `metadataEnabled`| Um valor booleano que especifica se deve cumprir as solicitações que terminam com &quot;? wsdl&quot; se esse coletor está na cadeia de coletor de canal. A configuração padrão é `true`. Se `false`, o coletor gera uma exceção em todos os casos em que a solicitação de metadados para qualquer objeto no domínio do aplicativo.<br /><br /> Essa propriedade é suportada somente pelo .NET Framework versão 1.1 nas seguintes plataformas: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, família Windows Server 2003. |   | `remoteApplicationMetadataEnabled`| Um valor booleano que especifica se deve cumprir as solicitações para o objeto URI &quot;RemoteApplicationMetadata? wsdl&quot;, que retorna o WSDL que descreve todos os objetos que são publicados pelo domínio do aplicativo. Se `false`, em seguida, todas as solicitações para &quot;RemoteApplicationMetadata.rem&quot; lança uma exceção. Todos os outros &quot;? wsdl&quot; solicitações de determinado objeto URIs são respeitadas. Se `true`, a solicitação de metadados global é respeitada. A configuração padrão é `false`.<br /><br /> Essa propriedade é suportada somente pelo .NET Framework versão 1.1 nas seguintes plataformas: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, família Windows Server 2003. |"
  syntax:
    content: 'public class SdlChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Remoting.Channels.IServerChannelSink
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)
  id: '#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)'
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: SdlChannelSink(IChannelReceiver,IServerChannelSink)
  nameWithType: SdlChannelSink.SdlChannelSink(IChannelReceiver,IServerChannelSink)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.SdlChannelSink(IChannelReceiver,IServerChannelSink)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Remoting.MetadataServices.SdlChannelSink&quot;> </xref> classe."
  syntax:
    content: public SdlChannelSink (System.Runtime.Remoting.Channels.IChannelReceiver receiver, System.Runtime.Remoting.Channels.IServerChannelSink nextSink);
    parameters:
    - id: receiver
      type: System.Runtime.Remoting.Channels.IChannelReceiver
      description: "Indica o canal que receberá as mensagens serializadas pela nova instância do <xref href=&quot;System.Runtime.Remoting.MetadataServices.SdlChannelSink&quot;> </xref>."
    - id: nextSink
      type: System.Runtime.Remoting.Channels.IServerChannelSink
      description: "O coletor Avançar na cadeia de coletor."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  id: AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  nameWithType: SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "Solicitações de processamento do coletor atual da resposta de uma chamada de método foi enviada de forma assíncrona."
  syntax:
    content: public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
      description: "Uma pilha de Coletores que levam para o coletor de transporte do servidor."
    - id: state
      type: System.Object
      description: "Informações associadas com o coletor atual, gerado no lado de solicitação e necessária no lado de resposta."
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "A mensagem de resposta."
    - id: headers
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "Os cabeçalhos para adicionar ao cabeçalho da mensagem de retorno ao cliente."
    - id: stream
      type: System.IO.Stream
      description: "O cabeçalho de fluxo de volta para o coletor de transporte."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  id: GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  nameWithType: SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "Retorna o <xref:System.IO.Stream>até que a mensagem de resposta fornecida é a ser serializado.</xref:System.IO.Stream>"
  remarks: "O método atual é chamado quando um fluxo de resposta deve ser criada."
  syntax:
    content: public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
      description: "Uma pilha de Coletores que levam para o coletor de transporte do servidor."
    - id: state
      type: System.Object
      description: "Informações associadas com o coletor atual, gerado no lado de solicitação e necessária no lado de resposta."
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "A mensagem de resposta para serializar."
    - id: headers
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "Os cabeçalhos para colocar no fluxo de resposta ao cliente."
    return:
      type: System.IO.Stream
      description: "O <xref:System.IO.Stream>até que a mensagem de resposta fornecida é a ser serializado.</xref:System.IO.Stream>"
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
  id: NextChannelSink
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: NextChannelSink
  nameWithType: SdlChannelSink.NextChannelSink
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "Obtém o próximo <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSink&quot;> </xref> na cadeia de coletor."
  syntax:
    content: public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }
    return:
      type: System.Runtime.Remoting.Channels.IServerChannelSink
      description: "O próximo <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSink&quot;> </xref> na cadeia de coletor."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  id: ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  nameWithType: SdlChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "Mensagem de solicitações de processamento do coletor atual."
  remarks: "Trabalho de proxy é converter uma chamada de método é chamada em-lo em um objeto de mensagem. O objeto de mensagem, que implementa o <xref:System.Runtime.Remoting.Messaging.IMessage>interface, é passado do lado do cliente para o final do servidor invocando <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A>em objetos de coletor de mensagem.</xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> </xref:System.Runtime.Remoting.Messaging.IMessage> Coletores de mensagem são encadeadas, que significa que cada receptor da mensagem é responsável por chamar <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A>no coletor próxima mensagem depois que ele tiver executado seu trabalho.</xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> Por exemplo, um coletor de mensagens relacionadas a sincronização pode causar um bloqueio ser adquirido ou liberado e delegado para o coletor de mensagem downstream.       Quando o coletor de canal de formatador obtém uma mensagem que precisa ser enviada pelo canal, ele chama <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passando a mensagem como um parâmetro.</xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A> O coletor do formatador, em seguida, cria a matriz de cabeçalho de transporte e chama <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A>no coletor do formatador.</xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> Esta chamada é encaminhada para baixo da cadeia de coletor e qualquer coletor pode criar um fluxo de solicitação que é passado de volta para o coletor do formatador. Depois disso, chame retorna, a mensagem é serializada, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A>é chamado da primeira cadeia na cadeia de coletor, e a mensagem é passada para o coletor de canal.</xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A>       Depois que o canal coletores receber a mensagem, pode gravar dados no fluxo, adicionar cabeçalhos para a matriz de cabeçalho e adicionam-se à pilha do coletor antes de encaminhar a chamada para o coletor de Avançar. Quando a chamada alcançar o coletor de transporte no final da cadeia, o coletor de transporte envia os cabeçalhos e serializado mensagem sobre o canal para o servidor, em que o processo é revertido.       Quando a mensagem chega ao lado do servidor, o coletor de transporte e recupera os cabeçalhos serializado mensagem do fluxo e encaminha-os por meio da cadeia de coletor até atingirem o coletor do formatador. O coletor do formatador, em seguida, desserializa a mensagem e as encaminha para a comunicação remota, onde a mensagem é transformada em uma chamada de método e o objeto de servidor é chamado."
  syntax:
    content: public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerChannelSinkStack
      description: "Uma pilha de canal coletores que chamou o coletor atual."
    - id: requestMsg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "A mensagem que contém a solicitação."
    - id: requestHeaders
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "Os cabeçalhos que são recuperados da mensagem de entrada do cliente."
    - id: requestStream
      type: System.IO.Stream
      description: "O fluxo que precisa ser processada e passados para o coletor de desserialização."
    - id: responseMsg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "Quando este método retorna, contém um <xref href=&quot;System.Runtime.Remoting.Messaging.IMessage&quot;> </xref> que contém a mensagem de resposta. Esse parâmetro é passado não inicializado."
    - id: responseHeaders
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "Quando este método retorna, contém um <xref href=&quot;System.Runtime.Remoting.Channels.ITransportHeaders&quot;> </xref> que contém os cabeçalhos para adicionar ao cabeçalho da mensagem de retorno ao cliente. Esse parâmetro é passado não inicializado."
    - id: responseStream
      type: System.IO.Stream
      description: "Quando este método retorna, contém um <xref:System.IO.Stream>que é o título para o coletor de transporte.</xref:System.IO.Stream> Esse parâmetro é passado não inicializado."
    return:
      type: System.Runtime.Remoting.Channels.ServerProcessing
      description: "Um <xref href=&quot;System.Runtime.Remoting.Channels.ServerProcessing&quot;> </xref> valor de status que fornece informações sobre como a mensagem foi processada."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
  id: Properties
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: Properties
  nameWithType: SdlChannelSink.Properties
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "Obtém um <xref:System.Collections.IDictionary>de propriedades para o coletor de canal atual.</xref:System.Collections.IDictionary>"
  remarks: >-
    > [!NOTE]

    >  For more information, see [&#91;\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).
  syntax:
    content: public System.Collections.IDictionary Properties { get; }
    return:
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de propriedades para o coletor de canal atual.</xref:System.Collections.IDictionary>"
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: SdlChannelSink(IChannelReceiver,IServerChannelSink)
  nameWithType: SdlChannelSink.SdlChannelSink(IChannelReceiver,IServerChannelSink)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.SdlChannelSink(IChannelReceiver,IServerChannelSink)
- uid: System.Runtime.Remoting.Channels.IChannelReceiver
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IChannelReceiver
  nameWithType: IChannelReceiver
  fullName: System.Runtime.Remoting.Channels.IChannelReceiver
- uid: System.Runtime.Remoting.Channels.IServerChannelSink
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSink
  nameWithType: IServerChannelSink
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  nameWithType: SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
- uid: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerResponseChannelSinkStack
  nameWithType: IServerResponseChannelSinkStack
  fullName: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
- uid: System.Runtime.Remoting.Messaging.IMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: System.Runtime.Remoting.Messaging.IMessage
- uid: System.Runtime.Remoting.Channels.ITransportHeaders
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ITransportHeaders
  nameWithType: ITransportHeaders
  fullName: System.Runtime.Remoting.Channels.ITransportHeaders
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  nameWithType: SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: NextChannelSink
  nameWithType: SdlChannelSink.NextChannelSink
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  nameWithType: SdlChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
- uid: System.Runtime.Remoting.Channels.ServerProcessing
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ServerProcessing
  nameWithType: ServerProcessing
  fullName: System.Runtime.Remoting.Channels.ServerProcessing
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkStack
  nameWithType: IServerChannelSinkStack
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: Properties
  nameWithType: SdlChannelSink.Properties
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: SdlChannelSink
  nameWithType: SdlChannelSink.SdlChannelSink
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: AsyncProcessResponse
  nameWithType: SdlChannelSink.AsyncProcessResponse
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: GetResponseStream
  nameWithType: SdlChannelSink.GetResponseStream
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: NextChannelSink
  nameWithType: SdlChannelSink.NextChannelSink
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: ProcessMessage
  nameWithType: SdlChannelSink.ProcessMessage
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: Properties
  nameWithType: SdlChannelSink.Properties
