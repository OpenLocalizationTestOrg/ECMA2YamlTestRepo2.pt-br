### YamlMime:ManagedReference
items:
- uid: System.Windows.RoutedEvent
  id: RoutedEvent
  children:
  - System.Windows.RoutedEvent.AddOwner(System.Type)
  - System.Windows.RoutedEvent.HandlerType
  - System.Windows.RoutedEvent.Name
  - System.Windows.RoutedEvent.OwnerType
  - System.Windows.RoutedEvent.RoutingStrategy
  - System.Windows.RoutedEvent.ToString
  langs:
  - csharp
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
  type: Class
  summary: "Representa e identifica um evento roteado e declara suas características."
  remarks: "Essa classe contém o <xref:System.Windows.RoutedEvent.Name%2A>, <xref:System.Windows.RoutedEvent.RoutingStrategy%2A>, <xref:System.Windows.RoutedEvent.HandlerType%2A>, e <xref:System.Windows.RoutedEvent.OwnerType%2A>Propriedades.</xref:System.Windows.RoutedEvent.OwnerType%2A> </xref:System.Windows.RoutedEvent.HandlerType%2A> </xref:System.Windows.RoutedEvent.RoutingStrategy%2A> </xref:System.Windows.RoutedEvent.Name%2A> Nenhum desses membros podem ter valores nulos.       Esta classe possui um uso XAML que destina-se exclusivamente para fornecer o valor da <xref:System.Windows.EventTrigger.RoutedEvent%2A>propriedade de um <xref:System.Windows.EventTrigger>(ou classe derivada), ou para o <xref:System.Windows.EventSetter.Event%2A>propriedade de um <xref:System.Windows.EventSetter>(ou classe derivada).</xref:System.Windows.EventSetter> </xref:System.Windows.EventSetter.Event%2A> </xref:System.Windows.EventTrigger> </xref:System.Windows.EventTrigger.RoutedEvent%2A> Para obter mais informações sobre <xref:System.Windows.EventTrigger>, <xref:System.Windows.EventSetter>, e os usos de XAML para essas classes, consulte [visão geral sobre eventos roteados](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.EventSetter> </xref:System.Windows.EventTrigger>      <a name=&quot;xamlAttributeUsage_RoutedEvent&quot;></a># # Uso do atributo XAML ```   <object property=&quot;eventName&quot;/>   - or -   <object property=&quot;type.eventName&quot;/>      ``` <a name=&quot;xamlValues_RoutedEvent&quot;> </a> # # XAML valores *eventName* um nome de evento não qualificados, equivalente a <xref:System.Windows.RoutedEvent.Name%2A>propriedade do campo RoutedEvent, não o nome do membro real do campo de identificador RoutedEvent dentro de um tipo.</xref:System.Windows.RoutedEvent.Name%2A>       Sem qualificação, *eventName* deve nomear um evento como encontrado no tipo que é o <xref:System.Windows.Style.TargetType%2A>do estilo atual que contém a <xref:System.Windows.EventSetter>ou <xref:System.Windows.EventTrigger>.</xref:System.Windows.EventTrigger> </xref:System.Windows.EventSetter> </xref:System.Windows.Style.TargetType%2A>       *tipo de* o tipo a ser usado para qualificar o nome do evento. Se fornecido um prefixo, *tipo* deve ser um tipo dentro do namespace XAML padrão, e que pode ser mapeado para um tipo CLR existente. Para eventos personalizados ou eventos que estão em tipos fora do namespace XAML padrão, a cadeia de caracteres para *tipo* pode incluir um prefixo de namespace do XAML mapeado. Esse namespace XAML deve conter o tipo de XAML que pode ser mapeados para um tipo de CLR de apoio e tipo CLR deve definir o identificador de eventos roteados desejado. Para obter detalhes sobre o mapeamento de namespace XAML, consulte [Namespaces XAML e o mapeamento de Namespace para WPF XAML](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter("System.Windows.Markup.RoutedEventConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      [System.Windows.Markup.ValueSerializer("System.Windows.Markup.RoutedEventValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      public sealed class RoutedEvent
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.AddOwner(System.Type)
  id: AddOwner(System.Type)
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: AddOwner(Type)
  nameWithType: RoutedEvent.AddOwner(Type)
  fullName: System.Windows.RoutedEvent.AddOwner(Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Associa o outro tipo de proprietário com o evento roteado representado por um <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref> instância e ativa o roteamento do evento e a manipulação."
  remarks: "O tipo proprietário é usado internamente durante a resolução de um evento por nome."
  example:
  - "The following example adds the current class as another owner of an event defined in a different class. Here, `AnotherEditContainer` is the current class, and the `EditStateChangedEvent`<xref:System.Windows.RoutedEvent> field is defined as a member of that class. The `MyEditContainer` class originally defined the event, registering it with the identically named `EditStateChangedEvent`identifier.  \n  \n [!code-vb[ClassHandling#RoutedEventAddOwner](~/add/codesnippet/visualbasic/ClassHandling.sdksamplelibrary/class1.vb#routedeventaddowner)]\n [!code-cs[ClassHandling#RoutedEventAddOwner](~/add/codesnippet/csharp/ClassHandling/SDKSampleLibrary/class1.cs#routedeventaddowner)]"
  syntax:
    content: public System.Windows.RoutedEvent AddOwner (Type ownerType);
    parameters:
    - id: ownerType
      type: System.Type
      description: "O tipo de onde o evento roteado é adicionado."
    return:
      type: System.Windows.RoutedEvent
      description: "O campo de identificador para o evento. Esse valor de retorno deve ser usado para definir um campo estático público somente leitura que armazenará o identificador para a representação do evento roteado no tipo de propriedade. Esse campo geralmente é definido com acesso público, porque o código do usuário deve fazer referência ao campo para anexar os manipuladores de instância para o evento encaminhado ao usar o <xref:System.Windows.UIElement.AddHandler*>método utilitário.</xref:System.Windows.UIElement.AddHandler*>"
  overload: System.Windows.RoutedEvent.AddOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.HandlerType
  id: HandlerType
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
  fullName: System.Windows.RoutedEvent.HandlerType
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Obtém o tipo de manipulador do evento roteado."
  remarks: "O tipo de manipulador é o delegado de manipulador de eventos deve ser usado ao implementar manipuladores que vai escutar o evento representado por esta <xref:System.Windows.RoutedEvent>.</xref:System.Windows.RoutedEvent>"
  syntax:
    content: public Type HandlerType { get; }
    return:
      type: System.Type
      description: "O tipo de manipulador do evento roteado."
  overload: System.Windows.RoutedEvent.HandlerType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.Name
  id: Name
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: Name
  nameWithType: RoutedEvent.Name
  fullName: System.Windows.RoutedEvent.Name
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Obtém o nome de identificação do evento roteado."
  remarks: "O nome de um evento roteado deve ser exclusivo dentro de cada tipo de proprietário, mas não é necessário ser globalmente exclusivo.       O valor dessa propriedade se origina o <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>método que define <xref:System.Windows.RoutedEvent>.</xref:System.Windows.RoutedEvent> </xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Especificamente, o valor do nome é o `name` valor do parâmetro passado para <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "O nome do evento roteado."
  overload: System.Windows.RoutedEvent.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.OwnerType
  id: OwnerType
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
  fullName: System.Windows.RoutedEvent.OwnerType
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Obtém o tipo de proprietário registrado do evento roteado."
  remarks: "Esse tipo pode ser qualquer tipo de objeto, não necessariamente limitado a <xref:System.Windows.DependencyObject>.</xref:System.Windows.DependencyObject> Em casos de eventos roteados que têm proprietários adicionados, essa propriedade retornará o proprietário declarado primeiro.       O valor dessa propriedade se origina o <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>método que define <xref:System.Windows.RoutedEvent>.</xref:System.Windows.RoutedEvent> </xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Especificamente, o valor de OwnerType é o `ownerType` valor do parâmetro passado para <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>"
  syntax:
    content: public Type OwnerType { get; }
    return:
      type: System.Type
      description: "O tipo de proprietário do evento roteado."
  overload: System.Windows.RoutedEvent.OwnerType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.RoutingStrategy
  id: RoutingStrategy
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
  fullName: System.Windows.RoutedEvent.RoutingStrategy
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Obtém a estratégia de roteamento do evento roteado."
  remarks: "Por convenção, eventos roteados por túnel tem o prefixo de nome &quot;Visualização&quot; e um evento de bolha associado definido. É raro que deveria haver somente uma versão de túnel e não é uma versão de bolha correspondente. Para obter mais informações, consulte [como: criar um evento de roteadas personalizado](~/add/includes/ajax-current-ext-md.md).       O valor dessa propriedade se origina o <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>método que define <xref:System.Windows.RoutedEvent>.</xref:System.Windows.RoutedEvent> </xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Especificamente, o valor de RoutingStrategy é o `routingStrategy` valor do parâmetro passado para <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>"
  syntax:
    content: public System.Windows.RoutingStrategy RoutingStrategy { get; }
    return:
      type: System.Windows.RoutingStrategy
      description: "Um dos valores de enumeração. O padrão é o padrão de enumeração, <xref href=&quot;System.Windows.RoutingStrategy&quot;> </xref>."
  overload: System.Windows.RoutedEvent.RoutingStrategy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.ToString
  id: ToString
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: ToString()
  nameWithType: RoutedEvent.ToString()
  fullName: System.Windows.RoutedEvent.ToString()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Retorna a representação de cadeia de caracteres deste <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma representação de cadeia de caracteres para este objeto, que é idêntico ao valor retornado por <xref:System.Windows.RoutedEvent.Name*>.</xref:System.Windows.RoutedEvent.Name*>"
  overload: System.Windows.RoutedEvent.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.RoutedEvent.AddOwner(System.Type)
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: AddOwner(Type)
  nameWithType: RoutedEvent.AddOwner(Type)
  fullName: System.Windows.RoutedEvent.AddOwner(Type)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.RoutedEvent.HandlerType
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
  fullName: System.Windows.RoutedEvent.HandlerType
- uid: System.Windows.RoutedEvent.Name
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: Name
  nameWithType: RoutedEvent.Name
  fullName: System.Windows.RoutedEvent.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.RoutedEvent.OwnerType
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
  fullName: System.Windows.RoutedEvent.OwnerType
- uid: System.Windows.RoutedEvent.RoutingStrategy
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
  fullName: System.Windows.RoutedEvent.RoutingStrategy
- uid: System.Windows.RoutingStrategy
  parent: System.Windows
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutingStrategy
  fullName: System.Windows.RoutingStrategy
- uid: System.Windows.RoutedEvent.ToString
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: ToString()
  nameWithType: RoutedEvent.ToString()
  fullName: System.Windows.RoutedEvent.ToString()
- uid: System.Windows.RoutedEvent.AddOwner*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: AddOwner
  nameWithType: RoutedEvent.AddOwner
- uid: System.Windows.RoutedEvent.HandlerType*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
- uid: System.Windows.RoutedEvent.Name*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: Name
  nameWithType: RoutedEvent.Name
- uid: System.Windows.RoutedEvent.OwnerType*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
- uid: System.Windows.RoutedEvent.RoutingStrategy*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
- uid: System.Windows.RoutedEvent.ToString*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: ToString
  nameWithType: RoutedEvent.ToString
