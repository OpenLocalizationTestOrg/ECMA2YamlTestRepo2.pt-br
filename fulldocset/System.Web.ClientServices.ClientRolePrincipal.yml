### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.ClientRolePrincipal
  id: ClientRolePrincipal
  children:
  - System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)
  - System.Web.ClientServices.ClientRolePrincipal.Identity
  - System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)
  langs:
  - csharp
  name: ClientRolePrincipal
  nameWithType: ClientRolePrincipal
  fullName: System.Web.ClientServices.ClientRolePrincipal
  type: Class
  summary: "Representa informações de segurança para serviços do aplicativo cliente, que inclui informações de função."
  remarks: "Quando você validar um usuário nos serviços de aplicativo cliente, o <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>ou o <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>define o `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>propriedade a uma instância desta classe.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> </xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> O que <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>inicializa a <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>propriedade para uma nova instância de <xref:System.Web.ClientServices.ClientFormsIdentity>classe.</xref:System.Web.ClientServices.ClientFormsIdentity> </xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> </xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> O <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>inicializa o <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>propriedade para o <xref:System.Security.Principal.WindowsIdentity>objeto retornado pelo `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName>método.</xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName> </xref:System.Security.Principal.WindowsIdentity> </xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> </xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>       Você não geralmente acessará essa classe diretamente. Normalmente, você chamará o <xref:System.Security.Principal.IPrincipal.IsInRole%2A>método o <xref:System.Security.Principal.IPrincipal>retornado pelo `static` <xref:System.Threading.Thread.CurrentPrincipal%2A>propriedade.</xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> No entanto, você pode converter o <xref:System.Threading.Thread.CurrentPrincipal%2A>valor da propriedade para uma referência de ClientRolePrincipal para chamar o <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A>método explicitamente, conforme demonstrado na seção de exemplo.</xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A> </xref:System.Threading.Thread.CurrentPrincipal%2A>"
  example:
  - "The following example code demonstrates how to use this class to display a button only when the user is in the \"manager\" role. This example requires a <xref:System.Windows.Forms.Button> named `managerOnlyButton` with an initial <xref:System.Windows.Forms.Control.Visible%2A> property value of `false`.  \n  \n [!code-vb[ClientApplicationServices#313](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#313)]\n [!code-cs[ClientApplicationServices#313](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#313)]"
  syntax:
    content: 'public class ClientRolePrincipal : System.Security.Principal.IPrincipal'
  inheritance:
  - System.Object
  implements:
  - System.Security.Principal.IPrincipal
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Web.ClientServices.ClientRolePrincipal
  langs:
  - csharp
  name: ClientRolePrincipal(IIdentity)
  nameWithType: ClientRolePrincipal.ClientRolePrincipal(IIdentity)
  fullName: System.Web.ClientServices.ClientRolePrincipal.ClientRolePrincipal(IIdentity)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.ClientServices.ClientRolePrincipal&quot;> </xref> classe."
  remarks: "O <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>propriedade é inicializada com o valor de `identity` parâmetro.</xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>       Quando você validar um usuário nos serviços de aplicativo cliente, o <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>ou o <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>define o `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>propriedade a uma instância desta classe.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> </xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> O que <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>inicializa a <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>propriedade para uma nova instância de <xref:System.Web.ClientServices.ClientFormsIdentity>classe.</xref:System.Web.ClientServices.ClientFormsIdentity> </xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> </xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> O <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>inicializa o <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>propriedade para o <xref:System.Security.Principal.WindowsIdentity>objeto retornado pelo `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName>método.</xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName> </xref:System.Security.Principal.WindowsIdentity> </xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> </xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>"
  syntax:
    content: public ClientRolePrincipal (System.Security.Principal.IIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "Representa o usuário atual."
  overload: System.Web.ClientServices.ClientRolePrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientRolePrincipal.Identity
  id: Identity
  parent: System.Web.ClientServices.ClientRolePrincipal
  langs:
  - csharp
  name: Identity
  nameWithType: ClientRolePrincipal.Identity
  fullName: System.Web.ClientServices.ClientRolePrincipal.Identity
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Obtém a identidade de segurança associada a <xref href=&quot;System.Web.ClientServices.ClientRolePrincipal&quot;> </xref>."
  remarks: "Quando você validar um usuário nos serviços de aplicativo cliente, o <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>ou o <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>define o `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>propriedade a uma instância desta classe.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> </xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> O que <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>inicializa a propriedade de identidade para uma nova instância de <xref:System.Web.ClientServices.ClientFormsIdentity>classe.</xref:System.Web.ClientServices.ClientFormsIdentity> </xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> O <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>inicializa a propriedade de identidade para o <xref:System.Security.Principal.WindowsIdentity>objeto retornado pelo `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName>método.</xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName> </xref:System.Security.Principal.WindowsIdentity> </xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>"
  syntax:
    content: public System.Security.Principal.IIdentity Identity { get; }
    return:
      type: System.Security.Principal.IIdentity
      description: "Representa o usuário atual."
  overload: System.Web.ClientServices.ClientRolePrincipal.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: System.Web.ClientServices.ClientRolePrincipal
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: ClientRolePrincipal.IsInRole(String)
  fullName: System.Web.ClientServices.ClientRolePrincipal.IsInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Obtém um valor que indica se o usuário representado pelo <xref href=&quot;System.Web.ClientServices.ClientRolePrincipal&quot;> </xref> está na função especificada."
  remarks: "Normalmente, você chamará o <xref:System.Security.Principal.IPrincipal.IsInRole%2A>método o <xref:System.Security.Principal.IPrincipal>retornado pelo `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>propriedade.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> No entanto, você pode converter o <xref:System.Threading.Thread.CurrentPrincipal%2A>valor da propriedade para um <xref:System.Web.ClientServices.ClientRolePrincipal>referência para chamar esse método explicitamente, conforme demonstrado na seção de exemplo.</xref:System.Web.ClientServices.ClientRolePrincipal> </xref:System.Threading.Thread.CurrentPrincipal%2A>       O método IsInRole sempre retornará `false` se o logon do usuário expirou. Isso não ocorrerá se o aplicativo chama o <xref:System.Security.Principal.IPrincipal.IsInRole%2A>método uma vez logo após a autenticação.</xref:System.Security.Principal.IPrincipal.IsInRole%2A> Se seu aplicativo deve recuperar funções de usuário em outros momentos, convém adicionar código para revalidar usuários cujo logon expirou. Se todos os usuários válidos são atribuídos a funções, você pode determinar se o logon expirou chamando o <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A?displayProperty=fullName>método.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A?displayProperty=fullName> Se nenhuma função for retornada, o logon expirou. Para obter um exemplo dessa funcionalidade, consulte o <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>método.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> Essa funcionalidade só é necessária se você selecionou **exigir que os usuários façam logon novamente sempre que o cookie do servidor expira** na configuração do aplicativo. Para obter mais informações, consulte [como: configurar serviços de aplicativo cliente](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example code demonstrates how to use this method to display a button only when the user is in the \"manager\" role. This example requires a <xref:System.Windows.Forms.Button> named `managerOnlyButton` with an initial <xref:System.Windows.Forms.Control.Visible%2A> property value of `false`.  \n  \n [!code-vb[ClientApplicationServices#313](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#313)]\n [!code-cs[ClientApplicationServices#313](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#313)]"
  syntax:
    content: public bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "A função para verificar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o usuário está na função especificada. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o usuário não está na função especificada ou não está autenticado."
  overload: System.Web.ClientServices.ClientRolePrincipal.IsInRole*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: ClientRolePrincipal(IIdentity)
  nameWithType: ClientRolePrincipal.ClientRolePrincipal(IIdentity)
  fullName: System.Web.ClientServices.ClientRolePrincipal.ClientRolePrincipal(IIdentity)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Web.ClientServices.ClientRolePrincipal.Identity
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: Identity
  nameWithType: ClientRolePrincipal.Identity
  fullName: System.Web.ClientServices.ClientRolePrincipal.Identity
- uid: System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: IsInRole(String)
  nameWithType: ClientRolePrincipal.IsInRole(String)
  fullName: System.Web.ClientServices.ClientRolePrincipal.IsInRole(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ClientServices.ClientRolePrincipal.#ctor*
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: ClientRolePrincipal
  nameWithType: ClientRolePrincipal.ClientRolePrincipal
- uid: System.Web.ClientServices.ClientRolePrincipal.Identity*
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: Identity
  nameWithType: ClientRolePrincipal.Identity
- uid: System.Web.ClientServices.ClientRolePrincipal.IsInRole*
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: IsInRole
  nameWithType: ClientRolePrincipal.IsInRole
