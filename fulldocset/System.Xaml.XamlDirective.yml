### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlDirective
  id: XamlDirective
  children:
  - System.Xaml.XamlDirective.#ctor(System.String,System.String)
  - System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)
  - System.Xaml.XamlDirective.AllowedLocation
  - System.Xaml.XamlDirective.GetHashCode
  - System.Xaml.XamlDirective.GetXamlNamespaces
  - System.Xaml.XamlDirective.LookupCustomAttributeProvider
  - System.Xaml.XamlDirective.LookupDeferringLoader
  - System.Xaml.XamlDirective.LookupDependsOn
  - System.Xaml.XamlDirective.LookupInvoker
  - System.Xaml.XamlDirective.LookupIsAmbient
  - System.Xaml.XamlDirective.LookupIsEvent
  - System.Xaml.XamlDirective.LookupIsReadOnly
  - System.Xaml.XamlDirective.LookupIsReadPublic
  - System.Xaml.XamlDirective.LookupIsUnknown
  - System.Xaml.XamlDirective.LookupIsWriteOnly
  - System.Xaml.XamlDirective.LookupIsWritePublic
  - System.Xaml.XamlDirective.LookupTargetType
  - System.Xaml.XamlDirective.LookupType
  - System.Xaml.XamlDirective.LookupTypeConverter
  - System.Xaml.XamlDirective.LookupUnderlyingGetter
  - System.Xaml.XamlDirective.LookupUnderlyingMember
  - System.Xaml.XamlDirective.LookupUnderlyingSetter
  - System.Xaml.XamlDirective.ToString
  langs:
  - csharp
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
  type: Class
  summary: "Fornece o identificador do sistema de tipo XAML para um membro, se o membro também for uma diretiva XAML. Os leitores XAML e gravadores XAML usam o identificador de XamlDirective durante o processamento de nós de membro. O identificador é usado quando o leitor XAML é posicionado em uma <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref> e <xref:System.Xaml.XamlMember.IsDirective*>é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Xaml.XamlMember.IsDirective*>"
  remarks: "XamlDirective fornece os valores esperados para o sistema de tipo XAML quando o membro é uma diretiva XAML. Por definição, uma diretiva XAML tem características que sempre retornam os mesmos resultados para um subconjunto de <xref:System.Xaml.XamlMember>Propriedades e as mesmas informações de sistema de tipo XAML é relatado para todas as diretivas XAML possíveis.</xref:System.Xaml.XamlMember> O relatório de características do sistema de tipo de XAML são específicas para diretivas é realizado pelo comportamento interno ou por meio de substituições de <xref:System.Xaml.XamlMember> `Lookup*` membros virtuais em classe XamlDirective.</xref:System.Xaml.XamlMember>       A lista a seguir mostra os resultados retornados de uma diretiva XAML para <xref:System.Xaml.XamlMember>quando o membro é realmente um XamlDirective:- <xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A>é sempre `null`.</xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> </xref:System.Xaml.XamlMember>      - <xref:System.Xaml.XamlMember.DeferringLoader%2A>é sempre `null`.</xref:System.Xaml.XamlMember.DeferringLoader%2A>      - <xref:System.Xaml.XamlMember.DependsOn%2A>é sempre `null`.</xref:System.Xaml.XamlMember.DependsOn%2A>      - <xref:System.Xaml.XamlMember.IsAmbient%2A>é sempre `false`.</xref:System.Xaml.XamlMember.IsAmbient%2A>      - <xref:System.Xaml.XamlMember.IsAttachable%2A>é sempre `false`.</xref:System.Xaml.XamlMember.IsAttachable%2A>      - <xref:System.Xaml.XamlMember.IsDirective%2A>é sempre `true`.</xref:System.Xaml.XamlMember.IsDirective%2A>      - <xref:System.Xaml.XamlMember.IsEvent%2A>é sempre `false`.</xref:System.Xaml.XamlMember.IsEvent%2A>      - <xref:System.Xaml.XamlMember.IsReadOnly%2A>é sempre `false`.</xref:System.Xaml.XamlMember.IsReadOnly%2A>      - <xref:System.Xaml.XamlMember.IsReadPublic%2A>é sempre `true`.</xref:System.Xaml.XamlMember.IsReadPublic%2A>      - <xref:System.Xaml.XamlMember.IsWritePublic%2A>é sempre `true`.</xref:System.Xaml.XamlMember.IsWritePublic%2A>       Além disso, o suporte interno para <xref:System.Xaml.XamlMember.DeclaringType%2A>mantém indefinido e retorna `null`.</xref:System.Xaml.XamlMember.DeclaringType%2A>      > [!IMPORTANT] > XamlDirective é um <xref:System.Xaml.XamlMember>subclasse.</xref:System.Xaml.XamlMember> Assim como acontece com <xref:System.Xaml.XamlMember>, XamlDirective tem considerações de segurança sobre como o sistema de tipo XAML relatórios acesso.</xref:System.Xaml.XamlMember> Consulte comentários <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember>"
  syntax:
    content: 'public class XamlDirective : System.Xaml.XamlMember'
  inheritance:
  - System.Object
  - System.Xaml.XamlMember
  implements: []
  inheritedMembers:
  - System.Xaml.XamlMember.DeclaringType
  - System.Xaml.XamlMember.DeferringLoader
  - System.Xaml.XamlMember.DependsOn
  - System.Xaml.XamlMember.Equals(System.Object)
  - System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  - System.Xaml.XamlMember.Invoker
  - System.Xaml.XamlMember.IsAmbient
  - System.Xaml.XamlMember.IsAttachable
  - System.Xaml.XamlMember.IsDirective
  - System.Xaml.XamlMember.IsEvent
  - System.Xaml.XamlMember.IsNameValid
  - System.Xaml.XamlMember.IsReadOnly
  - System.Xaml.XamlMember.IsReadPublic
  - System.Xaml.XamlMember.IsUnknown
  - System.Xaml.XamlMember.IsWriteOnly
  - System.Xaml.XamlMember.IsWritePublic
  - System.Xaml.XamlMember.LookupValueSerializer
  - System.Xaml.XamlMember.Name
  - System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.PreferredXamlNamespace
  - System.Xaml.XamlMember.SerializationVisibility
  - System.Xaml.XamlMember.TargetType
  - System.Xaml.XamlMember.Type
  - System.Xaml.XamlMember.TypeConverter
  - System.Xaml.XamlMember.UnderlyingMember
  - System.Xaml.XamlMember.ValueSerializer
  platform:
  - net462
- uid: System.Xaml.XamlDirective.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: XamlDirective(String,String)
  nameWithType: XamlDirective.XamlDirective(String,String)
  fullName: System.Xaml.XamlDirective.XamlDirective(String,String)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> classe, especificando valores para um nome e um único namespace XAML. Use esta assinatura somente quando você deseja ou espera <xref:System.Xaml.XamlMember.IsUnknown*>relatório <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> para a diretiva.</xref:System.Xaml.XamlMember.IsUnknown*>"
  remarks: "> [!IMPORTANT]> Essa assinatura do construtor sempre gera um identificador para a diretiva onde <xref:System.Xaml.XamlMember.IsUnknown%2A>relatórios `true` sistema de tipos para a linguagem XAML.</xref:System.Xaml.XamlMember.IsUnknown%2A> Se as informações necessárias estão disponíveis (o tipo de backup e um item de informação de sintaxe do texto para conversão) e desejar que um identificador que pode aplicar a diretiva, use o <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=fullName>assinatura de construtor em vez disso.</xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=fullName>       Se você usar essa assinatura, o <xref:System.Xaml.XamlDirective.AllowedLocation%2A>valor para a instância é <xref:System.Xaml.Schema.AllowedMemberLocations>; e o <xref:System.Xaml.XamlMember.Type%2A>valor e <xref:System.Xaml.XamlMember.TypeConverter%2A>valor são ambos `null`.</xref:System.Xaml.XamlMember.TypeConverter%2A> </xref:System.Xaml.XamlMember.Type%2A> </xref:System.Xaml.Schema.AllowedMemberLocations> </xref:System.Xaml.XamlDirective.AllowedLocation%2A>"
  syntax:
    content: public XamlDirective (string xamlNamespace, string name);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "O namespace XAML primário onde isso <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> pode existir."
    - id: name
      type: System.String
      description: "O nome de identificação do <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
  overload: System.Xaml.XamlDirective.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)'
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  nameWithType: XamlDirective.XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  fullName: System.Xaml.XamlDirective.XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> classe, especificando valores para cada valor por caso de um <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
  remarks: "Você deve usar esse construtor para gerar um <xref:System.Xaml.XamlDirective>que não relata <xref:System.Xaml.XamlMember.IsUnknown%2A>como `true`.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlDirective>"
  syntax:
    content: public XamlDirective (System.Collections.Generic.IEnumerable<string> xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);
    parameters:
    - id: xamlNamespaces
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Um conjunto de namespaces XAML onde isso <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> podem existir, passado como um conjunto enumerável de cadeias de caracteres de identificador."
    - id: name
      type: System.String
      description: "O nome de identificação do <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
    - id: xamlType
      type: System.Xaml.XamlType
      description: "O tipo de XAML que faz o <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
    - id: typeConverter
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "O conversor de tipo que este <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> usa para conversão de sintaxe do texto."
    - id: allowedLocation
      type: System.Xaml.Schema.AllowedMemberLocations
      description: "Um valor de <xref href=&quot;System.Xaml.Schema.AllowedMemberLocations&quot;> </xref> enumeração."
  overload: System.Xaml.XamlDirective.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>xamlType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlDirective.AllowedLocation
  id: AllowedLocation
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: AllowedLocation
  nameWithType: XamlDirective.AllowedLocation
  fullName: System.Xaml.XamlDirective.AllowedLocation
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Obtém um valor que especifica os tipos de nós XAML em que a diretiva pode ser especificada."
  remarks: "Você pode definir esse valor <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29>assinatura de construtor.</xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> Se você criar usando a <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29>assinatura de construtor, o valor de AllowedLocation para a instância é <xref:System.Xaml.Schema.AllowedMemberLocations>.</xref:System.Xaml.Schema.AllowedMemberLocations> </xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> No entanto, a instância de relatórios sempre <xref:System.Xaml.XamlMember.IsUnknown%2A>como `true`.</xref:System.Xaml.XamlMember.IsUnknown%2A> Normalmente, esse comportamento afeta tenta gravar objeto gráficos e também afeta outros usos práticos de um <xref:System.Xaml.XamlMember>valor.</xref:System.Xaml.XamlMember>       Você normalmente não poderia construir um caso de diretiva XAML onde AllowedLocation é <xref:System.Xaml.Schema.AllowedMemberLocations?displayProperty=fullName>.</xref:System.Xaml.Schema.AllowedMemberLocations?displayProperty=fullName>"
  syntax:
    content: public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }
    return:
      type: System.Xaml.Schema.AllowedMemberLocations
      description: "Um valor da enumeração. O padrão é o padrão de enumeração, que é <xref href=&quot;System.Xaml.Schema.AllowedMemberLocations&quot;> </xref>."
  overload: System.Xaml.XamlDirective.AllowedLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlDirective.GetHashCode()
  fullName: System.Xaml.XamlDirective.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna o código hash para este objeto."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código de hash de número inteiro."
  overload: System.Xaml.XamlDirective.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlDirective.GetXamlNamespaces()
  fullName: System.Xaml.XamlDirective.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna uma lista de namespaces XAML onde esse membro XAML pode existir."
  remarks: "Os identificadores de namespace XAML são cadeias de caracteres que geralmente aparecem no formato de cadeia de caracteres de identificador de recurso uniforme (URI) acordo com as convenções habituais para namespaces XML e XAML. Se a lista contiver mais de um item, o primeiro item no conjunto de geralmente é o namespace XAML primário relevante para fins de processamento e outros itens são alternativas. <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=fullName>conta com essa classificação.</xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=fullName>"
  syntax:
    content: public override System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Uma lista de identificadores de namespace XAML, como cadeias de caracteres."
  overload: System.Xaml.XamlDirective.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlDirective.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlDirective.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna um <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementação. Essa implementação sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Como uma diretiva XAML não pode ter atributos personalizados, essa implementação sempre retorna `null`. <xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "Sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlDirective.LookupDeferringLoader()
  fullName: System.Xaml.XamlDirective.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna um &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; objeto, que é usado durante o carregamento adiado dos objetos declarado em XAML. Essa implementação sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Como uma diretiva não pode ter adiadas carregamento, essa implementação sempre retorna `null`. <xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "Sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupDependsOn
  id: LookupDependsOn
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupDependsOn()
  nameWithType: XamlDirective.LookupDependsOn()
  fullName: System.Xaml.XamlDirective.LookupDependsOn()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna uma lista de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objetos. A lista reporta os membros em que relações de dependência para ordem de inicialização existem em relação a esse <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>. Essa implementação sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Como uma diretiva XAML não pode ter a ordem de inicialização, essa implementação sempre retorna `null`. <xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Collections.Generic.IList<System.Xaml.XamlMember> LookupDependsOn ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "Sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupDependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlDirective.LookupInvoker()
  fullName: System.Xaml.XamlDirective.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna o <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> que está associado com um <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
  remarks: "Esse método pode ser chamado por chamadas para <xref:System.Xaml.XamlMember.Invoker%2A>.</xref:System.Xaml.XamlMember.Invoker%2A>       Essa implementação retorna um estático interno <xref:System.Xaml.Schema.XamlMemberInvoker>valor específico para diretivas do sistema de tipo XAML.</xref:System.Xaml.Schema.XamlMemberInvoker> <xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "O <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> informações para este <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlDirective.LookupIsAmbient()
  fullName: System.Xaml.XamlDirective.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna se isso <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> será relatado como uma propriedade de ambiente."
  remarks: "Como uma diretiva XAML não pode ser um tipo de ambiente, essa implementação sempre retorna `false`. <xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "Sempre retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsEvent
  id: LookupIsEvent
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsEvent()
  nameWithType: XamlDirective.LookupIsEvent()
  fullName: System.Xaml.XamlDirective.LookupIsEvent()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna se isso <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> representa um evento."
  remarks: "<xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsEvent ();
    parameters: []
    return:
      type: System.Boolean
      description: "Sempre retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsReadOnly
  id: LookupIsReadOnly
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsReadOnly()
  nameWithType: XamlDirective.LookupIsReadOnly()
  fullName: System.Xaml.XamlDirective.LookupIsReadOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna se isso <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> representa uma propriedade somente leitura pretendida."
  remarks: "Por definição, as diretivas são configuráveis. <xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "Sempre retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsReadPublic
  id: LookupIsReadPublic
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsReadPublic()
  nameWithType: XamlDirective.LookupIsReadPublic()
  fullName: System.Xaml.XamlDirective.LookupIsReadPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna se isso <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> representa uma propriedade que tem um público <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> acessador."
  remarks: "<xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsReadPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "Sempre retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlDirective.LookupIsUnknown()
  fullName: System.Xaml.XamlDirective.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna se isso <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> representa um membro que não pode ser resolvido pelo sistema de backup que é usado para resolução de tipo e membro."
  remarks: 'O <xref:System.Xaml.XamlDirective>implementação apenas chama base e não faz nada mais.</xref:System.Xaml.XamlDirective> A implementação base retorna os resultados nesta ordem: os resultados são baseados em reflexão interno; ou os resultados com base na verificação de um valor nulo de <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</xref:System.Xaml.XamlMember.UnderlyingMember%2A> O <xref:System.Xaml.XamlDirective>implementação lacra isso virtual membro; portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective> </xref:System.Xaml.XamlDirective>'
  syntax:
    content: protected override sealed bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> representa um membro não pode ser resolvido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsWriteOnly
  id: LookupIsWriteOnly
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsWriteOnly()
  nameWithType: XamlDirective.LookupIsWriteOnly()
  fullName: System.Xaml.XamlDirective.LookupIsWriteOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna se isso <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> representa uma propriedade somente gravação pretendida."
  remarks: "<xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsWriteOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "Sempre retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsWritePublic
  id: LookupIsWritePublic
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsWritePublic()
  nameWithType: XamlDirective.LookupIsWritePublic()
  fullName: System.Xaml.XamlDirective.LookupIsWritePublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna se isso <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> representa uma propriedade que tem um público <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> acessador."
  remarks: "<xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsWritePublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "Sempre retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupTargetType
  id: LookupTargetType
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupTargetType()
  nameWithType: XamlDirective.LookupTargetType()
  fullName: System.Xaml.XamlDirective.LookupTargetType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna o <xref href=&quot;System.Xaml.XamlType&quot;> </xref> do tipo onde o <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> pode existir. Essa implementação sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Tipos de destino não são relevantes para diretivas; Portanto, essa implementação sempre retorna `null`. <xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Xaml.XamlType LookupTargetType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupType
  id: LookupType
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupType()
  nameWithType: XamlDirective.LookupType()
  fullName: System.Xaml.XamlDirective.LookupType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna o <xref href=&quot;System.Xaml.XamlType&quot;> </xref> do tipo que é usado pelo membro."
  remarks: "O <xref:System.Xaml.XamlDirective>implementação apenas chama base e não faz nada mais.</xref:System.Xaml.XamlDirective> A implementação base retorna resultados com base em reflexão interno ou procurando um valor nulo de <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, o processamento nessa ordem.</xref:System.Xaml.XamlMember.UnderlyingMember%2A> <xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>       Consulte comentários em <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=fullName>para obter mais informações sobre quais informações <xref:System.Xaml.XamlMember.Type%2A>transporta.</xref:System.Xaml.XamlMember.Type%2A> </xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=fullName>"
  syntax:
    content: protected override sealed System.Xaml.XamlType LookupType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "O <xref href=&quot;System.Xaml.XamlType&quot;> </xref> do tipo que é usado pelo membro."
  overload: System.Xaml.XamlDirective.LookupType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlDirective.LookupTypeConverter()
  fullName: System.Xaml.XamlDirective.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna uma implementação de conversor de tipo que é associada a essa <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
  remarks: "O <xref:System.Xaml.XamlDirective>implementação apenas chama base e não faz nada mais.</xref:System.Xaml.XamlDirective> Consulte <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=fullName>.</xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=fullName> <xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "Um &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; instância tem <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> restrição; ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupUnderlyingGetter
  id: LookupUnderlyingGetter
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupUnderlyingGetter()
  nameWithType: XamlDirective.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingGetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna um <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> acessador que está associado a essa <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>. Essa implementação sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "<xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "Sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupUnderlyingGetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupUnderlyingMember
  id: LookupUnderlyingMember
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupUnderlyingMember()
  nameWithType: XamlDirective.LookupUnderlyingMember()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingMember()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna um reflexo de CLR <xref:System.Reflection.MemberInfo>que é associada a essa <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>.</xref:System.Reflection.MemberInfo> Essa implementação sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "<xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo
      description: "Sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupUnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupUnderlyingSetter
  id: LookupUnderlyingSetter
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupUnderlyingSetter()
  nameWithType: XamlDirective.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingSetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna um <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> acessador que está associado a essa <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>. Essa implementação sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "<xref:System.Xaml.XamlDirective>lacra esse membro virtual; Portanto, todos os <xref:System.Xaml.XamlDirective>todas as diretivas XAML predefinidas e tipos devem usar esse comportamento.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "Sempre retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupUnderlyingSetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.ToString
  id: ToString
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlDirective.ToString()
  fullName: System.Xaml.XamlDirective.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retorna uma representação de cadeia de caracteres deste <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
  remarks: "Se houver informações do namespace XAML, essa implementação retorna uma combinação de cadeia de caracteres de <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A>e <xref:System.Xaml.XamlMember.Name%2A>.</xref:System.Xaml.XamlMember.Name%2A> </xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> Se as informações do namespace XAML não estiverem disponíveis, essa implementação retorna <xref:System.Xaml.XamlMember.Name%2A>.</xref:System.Xaml.XamlMember.Name%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma representação de cadeia de caracteres deste <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
  overload: System.Xaml.XamlDirective.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xaml.XamlMember
  isExternal: false
  name: System.Xaml.XamlMember
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlDirective.#ctor(System.String,System.String)
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: XamlDirective(String,String)
  nameWithType: XamlDirective.XamlDirective(String,String)
  fullName: System.Xaml.XamlDirective.XamlDirective(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  nameWithType: XamlDirective.XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  fullName: System.Xaml.XamlDirective.XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.AllowedMemberLocations
  parent: System.Xaml.Schema
  isExternal: false
  name: AllowedMemberLocations
  nameWithType: AllowedMemberLocations
  fullName: System.Xaml.Schema.AllowedMemberLocations
- uid: System.Xaml.XamlDirective.AllowedLocation
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: AllowedLocation
  nameWithType: XamlDirective.AllowedLocation
  fullName: System.Xaml.XamlDirective.AllowedLocation
- uid: System.Xaml.XamlDirective.GetHashCode
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlDirective.GetHashCode()
  fullName: System.Xaml.XamlDirective.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlDirective.GetXamlNamespaces
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlDirective.GetXamlNamespaces()
  fullName: System.Xaml.XamlDirective.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlDirective.LookupCustomAttributeProvider
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlDirective.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlDirective.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlDirective.LookupDeferringLoader
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlDirective.LookupDeferringLoader()
  fullName: System.Xaml.XamlDirective.LookupDeferringLoader()
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlDirective.LookupDependsOn
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupDependsOn()
  nameWithType: XamlDirective.LookupDependsOn()
  fullName: System.Xaml.XamlDirective.LookupDependsOn()
- uid: System.Collections.Generic.IList{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlMember>
  nameWithType: IList<XamlMember>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlDirective.LookupInvoker
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlDirective.LookupInvoker()
  fullName: System.Xaml.XamlDirective.LookupInvoker()
- uid: System.Xaml.Schema.XamlMemberInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
- uid: System.Xaml.XamlDirective.LookupIsAmbient
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlDirective.LookupIsAmbient()
  fullName: System.Xaml.XamlDirective.LookupIsAmbient()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlDirective.LookupIsEvent
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsEvent()
  nameWithType: XamlDirective.LookupIsEvent()
  fullName: System.Xaml.XamlDirective.LookupIsEvent()
- uid: System.Xaml.XamlDirective.LookupIsReadOnly
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsReadOnly()
  nameWithType: XamlDirective.LookupIsReadOnly()
  fullName: System.Xaml.XamlDirective.LookupIsReadOnly()
- uid: System.Xaml.XamlDirective.LookupIsReadPublic
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsReadPublic()
  nameWithType: XamlDirective.LookupIsReadPublic()
  fullName: System.Xaml.XamlDirective.LookupIsReadPublic()
- uid: System.Xaml.XamlDirective.LookupIsUnknown
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlDirective.LookupIsUnknown()
  fullName: System.Xaml.XamlDirective.LookupIsUnknown()
- uid: System.Xaml.XamlDirective.LookupIsWriteOnly
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsWriteOnly()
  nameWithType: XamlDirective.LookupIsWriteOnly()
  fullName: System.Xaml.XamlDirective.LookupIsWriteOnly()
- uid: System.Xaml.XamlDirective.LookupIsWritePublic
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsWritePublic()
  nameWithType: XamlDirective.LookupIsWritePublic()
  fullName: System.Xaml.XamlDirective.LookupIsWritePublic()
- uid: System.Xaml.XamlDirective.LookupTargetType
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupTargetType()
  nameWithType: XamlDirective.LookupTargetType()
  fullName: System.Xaml.XamlDirective.LookupTargetType()
- uid: System.Xaml.XamlDirective.LookupType
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupType()
  nameWithType: XamlDirective.LookupType()
  fullName: System.Xaml.XamlDirective.LookupType()
- uid: System.Xaml.XamlDirective.LookupTypeConverter
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlDirective.LookupTypeConverter()
  fullName: System.Xaml.XamlDirective.LookupTypeConverter()
- uid: System.Xaml.XamlDirective.LookupUnderlyingGetter
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingGetter()
  nameWithType: XamlDirective.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingGetter()
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.XamlDirective.LookupUnderlyingMember
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingMember()
  nameWithType: XamlDirective.LookupUnderlyingMember()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingMember()
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Xaml.XamlDirective.LookupUnderlyingSetter
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingSetter()
  nameWithType: XamlDirective.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingSetter()
- uid: System.Xaml.XamlDirective.ToString
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: ToString()
  nameWithType: XamlDirective.ToString()
  fullName: System.Xaml.XamlDirective.ToString()
- uid: System.Xaml.XamlDirective.#ctor*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: XamlDirective
  nameWithType: XamlDirective.XamlDirective
- uid: System.Xaml.XamlDirective.AllowedLocation*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: AllowedLocation
  nameWithType: XamlDirective.AllowedLocation
- uid: System.Xaml.XamlDirective.GetHashCode*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: GetHashCode
  nameWithType: XamlDirective.GetHashCode
- uid: System.Xaml.XamlDirective.GetXamlNamespaces*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlDirective.GetXamlNamespaces
- uid: System.Xaml.XamlDirective.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlDirective.LookupCustomAttributeProvider
- uid: System.Xaml.XamlDirective.LookupDeferringLoader*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlDirective.LookupDeferringLoader
- uid: System.Xaml.XamlDirective.LookupDependsOn*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupDependsOn
  nameWithType: XamlDirective.LookupDependsOn
- uid: System.Xaml.XamlDirective.LookupInvoker*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlDirective.LookupInvoker
- uid: System.Xaml.XamlDirective.LookupIsAmbient*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlDirective.LookupIsAmbient
- uid: System.Xaml.XamlDirective.LookupIsEvent*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsEvent
  nameWithType: XamlDirective.LookupIsEvent
- uid: System.Xaml.XamlDirective.LookupIsReadOnly*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsReadOnly
  nameWithType: XamlDirective.LookupIsReadOnly
- uid: System.Xaml.XamlDirective.LookupIsReadPublic*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsReadPublic
  nameWithType: XamlDirective.LookupIsReadPublic
- uid: System.Xaml.XamlDirective.LookupIsUnknown*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlDirective.LookupIsUnknown
- uid: System.Xaml.XamlDirective.LookupIsWriteOnly*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsWriteOnly
  nameWithType: XamlDirective.LookupIsWriteOnly
- uid: System.Xaml.XamlDirective.LookupIsWritePublic*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsWritePublic
  nameWithType: XamlDirective.LookupIsWritePublic
- uid: System.Xaml.XamlDirective.LookupTargetType*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupTargetType
  nameWithType: XamlDirective.LookupTargetType
- uid: System.Xaml.XamlDirective.LookupType*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupType
  nameWithType: XamlDirective.LookupType
- uid: System.Xaml.XamlDirective.LookupTypeConverter*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlDirective.LookupTypeConverter
- uid: System.Xaml.XamlDirective.LookupUnderlyingGetter*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingGetter
  nameWithType: XamlDirective.LookupUnderlyingGetter
- uid: System.Xaml.XamlDirective.LookupUnderlyingMember*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingMember
  nameWithType: XamlDirective.LookupUnderlyingMember
- uid: System.Xaml.XamlDirective.LookupUnderlyingSetter*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingSetter
  nameWithType: XamlDirective.LookupUnderlyingSetter
- uid: System.Xaml.XamlDirective.ToString*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: ToString
  nameWithType: XamlDirective.ToString
