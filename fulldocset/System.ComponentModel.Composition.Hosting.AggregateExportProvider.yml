### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  id: AggregateExportProvider
  children:
  - System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider})
  - System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose
  - System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(System.Boolean)
  - System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  - System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers
  langs:
  - csharp
  name: AggregateExportProvider
  nameWithType: AggregateExportProvider
  fullName: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  type: Class
  summary: "Recupera as exportações fornecidas por uma coleção de <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> objetos."
  remarks: >-
    > [!IMPORTANT]

    >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.
  syntax:
    content: 'public class AggregateExportProvider : System.ComponentModel.Composition.Hosting.ExportProvider, IDisposable'
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Hosting.ExportProvider
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged
  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider})'
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  langs:
  - csharp
  name: AggregateExportProvider(IEnumerable<ExportProvider>)
  nameWithType: AggregateExportProvider.AggregateExportProvider(IEnumerable<ExportProvider>)
  fullName: System.ComponentModel.Composition.Hosting.AggregateExportProvider.AggregateExportProvider(IEnumerable<ExportProvider>)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateExportProvider&quot;> </xref> classe."
  remarks: "A <xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>classe de consulta os provedores na ordem em que eles foram especificados quando chama <xref:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports%2A>.</xref:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports%2A> </xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>       O <xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>não apropriar-se dos provedores especificados.</xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider> Ou seja, ele tenta descartar qualquer um dos provedores de quando ele é descartado."
  syntax:
    content: public AggregateExportProvider (System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Hosting.ExportProvider> providers);
    parameters:
    - id: providers
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider}
      description: "A lista priorizada de provedores de exportação. Os provedores são consultados na ordem em que eles são fornecidos."
  overload: System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um ou mais elementos de <code> providers </code> são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  langs:
  - csharp
  name: AggregateExportProvider(ExportProvider[])
  nameWithType: AggregateExportProvider.AggregateExportProvider(ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.AggregateExportProvider.AggregateExportProvider(ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateExportProvider&quot;> </xref> classe."
  remarks: "A <xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>classe de consulta os provedores na ordem em que eles foram especificados quando chama <xref:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports%2A>.</xref:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports%2A> </xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>       O <xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>não apropriar-se dos provedores especificados.</xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>  Ou seja, ele tenta descartar qualquer um dos provedores de quando ele é descartado."
  syntax:
    content: public AggregateExportProvider (System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "A lista priorizada de provedores de exportação."
  overload: System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose
  id: Dispose
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  langs:
  - csharp
  name: Dispose()
  nameWithType: AggregateExportProvider.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Libera todos os recursos usados pela instância atual do <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateExportProvider&quot;> </xref> classe."
  remarks: "Chamar `Dispose` quando terminar de usar o <xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>.</xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider> O `Dispose` método deixa o <xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>em um estado inutilizável.</xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider> Depois de chamar `Dispose`, você deve liberar todas as referências para o <xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>para o coletor de lixo possa recuperar a memória que o <xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>estava ocupando.</xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider> </xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>       Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada `Dispose` antes de liberar sua última referência a <xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>.</xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider> Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>do objeto `Finalize` método.</xref:System.ComponentModel.Composition.Hosting.AggregateExportProvider>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AggregateExportProvider.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Libera os recursos não gerenciados usados pelo <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateExportProvider&quot;> </xref> classe e, opcionalmente, libera os recursos gerenciados."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar recursos gerenciados e não gerenciados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para liberar apenas recursos não gerenciados."
  overload: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  id: GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  langs:
  - csharp
  name: GetExportsCore(ImportDefinition,AtomicComposition)
  nameWithType: AggregateExportProvider.GetExportsCore(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore(ImportDefinition,AtomicComposition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Obtém todas as exportações que correspondem às condições da importação especificada."
  remarks: "Os implementadores não devem tratar incompatibilidades de cardinalidade como erros e não deverão gerar exceções nesses casos.       Por exemplo, se a importação solicita exatamente uma exportação e o provedor tem nenhum exportações de correspondência ou em mais de um, o método deve retornar uma <xref:System.Collections.Generic.IEnumerable%601>coleção de <xref:System.ComponentModel.Composition.Primitives.Export>.</xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: protected override System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "As condições do <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> objetos a serem retornadas."
    - id: atomicComposition
      type: System.ComponentModel.Composition.Hosting.AtomicComposition
      description: "O contêiner transacional para a composição."
    return:
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
      description: "Uma coleção que contém todas as exportações que correspondem à condição especificada."
  overload: System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers
  id: Providers
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  langs:
  - csharp
  name: Providers
  nameWithType: AggregateExportProvider.Providers
  fullName: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Obtém uma coleção que contém os provedores que o <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateExportProvider&quot;> </xref> agregações do objeto."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider> Providers { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.Composition.Hosting.ExportProvider}
      description: "Uma coleção do <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> objetos que o <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateExportProvider&quot;> </xref> agregações."
  overload: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.ComponentModel.Composition.Hosting.AggregateExportProvider&quot;> </xref> objeto foi descartado."
  platform:
  - net462
references:
- uid: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: System.ComponentModel.Composition.Hosting.ExportProvider
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider})
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  isExternal: false
  name: AggregateExportProvider(IEnumerable<ExportProvider>)
  nameWithType: AggregateExportProvider.AggregateExportProvider(IEnumerable<ExportProvider>)
  fullName: System.ComponentModel.Composition.Hosting.AggregateExportProvider.AggregateExportProvider(IEnumerable<ExportProvider>)
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ExportProvider>
  nameWithType: IEnumerable<ExportProvider>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Hosting.ExportProvider>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ComponentModel.Composition.Hosting.ExportProvider>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Hosting.ExportProvider
    name: ExportProvider
    nameWithType: ExportProvider
    fullName: ExportProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  isExternal: false
  name: AggregateExportProvider(ExportProvider[])
  nameWithType: AggregateExportProvider.AggregateExportProvider(ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.AggregateExportProvider.AggregateExportProvider(ExportProvider[])
- uid: System.ComponentModel.Composition.Hosting.ExportProvider[]
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ExportProvider
  nameWithType: ExportProvider
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider[]
  spec.csharp:
  - uid: System.ComponentModel.Composition.Hosting.ExportProvider
    name: ExportProvider
    nameWithType: ExportProvider
    fullName: ExportProvider[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  isExternal: false
  name: Dispose()
  nameWithType: AggregateExportProvider.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose()
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AggregateExportProvider.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  isExternal: false
  name: GetExportsCore(ImportDefinition,AtomicComposition)
  nameWithType: AggregateExportProvider.GetExportsCore(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore(ImportDefinition,AtomicComposition)
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Export>
  nameWithType: IEnumerable<Export>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ComponentModel.Composition.Primitives.Export>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.Export
    name: Export
    nameWithType: Export
    fullName: Export
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: AtomicComposition
  nameWithType: AtomicComposition
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  isExternal: false
  name: Providers
  nameWithType: AggregateExportProvider.Providers
  fullName: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.Composition.Hosting.ExportProvider}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ExportProvider>
  nameWithType: ReadOnlyCollection<ExportProvider>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Hosting.ExportProvider
    name: ExportProvider
    nameWithType: ExportProvider
    fullName: ExportProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor*
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  isExternal: false
  name: AggregateExportProvider
  nameWithType: AggregateExportProvider.AggregateExportProvider
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose*
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  isExternal: false
  name: Dispose
  nameWithType: AggregateExportProvider.Dispose
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore*
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  isExternal: false
  name: GetExportsCore
  nameWithType: AggregateExportProvider.GetExportsCore
- uid: System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers*
  parent: System.ComponentModel.Composition.Hosting.AggregateExportProvider
  isExternal: false
  name: Providers
  nameWithType: AggregateExportProvider.Providers
