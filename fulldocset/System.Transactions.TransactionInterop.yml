### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionInterop
  id: TransactionInterop
  children:
  - System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  - System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  - System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  - System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  - System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  - System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  - System.Transactions.TransactionInterop.GetWhereabouts
  - System.Transactions.TransactionInterop.PromoterTypeDtc
  langs:
  - csharp
  name: TransactionInterop
  nameWithType: TransactionInterop
  fullName: System.Transactions.TransactionInterop
  type: Class
  summary: "Facilita a interação entre <xref href=&quot;System.Transactions&quot;> </xref> e componentes que foram escritos previamente para interagir com o MSDTC, COM+, ou <xref href=&quot;System.EnterpriseServices&quot;> </xref>. Essa classe não pode ser herdada."
  remarks: "Essa classe fornece métodos de propagação de transações. Para obter mais informações sobre como esse processo funciona, consulte [propagação de transação](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp).       Usando os métodos fornecidos por essa classe, você pode participar de dois tipos de propagação de transações, importação e exportação (modelo de push) e transmissor/receptor (modelo de pull).       A propagação de importação/exportação (modelo de push) envolve estas etapas, 1.  No computador remoto, obter o &quot;locais&quot; do Gerenciador de transações da máquina ao chamar o <xref:System.Transactions.TransactionInterop.GetWhereabouts%2A>método.</xref:System.Transactions.TransactionInterop.GetWhereabouts%2A> Em seguida, você pode armazenar essa informação no computador cliente para uso futuro.      2.  Envie os dados que contém os locais para o computador cliente usando qualquer método preferencial 3.  No computador cliente, use os locais para &quot;Exportar&quot; a transação para a máquina remota e gerar uma transação de &quot;cookies&quot;.  Isso é feito chamando <xref:System.Transactions.TransactionInterop.GetExportCookie%2A>e passar na localização da máquina remota.</xref:System.Transactions.TransactionInterop.GetExportCookie%2A>      4.  Envie os dados que contém a transação &quot;cookie&quot; para o computador remoto usando qualquer método preferencial de 5.  No computador remoto, use a transação &quot;cookie&quot; para obter um clone da transação de cliente ao chamar o <xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A>método.</xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A>      6.  No computador remoto, use a transação de clone para inscrever-se o Gerenciador de recursos usando o <xref:System.Transactions.Transaction.EnlistVolatile%2A>ou <xref:System.Transactions.Transaction.EnlistDurable%2A>métodos de <xref:System.Transactions.Transaction>classe.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A>       A propagação do transmissor/receptor (modelo de pull) envolve estas etapas, - no computador cliente, usando a transação gera um correspondente &quot;token de propagação&quot; chamando <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>- envia os dados que contém o &quot;token de propagação&quot; da transação para o computador remoto usando qualquer método preferencial - no computador remoto, use o token de propagação&quot;&quot; para obter um clone do cliente a transação chamando <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>transmissor/receptor o modelo fornece melhor desempenho em cenários onde o token de transação é enviado para um computador remoto , mas o computador remoto não pode usá-lo para obter a transação.</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> </xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>  Isso ocorre porque a transação não é propagada até <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>é chamado.</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> Outra vantagem é que o token de propagação pode ser enviado para qualquer computador remoto, enquanto o cookie de exportação pode ser usado somente no computador que forneceu os locais.       No entanto, você também deve observar que os locais de gerenciadores de transações remoto são encapsulados em todos os tokens de propagação, tornando-os maiores do que os cookies de transação correspondente do modelo de importação/exportação.       **Observação** esse tipo usa <xref:System.Security.Permissions.SecurityAction>impedir que ele está sendo chamado de código não confiável; no entanto, apenas o chamador imediato é necessário ter o `FullTrust` conjunto de permissões.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public static class TransactionInterop
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  id: GetDtcTransaction(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetDtcTransaction(Transaction)
  nameWithType: TransactionInterop.GetDtcTransaction(Transaction)
  fullName: System.Transactions.TransactionInterop.GetDtcTransaction(Transaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Obtém um <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> instância que representa um <xref href=&quot;System.Transactions.Transaction&quot;> </xref>."
  syntax:
    content: public static System.Transactions.IDtcTransaction GetDtcTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Um <xref href=&quot;System.Transactions.Transaction&quot;> </xref> instância a ser empacotado."
    return:
      type: System.Transactions.IDtcTransaction
      description: "Um <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> instância que representa um <xref href=&quot;System.Transactions.Transaction&quot;> </xref>.  O <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> instância é compatível com o formulário não gerenciado de [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) usado pelo MSDTC e com a forma do gerenciado de <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> usado pelo <xref href=&quot;System.EnterpriseServices&quot;> </xref>."
  overload: System.Transactions.TransactionInterop.GetDtcTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  id: GetExportCookie(System.Transactions.Transaction,System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetExportCookie(Transaction,Byte[])
  nameWithType: TransactionInterop.GetExportCookie(Transaction,Byte[])
  fullName: System.Transactions.TransactionInterop.GetExportCookie(Transaction,Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Transforma um objeto de transação em um cookie de transação de exportação."
  remarks: "Chame este método se você quiser exportar uma transação. O `transaction` que é passado junto é empacotado em um cookie de transação. Em seguida, você pode enviar o cookie de transação para o processo de destino. Isso é chamado como propagar a transação entre processos ou sistemas. A propagação é considerada um modelo de push onde a transação local é enviada por push para o destino.  Portanto, as informações contidas em `whereabouts` deve descrever o Gerenciador de transações de destino.       Para obter mais informações sobre modelos de propagação diferente, consulte a seção comentários para a <xref:System.Transactions.TransactionInterop>classe.</xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public static byte[] GetExportCookie (System.Transactions.Transaction transaction, byte[] whereabouts);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "O <xref href=&quot;System.Transactions.Transaction&quot;> </xref> objeto a ser empacotado."
    - id: whereabouts
      type: System.Byte[]
      description: "Um endereço que descreve o local de destino do Gerenciador de transações. Isso permite que dois gerenciadores de transações para se comunicar uns com os outros e, assim, propagar uma transação de um sistema para outro."
    return:
      type: System.Byte[]
      description: "Um cookie de transação de exportação que representa especificado <xref href=&quot;System.Transactions.Transaction&quot;> </xref> objeto."
  overload: System.Transactions.TransactionInterop.GetExportCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  id: GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromDtcTransaction(IDtcTransaction)
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  fullName: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Gera um <xref href=&quot;System.Transactions.Transaction&quot;> </xref> de um <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref>."
  remarks: "O `transactionNative` é compatível com o formulário não gerenciado de [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) usado pelo MSDTC e com formato gerenciado <xref:System.EnterpriseServices.ITransaction>usado por <xref:System.EnterpriseServices>.</xref:System.EnterpriseServices> </xref:System.EnterpriseServices.ITransaction>"
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromDtcTransaction (System.Transactions.IDtcTransaction transactionNative);
    parameters:
    - id: transactionNative
      type: System.Transactions.IDtcTransaction
      description: "O <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> objeto a ser empacotado."
    return:
      type: System.Transactions.Transaction
      description: "Um <xref href=&quot;System.Transactions.Transaction&quot;> </xref> instância que representa o determinado <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref>."
  overload: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  id: GetTransactionFromExportCookie(System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromExportCookie(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromExportCookie(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Gera um <xref href=&quot;System.Transactions.Transaction&quot;> </xref> especificado um cookie de exportação."
  remarks: "Para obter mais informações sobre modelos de propagação diferente, consulte a seção comentários para a <xref:System.Transactions.TransactionInterop>classe.</xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromExportCookie (byte[] cookie);
    parameters:
    - id: cookie
      type: System.Byte[]
      description: "Uma forma de marshaling do objeto de transação."
    return:
      type: System.Transactions.Transaction
      description: "Um <xref href=&quot;System.Transactions.Transaction&quot;> </xref> do cookie de exportação especificado."
  overload: System.Transactions.TransactionInterop.GetTransactionFromExportCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  id: GetTransactionFromTransmitterPropagationToken(System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromTransmitterPropagationToken(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Gera um <xref href=&quot;System.Transactions.Transaction&quot;> </xref> instância do token de propagação de transmissor especificado."
  remarks: "Esse método, junto com o <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>método, fornece a funcionalidade de propagação de &quot;pull&quot;, em que a transação &quot;retirada&quot; do computador remoto quando este método é chamado para descompactar a transação.</xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>       Para obter mais informações sobre modelos de propagação diferente, consulte a seção comentários para a <xref:System.Transactions.TransactionInterop>classe.</xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromTransmitterPropagationToken (byte[] propagationToken);
    parameters:
    - id: propagationToken
      type: System.Byte[]
      description: "Um token de propagação que representa uma transação."
    return:
      type: System.Transactions.Transaction
      description: "Um <xref href=&quot;System.Transactions.Transaction&quot;> </xref> do token de propagação de transmissor especificado."
  overload: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*
  exceptions:
  - type: System.Transactions.TransactionManagerCommunicationException
    commentId: T:System.Transactions.TransactionManagerCommunicationException
    description: "A desserialização de uma transação falha porque o Gerenciador de transações não pode ser contatado. Isso pode ser causado por configurações de firewall ou de segurança de rede."
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  id: GetTransmitterPropagationToken(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransmitterPropagationToken(Transaction)
  nameWithType: TransactionInterop.GetTransmitterPropagationToken(Transaction)
  fullName: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(Transaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Gera um token de propagação especificado <xref href=&quot;System.Transactions.Transaction&quot;> </xref>."
  syntax:
    content: public static byte[] GetTransmitterPropagationToken (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Uma transação a ser empacotado em um token de propagação."
    return:
      type: System.Byte[]
      description: "Esse método, junto com o <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*>método, fornece a funcionalidade de propagação do transmissor/receptor, em que a transação &quot;retirada&quot; do computador remoto quando o último é chamado para descompactar a transação.</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*>       Para obter mais informações sobre modelos de propagação diferente, consulte a seção comentários a <xref href=&quot;System.Transactions.TransactionInterop&quot;> </xref> classe."
  overload: System.Transactions.TransactionInterop.GetTransmitterPropagationToken*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetWhereabouts
  id: GetWhereabouts
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetWhereabouts()
  nameWithType: TransactionInterop.GetWhereabouts()
  fullName: System.Transactions.TransactionInterop.GetWhereabouts()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Obtém a localização do Gerenciador de transações distribuídas que <xref href=&quot;System.Transactions&quot;> </xref> usa."
  remarks: "A localização contém um endereço que descreve o local de um Gerenciador de transações. Isso permite que dois gerenciadores de transações para se comunicar uns com os outros e, assim, propagar uma transação de um sistema para outro. As informações retornadas por esse método podem ser usadas para fornecer informações de local para a propagação de transação de modelo de push com o <xref:System.Transactions.TransactionInterop.GetExportCookie%2A>método.</xref:System.Transactions.TransactionInterop.GetExportCookie%2A>       Para obter mais informações sobre modelos de propagação diferente, consulte a seção comentários para a <xref:System.Transactions.TransactionInterop>classe.</xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public static byte[] GetWhereabouts ();
    parameters: []
    return:
      type: System.Byte[]
      description: "A localização do Gerenciador de transações distribuídas que <xref href=&quot;System.Transactions&quot;> </xref> usa."
  overload: System.Transactions.TransactionInterop.GetWhereabouts*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.PromoterTypeDtc
  id: PromoterTypeDtc
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: PromoterTypeDtc
  nameWithType: TransactionInterop.PromoterTypeDtc
  fullName: System.Transactions.TransactionInterop.PromoterTypeDtc
  type: Field
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "O tipo de processador de transação distribuída."
  remarks: "Esse valor é usado para o `Transaction.PromoterType` propriedade se a transação está ou será promovida para MSDTC e o `Transaction.GetPromotedToken` método retornará um token de propagação de transações do MSDTC para o `byte[]` resultados."
  syntax:
    content: public static readonly Guid PromoterTypeDtc;
    return:
      type: System.Guid
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Transactions.TransactionManagerCommunicationException
  parent: System.Transactions
  isExternal: false
  name: TransactionManagerCommunicationException
  nameWithType: TransactionManagerCommunicationException
  fullName: System.Transactions.TransactionManagerCommunicationException
- uid: System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetDtcTransaction(Transaction)
  nameWithType: TransactionInterop.GetDtcTransaction(Transaction)
  fullName: System.Transactions.TransactionInterop.GetDtcTransaction(Transaction)
- uid: System.Transactions.IDtcTransaction
  parent: System.Transactions
  isExternal: false
  name: IDtcTransaction
  nameWithType: IDtcTransaction
  fullName: System.Transactions.IDtcTransaction
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetExportCookie(Transaction,Byte[])
  nameWithType: TransactionInterop.GetExportCookie(Transaction,Byte[])
  fullName: System.Transactions.TransactionInterop.GetExportCookie(Transaction,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromDtcTransaction(IDtcTransaction)
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  fullName: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromExportCookie(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromExportCookie(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(Byte[])
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromTransmitterPropagationToken(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransmitterPropagationToken(Transaction)
  nameWithType: TransactionInterop.GetTransmitterPropagationToken(Transaction)
  fullName: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(Transaction)
- uid: System.Transactions.TransactionInterop.GetWhereabouts
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetWhereabouts()
  nameWithType: TransactionInterop.GetWhereabouts()
  fullName: System.Transactions.TransactionInterop.GetWhereabouts()
- uid: System.Transactions.TransactionInterop.PromoterTypeDtc
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: PromoterTypeDtc
  nameWithType: TransactionInterop.PromoterTypeDtc
  fullName: System.Transactions.TransactionInterop.PromoterTypeDtc
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.TransactionInterop.GetDtcTransaction*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetDtcTransaction
  nameWithType: TransactionInterop.GetDtcTransaction
- uid: System.Transactions.TransactionInterop.GetExportCookie*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetExportCookie
  nameWithType: TransactionInterop.GetExportCookie
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromDtcTransaction
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromExportCookie
  nameWithType: TransactionInterop.GetTransactionFromExportCookie
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromTransmitterPropagationToken
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransmitterPropagationToken
  nameWithType: TransactionInterop.GetTransmitterPropagationToken
- uid: System.Transactions.TransactionInterop.GetWhereabouts*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetWhereabouts
  nameWithType: TransactionInterop.GetWhereabouts
