### YamlMime:ManagedReference
items:
- uid: System.Drawing.Bitmap
  id: Bitmap
  children:
  - System.Drawing.Bitmap.#ctor(System.Drawing.Image)
  - System.Drawing.Bitmap.#ctor(System.IO.Stream)
  - System.Drawing.Bitmap.#ctor(System.String)
  - System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)
  - System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)
  - System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)
  - System.Drawing.Bitmap.#ctor(System.String,System.Boolean)
  - System.Drawing.Bitmap.#ctor(System.Type,System.String)
  - System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)
  - System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)
  - System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)
  - System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Bitmap.FromHicon(System.IntPtr)
  - System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)
  - System.Drawing.Bitmap.GetHbitmap
  - System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)
  - System.Drawing.Bitmap.GetHicon
  - System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)
  - System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)
  - System.Drawing.Bitmap.MakeTransparent
  - System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)
  - System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)
  - System.Drawing.Bitmap.SetResolution(System.Single,System.Single)
  - System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)
  langs:
  - csharp
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
  type: Class
  summary: "Encapsula um [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] bitmap, que consiste em dados de pixel para uma imagem de gráfico e seus atributos. Um Bitmap é um objeto usado para trabalhar com imagens definidas por dados de pixel."
  remarks: "Um bitmap é composto dos dados de pixel para uma imagem de gráfico e seus atributos. Há muitos formatos padrão para salvar um bitmap em um arquivo. [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]suporta os seguintes formatos de arquivo: BMP, GIF, EXIF, JPG, PNG e TIFF. Para obter mais informações sobre os formatos com suporte, consulte [tipos de Bitmaps](~/add/includes/ajax-current-ext-md.md).       Você pode criar imagens de arquivos e fluxos de outras fontes, usando uma da <xref:System.Drawing.Bitmap.%23ctor%2A>construtores e salvá-los em um fluxo ou ao sistema de arquivos com o <xref:System.Drawing.Image.Save%2A>método.</xref:System.Drawing.Image.Save%2A> </xref:System.Drawing.Bitmap.%23ctor%2A> Imagens são desenhadas na tela ou à memória usando o <xref:System.Drawing.Graphics.DrawImage%2A>método de <xref:System.Drawing.Graphics>objeto.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.DrawImage%2A> Para obter uma lista de tópicos sobre como trabalhar com arquivos de imagem, consulte [trabalhando com imagens, Bitmaps, ícones e metarquivos](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Bitmap a classe não é acessível em domínios de aplicativo. Por exemplo, se você criar um dinâmico <xref:System.AppDomain>e criar vários pincéis, canetas e bitmaps em que domínio, em seguida, passe esses objetos de volta para o domínio de aplicativo principal, você pode usar com êxito o pincéis e canetas.</xref:System.AppDomain> No entanto, se você chamar o <xref:System.Drawing.Graphics.DrawImage%2A>método para desenhar o Bitmap empacotado, você recebe a seguinte exceção.</xref:System.Drawing.Graphics.DrawImage%2A>   >> Comunicação remota não é possível localizar o campo &quot;imagem nativa&quot; no tipo &quot;System.Drawing.Image&quot;."
  example:
  - "The following code example demonstrates how to construct a new Bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Width%2A>, and <xref:System.Drawing.Image.Height%2A> properties.  \n  \n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/t-system.drawing.bitmap_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/t-system.drawing.bitmap_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/t-system.drawing.bitmap_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class Bitmap : System.Drawing.Image
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Drawing.Image
  implements: []
  inheritedMembers:
  - System.Drawing.Image.Clone
  - System.Drawing.Image.Dispose
  - System.Drawing.Image.Dispose(System.Boolean)
  - System.Drawing.Image.Flags
  - System.Drawing.Image.FrameDimensionsList
  - System.Drawing.Image.FromFile(System.String)
  - System.Drawing.Image.FromFile(System.String,System.Boolean)
  - System.Drawing.Image.FromHbitmap(System.IntPtr)
  - System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  - System.Drawing.Image.FromStream(System.IO.Stream)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  - System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  - System.Drawing.Image.GetEncoderParameterList(System.Guid)
  - System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  - System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.GetPropertyItem(System.Int32)
  - System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  - System.Drawing.Image.Height
  - System.Drawing.Image.HorizontalResolution
  - System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.Palette
  - System.Drawing.Image.PhysicalDimension
  - System.Drawing.Image.PixelFormat
  - System.Drawing.Image.PropertyIdList
  - System.Drawing.Image.PropertyItems
  - System.Drawing.Image.RawFormat
  - System.Drawing.Image.RemovePropertyItem(System.Int32)
  - System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.Save(System.String)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  - System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  - System.Drawing.Image.Size
  - System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Drawing.Image.Tag
  - System.Drawing.Image.VerticalResolution
  - System.Drawing.Image.Width
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Drawing.Image)
  id: '#ctor(System.Drawing.Image)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Image)
  nameWithType: Bitmap.Bitmap(Image)
  fullName: System.Drawing.Bitmap.Bitmap(Image)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> classe a partir da imagem existente especificada."
  syntax:
    content: public Bitmap (System.Drawing.Image original);
    parameters:
    - id: original
      type: System.Drawing.Image
      description: "O <xref href=&quot;System.Drawing.Image&quot;> </xref> do qual criar o novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  overload: System.Drawing.Bitmap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Stream)
  nameWithType: Bitmap.Bitmap(Stream)
  fullName: System.Drawing.Bitmap.Bitmap(Stream)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> classe do fluxo de dados especificado."
  remarks: "Você deve manter o fluxo aberto para o tempo de vida de <xref:System.Drawing.Bitmap>.</xref:System.Drawing.Bitmap>       Devido a uma limitação do [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] decodificador, um <xref:System.ArgumentException?displayProperty=fullName>é gerada se você construir um bitmap de um arquivo de imagem PNG com uma única dimensão maior que 65.535 pixels.</xref:System.ArgumentException?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to load a bitmap from a stream.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a <xref:System.Windows.Forms.PictureBox> named `PictureBox1`. Paste the code into the form and call the `InitializeStreamBitmap` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-cs[System.Drawing.BitmapMembers#2](~/add/codesnippet/csharp/m-system.drawing.bitmap._2_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#2](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._2_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#2](~/add/codesnippet/cpp/m-system.drawing.bitmap._2_1.cpp)]"
  syntax:
    content: public Bitmap (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O fluxo de dados usado para carregar a imagem."
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>não contém dados de imagem ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - ou - <code>stream</code> contém um arquivo de imagem PNG com uma única dimensão maior que 65.535 pixels."
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(String)
  nameWithType: Bitmap.Bitmap(String)
  fullName: System.Drawing.Bitmap.Bitmap(String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> classe do arquivo especificado."
  remarks: 'O nome de arquivo e o caminho podem ser relativo ao aplicativo ou um caminho absoluto. Use este construtor abrir imagens com os seguintes formatos: BMP, GIF, EXIF, JPG, PNG e TIFF. Para obter mais informações sobre os formatos com suporte, consulte [tipos de Bitmaps](~/add/includes/ajax-current-ext-md.md). O arquivo permanecerá bloqueado até que o <xref:System.Drawing.Bitmap>é descartado.</xref:System.Drawing.Bitmap>'
  syntax:
    content: public Bitmap (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "O caminho e nome de arquivo de bitmap."
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado não foi encontrado."
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)
  id: '#ctor(System.Drawing.Image,System.Drawing.Size)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Image,Size)
  nameWithType: Bitmap.Bitmap(Image,Size)
  fullName: System.Drawing.Bitmap.Bitmap(Image,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> classe a partir da imagem existente especificada, escalada para o tamanho especificado."
  syntax:
    content: public Bitmap (System.Drawing.Image original, System.Drawing.Size newSize);
    parameters:
    - id: original
      type: System.Drawing.Image
      description: "O <xref href=&quot;System.Drawing.Image&quot;> </xref> do qual criar o novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: newSize
      type: System.Drawing.Size
      description: "O <xref href=&quot;System.Drawing.Size&quot;> </xref> estrutura que representam o tamanho do novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Int32,Int32)
  nameWithType: Bitmap.Bitmap(Int32,Int32)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> classe com o tamanho especificado."
  remarks: "Este construtor cria um <xref:System.Drawing.Bitmap>com um <xref:System.Drawing.Imaging.PixelFormat>valor de enumeração de <xref:System.Drawing.Imaging.PixelFormat>.</xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Bitmap>"
  syntax:
    content: public Bitmap (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "A largura, em pixels, do novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: height
      type: System.Int32
      description: "A altura, em pixels, do novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Stream,Boolean)
  nameWithType: Bitmap.Bitmap(Stream,Boolean)
  fullName: System.Drawing.Bitmap.Bitmap(Stream,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> classe do fluxo de dados especificado."
  remarks: "Você deve manter o fluxo aberto para o tempo de vida de <xref:System.Drawing.Bitmap>.</xref:System.Drawing.Bitmap>       Devido a uma limitação do [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] decodificador, um <xref:System.ArgumentException?displayProperty=fullName>é gerada se você construir um bitmap de um arquivo de imagem PNG com uma única dimensão maior que 65.535 pixels.</xref:System.ArgumentException?displayProperty=fullName>"
  syntax:
    content: public Bitmap (System.IO.Stream stream, bool useIcm);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O fluxo de dados usado para carregar a imagem."
    - id: useIcm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para usar a correção de cor para este <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>não contém dados de imagem ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - ou - <code>stream</code> contém um arquivo de imagem PNG com uma única dimensão maior que 65.535 pixels."
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(String,Boolean)
  nameWithType: Bitmap.Bitmap(String,Boolean)
  fullName: System.Drawing.Bitmap.Bitmap(String,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> classe do arquivo especificado."
  remarks: 'Use este construtor abrir imagens com os seguintes formatos: BMP, GIF, EXIF, JPG, PNG e TIFF. Para obter mais informações sobre os formatos com suporte, consulte [tipos de Bitmaps](~/add/includes/ajax-current-ext-md.md). O arquivo permanecerá bloqueado até que o <xref:System.Drawing.Bitmap>é descartado.</xref:System.Drawing.Bitmap>'
  example:
  - "The following code example demonstrates how to construct a new bitmap from a file. The example uses the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A> property.  \n  \n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1` and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/m-system.drawing.bitmap._10_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/m-system.drawing.bitmap._10_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._10_1.vb)]"
  syntax:
    content: public Bitmap (string filename, bool useIcm);
    parameters:
    - id: filename
      type: System.String
      description: "O nome do arquivo de bitmap."
    - id: useIcm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para usar a correção de cor para este <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Bitmap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Type,String)
  nameWithType: Bitmap.Bitmap(Type,String)
  fullName: System.Drawing.Bitmap.Bitmap(Type,String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> classe a partir de um recurso especificado."
  remarks: "Este construtor combina o namespace do tipo especificado com o nome de cadeia de caracteres do recurso e procura uma correspondência no manifesto do assembly. Por exemplo você pode passar o <xref:System.Windows.Forms.Button>tipo e `Button.bmp` a este construtor e ele procurará um recurso chamado `System.Windows.Forms.Button.bmp`.</xref:System.Windows.Forms.Button>"
  example:
  - "The following code example demonstrates how to construct a bitmap from a type, and how to use the <xref:System.Drawing.Image.Save%2A> method. To run this example, paste the code into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `ConstructFromResourceSaveAsGif` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>  \n  \n [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/cpp/m-system.drawing.bitmap._1_1.cpp)]\n [!code-cs[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/csharp/m-system.drawing.bitmap._1_1.cs)]\n [!code-vb[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._1_1.vb)]"
  syntax:
    content: public Bitmap (Type type, string resource);
    parameters:
    - id: type
      type: System.Type
      description: "A classe usada para extrair o recurso."
    - id: resource
      type: System.String
      description: "O nome do recurso."
  overload: System.Drawing.Bitmap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Image,System.Int32,System.Int32)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Image,Int32,Int32)
  nameWithType: Bitmap.Bitmap(Image,Int32,Int32)
  fullName: System.Drawing.Bitmap.Bitmap(Image,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> classe a partir da imagem existente especificada, escalada para o tamanho especificado."
  syntax:
    content: public Bitmap (System.Drawing.Image original, int width, int height);
    parameters:
    - id: original
      type: System.Drawing.Image
      description: "O <xref href=&quot;System.Drawing.Image&quot;> </xref> do qual criar o novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: width
      type: System.Int32
      description: "A largura, em pixels, do novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: height
      type: System.Int32
      description: "A altura, em pixels, do novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)
  id: '#ctor(System.Int32,System.Int32,System.Drawing.Graphics)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Int32,Int32,Graphics)
  nameWithType: Bitmap.Bitmap(Int32,Int32,Graphics)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32,Graphics)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> classe com o tamanho especificado e com a resolução especificada <xref href=&quot;System.Drawing.Graphics&quot;> </xref> objeto."
  remarks: "O novo <xref:System.Drawing.Bitmap>que cria esse método usa sua resolução horizontal e vertical da <xref:System.Drawing.Graphics.DpiX%2A>e <xref:System.Drawing.Graphics.DpiY%2A>Propriedades de `g`, respectivamente.</xref:System.Drawing.Graphics.DpiY%2A> </xref:System.Drawing.Graphics.DpiX%2A> </xref:System.Drawing.Bitmap>"
  syntax:
    content: public Bitmap (int width, int height, System.Drawing.Graphics g);
    parameters:
    - id: width
      type: System.Int32
      description: "A largura, em pixels, do novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: height
      type: System.Int32
      description: "A altura, em pixels, do novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: g
      type: System.Drawing.Graphics
      description: "O <xref href=&quot;System.Drawing.Graphics&quot;> </xref> objeto que especifica a resolução para o novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>g</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)
  id: '#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Int32,Int32,PixelFormat)
  nameWithType: Bitmap.Bitmap(Int32,Int32,PixelFormat)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32,PixelFormat)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> classe com o tamanho especificado e o formato."
  syntax:
    content: public Bitmap (int width, int height, System.Drawing.Imaging.PixelFormat format);
    parameters:
    - id: width
      type: System.Int32
      description: "A largura, em pixels, do novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: height
      type: System.Int32
      description: "A altura, em pixels, do novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: format
      type: System.Drawing.Imaging.PixelFormat
      description: "O formato de pixel para o novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>. Isso deve especificar um valor que começa com `Format`."
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> valor for especificado, cujo nome não começa com *formato*. Por exemplo, especificar <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> fará com que um <xref:System.ArgumentException>, mas <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> não.</xref:System.ArgumentException>"
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Int32,Int32,Int32,PixelFormat,IntPtr)
  nameWithType: Bitmap.Bitmap(Int32,Int32,Int32,PixelFormat,IntPtr)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32,Int32,PixelFormat,IntPtr)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> classe com o tamanho especificado, o formato de pixel e dados de pixel."
  remarks: "O chamador é responsável por alocar e liberar o bloco de memória especificado pelo `scan0` parâmetro. No entanto, a memória não deve ser liberada até que as <xref:System.Drawing.Bitmap>é liberado.</xref:System.Drawing.Bitmap>"
  example:
  - "The following code example shows how to use the Bitmap constructor. This example is designed to be used with Windows Forms and requires a <xref:System.Windows.Forms.PaintEventArgs> parameter, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event.  \n  \n [!code-cs[System.Drawing.MiscExamples#Constructor](~/add/codesnippet/csharp/880fbfe7-f069-4538-b980-_1.cs)]\n [!code-vb[System.Drawing.MiscExamples#Constructor](~/add/codesnippet/visualbasic/880fbfe7-f069-4538-b980-_1.vb)]"
  syntax:
    content: public Bitmap (int width, int height, int stride, System.Drawing.Imaging.PixelFormat format, IntPtr scan0);
    parameters:
    - id: width
      type: System.Int32
      description: "A largura, em pixels, do novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: height
      type: System.Int32
      description: "A altura, em pixels, do novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: stride
      type: System.Int32
      description: "Inteiro que especifica o deslocamento de bytes entre o início da linha de uma verificação e a próxima. Isso é normalmente (mas não necessariamente) o número de bytes no formato de pixel (por exemplo, 2 de 16 bits por pixel) multiplicada pela largura de bitmap. O valor passado para esse parâmetro deve ser um múltiplo de quatro."
    - id: format
      type: System.Drawing.Imaging.PixelFormat
      description: "O formato de pixel para o novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>. Isso deve especificar um valor que começa com `Format`."
    - id: scan0
      type: System.IntPtr
      description: "Ponteiro para uma matriz de bytes que contém os dados de pixel."
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> valor for especificado, cujo nome não começa com *formato*. Por exemplo, especificar <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> fará com que um <xref:System.ArgumentException>, mas <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> não.</xref:System.ArgumentException>"
  platform:
  - net462
- uid: System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)
  id: Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Clone(Rectangle,PixelFormat)
  nameWithType: Bitmap.Clone(Rectangle,PixelFormat)
  fullName: System.Drawing.Bitmap.Clone(Rectangle,PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria uma cópia da seção deste <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> definido por <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> estrutura e com um especificado <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> enumeração."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Bitmap> from a file.  \n  \n-   Clones a portion of that <xref:System.Drawing.Bitmap>.  \n  \n-   Draws the cloned portion to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#1](~/add/codesnippet/cpp/e09cefd6-c22e-4bb1-ad48-_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#1](~/add/codesnippet/csharp/e09cefd6-c22e-4bb1-ad48-_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#1](~/add/codesnippet/visualbasic/e09cefd6-c22e-4bb1-ad48-_1.vb)]"
  syntax:
    content: public System.Drawing.Bitmap Clone (System.Drawing.Rectangle rect, System.Drawing.Imaging.PixelFormat format);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Define a parte deste <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> para copiar. As coordenadas são em relação a esse <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: format
      type: System.Drawing.Imaging.PixelFormat
      description: "O formato de pixel para o novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>. Isso deve especificar um valor que começa com `Format`."
    return:
      type: System.Drawing.Bitmap
      description: "O novo <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> que esse método cria."
  overload: System.Drawing.Bitmap.Clone*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "<code>rect</code>está fora dos limites do bitmap de origem."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A altura ou largura de <code> rect </code> é 0.       - ou - um <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> valor for especificado, cujo nome não começa com *formato*. Por exemplo, especificar <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> fará com que um <xref:System.ArgumentException>, mas <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> não.</xref:System.ArgumentException>"
  platform:
  - net462
- uid: System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)
  id: Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Clone(RectangleF,PixelFormat)
  nameWithType: Bitmap.Clone(RectangleF,PixelFormat)
  fullName: System.Drawing.Bitmap.Clone(RectangleF,PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria uma cópia da seção deste <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> definida com um especificado <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> enumeração."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Bitmap> from a file.  \n  \n-   Clones a portion of that <xref:System.Drawing.Bitmap>.  \n  \n-   Draws the cloned portion to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#2](~/add/codesnippet/cpp/6beff7cd-a70c-4c8c-beec-_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#2](~/add/codesnippet/csharp/6beff7cd-a70c-4c8c-beec-_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#2](~/add/codesnippet/visualbasic/6beff7cd-a70c-4c8c-beec-_1.vb)]"
  syntax:
    content: public System.Drawing.Bitmap Clone (System.Drawing.RectangleF rect, System.Drawing.Imaging.PixelFormat format);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Define a parte deste <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> para copiar."
    - id: format
      type: System.Drawing.Imaging.PixelFormat
      description: "Especifica o <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> enumeração para o destino <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    return:
      type: System.Drawing.Bitmap
      description: "O <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> que esse método cria."
  overload: System.Drawing.Bitmap.Clone*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "<code>rect</code>está fora dos limites do bitmap de origem."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A altura ou largura de <code> rect </code> é 0."
  platform:
  - net462
- uid: System.Drawing.Bitmap.FromHicon(System.IntPtr)
  id: FromHicon(System.IntPtr)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: FromHicon(IntPtr)
  nameWithType: Bitmap.FromHicon(IntPtr)
  fullName: System.Drawing.Bitmap.FromHicon(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria um <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> de um identificador do Windows para um ícone."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Gets the handle to an existing icon image.  \n  \n-   Creates a <xref:System.Drawing.Bitmap> from the handle.  \n  \n-   Draws the <xref:System.Drawing.Bitmap> to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#3](~/add/codesnippet/cpp/m-system.drawing.bitmap._3_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#3](~/add/codesnippet/csharp/m-system.drawing.bitmap._3_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._3_1.vb)]"
  syntax:
    content: public static System.Drawing.Bitmap FromHicon (IntPtr hicon);
    parameters:
    - id: hicon
      type: System.IntPtr
      description: "Um identificador para um ícone."
    return:
      type: System.Drawing.Bitmap
      description: "O <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> que esse método cria."
  overload: System.Drawing.Bitmap.FromHicon*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)
  id: FromResource(System.IntPtr,System.String)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: FromResource(IntPtr,String)
  nameWithType: Bitmap.FromResource(IntPtr,String)
  fullName: System.Drawing.Bitmap.FromResource(IntPtr,String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria um <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> do recurso especificado do Windows."
  remarks: "FromResource requer permissão de segurança para chamar código não gerenciado. Para obter uma alternativa gerenciada para criar um bitmap de um recurso inserido, consulte <xref:System.Drawing.Bitmap.%23ctor%28System.Type%2CSystem.String%29?displayProperty=fullName>.</xref:System.Drawing.Bitmap.%23ctor%28System.Type%2CSystem.String%29?displayProperty=fullName> FromResource só funciona com bitmaps que são nomeados recursos em uma DLL."
  syntax:
    content: public static System.Drawing.Bitmap FromResource (IntPtr hinstance, string bitmapName);
    parameters:
    - id: hinstance
      type: System.IntPtr
      description: "Um identificador para uma instância do arquivo executável que contém o recurso."
    - id: bitmapName
      type: System.String
      description: "Uma cadeia de caracteres que contém o nome do bitmap de recurso."
    return:
      type: System.Drawing.Bitmap
      description: "O <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> que esse método cria."
  overload: System.Drawing.Bitmap.FromResource*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Bitmap.GetHbitmap
  id: GetHbitmap
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: GetHbitmap()
  nameWithType: Bitmap.GetHbitmap()
  fullName: System.Drawing.Bitmap.GetHbitmap()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria um [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] objeto bitmap neste <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  remarks: "Você é responsável por chamar o [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] `DeleteObject` método para liberar a memória usada pelo [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] objeto bitmap. Para obter mais informações sobre GDI bitmaps, consulte [Bitmaps](http://go.microsoft.com/fwlink/?LinkId=205685) na documentação do Windows GDI."
  example:
  - "The following code example demonstrates how to use the GetHbitmap method.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#4](~/add/codesnippet/cpp/m-system.drawing.bitmap._6_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#4](~/add/codesnippet/csharp/m-system.drawing.bitmap._6_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#4](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._6_1.vb)]"
  syntax:
    content: public IntPtr GetHbitmap ();
    parameters: []
    return:
      type: System.IntPtr
      description: "Um identificador para o [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] objeto bitmap que esse método cria."
  overload: System.Drawing.Bitmap.GetHbitmap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A altura ou largura de bitmap é maior do que <xref:System.Int16.MaxValue>.</xref:System.Int16.MaxValue>"
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
- uid: System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)
  id: GetHbitmap(System.Drawing.Color)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: GetHbitmap(Color)
  nameWithType: Bitmap.GetHbitmap(Color)
  fullName: System.Drawing.Bitmap.GetHbitmap(Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria um [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] objeto bitmap neste <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  remarks: "Você é responsável por chamar o [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] `DeleteObject` método para liberar a memória usada pelo [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] objeto bitmap. Para obter mais informações sobre GDI bitmaps, consulte [Bitmaps](http://go.microsoft.com/fwlink/?LinkId=205685) na documentação do Windows GDI."
  example:
  - "The following code example demonstrates how to use the GetHbitmap.method.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#5](~/add/codesnippet/cpp/m-system.drawing.bitmap._7_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#5](~/add/codesnippet/csharp/m-system.drawing.bitmap._7_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._7_1.vb)]"
  syntax:
    content: public IntPtr GetHbitmap (System.Drawing.Color background);
    parameters:
    - id: background
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que especifica a cor do plano de fundo. Esse parâmetro será ignorado se o bitmap for totalmente opaco."
    return:
      type: System.IntPtr
      description: "Um identificador para o [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] objeto bitmap que esse método cria."
  overload: System.Drawing.Bitmap.GetHbitmap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A altura ou largura de bitmap é maior do que <xref:System.Int16.MaxValue>.</xref:System.Int16.MaxValue>"
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
- uid: System.Drawing.Bitmap.GetHicon
  id: GetHicon
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: GetHicon()
  nameWithType: Bitmap.GetHicon()
  fullName: System.Drawing.Bitmap.GetHicon()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Retorna o identificador para um ícone."
  remarks: "Inicialmente, um ícone criado a partir do identificador terá o mesmo tamanho que o bitmap original."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Bitmap>.  \n  \n-   Draws that object to the screen.  \n  \n-   Gets an icon handle for the <xref:System.Drawing.Bitmap>.  \n  \n-   Sets the <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=fullName> attribute of the form to an icon created from the handle.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/cpp/m-system.drawing.bitmap._5_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/csharp/m-system.drawing.bitmap._5_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._5_1.vb)]"
  syntax:
    content: public IntPtr GetHicon ();
    parameters: []
    return:
      type: System.IntPtr
      description: "Um identificador para um ícone com a mesma imagem do Windows a <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  overload: System.Drawing.Bitmap.GetHicon*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
- uid: System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)
  id: GetPixel(System.Int32,System.Int32)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: GetPixel(Int32,Int32)
  nameWithType: Bitmap.GetPixel(Int32,Int32)
  fullName: System.Drawing.Bitmap.GetPixel(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém a cor do pixel especificado neste <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code gets the color of a pixel in a bitmap, and then fills a rectangle with that color.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#7](~/add/codesnippet/cpp/m-system.drawing.bitmap._0_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#7](~/add/codesnippet/csharp/m-system.drawing.bitmap._0_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#7](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._0_1.vb)]"
  syntax:
    content: public System.Drawing.Color GetPixel (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "A coordenada x do pixel para recuperar."
    - id: y
      type: System.Int32
      description: "A coordenada y do pixel para recuperar."
    return:
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor do pixel especificado."
  overload: System.Drawing.Bitmap.GetPixel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>x</code>é menor que 0, ou maior que ou igual a <xref:System.Drawing.Image.Width*>.       - ou - <code>y</code> é menor que 0, ou maior que ou igual a <xref:System.Drawing.Image.Height*>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
- uid: System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)
  id: LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: LockBits(Rectangle,ImageLockMode,PixelFormat)
  nameWithType: Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat)
  fullName: System.Drawing.Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Bloqueia um <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> na memória do sistema."
  remarks: "Use o <xref:System.Drawing.Bitmap.LockBits%2A>método para bloquear um bitmap existente na memória do sistema para que ele pode ser alterado por meio de programação.</xref:System.Drawing.Bitmap.LockBits%2A> Você pode alterar a cor de uma imagem com o <xref:System.Drawing.Bitmap.SetPixel%2A>método, embora o <xref:System.Drawing.Bitmap.LockBits%2A>método oferece melhor desempenho para alterações em larga escala.</xref:System.Drawing.Bitmap.LockBits%2A> </xref:System.Drawing.Bitmap.SetPixel%2A>       O <xref:System.Drawing.Imaging.BitmapData>Especifica os atributos de <xref:System.Drawing.Bitmap>, como tamanho, formato de pixel, o endereço inicial dos dados de pixel na memória e o comprimento de cada linha de verificação (stride).</xref:System.Drawing.Bitmap> </xref:System.Drawing.Imaging.BitmapData>       Ao chamar esse método, você deve usar um membro de <xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName>enumeração que contém um valor específico bits por pixel (BPP).</xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName> Usando <xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName>valores como <xref:System.Drawing.Imaging.PixelFormat>e <xref:System.Drawing.Imaging.PixelFormat>lançará um <xref:System.ArgumentException?displayProperty=fullName>.</xref:System.ArgumentException?displayProperty=fullName> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName> Além disso, passar o formato de pixel incorreto para um bitmap lançará um <xref:System.ArgumentException?displayProperty=fullName>.</xref:System.ArgumentException?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, and <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> properties; the LockBits and <xref:System.Drawing.Bitmap.UnlockBits%2A> methods; and the <xref:System.Drawing.Imaging.ImageLockMode> enumeration. This example is designed to be used with Windows Forms. This example is not designed to work correctly with all pixel formats, but to provide an example of how to use the LockBits method. To run this example, paste it into a form and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `LockUnlockBitsExample` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.BitmapMembers#5](~/add/codesnippet/csharp/89ae463a-b5b8-4e6f-b384-_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#5](~/add/codesnippet/visualbasic/89ae463a-b5b8-4e6f-b384-_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#5](~/add/codesnippet/cpp/89ae463a-b5b8-4e6f-b384-_1.cpp)]"
  syntax:
    content: public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que especifica a parte da estrutura de <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> em bloqueio."
    - id: flags
      type: System.Drawing.Imaging.ImageLockMode
      description: "Um <xref href=&quot;System.Drawing.Imaging.ImageLockMode&quot;> </xref> enumeração que especifica o nível de acesso (leitura/gravação) para o <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: format
      type: System.Drawing.Imaging.PixelFormat
      description: "Um <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> enumeração que especifica o formato de dados deste <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    return:
      type: System.Drawing.Imaging.BitmapData
      description: "Um <xref href=&quot;System.Drawing.Imaging.BitmapData&quot;> </xref> que contém informações sobre a operação de bloqueio."
  overload: System.Drawing.Bitmap.LockBits*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> não é um valor específico de bits por pixel.       - ou - incorreto <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> é passado para um bitmap."
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
- uid: System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)
  id: LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: LockBits(Rectangle,ImageLockMode,PixelFormat,BitmapData)
  nameWithType: Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat,BitmapData)
  fullName: System.Drawing.Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat,BitmapData)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Bloqueia um <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> na memória do sistema"
  remarks: "Use o <xref:System.Drawing.Bitmap.LockBits%2A>método para bloquear um bitmap existente na memória do sistema para que ele pode ser alterado por meio de programação.</xref:System.Drawing.Bitmap.LockBits%2A> Você pode alterar a cor de uma imagem com o <xref:System.Drawing.Bitmap.SetPixel%2A>método, embora o <xref:System.Drawing.Bitmap.LockBits%2A>método oferece melhor desempenho para alterações em larga escala.</xref:System.Drawing.Bitmap.LockBits%2A> </xref:System.Drawing.Bitmap.SetPixel%2A>       Ao chamar esse método, você deve usar um membro de <xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName>enumeração que contém um valor específico bits por pixel (BPP).</xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName> Usando <xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName>valores, como <xref:System.Drawing.Imaging.PixelFormat>e <xref:System.Drawing.Imaging.PixelFormat>, lançará um <xref:System.ArgumentException?displayProperty=fullName>.</xref:System.ArgumentException?displayProperty=fullName> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName> Além disso, passar o formato de pixel incorreto para um bitmap lançará um <xref:System.ArgumentException?displayProperty=fullName>.</xref:System.ArgumentException?displayProperty=fullName>       Esta versão do <xref:System.Drawing.Bitmap.LockBits%2A>método se destina a ser usado com um `flags` valor <xref:System.Drawing.Imaging.ImageLockMode?displayProperty=fullName>.</xref:System.Drawing.Imaging.ImageLockMode?displayProperty=fullName> </xref:System.Drawing.Bitmap.LockBits%2A>"
  syntax:
    content: public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format, System.Drawing.Imaging.BitmapData bitmapData);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Uma estrutura de retângulo que especifica a parte do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> em bloqueio."
    - id: flags
      type: System.Drawing.Imaging.ImageLockMode
      description: "Uma da <xref href=&quot;System.Drawing.Imaging.ImageLockMode&quot;> </xref> valores que especifica o nível de acesso (leitura/gravação) para o <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: format
      type: System.Drawing.Imaging.PixelFormat
      description: "Uma da <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> valores que especifica o formato de dados do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: bitmapData
      type: System.Drawing.Imaging.BitmapData
      description: "Um <xref href=&quot;System.Drawing.Imaging.BitmapData&quot;> </xref> que contém informações sobre a operação de bloqueio."
    return:
      type: System.Drawing.Imaging.BitmapData
      description: "Um <xref href=&quot;System.Drawing.Imaging.BitmapData&quot;> </xref> que contém informações sobre a operação de bloqueio."
  overload: System.Drawing.Bitmap.LockBits*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;></xref>valor não é um valor específico de bits por pixel.       - ou - incorreto <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> é passado para um bitmap."
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
- uid: System.Drawing.Bitmap.MakeTransparent
  id: MakeTransparent
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: MakeTransparent()
  nameWithType: Bitmap.MakeTransparent()
  fullName: System.Drawing.Bitmap.MakeTransparent()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Torna a cor transparente padrão transparente para este <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  remarks: "A paleta do sistema define uma cor como a cor transparente ou alfa, do padrão. Esse método torna a cor transparente padrão transparente para este <xref:System.Drawing.Bitmap>.</xref:System.Drawing.Bitmap> Se nenhuma cor transparente é especificado pelo sistema, <xref:System.Drawing.Color.LightGray%2A>é a cor transparente.</xref:System.Drawing.Color.LightGray%2A>       Quando você chama <xref:System.Drawing.Bitmap.MakeTransparent%2A>, o bitmap será convertido para o <xref:System.Drawing.Imaging.PixelFormat>Formatar, como esse formato oferece suporte a um canal alfa.</xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Bitmap.MakeTransparent%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code makes the system default transparent color transparent for `myBitmap`, and then draws the <xref:System.Drawing.Bitmap> to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#8](~/add/codesnippet/cpp/m-system.drawing.bitmap._9_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#8](~/add/codesnippet/csharp/m-system.drawing.bitmap._9_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#8](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._9_1.vb)]"
  syntax:
    content: public void MakeTransparent ();
    parameters: []
  overload: System.Drawing.Bitmap.MakeTransparent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O formato da imagem de <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> é um formato de ícone."
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
- uid: System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)
  id: MakeTransparent(System.Drawing.Color)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: MakeTransparent(Color)
  nameWithType: Bitmap.MakeTransparent(Color)
  fullName: System.Drawing.Bitmap.MakeTransparent(Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Torna a cor especificada transparente para este <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  remarks: "Quando você chama MakeTransparent, o bitmap será convertido para o <xref:System.Drawing.Imaging.PixelFormat>Formatar, como esse formato oferece suporte a um canal alfa.</xref:System.Drawing.Imaging.PixelFormat>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Gets the color of a pixel in a <xref:System.Drawing.Bitmap>.  \n  \n-   Makes that color transparent for the bitmap.  \n  \n-   Draws the <xref:System.Drawing.Bitmap> to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#9](~/add/codesnippet/cpp/m-system.drawing.bitmap._12_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#9](~/add/codesnippet/csharp/m-system.drawing.bitmap._12_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._12_1.vb)]"
  syntax:
    content: public void MakeTransparent (System.Drawing.Color transparentColor);
    parameters:
    - id: transparentColor
      type: System.Drawing.Color
      description: "O <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor para tornar transparente."
  overload: System.Drawing.Bitmap.MakeTransparent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O formato da imagem de <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> é um formato de ícone."
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
- uid: System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)
  id: SetPixel(System.Int32,System.Int32,System.Drawing.Color)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: SetPixel(Int32,Int32,Color)
  nameWithType: Bitmap.SetPixel(Int32,Int32,Color)
  fullName: System.Drawing.Bitmap.SetPixel(Int32,Int32,Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Define a cor do pixel especificado neste <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  remarks: "Use o método SetPixel para definir a cor de um pixel individual em uma imagem programaticamente. Você também pode alterar uma imagem programaticamente usando o <xref:System.Drawing.Bitmap.LockBits%2A>método.</xref:System.Drawing.Bitmap.LockBits%2A> Normalmente, para alterações em larga escala, o <xref:System.Drawing.Bitmap.LockBits%2A>método oferece melhor desempenho.</xref:System.Drawing.Bitmap.LockBits%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Bitmap>.  \n  \n-   Sets the color of each pixel in the bitmap to black.  \n  \n-   Draws the bitmap.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#10](~/add/codesnippet/cpp/m-system.drawing.bitmap._11_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#10](~/add/codesnippet/csharp/m-system.drawing.bitmap._11_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#10](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._11_1.vb)]"
  syntax:
    content: public void SetPixel (int x, int y, System.Drawing.Color color);
    parameters:
    - id: x
      type: System.Int32
      description: "A coordenada x do pixel para definir."
    - id: y
      type: System.Int32
      description: "A coordenada y do pixel para definir."
    - id: color
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor para atribuir ao pixel especificado."
  overload: System.Drawing.Bitmap.SetPixel*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
- uid: System.Drawing.Bitmap.SetResolution(System.Single,System.Single)
  id: SetResolution(System.Single,System.Single)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: SetResolution(Single,Single)
  nameWithType: Bitmap.SetResolution(Single,Single)
  fullName: System.Drawing.Bitmap.SetResolution(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Define a resolução para esse <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  remarks: "Use esse método para definir a resolução desejada em um bitmap recém-criado. Alterar a resolução da imagem não altera seu tamanho físico."
  example:
  - "The following example code shows how to use the SetResolution method.  \n  \n [!code-vb[System.Drawing.Misc3#SetResolution](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._8_1.vb)]\n [!code-cs[System.Drawing.Misc3#SetResolution](~/add/codesnippet/csharp/m-system.drawing.bitmap._8_1.cs)]"
  syntax:
    content: public void SetResolution (float xDpi, float yDpi);
    parameters:
    - id: xDpi
      type: System.Single
      description: "A resolução horizontal, em pontos por polegada, do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: yDpi
      type: System.Single
      description: "A resolução vertical, em pontos por polegada, do <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  overload: System.Drawing.Bitmap.SetResolution*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
- uid: System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)
  id: UnlockBits(System.Drawing.Imaging.BitmapData)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: UnlockBits(BitmapData)
  nameWithType: Bitmap.UnlockBits(BitmapData)
  fullName: System.Drawing.Bitmap.UnlockBits(BitmapData)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Desbloqueia isso <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> da memória do sistema."
  remarks: "O <xref:System.Drawing.Imaging.BitmapData>Especifica os atributos de <xref:System.Drawing.Bitmap>, como tamanho, formato de pixel, o endereço inicial dos dados de pixel na memória e o comprimento de cada linha de verificação (stride).</xref:System.Drawing.Bitmap> </xref:System.Drawing.Imaging.BitmapData>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, and <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> properties; the <xref:System.Drawing.Bitmap.LockBits%2A> and UnlockBits methods; and the <xref:System.Drawing.Imaging.ImageLockMode> enumeration. This example is not designed to work correctly with all pixel formats, but to provide an example of how to use the <xref:System.Drawing.Bitmap.LockBits%2A> method. This example is designed to be used with Windows Forms. To run this example, paste it into a form and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `LockUnlockBitsExample` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.BitmapMembers#5](~/add/codesnippet/csharp/m-system.drawing.bitmap._4_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#5](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._4_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#5](~/add/codesnippet/cpp/m-system.drawing.bitmap._4_1.cpp)]"
  syntax:
    content: public void UnlockBits (System.Drawing.Imaging.BitmapData bitmapdata);
    parameters:
    - id: bitmapdata
      type: System.Drawing.Imaging.BitmapData
      description: "Um <xref href=&quot;System.Drawing.Imaging.BitmapData&quot;> </xref> que especifica informações sobre a operação de bloqueio."
  overload: System.Drawing.Bitmap.UnlockBits*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "A operação falhou."
  platform:
  - net462
references:
- uid: System.Drawing.Image
  isExternal: false
  name: System.Drawing.Image
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Drawing.Bitmap.#ctor(System.Drawing.Image)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Image)
  nameWithType: Bitmap.Bitmap(Image)
  fullName: System.Drawing.Bitmap.Bitmap(Image)
- uid: System.Drawing.Bitmap.#ctor(System.IO.Stream)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Stream)
  nameWithType: Bitmap.Bitmap(Stream)
  fullName: System.Drawing.Bitmap.Bitmap(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Drawing.Bitmap.#ctor(System.String)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(String)
  nameWithType: Bitmap.Bitmap(String)
  fullName: System.Drawing.Bitmap.Bitmap(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Image,Size)
  nameWithType: Bitmap.Bitmap(Image,Size)
  fullName: System.Drawing.Bitmap.Bitmap(Image,Size)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Int32,Int32)
  nameWithType: Bitmap.Bitmap(Int32,Int32)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Stream,Boolean)
  nameWithType: Bitmap.Bitmap(Stream,Boolean)
  fullName: System.Drawing.Bitmap.Bitmap(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Bitmap.#ctor(System.String,System.Boolean)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(String,Boolean)
  nameWithType: Bitmap.Bitmap(String,Boolean)
  fullName: System.Drawing.Bitmap.Bitmap(String,Boolean)
- uid: System.Drawing.Bitmap.#ctor(System.Type,System.String)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Type,String)
  nameWithType: Bitmap.Bitmap(Type,String)
  fullName: System.Drawing.Bitmap.Bitmap(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Image,Int32,Int32)
  nameWithType: Bitmap.Bitmap(Image,Int32,Int32)
  fullName: System.Drawing.Bitmap.Bitmap(Image,Int32,Int32)
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Int32,Int32,Graphics)
  nameWithType: Bitmap.Bitmap(Int32,Int32,Graphics)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32,Graphics)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Int32,Int32,PixelFormat)
  nameWithType: Bitmap.Bitmap(Int32,Int32,PixelFormat)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32,PixelFormat)
- uid: System.Drawing.Imaging.PixelFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: System.Drawing.Imaging.PixelFormat
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Int32,Int32,Int32,PixelFormat,IntPtr)
  nameWithType: Bitmap.Bitmap(Int32,Int32,Int32,PixelFormat,IntPtr)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32,Int32,PixelFormat,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Clone(Rectangle,PixelFormat)
  nameWithType: Bitmap.Clone(Rectangle,PixelFormat)
  fullName: System.Drawing.Bitmap.Clone(Rectangle,PixelFormat)
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Clone(RectangleF,PixelFormat)
  nameWithType: Bitmap.Clone(RectangleF,PixelFormat)
  fullName: System.Drawing.Bitmap.Clone(RectangleF,PixelFormat)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Bitmap.FromHicon(System.IntPtr)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: FromHicon(IntPtr)
  nameWithType: Bitmap.FromHicon(IntPtr)
  fullName: System.Drawing.Bitmap.FromHicon(IntPtr)
- uid: System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: FromResource(IntPtr,String)
  nameWithType: Bitmap.FromResource(IntPtr,String)
  fullName: System.Drawing.Bitmap.FromResource(IntPtr,String)
- uid: System.Drawing.Bitmap.GetHbitmap
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetHbitmap()
  nameWithType: Bitmap.GetHbitmap()
  fullName: System.Drawing.Bitmap.GetHbitmap()
- uid: System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetHbitmap(Color)
  nameWithType: Bitmap.GetHbitmap(Color)
  fullName: System.Drawing.Bitmap.GetHbitmap(Color)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Bitmap.GetHicon
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetHicon()
  nameWithType: Bitmap.GetHicon()
  fullName: System.Drawing.Bitmap.GetHicon()
- uid: System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetPixel(Int32,Int32)
  nameWithType: Bitmap.GetPixel(Int32,Int32)
  fullName: System.Drawing.Bitmap.GetPixel(Int32,Int32)
- uid: System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: LockBits(Rectangle,ImageLockMode,PixelFormat)
  nameWithType: Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat)
  fullName: System.Drawing.Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat)
- uid: System.Drawing.Imaging.BitmapData
  parent: System.Drawing.Imaging
  isExternal: false
  name: BitmapData
  nameWithType: BitmapData
  fullName: System.Drawing.Imaging.BitmapData
- uid: System.Drawing.Imaging.ImageLockMode
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageLockMode
  nameWithType: ImageLockMode
  fullName: System.Drawing.Imaging.ImageLockMode
- uid: System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: LockBits(Rectangle,ImageLockMode,PixelFormat,BitmapData)
  nameWithType: Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat,BitmapData)
  fullName: System.Drawing.Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat,BitmapData)
- uid: System.Drawing.Bitmap.MakeTransparent
  parent: System.Drawing.Bitmap
  isExternal: false
  name: MakeTransparent()
  nameWithType: Bitmap.MakeTransparent()
  fullName: System.Drawing.Bitmap.MakeTransparent()
- uid: System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: MakeTransparent(Color)
  nameWithType: Bitmap.MakeTransparent(Color)
  fullName: System.Drawing.Bitmap.MakeTransparent(Color)
- uid: System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: SetPixel(Int32,Int32,Color)
  nameWithType: Bitmap.SetPixel(Int32,Int32,Color)
  fullName: System.Drawing.Bitmap.SetPixel(Int32,Int32,Color)
- uid: System.Drawing.Bitmap.SetResolution(System.Single,System.Single)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: SetResolution(Single,Single)
  nameWithType: Bitmap.SetResolution(Single,Single)
  fullName: System.Drawing.Bitmap.SetResolution(Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: UnlockBits(BitmapData)
  nameWithType: Bitmap.UnlockBits(BitmapData)
  fullName: System.Drawing.Bitmap.UnlockBits(BitmapData)
- uid: System.Drawing.Bitmap.#ctor*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap.Bitmap
- uid: System.Drawing.Bitmap.Clone*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Clone
  nameWithType: Bitmap.Clone
- uid: System.Drawing.Bitmap.FromHicon*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: FromHicon
  nameWithType: Bitmap.FromHicon
- uid: System.Drawing.Bitmap.FromResource*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: FromResource
  nameWithType: Bitmap.FromResource
- uid: System.Drawing.Bitmap.GetHbitmap*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetHbitmap
  nameWithType: Bitmap.GetHbitmap
- uid: System.Drawing.Bitmap.GetHicon*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetHicon
  nameWithType: Bitmap.GetHicon
- uid: System.Drawing.Bitmap.GetPixel*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetPixel
  nameWithType: Bitmap.GetPixel
- uid: System.Drawing.Bitmap.LockBits*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: LockBits
  nameWithType: Bitmap.LockBits
- uid: System.Drawing.Bitmap.MakeTransparent*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: MakeTransparent
  nameWithType: Bitmap.MakeTransparent
- uid: System.Drawing.Bitmap.SetPixel*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: SetPixel
  nameWithType: Bitmap.SetPixel
- uid: System.Drawing.Bitmap.SetResolution*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: SetResolution
  nameWithType: Bitmap.SetResolution
- uid: System.Drawing.Bitmap.UnlockBits*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: UnlockBits
  nameWithType: Bitmap.UnlockBits
