### YamlMime:ManagedReference
items:
- uid: System.Threading.Overlapped
  id: Overlapped
  children:
  - System.Threading.Overlapped.#ctor
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  - System.Threading.Overlapped.AsyncResult
  - System.Threading.Overlapped.EventHandle
  - System.Threading.Overlapped.EventHandleIntPtr
  - System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.OffsetHigh
  - System.Threading.Overlapped.OffsetLow
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  - System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  langs:
  - csharp
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
  type: Class
  summary: "Fornece uma representação gerenciada do Win32 `OVERLAPPED` estrutura, incluindo métodos para transferir informações de uma instância de Overlapped para um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura."
  remarks: "O <xref:System.Threading.Overlapped.Pack%2A>e <xref:System.Threading.Overlapped.UnsafePack%2A>métodos transferirem informações de um objeto de Overlapped para um <xref:System.Threading.NativeOverlapped>estrutura que pode ser passada para funções de API do Win32 para assíncrona e/s de arquivo.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A> As <xref:System.Threading.Overlapped.Unpack%2A>informações do método de transferência de uma <xref:System.Threading.NativeOverlapped>estrutura para uma instância da classe Overlapped.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.Unpack%2A>       As alterações nas propriedades de um objeto de Overlapped afetam seus associados <xref:System.Threading.NativeOverlapped>estrutura e vice-versa.</xref:System.Threading.NativeOverlapped>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Overlapped
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor
  id: '#ctor'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Inicializa uma nova instância vazia do <xref href=&quot;System.Threading.Overlapped&quot;> </xref> classe."
  syntax:
    content: public Overlapped ();
    parameters: []
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Threading.Overlapped&quot;> </xref> posicionar a classe com o arquivo especificado, o identificador de inteiro de 32 bits para um evento que é sinalizado quando a operação de e/s é concluída e uma interface por meio do qual retornar os resultados da operação."
  remarks: "Use a <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>propriedade para obter o identificador de qualquer evento de sincronização gerenciado que deriva de <xref:System.Threading.WaitHandle>classe.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>       A implementação do <xref:System.IAsyncResult>fornece informações de status sobre a operação de e/s.</xref:System.IAsyncResult> Passá-lo para o construtor de `ar` parâmetro e recuperá-lo mais tarde com o <xref:System.Threading.Overlapped.AsyncResult%2A>propriedade.</xref:System.Threading.Overlapped.AsyncResult%2A> Se um método de retorno de chamada é especificado para o <xref:System.Threading.Overlapped.Pack%2A>ou <xref:System.Threading.Overlapped.UnsafePack%2A>método, o retorno de chamada pode recuperar seu <xref:System.IAsyncResult>por desempacotar o <xref:System.Threading.NativeOverlapped>estrutura, ele recebe.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, int hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "A palavra baixa do que a posição do arquivo no qual iniciar a transferência."
    - id: offsetHi
      type: System.Int32
      description: "A palavra alta da posição do arquivo no qual iniciar a transferência."
    - id: hEvent
      type: System.Int32
      description: "O identificador para um evento que é sinalizado quando a operação de e/s é concluída."
    - id: ar
      type: System.IAsyncResult
      description: "Um objeto que implementa o <xref:System.IAsyncResult>interface e fornece informações de status sobre a operação de e/s.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Threading.Overlapped&quot;> </xref> posicionar a classe com o arquivo especificado, o identificador para um evento que é sinalizado quando a operação de e/s é concluída e uma interface por meio do qual retornar os resultados da operação."
  remarks: "Para obter o identificador de um objeto de sincronização gerenciado que deriva o <xref:System.Threading.WaitHandle>classe, use o <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>propriedade para obter um <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>do objeto e, em seguida, chamar o <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>método.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>       A implementação do <xref:System.IAsyncResult>fornece informações de status sobre a operação de e/s.</xref:System.IAsyncResult> Passá-lo para o construtor de `ar` parâmetro e recuperá-lo mais tarde com o <xref:System.Threading.Overlapped.AsyncResult%2A>propriedade.</xref:System.Threading.Overlapped.AsyncResult%2A> Se um método de retorno de chamada é especificado para o <xref:System.Threading.Overlapped.Pack%2A>ou <xref:System.Threading.Overlapped.UnsafePack%2A>método, o retorno de chamada pode recuperar seu <xref:System.IAsyncResult>por desempacotar o <xref:System.Threading.NativeOverlapped>estrutura, ele recebe.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "A palavra baixa do que a posição do arquivo no qual iniciar a transferência."
    - id: offsetHi
      type: System.Int32
      description: "A palavra alta da posição do arquivo no qual iniciar a transferência."
    - id: hEvent
      type: System.IntPtr
      description: "O identificador para um evento que é sinalizado quando a operação de e/s é concluída."
    - id: ar
      type: System.IAsyncResult
      description: "Um objeto que implementa o <xref:System.IAsyncResult>interface e fornece informações de status sobre a operação de e/s.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.AsyncResult
  id: AsyncResult
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Obtém ou define o objeto que fornece informações de status sobre a operação de e/s."
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "Um objeto que implementa o <xref:System.IAsyncResult>interface.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandle
  id: EventHandle
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Obtém ou define o identificador de inteiro de 32 bits para um evento de sincronização que é sinalizado quando a operação de e/s é concluída."
  remarks: "Essa propriedade não pode ser usada em plataformas de 64 bits. Use o <xref:System.Threading.Overlapped.EventHandleIntPtr%2A>propriedade em vez disso.</xref:System.Threading.Overlapped.EventHandleIntPtr%2A>       Use a <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>propriedade para obter o identificador de qualquer evento de sincronização gerenciado que deriva de <xref:System.Threading.WaitHandle>classe.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>"
  syntax:
    content: public int EventHandle { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que representa o identificador de evento de sincronização.</xref:System.Int32>"
  overload: System.Threading.Overlapped.EventHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandleIntPtr
  id: EventHandleIntPtr
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Obtém ou define o identificador para o evento de sincronização que é sinalizado quando a operação de e/s é concluída."
  remarks: "Para obter o identificador de um objeto de sincronização gerenciado que deriva o <xref:System.Threading.WaitHandle>classe, use o <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>propriedade para obter um <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>do objeto e, em seguida, chamar o <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>método.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>"
  syntax:
    content: public IntPtr EventHandleIntPtr { get; set; }
    return:
      type: System.IntPtr
      description: "Um <xref:System.IntPtr>que representa o identificador do evento.</xref:System.IntPtr>"
  overload: System.Threading.Overlapped.EventHandleIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  id: Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Libera a memória não gerenciada associada a uma estrutura sobreposta nativo alocada pelo <xref:System.Threading.Overlapped.Pack*>método.</xref:System.Threading.Overlapped.Pack*>"
  remarks: "Você deve chamar o método livre exatamente uma vez em cada <xref:System.Threading.NativeOverlapped>ponteiro receber o <xref:System.Threading.Overlapped.Pack%2A>método.</xref:System.Threading.Overlapped.Pack%2A> </xref:System.Threading.NativeOverlapped> Se você não chamar o método livre, você irá causar vazamento de memória. Se você chamar o método livre mais de uma vez, a memória será corrompida."
  syntax:
    content: public static void Free (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Um ponteiro para o <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura a ser liberado."
  overload: System.Threading.Overlapped.Free*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetHigh
  id: OffsetHigh
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Obtém ou define a palavra de ordem alta do que a posição do arquivo no qual iniciar a transferência. A posição do arquivo é um deslocamento de bytes do início do arquivo."
  syntax:
    content: public int OffsetHigh { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que representa a palavra alta da posição do arquivo.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetHigh*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetLow
  id: OffsetLow
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Obtém ou define a palavra de ordem inferior da posição do arquivo no qual iniciar a transferência. A posição do arquivo é um deslocamento de bytes do início do arquivo."
  syntax:
    content: public int OffsetLow { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que representa a palavra baixa da posição do arquivo.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetLow*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  id: Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pacotes na instância atual em um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura, especificando o delegado a ser invocado quando a operação de e/s assíncrona for concluída."
  remarks: "O ponteiro não gerenciado retornado por esse método pode ser passado para o sistema operacional em operações de e/s sobrepostas. O <xref:System.Threading.NativeOverlapped>estrutura é fixa na memória física até <xref:System.Threading.Overlapped.Unpack%2A>é chamado.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>      > [!IMPORTANT] > O chamador é responsável para fixar o buffer. Se o domínio de aplicativo é descarregado, no entanto, o identificador para o buffer fixado é destruído e o buffer é liberado, deixando a operação de e/s ao gravar o endereço liberado. Por esse motivo, é melhor usar o <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>sobrecarga do método, em que o tempo de execução fixa o buffer.</xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>"
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Um <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegado que representa o método de retorno de chamada invocado quando a operação de e/s assíncrona for concluída."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Um ponteiro não gerenciado para um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Atual <xref href=&quot;System.Threading.Overlapped&quot;> </xref> já foi compactado."
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  id: Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pacotes na instância atual em um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura, especificando um delegado é invocado quando a operação de e/s assíncrona for concluída e um objeto gerenciado que serve como um buffer."
  remarks: "O ponteiro não gerenciado retornado por esse método pode ser passado para o sistema operacional em operações de e/s sobrepostas. O <xref:System.Threading.NativeOverlapped>estrutura é fixa na memória física até <xref:System.Threading.Overlapped.Unpack%2A>é chamado.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       O buffer ou buffers especificados na `userData` devem ser as mesmas passado para a função de sistema operacional não gerenciado que executa a e/s assíncrona.      > [!NOTE] > O tempo de execução fixa o buffer ou buffers especificados na `userData` para a duração da operação de e/s. Se o domínio de aplicativo é descarregado, o tempo de execução mantém a memória fixada até que a operação de e/s é concluída."
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Um <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegado que representa o método de retorno de chamada invocado quando a operação de e/s assíncrona for concluída."
    - id: userData
      type: System.Object
      description: "Um objeto ou uma matriz de objetos que representa o buffer de entrada ou saído para a operação. Cada objeto representa um buffer, por exemplo, uma matriz de bytes."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Um ponteiro não gerenciado para um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Atual <xref href=&quot;System.Threading.Overlapped&quot;> </xref> já foi compactado."
  platform:
  - net462
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  id: Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Desempacota especificado não gerenciado <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura em um gerenciado <xref href=&quot;System.Threading.Overlapped&quot;> </xref> objeto."
  remarks: "O <xref:System.Threading.NativeOverlapped>estrutura não é liberada da memória física até que você chamar o <xref:System.Threading.Overlapped.Free%2A>método.</xref:System.Threading.Overlapped.Free%2A> </xref:System.Threading.NativeOverlapped>"
  syntax:
    content: public static System.Threading.Overlapped Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Um ponteiro não gerenciado para um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura."
    return:
      type: System.Threading.Overlapped
      description: "Um <xref href=&quot;System.Threading.Overlapped&quot;> </xref> do objeto que contém as informações desempacotados da estrutura de nativo."
  overload: System.Threading.Overlapped.Unpack*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  id: UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pacotes na instância atual em um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura especificando o delegado a ser invocado quando a operação de e/s assíncrona for concluída. Não se propaga a pilha de chamada."
  remarks: "O ponteiro não gerenciado retornado por esse método pode ser passado para o sistema operacional em operações de e/s sobrepostas. O <xref:System.Threading.NativeOverlapped>estrutura é fixa na memória física até <xref:System.Threading.Overlapped.Unpack%2A>é chamado.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       O chamador é responsável por fixar o buffer. Se o domínio de aplicativo é descarregado, no entanto, o identificador para o buffer fixado é destruído e o buffer é liberado, deixando a operação de e/s ao gravar o endereço liberado. Por esse motivo, é melhor usar o <xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>sobrecarga do método, em que o tempo de execução fixa o buffer.</xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>      > [!CAUTION] > Usando o <xref:System.Threading.Overlapped.UnsafePack%2A>método inadvertidamente pode abrir uma falha de segurança.</xref:System.Threading.Overlapped.UnsafePack%2A> Segurança de acesso ao código baseia suas verificações de permissão sobre as permissões de todos os chamadores na pilha. O <xref:System.Threading.Overlapped.UnsafePack%2A>método não propaga a pilha de chamada.</xref:System.Threading.Overlapped.UnsafePack%2A> Código mal-intencionado poderá explorar isso para evitar verificações de permissão."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Um <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegado que representa o método de retorno de chamada invocado quando a operação de e/s assíncrona for concluída."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Um ponteiro não gerenciado para um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Atual <xref href=&quot;System.Threading.Overlapped&quot;> </xref> já foi compactado."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  id: UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pacotes na instância atual em um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura, especificando o delegado a ser invocado quando a operação de e/s assíncrona for concluída e o objeto gerenciado que serve como um buffer. Não se propaga a pilha de chamada."
  remarks: "O ponteiro não gerenciado retornado por esse método pode ser passado para o sistema operacional em operações de e/s sobrepostas. O <xref:System.Threading.NativeOverlapped>estrutura é fixa na memória física até <xref:System.Threading.Overlapped.Unpack%2A>é chamado.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       O buffer ou buffers especificados na `userData` devem ser as mesmas passado para a função de sistema operacional não gerenciado que executa a e/s assíncrona.       O tempo de execução fixa o buffer ou buffers especificados na`userData` para a duração da operação de e/s. Se o domínio de aplicativo é descarregado, o tempo de execução mantém a memória fixada até que a operação de e/s é concluída.      > [!CAUTION] > Usando o UnsafePack método inadvertidamente foi possível abrir a uma falha de segurança. Segurança de acesso ao código baseia suas verificações de permissão sobre as permissões de todos os chamadores na pilha. O método UnsafePack não propaga a pilha de chamada. Código mal-intencionado poderá explorar isso para evitar verificações de permissão."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Um <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegado que representa o método de retorno de chamada invocado quando a operação de e/s assíncrona for concluída."
    - id: userData
      type: System.Object
      description: "Um objeto ou uma matriz de objetos que representa o buffer de entrada ou saído para a operação. Cada objeto representa um buffer, por exemplo, uma matriz de bytes."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Um ponteiro não gerenciado para um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Atual <xref href=&quot;System.Threading.Overlapped&quot;> </xref> já é compactado."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Threading.Overlapped.#ctor
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Threading.Overlapped.AsyncResult
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
- uid: System.Threading.Overlapped.OffsetHigh
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
- uid: System.Threading.IOCompletionCallback
  parent: System.Threading
  isExternal: false
  name: IOCompletionCallback
  nameWithType: IOCompletionCallback
  fullName: System.Threading.IOCompletionCallback
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
- uid: System.Threading.Overlapped
  parent: System.Threading
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.#ctor*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped.Overlapped
- uid: System.Threading.Overlapped.AsyncResult*
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free
  nameWithType: Overlapped.Free
- uid: System.Threading.Overlapped.OffsetHigh*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack
  nameWithType: Overlapped.Pack
- uid: System.Threading.Overlapped.Unpack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack
  nameWithType: Overlapped.Unpack
- uid: System.Threading.Overlapped.UnsafePack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack
  nameWithType: Overlapped.UnsafePack
