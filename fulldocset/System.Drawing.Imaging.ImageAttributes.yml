### YamlMime:ManagedReference
items:
- uid: System.Drawing.Imaging.ImageAttributes
  id: ImageAttributes
  children:
  - System.Drawing.Imaging.ImageAttributes.#ctor
  - System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable
  - System.Drawing.Imaging.ImageAttributes.ClearColorKey
  - System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearColorMatrix
  - System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearGamma
  - System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearNoOp
  - System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearOutputChannel
  - System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile
  - System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearRemapTable
  - System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearThreshold
  - System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.Clone
  - System.Drawing.Imaging.ImageAttributes.Dispose
  - System.Drawing.Imaging.ImageAttributes.Finalize
  - System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])
  - System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)
  - System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)
  - System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  - System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)
  - System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  - System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)
  - System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetNoOp
  - System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)
  - System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)
  - System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])
  - System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)
  - System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)
  - System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)
  - System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)
  langs:
  - csharp
  name: ImageAttributes
  nameWithType: ImageAttributes
  fullName: System.Drawing.Imaging.ImageAttributes
  type: Class
  summary: "Contém informações sobre como as cores bitmap e Metarquivo são manipuladas durante a renderização."
  remarks: "Um objeto ImageAttributes mantém várias configurações de ajuste de cor, incluindo matrizes de ajuste de cor, matrizes de ajuste de escala de cinza, valores de correção gama, tabelas de mapa de cor e valores de limite de cor. Durante o processamento, cores podem ser corrigidas, escurecidas, ficará mais clara e removidas. Para aplicar essas manipulações, inicializar um objeto ImageAttributes e passe o caminho do objeto ImageAttributes (junto com o caminho de um <xref:System.Drawing.Image>) para o <xref:System.Drawing.Graphics.DrawImage%2A>método.</xref:System.Drawing.Graphics.DrawImage%2A> </xref:System.Drawing.Image>"
  example:
  - "The following example takes an image that is all one color (0.2, 0.0, 0.4, 1.0) and doubles the red component adds 0.2 to the red, green, and blue components  \n  \n The following illustration shows the original image on the left and the transformed image on the right.  \n  \n ![Colors](~/add/media/colortrans1.png \"Colors\")  \n  \n The code in the following example uses the following steps to perform the recoloring:  \n  \n1.  Initialize a <xref:System.Drawing.Imaging.ColorMatrix> object.  \n  \n2.  Create an ImageAttributes object and pass the <xref:System.Drawing.Imaging.ColorMatrix> object to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method of the ImageAttributes object.  \n  \n3.  Pass the ImageAttributes object to the <xref:System.Drawing.Graphics.DrawImage%2A> method of a <xref:System.Drawing.Graphics> object.  \n  \n [!code-vb[System.Drawing.RecoloringImages#21](~/add/codesnippet/visualbasic/t-system.drawing.imaging_5_1.vb)]\n [!code-cs[System.Drawing.RecoloringImages#21](~/add/codesnippet/csharp/t-system.drawing.imaging_5_1.cs)]"
  syntax:
    content: 'public sealed class ImageAttributes : ICloneable, IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.#ctor
  id: '#ctor'
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ImageAttributes()
  nameWithType: ImageAttributes.ImageAttributes()
  fullName: System.Drawing.Imaging.ImageAttributes.ImageAttributes()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;> </xref> classe."
  syntax:
    content: public ImageAttributes ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable
  id: ClearBrushRemapTable
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearBrushRemapTable()
  nameWithType: ImageAttributes.ClearBrushRemapTable()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa a tabela de remapeamento de cores do pincel deste <xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;> </xref> objeto."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar uma tabela de remapeamento de cores para a categoria padrão, uma tabela de remapeamento de cores diferentes para a categoria de bitmap e ainda uma tabela de remapeamento de cores diferentes para a categoria de pincel.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de pincel, as configurações padrão se aplicam a categoria de pincel.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar uma tabela de remapeamento padrão que converte vermelho, verde, e você especificar um valor padrão gama 1.8. Se você chamar o <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A>método, a tabela de remapeamento padrão (vermelha, verde) e o valor de gama padrão (1.8) não serão aplicada aos pincéis.</xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> Se você chamar o método ClearBrushRemapTable posteriormente, a categoria de pincel não será revertido para a tabela de remapeamento de padrão. em vez disso, a categoria de pincel não terá nenhuma tabela de remapeamento. Da mesma forma, a categoria de pincel não será revertido para o valor de gama padrão; em vez disso, a categoria de pincel não terá nenhum valor gama."
  syntax:
    content: public void ClearBrushRemapTable ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey
  id: ClearColorKey
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearColorKey()
  nameWithType: ImageAttributes.ClearColorKey()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorKey()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa a chave de cor (intervalo de transparência) para a categoria padrão."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar uma chave de cor para a categoria padrão, uma chave de cor diferente para a categoria de bitmap e ainda uma chave de cor diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta."
  syntax:
    content: public void ClearColorKey ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearColorKey*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)
  id: ClearColorKey(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearColorKey(ColorAdjustType)
  nameWithType: ImageAttributes.ClearColorKey(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorKey(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa a chave de cor (intervalo de transparência) para uma categoria especificada."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar uma chave de cor para a categoria padrão, uma chave de cor diferente para a categoria de bitmap e ainda uma chave de cor diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar uma chave de cor padrão que faz com que todas as cores com um componente vermelho de 200 a 255 transparente e você especificar um valor padrão gama 1.8. Se você definir a chave de cor da categoria de caneta chamando o <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A>método, a chave de cor padrão e o valor de gama padrão não serão aplicada aos canetas.</xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> Se você desmarcar posteriormente a chave de cor da caneta chamando o <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A>método, a categoria de caneta não será revertido para a chave de cor padrão; em vez disso, a categoria de caneta não terão nenhuma chave de cor.</xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> Da mesma forma, a categoria de caneta não será revertido para o valor de gama padrão; em vez disso, a categoria de caneta não terá nenhum valor gama."
  syntax:
    content: public void ClearColorKey (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual a chave de cor está desmarcada."
  overload: System.Drawing.Imaging.ImageAttributes.ClearColorKey*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix
  id: ClearColorMatrix
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearColorMatrix()
  nameWithType: ImageAttributes.ClearColorMatrix()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa a matriz de ajuste de cor para a categoria padrão."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar uma matriz de ajuste de cor para a categoria padrão, uma matriz de ajuste de cor diferente para a categoria de bitmap e ainda uma matriz de ajuste de cor diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão aplicam a categoria de caneta."
  syntax:
    content: public void ClearColorMatrix ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)
  id: ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearColorMatrix(ColorAdjustType)
  nameWithType: ImageAttributes.ClearColorMatrix(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa a matriz de ajuste de cor para uma categoria especificada."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar uma matriz de ajuste de cor para a categoria padrão, uma matriz de ajuste de cor diferente para a categoria de bitmap e ainda uma matriz de ajuste de cor diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão aplicam a categoria de caneta.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar uma matriz de ajuste de cor e um valor de gama para a categoria padrão. Se você definir uma matriz de ajuste de cor para a categoria de caneta chamando o <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A>método, a matriz de ajuste de cor padrão não será aplicada aos canetas.</xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> Se você desmarcar uma matriz de ajuste de cor da caneta posteriormente ao chamar o <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A>método, a categoria de caneta não será revertido para a matriz de ajuste padrão; em vez disso, a categoria de caneta não terá nenhuma matriz de ajuste.</xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> Da mesma forma, a categoria de caneta não será revertido para o valor de gama padrão; em vez disso, a categoria de caneta não terá nenhum valor gama."
  syntax:
    content: public void ClearColorMatrix (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual a matriz de ajuste de cor está desmarcada."
  overload: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma
  id: ClearGamma
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearGamma()
  nameWithType: ImageAttributes.ClearGamma()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearGamma()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Desabilita a correção gama para a categoria padrão."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um valor de gama para a categoria padrão, um valor de gama diferente para a categoria de bitmap e ainda um valor de gama diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta."
  syntax:
    content: public void ClearGamma ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearGamma*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)
  id: ClearGamma(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearGamma(ColorAdjustType)
  nameWithType: ImageAttributes.ClearGamma(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearGamma(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Desabilita a correção gama para uma categoria especificada."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um valor de gama para a categoria padrão, um valor de gama diferente para a categoria de bitmap e ainda um valor de gama diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão aplicam a categoria de caneta.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar um valor de gama e uma matriz de ajuste de cor para a categoria padrão. Se você definir o valor para a categoria de caneta gama chamando o <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A>método, o valor de gama padrão não será aplicada aos canetas.</xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> Se você desmarcar posteriormente o valor de gama caneta chamando o <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A>método, a categoria de caneta não será revertido para o valor de gama padrão; em vez disso, a categoria de caneta não terá nenhum valor gama.</xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> Da mesma forma, a categoria de caneta não será revertido para a matriz de ajuste de cor padrão; em vez disso, a categoria de caneta não terá nenhuma matriz de ajuste de cor."
  syntax:
    content: public void ClearGamma (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual gama correção está desabilitada."
  overload: System.Drawing.Imaging.ImageAttributes.ClearGamma*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp
  id: ClearNoOp
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearNoOp()
  nameWithType: ImageAttributes.ClearNoOp()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearNoOp()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa o <xref uid=&quot;langword_csharp_NoOp&quot; name=&quot;NoOp&quot; href=&quot;&quot;> </xref> configuração para a categoria padrão."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um valor de gama para a categoria padrão, um valor de gama diferente para a categoria de bitmap e ainda um valor de gama diferente para a categoria de caneta.       Você pode desativar o ajuste de cor para a categoria padrão chamando o <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>método.</xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> Posteriormente, você pode restabelecer o ajuste de cor para a categoria padrão chamando o <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A>método.</xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> O ajuste de cor, em seguida, retorna às que estavam em vigor antes da chamada para <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.</xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>"
  syntax:
    content: public void ClearNoOp ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearNoOp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)
  id: ClearNoOp(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearNoOp(ColorAdjustType)
  nameWithType: ImageAttributes.ClearNoOp(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearNoOp(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa o <xref uid=&quot;langword_csharp_NoOp&quot; name=&quot;NoOp&quot; href=&quot;&quot;> </xref> configuração para uma categoria especificada."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um valor de gama para a categoria padrão, um valor de gama diferente para a categoria de bitmap e ainda um valor de gama diferente para a categoria de caneta.       Você pode desativar o ajuste de cor para uma determinada categoria chamando o <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>método.</xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> Posteriormente, você pode restabelecer o ajuste de cor para aquela categoria chamando o <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A>método.</xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> O ajuste de cor, em seguida, retorna às que estavam em vigor antes da chamada para <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.</xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>"
  syntax:
    content: public void ClearNoOp (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual o <xref uid=&quot;langword_csharp_NoOp&quot; name=&quot;NoOp&quot; href=&quot;&quot;> </xref> configuração está desmarcada."
  overload: System.Drawing.Imaging.ImageAttributes.ClearNoOp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel
  id: ClearOutputChannel
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearOutputChannel()
  nameWithType: ImageAttributes.ClearOutputChannel()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa a configuração de canal de saída (ciano-magenta-amarelo-preto) CMYK para a categoria padrão."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um canal de saída para a categoria padrão e um canal de saída diferente para a categoria de bitmap.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de bitmap, as configurações padrão se aplicam a categoria de bitmap."
  syntax:
    content: public void ClearOutputChannel ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)
  id: ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearOutputChannel(ColorAdjustType)
  nameWithType: ImageAttributes.ClearOutputChannel(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa a configuração do canal de saída (ciano-magenta-amarelo-preto) para uma categoria especificada."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um canal de saída para a categoria padrão e um canal de saída diferente para a categoria de bitmap.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de bitmap, as configurações padrão se aplicam a categoria de bitmap.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar um canal de saída e uma matriz de ajuste para a categoria padrão. Se você definir o canal de saída para a categoria de bitmap chamando o <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>método, o padrão do canal de saída não será aplicada aos bitmaps.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Se você desmarcar posteriormente o bitmap de canal de saída chamando o <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A>método, a categoria de bitmap não será revertido para o canal de saída padrão; em vez disso, a categoria de bitmap não terá nenhuma configuração de canal de saída.</xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> Da mesma forma, a categoria de bitmap não será revertido para a matriz de ajuste de cor padrão; em vez disso, a categoria de bitmap não terá nenhuma matriz de ajuste de cor."
  syntax:
    content: public void ClearOutputChannel (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual a configuração do canal de saída está desmarcada."
  overload: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile
  id: ClearOutputChannelColorProfile
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearOutputChannelColorProfile()
  nameWithType: ImageAttributes.ClearOutputChannelColorProfile()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa a configuração do perfil de cor do canal de saída para a categoria padrão."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um perfil de canal de saída para a categoria padrão e um perfil de canal de saída diferente para a categoria de bitmap.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de bitmap, as configurações padrão se aplicam a categoria de bitmap."
  syntax:
    content: public void ClearOutputChannelColorProfile ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)
  id: ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearOutputChannelColorProfile(ColorAdjustType)
  nameWithType: ImageAttributes.ClearOutputChannelColorProfile(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa a configuração do perfil de cor do canal de saída para uma categoria especificada."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um perfil de canal de saída para a categoria padrão e um perfil de canal de saída diferente para a categoria de bitmap.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de bitmap, as configurações padrão se aplicam a categoria de bitmap.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar um perfil de canal de saída e uma matriz de ajuste para a categoria padrão. Se você definir o perfil do canal de saída para a categoria de bitmap chamando o <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>método, o padrão do perfil do canal de saída não será aplicada aos bitmaps.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> Se você desmarcar posteriormente o bitmap perfil do canal de saída chamando o <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A>método, a categoria de bitmap não será revertido para o perfil do canal de saída padrão; em vez disso, a categoria de bitmap não terá nenhuma configuração de perfil do canal de saída.</xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> Da mesma forma, a categoria de bitmap não será revertido para a matriz de ajuste de cor padrão; em vez disso, a categoria de bitmap não terá nenhuma matriz de ajuste de cor."
  syntax:
    content: public void ClearOutputChannelColorProfile (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual a configuração de perfil do canal de saída está desmarcada."
  overload: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable
  id: ClearRemapTable
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearRemapTable()
  nameWithType: ImageAttributes.ClearRemapTable()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearRemapTable()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa a tabela de remapeamento de cores para a categoria padrão."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar uma tabela de remapeamento para a categoria padrão, uma tabela de remapeamento diferente para a categoria de bitmap e ainda uma tabela de remapeamento diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta."
  syntax:
    content: public void ClearRemapTable ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearRemapTable*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)
  id: ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearRemapTable(ColorAdjustType)
  nameWithType: ImageAttributes.ClearRemapTable(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearRemapTable(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa a tabela de remapeamento de cores para uma categoria especificada."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar uma tabela de remapeamento para a categoria padrão, uma tabela de remapeamento diferente para a categoria de bitmap e ainda uma tabela de remapeamento diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão aplicam a categoria de caneta.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar uma tabela de remapeamento e um valor de gama para a categoria padrão. Se você definir a tabela de remapeamento para a categoria de caneta chamando o <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A>método, a tabela de remapeamento padrão não será aplicada aos canetas.</xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> Se você desmarcar posteriormente a tabela de remapeamento de caneta chamando o <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A>método, a categoria de caneta não será revertido para a tabela de remapeamento padrão; em vez disso, a categoria de caneta não terá nenhuma tabela de remapeamento.</xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> Da mesma forma, a categoria de caneta não será revertido para o valor de gama padrão; em vez disso, a categoria de caneta não terá nenhum valor gama."
  syntax:
    content: public void ClearRemapTable (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual a tabela de remapeamento está desmarcada."
  overload: System.Drawing.Imaging.ImageAttributes.ClearRemapTable*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold
  id: ClearThreshold
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearThreshold()
  nameWithType: ImageAttributes.ClearThreshold()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearThreshold()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa o valor de limite para a categoria padrão."
  remarks: "O limite é um valor entre 0 e 1 que especifica um ponto de corte para cada componente de cor. Por exemplo, suponha que o limite é definido como 0,7 e suponha que você estiver processando uma cor cujo vermelho, verdes e azuis componentes são 230, 50 e 220, respectivamente. O componente vermelho (230) é maior que 0.7x255, para que o componente vermelho será alterado para 255 (intensidade completa). O componente verde (50) é menor que 0.7x255, para que o componente verde será alterado para 0. O componente azul (220) é maior que 0.7x255, para que o componente azul será alterado para 255.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um limite para a categoria padrão, um limite diferente para a categoria de bitmap e ainda um limite diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta."
  syntax:
    content: public void ClearThreshold ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearThreshold*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)
  id: ClearThreshold(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearThreshold(ColorAdjustType)
  nameWithType: ImageAttributes.ClearThreshold(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearThreshold(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Limpa o valor de limite para uma categoria especificada."
  remarks: "O limite é um valor entre 0 e 1 que especifica um ponto de corte para cada componente de cor. Por exemplo, suponha que o limite é definido como 0,7 e suponha que você estiver processando uma cor cujo vermelho, verdes e azuis componentes são 230, 50 e 220, respectivamente. O componente vermelho (230) é maior que 0.7x55, para que o componente vermelho será alterado para 255 (intensidade completa). O componente verde (50) é menor que 0.7x255, para que o componente verde será alterado para 0. O componente azul (220) é maior que 0.7x255, para que o componente azul será alterado para 255.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um limite para a categoria padrão, um limite diferente para a categoria de bitmap e ainda um limite diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar um limite e um valor de gama para a categoria padrão. Se você definir o limite para a categoria de caneta chamando o <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A>método, o limite padrão não será aplicada aos canetas.</xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> Se você desmarcar posteriormente o limite de caneta chamando o <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A>método, a categoria de caneta não será revertido para o limite padrão; em vez disso, a categoria de caneta não terá nenhum limite.</xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> Da mesma forma, a categoria de caneta não será revertido para o valor de gama padrão; em vez disso, a categoria de caneta não terá nenhum valor gama."
  syntax:
    content: public void ClearThreshold (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual o limite está desmarcado."
  overload: System.Drawing.Imaging.ImageAttributes.ClearThreshold*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.Clone
  id: Clone
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: Clone()
  nameWithType: ImageAttributes.Clone()
  fullName: System.Drawing.Imaging.ImageAttributes.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Cria uma cópia exata desta <xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;> </xref> objeto."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "O <xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;> </xref> converter objeto cria essa classe, como um objeto."
  overload: System.Drawing.Imaging.ImageAttributes.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.Dispose
  id: Dispose
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: Dispose()
  nameWithType: ImageAttributes.Dispose()
  fullName: System.Drawing.Imaging.ImageAttributes.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Libera todos os recursos usados por este <xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;> </xref> objeto."
  remarks: "Chamar Dispose quando terminar de usar o <xref:System.Drawing.Imaging.ImageAttributes>.</xref:System.Drawing.Imaging.ImageAttributes> O método Dispose deixa a <xref:System.Drawing.Imaging.ImageAttributes>em um estado inutilizável.</xref:System.Drawing.Imaging.ImageAttributes> Depois de chamar Dispose, você deve liberar todas as referências para o <xref:System.Drawing.Imaging.ImageAttributes>para o coletor de lixo possa recuperar a memória que o <xref:System.Drawing.Imaging.ImageAttributes>estava ocupando.</xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Imaging.ImageAttributes> Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada Dispose antes de liberar sua última referência a <xref:System.Drawing.Imaging.ImageAttributes>.</xref:System.Drawing.Imaging.ImageAttributes> Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.Drawing.Imaging.ImageAttributes>do objeto `Finalize` método.</xref:System.Drawing.Imaging.ImageAttributes>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.Finalize
  id: Finalize
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: Finalize()
  nameWithType: ImageAttributes.Finalize()
  fullName: System.Drawing.Imaging.ImageAttributes.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Permite que um objeto tente liberar recursos e executar outras operações de limpeza antes que ela é recuperada pela coleta de lixo."
  syntax:
    content: ~ImageAttributes ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)
  id: GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: GetAdjustedPalette(ColorPalette,ColorAdjustType)
  nameWithType: ImageAttributes.GetAdjustedPalette(ColorPalette,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(ColorPalette,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Ajusta as cores em uma paleta de acordo com as configurações de ajuste de uma categoria especificada."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar uma tabela de remapeamento de cores para a categoria padrão, uma tabela de remapeamento de cores diferentes para a categoria de bitmap e ainda uma tabela de remapeamento de cores diferentes para a categoria de caneta.       Quando você chama o método GetAdjustedPalette, você pode especificar a categoria de ajuste que é usada para ajustar as cores da paleta. Por exemplo, se você passar <xref:System.Drawing.Imaging.ColorAdjustType>para o método GetAdjustedPalette, as configurações de ajuste da categoria de bitmap são usadas para ajustar as cores da paleta.</xref:System.Drawing.Imaging.ColorAdjustType>"
  syntax:
    content: public void GetAdjustedPalette (System.Drawing.Imaging.ColorPalette palette, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: palette
      type: System.Drawing.Imaging.ColorPalette
      description: "Um <xref href=&quot;System.Drawing.Imaging.ColorPalette&quot;> </xref> que na entrada contém a paleta a ser ajustado e na saída contém a paleta ajustada."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria cujas configurações de ajuste serão aplicadas à paleta."
  overload: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])
  id: SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetBrushRemapTable(ColorMap[])
  nameWithType: ImageAttributes.SetBrushRemapTable(ColorMap[])
  fullName: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(ColorMap[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define a tabela de remapeamento de cores para a categoria de pincel."
  remarks: "Uma tabela de remapeamento de cores é uma matriz de <xref:System.Drawing.Imaging.ColorMap>estruturas.</xref:System.Drawing.Imaging.ColorMap> Cada <xref:System.Drawing.Imaging.ColorMap>estrutura tem duas <xref:System.Drawing.Color>objetos: um que especifica uma cor antiga e um que especifica uma nova cor correspondente.</xref:System.Drawing.Color> </xref:System.Drawing.Imaging.ColorMap> Durante o processamento, todas as cores que corresponde a uma das cores na tabela de remapeamento antigas é alterada para a nova cor correspondente.       Chamar o método SetBrushRemapTable tem o mesmo efeito que passando <xref:System.Drawing.Imaging.ColorAdjustType>para o <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A>método.</xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> </xref:System.Drawing.Imaging.ColorAdjustType> A tabela de remapeamento especificado se aplica a itens metarquivos são preenchidos com um pincel.       Este método destina-se a ser usada somente com metarquivos."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Creates a single-element <xref:System.Drawing.Imaging.ColorMap> array that holds red as the old color and green as the new color.  \n  \n2.  Passes this array to a newly created <xref:System.Drawing.Imaging.ImageAttributes> object.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#1](~/add/codesnippet/cpp/03cb420b-6413-4b57-9e9e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#1](~/add/codesnippet/csharp/03cb420b-6413-4b57-9e9e-_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#1](~/add/codesnippet/visualbasic/03cb420b-6413-4b57-9e9e-_1.vb)]"
  syntax:
    content: public void SetBrushRemapTable (System.Drawing.Imaging.ColorMap[] map);
    parameters:
    - id: map
      type: System.Drawing.Imaging.ColorMap[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Imaging.ColorMap&quot;> </xref> objetos."
  overload: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)
  id: SetColorKey(System.Drawing.Color,System.Drawing.Color)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorKey(Color,Color)
  nameWithType: ImageAttributes.SetColorKey(Color,Color)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorKey(Color,Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define a chave de cor para a categoria padrão."
  remarks: "Esse método define os valores mínimo e máximo da chave de cor para que um intervalo de cores pode ser transparentes. Todas as cores com cada um dos seus três componentes (vermelho, verde, azul) entre os componentes correspondentes das chaves de alta e baixa a cor é transparentes.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar uma chave de cor para a categoria padrão, uma chave de cor diferente para a categoria de bitmap e ainda uma chave de cor diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta."
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%28System.Drawing.Color%2CSystem.Drawing.Color%2CSystem.Drawing.Imaging.ColorAdjustType%29> method.
  syntax:
    content: public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh);
    parameters:
    - id: colorLow
      type: System.Drawing.Color
      description: "O valor baixo da chave de cor."
    - id: colorHigh
      type: System.Drawing.Color
      description: "O valor alto da chave de cor."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorKey*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)
  id: SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorKey(Color,Color,ColorAdjustType)
  nameWithType: ImageAttributes.SetColorKey(Color,Color,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorKey(Color,Color,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define a chave de cor (intervalo de transparência) para uma categoria especificada."
  remarks: "Esse método define os valores mínimo e máximo da chave de cor para que um intervalo de cores pode ser transparentes. Todas as cores com cada um dos seus três componentes (vermelho, verde, azul) entre os componentes correspondentes das chaves de alta e baixa a cor é transparentes.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar uma chave de cor para a categoria padrão, uma chave de cor diferente para a categoria de bitmap e ainda uma chave de cor diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar um conjunto de configurações de ajuste para a categoria padrão. Se você definir a chave de cor para a categoria de caneta passando <xref:System.Drawing.Imaging.ColorAdjustType>para o <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A>método, nenhuma das configurações de ajuste padrão serão aplicadas a canetas.</xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> </xref:System.Drawing.Imaging.ColorAdjustType>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Opens an <xref:System.Drawing.Image> that uses the file Circle.bmp and draws it to the screen.  \n  \n2.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and sets its color key by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> method.  \n  \n3.  Draws the image to the screen using the color key of the <xref:System.Drawing.Imaging.ImageAttributes> object.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#2](~/add/codesnippet/cpp/71066d96-794d-4f7b-950a-_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#2](~/add/codesnippet/csharp/71066d96-794d-4f7b-950a-_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#2](~/add/codesnippet/visualbasic/71066d96-794d-4f7b-950a-_1.vb)]"
  syntax:
    content: public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: colorLow
      type: System.Drawing.Color
      description: "O valor baixo da chave de cor."
    - id: colorHigh
      type: System.Drawing.Color
      description: "O valor alto da chave de cor."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual a chave de cor é definida."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorKey*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)
  id: SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorMatrices(ColorMatrix,ColorMatrix)
  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define a matriz de ajuste de cor e a matriz de ajuste de escala de cinza para a categoria padrão."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar as matrizes de ajuste para a categoria padrão, as matrizes de ajuste diferente para a categoria de bitmap e matrizes de ajuste ainda diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta.       Chamar o método SetColorMatrices é equivalente a chamar o <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName>método e passando <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName>para o `flags` parâmetro.</xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> </xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName> <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName>Especifica que todas as cores (inclusive cinza) são ajustadas para a matriz de ajuste de cor, não a matriz de ajuste de escala de cinza.</xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> Portanto, a matriz de ajuste de escala de cinza passada para este método não tem efeito."
  syntax:
    content: public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix);
    parameters:
    - id: newColorMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "A matriz de ajuste de cor."
    - id: grayMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "A matriz de ajuste de escala de cinza."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrices*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  id: SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)
  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define a matriz de ajuste de cor e a matriz de ajuste de escala de cinza para a categoria padrão."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar as matrizes de ajuste para a categoria padrão, as matrizes de ajuste diferente para a categoria de bitmap e matrizes de ajuste ainda diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta."
  syntax:
    content: public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);
    parameters:
    - id: newColorMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "A matriz de ajuste de cor."
    - id: grayMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "A matriz de ajuste de escala de cinza."
    - id: flags
      type: System.Drawing.Imaging.ColorMatrixFlag
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorMatrixFlag&quot;> </xref> que especifica o tipo de imagem e cores que serão afetados pelas matrizes de ajuste de cor e o ajuste de escala de cinza."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrices*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  id: SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define a matriz de ajuste de cor e a matriz de ajuste de escala de cinza para uma categoria especificada."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar as matrizes de ajuste para a categoria padrão, as matrizes de ajuste diferente para a categoria de bitmap e matrizes de ajuste ainda diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar um conjunto de configurações de ajuste para a categoria padrão. Se você definir as matrizes de ajuste de cor e o ajuste de escala de cinza para a categoria de caneta passando <xref:System.Drawing.Imaging.ColorAdjustType>para o <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A>método, nenhuma das configurações de ajuste padrão serão aplicadas a canetas.</xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> </xref:System.Drawing.Imaging.ColorAdjustType>"
  syntax:
    content: public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: newColorMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "A matriz de ajuste de cor."
    - id: grayMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "A matriz de ajuste de escala de cinza."
    - id: mode
      type: System.Drawing.Imaging.ColorMatrixFlag
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorMatrixFlag&quot;> </xref> que especifica o tipo de imagem e cores que serão afetados pelas matrizes de ajuste de cor e o ajuste de escala de cinza."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual as matrizes de ajuste de cor e o ajuste de escala de cinza são definidas."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrices*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)
  id: SetColorMatrix(System.Drawing.Imaging.ColorMatrix)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorMatrix(ColorMatrix)
  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define a matriz de ajuste de cor para a categoria padrão."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar uma matriz de ajuste de cor para a categoria padrão, uma matriz de ajuste de cor diferente para a categoria de bitmap e ainda uma matriz de ajuste de cor diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta.       Chamar o método SetColorMatrix é equivalente a chamar o <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName>método e passando <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName>para o `flags` parâmetro.</xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> </xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName> <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName>Especifica que todas as cores (inclusive cinza) são ajustadas para a matriz de ajuste de cor</xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Creates a rectangle image that has all the color values set to 128, producing a rectangle that is filled with a solid medium-gray color. The code then draws this rectangle image to the screen.  \n  \n2.  Creates a <xref:System.Drawing.Imaging.ColorMatrix> and sets its <xref:System.Drawing.Drawing2D.Matrix> location to 1.75, which emphasizes the red component of the image.  \n  \n3.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and calls the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method.  \n  \n4.  Draws the image (a second rectangle) to the screen using the <xref:System.Drawing.Imaging.ColorMatrix> just set in the <xref:System.Drawing.Imaging.ImageAttributes> object.  \n  \n Note that the second rectangle has the color red emphasized.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#3](~/add/codesnippet/cpp/177ae5c1-d9d6-4cf6-ac7b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#3](~/add/codesnippet/csharp/177ae5c1-d9d6-4cf6-ac7b-_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#3](~/add/codesnippet/visualbasic/177ae5c1-d9d6-4cf6-ac7b-_1.vb)]"
  syntax:
    content: public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix);
    parameters:
    - id: newColorMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "A matriz de ajuste de cor."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrix*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  id: SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorMatrix(ColorMatrix,ColorMatrixFlag)
  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define a matriz de ajuste de cor para a categoria padrão."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar uma matriz de ajuste de cor para a categoria padrão, uma matriz de ajuste de cor diferente para a categoria de bitmap e ainda uma matriz de ajuste de cor diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta."
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29> method.
  syntax:
    content: public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);
    parameters:
    - id: newColorMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "A matriz de ajuste de cor."
    - id: flags
      type: System.Drawing.Imaging.ColorMatrixFlag
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorMatrixFlag&quot;> </xref> que especifica o tipo de imagem e cores que serão afetados pela matriz de ajuste de cor."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrix*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  id: SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define a matriz de ajuste de cor para uma categoria especificada."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar uma matriz de ajuste de cor para a categoria padrão, uma matriz de ajuste de cor diferente para a categoria de bitmap e ainda uma matriz de ajuste de cor diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar um conjunto de configurações de ajuste para a categoria padrão. Se você definir a matriz de ajuste de cor para a categoria de caneta passando <xref:System.Drawing.Imaging.ColorAdjustType>para o <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A>método, nenhuma das configurações de ajuste padrão serão aplicadas a canetas.</xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> </xref:System.Drawing.Imaging.ColorAdjustType>"
  example:
  - "The following code example demonstrates how to use the SetColorMatrix method. To run this example, paste the code into a Windows Form and call `RotateColors` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.RotateColors#1](~/add/codesnippet/visualbasic/90629bc4-1375-4e58-926d-_1.vb)]\n [!code-cs[System.Drawing.RotateColors#1](~/add/codesnippet/csharp/90629bc4-1375-4e58-926d-_1.cs)]"
  syntax:
    content: public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: newColorMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "A matriz de ajuste de cor."
    - id: mode
      type: System.Drawing.Imaging.ColorMatrixFlag
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorMatrixFlag&quot;> </xref> que especifica o tipo de imagem e cores que serão afetados pela matriz de ajuste de cor."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual a matriz de ajuste de cor é definida."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrix*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)
  id: SetGamma(System.Single)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetGamma(Single)
  nameWithType: ImageAttributes.SetGamma(Single)
  fullName: System.Drawing.Imaging.ImageAttributes.SetGamma(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define o valor de gama para a categoria padrão."
  remarks: "Os valores típicos para o `gamma` parâmetro são de 1.0 para 2.2; no entanto, os valores de 0,1 5.0 poderá ser útil em algumas circunstâncias.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um valor de gama para a categoria padrão, um valor de gama diferente para a categoria de bitmap e ainda um valor de gama diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta.       Valores de gama fora do intervalo normal podem ser útil para os monitores CRT antigos ou monitores que estiverem em condições de iluminação incomuns, como ambientes industriais ou janela exibe."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. In addition, you need to change the image file path to a path and image name valid on your system. The code performs the following actions:  \n  \n1.  Opens an <xref:System.Drawing.Image> that uses the file Camera.jpg and draws it to the screen using the default value for gamma.  \n  \n2.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and sets its gamma to 2.2 by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> method.  \n  \n3.  Draws the image (a second camera) to the screen using the gamma value just set in the <xref:System.Drawing.Imaging.ImageAttributes> object.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#4](~/add/codesnippet/cpp/m-system.drawing.imaging_4_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#4](~/add/codesnippet/csharp/m-system.drawing.imaging_4_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#4](~/add/codesnippet/visualbasic/m-system.drawing.imaging_4_1.vb)]"
  syntax:
    content: public void SetGamma (float gamma);
    parameters:
    - id: gamma
      type: System.Single
      description: "O valor de correção gama."
  overload: System.Drawing.Imaging.ImageAttributes.SetGamma*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)
  id: SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetGamma(Single,ColorAdjustType)
  nameWithType: ImageAttributes.SetGamma(Single,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetGamma(Single,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define o valor de gama para uma categoria especificada."
  remarks: "Os valores típicos para o `gamma` parâmetro são de 1.0 para 2.2; no entanto, os valores de 0,1 5.0 poderá ser útil em algumas circunstâncias.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um valor de gama para a categoria padrão, um valor de gama diferente para a categoria de bitmap e ainda um valor de gama diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar um conjunto de configurações de ajuste para a categoria padrão. Se você definir o valor para a categoria de caneta gama passando <xref:System.Drawing.Imaging.ColorAdjustType>para o <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A>método, nenhuma das configurações de ajuste padrão serão aplicadas a canetas.</xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> </xref:System.Drawing.Imaging.ColorAdjustType>       Valores de gama fora do intervalo normal podem ser útil para os monitores CRT antigos ou monitores que estiverem em condições de iluminação incomuns, como ambientes industriais ou janela exibe."
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%28System.Single%29> method.
  syntax:
    content: public void SetGamma (float gamma, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: gamma
      type: System.Single
      description: "O valor de correção gama."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> enumeração que especifica a categoria para a qual o valor de gama é definido."
  overload: System.Drawing.Imaging.ImageAttributes.SetGamma*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp
  id: SetNoOp
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetNoOp()
  nameWithType: ImageAttributes.SetNoOp()
  fullName: System.Drawing.Imaging.ImageAttributes.SetNoOp()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Desativa o ajuste de cor para a categoria padrão. Você pode chamar o <> </> *> método para reaplicar as configurações de ajuste de cor que estavam em vigor antes da chamada para o <> </> *> método."
  remarks: "Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um valor de gama para a categoria padrão, um valor de gama diferente para a categoria de bitmap e ainda um valor de gama diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Opens an <xref:System.Drawing.Image> that uses the file Camera.jpg.  \n  \n2.  Sets the gamma value of the <xref:System.Drawing.Imaging.ImageAttributes> object to 0.25.  \n  \n3.  Draws the image to the screen.  \n  \n4.  Calls the SetNoOp method.  \n  \n5.  Draws the image (a second camera) to the screen; however, because the SetNoOp method was called, the gamma setting defaults to a value of 1.0 and the image is drawn to the screen with the default gamma setting.  \n  \n Note that the image on the left is very washed out (gamma of 0.25) and the image on the right has more contrast (gamma of 1.0).  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#5](~/add/codesnippet/cpp/m-system.drawing.imaging_0_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#5](~/add/codesnippet/csharp/m-system.drawing.imaging_0_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#5](~/add/codesnippet/visualbasic/m-system.drawing.imaging_0_1.vb)]"
  syntax:
    content: public void SetNoOp ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.SetNoOp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)
  id: SetNoOp(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetNoOp(ColorAdjustType)
  nameWithType: ImageAttributes.SetNoOp(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetNoOp(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Desativa o ajuste de cor para uma categoria especificada. Você pode chamar o <> </> *> método para reaplicar as configurações de ajuste de cor que estavam em vigor antes da chamada para o <> </> *> método."
  remarks: 'Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um valor de gama para a categoria padrão, um valor de gama diferente para a categoria de bitmap e ainda um valor de gama diferente para a categoria de caneta.'
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp> method.
  syntax:
    content: public void SetNoOp (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual cor correção está desativada."
  overload: System.Drawing.Imaging.ImageAttributes.SetNoOp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)
  id: SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetOutputChannel(ColorChannelFlag)
  nameWithType: ImageAttributes.SetOutputChannel(ColorChannelFlag)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(ColorChannelFlag)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define o canal de saída CMYK (ciano-magenta-amarelo-preto) para a categoria padrão."
  remarks: "Você pode usar o <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>método para converter uma imagem em um espaço de cor CMYK e examinar as quantidades de um dos canais de cor CMYK.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Por exemplo, suponha que você criar um <xref:System.Drawing.Imaging.ImageAttributes>objeto e defina seu canal de saída de bitmap para <xref:System.Drawing.Imaging.ColorChannelFlag>.</xref:System.Drawing.Imaging.ColorChannelFlag> </xref:System.Drawing.Imaging.ImageAttributes> Se você passar o caminho do que <xref:System.Drawing.Imaging.ImageAttributes>do objeto para o <xref:System.Drawing.Graphics.DrawImage%2A>método, o componente ciano de cada pixel é calculado, e cada pixel da imagem renderizada é um tom de cinza que indica a intensidade de seu canal ciano.</xref:System.Drawing.Graphics.DrawImage%2A> </xref:System.Drawing.Imaging.ImageAttributes> Da mesma forma, você pode renderizar imagens que indicam as intensidades canais magenta, amarelo e preto.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um canal de saída para a categoria padrão e um canal de saída diferente para a categoria de bitmap.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de bitmap, as configurações padrão se aplicam a categoria de bitmap."
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method. To run this example, paste the following code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `ShowOutputChannels`, passing `e` as<xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#4](~/add/codesnippet/visualbasic/9ad3adf3-ee86-4369-8698-_1.vb)]\n [!code-cs[System.Drawing.Misc3#4](~/add/codesnippet/csharp/9ad3adf3-ee86-4369-8698-_1.cs)]"
  syntax:
    content: public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags);
    parameters:
    - id: flags
      type: System.Drawing.Imaging.ColorChannelFlag
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorChannelFlag&quot;> </xref> que especifica o canal de saída."
  overload: System.Drawing.Imaging.ImageAttributes.SetOutputChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)
  id: SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetOutputChannel(ColorChannelFlag,ColorAdjustType)
  nameWithType: ImageAttributes.SetOutputChannel(ColorChannelFlag,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(ColorChannelFlag,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define o canal de saída CMYK (ciano-magenta-amarelo-preto) para uma categoria especificada."
  remarks: "Você pode usar o <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>método para converter uma imagem em um espaço de cor CMYK e examinar as quantidades de um dos canais de cor CMYK.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Por exemplo, suponha que você criar um <xref:System.Drawing.Imaging.ImageAttributes>objeto e defina seu canal de saída de bitmap para <xref:System.Drawing.Imaging.ColorChannelFlag>.</xref:System.Drawing.Imaging.ColorChannelFlag> </xref:System.Drawing.Imaging.ImageAttributes> Se você passar o caminho do que <xref:System.Drawing.Imaging.ImageAttributes>do objeto para o <xref:System.Drawing.Graphics.DrawImage%2A>método, o componente ciano de cada pixel é calculado, e cada pixel da imagem renderizada é um tom de cinza que indica a intensidade de seu canal ciano.</xref:System.Drawing.Graphics.DrawImage%2A> </xref:System.Drawing.Imaging.ImageAttributes> Da mesma forma, você pode renderizar imagens que indicam as intensidades canais magenta, amarelo e preto.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um canal de saída para a categoria padrão e um canal de saída diferente para a categoria de bitmap.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de bitmap, as configurações padrão se aplicam a categoria de bitmap.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar um conjunto de configurações de ajuste para a categoria padrão. Se você definir o canal de saída para a categoria de bitmap, passando <xref:System.Drawing.Imaging.ColorAdjustType>para o método SetOutputChannel, nenhuma das configurações de ajuste padrão será aplicada a bitmaps.</xref:System.Drawing.Imaging.ColorAdjustType>"
  example:
  - "The following code example demonstrates how to use the SetOutputChannel method. To run this example, paste the following code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `ShowOutputChannels`, passing `e` as<xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#4](~/add/codesnippet/visualbasic/980f8f9a-f561-44e4-94f4-_1.vb)]\n [!code-cs[System.Drawing.Misc3#4](~/add/codesnippet/csharp/980f8f9a-f561-44e4-94f4-_1.cs)]"
  syntax:
    content: public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: flags
      type: System.Drawing.Imaging.ColorChannelFlag
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorChannelFlag&quot;> </xref> que especifica o canal de saída."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual o canal de saída é definido."
  overload: System.Drawing.Imaging.ImageAttributes.SetOutputChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)
  id: SetOutputChannelColorProfile(System.String)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetOutputChannelColorProfile(String)
  nameWithType: ImageAttributes.SetOutputChannelColorProfile(String)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define o arquivo de perfil de cor do canal de saída para a categoria padrão."
  remarks: "Você pode usar o <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>e <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>canais de cor do métodos para converter uma imagem em um espaço de cor CMYK (ciano-magenta-amarelo-preto) e examinar as quantidades de um o CMYK.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> </xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Por exemplo, suponha que você escrever código que executa as seguintes etapas: 1.  Criar um <xref:System.Drawing.Image>.</xref:System.Drawing.Image>      2.  Criar um <xref:System.Drawing.Imaging.ImageAttributes>objeto.</xref:System.Drawing.Imaging.ImageAttributes>      3.  Passar <xref:System.Drawing.Imaging.ColorChannelFlag>para o <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>método de <xref:System.Drawing.Imaging.ImageAttributes>objeto.</xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> </xref:System.Drawing.Imaging.ColorChannelFlag>      4.  Passe o nome do caminho de um arquivo de perfil de cor para o <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>método o <xref:System.Drawing.Imaging.ImageAttributes>objeto.</xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>      5.  Passe os caminhos da <xref:System.Drawing.Image>e <xref:System.Drawing.Imaging.ImageAttributes>objetos para o <xref:System.Drawing.Graphics.DrawImage%2A>método.</xref:System.Drawing.Graphics.DrawImage%2A> </xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Image>       [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]usará o arquivo de perfil de cor para calcular o componente ciano de cada pixel da imagem, e cada pixel da imagem renderizada será uma sombra de cinza que indica a intensidade de seu canal ciano.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um arquivo de perfil de cor do canal de saída para a categoria padrão e um arquivo de perfil de cor do canal de saída diferente para a categoria de bitmap.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de bitmap, as configurações padrão se aplicam a categoria de bitmap."
  syntax:
    content: public void SetOutputChannelColorProfile (string colorProfileFilename);
    parameters:
    - id: colorProfileFilename
      type: System.String
      description: "O nome do caminho de um arquivo de perfil de cor. Se o arquivo de perfil de cor está no diretório %SystemRoot%\\System32\\Spool\\Drivers\\Color, esse parâmetro pode ser o nome do arquivo. Caso contrário, esse parâmetro deve ser o nome de caminho totalmente qualificado."
  overload: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)
  id: SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetOutputChannelColorProfile(String,ColorAdjustType)
  nameWithType: ImageAttributes.SetOutputChannelColorProfile(String,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(String,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define o arquivo de perfil de cor do canal de saída para uma categoria especificada."
  remarks: "Você pode usar o <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>e <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>canais de cor do métodos para converter uma imagem em um espaço de cor CMYK (ciano-magenta-amarelo-preto) e examinar as quantidades de um o CMYK.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> </xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Por exemplo, suponha que você escrever código que executa as seguintes etapas: 1.  Criar um <xref:System.Drawing.Image>.</xref:System.Drawing.Image>      2.  Criar um <xref:System.Drawing.Imaging.ImageAttributes>objeto.</xref:System.Drawing.Imaging.ImageAttributes>      3.  Passar <xref:System.Drawing.Imaging.ColorChannelFlag>para o <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>método de <xref:System.Drawing.Imaging.ImageAttributes>objeto.</xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> </xref:System.Drawing.Imaging.ColorChannelFlag>      4.  Passe o nome do caminho de um arquivo de perfil de cor para o <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>método o <xref:System.Drawing.Imaging.ImageAttributes>objeto.</xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>      5.  Passe os caminhos da <xref:System.Drawing.Image>e <xref:System.Drawing.Imaging.ImageAttributes>objetos para o <xref:System.Drawing.Graphics.DrawImage%2A>método.</xref:System.Drawing.Graphics.DrawImage%2A> </xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Image>       [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]usará o arquivo de perfil de cor para calcular o componente ciano de cada pixel da imagem, e cada pixel da imagem renderizada será uma sombra de cinza que indica a intensidade de seu canal ciano.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um arquivo de perfil de cor do canal de saída para a categoria padrão e um arquivo de perfil de cor do canal de saída diferente para a categoria de bitmap.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de bitmap, as configurações padrão se aplicam a categoria de bitmap.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar um conjunto de configurações de ajuste para a categoria padrão. Se você definir o arquivo de perfil de cor do canal de saída para a categoria de bitmap, passando <xref:System.Drawing.Imaging.ColorAdjustType>para o <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>método, nenhuma das configurações de ajuste padrão serão aplicadas a bitmaps.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> </xref:System.Drawing.Imaging.ColorAdjustType>"
  syntax:
    content: public void SetOutputChannelColorProfile (string colorProfileFilename, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: colorProfileFilename
      type: System.String
      description: "O nome do caminho de um arquivo de perfil de cor. Se o arquivo de perfil de cor está no diretório %SystemRoot%\\System32\\Spool\\Drivers\\Color, esse parâmetro pode ser o nome do arquivo. Caso contrário, esse parâmetro deve ser o nome de caminho totalmente qualificado."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual o arquivo de perfil de cor de canal de saída é definido."
  overload: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])
  id: SetRemapTable(System.Drawing.Imaging.ColorMap[])
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetRemapTable(ColorMap[])
  nameWithType: ImageAttributes.SetRemapTable(ColorMap[])
  fullName: System.Drawing.Imaging.ImageAttributes.SetRemapTable(ColorMap[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define a tabela de remapeamento de cores para a categoria padrão."
  remarks: "Uma tabela de remapeamento de cores é uma matriz de <xref:System.Drawing.Imaging.ColorMap>estruturas.</xref:System.Drawing.Imaging.ColorMap> Cada <xref:System.Drawing.Imaging.ColorMap>estrutura tem duas <xref:System.Drawing.Color>objetos: um que especifica uma cor antiga e um que especifica uma nova cor correspondente.</xref:System.Drawing.Color> </xref:System.Drawing.Imaging.ColorMap> Durante o processamento, todas as cores que corresponde a uma das cores na tabela de remapeamento antigas é alterada para a nova cor correspondente.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um remapeamento de cores para a categoria padrão, uma tabela de remapeamento de cores para a categoria de bitmap e ainda uma tabela de remapeamento de cores diferentes para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Creates an image (a red circle), saves it as Circle2.jpg, opens that image, and draws it to the screen.  \n  \n2.  Creates a color map that maps the color red to the color green.  \n  \n3.  Draws the image created earlier to the screen again, but this time using the color map.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#6](~/add/codesnippet/cpp/de604fe6-6d67-4cfb-bb54-_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#6](~/add/codesnippet/csharp/de604fe6-6d67-4cfb-bb54-_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#6](~/add/codesnippet/visualbasic/de604fe6-6d67-4cfb-bb54-_1.vb)]"
  syntax:
    content: public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map);
    parameters:
    - id: map
      type: System.Drawing.Imaging.ColorMap[]
      description: "Uma matriz de pares de cor do tipo <xref href=&quot;System.Drawing.Imaging.ColorMap&quot;> </xref>. Cada par de cor contém uma cor existente (o primeiro valor) e a cor que será mapeado para (o valor de segundo)."
  overload: System.Drawing.Imaging.ImageAttributes.SetRemapTable*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)
  id: SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetRemapTable(ColorMap[],ColorAdjustType)
  nameWithType: ImageAttributes.SetRemapTable(ColorMap[],ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetRemapTable(ColorMap[],ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define a tabela de remapeamento de cores para uma categoria especificada."
  remarks: "Uma tabela de remapeamento de cores é uma matriz de <xref:System.Drawing.Imaging.ColorMap>estruturas.</xref:System.Drawing.Imaging.ColorMap> Cada <xref:System.Drawing.Imaging.ColorMap>estrutura tem duas <xref:System.Drawing.Color>objetos: um que especifica uma cor antiga e um que especifica uma nova cor correspondente.</xref:System.Drawing.Color> </xref:System.Drawing.Imaging.ColorMap> Durante o processamento, todas as cores que corresponde a uma das cores na tabela de remapeamento antigas é alterada para a nova cor correspondente.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um remapeamento de cores para a categoria padrão, uma tabela de remapeamento de cores para a categoria de bitmap e ainda uma tabela de remapeamento de cores diferentes para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar um conjunto de configurações de ajuste para a categoria padrão. Se você definir a tabela de remapeamento de cores para a categoria de caneta passando <xref:System.Drawing.Imaging.ColorAdjustType>para o método SetRemapTable, nenhuma das configurações de ajuste padrão será aplicada para canetas.</xref:System.Drawing.Imaging.ColorAdjustType>"
  example:
  - For a code example, see the [SetRemapTable(ColorMap\[\])](assetId:///M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])?qualifyHint=False&autoUpgrade=False) method.
  syntax:
    content: public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: map
      type: System.Drawing.Imaging.ColorMap[]
      description: "Uma matriz de pares de cor do tipo <xref href=&quot;System.Drawing.Imaging.ColorMap&quot;> </xref>. Cada par de cor contém uma cor existente (o primeiro valor) e a cor que será mapeado para (o valor de segundo)."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual a tabela de remapeamento de cores é definida."
  overload: System.Drawing.Imaging.ImageAttributes.SetRemapTable*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)
  id: SetThreshold(System.Single)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetThreshold(Single)
  nameWithType: ImageAttributes.SetThreshold(Single)
  fullName: System.Drawing.Imaging.ImageAttributes.SetThreshold(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define o limite (intervalo de transparência) para a categoria padrão."
  remarks: "O limite é um valor entre 0 e 1 que especifica um ponto de corte para cada componente de cor. Por exemplo, suponha que o limite é definido como 0,7 e suponha que você estiver processando uma cor cujo vermelho, verdes e azuis componentes são 230, 50 e 220, respectivamente. O componente vermelho (230) é maior que 0.7x255, para que o componente vermelho será alterado para 255 (intensidade completa). O componente verde (50) é menor que 0.7x255, para que o componente verde será alterado para 0. O componente azul (220) é maior que 0.7x255, para que o componente azul será alterado para 255.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um limite para a categoria padrão, um limite para a categoria de bitmap e ainda um limite diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Opens an <xref:System.Drawing.Image> and draws it to the screen.  \n  \n2.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and sets its threshold by using the <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> method.  \n  \n3.  Draws the image to the screen by using the threshold of the <xref:System.Drawing.Imaging.ImageAttributes> object.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#7](~/add/codesnippet/cpp/m-system.drawing.imaging_1_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#7](~/add/codesnippet/csharp/m-system.drawing.imaging_1_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#7](~/add/codesnippet/visualbasic/m-system.drawing.imaging_1_1.vb)]"
  syntax:
    content: public void SetThreshold (float threshold);
    parameters:
    - id: threshold
      type: System.Single
      description: "Um número real que especifica o valor de limite."
  overload: System.Drawing.Imaging.ImageAttributes.SetThreshold*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)
  id: SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetThreshold(Single,ColorAdjustType)
  nameWithType: ImageAttributes.SetThreshold(Single,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetThreshold(Single,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define o limite (intervalo de transparência) para uma categoria especificada."
  remarks: "O limite é um valor entre 0 e 1 que especifica um ponto de corte para cada componente de cor. Por exemplo, suponha que o limite é definido como 0,7 e suponha que você estiver processando uma cor cujo vermelho, verdes e azuis componentes são 230, 50 e 220, respectivamente. O componente vermelho (230) é maior que 0.7x255, para que o componente vermelho será alterado para 255 (intensidade completa). O componente verde (50) é menor que 0.7x255, para que o componente verde será alterado para 0. O componente azul (220) é maior que 0.7x255, para que o componente azul será alterado para 255.       Um <xref:System.Drawing.Imaging.ImageAttributes>objeto mantém as configurações de cor e escala de cinza para cinco categorias de ajuste: padrão, bitmap, pincel, caneta e texto.</xref:System.Drawing.Imaging.ImageAttributes> Por exemplo, você pode especificar um limite para a categoria padrão, um limite para a categoria de bitmap e ainda um limite diferente para a categoria de caneta.       As configurações padrão de ajuste de cor e o ajuste de escala de cinza se aplicam a todas as categorias que não têm configurações de ajuste de seus próprios. Por exemplo, se você nunca Especifica as configurações de ajuste para a categoria de caneta, as configurações padrão se aplicam a categoria de caneta.       Assim que você especificar um ajuste de cor ou configuração de ajuste de escala de cinza para uma determinada categoria, as configurações de ajuste padrão não se aplicam a essa categoria. Por exemplo, suponha que você especificar um conjunto de configurações de ajuste para a categoria padrão. Se você definir o limite para a categoria de caneta passando <xref:System.Drawing.Imaging.ColorAdjustType>para o método SetThreshold, nenhuma das configurações de ajuste padrão será aplicada para canetas.</xref:System.Drawing.Imaging.ColorAdjustType>"
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%28System.Single%29> method.
  syntax:
    content: public void SetThreshold (float threshold, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: threshold
      type: System.Single
      description: "Um valor de limite de 0.0 a 1.0 que é usado como um ponto de interrupção para cores de classificação que será mapeado para um valor mínimo ou máximo."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Um elemento de <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> que especifica a categoria para a qual o limite de cor é definido."
  overload: System.Drawing.Imaging.ImageAttributes.SetThreshold*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)
  id: SetWrapMode(System.Drawing.Drawing2D.WrapMode)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetWrapMode(WrapMode)
  nameWithType: ImageAttributes.SetWrapMode(WrapMode)
  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define o modo de ajuste que é usado para decidir como bloco de uma textura em uma forma ou em limites de forma. Uma textura lado a lado em uma forma para preenchê-la quando a textura é menor que a forma é preenchimento."
  remarks: "Chamar o método SetWrapMode é equivalente a chamar <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29>e passando <xref:System.Drawing.Color.Black%2A?displayProperty=fullName>para o `color` parâmetro.</xref:System.Drawing.Color.Black%2A?displayProperty=fullName> </xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> <xref:System.Drawing.Color.Black%2A?displayProperty=fullName>Especifica a cor de pixels fora de uma imagem renderizada.</xref:System.Drawing.Color.Black%2A?displayProperty=fullName> Essa cor é visível se o parâmetro modo é definido como <xref:System.Drawing.Drawing2D.WrapMode>e o retângulo de origem passado para o <xref:System.Drawing.Graphics.DrawImage%2A>método é maior do que a própria imagem.</xref:System.Drawing.Graphics.DrawImage%2A> </xref:System.Drawing.Drawing2D.WrapMode>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Opens an <xref:System.Drawing.Image> from the Circle3.jpg file (a small, red-filled circle) and draws it to the screen.  \n  \n2.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and sets the <xref:System.Drawing.Drawing2D.WrapMode> enumeration to <xref:System.Drawing.Drawing2D.WrapMode>.  \n  \n3.  Creates a <xref:System.Drawing.TextureBrush> using the image from the Circle3.jpg file.  \n  \n4.  Draws a rectangle to the screen that is filled with the small, red-filled circles.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#8](~/add/codesnippet/cpp/1dc37210-933f-4e57-8209-_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#8](~/add/codesnippet/csharp/1dc37210-933f-4e57-8209-_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#8](~/add/codesnippet/visualbasic/1dc37210-933f-4e57-8209-_1.vb)]"
  syntax:
    content: public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode);
    parameters:
    - id: mode
      type: System.Drawing.Drawing2D.WrapMode
      description: "Um elemento de <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> que especifica como várias cópias de uma imagem são usados para organizar uma área."
  overload: System.Drawing.Imaging.ImageAttributes.SetWrapMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)
  id: SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetWrapMode(WrapMode,Color)
  nameWithType: ImageAttributes.SetWrapMode(WrapMode,Color)
  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode,Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define o modo de quebra automática e a cor usada para decidir como bloco de uma textura em uma forma ou em limites de forma. Uma textura lado a lado em uma forma para preenchê-la quando a textura é menor que a forma é preenchimento."
  remarks: ''
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> method.
  syntax:
    content: public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color);
    parameters:
    - id: mode
      type: System.Drawing.Drawing2D.WrapMode
      description: "Um elemento de <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> que especifica como várias cópias de uma imagem são usados para organizar uma área."
    - id: color
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;> </xref> objeto que especifica a cor de pixels fora de uma imagem renderizada. Essa cor é visível se o parâmetro modo é definido como <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> e o retângulo de origem passado para <xref:System.Drawing.Graphics.DrawImage*>é maior do que a própria imagem.</xref:System.Drawing.Graphics.DrawImage*>"
  overload: System.Drawing.Imaging.ImageAttributes.SetWrapMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)
  id: SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetWrapMode(WrapMode,Color,Boolean)
  nameWithType: ImageAttributes.SetWrapMode(WrapMode,Color,Boolean)
  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode,Color,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Define o modo de quebra automática e a cor usada para decidir como bloco de uma textura em uma forma ou em limites de forma. Uma textura lado a lado em uma forma para preenchê-la quando a textura é menor que a forma é preenchimento."
  remarks: ''
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> method.
  syntax:
    content: public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color, bool clamp);
    parameters:
    - id: mode
      type: System.Drawing.Drawing2D.WrapMode
      description: "Um elemento de <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> que especifica como várias cópias de uma imagem são usados para organizar uma área."
    - id: color
      type: System.Drawing.Color
      description: "Um objeto de cor que especifica a cor de pixels fora de uma imagem renderizada. Essa cor é visível se o parâmetro modo é definido como <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> e o retângulo de origem passado para <xref:System.Drawing.Graphics.DrawImage*>é maior do que a própria imagem.</xref:System.Drawing.Graphics.DrawImage*>"
    - id: clamp
      type: System.Boolean
      description: "Esse parâmetro não tem nenhum efeito. Set it to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Imaging.ImageAttributes.SetWrapMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Drawing.Imaging.ImageAttributes.#ctor
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ImageAttributes()
  nameWithType: ImageAttributes.ImageAttributes()
  fullName: System.Drawing.Imaging.ImageAttributes.ImageAttributes()
- uid: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearBrushRemapTable()
  nameWithType: ImageAttributes.ClearBrushRemapTable()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable()
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearColorKey()
  nameWithType: ImageAttributes.ClearColorKey()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorKey()
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearColorKey(ColorAdjustType)
  nameWithType: ImageAttributes.ClearColorKey(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorKey(ColorAdjustType)
- uid: System.Drawing.Imaging.ColorAdjustType
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorAdjustType
  nameWithType: ColorAdjustType
  fullName: System.Drawing.Imaging.ColorAdjustType
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearColorMatrix()
  nameWithType: ImageAttributes.ClearColorMatrix()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix()
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearColorMatrix(ColorAdjustType)
  nameWithType: ImageAttributes.ClearColorMatrix(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearGamma()
  nameWithType: ImageAttributes.ClearGamma()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearGamma()
- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearGamma(ColorAdjustType)
  nameWithType: ImageAttributes.ClearGamma(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearGamma(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearNoOp()
  nameWithType: ImageAttributes.ClearNoOp()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearNoOp()
- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearNoOp(ColorAdjustType)
  nameWithType: ImageAttributes.ClearNoOp(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearNoOp(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearOutputChannel()
  nameWithType: ImageAttributes.ClearOutputChannel()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel()
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearOutputChannel(ColorAdjustType)
  nameWithType: ImageAttributes.ClearOutputChannel(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearOutputChannelColorProfile()
  nameWithType: ImageAttributes.ClearOutputChannelColorProfile()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile()
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearOutputChannelColorProfile(ColorAdjustType)
  nameWithType: ImageAttributes.ClearOutputChannelColorProfile(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearRemapTable()
  nameWithType: ImageAttributes.ClearRemapTable()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearRemapTable()
- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearRemapTable(ColorAdjustType)
  nameWithType: ImageAttributes.ClearRemapTable(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearRemapTable(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearThreshold()
  nameWithType: ImageAttributes.ClearThreshold()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearThreshold()
- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearThreshold(ColorAdjustType)
  nameWithType: ImageAttributes.ClearThreshold(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearThreshold(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.Clone
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: Clone()
  nameWithType: ImageAttributes.Clone()
  fullName: System.Drawing.Imaging.ImageAttributes.Clone()
- uid: System.Drawing.Imaging.ImageAttributes.Dispose
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: Dispose()
  nameWithType: ImageAttributes.Dispose()
  fullName: System.Drawing.Imaging.ImageAttributes.Dispose()
- uid: System.Drawing.Imaging.ImageAttributes.Finalize
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: Finalize()
  nameWithType: ImageAttributes.Finalize()
  fullName: System.Drawing.Imaging.ImageAttributes.Finalize()
- uid: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: GetAdjustedPalette(ColorPalette,ColorAdjustType)
  nameWithType: ImageAttributes.GetAdjustedPalette(ColorPalette,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(ColorPalette,ColorAdjustType)
- uid: System.Drawing.Imaging.ColorPalette
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorPalette
  nameWithType: ColorPalette
  fullName: System.Drawing.Imaging.ColorPalette
- uid: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetBrushRemapTable(ColorMap[])
  nameWithType: ImageAttributes.SetBrushRemapTable(ColorMap[])
  fullName: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(ColorMap[])
- uid: System.Drawing.Imaging.ColorMap[]
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorMap
  nameWithType: ColorMap
  fullName: System.Drawing.Imaging.ColorMap[]
  spec.csharp:
  - uid: System.Drawing.Imaging.ColorMap
    name: ColorMap
    nameWithType: ColorMap
    fullName: ColorMap[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorKey(Color,Color)
  nameWithType: ImageAttributes.SetColorKey(Color,Color)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorKey(Color,Color)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorKey(Color,Color,ColorAdjustType)
  nameWithType: ImageAttributes.SetColorKey(Color,Color,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorKey(Color,Color,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrices(ColorMatrix,ColorMatrix)
  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix)
- uid: System.Drawing.Imaging.ColorMatrix
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorMatrix
  nameWithType: ColorMatrix
  fullName: System.Drawing.Imaging.ColorMatrix
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)
  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)
- uid: System.Drawing.Imaging.ColorMatrixFlag
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorMatrixFlag
  nameWithType: ColorMatrixFlag
  fullName: System.Drawing.Imaging.ColorMatrixFlag
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrix(ColorMatrix)
  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix)
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrix(ColorMatrix,ColorMatrixFlag)
  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag)
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetGamma(Single)
  nameWithType: ImageAttributes.SetGamma(Single)
  fullName: System.Drawing.Imaging.ImageAttributes.SetGamma(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetGamma(Single,ColorAdjustType)
  nameWithType: ImageAttributes.SetGamma(Single,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetGamma(Single,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetNoOp()
  nameWithType: ImageAttributes.SetNoOp()
  fullName: System.Drawing.Imaging.ImageAttributes.SetNoOp()
- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetNoOp(ColorAdjustType)
  nameWithType: ImageAttributes.SetNoOp(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetNoOp(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetOutputChannel(ColorChannelFlag)
  nameWithType: ImageAttributes.SetOutputChannel(ColorChannelFlag)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(ColorChannelFlag)
- uid: System.Drawing.Imaging.ColorChannelFlag
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorChannelFlag
  nameWithType: ColorChannelFlag
  fullName: System.Drawing.Imaging.ColorChannelFlag
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetOutputChannel(ColorChannelFlag,ColorAdjustType)
  nameWithType: ImageAttributes.SetOutputChannel(ColorChannelFlag,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(ColorChannelFlag,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetOutputChannelColorProfile(String)
  nameWithType: ImageAttributes.SetOutputChannelColorProfile(String)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetOutputChannelColorProfile(String,ColorAdjustType)
  nameWithType: ImageAttributes.SetOutputChannelColorProfile(String,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(String,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetRemapTable(ColorMap[])
  nameWithType: ImageAttributes.SetRemapTable(ColorMap[])
  fullName: System.Drawing.Imaging.ImageAttributes.SetRemapTable(ColorMap[])
- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetRemapTable(ColorMap[],ColorAdjustType)
  nameWithType: ImageAttributes.SetRemapTable(ColorMap[],ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetRemapTable(ColorMap[],ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetThreshold(Single)
  nameWithType: ImageAttributes.SetThreshold(Single)
  fullName: System.Drawing.Imaging.ImageAttributes.SetThreshold(Single)
- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetThreshold(Single,ColorAdjustType)
  nameWithType: ImageAttributes.SetThreshold(Single,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetThreshold(Single,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetWrapMode(WrapMode)
  nameWithType: ImageAttributes.SetWrapMode(WrapMode)
  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode)
- uid: System.Drawing.Drawing2D.WrapMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: WrapMode
  nameWithType: WrapMode
  fullName: System.Drawing.Drawing2D.WrapMode
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetWrapMode(WrapMode,Color)
  nameWithType: ImageAttributes.SetWrapMode(WrapMode,Color)
  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode,Color)
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetWrapMode(WrapMode,Color,Boolean)
  nameWithType: ImageAttributes.SetWrapMode(WrapMode,Color,Boolean)
  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode,Color,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Imaging.ImageAttributes.#ctor*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ImageAttributes
  nameWithType: ImageAttributes.ImageAttributes
- uid: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearBrushRemapTable
  nameWithType: ImageAttributes.ClearBrushRemapTable
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearColorKey
  nameWithType: ImageAttributes.ClearColorKey
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearColorMatrix
  nameWithType: ImageAttributes.ClearColorMatrix
- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearGamma
  nameWithType: ImageAttributes.ClearGamma
- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearNoOp
  nameWithType: ImageAttributes.ClearNoOp
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearOutputChannel
  nameWithType: ImageAttributes.ClearOutputChannel
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearOutputChannelColorProfile
  nameWithType: ImageAttributes.ClearOutputChannelColorProfile
- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearRemapTable
  nameWithType: ImageAttributes.ClearRemapTable
- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearThreshold
  nameWithType: ImageAttributes.ClearThreshold
- uid: System.Drawing.Imaging.ImageAttributes.Clone*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: Clone
  nameWithType: ImageAttributes.Clone
- uid: System.Drawing.Imaging.ImageAttributes.Dispose*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: Dispose
  nameWithType: ImageAttributes.Dispose
- uid: System.Drawing.Imaging.ImageAttributes.Finalize*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: Finalize
  nameWithType: ImageAttributes.Finalize
- uid: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: GetAdjustedPalette
  nameWithType: ImageAttributes.GetAdjustedPalette
- uid: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetBrushRemapTable
  nameWithType: ImageAttributes.SetBrushRemapTable
- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorKey
  nameWithType: ImageAttributes.SetColorKey
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrices
  nameWithType: ImageAttributes.SetColorMatrices
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrix
  nameWithType: ImageAttributes.SetColorMatrix
- uid: System.Drawing.Imaging.ImageAttributes.SetGamma*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetGamma
  nameWithType: ImageAttributes.SetGamma
- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetNoOp
  nameWithType: ImageAttributes.SetNoOp
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetOutputChannel
  nameWithType: ImageAttributes.SetOutputChannel
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetOutputChannelColorProfile
  nameWithType: ImageAttributes.SetOutputChannelColorProfile
- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetRemapTable
  nameWithType: ImageAttributes.SetRemapTable
- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetThreshold
  nameWithType: ImageAttributes.SetThreshold
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetWrapMode
  nameWithType: ImageAttributes.SetWrapMode
