### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceView
  id: SqlDataSourceView
  children:
  - System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  - System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  - System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  - System.Web.UI.WebControls.SqlDataSourceView.CanPage
  - System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.SqlDataSourceView.CanSort
  - System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  - System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Deleted
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Deleting
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  - System.Web.UI.WebControls.SqlDataSourceView.Filtering
  - System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Inserted
  - System.Web.UI.WebControls.SqlDataSourceView.Inserting
  - System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  - System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  - System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Selected
  - System.Web.UI.WebControls.SqlDataSourceView.Selecting
  - System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  - System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Updated
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Updating
  langs:
  - csharp
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView
  fullName: System.Web.UI.WebControls.SqlDataSourceView
  type: Class
  summary: "Oferece suporte a <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlar e fornece uma interface para controles associados a dados executar operações de dados SQL em bancos de dados relacionais."
  remarks: "A classe SqlDataSourceView destina-se principalmente a ser usado por controles de associação de dados e não como um objeto programável no código da página.       Controles de fonte de dados do ASP.NET contêm uma ou mais listas de dados, representados por objetos de exibição de fonte de dados. Estende a classe SqlDataSourceView o <xref:System.Web.UI.DataSourceView>da classe, define as funcionalidades do <xref:System.Web.UI.WebControls.SqlDataSource>controle com a qual ele está associado e implementa a funcionalidade básica de dados para o controle de fonte de dados.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.DataSourceView> A classe SqlDataSourceView implementa a funcionalidade de dados para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, incluindo o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, e <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>operações de classificação, filtragem e gerenciamento de configurações que são mantidas na exibição de estado.</xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       Embora o objeto de SqlDataSourceView não é diretamente exposto aos desenvolvedores de página pelo <xref:System.Web.UI.WebControls.SqlDataSource>controlar muitas de suas propriedades são.</xref:System.Web.UI.WebControls.SqlDataSource> A operação mais básica que executa uma exibição da fonte de dados é a recuperação de dados de banco de dados subjacente usando a <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>método, que recupera um <xref:System.Collections.IEnumerable>coleção de itens de dados.</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> A classe SqlDataSourceView implementa a recuperação de dados de bancos de dados relacionais usando consultas SQL. As consultas SQL podem ser parametrizadas para obter maior flexibilidade e segurança. Os seguintes métodos de recuperação de dados, propriedades e eventos são implementados pelo SqlDataSourceView e expostos diretamente pelo seu <xref:System.Web.UI.WebControls.SqlDataSource>controle para desenvolvedores de página e outros chamadores: - o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>evento – o <xref:System.Web.UI.WebControls.SqlDataSource.Selected>SqlDataSourceView o objeto oferece suporte à atualização de dados em um banco de dados relacional usando comandos SQL.</xref:System.Web.UI.WebControls.SqlDataSource.Selected> </xref:System.Web.UI.WebControls.SqlDataSource.Selecting> </xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Os comandos SQL podem ser parametrizados para obter maior flexibilidade e segurança. Controles de associação de dados, como o <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, pode ser configurado para executar atualizações automaticamente usando o SqlDataSourceView, enquanto outros controles não podem.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Os seguintes métodos de atualização, propriedades e eventos são implementados pelo SqlDataSourceView e expostos diretamente pelo seu <xref:System.Web.UI.WebControls.SqlDataSource>controle para desenvolvedores de página e outros chamadores: - o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.Updating>evento – o <xref:System.Web.UI.WebControls.SqlDataSource.Updated>evento SqlDataSourceView o dá suporte à inserção de novas linhas de dados em um banco de dados relacional.</xref:System.Web.UI.WebControls.SqlDataSource.Updated> </xref:System.Web.UI.WebControls.SqlDataSource.Updating> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Os comandos SQL que são especificados no <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>propriedade pode ser parametrizada para obter maior flexibilidade e segurança.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Controles de associação de dados, como o <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, pode ser configurado para executar inserções automaticamente usando o SqlDataSourceView, enquanto outros controles não podem.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> O seguinte insere métodos, propriedades e eventos são implementados pelo SqlDataSourceView e expostos diretamente pelo seu <xref:System.Web.UI.WebControls.SqlDataSource>controle para desenvolvedores de página e outros chamadores: - o <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>evento – o <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>evento SqlDataSourceView o objeto também dá suporte à exclusão de dados de um banco de dados relacional.</xref:System.Web.UI.WebControls.SqlDataSource.Inserted> </xref:System.Web.UI.WebControls.SqlDataSource.Inserting> </xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Assim como acontece com outros comandos, o comandos SQL que são especificados no <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>propriedade pode ser parametrizada para obter maior flexibilidade e segurança.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Controles de associação de dados, como o <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, pode ser configurado para executar exclusões automaticamente usando o SqlDataSourceView, enquanto outros controles não podem.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> O seguinte excluir métodos, propriedades e eventos são implementados pelo SqlDataSourceView e expostos diretamente pelo seu <xref:System.Web.UI.WebControls.SqlDataSource>controle para desenvolvedores de página e outros chamadores: - o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>evento – o <xref:System.Web.UI.WebControls.SqlDataSource.Deleted>evento de recuperação de dados é mais eficiente quando a cláusula que é usada para filtrar os dados durante a recuperação de dados é dinâmica.</xref:System.Web.UI.WebControls.SqlDataSource.Deleted> </xref:System.Web.UI.WebControls.SqlDataSource.Deleting> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Em outras palavras, uma consulta SQL com uma estática onde cláusula não é tão flexível e poderosa como uma consulta SQL em que os valores na cláusula WHERE são associados aos valores que podem ser alterados, como valores que são exibidos em controles em uma página de Web Forms. Em vez de reconstruir um SQL de consulta e definir o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>propriedade em cada página carregada, você pode usar o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>e <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>Propriedades para aplicar a filtragem dinâmica para recuperação de dados.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Essas propriedades são implementadas pelo SqlDataSourceView e expostas diretamente pelo seu <xref:System.Web.UI.WebControls.SqlDataSource>controle para controles associados a dados e outros chamadores.</xref:System.Web.UI.WebControls.SqlDataSource>       Você pode classificar os dados recuperados com o <xref:System.Web.UI.WebControls.SqlDataSource>controle adicionando uma cláusula ORDER BY, que faz com que o banco de dados executar a ordenação para você quando você recuperar dados ou ordenando os dados na memória depois de recuperados.</xref:System.Web.UI.WebControls.SqlDataSource> Você pode fornecer uma expressão de classificação para o SqlDataSourceView definindo o <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>propriedade o <xref:System.Web.UI.DataSourceSelectArguments>objeto que é passado para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>método.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> A sintaxe para a <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>propriedade é o mesmo que a sintaxe para uma <xref:System.Data.DataView.Sort%2A?displayProperty=fullName>propriedade.</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> Se você usar um procedimento armazenado para recuperar dados, você também pode usar o <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>propriedade para especificar um parâmetro que é usado especificamente para classificar os resultados de uma chamada de procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>       Quando mais de um usuário pode alterar o banco de dados ao mesmo tempo, há o potencial para conflitos de simultaneidade. O <xref:System.Web.UI.WebControls.SqlDataSource>controle tem controles de simultaneidade por meio de <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource> A funcionalidade é implementada no <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName>       Como muitos outros controles de servidor Web, o SqlDataSourceView implementa o <xref:System.Web.UI.IStateManager>interface e usa estado de exibição para controlar o estado entre solicitações de página.</xref:System.Web.UI.IStateManager> Implementações da <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A>e a propriedade e o <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, e <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A>métodos são fornecidos para habilitar o rastreamento de estado de exibição para o controle.</xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SqlDataSourceView(SqlDataSource,String,HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> classe definindo especificado <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle como o proprietário da exibição atual."
  remarks: "O construtor SqlDataSourceView é chamado pelo <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>método para retornar uma nova instância de uma exibição da fonte de dados com especificado `name` parâmetro.</xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> O <xref:System.Web.UI.WebControls.SqlDataSource>controle está associado a apenas um <xref:System.Web.UI.WebControls.SqlDataSourceView>nomes de objeto a qualquer momento e sempre a exibição `Table`, embora essa restrição de nomenclatura é imposta pelo <xref:System.Web.UI.WebControls.SqlDataSource>controle, não o <xref:System.Web.UI.WebControls.SqlDataSourceView>.</xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSource> Você pode substituir o <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>método para oferecer suporte a exibições com uma convenção de nomenclatura diferente.</xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>       O <xref:System.Web.HttpContext>objeto que é passado pelo `context` parâmetro é usado pela exibição da fonte de dados para acessar objetos de parâmetro, como o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>e <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>Propriedades.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.HttpContext>"
  syntax:
    content: public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.SqlDataSource
      description: "O controle de fonte de dados com o qual o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> está associado."
    - id: name
      type: System.String
      description: "Um nome exclusivo para a exibição de fonte de dados dentro do escopo do controle de fonte de dados que ele pertence."
    - id: context
      type: System.Web.HttpContext
      description: "Atual <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  id: CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se uma operação de recuperação de dados é cancelada quando qualquer parâmetro que está contida no <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>coleção é avaliada como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>"
  remarks: "O valor da <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>propriedade é armazenada em ViewState.</xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>"
  syntax:
    content: public bool CancelSelectOnNullParameter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se uma operação de recuperação de dados é cancelada quando dentro de um parâmetro de <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>coleção é avaliada como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto associado atual <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle oferece suporte para a operação de exclusão."
  remarks: "A propriedade retorna CanDelete `true` se o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>está definida.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Uma operação de exclusão ainda poderá falhar se todas as propriedades de dados não estão definidas ou não estão definidas corretamente."
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se houver suporte para a operação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto associado atual <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle oferece suporte para a operação de inserção."
  remarks: "A propriedade retorna CanInsert `true` se o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>está definida.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Uma operação de inserção ainda poderá falhar se todas as propriedades de dados não estão definidas ou não estão definidas corretamente."
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se houver suporte para a operação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto associado atual <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle oferece suporte para a paginação de dados recuperados."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto não oferece suporte para paginação.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto associado atual <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle oferece suporte para recuperar o número total de linhas de dados, além do conjunto de dados."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto não oferece suporte para recuperar as contagens.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto associado atual <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle oferece suporte a uma exibição classificada nos dados recuperados."
  remarks: "A propriedade retorna CanSort `true`, se atual <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode>valor e o <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>está definida.</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>"
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se há suporte para classificação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto associado atual <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle oferece suporte para a operação de atualização."
  remarks: "A propriedade retorna CanUpdate `true` se o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>está definida.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> Uma operação de exclusão ainda poderá falhar se todas as propriedades de dados não estão definidas ou não estão definidas corretamente."
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se houver suporte para a operação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica como o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle executa as atualizações e exclusões quando dados em uma linha de base de banco de dados as alterações durante o tempo da operação."
  remarks: "A propriedade ConflictDetection determina se os parâmetros para os valores novos e antigos são aplicados para o `Update` método. Por exemplo, se o comando que é especificado pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>propriedade retorna um <xref:System.Data.DataSet>objeto com as colunas `Name` e `Number`, e a propriedade ConflictDetection é definida como o <xref:System.Web.UI.ConflictOptions>valor, os parâmetros são criados para `Name` e `Number` para a operação de atualização.</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Se a propriedade ConflictDetection é definida como o <xref:System.Web.UI.ConflictOptions>valor, os parâmetros são criados para `Name`, `Number`, `original_Name`, e `original_Number`.</xref:System.Web.UI.ConflictOptions> (O nome exato dos parâmetros para os valores originais depende do <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.)</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> Em seguida, o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto determina se o método é especificado no <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>propriedade tem parâmetros que correspondam.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView>       Controle de simultaneidade é uma técnica de repositórios de dados usam para controlar como os dados é lida e alterados no repositório quando vários clientes estão acessando e manipulando os mesmos dados. Por exemplo, um cliente lê os dados e apresenta-as para um usuário, enquanto outro cliente lê os mesmos dados e apresenta-as para um usuário diferente. Se ambos os usuários atualizam os dados e enviá-lo para o armazenamento de dados, alguns resultados inesperados poderão ocorrer, pois ambos os clientes podem atualizar valores diferentes para os mesmos dados. Isso é considerado um conflito. Definindo a propriedade ConflictDetection o <xref:System.Web.UI.ConflictOptions>valor, a operação de atualização pode comparar os valores antigos e novos para a fonte de dados original para detectar conflitos e tratá-los conforme necessário.</xref:System.Web.UI.ConflictOptions>       O valor a ConflictDetection propriedade é armazenado na exibição estado."
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "Uma da <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valores. O padrão é o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado não é um do <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de exclusão usando a <> </> *> SQL da cadeia de caracteres, os parâmetros que são especificados no <> </> *> coleta e os valores que estão em especificado <code> keys </code> e <code> oldValues </code> coleções."
  remarks: "As chamadas de método de exclusão de <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>método, passando o `keys` e `oldValues` parâmetros.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>objeto ou linha de valores de chave para o <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*>operação excluir.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*> </xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que contém os valores de linha serão avaliados somente se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*>estiver definida como o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valor.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas excluídas do banco de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*>é de propriedade <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  id: DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia de caracteres SQL que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> usa para excluir dados do banco de dados subjacente."
  remarks: "Como produtos de banco de dados diferente usam tipos diferentes de SQL, a sintaxe da cadeia de caracteres SQL depende do provedor ADO.NET atual que está sendo usado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>       Se a cadeia de caracteres SQL é uma consulta parametrizada ou um comando, o espaço reservado do parâmetro também depende do provedor ADO.NET que está sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=fullName>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, o espaço reservado do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou <xref:System.Data.OleDb?displayProperty=fullName>, o espaço reservado do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       DeleteCommand pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se o banco de dados subjacente oferece suporte a procedimentos armazenados.       O valor da propriedade DeleteCommand armazenados na exibição de estado."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database Orders table. Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true` and automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when the **Delete** button is clicked. Finally, because this example deletes data, an event handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_947_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_947_1.aspx)]"
  syntax:
    content: public string DeleteCommand { get; set; }
    return:
      type: System.String
      description: "Um SQL de cadeia de caracteres que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> usa para excluir dados."
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  id: DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o texto do <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>propriedade é uma instrução SQL ou o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  remarks: "O valor a DeleteCommandType propriedade é armazenado na exibição estado."
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores. O padrão é o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado não é um do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando uma operação de exclusão for concluída."
  remarks: "Manipule o evento excluído para examinar os valores de parâmetros de saída após uma operação de exclusão. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objeto que está associado com o evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são usados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  remarks: "Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>propriedade contém uma consulta SQL parametrizada, a coleção DeleteParameters contém qualquer <xref:System.Web.UI.WebControls.Parameter>objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>       Nomes de parâmetro podem ser afetados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>propriedade; especificamente, se o nome identifica uma chave primária, como uma chave que é especificado usando o `DataKeyNames` propriedade de um controle associado a dados, ou em Excluir e atualizar os cenários nos quais o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>está definida como o <xref:System.Web.UI.ConflictOptions>valor e um conjunto de `oldValues` é passado para o método de dados correspondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> Nesse caso, a cadeia de caracteres de formato é aplicada a cada nome de parâmetro no `oldValues` coleção.       Dependendo do provedor ADO.NET, a ordem dos parâmetros na coleção DeleteParameters pode ser importante. O <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>provedores associar os parâmetros na coleção de acordo com a ordem em que os parâmetros aparecem na consulta SQL parametrizada.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> O <xref:System.Data.SqlClient?displayProperty=fullName>provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com o espaço reservado na consulta SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database. Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control. You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method on a data source control). In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1005_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1005_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros usados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de exclusão."
  remarks: "Manipular o evento de exclusão para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.SqlDataSource>controle executa a operação de exclusão.</xref:System.Web.UI.WebControls.SqlDataSource>       A conexão à fonte de dados subjacente não ainda estiver aberto quando o delegado de manipulador de eventos é chamado. Portanto, você não pode cancelar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>operação diretamente ao chamar o <xref:System.Data.Common.DbCommand.Cancel%2A>método no <xref:System.Data.Common.DbCommand>objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objeto.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> No entanto, você pode cancelar a operação, definindo a <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>para `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event that is raised before a delete operation occurs. Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_97_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_97_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de exclusão usando a <> </> *> SQL da cadeia de caracteres, os parâmetros que são especificados no <> </> *> coleta e os valores que estão em especificado <code> keys </code> e <code> oldValues </code> coleções."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSourceView>classe implementa o herdadas <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>método para excluir dados de um banco de dados.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView> Os desenvolvedores de páginas e autores de controle associado a dados não chame o método ExecuteDelete diretamente. em vez disso, use expostas publicamente <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>método.</xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>       Os valores que estão contidos no `keys` coleção são avaliadas e mesclado com quaisquer valores contidos o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>coleção.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>estiver definida como o <xref:System.Web.UI.ConflictOptions>valor, os valores que estão contidos no `oldValues` coleção são formatados com o <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>propriedade e são também mesclagem.</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>       Antes da operação de exclusão é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de uma exclusão.       Para executar uma operação de exclusão, o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto compilações um <xref:System.Data.Common.DbCommand>objeto usando o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>texto e associados <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>Propriedades e, em seguida, executa o <xref:System.Data.Common.DbCommand>objeto no banco de dados subjacente.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Após a operação de exclusão, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento."
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>objeto ou linha de valores de chave para a operação de ExecuteDelete excluir.</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que contém os valores de linha serão avaliados somente se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*>estiver definida como o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valor.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas excluídas do banco de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current user does not have the correct permissions to access to the database.  \n  \n \\- or -  \n  \n The instance of the control is an <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control and access is denied to the path specified for the <xref:System.Web.UI.WebControls.AccessDataSource.DataFile*> property."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using an instance of the <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de inserção usando o <> </> *> SQL da cadeia de caracteres, os parâmetros que são especificados no <> </> *> coleta e os valores que estão em especificado <code> values </code> coleção."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSourceView>classe implementa o herdadas <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>método para inserir dados em um banco de dados.</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView> Os desenvolvedores de páginas e autores de controle associado a dados não chame o método ExecuteInsert diretamente. em vez disso, use expostas publicamente <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>método.</xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>       Antes da operação de inserção é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de uma instrução insert.       Para executar uma operação de inserção, o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto compilações um <xref:System.Data.Common.DbCommand>objeto usando o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>texto e associados <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>Propriedades e, em seguida, executa o <xref:System.Data.Common.DbCommand>objeto no banco de dados subjacente.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Após a inserção, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento."
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de valores usados com o <> </> *> propriedade para executar a operação de banco de dados de inserção.</xref:System.Collections.IDictionary> Se não existem parâmetros associados com a consulta ou se o <> </> *> não é uma consulta SQL parametrizada, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas inseridas no banco de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> não é possível estabelecer uma conexão com a fonte de dados subjacente."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O usuário atual não tem as permissões corretas para acessar o banco de dados."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>é de propriedade <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recupera dados do banco de dados subjacente usando a <> </> *> cadeia de caracteres SQL e os parâmetros que estão no <> </> *> coleção."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSourceView>classe implementa o método ExecuteSelect herdado para recuperar dados de um banco de dados.</xref:System.Web.UI.WebControls.SqlDataSourceView> Os desenvolvedores de páginas e autores de controle associado a dados não chame o método ExecuteSelect diretamente. em vez disso, use expostas publicamente <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       Antes da recuperação de dados é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes que os dados são recuperados.       Para executar a operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto compilações um <xref:System.Data.Common.DbCommand>objeto usando o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>texto e associados <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>e o executa no banco de dados subjacente.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Após a conclusão da operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Selected>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Selected> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> Você pode manipular esse evento para examinar os valores de retorno, códigos de erro e executar qualquer pós-processamento.       O método ExecuteSelect retorna um <xref:System.Data.DataView>objeto se a <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>é definido como <xref:System.Web.UI.WebControls.SqlDataSourceMode>, ou um <xref:System.Data.IDataReader>objeto se a <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>é definida como <xref:System.Web.UI.WebControls.SqlDataSourceMode>.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.DataView> Fechar o <xref:System.Data.IDataReader>quando você terminar de ler os dados do objeto.</xref:System.Data.IDataReader>       Se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>é definido como <xref:System.Web.UI.WebControls.SqlDataSourceMode>e o cache está habilitado, o <xref:System.Web.UI.WebControls.SqlDataSourceView>recupera e salva os dados em cache durante a operação de dados.</xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> O cache é criado, descartado ou atualizada com base no comportamento de cache especificado pela combinação da <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>Propriedades.</xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>      > [!IMPORTANT] > Quando você estiver usando representação do cliente com a autenticação do Windows, os dados em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que vários usuários acessem os dados e você deseja que cada recuperação para os dados a ser verificada por configurações de segurança do banco de dados, não use o cache.       Se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>é definido como <xref:System.Web.UI.WebControls.SqlDataSourceMode>e um <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>foi especificado, ele será avaliado junto com qualquer fornecido <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>e o filtro resultante é aplicado à lista de dados durante a operação de recuperação de dados.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "Um <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> objeto usado para solicitar operações nos dados além da recuperação de dados básico."
    return:
      type: System.Collections.IEnumerable
      description: "Um <xref:System.Collections.IEnumerable>lista de linhas de dados.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n Caching is enabled but the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode*> property of the data source is not set to <xref href=\"System.Web.UI.WebControls.SqlDataSourceMode\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*> property is set but <xref:System.Data.SqlClient.SqlCommand.CommandType*> is not set to <xref href=\"System.Data.CommandType\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The data source cannot create a database connection.  \n  \n \\- or -  \n  \n Caching is enabled but the internal cache and command types do not match."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de atualização usando o <> </> *> SQL da cadeia de caracteres, os parâmetros que estão na <> </> *> coleta e os valores que estão em especificado <code> keys </code>, <code> values </code>, e <code> oldValues </code> coleções."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSourceView>classe implementa o método ExecuteUpdate herdado para atualizar dados em um banco de dados.</xref:System.Web.UI.WebControls.SqlDataSourceView> Os desenvolvedores de páginas e autores de controle associado a dados não chame o método ExecuteUpdate diretamente. em vez disso, use expostas publicamente <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>método.</xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>       Os valores contidos no `keys` e `values` coleções são avaliadas e mescladas com os valores contidos o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>coleção.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>está definida como <xref:System.Web.UI.ConflictOptions>, os valores contidos no `oldValues` coleção são formatados com o <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>e também mesclados.</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>       Antes da operação de atualização é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de uma atualização.       Para executar a operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView>cria um <xref:System.Data.Common.DbCommand>objeto usando o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>texto e associados <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>Propriedades e, em seguida, executa o <xref:System.Data.Common.DbCommand>objeto no banco de dados subjacente.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Após a conclusão da operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento."
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de chaves primárias para usar com o <> </> *> propriedade para executar a operação de atualização do banco de dados.</xref:System.Collections.IDictionary> Se não houver nenhuma chave associada com a consulta ou se o <> </> *> não é uma consulta SQL parametrizada, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de valores a serem usados com o <> </> *> propriedade para executar a operação de atualização do banco de dados.</xref:System.Collections.IDictionary> Se não existem parâmetros associados com a consulta ou se o <> </> *> não é um SQL com parâmetros de consulta, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que representa os valores originais no banco de dados.</xref:System.Collections.IDictionary> Se não existem parâmetros associados com a consulta ou se o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>propriedade não é uma consulta SQL parametrizada, transmitir <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas atualizadas no banco de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O usuário atual não tem as permissões corretas para acessar o banco de dados."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>é de propriedade <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma expressão de filtragem que é aplicado quando o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select*>método é chamado.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select*>"
  remarks: "A sintaxe que é usada para a propriedade FilterExpression é uma sintaxe de cadeia de caracteres – estilo de formato. Você pode incluir parâmetros na propriedade FilterExpression. Se o tipo do parâmetro de cadeia de caracteres ou caractere, coloque o parâmetro entre aspas simples. Aspas não são necessárias, se o parâmetro é um tipo numérico.       O <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>coleção contém os parâmetros que são avaliados para os espaços reservados que se encontram no <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>       O <xref:System.Web.UI.WebControls.SqlDataSource>controle oferece suporte à filtragem de dados somente quando estiver na `DataSet` modo.</xref:System.Web.UI.WebControls.SqlDataSource>       O valor a FilterExpression propriedade é armazenado na exibição estado.      > [!IMPORTANT] > Você deve validar qualquer valor de parâmetro de filtro que você recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro na expressão de filtro e aplica-se para o <xref:System.Data.DataView>objeto que é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se você estiver usando o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>a propriedade como uma medida de segurança para limitar o número de itens que são retornados, você deve validar os valores de parâmetro antes da filtragem ocorre.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In this example, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1180_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1180_1.aspx)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa uma expressão de filtragem aplicada quando os dados são recuperados usando o <xref:System.Web.UI.WebControls.SqlDataSource.Select*>método.</xref:System.Web.UI.WebControls.SqlDataSource.Select*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A propriedade FilterExpression foi definida quando o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> está no <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref> modo."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de filtro."
  remarks: "Manipular o evento de filtragem para executar operações de validação em valores de parâmetro de filtro antes do <xref:System.Web.UI.WebControls.SqlDataSourceView>object realiza uma operação de filtro.</xref:System.Web.UI.WebControls.SqlDataSourceView> Você pode cancelar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>método definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs>do objeto para `true`.</xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> O evento é gerado apenas se o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>está definida.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>      > [!IMPORTANT] > Você deve validar qualquer valor de parâmetro de filtro que você recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro na expressão de filtro e aplica-se para o <xref:System.Data.DataView>objeto que é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se você estiver usando o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>a propriedade como uma medida de segurança para limitar o número de itens que são retornados, você deve validar os valores de parâmetro antes da filtragem ocorre.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma coleção de parâmetros que estão associados a quaisquer espaços reservados de parâmetros no <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>cadeia de caracteres.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>"
  remarks: "Os parâmetros na coleção FilterParameters estão associados com os parâmetros que são especificados no <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> Os espaços reservados de parâmetro que são especificados no <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>são avaliadas pela ordem e correspondeu aos objetos de parâmetro na coleção FilterParameters quando o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>método é chamado.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>      > [!IMPORTANT] > Você deve validar qualquer valor de parâmetro de filtro que você recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro na expressão de filtro e aplica-se para o <xref:System.Data.DataView>objeto que é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se você estiver usando o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>a propriedade como uma medida de segurança para limitar o número de itens que são retornados, você deve validar os valores de parâmetro antes da filtragem ocorre.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_165_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_165_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém um conjunto de parâmetros associados a quaisquer espaços reservados de parâmetros encontrados no <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de inserção usando o <> </> *> SQL da cadeia de caracteres, os parâmetros que são especificados no <> </> *> coleta e os valores que estão em especificado <code> values </code> coleção."
  remarks: "As chamadas de método de inserção de <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>método, passando o `values` parâmetro.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de parâmetros para o <> </> *> propriedade a ser usada para executar a operação de banco de dados de inserção.</xref:System.Collections.IDictionary> Se não existem parâmetros associados com a consulta ou se o <> </> *> não é um SQL com parâmetros de consulta, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas inseridas no banco de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> não é possível estabelecer uma conexão com a fonte de dados subjacente."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>é de propriedade <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  id: InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia de caracteres SQL que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto usa para inserir dados no banco de dados subjacente."
  remarks: "Como produtos de banco de dados diferente usam tipos diferentes de SQL, a sintaxe da cadeia de caracteres SQL depende do provedor ADO.NET atual que está sendo usado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se a cadeia de caracteres SQL é uma consulta parametrizada ou um comando, o espaço reservado do parâmetro também depende do provedor ADO.NET que está sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=fullName>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, o espaço reservado do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou <xref:System.Data.OleDb?displayProperty=fullName>, o espaço reservado do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       A propriedade InsertCommand pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.       O valor da propriedade InsertCommand armazenados na exibição de estado."
  example:
  - "This section contains two code examples. The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The second code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_1.aspx)]  \n  \n The following code example demonstrates how to retrieve data from SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_2.aspx)]"
  syntax:
    content: public string InsertCommand { get; set; }
    return:
      type: System.String
      description: "Um SQL de cadeia de caracteres que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> usa para inserir dados."
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  id: InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o texto do <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>propriedade é uma instrução SQL ou o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  remarks: "O valor a InsertCommandType propriedade é armazenado na exibição estado."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> control displays the details for a particular row. If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and is identified as a stored procedure by setting the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_733_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_733_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores. O valor é o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado não é um do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando uma operação de inserção é concluída."
  remarks: "Manipule o evento Inserted para examinar os valores de parâmetros de saída após uma operação de inserção. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objeto que está associado com o evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface that is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_39_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_39_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de inserção."
  remarks: "Manipular o evento inserindo para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.SqlDataSource>controle executa a operação de inserção.</xref:System.Web.UI.WebControls.SqlDataSource>       A conexão à fonte de dados subjacente não ainda estiver aberto quando o delegado de manipulador de eventos é chamado. Portanto, você não pode cancelar a operação de banco de dados diretamente, chamando o <xref:System.Data.Common.DbCommand.Cancel%2A>método o <xref:System.Data.Common.DbCommand>objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objeto.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> No entanto, você pode cancelar a operação de banco de dados, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>para `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_104_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são usados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  remarks: "Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>propriedade contém uma consulta SQL parametrizada, a coleção InsertParameters contém qualquer <xref:System.Web.UI.WebControls.Parameter>objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>       Dependendo do provedor ADO.NET, a ordem dos parâmetros na coleção InsertParameters pode ser importante. O <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>provedores associar os parâmetros na coleção de acordo com a ordem na qual os parâmetros aparecem na consulta SQL parametrizada.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> O <xref:System.Data.SqlClient?displayProperty=fullName>provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com um alias de espaço reservado na consulta SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_530_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_530_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros usados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto está salvando alterações ao seu estado de exibição."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o modo de exibição de fonte de dados está marcado para salvar seu estado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restaura o estado de exibição salvo anteriormente para o modo de exibição de fonte de dados."
  remarks: "Esse método é usado principalmente pelo [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] infraestrutura e não se destina a ser usado diretamente no seu código.  No entanto, os desenvolvedores de controle podem substituir este método para especificar como um controle de servidor personalizado restaura o estado de exibição. Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](~/add/includes/ajax-current-ext-md.md).       O método LoadViewState restaura as informações de estado de exibição para o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto a partir de uma solicitação de página anterior que foi salvo, o <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>método.</xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um objeto que representa o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> estado para restaurar."
  overload: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma cadeia de caracteres de formato para aplicar aos nomes de quaisquer parâmetros que são passados para o <> </> *> ou <> </> *> método."
  remarks: "A cadeia de caracteres de formato OldValuesParameterFormatString é aplicada às chaves primárias apenas, como aqueles que são identificados pelo `DataKeyNames` propriedade do controle associado a dados ou em Excluir e cenários de atualização em que o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>estiver definida como o <xref:System.Web.UI.ConflictOptions>valor e um conjunto de `oldValues` é passado para o método de dados correspondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> Nesse caso, a cadeia de caracteres de formato é aplicada a cada nome de parâmetro no `oldValues` coleção. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>.</xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>       O valor a OldValuesParameterFormatString propriedade é armazenado na exibição estado."
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa uma cadeia de caracteres de formato aplicada aos nomes de qualquer <code> oldValues </code> parâmetros passados para o <> </> *> ou <> </> *> métodos. O padrão é &quot;{0}&quot;."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Deleted&quot;> </xref> evento após o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle concluiu uma operação de exclusão."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnDeleted também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Deleting&quot;> </xref> evento antes do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle tenta uma operação de exclusão."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnDeleting também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event, which is raised before a <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation occurs. Because this example deletes data from the Northwind database, an OnDeleting handler is added to attempt to back up the database to disk before the delete is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/359c75a9-ee0e-4d55-bdc1-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/359c75a9-ee0e-4d55-bdc1-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Filtering&quot;> </xref> evento antes do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle filtra os resultados de uma operação de seleção."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnFiltering também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Inserted&quot;> </xref> evento após o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle concluiu uma operação de inserção."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnInserted também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the OnInserted event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/81209d4c-52a2-4147-b8d8-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/81209d4c-52a2-4147-b8d8-_1.aspx)]"
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Inserting&quot;> </xref> evento antes do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle tenta uma operação de inserção."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnInserting também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the OnInserting event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/ff2f58f9-1a94-4cce-ae83-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/ff2f58f9-1a94-4cce-ae83-_1.aspx)]"
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Selected&quot;> </xref> evento após o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle concluiu uma operação de recuperação de dados."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnSelected também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Selecting&quot;> </xref> evento antes do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle tenta uma operação de recuperação de dados."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnSelecting também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Updated&quot;> </xref> evento após o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle concluiu uma operação de atualização."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método AoAtualizar também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates how to display and update data retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/9236d411-d01f-4dc8-b1eb-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/9236d411-d01f-4dc8-b1eb-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Updating&quot;> </xref> evento antes do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle tenta uma operação de atualização."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnUpdating também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/29c8c16e-94d1-48d3-be46-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/29c8c16e-94d1-48d3-be46-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  id: ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a cadeia de caracteres que é usada para prefixar um espaço reservado de parâmetro em uma consulta SQL parametrizada."
  remarks: "Comandos e consultas SQL podem ser parametrizados, em que eles contêm espaços reservados para valores que são associados à consulta em tempo de execução. Dependendo do provedor ADO.NET que é definido para o <xref:System.Web.UI.WebControls.SqlDataSource>controle, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade, os parâmetros são avaliados pelo alias ou pela ordem no <xref:System.Web.UI.WebControls.ParameterCollection>objeto.</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       Se o <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>não está definido ou está definido como o <xref:System.Data.SqlClient?displayProperty=fullName>, parâmetros são avaliados pelo alias e a propriedade ParameterPrefix é usada para adicionar um prefixo de parâmetro para o <xref:System.Web.UI.WebControls.Parameter.Name%2A>propriedade de cada <xref:System.Web.UI.WebControls.Parameter>do objeto em um <xref:System.Web.UI.WebControls.ParameterCollection>durante uma operação de manipulação de dados ou de recuperação de dados.</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Data.SqlClient?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se o <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>estiver definida como o <xref:System.Data.OleDb?displayProperty=fullName>ou <xref:System.Data.Odbc?displayProperty=fullName>, os parâmetros são avaliados por ordem e o ParameterPrefix e <xref:System.Web.UI.WebControls.Parameter.Name%2A>propriedades são ignoradas.</xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>       Se você estender o <xref:System.Web.UI.WebControls.SqlDataSourceView>classe, você pode substituir a propriedade ParameterPrefix para fornecer um prefixo diferente de `&quot;@&quot;` de cadeia de caracteres, se necessário.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: protected virtual string ParameterPrefix { get; }
    return:
      type: System.String
      description: "O &quot;@&quot; cadeia de caracteres."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  id: RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Compara os recursos que são solicitados para uma <> </> *> operação com base nos critérios que o modo de exibição oferece suporte e é chamado pelo <> </> *> método."
  remarks: "O método RaiseUnsupportedCapabilityError é usado pela exibição da fonte de dados para examinar cada um dos recursos que são solicitados por um controle associado a dados, que é representado pelo <xref:System.Web.UI.DataSourceSelectArguments>objeto que é passado para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>método e comparar esses recursos para os recursos de exibição da fonte de dados com suporte.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> Os recursos que são representados pelo <xref:System.Web.UI.DataSourceSelectArguments>de objeto e não há suporte para o modo de exibição de fonte de dados, um <xref:System.NotSupportedException>exceção será gerada.</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);
    parameters:
    - id: capability
      type: System.Web.UI.DataSourceCapabilities
      description: "Uma da <xref href=&quot;System.Web.UI.DataSourceCapabilities&quot;> </xref> valores que são comparados com os recursos que dá suporte ao modo de exibição."
  overload: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A fonte de dados não tiver selecionado <code> capability </code> habilitado."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva as alterações para o estado de exibição para o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> controle desde a hora em que a página foi postada no servidor."
  remarks: "O método SaveViewState é usado principalmente por desenvolvedores de controle.       Estado de exibição é o acúmulo dos valores das propriedades de um controle de servidor. Esses valores são colocados automaticamente na <xref:System.Web.UI.Control.ViewState%2A>propriedade para o controle de servidor, que é uma ocorrência da <xref:System.Web.UI.StateBag>classe.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> O <xref:System.Web.UI.Control.ViewState%2A>valor para o controle de servidor, em seguida, é mantido em um objeto de cadeia de caracteres depois de salvar o estágio do ciclo de vida de controle do servidor de estado.</xref:System.Web.UI.Control.ViewState%2A>       Quando o estado de exibição for salvo, o objeto de cadeia de caracteres que foram mantido após salvar estado estágio do ciclo de vida de controle de servidor é retornado ao cliente como uma variável que é armazenada em um HTML `Hidden` elemento. Quando você criar controles de servidor personalizado, você pode melhorar a eficiência substituindo o método SaveViewState e modificando o `ViewState` propriedade para o controle de servidor. Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "O objeto que contém as alterações para o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> exibir estado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se não houver nenhum estado de exibição associado ao objeto."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recupera dados do banco de dados subjacente usando a <> </> *> cadeia de caracteres SQL e os parâmetros que estão no <> </> *> coleção."
  remarks: "As chamadas do método Select a <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>método, passando o `selectArgs` parâmetro.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>       O <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>método retorna um <xref:System.Data.DataView>do objeto, se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>estiver definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode>valor ou retorna um <xref:System.Data.IDataReader>do objeto, se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>estiver definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode>valor.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.DataView> </xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> Fechar o <xref:System.Data.IDataReader>quando você terminar de ler os dados do objeto.</xref:System.Data.IDataReader>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "Um <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> usado para operações de solicitação nos dados além da recuperação de dados básico."
    return:
      type: System.Collections.IEnumerable
      description: "Um <xref:System.Collections.IEnumerable>lista de linhas de dados.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <code> selectArgs </code> passado para selecionar o método de especificar que a fonte de dados deve realizar algum trabalho adicional ao recuperar dados para habilitar a paginação ou classificar os dados recuperados, mas o controle de fonte de dados não suporta o recurso solicitado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> não é possível estabelecer uma conexão com a fonte de dados subjacente."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  id: SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia de caracteres SQL que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto usa para recuperar dados do banco de dados subjacente."
  remarks: "Como produtos de banco de dados diferente usam tipos diferentes de SQL, a sintaxe da cadeia de caracteres SQL depende do provedor ADO.NET atual que está sendo usado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se a cadeia de caracteres SQL é uma consulta parametrizada ou um comando, o espaço reservado do parâmetro também depende do provedor ADO.NET que está sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=fullName>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, o espaço reservado do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou <xref:System.Data.OleDb?displayProperty=fullName>, o espaço reservado do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       A propriedade SelectCommand pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.      > [!IMPORTANT] > É mais seguro para usar um procedimento armazenado que uma instrução SQL para a propriedade SelectCommand.       O valor da propriedade SelectCommand armazenados na exibição de estado."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The second code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.Button> and <xref:System.Web.UI.WebControls.TextBox> controls are provided as a simple interface to update the address for the selected user in the <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_1.aspx)]  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_2.aspx)]"
  syntax:
    content: public string SelectCommand { get; set; }
    return:
      type: System.String
      description: "Um SQL de cadeia de caracteres que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> usa para recuperar dados."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  id: SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o texto do <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>propriedade é uma consulta SQL ou o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  remarks: "O valor a SelectCommandType propriedade é armazenado na exibição estado."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_934_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_934_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores. O padrão é o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado não é um do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando uma operação de recuperação de dados foi concluída."
  remarks: "Manipule o evento selecionado para examinar os valores de parâmetros de saída depois de uma operação de recuperação de dados foi concluída. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objeto que está associado com o evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de recuperação de dados."
  remarks: "Manipular o evento Selecting para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.SqlDataSource>controle executa a operação de recuperação de dados.</xref:System.Web.UI.WebControls.SqlDataSource>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são usados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  remarks: "Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>propriedade contém uma consulta SQL parametrizada, coleção SelectParameters contém qualquer <xref:System.Web.UI.WebControls.Parameter>objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>       Dependendo do provedor ADO.NET, a ordem dos parâmetros na coleção SelectParameters pode ser importante. O <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>provedores associar os parâmetros na coleção de acordo com a ordem na qual os parâmetros aparecem na consulta SQL parametrizada.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> O <xref:System.Data.SqlClient?displayProperty=fullName>provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com um alias de espaço reservado na consulta SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query. The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection. In this way, the <xref:System.Web.UI.WebControls.DropDownList> control, to which the <xref:System.Web.UI.WebControls.ControlParameter> is bound, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n> [!NOTE]\n>  Because the parameter is used in a WHERE clause, the use of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property in this code example is functionally equivalent to using both the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_723_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_723_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros usados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome de um parâmetro de procedimento armazenado que é usado para classificar os dados recuperados quando a recuperação de dados é executada usando um procedimento armazenado."
  remarks: "A propriedade SortParameterName é avaliada somente quando o SQL que é de comando contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>propriedade é o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Nesse caso, se a propriedade SortParameterName for definida, ele contém o nome de um parâmetro que é usado para classificar os resultados do procedimento armazenado.       Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>estiver definida, ele é pré-demarcado para a propriedade SortParameterName.</xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>       O valor a SortParameterName propriedade é armazenado na exibição estado."
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "O nome de um parâmetro de procedimento armazenado usado para classificar os dados recuperados quando a recuperação de dados é executada usando um procedimento armazenado."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.SqlDataSourceView>instância é convertida para o <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o modo de exibição de fonte de dados está marcado para salvar seu estado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IStateManager.LoadViewState%28System.Object%29?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.SqlDataSourceView>instância é convertida para o <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um objeto que representa o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> estado para restaurar."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte <xref href=&quot;System.Web.UI.IStateManager.SaveViewState&quot;> </xref>."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.SqlDataSourceView>instância é convertida para o <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "O objeto que contém as alterações para o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> exibir estado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se não houver nenhum estado de exibição associado ao objeto."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte <xref:System.Web.UI.IStateManager.TrackViewState*>.</xref:System.Web.UI.IStateManager.TrackViewState*>"
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.SqlDataSourceView>instância é convertida para o <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Faz com que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto para controlar alterações em seu estado de exibição para que as alterações podem ser armazenadas na <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> objeto para o controle e persistente entre solicitações para a mesma página."
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de atualização usando o <> </> *> SQL da cadeia de caracteres, os parâmetros que estão na <> </> *> coleta e os valores que estão em especificado <code> keys </code>, <code> values </code>, e <code> oldValues </code> coleções."
  remarks: "As chamadas de método de atualização de <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>método, passando o `keys`, `values`, e `oldValues` parâmetros.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> Para obter mais informações, consulte <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the Update method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/0d500e90-6fd2-4112-8e56-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/0d500e90-6fd2-4112-8e56-_1.aspx)]"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de chaves primárias para usar com o <> </> *> propriedade para executar a operação de atualização do banco de dados.</xref:System.Collections.IDictionary> Se não houver nenhuma chave associada com a consulta ou se o <> </> *> não é um SQL com parâmetros de consulta, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de valores a serem usados com o <> </> *> propriedade para executar a operação de atualização do banco de dados.</xref:System.Collections.IDictionary> Se não existem parâmetros associados com a consulta ou se o <> </> *> não é um SQL com parâmetros de consulta, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que representa os valores originais no banco de dados.</xref:System.Collections.IDictionary> Se não existem parâmetros associados com a consulta ou se o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>não é um SQL com parâmetros de consulta, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas atualizadas no banco de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> não é possível estabelecer uma conexão com a fonte de dados subjacente."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>é de propriedade <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  id: UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia de caracteres SQL que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto usa para atualizar dados no banco de dados subjacente."
  remarks: "Como produtos de banco de dados diferente usam tipos diferentes de SQL, a sintaxe da cadeia de caracteres SQL depende do provedor ADO.NET atual que está sendo usado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se a cadeia de caracteres SQL é uma consulta parametrizada ou um comando, o espaço reservado do parâmetro também depende do provedor ADO.NET que está sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=fullName>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, o espaço reservado do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou <xref:System.Data.OleDb?displayProperty=fullName>, o espaço reservado do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       A propriedade UpdateCommand pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.       O valor da propriedade UpdateCommand armazenados na exibição de estado."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> control is selected. This example also includes some post-processing—after a record is updated, an e-mail message notification is sent.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_1.aspx)]  \n  \n The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_2.aspx)]"
  syntax:
    content: public string UpdateCommand { get; set; }
    return:
      type: System.String
      description: "Um SQL de cadeia de caracteres que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> usa para atualizar dados."
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  id: UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o texto do <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>propriedade é uma instrução SQL ou o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  remarks: "O valor a UpdateCommandType propriedade é armazenado na exibição estado."
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores. O padrão é o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado não é um do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando uma operação de atualização é concluída."
  remarks: "Manipule o evento Updated para examinar os valores de parâmetros de saída depois de uma operação de atualização foi concluída. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objeto que está associado com o evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_139_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_139_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são usados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  remarks: "Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>propriedade contém uma consulta SQL parametrizada, a coleção UpdateParameters contém qualquer <xref:System.Web.UI.WebControls.Parameter>objetos que correspondem aos espaços reservados de parâmetro que estão na cadeia de caracteres SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>       Nomes de parâmetro podem ser afetados pelo <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>propriedade; especificamente, se o nome identifica uma chave primária, como uma chave que é especificado usando o `DataKeyNames` propriedade, ou em Excluir e atualizar cenários onde o <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>está definida como o <xref:System.Web.UI.ConflictOptions>valor e um conjunto de `oldValues` são passados para o método de dados correspondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> Nesse caso, a cadeia de caracteres de formato é aplicada a cada nome de parâmetro no `oldValues` coleção.       Dependendo do provedor ADO.NET, a ordem dos parâmetros na coleção UpdateParameters pode ser importante. O <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>provedores associar os parâmetros na coleção de acordo com a ordem na qual os parâmetros aparecem na consulta SQL parametrizada.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> O <xref:System.Data.SqlClient?displayProperty=fullName>provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com um alias de espaço reservado na consulta SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1249_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1249_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros usados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de atualização."
  remarks: "Manipular o evento de atualização para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.SqlDataSource>controle executa a operação de atualização.</xref:System.Web.UI.WebControls.SqlDataSource>       A conexão à fonte de dados subjacente não ainda estiver aberto quando o delegado de manipulador de eventos é chamado. Portanto, você não pode cancelar a operação diretamente ao chamar o <xref:System.Data.Common.DbCommand.Cancel%2A>método no <xref:System.Data.Common.DbCommand>objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objeto.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> No entanto, você pode cancelar a operação de banco de dados, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>para `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_45_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_45_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView(SqlDataSource,String,HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.SqlDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSource
  nameWithType: SqlDataSource
  fullName: System.Web.UI.WebControls.SqlDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceCommandType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandType
  nameWithType: SqlDataSourceCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventHandler
  nameWithType: SqlDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventHandler
  nameWithType: SqlDataSourceCommandEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventHandler
  nameWithType: SqlDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventArgs
  nameWithType: SqlDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventArgs
  nameWithType: SqlDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventArgs
  nameWithType: SqlDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
- uid: System.Web.UI.DataSourceCapabilities
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCapabilities
  nameWithType: DataSourceCapabilities
  fullName: System.Web.UI.DataSourceCapabilities
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventHandler
  nameWithType: SqlDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView.SqlDataSourceView
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete
  nameWithType: SqlDataSourceView.Delete
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: SqlDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: SqlDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: SqlDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: SqlDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert
  nameWithType: SqlDataSourceView.Insert
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: SqlDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: SqlDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: SqlDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: SqlDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: SqlDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: SqlDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: SqlDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: SqlDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: SqlDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: SqlDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: SqlDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select
  nameWithType: SqlDataSourceView.Select
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: SqlDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update
  nameWithType: SqlDataSourceView.Update
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
