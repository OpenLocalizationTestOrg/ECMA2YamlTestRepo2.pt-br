### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.DiscretionaryAcl
  id: DiscretionaryAcl
  children:
  - System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)
  - System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)
  - System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)
  - System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  langs:
  - csharp
  name: DiscretionaryAcl
  nameWithType: DiscretionaryAcl
  fullName: System.Security.AccessControl.DiscretionaryAcl
  type: Class
  summary: "Representa uma lista de controle de acesso discricionário (DACL)."
  syntax:
    content: 'public sealed class DiscretionaryAcl : System.Security.AccessControl.CommonAcl'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAcl
  - System.Security.AccessControl.CommonAcl
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonAcl.BinaryLength
  - System.Security.AccessControl.CommonAcl.Count
  - System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CommonAcl.IsCanonical
  - System.Security.AccessControl.CommonAcl.IsContainer
  - System.Security.AccessControl.CommonAcl.IsDS
  - System.Security.AccessControl.CommonAcl.Item(System.Int32)
  - System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - System.Security.AccessControl.CommonAcl.Revision
  - System.Security.AccessControl.GenericAcl.AclRevision
  - System.Security.AccessControl.GenericAcl.AclRevisionDS
  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  - System.Security.AccessControl.GenericAcl.GetEnumerator
  - System.Security.AccessControl.GenericAcl.IsSynchronized
  - System.Security.AccessControl.GenericAcl.MaxBinaryLength
  - System.Security.AccessControl.GenericAcl.SyncRoot
  - System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Boolean,System.Int32)'
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: DiscretionaryAcl(Boolean,Boolean,Int32)
  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Int32)
  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> classe com os valores especificados."
  syntax:
    content: public DiscretionaryAcl (bool isContainer, bool isDS, int capacity);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o novo <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto é um contêiner."
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o novo <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> é um objeto de diretório lista de controle de acesso (ACL)."
    - id: capacity
      type: System.Int32
      description: "O número de entradas de controle de acesso (ACEs) isso <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto pode conter. Esse número é a ser usado apenas como uma dica."
  overload: System.Security.AccessControl.DiscretionaryAcl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)
  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)'
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: DiscretionaryAcl(Boolean,Boolean,RawAcl)
  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,RawAcl)
  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,RawAcl)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> classe com os valores especificados especificado <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref> objeto."
  remarks: "As entradas de controle de acesso (ACEs) no <xref:System.Security.AccessControl.RawAcl>objeto são clonados.</xref:System.Security.AccessControl.RawAcl>"
  syntax:
    content: public DiscretionaryAcl (bool isContainer, bool isDS, System.Security.AccessControl.RawAcl rawAcl);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o novo <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto é um contêiner."
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o novo <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> é um objeto de diretório lista de controle de acesso (ACL)."
    - id: rawAcl
      type: System.Security.AccessControl.RawAcl
      description: "Subjacente <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref> objeto para o novo <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto. Especifique <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para criar uma ACL vazia."
  overload: System.Security.AccessControl.DiscretionaryAcl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)
  id: '#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)'
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: DiscretionaryAcl(Boolean,Boolean,Byte,Int32)
  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Byte,Int32)
  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Byte,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> classe com os valores especificados."
  syntax:
    content: public DiscretionaryAcl (bool isContainer, bool isDS, byte revision, int capacity);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o novo <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto é um contêiner."
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o novo <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> é um objeto de diretório lista de controle de acesso (ACL)."
    - id: revision
      type: System.Byte
      description: "O nível de revisão do novo <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto."
    - id: capacity
      type: System.Int32
      description: "O número de entradas de controle de acesso (ACEs) isso <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto pode conter. Esse número é a ser usado apenas como uma dica."
  overload: System.Security.AccessControl.DiscretionaryAcl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  id: AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: AddAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Adiciona uma entrada de controle de acesso (ACE) com as configurações especificadas para o atual <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto."
  syntax:
    content: public void AddAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAccessRule rule);
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
      description: "O tipo de controle de acesso (permitir ou negar) para adicionar."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> ao qual adicionar um ACE."
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "O <xref href=&quot;System.Security.AccessControl.ObjectAccessRule&quot;> </xref> para o acesso de novo."
  overload: System.Security.AccessControl.DiscretionaryAcl.AddAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Adiciona uma entrada de controle de acesso (ACE) com as configurações especificadas para o atual <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto."
  remarks: "Esse método pode causar ACEs existentes a serem mesclados."
  syntax:
    content: public void AddAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags);
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
      description: "O tipo de controle de acesso (permitir ou negar) para adicionar."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> ao qual adicionar um ACE."
    - id: accessMask
      type: System.Int32
      description: "A regra de acesso para o novo ACE."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Sinalizadores que especificam as propriedades de herança da nova ACE."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Sinalizadores que especificam as propriedades de propagação de herança para as ACEs de novo."
  overload: System.Security.AccessControl.DiscretionaryAcl.AddAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Adiciona uma entrada de controle de acesso (ACE) com as configurações especificadas para o atual <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto. Use esse método para o objeto de diretório, listas de controle de acesso (ACLs) ao especificar o tipo de objeto ou o tipo de objeto herdado para o novo ACE."
  remarks: "Esse método pode causar ACEs existentes a serem mesclados."
  syntax:
    content: public void AddAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType);
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
      description: "O tipo de controle de acesso (permitir ou negar) para adicionar."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> ao qual adicionar um ACE."
    - id: accessMask
      type: System.Int32
      description: "A regra de acesso para o novo ACE."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Sinalizadores que especificam as propriedades de herança da nova ACE."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Sinalizadores que especificam as propriedades de propagação de herança para as ACEs de novo."
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "Sinalizadores que especificam se o `objectType` e `inheritedObjectType` contêm parâmetros não<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> valores."
    - id: objectType
      type: System.Guid
      description: "A identidade da classe de objetos aos quais se aplica a ACE de novo."
    - id: inheritedObjectType
      type: System.Guid
      description: "A identidade da classe de objetos filho que podem herdar as ACEs de novo."
  overload: System.Security.AccessControl.DiscretionaryAcl.AddAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  id: RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: RemoveAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove a regra de controle de acesso especificado atual <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto."
  syntax:
    content: public bool RemoveAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAccessRule rule);
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
      description: "O tipo de controle de acesso (permitir ou negar) para remover."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> do qual remover uma regra de controle de acesso."
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "O <xref href=&quot;System.Security.AccessControl.ObjectAccessRule&quot;> </xref> do qual remover o acesso."
    return:
      type: System.Boolean
      description: "Retorna <xref:System.Boolean>.</xref:System.Boolean>"
  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove a regra de controle de acesso especificado atual <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto."
  remarks: "Remoção de acesso é feita usando um algoritmo complexo que pode adicionar entradas de controle de acesso (ACEs) além de removê-los."
  syntax:
    content: public bool RemoveAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags);
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
      description: "O tipo de controle de acesso (permitir ou negar) para remover."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> do qual remover uma regra de controle de acesso."
    - id: accessMask
      type: System.Int32
      description: "A máscara de acesso para a regra a ser removido."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Sinalizadores que especificam as propriedades de herança da regra a ser removido."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Sinalizadores que especificam as propriedades de propagação de herança para a regra a ser removido."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esse método remove com êxito o acesso especificado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove a regra de controle de acesso especificado atual <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto. Use esse método para o objeto de diretório, listas de controle de acesso (ACLs) ao especificar o tipo de objeto ou o tipo de objeto herdado."
  remarks: "Remoção de acesso é feita usando um algoritmo complexo que pode adicionar entradas de controle de acesso (ACEs) além de removê-los."
  syntax:
    content: public bool RemoveAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType);
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
      description: "O tipo de controle de acesso (permitir ou negar) para remover."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> do qual remover uma regra de controle de acesso."
    - id: accessMask
      type: System.Int32
      description: "A máscara de acesso para a regra de controle de acesso a ser removido."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Sinalizadores que especificam as propriedades de herança da regra de controle de acesso a ser removido."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Sinalizadores que especificam as propriedades de propagação de herança para a regra de controle de acesso a ser removido."
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "Sinalizadores que especificam se o `objectType` e `inheritedObjectType` contêm parâmetros não<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> valores."
    - id: objectType
      type: System.Guid
      description: "A identidade da classe de objetos aos quais se aplica a regra de controle de acesso removido."
    - id: inheritedObjectType
      type: System.Guid
      description: "A identidade da classe de objetos filho que pode herdar a regra de controle de acesso removido."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esse método remove com êxito o acesso especificado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  id: RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: RemoveAccessSpecific(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove a entrada de controle de acesso (ACE) especificado atual <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto."
  syntax:
    content: public void RemoveAccessSpecific (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAccessRule rule);
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
      description: "O tipo de controle de acesso (permitir ou negar) para remover."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> do qual remover a ACE."
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "O <xref href=&quot;System.Security.AccessControl.ObjectAccessRule&quot;> </xref> do qual remover o acesso."
  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove a entrada de controle de acesso (ACE) especificado atual <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto."
  syntax:
    content: public void RemoveAccessSpecific (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags);
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
      description: "O tipo de controle de acesso (permitir ou negar) para remover."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> do qual remover a ACE."
    - id: accessMask
      type: System.Int32
      description: "A máscara de acesso para a ACE ser removido."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Sinalizadores que especificam as propriedades de herança de ACE para ser removido."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Sinalizadores que especificam as propriedades de propagação de herança para as ACEs a ser removido."
  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove a entrada de controle de acesso (ACE) especificado atual <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objeto. Use esse método para o objeto de diretório, listas de controle de acesso (ACLs) ao especificar o tipo de objeto ou o tipo de objeto herdado para o ACE a ser removido."
  syntax:
    content: public void RemoveAccessSpecific (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType);
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
      description: "O tipo de controle de acesso (permitir ou negar) para remover."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> do qual remover a ACE."
    - id: accessMask
      type: System.Int32
      description: "A máscara de acesso para a ACE ser removido."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Sinalizadores que especificam as propriedades de herança de ACE para ser removido."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Sinalizadores que especificam as propriedades de propagação de herança para as ACEs a ser removido."
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "Sinalizadores que especificam se o `objectType` e `inheritedObjectType` contêm parâmetros não<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> valores."
    - id: objectType
      type: System.Guid
      description: "A identidade da classe de objetos aos quais se aplica a ACE removida."
    - id: inheritedObjectType
      type: System.Guid
      description: "A identidade da classe de objetos filho que pode herdar a ACE removida."
  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  id: SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: SetAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Define o controle de acesso especificado especificado <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  syntax:
    content: public void SetAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAccessRule rule);
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
      description: "O tipo de controle de acesso (permitir ou negar) para definir."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> para o qual definir uma ACE."
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "O <xref href=&quot;System.Security.AccessControl.ObjectAccessRule&quot;> </xref> para o qual definir o acesso."
  overload: System.Security.AccessControl.DiscretionaryAcl.SetAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Define o controle de acesso especificado especificado <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  remarks: "Isso remove método todos os existentes controle entradas de acesso (ACEs) que correspondem a ambos especificadas <xref:System.Security.Principal.SecurityIdentifier>objeto e o qualificador de acesso especificado (permitir ou negar).</xref:System.Security.Principal.SecurityIdentifier>"
  syntax:
    content: public void SetAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags);
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
      description: "O tipo de controle de acesso (permitir ou negar) para definir."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> para o qual definir uma ACE."
    - id: accessMask
      type: System.Int32
      description: "A regra de acesso para o novo ACE."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Sinalizadores que especificam as propriedades de herança da nova ACE."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Sinalizadores que especificam as propriedades de propagação de herança para as ACEs de novo."
  overload: System.Security.AccessControl.DiscretionaryAcl.SetAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DiscretionaryAcl
  langs:
  - csharp
  name: SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Define o controle de acesso especificado especificado <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  remarks: "Isso remove método todos os existentes controle entradas de acesso (ACEs) que correspondem a ambos especificadas <xref:System.Security.Principal.SecurityIdentifier>objeto e o qualificador de acesso especificado (permitir ou negar).</xref:System.Security.Principal.SecurityIdentifier>"
  syntax:
    content: public void SetAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType);
    parameters:
    - id: accessType
      type: System.Security.AccessControl.AccessControlType
      description: "O tipo de controle de acesso (permitir ou negar) para definir."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> para o qual definir uma ACE."
    - id: accessMask
      type: System.Int32
      description: "A regra de acesso para o novo ACE."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Sinalizadores que especificam as propriedades de herança da nova ACE."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Sinalizadores que especificam as propriedades de propagação de herança para as ACEs de novo."
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "Sinalizadores que especificam se o `objectType` e `inheritedObjectType` contêm parâmetros não<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> valores."
    - id: objectType
      type: System.Guid
      description: "A identidade da classe de objetos aos quais se aplica a ACE de novo."
    - id: inheritedObjectType
      type: System.Guid
      description: "A identidade da classe de objetos filho que podem herdar as ACEs de novo."
  overload: System.Security.AccessControl.DiscretionaryAcl.SetAccess*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: System.Security.AccessControl.CommonAcl
- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: DiscretionaryAcl(Boolean,Boolean,Int32)
  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Int32)
  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: DiscretionaryAcl(Boolean,Boolean,RawAcl)
  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,RawAcl)
  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,RawAcl)
- uid: System.Security.AccessControl.RawAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: RawAcl
  nameWithType: RawAcl
  fullName: System.Security.AccessControl.RawAcl
- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: DiscretionaryAcl(Boolean,Boolean,Byte,Int32)
  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Byte,Int32)
  fullName: System.Security.AccessControl.DiscretionaryAcl.DiscretionaryAcl(Boolean,Boolean,Byte,Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: AddAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.ObjectAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAccessRule
  nameWithType: ObjectAccessRule
  fullName: System.Security.AccessControl.ObjectAccessRule
- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  fullName: System.Security.AccessControl.DiscretionaryAcl.AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
- uid: System.Security.AccessControl.ObjectAceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAceFlags
  nameWithType: ObjectAceFlags
  fullName: System.Security.AccessControl.ObjectAceFlags
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: RemoveAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: RemoveAccessSpecific(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,ObjectAccessRule)
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  fullName: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: SetAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
  fullName: System.Security.AccessControl.DiscretionaryAcl.SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor*
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: DiscretionaryAcl
  nameWithType: DiscretionaryAcl.DiscretionaryAcl
- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess*
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: AddAccess
  nameWithType: DiscretionaryAcl.AddAccess
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess*
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: RemoveAccess
  nameWithType: DiscretionaryAcl.RemoveAccess
- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific*
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: RemoveAccessSpecific
  nameWithType: DiscretionaryAcl.RemoveAccessSpecific
- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess*
  parent: System.Security.AccessControl.DiscretionaryAcl
  isExternal: false
  name: SetAccess
  nameWithType: DiscretionaryAcl.SetAccess
