### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Table
  id: Table
  children:
  - System.Web.UI.WebControls.Table.#ctor
  - System.Web.UI.WebControls.Table.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Table.BackImageUrl
  - System.Web.UI.WebControls.Table.Caption
  - System.Web.UI.WebControls.Table.CaptionAlign
  - System.Web.UI.WebControls.Table.CellPadding
  - System.Web.UI.WebControls.Table.CellSpacing
  - System.Web.UI.WebControls.Table.CreateControlCollection
  - System.Web.UI.WebControls.Table.CreateControlStyle
  - System.Web.UI.WebControls.Table.GridLines
  - System.Web.UI.WebControls.Table.HorizontalAlign
  - System.Web.UI.WebControls.Table.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Table.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Table.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Table.Rows
  - System.Web.UI.WebControls.Table.SupportsDisabledAttribute
  - System.Web.UI.WebControls.Table.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  langs:
  - csharp
  name: Table
  nameWithType: Table
  fullName: System.Web.UI.WebControls.Table
  type: Class
  summary: "Exibe uma tabela em uma página da Web."
  remarks: "Neste tópico:- [Introdução](#introduction)      -   [acessibilidade](#accessibility)      -   [sintaxe declarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # Introdução a tabela controle permite que você criar uma tabela HTML e especifique suas características de uma maneira simples.             Uma tabela pode ser criada em tempo de design dado algum conteúdo estático, mas a potência de um controle de servidor Web de tabela geralmente é feita quando a tabela é criada programaticamente com conteúdo dinâmico.      > [!NOTE] > Se o `controlRenderingCompatibilityVersion` atributo do elemento no arquivo Web. config é definido como `3.5`, o controle apresenta um `border` atributo é definido como &quot;0&quot; no HTML `table` elemento.       É importante lembrar-se de que qualquer programática adição ou modificação de linhas da tabela ou células não persistirão nas postagens para o servidor. Isso ocorre porque as células e linhas da tabela são controles de seus próprios e não as propriedades do controle de tabela. Para manter as alterações à tabela, linhas e células devem ser reconstruídas após cada postback. Na verdade, se modificações significativas são esperadas, é recomendável que um <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.DataGrid>, ou <xref:System.Web.UI.WebControls.GridView>controle a ser usado em vez do controle de tabela.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataList> Como resultado, a classe de tabela é usada principalmente por desenvolvedores de controle.      > [!CAUTION] > Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](~/add/includes/ajax-current-ext-md.md), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](~/add/includes/ajax-current-ext-md.md), e [Validando a entrada do usuário em páginas da Web do ASP.NET](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;accessibility&quot;></a># # Acessibilidade para obter informações sobre como configurar este controle para que ele gera marcação que está de acordo com os padrões de acessibilidade, consulte [acessibilidade no Visual Studio e ASP.NET](~/add/includes/ajax-current-ext-md.md) e [controles ASP.NET e acessibilidade](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;declarative_syntax&quot;></a>    ## Declarative Syntax      ```   <asp:Table       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BackImageUrl=&quot;uri&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >               <asp:TableFooterRow                   AccessKey=&quot;string&quot;                   BackColor=&quot;color name|#dddddd&quot;                   BorderColor=&quot;color name|#dddddd&quot;                   BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                       Groove|Ridge|Inset|Outset&quot;                   BorderWidth=&quot;size&quot;                   CssClass=&quot;string&quot;                   Enabled=&quot;True|False&quot;                   EnableTheming=&quot;True|False&quot;                   EnableViewState=&quot;True|False&quot;                   Font-Bold=&quot;True|False&quot;                   Font-Italic=&quot;True|False&quot;                   Font-Names=&quot;string&quot;                   Font-Overline=&quot;True|False&quot;                   Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|                       Small|Medium|Large|X-Large|XX-Large&quot;                   Font-Strikeout=&quot;True|False&quot;                   Font-Underline=&quot;True|False&quot;                   ForeColor=&quot;color name|#dddddd&quot;                   Height=&quot;size&quot;                   HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;                   ID=&quot;string&quot;                   OnDataBinding=&quot;DataBinding event handler&quot;                   OnDisposed=&quot;Disposed event handler&quot;                   OnInit=&quot;Init event handler&quot;                   OnLoad=&quot;Load event handler&quot;                   OnPreRender=&quot;PreRender event handler&quot;                   OnUnload=&quot;Unload event handler&quot;                   runat=&quot;server&quot;                   SkinID=&quot;string&quot;                   Style=&quot;string&quot;                   TabIndex=&quot;integer&quot;                   TableSection=&quot;TableHeader|TableBody|TableFooter&quot;                   ToolTip=&quot;string&quot;                   VerticalAlign=&quot;NotSet|Top|Middle|Bottom&quot;                   Visible=&quot;True|False&quot;                   Width=&quot;size&quot;   >                           <asp:TableCell                               AccessKey=&quot;string&quot;                               AssociatedHeaderCellID=&quot;string&quot;                               BackColor=&quot;color name|#dddddd&quot;                               BorderColor=&quot;color name|#dddddd&quot;                               BorderStyle=&quot;NotSet|None|Dotted|Dashed|                                   Solid|Double|Groove|Ridge|Inset|                                   Outset&quot;                               BorderWidth=&quot;size&quot;                               ColumnSpan=&quot;integer&quot;                               CssClass=&quot;string&quot;                               Enabled=&quot;True|False&quot;                               EnableTheming=&quot;True|False&quot;                               EnableViewState=&quot;True|False&quot;                               Font-Bold=&quot;True|False&quot;                               Font-Italic=&quot;True|False&quot;                               Font-Names=&quot;string&quot;                               Font-Overline=&quot;True|False&quot;                               Font-Size=&quot;string|Smaller|Larger|                                   XX-Small|X-Small|Small|Medium|Large|                                   X-Large|XX-Large&quot;                               Font-Strikeout=&quot;True|False&quot;                               Font-Underline=&quot;True|False&quot;                               ForeColor=&quot;color name|#dddddd&quot;                               Height=&quot;size&quot;                               HorizontalAlign=&quot;NotSet|Left|Center|                               Right|Justify&quot;                               ID=&quot;string&quot;                               OnDataBinding=&quot;DataBinding event handler&quot;                               OnDisposed=&quot;Disposed event handler&quot;                               OnInit=&quot;Init event handler&quot;                               OnLoad=&quot;Load event handler&quot;                               OnPreRender=&quot;PreRender event handler&quot;                               OnUnload=&quot;Unload event handler&quot;                               RowSpan=&quot;integer&quot;                               runat=&quot;server&quot;                               SkinID=&quot;string&quot;                               Style=&quot;string&quot;                               TabIndex=&quot;integer&quot;                               Text=&quot;string&quot;                               ToolTip=&quot;string&quot;                               VerticalAlign=&quot;NotSet|Top|Middle|Bottom&quot;                               Visible=&quot;True|False&quot;                               Width=&quot;size&quot;                               Wrap=&quot;True|False&quot;                           />                           <asp:TableHeaderCell                               AbbreviatedText=&quot;string&quot;                               AccessKey=&quot;string&quot;                               AssociatedHeaderCellID=&quot;string&quot;                               BackColor=&quot;color name|#dddddd&quot;                               BorderColor=&quot;color name|#dddddd&quot;                               BorderStyle=&quot;NotSet|None|Dotted|Dashed|                                   Solid|Double|Groove|Ridge|Inset|                                   Outset&quot;                               BorderWidth=&quot;size&quot;                               CategoryText=&quot;string&quot;                               ColumnSpan=&quot;integer&quot;                               CssClass=&quot;string&quot;                               Enabled=&quot;True|False&quot;                               EnableTheming=&quot;True|False&quot;                               EnableViewState=&quot;True|False&quot;                               Font-Bold=&quot;True|False&quot;                               Font-Italic=&quot;True|False&quot;                               Font-Names=&quot;string&quot;                               Font-Overline=&quot;True|False&quot;                               Font-Size=&quot;string|Smaller|Larger|                                   XX-Small|X-Small|Small|Medium|Large|                                   X-Large|XX-Large&quot;                               Font-Strikeout=&quot;True|False&quot;                               Font-Underline=&quot;True|False&quot;                               ForeColor=&quot;color name|#dddddd&quot;                               Height=&quot;size&quot;                               HorizontalAlign=&quot;NotSet|Left|Center|                                   Right|Justify&quot;                               ID=&quot;string&quot;                               OnDataBinding=&quot;DataBinding event handler&quot;                               OnDisposed=&quot;Disposed event handler&quot;                               OnInit=&quot;Init event handler&quot;                               OnLoad=&quot;Load event handler&quot;                               OnPreRender=&quot;PreRender event handler&quot;                               OnUnload=&quot;Unload event handler&quot;                               RowSpan=&quot;integer&quot;                               runat=&quot;server&quot;                               Scope=&quot;NotSet|Row|Column&quot;                               SkinID=&quot;string&quot;                               Style=&quot;string&quot;                               TabIndex=&quot;integer&quot;                               Text=&quot;string&quot;                               ToolTip=&quot;string&quot;                               VerticalAlign=&quot;NotSet|Top|Middle|Bottom&quot;                               Visible=&quot;True|False&quot;                               Width=&quot;size&quot;                               Wrap=&quot;True|False&quot;                           />               </asp:TableFooterRow>               <asp:TableHeaderRow                   AccessKey=&quot;string&quot;                   BackColor=&quot;color name|#dddddd&quot;                   BorderColor=&quot;color name|#dddddd&quot;                   BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                       Groove|Ridge|Inset|Outset&quot;                   BorderWidth=&quot;size&quot;                   CssClass=&quot;string&quot;                   Enabled=&quot;True|False&quot;                   EnableTheming=&quot;True|False&quot;                   EnableViewState=&quot;True|False&quot;                   Font-Bold=&quot;True|False&quot;                   Font-Italic=&quot;True|False&quot;                   Font-Names=&quot;string&quot;                   Font-Overline=&quot;True|False&quot;                   Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|                       Small|Medium|Large|X-Large|XX-Large&quot;                   Font-Strikeout=&quot;True|False&quot;                   Font-Underline=&quot;True|False&quot;                   ForeColor=&quot;color name|#dddddd&quot;                   Height=&quot;size&quot;                   HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;                   ID=&quot;string&quot;                   OnDataBinding=&quot;DataBinding event handler&quot;                   OnDisposed=&quot;Disposed event handler&quot;                   OnInit=&quot;Init event handler&quot;                   OnLoad=&quot;Load event handler&quot;                   OnPreRender=&quot;PreRender event handler&quot;                   OnUnload=&quot;Unload event handler&quot;                   runat=&quot;server&quot;                   SkinID=&quot;string&quot;                   Style=&quot;string&quot;                   TabIndex=&quot;integer&quot;                   TableSection=&quot;TableHeader|TableBody|TableFooter&quot;                   ToolTip=&quot;string&quot;                   VerticalAlign=&quot;NotSet|Top|Middle|Bottom&quot;                   Visible=&quot;True|False&quot;                   Width=&quot;size&quot;   >                           <asp:TableCell                               AccessKey=&quot;string&quot;                               AssociatedHeaderCellID=&quot;string&quot;                               BackColor=&quot;color name|#dddddd&quot;                               BorderColor=&quot;color name|#dddddd&quot;                               BorderStyle=&quot;NotSet|None|Dotted|Dashed|                                   Solid|Double|Groove|Ridge|Inset|                                   Outset&quot;                               BorderWidth=&quot;size&quot;                               ColumnSpan=&quot;integer&quot;                               CssClass=&quot;string&quot;                               Enabled=&quot;True|False&quot;                               EnableTheming=&quot;True|False&quot;                               EnableViewState=&quot;True|False&quot;                               Font-Bold=&quot;True|False&quot;                               Font-Italic=&quot;True|False&quot;                               Font-Names=&quot;string&quot;                               Font-Overline=&quot;True|False&quot;                               Font-Size=&quot;string|Smaller|Larger|                                   XX-Small|X-Small|Small|Medium|Large|                                   X-Large|XX-Large&quot;                               Font-Strikeout=&quot;True|False&quot;                               Font-Underline=&quot;True|False&quot;                               ForeColor=&quot;color name|#dddddd&quot;                               Height=&quot;size&quot;                               HorizontalAlign=&quot;NotSet|Left|Center|                                   Right|Justify&quot;                               ID=&quot;string&quot;                               OnDataBinding=&quot;DataBinding event handler&quot;                               OnDisposed=&quot;Disposed event handler&quot;                               OnInit=&quot;Init event handler&quot;                               OnLoad=&quot;Load event handler&quot;                               OnPreRender=&quot;PreRender event handler&quot;                               OnUnload=&quot;Unload event handler&quot;                               RowSpan=&quot;integer&quot;                               runat=&quot;server&quot;                               SkinID=&quot;string&quot;                               Style=&quot;string&quot;                               TabIndex=&quot;integer&quot;                               Text=&quot;string&quot;                               ToolTip=&quot;string&quot;                               VerticalAlign=&quot;NotSet|Top|Middle|Bottom&quot;                               Visible=&quot;True|False&quot;                               Width=&quot;size&quot;                               Wrap=&quot;True|False&quot;                           />                           <asp:TableHeaderCell                               AbbreviatedText=&quot;string&quot;                               AccessKey=&quot;string&quot;                               AssociatedHeaderCellID=&quot;string&quot;                               BackColor=&quot;color name|#dddddd&quot;                               BorderColor=&quot;color name|#dddddd&quot;                               BorderStyle=&quot;NotSet|None|Dotted|Dashed|                                   Solid|Double|Groove|Ridge|Inset|                                   Outset&quot;                               BorderWidth=&quot;size&quot;                               CategoryText=&quot;string&quot;                               ColumnSpan=&quot;integer&quot;                               CssClass=&quot;string&quot;                               Enabled=&quot;True|False&quot;                               EnableTheming=&quot;True|False&quot;                               EnableViewState=&quot;True|False&quot;                               Font-Bold=&quot;True|False&quot;                               Font-Italic=&quot;True|False&quot;                               Font-Names=&quot;string&quot;                               Font-Overline=&quot;True|False&quot;                               Font-Size=&quot;string|Smaller|Larger|                                   XX-Small|X-Small|Small|Medium|Large|                                   X-Large|XX-Large&quot;                               Font-Strikeout=&quot;True|False&quot;                               Font-Underline=&quot;True|False&quot;                               ForeColor=&quot;color name|#dddddd&quot;                               Height=&quot;size&quot;                               HorizontalAlign=&quot;NotSet|Left|Center|                                   Right|Justify&quot;                               ID=&quot;string&quot;                               OnDataBinding=&quot;DataBinding event handler&quot;                               OnDisposed=&quot;Disposed event handler&quot;                               OnInit=&quot;Init event handler&quot;                               OnLoad=&quot;Load event handler&quot;                               OnPreRender=&quot;PreRender event handler&quot;                               OnUnload=&quot;Unload event handler&quot;                               RowSpan=&quot;integer&quot;                               runat=&quot;server&quot;                               Scope=&quot;NotSet|Row|Column&quot;                               SkinID=&quot;string&quot;                               Style=&quot;string&quot;                               TabIndex=&quot;integer&quot;                               Text=&quot;string&quot;                               ToolTip=&quot;string&quot;                               VerticalAlign=&quot;NotSet|Top|Middle|Bottom&quot;                               Visible=&quot;True|False&quot;                               Width=&quot;size&quot;                               Wrap=&quot;True|False&quot;                           />               </asp:TableHeaderRow>               <asp:TableRow                   AccessKey=&quot;string&quot;                   BackColor=&quot;color name|#dddddd&quot;                   BorderColor=&quot;color name|#dddddd&quot;                   BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                       Groove|Ridge|Inset|Outset&quot;                   BorderWidth=&quot;size&quot;                   CssClass=&quot;string&quot;                   Enabled=&quot;True|False&quot;                   EnableTheming=&quot;True|False&quot;                   EnableViewState=&quot;True|False&quot;                   Font-Bold=&quot;True|False&quot;                   Font-Italic=&quot;True|False&quot;                   Font-Names=&quot;string&quot;                   Font-Overline=&quot;True|False&quot;                   Font-Size=&quot;string|Smaller|Larger|XX-Small|                       X-Small|Small|Medium|Large|X-Large|XX-Large&quot;                   Font-Strikeout=&quot;True|False&quot;                   Font-Underline=&quot;True|False&quot;                   ForeColor=&quot;color name|#dddddd&quot;                   Height=&quot;size&quot;                   HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;                   ID=&quot;string&quot;                   OnDataBinding=&quot;DataBinding event handler&quot;                   OnDisposed=&quot;Disposed event handler&quot;                   OnInit=&quot;Init event handler&quot;                   OnLoad=&quot;Load event handler&quot;                   OnPreRender=&quot;PreRender event handler&quot;                   OnUnload=&quot;Unload event handler&quot;                   runat=&quot;server&quot;                   SkinID=&quot;string&quot;                   Style=&quot;string&quot;                   TabIndex=&quot;integer&quot;                   TableSection=&quot;TableHeader|TableBody|TableFooter&quot;                   ToolTip=&quot;string&quot;                   VerticalAlign=&quot;NotSet|Top|Middle|Bottom&quot;                   Visible=&quot;True|False&quot;                   Width=&quot;size&quot;   >                           <asp:TableCell                               AccessKey=&quot;string&quot;                               AssociatedHeaderCellID=&quot;string&quot;                               BackColor=&quot;color name|#dddddd&quot;                               BorderColor=&quot;color name|#dddddd&quot;                               BorderStyle=&quot;NotSet|None|Dotted|Dashed|                                   Solid|Double|Groove|Ridge|Inset|                                   Outset&quot;                               BorderWidth=&quot;size&quot;                               ColumnSpan=&quot;integer&quot;                               CssClass=&quot;string&quot;                               Enabled=&quot;True|False&quot;                               EnableTheming=&quot;True|False&quot;                               EnableViewState=&quot;True|False&quot;                               Font-Bold=&quot;True|False&quot;                               Font-Italic=&quot;True|False&quot;                               Font-Names=&quot;string&quot;                               Font-Overline=&quot;True|False&quot;                               Font-Size=&quot;string|Smaller|Larger|                                   XX-Small|X-Small|Small|Medium|Large|                                   X-Large|XX-Large&quot;                               Font-Strikeout=&quot;True|False&quot;                               Font-Underline=&quot;True|False&quot;                               ForeColor=&quot;color name|#dddddd&quot;                               Height=&quot;size&quot;                               HorizontalAlign=&quot;NotSet|Left|Center|                                   Right|Justify&quot;                               ID=&quot;string&quot;                               OnDataBinding=&quot;DataBinding event handler&quot;                               OnDisposed=&quot;Disposed event handler&quot;                               OnInit=&quot;Init event handler&quot;                               OnLoad=&quot;Load event handler&quot;                               OnPreRender=&quot;PreRender event handler&quot;                               OnUnload=&quot;Unload event handler&quot;                               RowSpan=&quot;integer&quot;                               runat=&quot;server&quot;                               SkinID=&quot;string&quot;                               Style=&quot;string&quot;                               TabIndex=&quot;integer&quot;                               Text=&quot;string&quot;                               ToolTip=&quot;string&quot;                               VerticalAlign=&quot;NotSet|Top|Middle|Bottom&quot;                               Visible=&quot;True|False&quot;                               Width=&quot;size&quot;                               Wrap=&quot;True|False&quot;                           />                           <asp:TableHeaderCell                               AbbreviatedText=&quot;string&quot;                               AccessKey=&quot;string&quot;                               AssociatedHeaderCellID=&quot;string&quot;                               BackColor=&quot;color name|#dddddd&quot;                               BorderColor=&quot;color name|#dddddd&quot;                               BorderStyle=&quot;NotSet|None|Dotted|Dashed|                                   Solid|Double|Groove|Ridge|Inset|                                   Outset&quot;                               BorderWidth=&quot;size&quot;                               CategoryText=&quot;string&quot;                               ColumnSpan=&quot;integer&quot;                               CssClass=&quot;string&quot;                               Enabled=&quot;True|False&quot;                               EnableTheming=&quot;True|False&quot;                               EnableViewState=&quot;True|False&quot;                               Font-Bold=&quot;True|False&quot;                               Font-Italic=&quot;True|False&quot;                               Font-Names=&quot;string&quot;                               Font-Overline=&quot;True|False&quot;                               Font-Size=&quot;string|Smaller|Larger|                                   XX-Small|X-Small|Small|Medium|Large|                                   X-Large|XX-Large&quot;                               Font-Strikeout=&quot;True|False&quot;                               Font-Underline=&quot;True|False&quot;                               ForeColor=&quot;color name|#dddddd&quot;                               Height=&quot;size&quot;                               HorizontalAlign=&quot;NotSet|Left|Center|                                   Right|Justify&quot;                               ID=&quot;string&quot;                               OnDataBinding=&quot;DataBinding event handler&quot;                               OnDisposed=&quot;Disposed event handler&quot;                               OnInit=&quot;Init event handler&quot;                               OnLoad=&quot;Load event handler&quot;                               OnPreRender=&quot;PreRender event handler&quot;                               OnUnload=&quot;Unload event handler&quot;                               RowSpan=&quot;integer&quot;                               runat=&quot;server&quot;                               Scope=&quot;NotSet|Row|Column&quot;                               SkinID=&quot;string&quot;                               Style=&quot;string&quot;                               TabIndex=&quot;integer&quot;                               Text=&quot;string&quot;                               ToolTip=&quot;string&quot;                               VerticalAlign=&quot;NotSet|Top|Middle|Bottom&quot;                               Visible=&quot;True|False&quot;                               Width=&quot;size&quot;                               Wrap=&quot;True|False&quot;                           />               </asp:TableRow>   </asp:Table>   ```"
  example:
  - "The following code example demonstrates how to create a table at design time. The table contains two rows of two cells each.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic Table Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_64_1.aspx)]\n [!code-vb[Classic Table Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_64_1.aspx)]  \n  \n The following code example demonstrates how to construct a table programmatically. Creating a table dynamically consists of three steps. First, create <xref:System.Web.UI.WebControls.TableCell> objects to represent the cells in a row. Content for the cells is added by either setting the <xref:System.Web.UI.WebControls.TableCell.Text%2A> property or by adding controls to the <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> collection of the <xref:System.Web.UI.WebControls.TableCell>. Next, create a <xref:System.Web.UI.WebControls.TableRow> to represent a row in the table. Add the <xref:System.Web.UI.WebControls.TableCell> objects created earlier to the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> collection of the <xref:System.Web.UI.WebControls.TableRow>. Finally, add the <xref:System.Web.UI.WebControls.TableRow> to the <xref:System.Web.UI.WebControls.Table.Rows%2A> collection of the Table control. Repeat this process for each row in the table.  \n  \n [!code-vb[Classic Table Example#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_64_2.aspx)]\n [!code-cs[Classic Table Example#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_64_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Rows")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TableDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ParseChildren(true, "Rows")]

      [System.Web.UI.SupportsEventValidation]

      public class Table : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  implements:
  - System.Web.UI.IPostBackEventHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: Table()
  nameWithType: Table.Table()
  fullName: System.Web.UI.WebControls.Table.Table()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> classe."
  remarks: "Use este construtor para criar e inicializar uma nova instância de <xref:System.Web.UI.WebControls.Table>classe.</xref:System.Web.UI.WebControls.Table>"
  syntax:
    content: public Table ();
    parameters: []
  overload: System.Web.UI.WebControls.Table.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Table.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Table.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adiciona os atributos HTML e estilos que precisam ser renderizadas especificado <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>."
  remarks: "Esse método é usado principalmente por desenvolvedores de controle para inserir os atributos apropriados e estilos para o <xref:System.Web.UI.HtmlTextWriter>fluxo de saída para um <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.HtmlTextWriter> Esse método substitui <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to override the AddAttributesToRender method in a custom server control to add an attribute to the <xref:System.Web.UI.WebControls.Table>.  \n  \n [!code-vb[CustomTableAddAttributesToRender#1](~/add/codesnippet/visualbasic/0b00d4f4-ed3f-4c37-b3dc-_1.aspx)]\n [!code-cs[CustomTableAddAttributesToRender#1](~/add/codesnippet/csharp/0b00d4f4-ed3f-4c37-b3dc-_1.aspx)]  \n[!code-cs[CustomTableAddAttributesToRender#2](~/add/codesnippet/csharp/0b00d4f4-ed3f-4c37-b3dc-_2.cs)]\n[!code-vb[CustomTableAddAttributesToRender#2](~/add/codesnippet/visualbasic/0b00d4f4-ed3f-4c37-b3dc-_2.vb)]"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O fluxo de saída que renderiza o conteúdo do HTML para o cliente."
  overload: System.Web.UI.WebControls.Table.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.BackImageUrl
  id: BackImageUrl
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: BackImageUrl
  nameWithType: Table.BackImageUrl
  fullName: System.Web.UI.WebControls.Table.BackImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a URL da imagem de plano de fundo exibida por trás de <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle."
  remarks: "Use a propriedade BackImageUrl para especificar o local de uma imagem a ser exibida no plano de fundo do <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table> Você pode usar relativo ou uma URL absoluta. Uma URL relativa se relaciona a localização da imagem para o local da página da Web ou controle de usuário sem especificar um caminho completo no servidor. O caminho é relativo ao local da página da Web. Isso torna mais fácil mover todo o site para outro diretório no servidor sem atualizar o caminho para a imagem no código. Uma URL absoluta fornece o caminho completo, para que mover o site para outro diretório requer a atualização do código.      > [!NOTE] > Se a imagem for menor que o <xref:System.Web.UI.WebControls.Table>controle, ele ficará lado a lado.</xref:System.Web.UI.WebControls.Table>"
  syntax:
    content: public virtual string BackImageUrl { get; set; }
    return:
      type: System.String
      description: "A URL da imagem do plano de fundo para o <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle. O valor padrão é &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Table.BackImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.Caption
  id: Caption
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: Caption
  nameWithType: Table.Caption
  fullName: System.Web.UI.WebControls.Table.Caption
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto em um elemento de legenda HTML em um <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle. Esta propriedade é fornecida para tornar o controle mais acessível para usuários de dispositivos de tecnologia assistencial."
  remarks: "Use a propriedade de legenda para especificar o texto em um elemento de legenda HTML em um <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table> O texto que você especificar fornece dispositivos de tecnologia assistencial com uma descrição da tabela que pode ser usada para tornar o controle mais acessíveis.       Suporte de acessibilidade adicionais para o <xref:System.Web.UI.WebControls.Table>o controle é fornecido pelo <xref:System.Web.UI.WebControls.Table.CaptionAlign%2A>propriedade.</xref:System.Web.UI.WebControls.Table.CaptionAlign%2A> </xref:System.Web.UI.WebControls.Table> Use o <xref:System.Web.UI.WebControls.Table.CaptionAlign%2A>propriedade para especificar o alinhamento do elemento HTML de legenda em uma <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.Table.CaptionAlign%2A>       O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  syntax:
    content: public virtual string Caption { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o texto em um elemento de legenda HTML em um <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle. O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.Table.Caption*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.CaptionAlign
  id: CaptionAlign
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: CaptionAlign
  nameWithType: Table.CaptionAlign
  fullName: System.Web.UI.WebControls.Table.CaptionAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a posição horizontal ou vertical de um elemento HTML de legenda em uma <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle. Esta propriedade é fornecida para tornar o controle mais acessível para usuários de dispositivos de tecnologia assistencial."
  remarks: "Use a propriedade CaptionAlign para especificar a posição horizontal ou vertical de um elemento HTML de legenda em uma <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table> Esta propriedade é fornecida para tornar o controle mais acessível para usuários de dispositivos de tecnologia assistencial.       Essa propriedade é definida usando um do <xref:System.Web.UI.WebControls.TableCaptionAlign>valores de enumeração.</xref:System.Web.UI.WebControls.TableCaptionAlign> A tabela a seguir lista os valores possíveis.      | Valor | Descrição |   |-----------|-----------------|   | `NotSet`| Alinhamento do elemento de legenda não está definido. |   | `Top`| O elemento de legenda é alinhado com a parte superior da tabela. |   | `Bottom`| O elemento de legenda é alinhado com a parte inferior da tabela. |   | `Left`| O elemento caption é alinhado à esquerda da tabela. |   | `Right`| O elemento caption é alinhado à direita da tabela. |       Suporte de acessibilidade adicionais para o <xref:System.Web.UI.WebControls.Table>o controle é fornecido pelo <xref:System.Web.UI.WebControls.Table.Caption%2A>propriedade.</xref:System.Web.UI.WebControls.Table.Caption%2A> </xref:System.Web.UI.WebControls.Table> Use o <xref:System.Web.UI.WebControls.Table.Caption%2A>propriedade para especificar o texto em um elemento de legenda HTML em um <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.Table.Caption%2A>"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.TableCaptionAlign
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;> </xref> valores de enumeração. O valor padrão é <xref uid=&quot;langword_csharp_NotSet&quot; name=&quot;NotSet&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Table.CaptionAlign*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O tipo especificado não é um do <xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;> </xref> valores de enumeração."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.CellPadding
  id: CellPadding
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: CellPadding
  nameWithType: Table.CellPadding
  fullName: System.Web.UI.WebControls.Table.CellPadding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a quantidade de espaço entre o conteúdo de uma célula e a borda da célula."
  remarks: "Use a propriedade CellPadding para controlar o espaçamento entre o conteúdo de uma célula e a borda da célula. A quantidade de preenchimento especificada é adicionada a todos os quatro lados da célula.       Todas as células na mesma coluna de uma <xref:System.Web.UI.WebControls.Table>controle têm a mesma largura.</xref:System.Web.UI.WebControls.Table> A quantidade de preenchimento é aplicada à célula mais ampla e todas as outras células na coluna tiverem a largura da célula.       Da mesma forma, todas as células na mesma linha têm a mesma altura. A quantidade de preenchimento é aplicada para a célula mais alta da linha e todas as outras células na linha tem a altura da célula. Tamanhos de célula individual não podem ser especificados."
  syntax:
    content: public virtual int CellPadding { get; set; }
    return:
      type: System.Int32
      description: "A quantidade de espaço, em pixels, entre a borda da célula e o conteúdo de uma célula. O valor padrão é -1, que indica que a propriedade não foi definida."
  overload: System.Web.UI.WebControls.Table.CellPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.CellSpacing
  id: CellSpacing
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: CellSpacing
  nameWithType: Table.CellSpacing
  fullName: System.Web.UI.WebControls.Table.CellSpacing
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a quantidade de espaço entre as células."
  remarks: "Use a propriedade CellSpacing para controlar o espaçamento entre as células adjacentes no <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table> É aplicado a este espaçamento vertical e horizontalmente. O espaçamento da célula é uniforme para a tabela inteira. Espaçamento da célula individuais entre cada linha ou coluna não pode ser especificado.      > [!NOTE] > Se você definir essa propriedade como um valor maior que 0 e defina o <xref:System.Web.UI.WebControls.Table.GridLines%2A>propriedade para um valor que exibe as bordas da célula, um espaço é exibido entre as bordas das células adjacentes.</xref:System.Web.UI.WebControls.Table.GridLines%2A> Nessa situação, a propriedade CellSpacing controla o tamanho do espaço."
  syntax:
    content: public virtual int CellSpacing { get; set; }
    return:
      type: System.Int32
      description: "A quantidade de espaço, em pixels, entre as células. O valor padrão é -1, que indica que a propriedade não foi definida."
  overload: System.Web.UI.WebControls.Table.CellSpacing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: Table.CreateControlCollection()
  fullName: System.Web.UI.WebControls.Table.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria um novo <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto para manter o <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> controles do atual <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle."
  remarks: "Esse método é usado principalmente por desenvolvedores de controle ao derivar uma classe personalizada de um <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table>       Esse método substitui a <xref:System.Web.UI.Control.CreateControlCollection%2A>implementação da <xref:System.Web.UI.Control>classe</xref:System.Web.UI.Control> base</xref:System.Web.UI.Control.CreateControlCollection%2A> Para um <xref:System.Web.UI.WebControls.Table>de controle, o CreateControlCollection sempre retorna um <xref:System.Web.UI.ControlCollection>que só pode conter <xref:System.Web.UI.WebControls.TableRow>controles do atual <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.TableRow> </xref:System.Web.UI.ControlCollection> </xref:System.Web.UI.WebControls.Table>"
  example:
  - "The following code example demonstrates how to override the CreateControlCollection method in a custom server control so that it always returns a new instance of the <xref:System.Web.UI.EmptyControlCollection> class for the <xref:System.Web.UI.WebControls.Table>.  \n  \n [!code-vb[CustomTableCreateControlCollection#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_203_1.aspx)]\n [!code-cs[CustomTableCreateControlCollection#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_203_1.aspx)]  \n[!code-cs[CustomTableCreateControlCollection#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_203_2.cs)]\n[!code-vb[CustomTableCreateControlCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_203_2.vb)]"
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "Um <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto para conter o <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> controles do atual <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.Table.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: Table.CreateControlStyle()
  fullName: System.Web.UI.WebControls.Table.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência a uma coleção de propriedades que definem a aparência de um <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle."
  remarks: "Esse método é usado principalmente por desenvolvedores de controle ao derivar um controle personalizado da <xref:System.Web.UI.WebControls.Table>classe.</xref:System.Web.UI.WebControls.Table>"
  example:
  - "The following code example demonstrates how to override the CreateControlStyle method in a custom server control so that it always returns an empty <xref:System.Web.UI.WebControls.TableStyle> for the <xref:System.Web.UI.WebControls.Table>.  \n  \n [!code-vb[CustomTableCreateControlStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_160_1.aspx)]\n [!code-cs[CustomTableCreateControlStyle#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_160_1.aspx)]  \n[!code-cs[CustomTableCreateControlStyle#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_160_2.cs)]\n[!code-vb[CustomTableCreateControlStyle#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_160_2.vb)]"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> objeto que contém as propriedades que definem a aparência do <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.Table.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: GridLines
  nameWithType: Table.GridLines
  fullName: System.Web.UI.WebControls.Table.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o estilo de linha de grade para exibir o <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle."
  remarks: "Use a propriedade de linhas de grade para especificar as bordas de célula são exibidas na <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table> A tabela a seguir lista os estilos de linha de grade diferentes.      | Valor de linha de grade | Descrição |   |--------------------|-----------------|   | `None`| Não há bordas de célula são exibidas. |   | `Horizontal`| São exibidas apenas as bordas de célula horizontais. |   | `Vertical`| Apenas as bordas de células verticais são exibidas. |   | `Both`| As duas as bordas de célula horizontais e verticais são exibidas. |"
  example:
  - "The following example demonstrates how to use the GridLines property to specify the grid line style.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic Table.GridLines Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1132_1.aspx)]\n [!code-vb[Classic Table.GridLines Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1132_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.GridLines&quot;> </xref> valores de enumeração. O valor padrão é <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Table.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.HorizontalAlign
  id: HorizontalAlign
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: HorizontalAlign
  nameWithType: Table.HorizontalAlign
  fullName: System.Web.UI.WebControls.Table.HorizontalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o alinhamento horizontal do <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle na página."
  remarks: "Use a propriedade HorizontalAlign para especificar o alinhamento horizontal do <xref:System.Web.UI.WebControls.Table>controle dentro da página.</xref:System.Web.UI.WebControls.Table> A tabela a seguir lista os estilos diferentes de alinhamento horizontal.      | O valor de HorizontalAlign | Descrição |   |---------------------------|-----------------|   | `NotSet`| O alinhamento horizontal do controle <xref:System.Web.UI.WebControls.Table>não foi definido. |   | `Left`| O controle de <xref:System.Web.UI.WebControls.Table>é justificado à esquerda na página. |   | `Center`| O controle de <xref:System.Web.UI.WebControls.Table>é centralizado na página. |   | `Right`| O controle de <xref:System.Web.UI.WebControls.Table>é justificado à direita na página. |   | `Justify`| O <xref:System.Web.UI.WebControls.Table>controle está alinhado com as margens esquerdas e direita da página. |</xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.Table>"
  example:
  - "[!code-cs[CustomTableAlign#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_320_1.aspx)]\n [!code-vb[CustomTableAlign#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_320_1.aspx)]  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.HorizontalAlign
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.HorizontalAlign&quot;> </xref> valores de enumeração. O valor padrão é <xref uid=&quot;langword_csharp_NotSet&quot; name=&quot;NotSet&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Table.HorizontalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: Table.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Table.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera eventos para o <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controlar quando um formulário é enviado para o servidor."
  remarks: "A página passa o valor de `argument` parâmetro para o método RaisePostBackEvent."
  syntax:
    content: protected virtual void RaisePostBackEvent (string argument);
    parameters:
    - id: argument
      type: System.String
      description: "Um <xref:System.String>que representa o argumento para o evento.</xref:System.String>"
  overload: System.Web.UI.WebControls.Table.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  id: RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: RenderBeginTag(HtmlTextWriter)
  nameWithType: Table.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Table.RenderBeginTag(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Renderiza a marca de abertura de HTML a <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle para o gravador especificado."
  remarks: "Esse método é usado principalmente por desenvolvedores de controle ao derivar uma classe personalizada de um <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table>       O método RenderBeginTag renderiza a marca de abertura para o <xref:System.Web.UI.WebControls.Table>controlar e renderiza marcações para a legenda da tabela e o alinhamento, se necessário.</xref:System.Web.UI.WebControls.Table>"
  syntax:
    content: public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída para renderizar HTML conteúdo no cliente."
  overload: System.Web.UI.WebControls.Table.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: Table.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Table.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Processa as linhas no controle de tabela para o gravador especificado."
  remarks: "Esse método é usado principalmente por desenvolvedores de controle ao derivar uma classe personalizada de um <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table>       O <xref:System.Web.UI.WebControls.Table>controle implementa RenderContents para renderizar o <xref:System.Web.UI.WebControls.Table.Rows%2A>da tabela.</xref:System.Web.UI.WebControls.Table.Rows%2A> </xref:System.Web.UI.WebControls.Table>"
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom server control so that it always inserts a header row for a custom <xref:System.Web.UI.WebControls.Table> server control.  \n  \n [!code-vb[CustomTableRenderContents#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_172_1.aspx)]\n [!code-cs[CustomTableRenderContents#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_172_1.aspx)]  \n[!code-cs[CustomTableRenderContents#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_172_2.cs)]\n[!code-vb[CustomTableRenderContents#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_172_2.vb)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída para renderizar HTML conteúdo no cliente."
  overload: System.Web.UI.WebControls.Table.RenderContents*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "As seções de tabela não estão em ordem."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.Rows
  id: Rows
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: Rows
  nameWithType: Table.Rows
  fullName: System.Web.UI.WebControls.Table.Rows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de linhas de <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle."
  remarks: "Usar a coleção de linhas para gerenciar programaticamente o <xref:System.Web.UI.WebControls.TableRow>objetos no <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.TableRow> Um <xref:System.Web.UI.WebControls.TableRow>representa uma linha na tabela.</xref:System.Web.UI.WebControls.TableRow>      > [!NOTE] > Essa propriedade normalmente é usada somente quando Criando tabelas programaticamente. Em tempo de design, ele é definido, declarando <xref:System.Web.UI.WebControls.TableRow>objetos entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.Table>controle.</xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how use the Rows collection to construct a table programmatically. Creating a table dynamically consists of three steps. First, create <xref:System.Web.UI.WebControls.TableCell> objects to represent the cells in a row. Content for the cells is added by either setting the <xref:System.Web.UI.WebControls.TableCell.Text%2A> property or by adding controls to the <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> collection of the <xref:System.Web.UI.WebControls.TableCell>. Next, create a <xref:System.Web.UI.WebControls.TableRow> to represent a row in the table. Add the <xref:System.Web.UI.WebControls.TableCell> objects created earlier to the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> collection of the <xref:System.Web.UI.WebControls.TableRow>. Finally, add the <xref:System.Web.UI.WebControls.TableRow> to the Rows collection of the <xref:System.Web.UI.WebControls.Table> control. Repeat this process for each row in the table.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an. aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic Table Example#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_457_1.aspx)]\n [!code-cs[Classic Table Example#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_457_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableRowCollection Rows { get; }
    return:
      type: System.Web.UI.WebControls.TableRowCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> que contém o <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> objetos no <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.Table.Rows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.SupportsDisabledAttribute
  id: SupportsDisabledAttribute
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: SupportsDisabledAttribute
  nameWithType: Table.SupportsDisabledAttribute
  fullName: System.Web.UI.WebControls.Table.SupportsDisabledAttribute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o controle deve definir o <xref uid=&quot;langword_csharp_disabled&quot; name=&quot;disabled&quot; href=&quot;&quot;> </xref> atributo do elemento HTML renderizado para &quot;desativado&quot; quando o controle <xref:System.Web.UI.WebControls.WebControl.IsEnabled*>é de propriedade <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebControl.IsEnabled*>"
  remarks: "Essa propriedade indica como ASP.NET devem renderizar HTML para um controle quando o controle está desabilitado. Se essa propriedade for `true`, o ASP.NET processa um `disabled` atributo quando um controle está desabilitado. Se essa propriedade for `false`, o ASP.NET processa um `class` atributo quando um controle está desabilitado. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=fullName>"
  syntax:
    content: public override bool SupportsDisabledAttribute { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o &lt;xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=fullName&gt; propriedade indica uma versão do ASP.NET inferior `4.0`; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Table.SupportsDisabledAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Table.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.Table
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Table.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Table.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent*>.</xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent*>"
  remarks: "Normalmente, você deve usar o <xref:System.Web.UI.WebControls.Table.RaisePostBackEvent%2A?displayProperty=fullName>método para disparar um evento para o <xref:System.Web.UI.WebControls.Table>controlar quando um formulário é enviado para o servidor.</xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.Table.RaisePostBackEvent%2A?displayProperty=fullName>       Esse método é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.Table>instância é convertida em um <xref:System.Web.UI.IPostBackEventHandler>interface.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.WebControls.Table>"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "O argumento para o evento."
  overload: System.Web.UI.WebControls.Table.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.WebControls.WebControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.Table.#ctor
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: Table()
  nameWithType: Table.Table()
  fullName: System.Web.UI.WebControls.Table.Table()
- uid: System.Web.UI.WebControls.Table.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Table.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Table.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Table.BackImageUrl
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: BackImageUrl
  nameWithType: Table.BackImageUrl
  fullName: System.Web.UI.WebControls.Table.BackImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Table.Caption
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: Caption
  nameWithType: Table.Caption
  fullName: System.Web.UI.WebControls.Table.Caption
- uid: System.Web.UI.WebControls.Table.CaptionAlign
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: CaptionAlign
  nameWithType: Table.CaptionAlign
  fullName: System.Web.UI.WebControls.Table.CaptionAlign
- uid: System.Web.UI.WebControls.TableCaptionAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCaptionAlign
  nameWithType: TableCaptionAlign
  fullName: System.Web.UI.WebControls.TableCaptionAlign
- uid: System.Web.UI.WebControls.Table.CellPadding
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: CellPadding
  nameWithType: Table.CellPadding
  fullName: System.Web.UI.WebControls.Table.CellPadding
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.Table.CellSpacing
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: CellSpacing
  nameWithType: Table.CellSpacing
  fullName: System.Web.UI.WebControls.Table.CellSpacing
- uid: System.Web.UI.WebControls.Table.CreateControlCollection
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: CreateControlCollection()
  nameWithType: Table.CreateControlCollection()
  fullName: System.Web.UI.WebControls.Table.CreateControlCollection()
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.Table.CreateControlStyle
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: CreateControlStyle()
  nameWithType: Table.CreateControlStyle()
  fullName: System.Web.UI.WebControls.Table.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.Table.GridLines
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: GridLines
  nameWithType: Table.GridLines
  fullName: System.Web.UI.WebControls.Table.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.Table.HorizontalAlign
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: HorizontalAlign
  nameWithType: Table.HorizontalAlign
  fullName: System.Web.UI.WebControls.Table.HorizontalAlign
- uid: System.Web.UI.WebControls.HorizontalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HorizontalAlign
  nameWithType: HorizontalAlign
  fullName: System.Web.UI.WebControls.HorizontalAlign
- uid: System.Web.UI.WebControls.Table.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: Table.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Table.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Table.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: RenderBeginTag(HtmlTextWriter)
  nameWithType: Table.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Table.RenderBeginTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Table.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: Table.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Table.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Table.Rows
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: Rows
  nameWithType: Table.Rows
  fullName: System.Web.UI.WebControls.Table.Rows
- uid: System.Web.UI.WebControls.TableRowCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableRowCollection
  nameWithType: TableRowCollection
  fullName: System.Web.UI.WebControls.TableRowCollection
- uid: System.Web.UI.WebControls.Table.SupportsDisabledAttribute
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: SupportsDisabledAttribute
  nameWithType: Table.SupportsDisabledAttribute
  fullName: System.Web.UI.WebControls.Table.SupportsDisabledAttribute
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Table.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Table.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Table.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Table.#ctor*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: Table
  nameWithType: Table.Table
- uid: System.Web.UI.WebControls.Table.AddAttributesToRender*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: AddAttributesToRender
  nameWithType: Table.AddAttributesToRender
- uid: System.Web.UI.WebControls.Table.BackImageUrl*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: BackImageUrl
  nameWithType: Table.BackImageUrl
- uid: System.Web.UI.WebControls.Table.Caption*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: Caption
  nameWithType: Table.Caption
- uid: System.Web.UI.WebControls.Table.CaptionAlign*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: CaptionAlign
  nameWithType: Table.CaptionAlign
- uid: System.Web.UI.WebControls.Table.CellPadding*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: CellPadding
  nameWithType: Table.CellPadding
- uid: System.Web.UI.WebControls.Table.CellSpacing*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: CellSpacing
  nameWithType: Table.CellSpacing
- uid: System.Web.UI.WebControls.Table.CreateControlCollection*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: CreateControlCollection
  nameWithType: Table.CreateControlCollection
- uid: System.Web.UI.WebControls.Table.CreateControlStyle*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: CreateControlStyle
  nameWithType: Table.CreateControlStyle
- uid: System.Web.UI.WebControls.Table.GridLines*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: GridLines
  nameWithType: Table.GridLines
- uid: System.Web.UI.WebControls.Table.HorizontalAlign*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: HorizontalAlign
  nameWithType: Table.HorizontalAlign
- uid: System.Web.UI.WebControls.Table.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Table.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Table.RenderBeginTag*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: RenderBeginTag
  nameWithType: Table.RenderBeginTag
- uid: System.Web.UI.WebControls.Table.RenderContents*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: RenderContents
  nameWithType: Table.RenderContents
- uid: System.Web.UI.WebControls.Table.Rows*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: Rows
  nameWithType: Table.Rows
- uid: System.Web.UI.WebControls.Table.SupportsDisabledAttribute*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: SupportsDisabledAttribute
  nameWithType: Table.SupportsDisabledAttribute
- uid: System.Web.UI.WebControls.Table.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Table
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: Table.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
