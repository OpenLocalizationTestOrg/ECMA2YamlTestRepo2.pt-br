### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DpapiDataProtector
  id: DpapiDataProtector
  children:
  - System.Security.Cryptography.DpapiDataProtector.#ctor(System.String,System.String,System.String[])
  - System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(System.Byte[])
  - System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
  - System.Security.Cryptography.DpapiDataProtector.ProviderProtect(System.Byte[])
  - System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(System.Byte[])
  - System.Security.Cryptography.DpapiDataProtector.Scope
  langs:
  - csharp
  name: DpapiDataProtector
  nameWithType: DpapiDataProtector
  fullName: System.Security.Cryptography.DpapiDataProtector
  type: Class
  summary: "Fornece métodos de proteção de dados simples."
  remarks: "A classe DpapiDataProtector fornece uma maneira estruturada para proteger dados usando a <xref:System.Security.Cryptography.ProtectedData>classe.</xref:System.Security.Cryptography.ProtectedData> O construtor da classe tem parâmetros para fins que servem como uma senha para identificar os dados protegidos. Todos os três parâmetros são colocadas em hash e incluídos como parte da cadeia de caracteres de dados criptografados. Você deve saber os parâmetros de finalidade para desproteger os dados. O <xref:System.Security.Cryptography.ProtectedData.Protect%2A?displayProperty=fullName>método é chamado para criptografar os dados que tem um `optionalEntropy` parâmetro que permite que você adicione informações de qualificação para criptografar os dados com mais segurança.</xref:System.Security.Cryptography.ProtectedData.Protect%2A?displayProperty=fullName> O hash dos parâmetros de finalidade é usado para entropia. Porque você não precisa de uma chave para descriptografar os dados, escolher cuidadosamente os dados de finalidade adiciona outro nível de segurança para proteção de dados.       Se você usar um <xref:System.Security.Cryptography.DpapiDataProtector.Scope%2A>de <xref:System.Security.Cryptography.DataProtectionScope>, somente um usuário com credenciais de logon que correspondam do usuário que os dados criptografados pode descriptografar os dados.</xref:System.Security.Cryptography.DataProtectionScope> </xref:System.Security.Cryptography.DpapiDataProtector.Scope%2A> Além disso, descriptografia geralmente pode ser feita apenas no computador em que os dados foram criptografados. A função do Windows que criptografa os dados cria uma chave de sessão para executar a criptografia. A chave de sessão é derivada novamente quando os dados a serem descriptografados. Para obter uma descrição detalhada de como os dados são protegidos usando chaves de sessão, consulte [proteção de dados do Windows](http://go.microsoft.com/fwlink/?LinkId=224686).       Se você usar um <xref:System.Security.Cryptography.DpapiDataProtector.Scope%2A>de <xref:System.Security.Cryptography.DataProtectionScope>ao proteger os dados e não identificar cuidadosamente os parâmetros de finalidade, nenhum outro aplicativo no computador que conhece as finalidades pode acessar e Desproteger dados.</xref:System.Security.Cryptography.DataProtectionScope> </xref:System.Security.Cryptography.DpapiDataProtector.Scope%2A>"
  syntax:
    content: 'public sealed class DpapiDataProtector : System.Security.Cryptography.DataProtector'
  inheritance:
  - System.Object
  - System.Security.Cryptography.DataProtector
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.DataProtector.ApplicationName
  - System.Security.Cryptography.DataProtector.Create(System.String,System.String,System.String,System.String[])
  - System.Security.Cryptography.DataProtector.GetHashedPurpose
  - System.Security.Cryptography.DataProtector.PrimaryPurpose
  - System.Security.Cryptography.DataProtector.Protect(System.Byte[])
  - System.Security.Cryptography.DataProtector.SpecificPurposes
  - System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.#ctor(System.String,System.String,System.String[])
  id: '#ctor(System.String,System.String,System.String[])'
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: DpapiDataProtector(String,String,String[])
  nameWithType: DpapiDataProtector.DpapiDataProtector(String,String,String[])
  fullName: System.Security.Cryptography.DpapiDataProtector.DpapiDataProtector(String,String,String[])
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: "Cria uma nova instância do <xref href=&quot;System.Security.Cryptography.DpapiDataProtector&quot;> </xref> classe usando o nome do aplicativo especificado, o principal objetivo e a fins específicos."
  remarks: "O nome do aplicativo especificado pelo `appName` parâmetro é considerado parte da finalidade dos dados protegidos. Os três parâmetros são transformadas em hash e o hash é usado para proteger tanto ao desproteger os dados. Exemplos de `primaryPurpose` e `specificPurposes` os valores são **Giftcard** e ** \\<número de cartão de presentes >** ou **fatura** e ** \\<número da nota fiscal >**."
  syntax:
    content: public DpapiDataProtector (string appName, string primaryPurpose, string[] specificPurpose);
    parameters:
    - id: appName
      type: System.String
      description: "O nome do aplicativo."
    - id: primaryPurpose
      type: System.String
      description: "O objetivo principal para o protetor de dados."
    - id: specificPurpose
      type: System.String[]
      description: "O purpose(s) específico para o protetor de dados."
  overload: System.Security.Cryptography.DpapiDataProtector.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>appName</code>é uma cadeia de caracteres vazia ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - ou - <code>primaryPurpose</code> é uma cadeia de caracteres vazia ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - ou - <code>specificPurposes</code> contém uma cadeia de caracteres vazia ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(System.Byte[])
  id: IsReprotectRequired(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: IsReprotectRequired(Byte[])
  nameWithType: DpapiDataProtector.IsReprotectRequired(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: "Determina se os dados devem ser criptografados novamente."
  remarks: "Esse método sempre retornará `true`."
  syntax:
    content: public override bool IsReprotectRequired (byte[] encryptedData);
    parameters:
    - id: encryptedData
      type: System.Byte[]
      description: "Os dados criptografados a ser verificada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dados devem ser criptografados novamente; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
  id: PrependHashedPurposeToPlaintext
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: PrependHashedPurposeToPlaintext
  nameWithType: DpapiDataProtector.PrependHashedPurposeToPlaintext
  fullName: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  syntax:
    content: protected override bool PrependHashedPurposeToPlaintext { get; }
    return:
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderProtect(System.Byte[])
  id: ProviderProtect(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: ProviderProtect(Byte[])
  nameWithType: DpapiDataProtector.ProviderProtect(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.ProviderProtect(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] ProviderProtect (byte[] userData);
    parameters:
    - id: userData
      type: System.Byte[]
      description: "A ser adicionado."
    return:
      type: System.Byte[]
      description: "A ser adicionado."
  overload: System.Security.Cryptography.DpapiDataProtector.ProviderProtect*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(System.Byte[])
  id: ProviderUnprotect(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: ProviderUnprotect(Byte[])
  nameWithType: DpapiDataProtector.ProviderUnprotect(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] ProviderUnprotect (byte[] encryptedData);
    parameters:
    - id: encryptedData
      type: System.Byte[]
      description: "A ser adicionado."
    return:
      type: System.Byte[]
      description: "A ser adicionado."
  overload: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.Scope
  id: Scope
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: Scope
  nameWithType: DpapiDataProtector.Scope
  fullName: System.Security.Cryptography.DpapiDataProtector.Scope
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: "Obtém ou define o escopo da proteção de dados."
  remarks: "Proteção de dados criptografa os dados no disco para que ele não pode ser lido por outros programas.  Você não precisa de uma chave para proteger ou desproteger os dados. Se você definir o escopo para <xref:System.Security.Cryptography.DataProtectionScope>, somente os aplicativos em execução em suas credenciais podem desproteger os dados; no entanto, isso significa que qualquer aplicativo em execução em suas credenciais pode acessar os dados protegidos.</xref:System.Security.Cryptography.DataProtectionScope>  Se você definir o escopo para <xref:System.Security.Cryptography.DataProtectionScope>, qualquer aplicativo de confiança total no computador pode desproteger, acessar e modificar os dados, se souber o nome do aplicativo, o objetivo principal e o objetivo específico.</xref:System.Security.Cryptography.DataProtectionScope>"
  syntax:
    content: public System.Security.Cryptography.DataProtectionScope Scope { get; set; }
    return:
      type: System.Security.Cryptography.DataProtectionScope
      description: "Um dos valores de enumeração que especifica o escopo da proteção de dados (o usuário atual ou o computador local). O padrão é <xref href=&quot;System.Security.Cryptography.DataProtectionScope&quot;> </xref>."
  overload: System.Security.Cryptography.DpapiDataProtector.Scope*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.DataProtector
  isExternal: false
  name: System.Security.Cryptography.DataProtector
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.DpapiDataProtector.#ctor(System.String,System.String,System.String[])
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: DpapiDataProtector(String,String,String[])
  nameWithType: DpapiDataProtector.DpapiDataProtector(String,String,String[])
  fullName: System.Security.Cryptography.DpapiDataProtector.DpapiDataProtector(String,String,String[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: IsReprotectRequired(Byte[])
  nameWithType: DpapiDataProtector.IsReprotectRequired(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(Byte[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: PrependHashedPurposeToPlaintext
  nameWithType: DpapiDataProtector.PrependHashedPurposeToPlaintext
  fullName: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderProtect(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: ProviderProtect(Byte[])
  nameWithType: DpapiDataProtector.ProviderProtect(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.ProviderProtect(Byte[])
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: ProviderUnprotect(Byte[])
  nameWithType: DpapiDataProtector.ProviderUnprotect(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(Byte[])
- uid: System.Security.Cryptography.DpapiDataProtector.Scope
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: Scope
  nameWithType: DpapiDataProtector.Scope
  fullName: System.Security.Cryptography.DpapiDataProtector.Scope
- uid: System.Security.Cryptography.DataProtectionScope
  parent: System.Security.Cryptography
  isExternal: false
  name: DataProtectionScope
  nameWithType: DataProtectionScope
  fullName: System.Security.Cryptography.DataProtectionScope
- uid: System.Security.Cryptography.DpapiDataProtector.#ctor*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: DpapiDataProtector
  nameWithType: DpapiDataProtector.DpapiDataProtector
- uid: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: IsReprotectRequired
  nameWithType: DpapiDataProtector.IsReprotectRequired
- uid: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: PrependHashedPurposeToPlaintext
  nameWithType: DpapiDataProtector.PrependHashedPurposeToPlaintext
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderProtect*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: ProviderProtect
  nameWithType: DpapiDataProtector.ProviderProtect
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: ProviderUnprotect
  nameWithType: DpapiDataProtector.ProviderUnprotect
- uid: System.Security.Cryptography.DpapiDataProtector.Scope*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: Scope
  nameWithType: DpapiDataProtector.Scope
