### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.Ping
  id: Ping
  children:
  - System.Net.NetworkInformation.Ping.#ctor
  - System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  - System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  - System.Net.NetworkInformation.Ping.PingCompleted
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.Send(System.String)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsyncCancel
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  langs:
  - csharp
  name: Ping
  nameWithType: Ping
  fullName: System.Net.NetworkInformation.Ping
  type: Class
  summary: "Permite que um aplicativo determine se um computador remoto está acessível pela rede."
  remarks: "Aplicativos usam a classe de Ping para detectar se um computador remoto está acessível.       Topologia de rede pode determinar se o Ping com êxito pode contatar um host remoto. A presença e a configuração de firewalls, equipamento de NAT (conversão) do endereço de rede ou proxies podem impedir Ping bem-sucedida. Um Ping bem-sucedido indica apenas que o host remoto pode ser alcançado na rede; a presença de serviços de nível superior (como um servidor Web) no host remoto não é garantida.       Essa classe fornece funcionalidade semelhante para a ferramenta de linha de comando Ping.exe. O <xref:System.Net.NetworkInformation.Ping.Send%2A>e <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>métodos enviar uma mensagem de solicitação de eco ICMP Internet Control Message Protocol () em um computador remoto e aguarda uma mensagem de resposta de eco ICMP do computador.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Para obter uma descrição detalhada das mensagens ICMP, consulte a RFC 792, disponível em [http://www.ietf.org](http://www.ietf.org/).       Os seguintes tipos são usados com a classe de Ping e são descritos em detalhes abaixo.      | **Nome do tipo**|**descrição**|   |-------------------|---------------------|   | <xref:System.Net.NetworkInformation.IPStatus>| Define os códigos de status que descrevem o resultado de uma mensagem de solicitação de eco ICMP. |   | <xref:System.Net.NetworkInformation.PingOptions>| Permite definir ou recuperar as configurações que controlam o número de vezes que o pacote de solicitação pode ser encaminhado (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>), e se ele pode ser fragmentado (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ). |   | <xref:System.Net.NetworkInformation.PingReply>| Contém os resultados de uma solicitação de eco ICMP. |   | <xref:System.Net.NetworkInformation.PingException>| Gerada se ocorrer um erro irrecuperável. |   | <xref:System.Net.NetworkInformation.PingCompletedEventArgs>| Contém os dados associados aos eventos <xref:System.Net.NetworkInformation.Ping.PingCompleted>, que são gerados quando uma chamada de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>é concluída ou foi cancelada. |   | <xref:System.Net.NetworkInformation.PingCompletedEventHandler>| O representante que fornece o método de retorno de chamada invocado quando uma chamada de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>é concluída ou foi cancelada. |       O <xref:System.Net.NetworkInformation.Ping.Send%2A>e <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>métodos retornam a resposta em uma <xref:System.Net.NetworkInformation.PingReply>objeto.</xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingException> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.PingOptions> </xref:System.Net.NetworkInformation.IPStatus> O <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>propriedade retorna um <xref:System.Net.NetworkInformation.IPStatus>valor para indicar o resultado da solicitação.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>       Ao enviar a solicitação, você deve especificar o computador remoto. Você pode fazer isso, fornecendo um host de cadeia de caracteres de nome, endereço IP no formato de cadeia de caracteres, ou um <xref:System.Net.IPAddress>objeto.</xref:System.Net.IPAddress>       Você também pode especificar qualquer um dos seguintes tipos de informações:-dados para acompanhar a solicitação. Especificando `buffer` permite que você aprenda a quantidade de tempo necessário para um pacote de um determinado tamanho transmitidos de e para o host remoto e a unidade de transmissão máxima do caminho da rede. (Consulte a <xref:System.Net.NetworkInformation.Ping.Send%2A>ou <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>sobrecargas que usam um `buffer` parâmetro.)      – Se o pacote de eco ICMP pode ser fragmentado em trânsito.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> (Consulte a propriedade <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>e o <xref:System.Net.NetworkInformation.Ping.Send%2A>ou <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>sobrecargas que levar uma `options` parâmetro.)      -Quantas vezes roteamento nós, como roteadores ou gateways, pode encaminhar o pacote antes de atingir o computador de destino ou é descartado.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> (Consulte <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>e o <xref:System.Net.NetworkInformation.Ping.Send%2A>ou <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>sobrecargas que usam um `options` parâmetro.)      -O limite de tempo no qual a resposta deve ser recebida.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> (Consulte a <xref:System.Net.NetworkInformation.Ping.Send%2A>ou <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>sobrecargas que usam um `timeout` parâmetro.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>       A classe de Ping oferece métodos síncronos e assíncronos para enviar a solicitação. Se seu aplicativo deve bloquear enquanto aguarda uma resposta, use o <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos, esses métodos são síncronas.</xref:System.Net.NetworkInformation.Ping.Send%2A> Se seu aplicativo não deve bloquear, use o assíncrona <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>métodos.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>é executado em seu próprio thread automaticamente alocada do pool de threads.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Quando a operação assíncrona é concluída, ela gera o <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Os aplicativos usam um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para especificar o método é chamado para <xref:System.Net.NetworkInformation.Ping.PingCompleted>eventos.</xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Você deve adicionar um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para o evento antes de chamar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Método do representante recebe um <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto que contém um <xref:System.Net.NetworkInformation.PingReply>objeto que descreve o resultado da <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs>       Você não pode usar a mesma instância da classe Ping para gerar várias solicitações simultâneas de eco ICMP. Chamando <xref:System.Net.NetworkInformation.Ping.Send%2A>uma <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chamada está em andamento ou chamada <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>várias vezes antes que todas as chamadas anteriores tem concluído as causas <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>"
  example:
  - "The following code example demonstrates using the Ping class synchronously.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_1.cpp)]  \n  \n The following code example demonstrates using the Ping class asynchronously.  \n  \n [!code-cpp[NCLPingASync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_2.cpp)]\n [!code-cs[NCLPingASync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_2.cs)]"
  syntax:
    content: 'public class Ping : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.Net.NetworkInformation.Ping> instance. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/m-system.net.networkinfo_4_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/m-system.net.networkinfo_4_1.cs)]"
  syntax:
    content: public Ping ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Libera os recursos não gerenciados usados pelo <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> de objeto e, opcionalmente, libera os recursos gerenciados."
  remarks: "Este método é chamado pelo público `Dispose()` método e o <xref:System.ComponentModel.Component.Finalize%2A>método.</xref:System.ComponentModel.Component.Finalize%2A> O público `Dispose()` método chama o método Dispose protegido com o `disposing` parâmetro definido como `true`. <xref:System.ComponentModel.Component.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.ComponentModel.Component.Finalize%2A>       Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Net.NetworkInformation.Ping>referências de objeto.</xref:System.Net.NetworkInformation.Ping> Este método chama o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar recursos gerenciados e não gerenciados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> às versões apenas recursos não gerenciados."
  overload: System.Net.NetworkInformation.Ping.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  id: OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Gera o <xref href=&quot;System.Net.NetworkInformation.Ping.PingCompleted&quot;> </xref> eventos."
  remarks: "Classes que herdam o <xref:System.Net.NetworkInformation.Ping>classe pode substituir este método para executar tarefas adicionais, como registrar em log os dados contidos no `e` parâmetro.</xref:System.Net.NetworkInformation.Ping>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnPingCompleted também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.NetworkInformation.PingCompletedEventArgs
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingCompletedEventArgs&quot;> </xref> objeto que contém dados do evento."
  overload: System.Net.NetworkInformation.Ping.OnPingCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  id: PingCompleted
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Ocorre quando uma operação assíncrona para enviar uma mensagem de eco ICMP Internet Control Message Protocol () e receber a mensagem de resposta de eco ICMP correspondente é concluída ou foi cancelada."
  remarks: "Aplicativos usam o evento PingCompleted para obter informações sobre o status de conclusão e os dados coletados por uma chamada para uma da <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>métodos.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> O <xref:System.Net.NetworkInformation.PingCompletedEventHandler>representante fornece a chamada de retorno do método invocado quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>gera esse evento.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler>"
  example:
  - "The following code example demonstrates specifying a callback method for the PingCompleted event. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/e-system.net.networkinfo_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/e-system.net.networkinfo_1.cs)]"
  syntax:
    content: public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;
    return:
      type: System.Net.NetworkInformation.PingCompletedEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  id: Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tenta enviar uma mensagem de eco ICMP Internet Control Message Protocol () para o computador que foi especificado <xref:System.Net.IPAddress>e receber uma mensagem de resposta de eco ICMP correspondente do computador.</xref:System.Net.IPAddress>"
  remarks: "Esse método envia para o host especificado por `address` um 32 <xref:System.Byte>buffer de dados com a mensagem de eco ICMP.</xref:System.Byte> O método espera cinco segundos para uma mensagem de resposta de eco ICMP. Se não receber uma resposta no momento, o método retorna e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Essa sobrecarga usa configurações padrão de fragmentação de pacote e o encaminhamento de pacotes. O pacote que contém a mensagem de eco ICMP pode ser fragmentado em trânsito se o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos. Para evitar a fragmentação, use um do <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos que leva um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>propriedade `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> O pacote ou fragmentos de pacotes (se fragmentado) podem ser encaminhados por nós roteamentos 128 vezes antes de ser descartado. Para alterar essa configuração, use um <xref:System.Net.NetworkInformation.Ping.Send%2A>sobrecarga que utiliza um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para o valor desejado.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#3](~/add/codesnippet/csharp/m-system.net.networkinfo_5_1.cs)]\n [!code-cpp[NCLPingSampler#3](~/add/codesnippet/cpp/m-system.net.networkinfo_5_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Um <xref:System.Net.IPAddress>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.Net.IPAddress>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objeto que fornece informações sobre a mensagem de resposta de eco ICMP, se foi recebido, ou descreve o motivo da falha se nenhuma mensagem foi recebida."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  id: Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tentativas de enviar uma mensagem de eco ICMP Internet Control Message Protocol () para o computador especificado e receber um ICMP correspondente ecoar a mensagem de resposta do computador."
  remarks: "Esse método envia um 32 <xref:System.Byte>buffer de dados com a mensagem de eco ICMP.</xref:System.Byte> O método espera cinco segundos para uma mensagem de resposta de eco ICMP. Se não receber uma resposta no momento, o método retorna e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Essa sobrecarga usa configurações padrão de fragmentação de pacote e o encaminhamento de pacotes. O pacote que contém a mensagem de eco ICMP pode ser fragmentado em trânsito se o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos. Para evitar a fragmentação, use um do <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos que leva um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>propriedade `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> O pacote ou fragmentos de pacotes (se fragmentado) podem ser encaminhados por nós roteamentos 128 vezes antes de ser descartado. Para alterar essa configuração, use um <xref:System.Net.NetworkInformation.Ping.Send%2A>sobrecarga que utiliza um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para o valor desejado.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#2](~/add/codesnippet/csharp/m-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NCLPingSampler#2](~/add/codesnippet/cpp/m-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Um <xref:System.String>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.String> O valor especificado para esse parâmetro pode ser um nome de host ou uma representação de cadeia de caracteres de um endereço IP."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objeto que fornece informações sobre a mensagem de resposta de eco ICMP, se foi recebido, ou fornece o motivo da falha, se nenhuma mensagem foi recebida."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou é uma cadeia de caracteres vazia (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  id: Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tenta enviar uma mensagem de eco ICMP Internet Control Message Protocol () com o buffer de dados especificado para o computador que foi especificado <xref:System.Net.IPAddress>e receber uma mensagem de resposta de eco ICMP correspondente do computador.</xref:System.Net.IPAddress> Esse método permite que você especifique um valor de tempo limite para a operação."
  remarks: "Se a mensagem de resposta de eco ICMP não for recebida dentro do tempo especificado no `timeout` parâmetro, a falha de eco ICMP e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Ao especificar um número muito pequeno para `timeout`, a resposta de Ping pode ser recebida mesmo se `timeout` milissegundos decorridos.       Essa sobrecarga usa configurações padrão de fragmentação de pacote e o encaminhamento de pacotes. O pacote que contém a mensagem de eco ICMP pode ser fragmentado em trânsito se o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos. Para evitar a fragmentação, use um do <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos que leva um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>propriedade `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       O pacote ou fragmentos de pacotes podem ser encaminhados por nós roteamentos 128 vezes antes de ser descartado. Para alterar essa configuração, use um <xref:System.Net.NetworkInformation.Ping.Send%2A>sobrecarga que utiliza um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para o valor desejado.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Um <xref:System.Net.IPAddress>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objeto que fornece informações sobre a mensagem de resposta de eco ICMP se foi recebido, ou fornece o motivo da falha se nenhuma mensagem foi recebida."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  id: Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tentativas de enviar uma mensagem de eco ICMP Internet Control Message Protocol () para o computador especificado e receber um ICMP correspondente ecoar a mensagem de resposta do computador. Esse método permite que você especifique um valor de tempo limite para a operação."
  remarks: "Se a mensagem de resposta de eco ICMP não for recebida dentro do tempo especificado no `timeout` parâmetro, a falha de eco ICMP e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Ao especificar um número muito pequeno para `timeout`, a resposta de Ping pode ser recebida mesmo se `timeout` milissegundos decorridos.       Essa sobrecarga usa configurações padrão de fragmentação de pacote e o encaminhamento de pacotes. O pacote que contém a mensagem de eco ICMP pode ser fragmentado em trânsito se o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos. Para evitar a fragmentação, use um do <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos que leva um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>propriedade `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> O pacote ou fragmentos de pacotes (se fragmentado) podem ser encaminhados por nós roteamentos 128 vezes antes de ser descartado. Para alterar essa configuração, use um <xref:System.Net.NetworkInformation.Ping.Send%2A>sobrecarga que utiliza um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para o valor desejado.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Um <xref:System.String>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.String> O valor especificado para esse parâmetro pode ser um nome de host ou uma representação de cadeia de caracteres de um endereço IP."
    - id: timeout
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objeto que fornece informações sobre a mensagem de resposta de eco ICMP se foi recebido, ou fornece o motivo da falha se nenhuma mensagem foi recebida."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou é uma cadeia de caracteres vazia (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tenta enviar uma mensagem de eco ICMP Internet Control Message Protocol () com o buffer de dados especificado para o computador que foi especificado <xref:System.Net.IPAddress>e receber uma mensagem de resposta de eco ICMP correspondente do computador.</xref:System.Net.IPAddress> Essa sobrecarga permite que você especifique um valor de tempo limite para a operação."
  remarks: "Se a mensagem de resposta de eco ICMP não for recebida dentro do tempo especificado no `timeout` parâmetro, a falha de eco ICMP e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Ao especificar um número muito pequeno para `timeout`, a resposta de Ping pode ser recebida mesmo se `timeout` milissegundos decorridos.       Essa sobrecarga usa configurações padrão de fragmentação de pacote e o encaminhamento de pacotes. O pacote que contém a mensagem de eco ICMP pode ser fragmentado em trânsito se o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos. Para evitar a fragmentação, use um do <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos que leva um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>propriedade `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       O pacote ou fragmentos de pacotes podem ser encaminhados por nós roteamentos 128 vezes antes de ser descartado. Para alterar essa configuração, use um <xref:System.Net.NetworkInformation.Ping.Send%2A>sobrecarga que utiliza um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para o valor desejado.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#6](~/add/codesnippet/csharp/b44ef8f6-ad7e-49c2-8af4-_1.cs)]\n [!code-cpp[NCLPingSampler#6](~/add/codesnippet/cpp/b44ef8f6-ad7e-49c2-8af4-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Um <xref:System.Net.IPAddress>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que contém dados a ser enviado com a mensagem de eco ICMP e retornado na mensagem de resposta de eco ICMP.</xref:System.Byte> A matriz não pode conter mais de 65.500 bytes."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objeto que fornece informações sobre a mensagem de resposta de eco ICMP, se foi recebido, ou fornece o motivo da falha, se nenhuma mensagem foi recebida. O método retornará <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> se o pacote excede a unidade máxima de transmissão (MTU)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O tamanho de <code> buffer </code> exceder 65500 bytes."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>buffer</code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ou o <code>buffer</code> tamanho é maior que 65500 bytes."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  id: Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tentativas de enviar uma mensagem de eco ICMP Internet Control Message Protocol () com o buffer de dados especificado para o computador especificado e receber um ICMP correspondente ecoar a mensagem de resposta do computador. Essa sobrecarga permite que você especifique um valor de tempo limite para a operação."
  remarks: "Se a mensagem de resposta de eco ICMP não for recebida dentro do tempo especificado no `timeout` parâmetro, a falha de eco ICMP e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Ao especificar um número muito pequeno para `timeout`, a resposta de Ping pode ser recebida mesmo se `timeout` milissegundos decorridos.       Essa sobrecarga usa configurações padrão de fragmentação de pacote e o encaminhamento de pacotes. O pacote que contém a mensagem de eco ICMP pode ser fragmentado em trânsito se o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos. Para evitar a fragmentação, use um do <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos que leva um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>propriedade `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       O pacote ou fragmentos de pacotes podem ser encaminhados por nós roteamentos 128 vezes antes de ser descartado. Para alterar essa configuração, use um <xref:System.Net.NetworkInformation.Ping.Send%2A>sobrecarga que utiliza um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para o valor desejado.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Um <xref:System.String>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.String> O valor especificado para esse parâmetro pode ser um nome de host ou uma representação de cadeia de caracteres de um endereço IP."
    - id: timeout
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que contém dados a ser enviado com a mensagem de eco ICMP e retornado na mensagem de resposta de eco ICMP.</xref:System.Byte> A matriz não pode conter mais de 65.500 bytes."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objeto que fornece informações sobre a mensagem de resposta de eco ICMP se foi recebido, ou fornece o motivo da falha se nenhuma mensagem foi recebida."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O tamanho de <code> buffer </code> exceder 65500 bytes."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou é uma cadeia de caracteres vazia (&quot;&quot;).       - ou - <code>buffer</code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ou o <code>buffer</code> tamanho é maior que 65500 bytes."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tenta enviar uma mensagem de eco ICMP Internet Control Message Protocol () com o buffer de dados especificado para o computador que foi especificado <xref:System.Net.IPAddress>e receber uma mensagem de resposta de eco ICMP correspondente do computador.</xref:System.Net.IPAddress> Essa sobrecarga permite que você especifique um valor de tempo limite para a operação e a fragmentação de controle e os valores de tempo de vida para o pacote de mensagens de eco ICMP."
  remarks: "Se a mensagem de resposta de eco ICMP não for recebida dentro do tempo especificado o `timeout` parâmetro, a falha de eco ICMP e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Ao especificar um número muito pequeno para `timeout`, a resposta de Ping pode ser recebida mesmo se `timeout` milissegundos decorridos.       Se o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é de propriedade `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Use o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para especificar o número máximo de vezes que a mensagem de eco ICMP pode ser enviada antes de alcançar seu destino.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#5](~/add/codesnippet/csharp/81445dc1-adbd-44fc-b79c-_1.cs)]\n [!code-cpp[NCLPingSampler#5](~/add/codesnippet/cpp/81445dc1-adbd-44fc-b79c-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Um <xref:System.Net.IPAddress>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que contém dados a ser enviado com a mensagem de eco ICMP e retornado na mensagem de resposta de eco ICMP.</xref:System.Byte> A matriz não pode conter mais de 65.500 bytes."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> objeto usado para controlar a fragmentação e valores de tempo de vida para o pacote de mensagens de eco ICMP."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objeto que fornece informações sobre a mensagem de resposta de eco ICMP, se foi recebido, ou fornece o motivo da falha, se nenhuma mensagem foi recebida. O método retornará <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> se o pacote excede a unidade máxima de transmissão (MTU)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O tamanho de <code> buffer </code> exceder 65500 bytes."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>buffer</code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ou o <code>buffer</code> tamanho é maior que 65500 bytes."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tentativas de enviar uma mensagem de eco ICMP Internet Control Message Protocol () com o buffer de dados especificado para o computador especificado e receber um ICMP correspondente ecoar a mensagem de resposta do computador. Essa sobrecarga permite que você especifique um valor de tempo limite para a operação e a fragmentação de controle e os valores de tempo de vida para o pacote ICMP."
  remarks: "Se a mensagem de resposta de eco ICMP não for recebida dentro do tempo especificado o `timeout` parâmetro, a falha de eco ICMP e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Ao especificar um número muito pequeno para `timeout`, a resposta de Ping pode ser recebida mesmo se `timeout` milissegundos decorridos.       Se o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é de propriedade `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Use o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para especificar o número máximo de vezes que a mensagem de eco ICMP pode ser enviada antes de alcançar seu destino.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#4](~/add/codesnippet/csharp/ce144ae4-a1a7-44f3-ac8a-_1.cs)]\n [!code-cpp[NCLPingSampler#4](~/add/codesnippet/cpp/ce144ae4-a1a7-44f3-ac8a-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Um <xref:System.String>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.String> O valor especificado para esse parâmetro pode ser um nome de host ou uma representação de cadeia de caracteres de um endereço IP."
    - id: timeout
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que contém dados a ser enviado com a mensagem de eco ICMP e retornado na mensagem de resposta de eco ICMP.</xref:System.Byte> A matriz não pode conter mais de 65.500 bytes."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> objeto usado para controlar a fragmentação e valores de tempo de vida para o pacote de mensagens de eco ICMP."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objeto que fornece informações sobre a mensagem de resposta de eco ICMP se foi recebido, ou fornece o motivo da falha se nenhuma mensagem foi recebida."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O tamanho de <code> buffer </code> exceder 65500 bytes."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou é uma cadeia de caracteres de comprimento zero.       - ou - <code>buffer</code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ou o <code>buffer</code> tamanho é maior que 65500 bytes."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tentativas de forma assíncrona enviar uma mensagem de eco ICMP Internet Control Message Protocol () para o computador que foi especificado <xref:System.Net.IPAddress>e receber uma mensagem de resposta de eco ICMP correspondente do computador.</xref:System.Net.IPAddress>"
  remarks: "O <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>método envia a mensagem de eco de forma assíncrona e, quando a operação for concluída (com êxito ou não), retorna o status para o seu aplicativo.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Chamar o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>método quando seu aplicativo não deve bloquear.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Cada chamada para esse método é executado em um thread separado que automaticamente é alocado do pool de threads. Quando a operação assíncrona é concluída, ela gera o <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Para especificar o método chamado quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>gera o evento, você deve adicionar um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para o evento antes de chamar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Método do representante recebe um <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto que contém um <xref:System.Net.NetworkInformation.PingReply>objeto que descreve o resultado da <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> O <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto herda o <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>propriedade.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Esta propriedade contém o `userToken` objeto passado para o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Se seu aplicativo deve bloquear enquanto aguarda uma resposta, use uma da <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos, esses métodos são síncronas.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Esse método envia um 32 <xref:System.Byte>buffer de dados com a mensagem de eco ICMP.</xref:System.Byte> O método espera cinco segundos para uma mensagem de resposta de eco ICMP. Se não receber uma resposta no momento, o método retorna e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Essa sobrecarga usa configurações padrão de fragmentação de pacote e o encaminhamento de pacotes. O pacote que contém a mensagem de eco ICMP pode ser fragmentado em trânsito se o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos. Para evitar a fragmentação, use um do <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>métodos que leva um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>propriedade `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       O pacote ou fragmentos de pacotes podem ser encaminhados por nós roteamentos 128 vezes antes de ser descartado. Para alterar essa configuração, use um <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>sobrecarga que utiliza um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para o valor desejado.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Um <xref:System.Net.IPAddress>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.Net.IPAddress>"
    - id: userToken
      type: System.Object
      description: "Um objeto que é passado para o método invocado quando a operação assíncrona é concluída."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para o <xref:System.Net.NetworkInformation.Ping.SendAsync*>método está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> não é um endereço IP válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  id: SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tentativas de forma assíncrona enviar uma mensagem de eco ICMP Internet Control Message Protocol () para o computador especificado e receber uma mensagem de resposta de eco ICMP correspondente do computador."
  remarks: "O método SendAsync envia a mensagem de eco de forma assíncrona e, quando a operação for concluída (com êxito ou não), retorna o status para o seu aplicativo. Chame o método SendAsync quando seu aplicativo não deve bloquear. Cada chamada para esse método é executado em um thread separado que automaticamente é alocado do pool de threads. Quando a operação assíncrona é concluída, ela gera o <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Para especificar o método chamado quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>gera o evento, você deve adicionar um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para o evento antes de chamar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Método do representante recebe um <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto que contém um <xref:System.Net.NetworkInformation.PingReply>objeto que descreve o resultado da <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> O <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto herda o <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>propriedade.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Esta propriedade contém o `userToken` objeto passado para o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Se seu aplicativo deve bloquear enquanto aguarda uma resposta, use o <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos, esses métodos são síncronas.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Esse método envia um 32 <xref:System.Byte>buffer de dados com a mensagem de eco ICMP.</xref:System.Byte> O método espera cinco segundos para uma mensagem de resposta de eco ICMP. Se não receber uma resposta em que hora retorna o método e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Essa sobrecarga usa configurações padrão de fragmentação de pacote e o encaminhamento de pacotes. O pacote que contém a mensagem de eco ICMP pode ser fragmentado em trânsito se o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos. Para evitar a fragmentação, use um do <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>métodos que leva um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>propriedade `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       O pacote ou fragmentos de pacotes podem ser encaminhados por nós roteamentos 128 vezes antes de ser descartado. Para alterar essa configuração, use um <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>sobrecarga que utiliza um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para o valor desejado.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Um <xref:System.String>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.String> O valor especificado para esse parâmetro pode ser um nome de host ou uma representação de cadeia de caracteres de um endereço IP."
    - id: userToken
      type: System.Object
      description: "Um objeto que é passado para o método invocado quando a operação assíncrona é concluída."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou é uma cadeia de caracteres vazia (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada ao método SendAsync está em andamento."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>não pôde ser resolvido para um endereço IP válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tentativas de forma assíncrona enviar uma mensagem de eco ICMP Internet Control Message Protocol () para o computador que foi especificado <xref:System.Net.IPAddress>e receber uma mensagem de resposta de eco ICMP correspondente do computador.</xref:System.Net.IPAddress> Essa sobrecarga permite que você especifique um valor de tempo limite para a operação."
  remarks: "O <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>método envia a mensagem de eco de forma assíncrona e, quando a operação for concluída (com êxito ou não), retorna o status para o seu aplicativo.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Chamar o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>método quando seu aplicativo não deve bloquear.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Cada chamada é executado em um thread separado que automaticamente é alocado do pool de threads. Quando a operação assíncrona é concluída, ela gera o <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Os aplicativos usam um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para especificar o método chamado quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>gera o evento.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Você deve adicionar um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para o evento antes de chamar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Método do representante recebe um <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto que contém um <xref:System.Net.NetworkInformation.PingReply>objeto que descreve o resultado da <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> O <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto herda o <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>propriedade.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Esta propriedade contém o `userToken` objeto passado para o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Se seu aplicativo deve bloquear enquanto aguarda uma resposta, use o <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos, esses métodos são síncronas.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Se a mensagem de resposta de eco ICMP não for recebida dentro do tempo especificado o `timeout` parâmetro, a falha de eco ICMP e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Ao especificar um número muito pequeno para `timeout`, a resposta de Ping pode ser recebida mesmo se `timeout` milissegundos decorridos.       Essa sobrecarga usa configurações padrão de fragmentação de pacote e o encaminhamento de pacotes. O pacote que contém a mensagem de eco ICMP pode ser fragmentado em trânsito se o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos. Para evitar a fragmentação, use um do <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>métodos que leva um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>propriedade `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> O pacote ou fragmentos de pacotes (se fragmentado) podem ser encaminhados por nós roteamentos 128 vezes antes de ser descartado. Para alterar essa configuração, use um <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>sobrecarga que utiliza um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para o valor desejado.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Um <xref:System.Net.IPAddress>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "Um objeto que é passado para o método invocado quando a operação assíncrona é concluída."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>método está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> não é um endereço IP válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  id: SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tentativas de forma assíncrona enviar uma mensagem de eco ICMP Internet Control Message Protocol () para o computador especificado e receber uma mensagem de resposta de eco ICMP correspondente do computador. Essa sobrecarga permite que você especifique um valor de tempo limite para a operação."
  remarks: "O <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>método envia a mensagem de eco de forma assíncrona e, quando a operação for concluída (com êxito ou não), retorna o status para o seu aplicativo.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Chamar o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>método quando seu aplicativo não deve bloquear.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Cada chamada é executado em um thread separado que automaticamente é alocado do pool de threads. Quando a operação assíncrona é concluída, ela gera o <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Os aplicativos usam um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para especificar o método chamado quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>gera o evento.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Você deve adicionar um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para o evento antes de chamar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Método do representante recebe um <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto que contém um <xref:System.Net.NetworkInformation.PingReply>objeto que descreve o resultado da <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> O <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto herda o <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>propriedade.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Esta propriedade contém o `userToken` objeto passado para o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Se seu aplicativo deve bloquear enquanto aguarda uma resposta, use o <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos, esses métodos são síncronas.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Se a mensagem de resposta de eco ICMP não for recebida dentro do tempo especificado o `timeout` parâmetro, a falha de eco ICMP e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Ao especificar um número muito pequeno para `timeout`, a resposta de Ping pode ser recebida mesmo se `timeout` milissegundos decorridos.       Essa sobrecarga usa configurações padrão de fragmentação de pacote e o encaminhamento de pacotes. O pacote que contém a mensagem de eco ICMP pode ser fragmentado em trânsito se o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos. Para evitar a fragmentação, use um do <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>métodos que leva um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>propriedade `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> O pacote ou fragmentos de pacotes (se fragmentado) podem ser encaminhados por nós roteamentos 128 vezes antes de ser descartado. Para alterar essa configuração, use um <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>sobrecarga que utiliza um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para o valor desejado.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Um <xref:System.String>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.String> O valor especificado para esse parâmetro pode ser um nome de host ou uma representação de cadeia de caracteres de um endereço IP."
    - id: timeout
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "Um objeto que é passado para o método invocado quando a operação assíncrona é concluída."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou é uma cadeia de caracteres vazia (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>não pôde ser resolvido para um endereço IP válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tentativas de forma assíncrona enviar uma mensagem de eco ICMP Internet Control Message Protocol () com o buffer de dados especificado para o computador que foi especificado <xref:System.Net.IPAddress>e receber uma mensagem de resposta de eco ICMP correspondente do computador.</xref:System.Net.IPAddress> Essa sobrecarga permite que você especifique um valor de tempo limite para a operação."
  remarks: "Esse método envia a mensagem de eco de forma assíncrona e, quando a operação for concluída (com êxito ou não), retorna o status para o seu aplicativo. Chamar o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>método quando seu aplicativo não deve bloquear.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Cada chamada é executado em um thread separado que automaticamente é alocado do pool de threads. Quando a operação assíncrona é concluída, ela gera o <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Para especificar o método chamado quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>gera o evento, você deve adicionar um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para o evento antes de chamar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Método do representante recebe um <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto que contém um <xref:System.Net.NetworkInformation.PingReply>objeto que descreve o resultado da <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> O <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto herda o <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>propriedade.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Esta propriedade contém o `userToken` objeto passado para o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Se seu aplicativo bloqueado enquanto aguarda uma resposta, use o <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos, esses métodos são síncronas.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Se a mensagem de resposta de eco ICMP não for recebida dentro do tempo especificado o `timeout` parâmetro, a falha de eco ICMP e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Ao especificar um número muito pequeno para `timeout`, a resposta de Ping pode ser recebida mesmo se `timeout` milissegundos decorridos.       Essa sobrecarga usa configurações padrão de fragmentação de pacote e o encaminhamento de pacotes. O pacote que contém a mensagem de eco ICMP pode ser fragmentado em trânsito se o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos. Para evitar a fragmentação, use um do <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>métodos que leva um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>propriedade `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> O pacote ou fragmentos de pacotes (se fragmentado) podem ser encaminhados por nós roteamentos 128 vezes antes de ser descartado. Para alterar essa configuração, use um <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>sobrecarga que utiliza um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para o valor desejado.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Um <xref:System.Net.IPAddress>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que contém dados a ser enviado com a mensagem de eco ICMP e retornado na mensagem de resposta de eco ICMP.</xref:System.Byte> A matriz não pode conter mais de 65.500 bytes."
    - id: userToken
      type: System.Object
      description: "Um objeto que é passado para o método invocado quando a operação assíncrona é concluída."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> não é um endereço IP válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O tamanho de <code> buffer </code> exceder 65500 bytes."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tentativas de forma assíncrona enviar uma mensagem de eco ICMP Internet Control Message Protocol () com o buffer de dados especificado para o computador especificado e receber uma mensagem de resposta de eco ICMP correspondente do computador. Essa sobrecarga permite que você especifique um valor de tempo limite para a operação."
  remarks: "O <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>método envia a mensagem de eco de forma assíncrona e, quando a operação for concluída (com êxito ou não), retorna o status para o seu aplicativo.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Chamar o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>método quando seu aplicativo não deve bloquear.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Cada chamada é executado em um thread separado que automaticamente é alocado do pool de threads. Quando a operação assíncrona é concluída, ela gera o <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Os aplicativos usam um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para especificar o método chamado quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>gera o evento.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Você deve adicionar um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para o evento antes de chamar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Método do representante recebe um <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto contendo um <xref:System.Net.NetworkInformation.PingReply>objeto que descreve o resultado da <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> O <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto herda o <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>propriedade.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Esta propriedade contém o `userToken` objeto passado para o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Se seu aplicativo deve bloquear enquanto aguarda uma resposta, use o <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos, esses métodos são síncronas.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Se a mensagem de resposta de eco ICMP não for recebida dentro do tempo especificado o `timeout` parâmetro, a falha de eco ICMP e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Ao especificar um número muito pequeno para `timeout`, a resposta de Ping pode ser recebida mesmo se `timeout` milissegundos decorridos.       Essa sobrecarga usa configurações padrão de fragmentação de pacote e o encaminhamento de pacotes. O pacote que contém a mensagem de eco ICMP pode ser fragmentado em trânsito se o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos. Para evitar a fragmentação, use um do <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>métodos que leva um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>propriedade `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> O pacote ou fragmentos de pacotes (se fragmentado) podem ser encaminhados por nós roteamentos 128 vezes antes de ser descartado. Para alterar essa configuração, use um <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>sobrecarga que utiliza um `options` parâmetro e defina o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para o valor desejado.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - The following code example demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Um <xref:System.String>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.String> O valor especificado para esse parâmetro pode ser um nome de host ou uma representação de cadeia de caracteres de um endereço IP."
    - id: timeout
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que contém dados a ser enviado com a mensagem de eco ICMP e retornado na mensagem de resposta de eco ICMP.</xref:System.Byte> A matriz não pode conter mais de 65.500 bytes."
    - id: userToken
      type: System.Object
      description: "Um objeto que é passado para o método invocado quando a operação assíncrona é concluída."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou é uma cadeia de caracteres vazia (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>não pôde ser resolvido para um endereço IP válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O tamanho de <code> buffer </code> exceder 65500 bytes."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tentativas de forma assíncrona enviar uma mensagem de eco ICMP Internet Control Message Protocol () com o buffer de dados especificado para o computador que foi especificado <xref:System.Net.IPAddress>e receber uma mensagem de resposta de eco ICMP correspondente do computador.</xref:System.Net.IPAddress> Essa sobrecarga permite que você especifique um valor de tempo limite para a operação e a fragmentação de controle e os valores de tempo de vida para o pacote de mensagens de eco ICMP."
  remarks: "O <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>método envia a mensagem de eco de forma assíncrona e, quando a operação for concluída (com êxito ou não), retorna o status para o seu aplicativo.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Chamar o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>método quando seu aplicativo não deve bloquear.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Cada chamada é executado em um thread separado que automaticamente é alocado do pool de threads. Quando a operação assíncrona é concluída, ela gera o <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Os aplicativos usam um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para especificar o método chamado quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>gera o evento.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Você deve adicionar um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para o evento antes de chamar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Método do representante recebe um <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto que contém um <xref:System.Net.NetworkInformation.PingReply>objeto que descreve o resultado da <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> O <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto herda o <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>propriedade.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Esta propriedade contém o `userToken` objeto passado para o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Se seu aplicativo bloqueado enquanto aguarda uma resposta, use o <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos, esses métodos são síncronas.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Se a mensagem de resposta de eco ICMP não for recebida dentro do tempo especificado o `timeout` parâmetro, a falha de eco ICMP e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Ao especificar um número muito pequeno para `timeout`, a resposta de Ping pode ser recebida mesmo se `timeout` milissegundos decorridos.       Se o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é de propriedade `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Use o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para especificar o número máximo de vezes que a mensagem de eco ICMP pode ser enviada antes de alcançar seu destino.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method. For an implementation of the callback method, see the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method overload example section.  \n  \n The following code example requires the following namespaces:  \n  \n [!code-cs[NCLPingSampler#0](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_1.cs)]\n [!code-cpp[NCLPingSampler#0](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_1.cpp)]  \n  \n The following code example sends an ICMP echo message asynchronously.  \n  \n [!code-cs[NCLPingSampler#7](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_2.cs)]\n [!code-cpp[NCLPingSampler#7](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_2.cpp)]"
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Um <xref:System.Net.IPAddress>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que contém dados a ser enviado com a mensagem de eco ICMP e retornado na mensagem de resposta de eco ICMP.</xref:System.Byte> A matriz não pode conter mais de 65.500 bytes."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> objeto usado para controlar a fragmentação e valores de tempo de vida para o pacote de mensagens de eco ICMP."
    - id: userToken
      type: System.Object
      description: "Um objeto que é passado para o método invocado quando a operação assíncrona é concluída."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> não é um endereço IP válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O tamanho de <code> buffer </code> exceder 65500 bytes."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tentativas de forma assíncrona enviar uma mensagem de eco ICMP Internet Control Message Protocol () com o buffer de dados especificado para o computador especificado e receber uma mensagem de resposta de eco ICMP correspondente do computador. Essa sobrecarga permite que você especifique um valor de tempo limite para a operação e a fragmentação de controle e os valores de tempo de vida para o pacote ICMP."
  remarks: "O <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>método envia a mensagem de eco de forma assíncrona e, quando a operação for concluída (com êxito ou não), retorna o status para o seu aplicativo.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Chamar o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>método quando seu aplicativo não deve bloquear.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Cada chamada é executado em um thread separado que automaticamente é alocado do pool de threads. Quando a operação assíncrona é concluída, ela gera o <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Os aplicativos usam um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para especificar o método chamado quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>gera o evento.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Você deve adicionar um <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegado para o evento antes de chamar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Método do representante recebe um <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto que contém um <xref:System.Net.NetworkInformation.PingReply>objeto que descreve o resultado da <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> O <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objeto herda o <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>propriedade.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Esta propriedade contém o `userToken` objeto passado para o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chame.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Se seu aplicativo deve bloquear enquanto aguarda uma resposta, use o <xref:System.Net.NetworkInformation.Ping.Send%2A>métodos, esses métodos são síncronas.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Se a mensagem de resposta de eco ICMP não for recebida dentro do tempo especificado o `timeout` parâmetro, a falha de eco ICMP e a <xref:System.Net.NetworkInformation.PingReply.Status%2A>propriedade é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Ao especificar um número muito pequeno para `timeout`, a resposta de Ping pode ser recebida mesmo se `timeout` milissegundos decorridos.       Se o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>é de propriedade `true` e o tamanho total do pacote excede o tamanho máximo de pacote que pode ser transmitido por um de nós de roteamento entre os computadores locais e remotos, a solicitação de eco ICMP falha.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Use o <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>propriedade para especificar o número máximo de vezes que a mensagem de eco ICMP pode ser enviada antes de alcançar seu destino.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Se o pacote não chegar ao seu destino depois que está sendo encaminhado o número de vezes especificado, o pacote será descartado e falha a solicitação de eco ICMP. Quando isso acontece, o que <xref:System.Net.NetworkInformation.PingReply.Status%2A>é definida como <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cpp[NCLPingAsync#1](~/add/codesnippet/cpp/56cfcaea-d9d5-4c26-9eea-_1.cpp)]\n [!code-cs[NCLPingAsync#1](~/add/codesnippet/csharp/56cfcaea-d9d5-4c26-9eea-_1.cs)]"
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Um <xref:System.String>que identifica o computador de destino para a mensagem de eco ICMP.</xref:System.String> O valor especificado para esse parâmetro pode ser um nome de host ou uma representação de cadeia de caracteres de um endereço IP."
    - id: timeout
      type: System.Int32
      description: "A <xref:System.Byte>matriz que contém dados a ser enviado com a mensagem de eco ICMP e retornado na mensagem de resposta de eco ICMP.</xref:System.Byte> A matriz não pode conter mais de 65.500 bytes."
    - id: buffer
      type: System.Byte[]
      description: "Um <xref:System.Int32>valor que especifica o número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP.</xref:System.Int32>"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> objeto usado para controlar a fragmentação e valores de tempo de vida para o pacote de mensagens de eco ICMP."
    - id: userToken
      type: System.Object
      description: "Um objeto que é passado para o método invocado quando a operação assíncrona é concluída."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou é uma cadeia de caracteres vazia (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> é um endereço IPv6 e o computador local está executando um sistema operacional anterior ao Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>não pôde ser resolvido para um endereço IP válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O tamanho de <code> buffer </code> exceder 65500 bytes."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Cancela todas as solicitações assíncronas pendentes para enviar uma mensagem de eco ICMP Internet Control Message Protocol () e recebe uma mensagem de resposta de eco ICMP correspondente."
  remarks: "Chame esse método para encerrar todas as chamadas para <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>que não foram concluídos.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  id: SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Enviar uma mensagem de eco ICMP Internet Control Message Protocol () com o buffer de dados especificado para o computador que foi especificado <xref:System.Net.IPAddress>e recebe uma mensagem de resposta de eco ICMP correspondente do computador como uma operação assíncrona.</xref:System.Net.IPAddress>"
  remarks: "Essa operação não será bloqueada. Retornado <xref:System.Threading.Tasks.Task%601>> objeto será concluída depois que o pacote ICMP foi enviado e a resposta foi recebida.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Um endereço IP que identifica o computador de destino para a mensagem de eco ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retorna &lt;xref:System.Threading.Tasks.Task%601&gt;.       O objeto de tarefa que representa a operação assíncrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> não é um endereço IP válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  id: SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Envia uma mensagem de protocolo ICMP (Internet Control) mensagem de eco com os dados especificados de buffer para o computador especificado e receber uma mensagem de resposta de eco ICMP correspondente esse computador como uma operação assíncrona."
  remarks: "Essa operação não será bloqueada. Retornado <xref:System.Threading.Tasks.Task%601>> objeto será concluída depois que o pacote ICMP foi enviado e a resposta foi recebida.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "O computador de destino para a mensagem de eco ICMP. O valor especificado para esse parâmetro pode ser um nome de host ou uma representação de cadeia de caracteres de um endereço IP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retorna &lt;xref:System.Threading.Tasks.Task%601&gt;.       O objeto de tarefa que representa a operação assíncrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  id: SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Enviar uma mensagem de eco ICMP Internet Control Message Protocol () com o buffer de dados especificado para o computador que foi especificado <xref:System.Net.IPAddress>e recebe uma mensagem de resposta de eco ICMP correspondente do computador como uma operação assíncrona.</xref:System.Net.IPAddress> Essa sobrecarga permite que você especifique um valor de tempo limite para a operação."
  remarks: "Essa operação não será bloqueada. Retornado <xref:System.Threading.Tasks.Task%601>> objeto será concluída depois que o pacote ICMP foi enviado e a resposta foi recebida.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Um endereço IP que identifica o computador de destino para a mensagem de eco ICMP."
    - id: timeout
      type: System.Int32
      description: "O número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retorna &lt;xref:System.Threading.Tasks.Task%601&gt;.       O objeto de tarefa que representa a operação assíncrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  id: SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Envia uma mensagem de protocolo ICMP (Internet Control) mensagem de eco com os dados especificados de buffer para o computador especificado e receber uma mensagem de resposta de eco ICMP correspondente esse computador como uma operação assíncrona. Essa sobrecarga permite que você especifique um valor de tempo limite para a operação."
  remarks: "Essa operação não será bloqueada. Retornado <xref:System.Threading.Tasks.Task%601>> objeto será concluída depois que o pacote ICMP foi enviado e a resposta foi recebida.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "O computador de destino para a mensagem de eco ICMP. O valor especificado para esse parâmetro pode ser um nome de host ou uma representação de cadeia de caracteres de um endereço IP."
    - id: timeout
      type: System.Int32
      description: "O número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retorna &lt;xref:System.Threading.Tasks.Task%601&gt;.       O objeto de tarefa que representa a operação assíncrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Enviar uma mensagem de eco ICMP Internet Control Message Protocol () com o buffer de dados especificado para o computador que foi especificado <xref:System.Net.IPAddress>e recebe uma mensagem de resposta de eco ICMP correspondente do computador como uma operação assíncrona.</xref:System.Net.IPAddress> Essa sobrecarga permite que você especifique um valor de tempo limite para a operação e um buffer a ser usado para enviar e receber."
  remarks: "Essa operação não será bloqueada. Retornado <xref:System.Threading.Tasks.Task%601>> objeto será concluída depois que o pacote ICMP foi enviado e a resposta foi recebida.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Um endereço IP que identifica o computador de destino para a mensagem de eco ICMP."
    - id: timeout
      type: System.Int32
      description: "O número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que contém dados a ser enviado com a mensagem de eco ICMP e retornado na mensagem de resposta de eco ICMP.</xref:System.Byte> A matriz não pode conter mais de 65.500 bytes."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retorna &lt;xref:System.Threading.Tasks.Task%601&gt;.       O objeto de tarefa que representa a operação assíncrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> não é um endereço IP válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O tamanho de <code> buffer </code> excede 65.500 bytes."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  id: SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Envia uma mensagem de protocolo ICMP (Internet Control) mensagem de eco com os dados especificados de buffer para o computador especificado e receber uma mensagem de resposta de eco ICMP correspondente esse computador como uma operação assíncrona. Essa sobrecarga permite que você especifique um valor de tempo limite para a operação e um buffer a ser usado para enviar e receber."
  remarks: "Essa operação não será bloqueada. Retornado <xref:System.Threading.Tasks.Task%601>> objeto será concluída depois que o pacote ICMP foi enviado e a resposta foi recebida.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "O computador de destino para a mensagem de eco ICMP. O valor especificado para esse parâmetro pode ser um nome de host ou uma representação de cadeia de caracteres de um endereço IP."
    - id: timeout
      type: System.Int32
      description: "O número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que contém dados a ser enviado com a mensagem de eco ICMP e retornado na mensagem de resposta de eco ICMP.</xref:System.Byte> A matriz não pode conter mais de 65.500 bytes."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retorna &lt;xref:System.Threading.Tasks.Task%601&gt;.       O objeto de tarefa que representa a operação assíncrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Enviar uma mensagem de eco ICMP Internet Control Message Protocol () com o buffer de dados especificado para o computador que foi especificado <xref:System.Net.IPAddress>e recebe uma mensagem de resposta de eco ICMP correspondente do computador como uma operação assíncrona.</xref:System.Net.IPAddress> Essa sobrecarga permite que você especifique um valor de tempo limite para a operação, um buffer a ser usado para enviar e receber e controlar a fragmentação e valores de tempo de vida para o pacote de mensagens de eco ICMP."
  remarks: "Essa operação não será bloqueada. Retornado <xref:System.Threading.Tasks.Task%601>> objeto será concluída depois que o pacote ICMP foi enviado e a resposta foi recebida.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Um endereço IP que identifica o computador de destino para a mensagem de eco ICMP."
    - id: timeout
      type: System.Int32
      description: "O número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que contém dados a ser enviado com a mensagem de eco ICMP e retornado na mensagem de resposta de eco ICMP.</xref:System.Byte> A matriz não pode conter mais de 65.500 bytes."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> objeto usado para controlar a fragmentação e valores de tempo de vida para o pacote de mensagens de eco ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retorna &lt;xref:System.Threading.Tasks.Task%601&gt;.       O objeto de tarefa que representa a operação assíncrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>é menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada para <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>está em andamento.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Uma exceção foi lançada durante o envio ou recebimento de mensagens ICMP. Consulte a exceção interna para a exceção exata que foi gerada."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> não é um endereço IP válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O tamanho de <code> buffer </code> excede 65.500 bytes."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Envia uma mensagem de protocolo ICMP (Internet Control) mensagem de eco com os dados especificados de buffer para o computador especificado e receber uma mensagem de resposta de eco ICMP correspondente esse computador como uma operação assíncrona. Essa sobrecarga permite que você especifique um valor de tempo limite para a operação, um buffer a ser usado para enviar e receber e controlar a fragmentação e valores de tempo de vida para o pacote de mensagens de eco ICMP."
  remarks: "Essa operação não será bloqueada. Retornado <xref:System.Threading.Tasks.Task%601>> objeto será concluída depois que o pacote ICMP foi enviado e a resposta foi recebida.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "O computador de destino para a mensagem de eco ICMP. O valor especificado para esse parâmetro pode ser um nome de host ou uma representação de cadeia de caracteres de um endereço IP."
    - id: timeout
      type: System.Int32
      description: "O número máximo de milissegundos (após enviar a mensagem de eco) de espera para a mensagem de resposta de eco ICMP."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que contém dados a ser enviado com a mensagem de eco ICMP e retornado na mensagem de resposta de eco ICMP.</xref:System.Byte> A matriz não pode conter mais de 65.500 bytes."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Um <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> objeto usado para controlar a fragmentação e valores de tempo de vida para o pacote de mensagens de eco ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retorna &lt;xref:System.Threading.Tasks.Task%601&gt;.       O objeto de tarefa que representa a operação assíncrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.NetworkInformation.PingException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingException
  nameWithType: PingException
  fullName: System.Net.NetworkInformation.PingException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.NetworkInformation.Ping.#ctor
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
- uid: System.Net.NetworkInformation.PingCompletedEventArgs
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventArgs
  nameWithType: PingCompletedEventArgs
  fullName: System.Net.NetworkInformation.PingCompletedEventArgs
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
- uid: System.Net.NetworkInformation.PingCompletedEventHandler
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventHandler
  nameWithType: PingCompletedEventHandler
  fullName: System.Net.NetworkInformation.PingCompletedEventHandler
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
- uid: System.Net.NetworkInformation.PingReply
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<PingReply>
  nameWithType: Task<PingReply>
  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.NetworkInformation.PingReply>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.NetworkInformation.PingReply
    name: PingReply
    nameWithType: PingReply
    fullName: PingReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.#ctor*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping
  nameWithType: Ping.Ping
- uid: System.Net.NetworkInformation.Ping.Dispose*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose
  nameWithType: Ping.Dispose
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted
  nameWithType: Ping.OnPingCompleted
- uid: System.Net.NetworkInformation.Ping.Send*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send
  nameWithType: Ping.Send
- uid: System.Net.NetworkInformation.Ping.SendAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync
  nameWithType: Ping.SendAsync
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel
  nameWithType: Ping.SendAsyncCancel
- uid: System.Net.NetworkInformation.Ping.SendPingAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync
  nameWithType: Ping.SendPingAsync
