### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.HttpCapabilitiesBase
  id: HttpCapabilitiesBase
  children:
  - System.Web.Configuration.HttpCapabilitiesBase.#ctor
  - System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  - System.Web.Configuration.HttpCapabilitiesBase.Adapters
  - System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.AOL
  - System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  - System.Web.Configuration.HttpCapabilitiesBase.Beta
  - System.Web.Configuration.HttpCapabilitiesBase.Browser
  - System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  - System.Web.Configuration.HttpCapabilitiesBase.Browsers
  - System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  - System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  - System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  - System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  - System.Web.Configuration.HttpCapabilitiesBase.CDF
  - System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  - System.Web.Configuration.HttpCapabilitiesBase.Cookies
  - System.Web.Configuration.HttpCapabilitiesBase.Crawler
  - System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)
  - System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  - System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey
  - System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  - System.Web.Configuration.HttpCapabilitiesBase.Frames
  - System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  - System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions
  - System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)
  - System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  - System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  - System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  - System.Web.Configuration.HttpCapabilitiesBase.Id
  - System.Web.Configuration.HttpCapabilitiesBase.Init
  - System.Web.Configuration.HttpCapabilitiesBase.InputType
  - System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.IsColor
  - System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  - System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  - System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  - System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  - System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  - System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  - System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  - System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  - System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  - System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  - System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  - System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  - System.Web.Configuration.HttpCapabilitiesBase.Platform
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  - System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  - System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  - System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  - System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.Tables
  - System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  - System.Web.Configuration.HttpCapabilitiesBase.Type
  - System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  - System.Web.Configuration.HttpCapabilitiesBase.VBScript
  - System.Web.Configuration.HttpCapabilitiesBase.Version
  - System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  - System.Web.Configuration.HttpCapabilitiesBase.Win16
  - System.Web.Configuration.HttpCapabilitiesBase.Win32
  langs:
  - csharp
  name: HttpCapabilitiesBase
  nameWithType: HttpCapabilitiesBase
  fullName: System.Web.Configuration.HttpCapabilitiesBase
  type: Class
  summary: "Fornece acesso a informações detalhadas sobre os recursos do navegador do cliente."
  remarks: "HttpCapabilitiesBase é a classe base da qual o <xref:System.Web.HttpBrowserCapabilities>classe é derivada.</xref:System.Web.HttpBrowserCapabilities> HttpCapabilitiesBase oferece um grande número de propriedades somente leitura que fornecem acesso fortemente tipado ao dicionário de recursos do navegador. Você pode acessar o <xref:System.Web.HttpBrowserCapabilities>classe por meio de <xref:System.Web.HttpRequest.Browser%2A>propriedade que é exposta pelo ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=fullName>propriedade.</xref:System.Web.HttpRequest.Browser%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpBrowserCapabilities>"
  example:
  - "The following example shows how to access information about the browser.  \n  \n [!code-cs[HttpCapabilitiesBase#1](~/add/codesnippet/csharp/t-system.web.configurati_61_1.aspx)]\n [!code-vb[HttpCapabilitiesBase#1](~/add/codesnippet/visualbasic/t-system.web.configurati_61_1.aspx)]"
  syntax:
    content: 'public class HttpCapabilitiesBase : System.Web.UI.IFilterResolutionService'
  inheritance:
  - System.Object
  implements:
  - System.Web.UI.IFilterResolutionService
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HttpCapabilitiesBase()
  nameWithType: HttpCapabilitiesBase.HttpCapabilitiesBase()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HttpCapabilitiesBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Cria uma nova instância do <xref href=&quot;System.Web.Configuration.HttpCapabilitiesBase&quot;> </xref> classe."
  syntax:
    content: public HttpCapabilitiesBase ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  id: ActiveXControls
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ActiveXControls
  nameWithType: HttpCapabilitiesBase.ActiveXControls
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a controles ActiveX."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports ActiveX controls.  \n  \n [!code-cs[HttpCapabilitiesBase.ActiveXControls#1](~/add/codesnippet/csharp/p-system.web.configurati_350_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.ActiveXControls#1](~/add/codesnippet/visualbasic/p-system.web.configurati_350_1.aspx)]"
  syntax:
    content: public bool ActiveXControls { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a controles ActiveX. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Adapters
  id: Adapters
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Adapters
  nameWithType: HttpCapabilitiesBase.Adapters
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Adapters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna a coleção de adaptadores de controle disponíveis."
  syntax:
    content: public System.Collections.IDictionary Adapters { get; }
    return:
      type: System.Collections.IDictionary
      description: "A coleção de adaptadores de controle registrado."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Adapters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)
  id: AddBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: AddBrowser(String)
  nameWithType: HttpCapabilitiesBase.AddBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Usada internamente para adicionar uma entrada à coleção interna de navegadores para os quais recursos são reconhecidos."
  syntax:
    content: public void AddBrowser (string browserName);
    parameters:
    - id: browserName
      type: System.String
      description: "O nome do navegador para adicionar."
  overload: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.AOL
  id: AOL
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: AOL
  nameWithType: HttpCapabilitiesBase.AOL
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AOL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o cliente é um navegador America Online (AOL)."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is an AOL browser.  \n  \n [!code-cs[HttpCapabilitiesBase.AOL#1](~/add/codesnippet/csharp/p-system.web.configurati_269_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.AOL#1](~/add/codesnippet/visualbasic/p-system.web.configurati_269_1.aspx)]"
  syntax:
    content: public bool AOL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador é um navegador AOL; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.AOL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  id: BackgroundSounds
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: BackgroundSounds
  nameWithType: HttpCapabilitiesBase.BackgroundSounds
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a reprodução de sons em segundo plano usando o <xref uid=&quot;langword_csharp_&lt;bgsounds&gt;&quot; name=&quot;&lt;bgsounds&gt;&quot; href=&quot;&quot;> </xref> elemento HTML."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports playing background sounds.  \n  \n [!code-cs[HttpCapabilitiesBase.BackgroundSounds#1](~/add/codesnippet/csharp/p-system.web.configurati_72_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.BackgroundSounds#1](~/add/codesnippet/visualbasic/p-system.web.configurati_72_1.aspx)]"
  syntax:
    content: public bool BackgroundSounds { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a reprodução de sons de fundo; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Beta
  id: Beta
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Beta
  nameWithType: HttpCapabilitiesBase.Beta
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Beta
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador é uma versão beta."
  remarks: "Navegadores da versão beta podem apresentar um comportamento imprevisível."
  example:
  - "The following code example shows how to determine whether the browser is a beta version.  \n  \n [!code-cs[HttpCapabilitiesBase.Beta#1](~/add/codesnippet/csharp/p-system.web.configurati_76_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Beta#1](~/add/codesnippet/visualbasic/p-system.web.configurati_76_1.aspx)]"
  syntax:
    content: public bool Beta { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador é uma versão beta. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Beta*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browser
  id: Browser
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Browser
  nameWithType: HttpCapabilitiesBase.Browser
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o navegador de cadeia de caracteres (se houver) que foi enviada pelo navegador no <xref uid=&quot;langword_csharp_User-Agent&quot; name=&quot;User-Agent&quot; href=&quot;&quot;> </xref> cabeçalho de solicitação."
  remarks: ''
  example:
  - "The following code example shows how to determine the `User-Agent` request header sent by the browser.  \n  \n [!code-vb[HttpCapabilitiesBase.Browser#1](~/add/codesnippet/visualbasic/p-system.web.configurati_201_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Browser#1](~/add/codesnippet/csharp/p-system.web.configurati_201_1.aspx)]"
  syntax:
    content: public string Browser { get; }
    return:
      type: System.String
      description: "O conteúdo do <xref uid=&quot;langword_csharp_User-Agent&quot; name=&quot;User-Agent&quot; href=&quot;&quot;> </xref> cabeçalho de solicitação enviado pelo navegador."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Browser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  id: BrowserCapabilitiesProvider
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: BrowserCapabilitiesProvider
  nameWithType: HttpCapabilitiesBase.BrowserCapabilitiesProvider
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o <xref href=&quot;System.Web.Configuration.HttpCapabilitiesProvider&quot;> </xref> objeto para o navegador atual."
  syntax:
    content: public static System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider { get; set; }
    return:
      type: System.Web.Configuration.HttpCapabilitiesProvider
      description: "O <xref href=&quot;System.Web.Configuration.HttpCapabilitiesProvider&quot;> </xref> objeto para o navegador atual."
  overload: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browsers
  id: Browsers
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Browsers
  nameWithType: HttpCapabilitiesBase.Browsers
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browsers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um <xref href=&quot;System.Collections.ArrayList&quot;> </xref> dos navegadores no <xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>dicionário.</xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>"
  syntax:
    content: public System.Collections.ArrayList Browsers { get; }
    return:
      type: System.Collections.ArrayList
      description: "Um <xref href=&quot;System.Collections.ArrayList&quot;> </xref> dos navegadores no <xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>dicionário.</xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.Browsers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  id: CanCombineFormsInDeck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanCombineFormsInDeck
  nameWithType: HttpCapabilitiesBase.CanCombineFormsInDeck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a coleções que contêm várias formas, como cartões separados."
  remarks: "A propriedade CanCombineFormsInDeck só se aplica a dispositivos móveis compatíveis WML. Se for true, o adaptador pode produzir várias formas da mesma página como cartões de um conjunto único, sempre que possível."
  example:
  - "The following code example shows how to determine whether the browser supports decks that contain multiple forms, such as separate cards.  \n  \n [!code-cs[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/add/codesnippet/csharp/p-system.web.configurati_320_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/add/codesnippet/visualbasic/p-system.web.configurati_320_1.aspx)]"
  syntax:
    content: public virtual bool CanCombineFormsInDeck { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a coleções que contêm vários formulários; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  id: CanInitiateVoiceCall
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanInitiateVoiceCall
  nameWithType: HttpCapabilitiesBase.CanInitiateVoiceCall
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o dispositivo de navegador é capaz de iniciar uma chamada de voz."
  remarks: "A propriedade CanInitiateVoiceCall só se aplica a dispositivos móveis compatíveis WML."
  example:
  - "The following code example shows how to determine whether the browser device is capable of initiating a voice call.  \n  \n [!code-cs[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/add/codesnippet/csharp/p-system.web.configurati_5_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/add/codesnippet/visualbasic/p-system.web.configurati_5_1.aspx)]"
  syntax:
    content: public virtual bool CanInitiateVoiceCall { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o dispositivo de navegador é capaz de iniciar uma chamada de voz; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  id: CanRenderAfterInputOrSelectElement
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderAfterInputOrSelectElement
  nameWithType: HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a conteúdo da página a seguir WML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: "A propriedade CanRenderAfterInputOrSelectElement só se aplica a dispositivos móveis compatíveis WML."
  example:
  - "The following code example shows how to determine whether the browser supports page content following HTML `<select>` or `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/add/codesnippet/csharp/def23b48-6df6-4cb2-be79-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/add/codesnippet/visualbasic/def23b48-6df6-4cb2-be79-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderAfterInputOrSelectElement { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a conteúdo HTML a seguir da página <xref uid=&quot;langword_csharp_&lt;select&gt; &quot; name=&quot;&lt;select&gt; &quot; href=&quot;&quot;> </xref>ou <xref uid=&quot;langword_csharp_&lt;input&gt; &quot; name=&quot;&lt;input&gt; &quot; href=&quot;&quot;> </xref>elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  id: CanRenderEmptySelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderEmptySelects
  nameWithType: HttpCapabilitiesBase.CanRenderEmptySelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a HTML vazia <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports empty HTML `<select>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/add/codesnippet/csharp/p-system.web.configurati_70_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/add/codesnippet/visualbasic/p-system.web.configurati_70_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderEmptySelects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a HTML vazia <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  id: CanRenderInputAndSelectElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderInputAndSelectElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a WML <xref uid=&quot;langword_csharp_INPUT&quot; name=&quot;INPUT&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_SELECT&quot; name=&quot;SELECT&quot; href=&quot;&quot;> </xref> elementos juntos no mesmo cartão."
  remarks: "A propriedade CanRenderInputAndSelectElementsTogether só se aplica a dispositivos móveis compatíveis WML."
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<input>` and `<select>` elements together.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/add/codesnippet/csharp/f29696c5-098f-4bb4-bc52-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/add/codesnippet/visualbasic/f29696c5-098f-4bb4-bc52-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderInputAndSelectElementsTogether { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a WML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementos juntos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  id: CanRenderMixedSelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderMixedSelects
  nameWithType: HttpCapabilitiesBase.CanRenderMixedSelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a WML <xref uid=&quot;langword_csharp_&lt;option&gt;&quot; name=&quot;&lt;option&gt;&quot; href=&quot;&quot;> </xref> elementos que especifique <xref uid=&quot;langword_csharp_onpick&quot; name=&quot;onpick&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> atributos."
  remarks: "A propriedade CanRenderMixedSelects só se aplica a dispositivos móveis compatíveis WML.       Se `false`, `onpick` valores são exibidos como hiperlinks e `value` atributos exigem um `<do>` elemento de postback."
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<option>` elements that specify both `onpick` and `value` attributes.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/add/codesnippet/csharp/p-system.web.configurati_159_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/add/codesnippet/visualbasic/p-system.web.configurati_159_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderMixedSelects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a WML <xref uid=&quot;langword_csharp_&lt;option&gt;&quot; name=&quot;&lt;option&gt;&quot; href=&quot;&quot;> </xref> elementos que especifique <xref uid=&quot;langword_csharp_onpick&quot; name=&quot;onpick&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> atributos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  id: CanRenderOneventAndPrevElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderOneventAndPrevElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a WML <xref uid=&quot;langword_csharp_&lt;onevent&gt;&quot; name=&quot;&lt;onevent&gt;&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_&lt;prev&gt;&quot; name=&quot;&lt;prev&gt;&quot; href=&quot;&quot;> </xref> elementos coexistirem com o mesmo cartão WML."
  remarks: "A propriedade CanRenderOneventAndPrevElementsTogether só se aplica a dispositivos móveis compatíveis WML.       Se `false`, WML `<onevent>` e `<prev>` elementos coexistirem com o mesmo cartão WML não serão ser renderizados corretamente."
  example:
  - "The following code example shows how to determine whether the browser supports WML `<onevent>` and `<prev>` elements that coexist within the same WML card.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/add/codesnippet/csharp/3effd139-a28b-4ed4-a597-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/add/codesnippet/visualbasic/3effd139-a28b-4ed4-a597-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderOneventAndPrevElementsTogether { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a WML <xref uid=&quot;langword_csharp_&lt;onevent&gt;&quot; name=&quot;&lt;onevent&gt;&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_&lt;prev&gt;&quot; name=&quot;&lt;prev&gt;&quot; href=&quot;&quot;> </xref> elementos coexistirem com o mesmo cartão WML; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  id: CanRenderPostBackCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderPostBackCards
  nameWithType: HttpCapabilitiesBase.CanRenderPostBackCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a cartões WML de postback."
  remarks: "A propriedade CanRenderPostBackCards aplica-se somente aos navegadores de dispositivo móvel WML compatível.       Se `false`, postback cartões não serão renderizados corretamente pelo navegador."
  example:
  - "The following code example shows how to determine whether the browser supports WML cards for postback.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/add/codesnippet/csharp/p-system.web.configurati_38_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/add/codesnippet/visualbasic/p-system.web.configurati_38_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderPostBackCards { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a cartões WML para postagem; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  id: CanRenderSetvarZeroWithMultiSelectionList
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderSetvarZeroWithMultiSelectionList
  nameWithType: HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a WML <xref uid=&quot;langword_csharp_&lt;setvar&gt;&quot; name=&quot;&lt;setvar&gt;&quot; href=&quot;&quot;> </xref> elementos com um <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> atributo 0."
  remarks: "A propriedade CanRenderSetvarZeroWithMultiSelectionList só se aplica a dispositivos móveis compatíveis WML.       Se `false`, HTML `<setvar>` elementos com um `value` atributo de `0` não será exibido corretamente."
  example:
  - "The following code example shows how to determine whether the browser supports WML `<setvar>` elements with a `value` attribute of 0.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/add/codesnippet/csharp/965cbaf2-04ba-434c-aba7-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/add/codesnippet/visualbasic/965cbaf2-04ba-434c-aba7-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a WML <xref uid=&quot;langword_csharp_&lt;setvar&gt;&quot; name=&quot;&lt;setvar&gt;&quot; href=&quot;&quot;> </xref> elementos com um <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> atributo de <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  id: CanSendMail
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanSendMail
  nameWithType: HttpCapabilitiesBase.CanSendMail
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte ao envio de email usando HTML <xref uid=&quot;langword_csharp_&lt;mailto&gt;&quot; name=&quot;&lt;mailto&gt;&quot; href=&quot;&quot;> </xref> elemento para exibir endereços eletrônicos."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports sending e-mail by using the HTML `<mailto>` element for displaying electronic addresses.  \n  \n [!code-vb[HttpCapabilitiesBase.CanSendMail#1](~/add/codesnippet/visualbasic/p-system.web.configurati_221_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.CanSendMail#1](~/add/codesnippet/csharp/p-system.web.configurati_221_1.aspx)]"
  syntax:
    content: public virtual bool CanSendMail { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte ao envio de email usando HTML <xref uid=&quot;langword_csharp_&lt;mailto&gt;&quot; name=&quot;&lt;mailto&gt;&quot; href=&quot;&quot;> </xref> elemento para exibir endereços eletrônicos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  id: Capabilities
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Capabilities
  nameWithType: HttpCapabilitiesBase.Capabilities
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Usada internamente para obter os recursos definidos do navegador."
  syntax:
    content: public System.Collections.IDictionary Capabilities { get; set; }
    return:
      type: System.Collections.IDictionary
      description: "Os recursos definidos do navegador."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Capabilities*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CDF
  id: CDF
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CDF
  nameWithType: HttpCapabilitiesBase.CDF
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CDF
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador dá suporte ao formato de definição de canal (CDF) para difusão na Web."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports CDF.  \n  \n [!code-vb[HttpCapabilitiesBase.CDF#1](~/add/codesnippet/visualbasic/p-system.web.configurati_293_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.CDF#1](~/add/codesnippet/csharp/p-system.web.configurati_293_1.aspx)]"
  syntax:
    content: public bool CDF { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a CDF; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CDF*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  id: ClrVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ClrVersion
  nameWithType: HttpCapabilitiesBase.ClrVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém a versão do .NET Framework que está instalado no cliente."
  remarks: "A propriedade ClrVersion é suportada apenas quando o navegador for o Internet Explorer versão 5.0 ou posterior.       Se o .NET Framework não estiver instalado no cliente, o valor dos elementos de versão retornado é `0, 0,-1,-1`.       Se mais de uma versão do .NET Framework está instalada no cliente, a propriedade ClrVersion retorna a versão mais recente."
  syntax:
    content: public Version ClrVersion { get; }
    return:
      type: System.Version
      description: "O common language runtime <xref:System.Version>.</xref:System.Version>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Cookies
  id: Cookies
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpCapabilitiesBase.Cookies
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Cookies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a cookies."
  remarks: "A propriedade de Cookies indica se o aplicativo de navegador dá suporte a cookies. Se o usuário tiver desabilitado cookies em seus aplicativos, a propriedade de Cookies não será afetada."
  example:
  - "The following code example shows how to determine whether the browser supports cookies.  \n  \n [!code-vb[HttpCapabilitiesBase.Cookies#1](~/add/codesnippet/visualbasic/p-system.web.configurati_7_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Cookies#1](~/add/codesnippet/csharp/p-system.web.configurati_7_1.aspx)]"
  syntax:
    content: public bool Cookies { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a cookies; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Crawler
  id: Crawler
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Crawler
  nameWithType: HttpCapabilitiesBase.Crawler
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Crawler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador é um rastreador de Web do mecanismo de pesquisa."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the client is a search engine Web crawler.  \n  \n [!code-vb[HttpCapabilitiesBase.Crawler#1](~/add/codesnippet/visualbasic/p-system.web.configurati_34_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Crawler#1](~/add/codesnippet/csharp/p-system.web.configurati_34_1.aspx)]"
  syntax:
    content: public bool Crawler { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador é um mecanismo de pesquisa; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Crawler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)
  id: CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Cria uma nova instância do <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> a ser usado."
  syntax:
    content: public System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter w);
    parameters:
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>a ser criado.</xref:System.IO.TextWriter>"
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "Uma nova instância do <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> a ser usado."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "O método falha ao criar uma instância de <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  id: DefaultSubmitButtonLimit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: DefaultSubmitButtonLimit
  nameWithType: HttpCapabilitiesBase.DefaultSubmitButtonLimit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna o número máximo de botões de envio que são permitidos para um formulário."
  remarks: "A propriedade DefaultSubmitButtonLimit principalmente representa o número de chaves de software que estão disponíveis em um dispositivo móvel WML compatível.       Páginas Web Forms para dispositivos móveis podem conter um <xref:System.Web.UI.MobileControls.SelectionList>objeto e mais de um <xref:System.Web.UI.MobileControls.Command>controle.</xref:System.Web.UI.MobileControls.Command> </xref:System.Web.UI.MobileControls.SelectionList> O DefaultSubmitButtonLimit permite que você escolha qual do <xref:System.Web.UI.MobileControls.Command>controles devem ser atribuídos a uma chave de software em dispositivos que têm várias chaves de software.</xref:System.Web.UI.MobileControls.Command>"
  syntax:
    content: public virtual int DefaultSubmitButtonLimit { get; }
    return:
      type: System.Int32
      description: "O número máximo de botões de envio que são permitidos para um formulário."
  overload: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey
  id: DisableOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: DisableOptimizedCacheKey()
  nameWithType: HttpCapabilitiesBase.DisableOptimizedCacheKey()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Usada internamente para desabilitar o uso de uma chave de cache otimizado."
  syntax:
    content: public void DisableOptimizedCacheKey ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  id: EcmaScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: EcmaScriptVersion
  nameWithType: HttpCapabilitiesBase.EcmaScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o número de versão de ECMAScript que dá suporte ao navegador."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports an ECMAScript major version number greater than 1.  \n  \n [!code-cs[HttpCapabilitiesBase.EcmaScriptVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_75_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.EcmaScriptVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_75_1.aspx)]"
  syntax:
    content: public Version EcmaScriptVersion { get; }
    return:
      type: System.Version
      description: "O número de versão de ECMAScript que dá suporte ao navegador."
  overload: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Frames
  id: Frames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Frames
  nameWithType: HttpCapabilitiesBase.Frames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Frames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a quadros HTML."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML frames.  \n  \n [!code-cs[HttpCapabilitiesBase.Frames#1](~/add/codesnippet/csharp/p-system.web.configurati_188_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Frames#1](~/add/codesnippet/visualbasic/p-system.web.configurati_188_1.aspx)]"
  syntax:
    content: public bool Frames { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a quadros. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Frames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  id: GatewayMajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GatewayMajorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o número de versão principal do gateway sem fio usado para acessar o servidor, se conhecido."
  syntax:
    content: public virtual int GatewayMajorVersion { get; }
    return:
      type: System.Int32
      description: "O número de versão principal do gateway sem fio usado para acessar o servidor, se conhecido. O padrão é <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "O número de versão principal do gateway sem fio não pode ser analisado."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  id: GatewayMinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GatewayMinorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o número de versão secundária do gateway sem fio usado para acessar o servidor, se conhecido."
  syntax:
    content: public virtual double GatewayMinorVersion { get; }
    return:
      type: System.Double
      description: "O número de versão secundária do gateway sem fio usado para acessar o servidor, se conhecido. O padrão é <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "O número de versão secundária do gateway sem fio não pode ser analisado."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  id: GatewayVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GatewayVersion
  nameWithType: HttpCapabilitiesBase.GatewayVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém a versão do gateway sem fio usada para acessar o servidor, se conhecido."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the gateway is an `UP` gateway.  \n  \n [!code-vb[HttpCapabilitiesBase.GatewayVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_11_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.GatewayVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_11_1.aspx)]"
  syntax:
    content: public virtual string GatewayVersion { get; }
    return:
      type: System.String
      description: "O número de versão do gateway sem fio usado para acessar o servidor, se conhecido. O padrão é <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions
  id: GetClrVersions
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GetClrVersions()
  nameWithType: HttpCapabilitiesBase.GetClrVersions()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna todas as versões do common language runtime do .NET Framework que estão instaladas no cliente."
  remarks: "O método GetClrVersions é suportado apenas quando o navegador for o Internet Explorer versão 5.0 ou posterior. Se o common language runtime não está instalado no cliente, a propriedade retornará uma matriz que contém um único <xref:System.Version>do objeto com os valores 0, 0, -1, -1.</xref:System.Version>"
  syntax:
    content: public Version[] GetClrVersions ();
    parameters: []
    return:
      type: System.Version[]
      description: "Uma matriz de <xref:System.Version>objetos.</xref:System.Version>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)
  id: GetConfigCapabilities(System.String,System.Web.HttpRequest)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GetConfigCapabilities(String,HttpRequest)
  nameWithType: HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Usada internamente para retornar uma instância de <xref href=&quot;System.Web.Configuration.HttpCapabilitiesBase&quot;> </xref> que representa o navegador que gerou especificado <xref href=&quot;System.Web.HttpRequest&quot;> </xref>."
  syntax:
    content: public static System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities (string configKey, System.Web.HttpRequest request);
    parameters:
    - id: configKey
      type: System.String
      description: "O nome da seção de configuração que configura recursos do navegador."
    - id: request
      type: System.Web.HttpRequest
      description: "O <xref href=&quot;System.Web.HttpRequest&quot;> </xref> gerado pelo navegador para o qual retornar os recursos e que é geralmente atual <xref href=&quot;System.Web.HttpRequest&quot;> </xref>."
    return:
      type: System.Web.Configuration.HttpCapabilitiesBase
      description: "Uma instância de <xref href=&quot;System.Web.Configuration.HttpCapabilitiesBase&quot;> </xref> que representa o navegador que gerou especificado <xref href=&quot;System.Web.HttpRequest&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  id: HasBackButton
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HasBackButton
  nameWithType: HttpCapabilitiesBase.HasBackButton
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador tiver dedicado **novamente** botão."
  remarks: "Se `false`, um controle de link pode ser necessário quando um **novamente** botão não está disponível."
  example:
  - "The following code example shows how to determine whether the browser has a dedicated **Back** button.  \n  \n [!code-vb[HttpCapabilitiesBase.HasBackButton#1](~/add/codesnippet/visualbasic/p-system.web.configurati_229_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.HasBackButton#1](~/add/codesnippet/csharp/p-system.web.configurati_229_1.aspx)]"
  syntax:
    content: public virtual bool HasBackButton { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador tiver dedicado **novamente** botão; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  id: HidesRightAlignedMultiselectScrollbars
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HidesRightAlignedMultiselectScrollbars
  nameWithType: HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se a barra de rolagem de uma marca HTML <xref uid=&quot;langword_csharp_&lt;select multiple&gt;&quot; name=&quot;&lt;select multiple&gt;&quot; href=&quot;&quot;> </xref> elemento com um <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> valor de atributo <xref uid=&quot;langword_csharp_right&quot; name=&quot;right&quot; href=&quot;&quot;> </xref> é obscurecida após o processamento."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser obscures the scrollbar for right-aligned multi-select elements.  \n  \n [!code-vb[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/add/codesnippet/visualbasic/35e8f82c-ef59-4da6-a070-_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/add/codesnippet/csharp/35e8f82c-ef59-4da6-a070-_1.aspx)]"
  syntax:
    content: public virtual bool HidesRightAlignedMultiselectScrollbars { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a barra de rolagem de uma marca HTML <xref uid=&quot;langword_csharp_&lt;select multiple&gt;&quot; name=&quot;&lt;select multiple&gt;&quot; href=&quot;&quot;> </xref> elemento com um <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> valor de atributo <xref uid=&quot;langword_csharp_right&quot; name=&quot;right&quot; href=&quot;&quot;> </xref> obscurecidas na renderização; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  id: HtmlTextWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HtmlTextWriter
  nameWithType: HttpCapabilitiesBase.HtmlTextWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o nome de classe totalmente qualificado do <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> para usar."
  syntax:
    content: public string HtmlTextWriter { get; set; }
    return:
      type: System.String
      description: "O nome de classe totalmente qualificado do <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> para usar."
  overload: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Id
  id: Id
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Id
  nameWithType: HttpCapabilitiesBase.Id
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Id
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o identificador interno do navegador conforme especificado no arquivo de definição do navegador."
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "Identificador interno do navegador conforme especificado no arquivo de definição do navegador."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Init
  id: Init
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Init()
  nameWithType: HttpCapabilitiesBase.Init()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Init()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Usada internamente para inicializar um conjunto interno de valores."
  syntax:
    content: protected virtual void Init ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesBase.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.InputType
  id: InputType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: InputType
  nameWithType: HttpCapabilitiesBase.InputType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.InputType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna o tipo de entrada com suporte pelo navegador."
  remarks: "Os valores de retorno possíveis incluem:-`virtualKeyboard`      -   `telephoneKeypad`      -   `keyboard`"
  example:
  - "The following code example shows how to determine the type of input support.  \n  \n [!code-cs[HttpCapabilitiesBase.InputType#1](~/add/codesnippet/csharp/p-system.web.configurati_266_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.InputType#1](~/add/codesnippet/visualbasic/p-system.web.configurati_266_1.aspx)]"
  syntax:
    content: public virtual string InputType { get; }
    return:
      type: System.String
      description: "O tipo de entrada com suporte pelo navegador. O padrão é `telephoneKeypad`."
  overload: System.Web.Configuration.HttpCapabilitiesBase.InputType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)
  id: IsBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: IsBrowser(String)
  nameWithType: HttpCapabilitiesBase.IsBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador do cliente é o mesmo que o navegador especificado."
  remarks: "O método IsBrowser também retorna `true` se a definição de navegador do cliente herda de navegador especificado."
  syntax:
    content: public bool IsBrowser (string browserName);
    parameters:
    - id: browserName
      type: System.String
      description: "O navegador especificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador do cliente é o mesmo que o navegador especificado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsColor
  id: IsColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: IsColor
  nameWithType: HttpCapabilitiesBase.IsColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador tiver uma exibição de cores."
  remarks: ''
  example:
  - "The following code example shows whether the client's browser supports color. The returned value could be used to determine the appropriate image to send to the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.IsColor#1](~/add/codesnippet/csharp/p-system.web.configurati_262_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.IsColor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_262_1.aspx)]"
  syntax:
    content: public virtual bool IsColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador tiver uma exibição da cor; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.IsColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  id: IsMobileDevice
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: IsMobileDevice
  nameWithType: HttpCapabilitiesBase.IsMobileDevice
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador é um dispositivo móvel reconhecido."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is a mobile device.  \n  \n [!code-cs[HttpCapabilitiesBase.IsMobileDevice#1](~/add/codesnippet/csharp/p-system.web.configurati_270_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.IsMobileDevice#1](~/add/codesnippet/visualbasic/p-system.web.configurati_270_1.aspx)]"
  syntax:
    content: public virtual bool IsMobileDevice { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador for um dispositivo móvel reconhecido; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpCapabilitiesBase.Item(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o valor do recurso de navegador especificado. No c#, essa propriedade é o indexador da classe."
  remarks: "No JScript, você pode usar as propriedades indexadas padrão definidas por um tipo, mas você não pode definir explicitamente as suas próprias. No entanto, especificando o `expando` atributo em uma classe fornece automaticamente uma propriedade indexada padrão com um tipo de `Object` e um tipo de índice `String`."
  syntax:
    content: public virtual string this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "O nome do recurso de navegador para recuperar."
    return:
      type: System.String
      description: "O recurso de navegador com o nome da chave especificado."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  id: JavaApplets
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: JavaApplets
  nameWithType: HttpCapabilitiesBase.JavaApplets
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a Java."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports Java.  \n  \n [!code-cs[HttpCapabilitiesBase.JavaApplets#1](~/add/codesnippet/csharp/p-system.web.configurati_397_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.JavaApplets#1](~/add/codesnippet/visualbasic/p-system.web.configurati_397_1.aspx)]"
  syntax:
    content: public bool JavaApplets { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte ao Java; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  id: JavaScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: JavaScript
  nameWithType: HttpCapabilitiesBase.JavaScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a JavaScript."
  remarks: "Se o navegador dá suporte a JavaScript, mas o script está desativado por meio de uma configuração de segurança, a propriedade de JavaScript retornará `true` mas o script não será executado no navegador."
  example:
  - "The following code example shows how to determine whether the browser supports JavaScript.  \n  \n [!code-vb[HttpCapabilitiesBase.JavaScript#1](~/add/codesnippet/visualbasic/p-system.web.configurati_318_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.JavaScript#1](~/add/codesnippet/csharp/p-system.web.configurati_318_1.aspx)]"
  syntax:
    content: public bool JavaScript { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a JavaScript; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.JavaScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  id: JScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: JScriptVersion
  nameWithType: HttpCapabilitiesBase.JScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém a versão de JScript dá suporte ao navegador."
  syntax:
    content: public Version JScriptVersion { get; }
    return:
      type: System.Version
      description: "O <xref:System.Version>do JScript dá suporte ao navegador.</xref:System.Version>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  id: MajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MajorVersion
  nameWithType: HttpCapabilitiesBase.MajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém as principais (inteiro) o número de versão do navegador."
  remarks: ''
  example:
  - "The following code example adds the major and minor (integer and decimal) values of the browser version number and sends the result to browser.  \n  \n [!code-cs[HttpCapabilitiesBase.MajorVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_241_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.MajorVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_241_1.aspx)]"
  syntax:
    content: public int MajorVersion { get; }
    return:
      type: System.Int32
      description: "O número de versão principal do navegador."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "O valor de versão principal não é um inteiro."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  id: MaximumHrefLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MaximumHrefLength
  nameWithType: HttpCapabilitiesBase.MaximumHrefLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o comprimento máximo em caracteres para o <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> atributo de uma marca HTML <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> elemento (âncora)."
  syntax:
    content: public virtual int MaximumHrefLength { get; }
    return:
      type: System.Int32
      description: "O comprimento máximo em caracteres para o <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> atributo de uma marca HTML <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> elemento (âncora)."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  id: MaximumRenderedPageSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MaximumRenderedPageSize
  nameWithType: HttpCapabilitiesBase.MaximumRenderedPageSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o comprimento máximo da página, em bytes, que o navegador pode exibir."
  remarks: "Processamento por um gateway intermediário pode alterar o número de bytes que atingem o navegador. ASP.NET não impõe esse limite de tamanho de página.       MaximumRenderedPageSize é especialmente útil ao trabalhar com navegadores clientes móveis."
  syntax:
    content: public virtual int MaximumRenderedPageSize { get; }
    return:
      type: System.Int32
      description: "O comprimento máximo da página, em bytes, que o navegador pode exibir. O padrão é `2000`."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  id: MaximumSoftkeyLabelLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MaximumSoftkeyLabelLength
  nameWithType: HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna o comprimento máximo do texto que pode exibir um rótulo de chave de software."
  remarks: "A propriedade MaximumSoftkeyLabelLength só se aplica a dispositivos móveis compatíveis WML."
  example:
  - "The following code example shows how to determine the maximum length of the soft-key label for the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/add/codesnippet/csharp/p-system.web.configurati_145_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/add/codesnippet/visualbasic/p-system.web.configurati_145_1.aspx)]"
  syntax:
    content: public virtual int MaximumSoftkeyLabelLength { get; }
    return:
      type: System.Int32
      description: "O comprimento máximo do texto que pode exibir um rótulo de chave de software. O padrão é <xref uid=&quot;langword_csharp_5&quot; name=&quot;5&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  id: MinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MinorVersion
  nameWithType: HttpCapabilitiesBase.MinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o menor (ou seja, decimal) número da versão do navegador."
  remarks: ''
  example:
  - "The following code example returns the minor version of the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.MinorVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_84_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.MinorVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_84_1.aspx)]"
  syntax:
    content: public double MinorVersion { get; }
    return:
      type: System.Double
      description: "O número de versão secundária do navegador."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "O número de versão secundária do cabeçalho não é válido."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  id: MinorVersionString
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MinorVersionString
  nameWithType: HttpCapabilitiesBase.MinorVersionString
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o número de versão (decimal) secundária do navegador como uma cadeia de caracteres."
  syntax:
    content: public string MinorVersionString { get; }
    return:
      type: System.String
      description: "O número de versão secundária do navegador."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  id: MobileDeviceManufacturer
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MobileDeviceManufacturer
  nameWithType: HttpCapabilitiesBase.MobileDeviceManufacturer
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna o nome do fabricante de um dispositivo móvel, se conhecido."
  syntax:
    content: public virtual string MobileDeviceManufacturer { get; }
    return:
      type: System.String
      description: "O nome do fabricante de um dispositivo móvel, se conhecido. O padrão é <xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  id: MobileDeviceModel
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MobileDeviceModel
  nameWithType: HttpCapabilitiesBase.MobileDeviceModel
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o nome do modelo de um dispositivo móvel, se conhecida."
  syntax:
    content: public virtual string MobileDeviceModel { get; }
    return:
      type: System.String
      description: "O nome do modelo de um dispositivo móvel, se conhecido. O padrão é <xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  id: MSDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MSDomVersion
  nameWithType: HttpCapabilitiesBase.MSDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém a versão do Microsoft HTML (MSHTML) modelo DOM (Document Object) que o navegador dá suporte."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports an MSHTML DOM major version greater than 1.  \n  \n [!code-vb[HttpCapabilitiesBase.MSDomVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_222_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.MSDomVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_222_1.aspx)]"
  syntax:
    content: public Version MSDomVersion { get; }
    return:
      type: System.Version
      description: "O número da versão de MSHTML DOM que o navegador dá suporte."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  id: NumberOfSoftkeys
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: NumberOfSoftkeys
  nameWithType: HttpCapabilitiesBase.NumberOfSoftkeys
  fullName: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna o número de chaves de software em um dispositivo móvel."
  remarks: "A propriedade NumberOfSoftkeys só se aplica a dispositivos móveis compatíveis WML.       Chaves de software são chaves especiais que o aplicativo geralmente pode ser mapeados para tarefas personalizadas. Soft-chave texto é exibido na tela os cantos inferior esquerda e inferior direita."
  syntax:
    content: public virtual int NumberOfSoftkeys { get; }
    return:
      type: System.Int32
      description: "O número de chaves de software com suporte em um dispositivo móvel. O padrão é <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Platform
  id: Platform
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Platform
  nameWithType: HttpCapabilitiesBase.Platform
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Platform
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o nome da plataforma que o cliente usa, se for conhecida."
  remarks: "Alguns dos valores possíveis para a propriedade de plataforma são os seguintes:- `Unknown`       -    `Win95`       -    `Win98`       -    `Windows NT 5.0` (Windows 2000) - `Windows NT 5.1` (Windows XP) - `WinNT` (todas as outras versões do Windows NT) -`Win16`      -   `WinCE`      -   `Mac68K`      -   `MacPPC`      -   `UNIX`      -   `WebTV`"
  example:
  - "The following code example shows how to determine whether the browser is running on the Windows NT platform.  \n  \n [!code-cs[HttpCapabilitiesBase.Platform#1](~/add/codesnippet/csharp/p-system.web.configurati_235_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Platform#1](~/add/codesnippet/visualbasic/p-system.web.configurati_235_1.aspx)]"
  syntax:
    content: public string Platform { get; }
    return:
      type: System.String
      description: "O sistema operacional que o cliente usa, se for conhecida, caso contrário, o valor é definido como <xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Platform*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  id: PreferredImageMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredImageMime
  nameWithType: HttpCapabilitiesBase.PreferredImageMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna o tipo MIME do tipo de conteúdo de imagem normalmente preferido pelo navegador."
  remarks: ''
  example:
  - "The following code example shows how to determine the type of image typically preferred by a browser.  \n  \n [!code-vb[HttpCapabilitiesBase.PreferredImageMime#1](~/add/codesnippet/visualbasic/p-system.web.configurati_205_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.PreferredImageMime#1](~/add/codesnippet/csharp/p-system.web.configurati_205_1.aspx)]"
  syntax:
    content: public virtual string PreferredImageMime { get; }
    return:
      type: System.String
      description: "O tipo MIME do tipo de conteúdo de imagem normalmente preferido pelo navegador. O padrão é <xref uid=&quot;langword_csharp_image/gif&quot; name=&quot;image/gif&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  id: PreferredRenderingMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredRenderingMime
  nameWithType: HttpCapabilitiesBase.PreferredRenderingMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna o tipo MIME do tipo de conteúdo normalmente preferido pelo navegador."
  remarks: ''
  example:
  - "The following code example shows how to determine the MIME type typically preferred by the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.PreferredRenderingMime#1](~/add/codesnippet/csharp/p-system.web.configurati_125_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.PreferredRenderingMime#1](~/add/codesnippet/visualbasic/p-system.web.configurati_125_1.aspx)]"
  syntax:
    content: public virtual string PreferredRenderingMime { get; }
    return:
      type: System.String
      description: "O tipo MIME do tipo de conteúdo normalmente preferido pelo navegador. O padrão é <xref uid=&quot;langword_csharp_text/html&quot; name=&quot;text/html&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  id: PreferredRenderingType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredRenderingType
  nameWithType: HttpCapabilitiesBase.PreferredRenderingType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o nome geral para o tipo de conteúdo preferido de navegador."
  remarks: ''
  example:
  - "The following code example shows how to determine the type of content that the browser prefers.  \n  \n [!code-cs[HttpCapabilitiesBase.PreferredRenderingType#1](~/add/codesnippet/csharp/p-system.web.configurati_61_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.PreferredRenderingType#1](~/add/codesnippet/visualbasic/p-system.web.configurati_61_1.aspx)]"
  syntax:
    content: public virtual string PreferredRenderingType { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_html32&quot; name=&quot;html32&quot; href=&quot;&quot;></xref>or <xref uid=&quot;langword_csharp_chtml10&quot; name=&quot;chtml10&quot; href=&quot;&quot;></xref>. O padrão é <xref uid=&quot;langword_csharp_html32&quot; name=&quot;html32&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  id: PreferredRequestEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredRequestEncoding
  nameWithType: HttpCapabilitiesBase.PreferredRequestEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém a codificação de solicitação preferencial pelo navegador."
  syntax:
    content: public virtual string PreferredRequestEncoding { get; }
    return:
      type: System.String
      description: "A solicitação codificação preferencial pelo navegador."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  id: PreferredResponseEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredResponseEncoding
  nameWithType: HttpCapabilitiesBase.PreferredResponseEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém a codificação da resposta preferencial pelo navegador."
  syntax:
    content: public virtual string PreferredResponseEncoding { get; }
    return:
      type: System.String
      description: "A codificação da resposta preferencial pelo navegador."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  id: RendersBreakBeforeWmlSelectAndInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreakBeforeWmlSelectAndInput
  nameWithType: HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador renderiza uma quebra de linha antes de <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: "A propriedade RendersBreakBeforeWmlSelectAndInput só se aplica a dispositivos móveis compatíveis WML.       Se `true`, o seguinte conteúdo `<select>` ou `<input>` elementos serão automaticamente colocados em uma nova linha."
  example:
  - "The following code example shows how to determine whether the browser renders a line break before `<select>` or `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/add/codesnippet/csharp/9303e792-7cc5-4e57-92b0-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/add/codesnippet/visualbasic/9303e792-7cc5-4e57-92b0-_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreakBeforeWmlSelectAndInput { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador renderiza uma quebra de linha antes de <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  id: RendersBreaksAfterHtmlLists
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreaksAfterHtmlLists
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador renderiza uma quebra de linha depois de elementos de item de lista."
  remarks: "Se `true`, o conteúdo de elementos de item de lista a seguir serão automaticamente colocada em uma nova linha."
  example:
  - "The following code example shows how to determine whether the browser renders a line break after list-item elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/add/codesnippet/csharp/p-system.web.configurati_162_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/add/codesnippet/visualbasic/p-system.web.configurati_162_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreaksAfterHtmlLists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador renderiza uma quebra de linha depois de elementos de item de lista; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  id: RendersBreaksAfterWmlAnchor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreaksAfterWmlAnchor
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador renderiza uma quebra de linha após uma HTML autônomo <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> elemento (âncora)."
  remarks: "A propriedade RendersBreaksAfterWmlAnchor só se aplica a dispositivos móveis compatíveis WML.       Se `true`, o conteúdo a seguir uma HTML autônomo `<a>` elemento (âncora) serão automaticamente colocado em uma nova linha."
  example:
  - "The following code example shows how to determine whether the browser renders a line break after a stand-alone WML `<a>` (anchor) element.  \n  \n [!code-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_28_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/add/codesnippet/csharp/p-system.web.configurati_28_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreaksAfterWmlAnchor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador renderiza uma quebra de linha após uma HTML autônomo <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> elemento (âncora); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  id: RendersBreaksAfterWmlInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreaksAfterWmlInput
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador renderiza uma quebra de linha após um HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "A propriedade RendersBreaksAfterWmlInput só se aplica a dispositivos móveis compatíveis WML.       Se `true`, o conteúdo de uma marca HTML a seguir `<input>` elemento serão automaticamente colocado em uma nova linha."
  example:
  - "The following code example shows how to determine whether the browser renders a line break after an HTML `<input>` element.  \n  \n [!code-cs[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/add/codesnippet/csharp/p-system.web.configurati_299_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/add/codesnippet/visualbasic/p-system.web.configurati_299_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreaksAfterWmlInput { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador renderiza uma quebra de linha após um HTML <xref uid=&quot;langword_csharp_&lt;input&gt; &quot; name=&quot;&lt;input&gt; &quot; href=&quot;&quot;> </xref>elemento; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  id: RendersWmlDoAcceptsInline
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersWmlDoAcceptsInline
  nameWithType: HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador de dispositivo móvel processa um WML <xref uid=&quot;langword_csharp_do&quot; name=&quot;do&quot; href=&quot;&quot;> </xref>-baseado em formulário aceitar construção como um botão embutido em vez de uma chave de software."
  remarks: "A propriedade RendersWmlDoAcceptsInline só se aplica a dispositivos móveis compatíveis WML."
  example:
  - "The following code example shows how to determine whether the browser renders a WML `do`-based form-accept construct as an inline button.  \n  \n [!code-vb[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/add/codesnippet/visualbasic/p-system.web.configurati_225_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/add/codesnippet/csharp/p-system.web.configurati_225_1.aspx)]"
  syntax:
    content: public virtual bool RendersWmlDoAcceptsInline { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador de dispositivo móvel processa um WML <xref uid=&quot;langword_csharp_do&quot; name=&quot;do&quot; href=&quot;&quot;> </xref>-com base em formulário-aceitar construção como um botão embutido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  id: RendersWmlSelectsAsMenuCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersWmlSelectsAsMenuCards
  nameWithType: HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador renderiza WML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementos, como cartões de menu, em vez de uma caixa de combinação."
  remarks: "A propriedade RendersWmlSelectsAsMenuCards só se aplica a dispositivos móveis compatíveis WML."
  example:
  - "The following code example shows how to determine whether the browser renders WML `<select>` elements as menu cards.  \n  \n [!code-vb[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/add/codesnippet/visualbasic/p-system.web.configurati_310_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/add/codesnippet/csharp/p-system.web.configurati_310_1.aspx)]"
  syntax:
    content: public virtual bool RendersWmlSelectsAsMenuCards { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador renderiza WML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementos como cartões de menu; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  id: RequiredMetaTagNameValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiredMetaTagNameValue
  nameWithType: HttpCapabilitiesBase.RequiredMetaTagNameValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Usada internamente para produzir uma marca meta necessária por alguns navegadores."
  remarks: "Destinado somente para uso interno. Alguns navegadores exigem uma marca meta semelhante à seguinte para o navegador processar corretamente.      ```   <META NAME=&quot;NAME&quot; CONTENT=&quot;VALUE&quot;>   ```"
  syntax:
    content: public virtual string RequiredMetaTagNameValue { get; }
    return:
      type: System.String
      description: "Uma marca meta necessária por alguns navegadores."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  id: RequiresAttributeColonSubstitution
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresAttributeColonSubstitution
  nameWithType: HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador requer dois-pontos em valores de atributos do elemento a ser substituído por um caractere diferente."
  remarks: "Alguns navegadores não reconhecem os dois-pontos em valores de atributos do elemento. Se `true`, um caractere diferente será substituído na renderização e retornado em dados de postagem."
  example:
  - "The following code example shows how to determine whether the browser requires colons in element attribute values to be substituted with a different character.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/add/codesnippet/csharp/75aeaef6-dcfa-4061-9538-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/add/codesnippet/visualbasic/75aeaef6-dcfa-4061-9538-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresAttributeColonSubstitution { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador requer dois-pontos em valores de atributos do elemento a ser substituído por um caractere diferente; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  id: RequiresContentTypeMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresContentTypeMetaTag
  nameWithType: HttpCapabilitiesBase.RequiresContentTypeMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador requer um HTML <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> elemento para o qual o <xref uid=&quot;langword_csharp_content-type&quot; name=&quot;content-type&quot; href=&quot;&quot;> </xref> atributo é especificado."
  remarks: "Se `true`, adaptadores de controle de servidor Inserir a seguinte marca no HTML `<head>` elemento de uma página da Web: ```   <META HTTP-EQUIV=&quot;CONTENT-TYPE&quot; CONTENT=&quot;&quot;; CHARSET=&quot;&quot;>   ``` neste exemplo, `CONTENT` é o valor retornado pelo <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A>propriedade, e `charset` é a codificação de caracteres usada.</xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A>"
  example:
  - "The following code example shows how to determine whether the browser requires an HTML `<meta>` element for which the `content-type` attribute is specified.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/add/codesnippet/visualbasic/p-system.web.configurati_102_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/add/codesnippet/csharp/p-system.web.configurati_102_1.aspx)]"
  syntax:
    content: public virtual bool RequiresContentTypeMetaTag { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador requer um HTML <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> elemento para o qual o <xref uid=&quot;langword_csharp_content-type&quot; name=&quot;content-type&quot; href=&quot;&quot;> </xref> atributo é especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  id: RequiresControlStateInSession
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresControlStateInSession
  nameWithType: HttpCapabilitiesBase.RequiresControlStateInSession
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador requer estado seja mantido em sessões de controle."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires control state to be maintained in sessions.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/add/codesnippet/csharp/p-system.web.configurati_387_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/add/codesnippet/visualbasic/p-system.web.configurati_387_1.aspx)]"
  syntax:
    content: public bool RequiresControlStateInSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador requer controle estado seja mantido em sessões; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  id: RequiresDBCSCharacter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresDBCSCharacter
  nameWithType: HttpCapabilitiesBase.RequiresDBCSCharacter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador requer um conjunto de caracteres de byte duplo."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires a double-byte character set.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/add/codesnippet/visualbasic/p-system.web.configurati_51_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/add/codesnippet/csharp/p-system.web.configurati_51_1.aspx)]"
  syntax:
    content: public virtual bool RequiresDBCSCharacter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador requer um conjunto de caracteres de byte duplo; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  id: RequiresHtmlAdaptiveErrorReporting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresHtmlAdaptiveErrorReporting
  nameWithType: HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador exige que as mensagens de erro padrão."
  remarks: "Se `true`, o navegador não processa mensagens de erro HTTP corretamente. Para corrigir isso, os adaptadores de controle de servidor geram uma página de erro personalizada para o navegador."
  example:
  - "The following code example shows how to determine whether the browser requires nonstandard error messages.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/add/codesnippet/csharp/2ba3dcba-bae8-4562-b395-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/add/codesnippet/visualbasic/2ba3dcba-bae8-4562-b395-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresHtmlAdaptiveErrorReporting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador requer mensagens de erro padrão. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  id: RequiresLeadingPageBreak
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresLeadingPageBreak
  nameWithType: HttpCapabilitiesBase.RequiresLeadingPageBreak
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador requer o primeiro elemento no corpo de uma página da Web para ser um HTML <xref uid=&quot;langword_csharp_&lt;br&gt;&quot; name=&quot;&lt;br&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "Se `true`, adaptadores de controle de servidor Inserir adicional `<br>` elemento imediatamente após o `<body>` marca em uma página da Web."
  example:
  - "The following code example shows how to determine whether the browser requires the first element in the body of a Web page to be an HTML `<br>` element.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/add/codesnippet/visualbasic/p-system.web.configurati_195_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/add/codesnippet/csharp/p-system.web.configurati_195_1.aspx)]"
  syntax:
    content: public virtual bool RequiresLeadingPageBreak { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador requer o primeiro elemento no corpo de uma página da Web para ser um HTML <xref uid=&quot;langword_csharp_BR&quot; name=&quot;BR&quot; href=&quot;&quot;> </xref> elemento; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  id: RequiresNoBreakInFormatting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresNoBreakInFormatting
  nameWithType: HttpCapabilitiesBase.RequiresNoBreakInFormatting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador não oferece suporte a HTML <xref uid=&quot;langword_csharp_&lt;br&gt;&quot; name=&quot;&lt;br&gt;&quot; href=&quot;&quot;> </xref> elementos para formatar quebras de linha."
  remarks: "Se `true`, o navegador não será renderizado corretamente páginas que contêm o HTML `<br>` elemento."
  example:
  - "The following code example shows how to determine whether the browser does not support HTML `<br>` elements to format line breaks.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/add/codesnippet/visualbasic/p-system.web.configurati_224_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/add/codesnippet/csharp/p-system.web.configurati_224_1.aspx)]"
  syntax:
    content: public virtual bool RequiresNoBreakInFormatting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador não oferece suporte a HTML <xref uid=&quot;langword_csharp_&lt;br&gt;&quot; name=&quot;&lt;br&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  id: RequiresOutputOptimization
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresOutputOptimization
  nameWithType: HttpCapabilitiesBase.RequiresOutputOptimization
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador requer páginas contenham um formulário otimizado de tamanho das marcas de linguagem de marcação."
  remarks: "Se `true`, adaptadores de controle de servidor geram saída mínima para reduzir o tamanho da página resultante.      > [!NOTE] > RequiresOutputOptimization a propriedade retorna `true` para i modo – compatível com navegadores."
  example:
  - "The following code example shows how to determine whether the browser requires pages to contain a size-optimized form of markup language tags.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/add/codesnippet/csharp/p-system.web.configurati_64_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/add/codesnippet/visualbasic/p-system.web.configurati_64_1.aspx)]"
  syntax:
    content: public virtual bool RequiresOutputOptimization { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador requer páginas contenham um formulário otimizado de tamanho das marcas de linguagem de marcação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  id: RequiresPhoneNumbersAsPlainText
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresPhoneNumbersAsPlainText
  nameWithType: HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a discagem com base em texto sem formatação, ou se ele requer marcação especial."
  remarks: "A propriedade RequiresPhoneNumbersAsPlainText só se aplica a navegadores para os quais o <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A>é de propriedade `true`.</xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports phone dialing based on plain text, or whether it requires special markup.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/add/codesnippet/csharp/p-system.web.configurati_169_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/add/codesnippet/visualbasic/p-system.web.configurati_169_1.aspx)]"
  syntax:
    content: public virtual bool RequiresPhoneNumbersAsPlainText { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a discagem com base em texto sem formatação apenas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  id: RequiresSpecialViewStateEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresSpecialViewStateEncoding
  nameWithType: HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador requer <xref uid=&quot;langword_csharp_VIEWSTATE&quot; name=&quot;VIEWSTATE&quot; href=&quot;&quot;> </xref> valores para ser codificado."
  remarks: "O HTTP é um protocolo sem monitoração de estado, e `VIEWSTATE` é um mecanismo usado para manter alterações de cliente em várias solicitações. Cada controle em uma página da Web contém um <xref:System.Web.UI.Control.ViewState%2A>propriedade, que representa o acúmulo de todas as alterações feitas pelo cliente.</xref:System.Web.UI.Control.ViewState%2A> Em uma página de Web Forms, essas alterações são codificadas nos dados de postback como o `value` de uma marca HTML `<input>` elemento com um `type` atributo de `hidden`. Por exemplo: ```   <input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;t0PH_u56?cDxleHQ7P=&quot; />   ``` se `true`, não alfabéticos caracteres o `VIEWSTATE` valor não será enviado corretamente pelo navegador, nem por um gateway intermediário. Para corrigir isso, os adaptadores de controle de servidor substituem caracteres não alfabéticos o `VIEWSTATE` valor com aqueles que não necessitam de codificação em solicitações HTTP."
  example:
  - "The following code example shows how to determine whether the browser requires `VIEWSTATE` values to be specially encoded.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/add/codesnippet/csharp/ded66d43-c984-472a-ab07-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/add/codesnippet/visualbasic/ded66d43-c984-472a-ab07-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresSpecialViewStateEncoding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador requer <xref uid=&quot;langword_csharp_VIEWSTATE&quot; name=&quot;VIEWSTATE&quot; href=&quot;&quot;> </xref> valores especialmente codificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  id: RequiresUniqueFilePathSuffix
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUniqueFilePathSuffix
  nameWithType: HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador exige que as URLs de ação de forma exclusiva."
  remarks: "Uma referência automática HTML `<form>` elemento é aquele para o qual o `action` atributo especifica sua própria URL. Se `true`, formulários de referência automática não retornam os resultados corretos. Isso é devido ao armazenamento em cache, o navegador ou um gateway intermediário. Para corrigir isso, os adaptadores de controle de servidor anexar uma cadeia de caracteres de consulta padrão (`__ufps=``uniquefilepathsuffix`) para os valores da URL de ação de formulário de referência automática de formulários."
  example:
  - "The following code example shows how to determine whether the browser requires unique form-action URLs.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/add/codesnippet/visualbasic/p-system.web.configurati_74_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/add/codesnippet/csharp/p-system.web.configurati_74_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUniqueFilePathSuffix { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador requer URLs de ação de forma exclusiva. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  id: RequiresUniqueHtmlCheckboxNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUniqueHtmlCheckboxNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador requer exclusivo <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> HTML vários valores de atributo <xref uid=&quot;langword_csharp_&lt;input type=&quot;checkbox&quot;&gt;&quot; name=&quot;&lt;input type=&quot;checkbox&quot;&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires unique `NAME` attribute values of multiple HTML `<input type=\"checkbox\">` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/add/codesnippet/csharp/p-system.web.configurati_384_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/add/codesnippet/visualbasic/p-system.web.configurati_384_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUniqueHtmlCheckboxNames { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador requer exclusivo <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> HTML vários valores de atributo <xref uid=&quot;langword_csharp_&lt;input type=&quot;checkbox&quot;&gt;&quot; name=&quot;&lt;input type=&quot;checkbox&quot;&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  id: RequiresUniqueHtmlInputNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUniqueHtmlInputNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador requer exclusivo <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> HTML vários valores de atributo <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires unique `name` attribute values of multiple HTML `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/add/codesnippet/csharp/p-system.web.configurati_285_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/add/codesnippet/visualbasic/p-system.web.configurati_285_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUniqueHtmlInputNames { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador requer exclusivo <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> HTML vários valores de atributo <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  id: RequiresUrlEncodedPostfieldValues
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUrlEncodedPostfieldValues
  nameWithType: HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se será enviados pelo navegador de dados de postagem <xref uid=&quot;langword_csharp_UrlEncoded&quot; name=&quot;UrlEncoded&quot; href=&quot;&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser `UrlEncodes` postback data.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/add/codesnippet/visualbasic/f29bbebb-6fc1-44b9-b9d3-_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/add/codesnippet/csharp/f29bbebb-6fc1-44b9-b9d3-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUrlEncodedPostfieldValues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se dados de postagem enviados pelo navegador será <xref uid=&quot;langword_csharp_UrlEncoded&quot; name=&quot;UrlEncoded&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  id: ScreenBitDepth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenBitDepth
  nameWithType: HttpCapabilitiesBase.ScreenBitDepth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna a intensidade da tela, em bits por pixel."
  syntax:
    content: public virtual int ScreenBitDepth { get; }
    return:
      type: System.Int32
      description: "A profundidade da exibição, em bits por pixel. O padrão é <xref uid=&quot;langword_csharp_1&quot; name=&quot;1&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  id: ScreenCharactersHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenCharactersHeight
  nameWithType: HttpCapabilitiesBase.ScreenCharactersHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna a altura aproximada da exibição, em linhas de caracteres."
  remarks: "O valor retornado pode ser derivado do tamanho de caractere assumida e tamanho de pixel da tela real. O algoritmo para determinar a altura usa uma combinação de tamanhos de fonte padrão (de um arquivo. config), tamanhos específicos de navegador (novamente, a partir de um arquivo. config) e explícitos cabeçalhos enviados pelo navegador. Alguns navegadores podem depender de valores padrão interno, que se aproximar apenas a altura real."
  syntax:
    content: public virtual int ScreenCharactersHeight { get; }
    return:
      type: System.Int32
      description: "A altura aproximada da exibição, em linhas de caracteres. O padrão é <xref uid=&quot;langword_csharp_6&quot; name=&quot;6&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  id: ScreenCharactersWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenCharactersWidth
  nameWithType: HttpCapabilitiesBase.ScreenCharactersWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna a largura aproximada da exibição, em caracteres."
  remarks: "O valor retornado pode ser derivado do tamanho de caractere assumida e tamanho de pixel da tela real. O algoritmo para determinar a largura usa uma combinação de explícitos cabeçalhos enviados pelos dispositivos, tamanhos de fonte padrão (de um arquivo. config) e tamanhos específicos do dispositivo (novamente, a partir de um arquivo. config). Esses valores não são necessariamente exatas (especialmente para fontes de largura variável, esses valores são aproximados). Alguns dispositivos podem depender de valores padrão interno, que se aproximar apenas a largura real."
  syntax:
    content: public virtual int ScreenCharactersWidth { get; }
    return:
      type: System.Int32
      description: "A largura aproximada da exibição, em caracteres. O padrão é <xref uid=&quot;langword_csharp_12&quot; name=&quot;12&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  id: ScreenPixelsHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenPixelsHeight
  nameWithType: HttpCapabilitiesBase.ScreenPixelsHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna a altura aproximada da exibição, em pixels."
  remarks: "O valor retornado pode ser derivado do tamanho de caractere assumida e altura de caractere. O algoritmo para determinar a altura em pixels usa uma combinação de explícitos cabeçalhos enviados pelos dispositivos, tamanhos de fonte padrão (de um arquivo. config) e tamanhos específicos do dispositivo (novamente, a partir de um arquivo. config). Esses valores não são necessariamente exatas. Alguns dispositivos podem depender de valores padrão interno, que se aproximar apenas a altura real."
  syntax:
    content: public virtual int ScreenPixelsHeight { get; }
    return:
      type: System.Int32
      description: "A altura aproximada da exibição, em pixels. O padrão é <xref uid=&quot;langword_csharp_72&quot; name=&quot;72&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  id: ScreenPixelsWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenPixelsWidth
  nameWithType: HttpCapabilitiesBase.ScreenPixelsWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retorna a largura aproximada da exibição, em pixels."
  remarks: "O valor retornado pode ser derivado do tamanho de caractere assumida e largura do caractere. O algoritmo para determinar a largura de pixel usa uma combinação de explícitos cabeçalhos enviados pelos dispositivos, tamanhos de fonte padrão (de um arquivo. config) e tamanhos específicos do dispositivo (novamente, a partir de um arquivo. config). Esses valores não são necessariamente exatas (especialmente para fontes de largura variável, esses valores são aproximados). Alguns dispositivos podem depender de valores padrão interno, que se aproximar apenas a largura real."
  syntax:
    content: public virtual int ScreenPixelsWidth { get; }
    return:
      type: System.Int32
      description: "A largura aproximada da exibição, em pixels. O padrão é <xref uid=&quot;langword_csharp_96&quot; name=&quot;96&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  id: SupportsAccesskeyAttribute
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsAccesskeyAttribute
  nameWithType: HttpCapabilitiesBase.SupportsAccesskeyAttribute
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a <xref uid=&quot;langword_csharp_ACCESSKEY&quot; name=&quot;ACCESSKEY&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (âncora) e <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: "O `accesskey` atributo estende o controle de formulários e links em uma página da Web para plataformas móveis e acessíveis por meio da atribuição de uma chave de software ou outro controlador no dispositivo para interagir com HTML `<a>` (âncora) e `<input>` elementos."
  example:
  - "The following code example shows how to determine whether the browser supports the `accesskey` attribute of HTML `<a>` (anchor) and `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/add/codesnippet/csharp/p-system.web.configurati_98_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.configurati_98_1.aspx)]"
  syntax:
    content: public virtual bool SupportsAccesskeyAttribute { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a <xref uid=&quot;langword_csharp_accesskey&quot; name=&quot;accesskey&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (âncora) e <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  id: SupportsBodyColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsBodyColor
  nameWithType: HttpCapabilitiesBase.SupportsBodyColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a <xref uid=&quot;langword_csharp_bgcolor&quot; name=&quot;bgcolor&quot; href=&quot;&quot;> </xref> atributo do HTML <xref uid=&quot;langword_csharp_&lt;body&gt;&quot; name=&quot;&lt;body&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `bgcolor` attribute of the HTML `<body>` element.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsBodyColor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_366_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsBodyColor#1](~/add/codesnippet/csharp/p-system.web.configurati_366_1.aspx)]"
  syntax:
    content: public virtual bool SupportsBodyColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a <xref uid=&quot;langword_csharp_bgcolor&quot; name=&quot;bgcolor&quot; href=&quot;&quot;> </xref> atributo do HTML <xref uid=&quot;langword_csharp_&lt;body&gt;&quot; name=&quot;&lt;body&gt;&quot; href=&quot;&quot;> </xref> elemento; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  id: SupportsBold
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsBold
  nameWithType: HttpCapabilitiesBase.SupportsBold
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a HTML <xref uid=&quot;langword_csharp_&lt;b&gt;&quot; name=&quot;&lt;b&gt;&quot; href=&quot;&quot;> </xref> elementos para formatar o texto em negrito."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<b>` elements to format bold text.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsBold#1](~/add/codesnippet/visualbasic/p-system.web.configurati_211_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsBold#1](~/add/codesnippet/csharp/p-system.web.configurati_211_1.aspx)]"
  syntax:
    content: public virtual bool SupportsBold { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador dá suporte a HTML <xref uid=&quot;langword_csharp_&lt;b&gt;&quot; name=&quot;&lt;b&gt;&quot; href=&quot;&quot;> </xref> elementos para formatar o texto em negrito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  id: SupportsCacheControlMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsCacheControlMetaTag
  nameWithType: HttpCapabilitiesBase.SupportsCacheControlMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a <xref uid=&quot;langword_csharp_cache-control&quot; name=&quot;cache-control&quot; href=&quot;&quot;> </xref> valor para o <xref uid=&quot;langword_csharp_http-equiv&quot; name=&quot;http-equiv&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: "O `cache-control` valor para o `http-equiv` atributo HTML `<meta>` elementos permite o controle sobre o cliente de cache de conteúdo baixado, que inclui páginas da Web. O fragmento HTML a seguir mostra um exemplo: ```   <META HTTP-EQUIV=&quot;CACHE-CONTROL&quot; CONTENT=&quot;NO-CACHE&quot;/>   ``` se `true`, a inclusão da marca das `<head>` elemento de uma página da Web deve forçar o navegador para recarregar o conteúdo do servidor.       Se `false`, adaptadores de controle de servidor anexar uma cadeia de caracteres de consulta padrão (`__ufps=``uniquefilepathsuffix`) para valores de URL do link que ainda não tiver uma. Isso força o navegador para recarregar o conteúdo do servidor.       A propriedade SupportsCacheControlMetaTag também se aplica ao formulário de cabeçalho HTTP equivalente:```   CACHE-CONTROL: NO-CACHE   ```"
  example:
  - "The following code example shows how to determine whether the browser supports the `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/add/codesnippet/csharp/p-system.web.configurati_207_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/add/codesnippet/visualbasic/p-system.web.configurati_207_1.aspx)]"
  syntax:
    content: public virtual bool SupportsCacheControlMetaTag { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a <xref uid=&quot;langword_csharp_cache-control&quot; name=&quot;cache-control&quot; href=&quot;&quot;> </xref> valor para o <xref uid=&quot;langword_csharp_http-equiv&quot; name=&quot;http-equiv&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  id: SupportsCallback
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsCallback
  nameWithType: HttpCapabilitiesBase.SupportsCallback
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a scripts de retorno de chamada."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports callback scripts.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsCallback#1](~/add/codesnippet/visualbasic/p-system.web.configurati_321_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsCallback#1](~/add/codesnippet/csharp/p-system.web.configurati_321_1.aspx)]"
  syntax:
    content: public virtual bool SupportsCallback { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a scripts de retorno de chamada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  id: SupportsCss
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsCss
  nameWithType: HttpCapabilitiesBase.SupportsCss
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a folhas de estilo em cascata (CSS)."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports CSS.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsCss#1](~/add/codesnippet/csharp/p-system.web.configurati_129_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsCss#1](~/add/codesnippet/visualbasic/p-system.web.configurati_129_1.aspx)]"
  syntax:
    content: public virtual bool SupportsCss { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a CSS; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  id: SupportsDivAlign
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsDivAlign
  nameWithType: HttpCapabilitiesBase.SupportsDivAlign
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: "HTML `<div>` elementos são usados para agrupar vários elementos HTML de forma que estilos CSS podem ser aplicados a eles como um todo. O `align` atributo define o alinhamento horizontal de um `<div>` grupo em uma página da Web."
  example:
  - "The following code example shows how to determine whether the browser supports the `align` attribute of HTML `<div>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsDivAlign#1](~/add/codesnippet/csharp/p-system.web.configurati_329_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsDivAlign#1](~/add/codesnippet/visualbasic/p-system.web.configurati_329_1.aspx)]"
  syntax:
    content: public virtual bool SupportsDivAlign { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  id: SupportsDivNoWrap
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsDivNoWrap
  nameWithType: HttpCapabilitiesBase.SupportsDivNoWrap
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a <xref uid=&quot;langword_csharp_nowrap&quot; name=&quot;nowrap&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: "HTML `<div>` elementos são usados para agrupar vários elementos HTML de forma que estilos CSS podem ser aplicados a eles como um todo. O `nowrap` atributo especifica que os elementos contidos no `<div>` grupo deve permanecer adjacente uns aos outros sem quebra de texto para uma nova linha."
  example:
  - "The following code example shows how to determine whether the browser supports the `nowrap` attribute of HTML `<div>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/add/codesnippet/csharp/p-system.web.configurati_108_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/add/codesnippet/visualbasic/p-system.web.configurati_108_1.aspx)]"
  syntax:
    content: public virtual bool SupportsDivNoWrap { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a <xref uid=&quot;langword_csharp_nowrap&quot; name=&quot;nowrap&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  id: SupportsEmptyStringInCookieValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsEmptyStringInCookieValue
  nameWithType: HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a vazio (<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>) cadeias de caracteres em valores de cookie."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports empty (`null`) strings in cookie values.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/add/codesnippet/csharp/88f116fb-05a4-493a-9e0f-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/add/codesnippet/visualbasic/88f116fb-05a4-493a-9e0f-_1.aspx)]"
  syntax:
    content: public virtual bool SupportsEmptyStringInCookieValue { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a vazio (<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>) cadeias de caracteres em valores de cookie; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  id: SupportsFontColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsFontColor
  nameWithType: HttpCapabilitiesBase.SupportsFontColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a <xref uid=&quot;langword_csharp_color&quot; name=&quot;color&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `color` attribute of HTML `<font>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsFontColor#1](~/add/codesnippet/csharp/p-system.web.configurati_306_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsFontColor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_306_1.aspx)]"
  syntax:
    content: public virtual bool SupportsFontColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a <xref uid=&quot;langword_csharp_color&quot; name=&quot;color&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;font&gt; &quot; name=&quot;&lt;font&gt; &quot; href=&quot;&quot;> </xref>elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  id: SupportsFontName
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsFontName
  nameWithType: HttpCapabilitiesBase.SupportsFontName
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `name` attribute of HTML `<font>` elements.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsFontName#1](~/add/codesnippet/visualbasic/p-system.web.configurati_341_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsFontName#1](~/add/codesnippet/csharp/p-system.web.configurati_341_1.aspx)]"
  syntax:
    content: public virtual bool SupportsFontName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  id: SupportsFontSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsFontSize
  nameWithType: HttpCapabilitiesBase.SupportsFontSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a <xref uid=&quot;langword_csharp_size&quot; name=&quot;size&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;font&gt; &quot; name=&quot;&lt;font&gt; &quot; href=&quot;&quot;> </xref>elementos."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `size` attribute of HTML `<font>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsFontSize#1](~/add/codesnippet/csharp/p-system.web.configurati_328_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsFontSize#1](~/add/codesnippet/visualbasic/p-system.web.configurati_328_1.aspx)]"
  syntax:
    content: public virtual bool SupportsFontSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a <xref uid=&quot;langword_csharp_size&quot; name=&quot;size&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  id: SupportsImageSubmit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsImageSubmit
  nameWithType: HttpCapabilitiesBase.SupportsImageSubmit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte ao uso de uma imagem personalizada no lugar de um formulário padrão do botão de envio."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports using a custom image in place of a standard form Submit button.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsImageSubmit#1](~/add/codesnippet/csharp/p-system.web.configurati_33_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsImageSubmit#1](~/add/codesnippet/visualbasic/p-system.web.configurati_33_1.aspx)]"
  syntax:
    content: public virtual bool SupportsImageSubmit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte ao uso de uma imagem personalizada no lugar de um botão de envio de formulário padrão; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  id: SupportsIModeSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsIModeSymbols
  nameWithType: HttpCapabilitiesBase.SupportsIModeSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a símbolos de modo i."
  remarks: "O <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>a propriedade se aplica somente ao i-modo compatível com dispositivos.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>       Definir símbolos de imagem i-Phone específicos para navegadores de i-modo compatível usando o <xref:System.Web.UI.WebControls.Image.ImageUrl%2A>propriedade.</xref:System.Web.UI.WebControls.Image.ImageUrl%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports i-mode symbols.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/add/codesnippet/visualbasic/p-system.web.configurati_346_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/add/codesnippet/csharp/p-system.web.configurati_346_1.aspx)]"
  syntax:
    content: public virtual bool SupportsIModeSymbols { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador dá suporte a símbolos de modo i; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  id: SupportsInputIStyle
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsInputIStyle
  nameWithType: HttpCapabilitiesBase.SupportsInputIStyle
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a <xref uid=&quot;langword_csharp_istyle&quot; name=&quot;istyle&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: "O <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>a propriedade se aplica somente ao i-modo compatível com dispositivos.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>       O `istyle` atributo é usado para definir o estilo de entrada de um campo de entrada de texto em navegadores de i-modo compatível."
  example:
  - "The following code example shows how to determine whether the browser supports the `istyle` attribute of HTML `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsInputIStyle#1](~/add/codesnippet/csharp/p-system.web.configurati_164_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsInputIStyle#1](~/add/codesnippet/visualbasic/p-system.web.configurati_164_1.aspx)]"
  syntax:
    content: public virtual bool SupportsInputIStyle { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a <xref uid=&quot;langword_csharp_istyle&quot; name=&quot;istyle&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  id: SupportsInputMode
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsInputMode
  nameWithType: HttpCapabilitiesBase.SupportsInputMode
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: "A propriedade SupportsInputMode só se aplica a dispositivos compatíveis com i-modo.       O `MODE` atributo é usado para definir o modo de entrada de um campo de entrada de texto em navegadores de i-modo compatível."
  example:
  - "The following code example shows how to determine whether the browser supports the `mode` attribute of HTML `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsInputMode#1](~/add/codesnippet/csharp/p-system.web.configurati_141_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsInputMode#1](~/add/codesnippet/visualbasic/p-system.web.configurati_141_1.aspx)]"
  syntax:
    content: public virtual bool SupportsInputMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  id: SupportsItalic
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsItalic
  nameWithType: HttpCapabilitiesBase.SupportsItalic
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a HTML <xref uid=&quot;langword_csharp_&lt;i&gt;&quot; name=&quot;&lt;i&gt;&quot; href=&quot;&quot;> </xref> elementos para formatar o texto em itálico."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<i>` elements to format italic text.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsItalic#1](~/add/codesnippet/csharp/p-system.web.configurati_198_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsItalic#1](~/add/codesnippet/visualbasic/p-system.web.configurati_198_1.aspx)]"
  syntax:
    content: public virtual bool SupportsItalic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador dá suporte a HTML <xref uid=&quot;langword_csharp_&lt;i&gt;&quot; name=&quot;&lt;i&gt;&quot; href=&quot;&quot;> </xref> elementos para formatar o texto em itálico; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  id: SupportsJPhoneMultiMediaAttributes
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsJPhoneMultiMediaAttributes
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a atributos de multimídia J-Phone."
  remarks: "A propriedade SupportsJPhoneMultiMediaAttributes se aplica apenas aos dispositivos móveis compatíveis com J-Phone.       Telefone J é uma especificação de linguagem de marcação, com base em HTML, para os navegadores compatíveis com J-Phone. Se `true`, o navegador oferece suporte a atributos adicionais para HTML `<a>` (âncora) e `<select>` elementos. Os atributos adicionais com suporte são os seguintes:-`src`      -   `soundstart`      -   `loop`      -   `volume`      -   `vibration`      -   `viblength`"
  example:
  - "The following code example shows how to determine whether the browser supports J-Phone multimedia attributes.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/add/codesnippet/csharp/a19a3fd7-eca4-43f9-8389-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/add/codesnippet/visualbasic/a19a3fd7-eca4-43f9-8389-_1.aspx)]"
  syntax:
    content: public virtual bool SupportsJPhoneMultiMediaAttributes { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a atributos de multimídia J-Phone; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  id: SupportsJPhoneSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsJPhoneSymbols
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a símbolos de imagem J-telefone específico."
  remarks: "A propriedade SupportsJPhoneSymbols se aplica apenas aos dispositivos móveis compatíveis com J-Phone.       Definir símbolos de imagem J-Phone específicos para os navegadores compatíveis com J-telefone usando o <xref:System.Web.UI.WebControls.Image.ImageUrl%2A>propriedade.</xref:System.Web.UI.WebControls.Image.ImageUrl%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports J-Phone–specific picture symbols.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/add/codesnippet/csharp/p-system.web.configurati_401_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/add/codesnippet/visualbasic/p-system.web.configurati_401_1.aspx)]"
  syntax:
    content: public virtual bool SupportsJPhoneSymbols { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador dá suporte a símbolos de imagem J-Phone específicos; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  id: SupportsQueryStringInFormAction
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsQueryStringInFormAction
  nameWithType: HttpCapabilitiesBase.SupportsQueryStringInFormAction
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a uma cadeia de caracteres de consulta no <xref uid=&quot;langword_csharp_action&quot; name=&quot;action&quot; href=&quot;&quot;> </xref> valor de HTML do atributo <xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: "Se `false`, parâmetros de cadeia de caracteres de consulta são enviados em dados de postagem, como HTML `<input>` elementos com o `type` atributos definidos como `hidden`."
  example:
  - "The following code example shows how to determine whether the browser supports a query string in the value for the `action` attribute of HTML `<form>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/add/codesnippet/csharp/p-system.web.configurati_376_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/add/codesnippet/visualbasic/p-system.web.configurati_376_1.aspx)]"
  syntax:
    content: public virtual bool SupportsQueryStringInFormAction { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferecer suporte a uma cadeia de caracteres de consulta no <xref uid=&quot;langword_csharp_action&quot; name=&quot;action&quot; href=&quot;&quot;> </xref> valor de HTML do atributo <xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  id: SupportsRedirectWithCookie
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsRedirectWithCookie
  nameWithType: HttpCapabilitiesBase.SupportsRedirectWithCookie
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a cookies no redirecionamento."
  remarks: "Com o backup. Navegador 4.1 ou backup. Navegador 3.2, o <xref:System.Web.HttpResponse.Redirect%2A>método se comporta como se o valor da propriedade SupportsRedirectWithCookie o <xref:System.Web.HttpBrowserCapabilities>objeto é `false`, a menos que o <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A>propriedade no <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A>seção Web. config foi definida explicitamente `true`.</xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> </xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> </xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.HttpResponse.Redirect%2A>       No ASP.NET 1.1, as opções para essa configuração foram `true` ou `false`, mas com o ASP.NET 2.0, as opções são expandidas, e <xref:System.Web.HttpCookieMode>agora é a configuração padrão.</xref:System.Web.HttpCookieMode> Se seu aplicativo da Web tem o `cookieless` atributo do `<sessionState>` seção no arquivo Web. config definido como um valor booliano, <xref:System.Web.HttpResponse.Redirect%2A>devem funcionar conforme o esperado para esses navegadores.</xref:System.Web.HttpResponse.Redirect%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports cookies on redirection.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/add/codesnippet/visualbasic/p-system.web.configurati_97_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/add/codesnippet/csharp/p-system.web.configurati_97_1.aspx)]"
  syntax:
    content: public virtual bool SupportsRedirectWithCookie { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a cookies no redirecionamento. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  id: SupportsSelectMultiple
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsSelectMultiple
  nameWithType: HttpCapabilitiesBase.SupportsSelectMultiple
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a <xref uid=&quot;langword_csharp_multiple&quot; name=&quot;multiple&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `multiple` attribute of HTML `<select>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/add/codesnippet/csharp/p-system.web.configurati_289_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/add/codesnippet/visualbasic/p-system.web.configurati_289_1.aspx)]"
  syntax:
    content: public virtual bool SupportsSelectMultiple { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a <xref uid=&quot;langword_csharp_multiple&quot; name=&quot;multiple&quot; href=&quot;&quot;> </xref> atributo HTML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  id: SupportsUncheck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsUncheck
  nameWithType: HttpCapabilitiesBase.SupportsUncheck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se a limpar uma HTML check <xref uid=&quot;langword_csharp_&lt;input type=checkbox&gt;&quot; name=&quot;&lt;input type=checkbox&gt;&quot; href=&quot;&quot;> </xref> elemento é refletido nos dados de postagem."
  remarks: "Se `false`, o valor da `checked` atributo HTML `<input type=checkbox>` elementos é omitido do dados de postagem."
  example:
  - "The following code example shows how to determine whether the clearing of a checked HTML `<input type=checkbox>` element is reflected in postback data.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsUncheck#1](~/add/codesnippet/visualbasic/p-system.web.configurati_253_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsUncheck#1](~/add/codesnippet/csharp/p-system.web.configurati_253_1.aspx)]"
  syntax:
    content: public virtual bool SupportsUncheck { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a limpar uma HTML check <xref uid=&quot;langword_csharp_&lt;input type=checkbox&gt;&quot; name=&quot;&lt;input type=checkbox&gt;&quot; href=&quot;&quot;> </xref> elemento é refletido nos dados de postagem; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  id: SupportsXmlHttp
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsXmlHttp
  nameWithType: HttpCapabilitiesBase.SupportsXmlHttp
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a XML recebimento via HTTP."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports receiving XML over HTTP.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsXmlHttp#1](~/add/codesnippet/csharp/p-system.web.configurati_261_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsXmlHttp#1](~/add/codesnippet/visualbasic/p-system.web.configurati_261_1.aspx)]"
  syntax:
    content: public virtual bool SupportsXmlHttp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a recebimento XML sobre HTTP; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  id: System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  isEii: true
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Usada internamente para comparar os filtros."
  syntax:
    content: int IFilterResolutionService.CompareFilters (string filter1, string filter2);
    parameters:
    - id: filter1
      type: System.String
      description: "O primeiro filtro a ser comparado."
    - id: filter2
      type: System.String
      description: "O segundo filtro a ser comparado."
    return:
      type: System.Int32
      description: "1 if <code>filter1</code> is a parent of <code>filter2</code>; -1 if <code>filter2</code> is a parent of <code>filter1</code>; 0 if there is no parent-child relationship between <code>filter1</code> and <code>filter2</code>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  id: System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  isEii: true
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Usada internamente para avaliar um filtro."
  syntax:
    content: bool IFilterResolutionService.EvaluateFilter (string filterName);
    parameters:
    - id: filterName
      type: System.String
      description: "O filtro avalie."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o filtro tiver sido avaliado com êxito; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Tables
  id: Tables
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Tables
  nameWithType: HttpCapabilitiesBase.Tables
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Tables
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte a HTML <xref uid=&quot;langword_csharp_&lt;table&gt;&quot; name=&quot;&lt;table&gt;&quot; href=&quot;&quot;> </xref> elementos."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<table>` elements.  \n  \n [!code-vb[HttpCapabilitiesBase.Tables#1](~/add/codesnippet/visualbasic/p-system.web.configurati_259_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Tables#1](~/add/codesnippet/csharp/p-system.web.configurati_259_1.aspx)]"
  syntax:
    content: public bool Tables { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador dá suporte a HTML <xref uid=&quot;langword_csharp_&lt;table&gt;&quot; name=&quot;&lt;table&gt;&quot; href=&quot;&quot;> </xref> elementos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Tables*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  id: TagWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: TagWriter
  nameWithType: HttpCapabilitiesBase.TagWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Usada internamente para obter o tipo do objeto que é usado para escrever marcações para o navegador."
  syntax:
    content: public Type TagWriter { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>do objeto que é usado para escrever marcações para o navegador.</xref:System.Type>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.TagWriter*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "Há um erro de análise."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Type
  id: Type
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Type
  nameWithType: HttpCapabilitiesBase.Type
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Type
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o nome e o principal (inteiro) o número de versão do navegador."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is Internet Explorer version 6.  \n  \n [!code-cs[HttpCapabilitiesBase.Type#1](~/add/codesnippet/csharp/p-system.web.configurati_44_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Type#1](~/add/codesnippet/visualbasic/p-system.web.configurati_44_1.aspx)]"
  syntax:
    content: public string Type { get; }
    return:
      type: System.String
      description: "O nome e o número de versão principal do navegador."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  id: UseOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: UseOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.UseOptimizedCacheKey
  fullName: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Usada internamente para obter um valor que indica se deve usar uma chave de cache otimizado."
  syntax:
    content: public bool UseOptimizedCacheKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para usar uma chave de cache otimizado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.VBScript
  id: VBScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: VBScript
  nameWithType: HttpCapabilitiesBase.VBScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.VBScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o navegador oferece suporte ao Visual Basic Scripting edition (VBScript)."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports VBScript.  \n  \n [!code-cs[HttpCapabilitiesBase.VBScript#1](~/add/codesnippet/csharp/p-system.web.configurati_206_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.VBScript#1](~/add/codesnippet/visualbasic/p-system.web.configurati_206_1.aspx)]"
  syntax:
    content: public bool VBScript { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador oferece suporte a VBScript; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.VBScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Version
  id: Version
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Version
  nameWithType: HttpCapabilitiesBase.Version
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Version
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém o número de versão completa (inteiro e decimal) do navegador, como uma cadeia de caracteres."
  remarks: "A propriedade Version retorna uma cadeia de caracteres. Em alguns cenários, a propriedade de versão pode conter caracteres de letra, como no caso de um navegador ou dispositivo cliente que é uma versão beta, como &quot;7.0b&quot;. Para obter corretamente a versão como um tipo de dados que pode ser usado em uma comparação numérica, concatenar a <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A>e <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A>valores de propriedade.</xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> </xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A>"
  example:
  - "The following code example shows how to determine the Version of the browser. The <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> property and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property are concatenated and the result is used to determine whether the browser version is greater than 5.01.  \n  \n [!code-vb[HttpCapabilitiesBase.Version#1](~/add/codesnippet/visualbasic/p-system.web.configurati_244_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Version#1](~/add/codesnippet/csharp/p-system.web.configurati_244_1.aspx)]"
  syntax:
    content: public string Version { get; }
    return:
      type: System.String
      description: "O número de versão completa do navegador, como uma cadeia de caracteres."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Version*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  id: W3CDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: W3CDomVersion
  nameWithType: HttpCapabilitiesBase.W3CDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém a versão do World Wide Web Consortium (W3C) XML DOM Document Object Model () que o navegador dá suporte."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser W3C XML DOM version is greater than 1.  \n  \n [!code-vb[HttpCapabilitiesBase.W3CDomVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_110_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.W3CDomVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_110_1.aspx)]"
  syntax:
    content: public Version W3CDomVersion { get; }
    return:
      type: System.Version
      description: "O número do número de versão de DOM do W3C XML que dá suporte ao navegador."
  overload: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win16
  id: Win16
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Win16
  nameWithType: HttpCapabilitiesBase.Win16
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win16
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o cliente é um computador baseado em Win16."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is running on a Win16-based computer.  \n  \n [!code-cs[HttpCapabilitiesBase.Win16#1](~/add/codesnippet/csharp/p-system.web.configurati_210_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Win16#1](~/add/codesnippet/visualbasic/p-system.web.configurati_210_1.aspx)]"
  syntax:
    content: public bool Win16 { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o navegador estiver em execução em um computador baseado em Win16. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Win16*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win32
  id: Win32
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Win32
  nameWithType: HttpCapabilitiesBase.Win32
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win32
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um valor que indica se o cliente é um computador baseado em Win32."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the client is a Win32-based computer.  \n  \n [!code-cs[HttpCapabilitiesBase.Win32#1](~/add/codesnippet/csharp/p-system.web.configurati_30_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Win32#1](~/add/codesnippet/visualbasic/p-system.web.configurati_30_1.aspx)]"
  syntax:
    content: public bool Win32 { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cliente é um computador baseado em Win32; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Win32*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Web.HttpUnhandledException
  parent: System.Web
  isExternal: false
  name: HttpUnhandledException
  nameWithType: HttpUnhandledException
  fullName: System.Web.HttpUnhandledException
- uid: System.Web.Configuration.HttpCapabilitiesBase.#ctor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HttpCapabilitiesBase()
  nameWithType: HttpCapabilitiesBase.HttpCapabilitiesBase()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HttpCapabilitiesBase()
- uid: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ActiveXControls
  nameWithType: HttpCapabilitiesBase.ActiveXControls
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.HttpCapabilitiesBase.Adapters
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Adapters
  nameWithType: HttpCapabilitiesBase.Adapters
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Adapters
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AddBrowser(String)
  nameWithType: HttpCapabilitiesBase.AddBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.HttpCapabilitiesBase.AOL
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AOL
  nameWithType: HttpCapabilitiesBase.AOL
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AOL
- uid: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BackgroundSounds
  nameWithType: HttpCapabilitiesBase.BackgroundSounds
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
- uid: System.Web.Configuration.HttpCapabilitiesBase.Beta
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Beta
  nameWithType: HttpCapabilitiesBase.Beta
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Beta
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browser
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browser
  nameWithType: HttpCapabilitiesBase.Browser
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browser
- uid: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BrowserCapabilitiesProvider
  nameWithType: HttpCapabilitiesBase.BrowserCapabilitiesProvider
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
- uid: System.Web.Configuration.HttpCapabilitiesProvider
  parent: System.Web.Configuration
  isExternal: false
  name: HttpCapabilitiesProvider
  nameWithType: HttpCapabilitiesProvider
  fullName: System.Web.Configuration.HttpCapabilitiesProvider
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browsers
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browsers
  nameWithType: HttpCapabilitiesBase.Browsers
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browsers
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanCombineFormsInDeck
  nameWithType: HttpCapabilitiesBase.CanCombineFormsInDeck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanInitiateVoiceCall
  nameWithType: HttpCapabilitiesBase.CanInitiateVoiceCall
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderAfterInputOrSelectElement
  nameWithType: HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderEmptySelects
  nameWithType: HttpCapabilitiesBase.CanRenderEmptySelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderInputAndSelectElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderMixedSelects
  nameWithType: HttpCapabilitiesBase.CanRenderMixedSelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderOneventAndPrevElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderPostBackCards
  nameWithType: HttpCapabilitiesBase.CanRenderPostBackCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderSetvarZeroWithMultiSelectionList
  nameWithType: HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanSendMail
  nameWithType: HttpCapabilitiesBase.CanSendMail
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
- uid: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Capabilities
  nameWithType: HttpCapabilitiesBase.Capabilities
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
- uid: System.Web.Configuration.HttpCapabilitiesBase.CDF
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CDF
  nameWithType: HttpCapabilitiesBase.CDF
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CDF
- uid: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ClrVersion
  nameWithType: HttpCapabilitiesBase.ClrVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Web.Configuration.HttpCapabilitiesBase.Cookies
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Cookies
  nameWithType: HttpCapabilitiesBase.Cookies
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Cookies
- uid: System.Web.Configuration.HttpCapabilitiesBase.Crawler
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Crawler
  nameWithType: HttpCapabilitiesBase.Crawler
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Crawler
- uid: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DefaultSubmitButtonLimit
  nameWithType: HttpCapabilitiesBase.DefaultSubmitButtonLimit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DisableOptimizedCacheKey()
  nameWithType: HttpCapabilitiesBase.DisableOptimizedCacheKey()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey()
- uid: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: EcmaScriptVersion
  nameWithType: HttpCapabilitiesBase.EcmaScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Frames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Frames
  nameWithType: HttpCapabilitiesBase.Frames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Frames
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMajorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMinorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayVersion
  nameWithType: HttpCapabilitiesBase.GatewayVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetClrVersions()
  nameWithType: HttpCapabilitiesBase.GetClrVersions()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions()
- uid: System.Version[]
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version[]
  spec.csharp:
  - uid: System.Version
    name: Version
    nameWithType: Version
    fullName: Version[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetConfigCapabilities(String,HttpRequest)
  nameWithType: HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
- uid: System.Web.Configuration.HttpCapabilitiesBase
  parent: System.Web.Configuration
  isExternal: false
  name: HttpCapabilitiesBase
  nameWithType: HttpCapabilitiesBase
  fullName: System.Web.Configuration.HttpCapabilitiesBase
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HasBackButton
  nameWithType: HttpCapabilitiesBase.HasBackButton
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
- uid: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HidesRightAlignedMultiselectScrollbars
  nameWithType: HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
- uid: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HttpCapabilitiesBase.HtmlTextWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Id
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Id
  nameWithType: HttpCapabilitiesBase.Id
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Id
- uid: System.Web.Configuration.HttpCapabilitiesBase.Init
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Init()
  nameWithType: HttpCapabilitiesBase.Init()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Init()
- uid: System.Web.Configuration.HttpCapabilitiesBase.InputType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: InputType
  nameWithType: HttpCapabilitiesBase.InputType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.InputType
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsBrowser(String)
  nameWithType: HttpCapabilitiesBase.IsBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsColor
  nameWithType: HttpCapabilitiesBase.IsColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsMobileDevice
  nameWithType: HttpCapabilitiesBase.IsMobileDevice
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
- uid: System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Item(String)
  nameWithType: HttpCapabilitiesBase.Item(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Item(String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaApplets
  nameWithType: HttpCapabilitiesBase.JavaApplets
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaScript
  nameWithType: HttpCapabilitiesBase.JavaScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JScriptVersion
  nameWithType: HttpCapabilitiesBase.JScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MajorVersion
  nameWithType: HttpCapabilitiesBase.MajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumHrefLength
  nameWithType: HttpCapabilitiesBase.MaximumHrefLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumRenderedPageSize
  nameWithType: HttpCapabilitiesBase.MaximumRenderedPageSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumSoftkeyLabelLength
  nameWithType: HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersion
  nameWithType: HttpCapabilitiesBase.MinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersionString
  nameWithType: HttpCapabilitiesBase.MinorVersionString
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceManufacturer
  nameWithType: HttpCapabilitiesBase.MobileDeviceManufacturer
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceModel
  nameWithType: HttpCapabilitiesBase.MobileDeviceModel
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
- uid: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MSDomVersion
  nameWithType: HttpCapabilitiesBase.MSDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: NumberOfSoftkeys
  nameWithType: HttpCapabilitiesBase.NumberOfSoftkeys
  fullName: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
- uid: System.Web.Configuration.HttpCapabilitiesBase.Platform
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Platform
  nameWithType: HttpCapabilitiesBase.Platform
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Platform
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredImageMime
  nameWithType: HttpCapabilitiesBase.PreferredImageMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingMime
  nameWithType: HttpCapabilitiesBase.PreferredRenderingMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingType
  nameWithType: HttpCapabilitiesBase.PreferredRenderingType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRequestEncoding
  nameWithType: HttpCapabilitiesBase.PreferredRequestEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredResponseEncoding
  nameWithType: HttpCapabilitiesBase.PreferredResponseEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreakBeforeWmlSelectAndInput
  nameWithType: HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterHtmlLists
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlAnchor
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlInput
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlDoAcceptsInline
  nameWithType: HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlSelectsAsMenuCards
  nameWithType: HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiredMetaTagNameValue
  nameWithType: HttpCapabilitiesBase.RequiredMetaTagNameValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresAttributeColonSubstitution
  nameWithType: HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresContentTypeMetaTag
  nameWithType: HttpCapabilitiesBase.RequiresContentTypeMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresControlStateInSession
  nameWithType: HttpCapabilitiesBase.RequiresControlStateInSession
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresDBCSCharacter
  nameWithType: HttpCapabilitiesBase.RequiresDBCSCharacter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresHtmlAdaptiveErrorReporting
  nameWithType: HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresLeadingPageBreak
  nameWithType: HttpCapabilitiesBase.RequiresLeadingPageBreak
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresNoBreakInFormatting
  nameWithType: HttpCapabilitiesBase.RequiresNoBreakInFormatting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresOutputOptimization
  nameWithType: HttpCapabilitiesBase.RequiresOutputOptimization
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresPhoneNumbersAsPlainText
  nameWithType: HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresSpecialViewStateEncoding
  nameWithType: HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueFilePathSuffix
  nameWithType: HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlCheckboxNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlInputNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUrlEncodedPostfieldValues
  nameWithType: HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenBitDepth
  nameWithType: HttpCapabilitiesBase.ScreenBitDepth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersHeight
  nameWithType: HttpCapabilitiesBase.ScreenCharactersHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersWidth
  nameWithType: HttpCapabilitiesBase.ScreenCharactersWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsHeight
  nameWithType: HttpCapabilitiesBase.ScreenPixelsHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsWidth
  nameWithType: HttpCapabilitiesBase.ScreenPixelsWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsAccesskeyAttribute
  nameWithType: HttpCapabilitiesBase.SupportsAccesskeyAttribute
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBodyColor
  nameWithType: HttpCapabilitiesBase.SupportsBodyColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBold
  nameWithType: HttpCapabilitiesBase.SupportsBold
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCacheControlMetaTag
  nameWithType: HttpCapabilitiesBase.SupportsCacheControlMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCallback
  nameWithType: HttpCapabilitiesBase.SupportsCallback
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCss
  nameWithType: HttpCapabilitiesBase.SupportsCss
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivAlign
  nameWithType: HttpCapabilitiesBase.SupportsDivAlign
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivNoWrap
  nameWithType: HttpCapabilitiesBase.SupportsDivNoWrap
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsEmptyStringInCookieValue
  nameWithType: HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontColor
  nameWithType: HttpCapabilitiesBase.SupportsFontColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontName
  nameWithType: HttpCapabilitiesBase.SupportsFontName
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontSize
  nameWithType: HttpCapabilitiesBase.SupportsFontSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsImageSubmit
  nameWithType: HttpCapabilitiesBase.SupportsImageSubmit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsIModeSymbols
  nameWithType: HttpCapabilitiesBase.SupportsIModeSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputIStyle
  nameWithType: HttpCapabilitiesBase.SupportsInputIStyle
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputMode
  nameWithType: HttpCapabilitiesBase.SupportsInputMode
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsItalic
  nameWithType: HttpCapabilitiesBase.SupportsItalic
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneMultiMediaAttributes
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneSymbols
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsQueryStringInFormAction
  nameWithType: HttpCapabilitiesBase.SupportsQueryStringInFormAction
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsRedirectWithCookie
  nameWithType: HttpCapabilitiesBase.SupportsRedirectWithCookie
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsSelectMultiple
  nameWithType: HttpCapabilitiesBase.SupportsSelectMultiple
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsUncheck
  nameWithType: HttpCapabilitiesBase.SupportsUncheck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsXmlHttp
  nameWithType: HttpCapabilitiesBase.SupportsXmlHttp
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.Tables
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Tables
  nameWithType: HttpCapabilitiesBase.Tables
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Tables
- uid: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: TagWriter
  nameWithType: HttpCapabilitiesBase.TagWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Configuration.HttpCapabilitiesBase.Type
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Type
  nameWithType: HttpCapabilitiesBase.Type
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Type
- uid: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: UseOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.UseOptimizedCacheKey
  fullName: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
- uid: System.Web.Configuration.HttpCapabilitiesBase.VBScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: VBScript
  nameWithType: HttpCapabilitiesBase.VBScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.VBScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.Version
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Version
  nameWithType: HttpCapabilitiesBase.Version
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Version
- uid: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: W3CDomVersion
  nameWithType: HttpCapabilitiesBase.W3CDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win16
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win16
  nameWithType: HttpCapabilitiesBase.Win16
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win16
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win32
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win32
  nameWithType: HttpCapabilitiesBase.Win32
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win32
- uid: System.Web.Configuration.HttpCapabilitiesBase.#ctor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HttpCapabilitiesBase
  nameWithType: HttpCapabilitiesBase.HttpCapabilitiesBase
- uid: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ActiveXControls
  nameWithType: HttpCapabilitiesBase.ActiveXControls
- uid: System.Web.Configuration.HttpCapabilitiesBase.Adapters*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Adapters
  nameWithType: HttpCapabilitiesBase.Adapters
- uid: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AddBrowser
  nameWithType: HttpCapabilitiesBase.AddBrowser
- uid: System.Web.Configuration.HttpCapabilitiesBase.AOL*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AOL
  nameWithType: HttpCapabilitiesBase.AOL
- uid: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BackgroundSounds
  nameWithType: HttpCapabilitiesBase.BackgroundSounds
- uid: System.Web.Configuration.HttpCapabilitiesBase.Beta*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Beta
  nameWithType: HttpCapabilitiesBase.Beta
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browser*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browser
  nameWithType: HttpCapabilitiesBase.Browser
- uid: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BrowserCapabilitiesProvider
  nameWithType: HttpCapabilitiesBase.BrowserCapabilitiesProvider
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browsers*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browsers
  nameWithType: HttpCapabilitiesBase.Browsers
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanCombineFormsInDeck
  nameWithType: HttpCapabilitiesBase.CanCombineFormsInDeck
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanInitiateVoiceCall
  nameWithType: HttpCapabilitiesBase.CanInitiateVoiceCall
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderAfterInputOrSelectElement
  nameWithType: HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderEmptySelects
  nameWithType: HttpCapabilitiesBase.CanRenderEmptySelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderInputAndSelectElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderMixedSelects
  nameWithType: HttpCapabilitiesBase.CanRenderMixedSelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderOneventAndPrevElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderPostBackCards
  nameWithType: HttpCapabilitiesBase.CanRenderPostBackCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderSetvarZeroWithMultiSelectionList
  nameWithType: HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanSendMail
  nameWithType: HttpCapabilitiesBase.CanSendMail
- uid: System.Web.Configuration.HttpCapabilitiesBase.Capabilities*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Capabilities
  nameWithType: HttpCapabilitiesBase.Capabilities
- uid: System.Web.Configuration.HttpCapabilitiesBase.CDF*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CDF
  nameWithType: HttpCapabilitiesBase.CDF
- uid: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ClrVersion
  nameWithType: HttpCapabilitiesBase.ClrVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Cookies*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Cookies
  nameWithType: HttpCapabilitiesBase.Cookies
- uid: System.Web.Configuration.HttpCapabilitiesBase.Crawler*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Crawler
  nameWithType: HttpCapabilitiesBase.Crawler
- uid: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CreateHtmlTextWriter
  nameWithType: HttpCapabilitiesBase.CreateHtmlTextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DefaultSubmitButtonLimit
  nameWithType: HttpCapabilitiesBase.DefaultSubmitButtonLimit
- uid: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DisableOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.DisableOptimizedCacheKey
- uid: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: EcmaScriptVersion
  nameWithType: HttpCapabilitiesBase.EcmaScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Frames*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Frames
  nameWithType: HttpCapabilitiesBase.Frames
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMajorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMinorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMinorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayVersion
  nameWithType: HttpCapabilitiesBase.GatewayVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetClrVersions
  nameWithType: HttpCapabilitiesBase.GetClrVersions
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetConfigCapabilities
  nameWithType: HttpCapabilitiesBase.GetConfigCapabilities
- uid: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HasBackButton
  nameWithType: HttpCapabilitiesBase.HasBackButton
- uid: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HidesRightAlignedMultiselectScrollbars
  nameWithType: HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
- uid: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HttpCapabilitiesBase.HtmlTextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Id*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Id
  nameWithType: HttpCapabilitiesBase.Id
- uid: System.Web.Configuration.HttpCapabilitiesBase.Init*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Init
  nameWithType: HttpCapabilitiesBase.Init
- uid: System.Web.Configuration.HttpCapabilitiesBase.InputType*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: InputType
  nameWithType: HttpCapabilitiesBase.InputType
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsBrowser
  nameWithType: HttpCapabilitiesBase.IsBrowser
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsColor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsColor
  nameWithType: HttpCapabilitiesBase.IsColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsMobileDevice
  nameWithType: HttpCapabilitiesBase.IsMobileDevice
- uid: System.Web.Configuration.HttpCapabilitiesBase.Item*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Item
  nameWithType: HttpCapabilitiesBase.Item
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaApplets
  nameWithType: HttpCapabilitiesBase.JavaApplets
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaScript*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaScript
  nameWithType: HttpCapabilitiesBase.JavaScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JScriptVersion
  nameWithType: HttpCapabilitiesBase.JScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MajorVersion
  nameWithType: HttpCapabilitiesBase.MajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumHrefLength
  nameWithType: HttpCapabilitiesBase.MaximumHrefLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumRenderedPageSize
  nameWithType: HttpCapabilitiesBase.MaximumRenderedPageSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumSoftkeyLabelLength
  nameWithType: HttpCapabilitiesBase.MaximumSoftkeyLabelLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersion
  nameWithType: HttpCapabilitiesBase.MinorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersionString
  nameWithType: HttpCapabilitiesBase.MinorVersionString
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceManufacturer
  nameWithType: HttpCapabilitiesBase.MobileDeviceManufacturer
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceModel
  nameWithType: HttpCapabilitiesBase.MobileDeviceModel
- uid: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MSDomVersion
  nameWithType: HttpCapabilitiesBase.MSDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: NumberOfSoftkeys
  nameWithType: HttpCapabilitiesBase.NumberOfSoftkeys
- uid: System.Web.Configuration.HttpCapabilitiesBase.Platform*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Platform
  nameWithType: HttpCapabilitiesBase.Platform
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredImageMime
  nameWithType: HttpCapabilitiesBase.PreferredImageMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingMime
  nameWithType: HttpCapabilitiesBase.PreferredRenderingMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingType
  nameWithType: HttpCapabilitiesBase.PreferredRenderingType
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRequestEncoding
  nameWithType: HttpCapabilitiesBase.PreferredRequestEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredResponseEncoding
  nameWithType: HttpCapabilitiesBase.PreferredResponseEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreakBeforeWmlSelectAndInput
  nameWithType: HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterHtmlLists
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlAnchor
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlInput
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlDoAcceptsInline
  nameWithType: HttpCapabilitiesBase.RendersWmlDoAcceptsInline
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlSelectsAsMenuCards
  nameWithType: HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiredMetaTagNameValue
  nameWithType: HttpCapabilitiesBase.RequiredMetaTagNameValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresAttributeColonSubstitution
  nameWithType: HttpCapabilitiesBase.RequiresAttributeColonSubstitution
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresContentTypeMetaTag
  nameWithType: HttpCapabilitiesBase.RequiresContentTypeMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresControlStateInSession
  nameWithType: HttpCapabilitiesBase.RequiresControlStateInSession
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresDBCSCharacter
  nameWithType: HttpCapabilitiesBase.RequiresDBCSCharacter
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresHtmlAdaptiveErrorReporting
  nameWithType: HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresLeadingPageBreak
  nameWithType: HttpCapabilitiesBase.RequiresLeadingPageBreak
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresNoBreakInFormatting
  nameWithType: HttpCapabilitiesBase.RequiresNoBreakInFormatting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresOutputOptimization
  nameWithType: HttpCapabilitiesBase.RequiresOutputOptimization
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresPhoneNumbersAsPlainText
  nameWithType: HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresSpecialViewStateEncoding
  nameWithType: HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueFilePathSuffix
  nameWithType: HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlCheckboxNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlInputNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUrlEncodedPostfieldValues
  nameWithType: HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenBitDepth
  nameWithType: HttpCapabilitiesBase.ScreenBitDepth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersHeight
  nameWithType: HttpCapabilitiesBase.ScreenCharactersHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersWidth
  nameWithType: HttpCapabilitiesBase.ScreenCharactersWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsHeight
  nameWithType: HttpCapabilitiesBase.ScreenPixelsHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsWidth
  nameWithType: HttpCapabilitiesBase.ScreenPixelsWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsAccesskeyAttribute
  nameWithType: HttpCapabilitiesBase.SupportsAccesskeyAttribute
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBodyColor
  nameWithType: HttpCapabilitiesBase.SupportsBodyColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBold
  nameWithType: HttpCapabilitiesBase.SupportsBold
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCacheControlMetaTag
  nameWithType: HttpCapabilitiesBase.SupportsCacheControlMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCallback
  nameWithType: HttpCapabilitiesBase.SupportsCallback
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCss
  nameWithType: HttpCapabilitiesBase.SupportsCss
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivAlign
  nameWithType: HttpCapabilitiesBase.SupportsDivAlign
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivNoWrap
  nameWithType: HttpCapabilitiesBase.SupportsDivNoWrap
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsEmptyStringInCookieValue
  nameWithType: HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontColor
  nameWithType: HttpCapabilitiesBase.SupportsFontColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontName
  nameWithType: HttpCapabilitiesBase.SupportsFontName
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontSize
  nameWithType: HttpCapabilitiesBase.SupportsFontSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsImageSubmit
  nameWithType: HttpCapabilitiesBase.SupportsImageSubmit
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsIModeSymbols
  nameWithType: HttpCapabilitiesBase.SupportsIModeSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputIStyle
  nameWithType: HttpCapabilitiesBase.SupportsInputIStyle
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputMode
  nameWithType: HttpCapabilitiesBase.SupportsInputMode
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsItalic
  nameWithType: HttpCapabilitiesBase.SupportsItalic
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneMultiMediaAttributes
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneSymbols
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsQueryStringInFormAction
  nameWithType: HttpCapabilitiesBase.SupportsQueryStringInFormAction
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsRedirectWithCookie
  nameWithType: HttpCapabilitiesBase.SupportsRedirectWithCookie
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsSelectMultiple
  nameWithType: HttpCapabilitiesBase.SupportsSelectMultiple
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsUncheck
  nameWithType: HttpCapabilitiesBase.SupportsUncheck
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsXmlHttp
  nameWithType: HttpCapabilitiesBase.SupportsXmlHttp
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.CompareFilters
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.EvaluateFilter
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Tables*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Tables
  nameWithType: HttpCapabilitiesBase.Tables
- uid: System.Web.Configuration.HttpCapabilitiesBase.TagWriter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: TagWriter
  nameWithType: HttpCapabilitiesBase.TagWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Type*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Type
  nameWithType: HttpCapabilitiesBase.Type
- uid: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: UseOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.UseOptimizedCacheKey
- uid: System.Web.Configuration.HttpCapabilitiesBase.VBScript*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: VBScript
  nameWithType: HttpCapabilitiesBase.VBScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.Version*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Version
  nameWithType: HttpCapabilitiesBase.Version
- uid: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: W3CDomVersion
  nameWithType: HttpCapabilitiesBase.W3CDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win16*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win16
  nameWithType: HttpCapabilitiesBase.Win16
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win32*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win32
  nameWithType: HttpCapabilitiesBase.Win32
