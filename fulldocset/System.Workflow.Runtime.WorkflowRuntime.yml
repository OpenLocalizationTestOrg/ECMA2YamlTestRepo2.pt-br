### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.WorkflowRuntime
  id: WorkflowRuntime
  children:
  - System.Workflow.Runtime.WorkflowRuntime.#ctor
  - System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  - System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  - System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.Dispose
  - System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  - System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  - System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.GetService``1
  - System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.IsStarted
  - System.Workflow.Runtime.WorkflowRuntime.Name
  - System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  - System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  - System.Workflow.Runtime.WorkflowRuntime.Started
  - System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  - System.Workflow.Runtime.WorkflowRuntime.Stopped
  - System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  langs:
  - csharp
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime
  fullName: System.Workflow.Runtime.WorkflowRuntime
  type: Class
  summary: "Representa o ambiente de execução configurável fornecido pelo mecanismo de tempo de execução de fluxo de trabalho para fluxos de trabalho."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]WorkflowRuntime expõe a funcionalidade requerida por um aplicativo host e serviços para configurar e controlar o mecanismo de tempo de execução do fluxo de trabalho e para ser notificado sobre alterações para o mecanismo de tempo de execução do fluxo de trabalho e qualquer uma de suas instâncias de fluxo de trabalho."
  example:
  - "The following code example demonstrates how to use WorkflowRuntime functionality from a workflow host. It provides examples of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor and the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>, and <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> methods. The code also shows the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method. It also shows how to set event handlers for the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, and <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class WorkflowRuntime : IDisposable, IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime()
  nameWithType: WorkflowRuntime.WorkflowRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> classe."
  remarks: "O <xref:System.Workflow.Runtime.WorkflowRuntime>é inicializada com os valores de propriedade padrão e contém os principais serviços padrão.</xref:System.Workflow.Runtime.WorkflowRuntime> Para configurar o mecanismo de tempo de execução de fluxo de trabalho Além disso, você pode adicionar e remover serviços usando <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>e <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>, e você pode definir <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> Após o <xref:System.Workflow.Runtime.WorkflowRuntime>é configurado, chame <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>para iniciar o mecanismo de tempo de execução do fluxo de trabalho e seus serviços.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> </xref:System.Workflow.Runtime.WorkflowRuntime>       A tabela a seguir mostra os valores de propriedade inicial de uma instância da <xref:System.Workflow.Runtime.WorkflowRuntime>classe.</xref:System.Workflow.Runtime.WorkflowRuntime>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>|&quot; WorkflowRuntime &quot;|   | <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>| `false`|       Os serviços de núcleo padrão são <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>e <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>"
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. It provides an example of how to use the WorkflowRuntime constructor to create an instance of a <xref:System.Workflow.Runtime.WorkflowRuntime> and access its methods and events.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public WorkflowRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime(String)
  nameWithType: WorkflowRuntime.WorkflowRuntime(String)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(String)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> classe por meio da seção especificada do arquivo de configuração do aplicativo."
  remarks: "O <xref:System.Workflow.Runtime.WorkflowRuntime>é inicializada de acordo com as configurações na seção especificada pelo `configSectionName` no arquivo de configuração do aplicativo.</xref:System.Workflow.Runtime.WorkflowRuntime> `configSectionName`deve corresponder ao válido `workflowSettings` seção de um arquivo de configuração.       Quando o mecanismo de tempo de execução do fluxo de trabalho é configurado por meio de um arquivo de configuração do aplicativo, ele carrega e instancia classes dos tipos listados no `Services` seção do arquivo de configuração. Quando o mecanismo de tempo de execução do fluxo de trabalho constrói essas classes ele procurará por construtores de classe com as seguintes assinaturas na seguinte ordem: 1.  Service(WorkflowRuntime Runtime, NameValueCollection Parameters) 2.  Service(WorkflowRuntime Runtime) 3.  Service(NameValueCollection Parameters) 4.  Service() todas as classes que são carregados de um arquivo de configuração de serviço deve implementar pelo menos uma dessas assinaturas de construtor.       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>"
  syntax:
    content: public WorkflowRuntime (string configSectionName);
    parameters:
    - id: configSectionName
      type: System.String
      description: "O nome de uma opção válida <xref uid=&quot;langword_csharp_workflowSettings&quot; name=&quot;workflowSettings&quot; href=&quot;&quot;> </xref> seção no arquivo de configuração do aplicativo."
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>configSectionName</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uma opção válida <xref uid=&quot;langword_csharp_workflowSettings&quot; name=&quot;workflowSettings&quot; href=&quot;&quot;> </xref> seção não pôde ser encontrada no arquivo de configuração do aplicativo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> já existe para este domínio de aplicativo."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  id: '#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime(WorkflowRuntimeSection)
  nameWithType: WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> classe usando as configurações do <xref href=&quot;System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&quot;> </xref>."
  remarks: "Este construtor fornece um mecanismo para configurar o mecanismo de tempo de execução do fluxo de trabalho usando uma única chamada de método para hosts que não usam um arquivo de configuração do aplicativo. Há muitas razões para não usar o arquivo de configuração do aplicativo. Um host pode executar em um ambiente que não permitem o uso de arquivos de configuração; Por exemplo, nos ambientes confiáveis que não permitem a leitura do arquivo de configuração de aplicativo por motivos de segurança. Além disso, um host pode usar um mecanismo de configuração de propriedade; Por exemplo, o host pode armazenar as definições de configuração do mecanismo de tempo de execução de fluxo de trabalho em um banco de dados SQL.       O mecanismo de tempo de execução do fluxo de trabalho carrega e instancia classes de tipos contidos em <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=fullName> Quando o mecanismo de tempo de execução do fluxo de trabalho constrói essas classes ele procurará por construtores de classe com as seguintes assinaturas na seguinte ordem: 1.  Service(WorkflowRuntime Runtime, NameValueCollection Parameters) 2.  Service(WorkflowRuntime Runtime) 3.  Service(NameValueCollection Parameters) 4.  Service() todas as classes que são especificados em do service `settings` deve implementar pelo menos uma dessas assinaturas de construtor."
  syntax:
    content: public WorkflowRuntime (System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings);
    parameters:
    - id: settings
      type: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
      description: "A <xref href=&quot;System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&quot;></xref>."
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>settings</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> já existe para este domínio de aplicativo."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  id: AddService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: AddService(Object)
  nameWithType: WorkflowRuntime.AddService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.AddService(Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Adiciona o serviço especificado para o mecanismo de tempo de execução do fluxo de trabalho."
  remarks: "Você pode configurar o mecanismo de tempo de execução do fluxo de trabalho adicionando serviços principais. Serviços principais são aqueles que derivam de qualquer uma das seguintes classes de base de serviço: a <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>classe, a <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>classe, a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>classe e a <xref:System.Workflow.Runtime.Tracking.TrackingService>classe.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>  Serviços de núcleo só podem ser adicionados quando o mecanismo de tempo de execução do fluxo de trabalho não está em execução; ou seja, quando <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>é `false`.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> O <xref:System.Workflow.Runtime.WorkflowRuntime>também pode ser usado como um contêiner de armazenamento para outros serviços que podem ser usados por outros fluxos de trabalho ou aplicativos em execução em um host.</xref:System.Workflow.Runtime.WorkflowRuntime> Se você adicionar um serviço não essenciais que deriva de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe depois que o mecanismo de tempo de execução do fluxo de trabalho foi iniciado, AddService chama o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>método implementado por esse serviço.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>      > [!NOTE] > AddService impõe a restrição que nenhum dois serviços do mesmo <xref:System.Type>pode ser adicionado a <xref:System.Workflow.Runtime.WorkflowRuntime>.</xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Type> No entanto, você pode adicionar vários serviços que derivam da mesma classe base.  Pode haver somente um serviço derivado de cada as seguintes classes de base do serviço no <xref:System.Workflow.Runtime.WorkflowRuntime>: a <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>classe, a <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>classe e a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>classe</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> </xref:System.Workflow.Runtime.WorkflowRuntime>  Se você adicionar vários serviços derivado de uma dessas classes, para serviços de persistência de exemplo dois, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>gera um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>"
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. It provides example of how to use the AddService method to add an <xref:System.Workflow.Activities.ExternalDataExchangeService> and <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> to the workflow run-time engine.  \n  \n This code example is part of the [Cancelling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public void AddService (object service);
    parameters:
    - id: service
      type: System.Object
      description: "Um objeto que representa o serviço a adicionar."
  overload: System.Workflow.Runtime.WorkflowRuntime.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>service</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> é descartado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>service</code>já está registrado com o mecanismo de tempo de execução do fluxo de trabalho.       - ou - <code>service</code> é um serviço principal e o mecanismo de tempo de execução do fluxo de trabalho já está em execução (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted*> é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  id: CreateWorkflow(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Cria uma nova instância de fluxo de trabalho usando o fluxo de trabalho especificado <xref:System.Type>.</xref:System.Type>"
  remarks: "Antes do <xref:System.Workflow.Runtime.WorkflowInstance>é criado, a validação é executada no proprietário.</xref:System.Workflow.Runtime.WorkflowInstance> Se ocorrerem erros de validação, o <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>é gerada.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Isso funciona bem para cenários simples, mas em um ambiente de servidor, revalidar um fluxo de trabalho para cada ativação pode ser sobrecarga desnecessária.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]desabilitar a validação, consulte <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>"
  example:
  - "The following code example demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the CreateWorkflow method.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#260](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#260)]\n [!code-vb[WF_Samples#260](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#260)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType);
    parameters:
    - id: workflowType
      type: System.Type
      description: "O <xref:System.Type>do fluxo de trabalho para criar.</xref:System.Type>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "A instância de fluxo de trabalho criado."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  id: CreateWorkflow(System.Xml.XmlReader)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Cria uma instância de fluxo de trabalho usando o <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> especificado"
  remarks: "A instância de fluxo de trabalho é criada a partir de um arquivo de definição de fluxo de trabalho XAML referenciado pelo <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>       Antes do <xref:System.Workflow.Runtime.WorkflowInstance>é criado, a validação é executada no proprietário.</xref:System.Workflow.Runtime.WorkflowInstance> Se ocorrerem erros de validação, o <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>é gerada.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Isso funciona bem para cenários simples, mas em um ambiente de servidor, revalidar um fluxo de trabalho para cada ativação pode ser sobrecarga desnecessária.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]desabilitar a validação, consulte <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>"
  example:
  - "The following example demonstrates how to create a workflow given a XAML-based workflow definition.  \n  \n```  \nstatic void Main(string[] args)  \n{  \n    using (WorkflowRuntime workflowRuntime = new WorkflowRuntime())  \n    {  \n        AutoResetEvent waitHandle = new AutoResetEvent(false);  \n        workflowRuntime.WorkflowCompleted += delegate(object sender, WorkflowCompletedEventArgs e)  \n        {  \n            waitHandle.Set();  \n        };  \n        workflowRuntime.WorkflowTerminated += delegate(object sender, WorkflowTerminatedEventArgs e)  \n        {  \n            Console.WriteLine(e.Exception.Message);  \n            waitHandle.Set();  \n        };  \n  \n        TypeProvider typeProvider = new TypeProvider(null);  \n        // Add referenced assemblies, if needed  \n        // typeProvider.AddAssembly(...);  \n        workflowRuntime.AddService(typeProvider);  \n  \n        using (XmlReader reader = XmlReader.Create(\"Workflow1.xoml\"))  \n        {  \n            WorkflowInstance instance = workflowRuntime.CreateWorkflow(reader);  \n            instance.Start();  \n        }  \n  \n        waitHandle.WaitOne();  \n    }  \n}  \n```"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>que contém a definição de fluxo de trabalho.</xref:System.Xml.XmlReader>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "A instância de fluxo de trabalho criado."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowDefinitionReader</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> é descartado."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Cria uma instância de fluxo de trabalho usando o fluxo de trabalho especificado <xref:System.Type>e os argumentos para o fluxo de trabalho especificado contidas &lt;xref:System.Collections.Generic.Dictionary%602&gt;.</xref:System.Type>"
  remarks: "Antes do <xref:System.Workflow.Runtime.WorkflowInstance>é criado, a validação é executada no proprietário.</xref:System.Workflow.Runtime.WorkflowInstance> Se ocorrerem erros de validação, o <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>é gerada.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Isso funciona bem para cenários simples, mas em um ambiente de servidor, revalidar um fluxo de trabalho para cada ativação pode ser sobrecarga desnecessária.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]desabilitar a validação, consulte <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       Para obter um exemplo de passar parâmetros para `CreateWorkflow`, consulte [fluxo de trabalho com parâmetros de exemplo](http://go.microsoft.com/fwlink/?LinkId=157403)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary<string,object> namedArgumentValues);
    parameters:
    - id: workflowType
      type: System.Type
      description: "O <xref:System.Type>do fluxo de trabalho para criar.</xref:System.Type>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Um &lt;xref:System.Collections.Generic.Dictionary%602&gt; de objetos, organizados pela cadeia de caracteres que representa os argumentos para o fluxo de trabalho."
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "A instância de fluxo de trabalho criado."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  id: CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Cria uma instância de fluxo de trabalho usando os parâmetros especificados."
  remarks: "Antes do <xref:System.Workflow.Runtime.WorkflowInstance>é criado, a validação é executada no proprietário.</xref:System.Workflow.Runtime.WorkflowInstance> Se ocorrerem erros de validação, o <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>é gerada.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Isso funciona bem para cenários simples, mas em um ambiente de servidor, revalidar um fluxo de trabalho para cada ativação pode ser sobrecarga desnecessária.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]desabilitar a validação, consulte <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       O fluxo de trabalho `instanceId` para qualquer executando fluxos de trabalho carregados pelo <xref:System.Workflow.Runtime.WorkflowRuntime>devem ser exclusivos.</xref:System.Workflow.Runtime.WorkflowRuntime> Se você passar um `instanceId` criar um fluxo de trabalho e um fluxo de trabalho em execução já está usando que `instanceId`, uma <xref:System.InvalidOperationException>é gerada.</xref:System.InvalidOperationException>       Para obter um exemplo de passar parâmetros para `CreateWorkflow`, consulte [fluxo de trabalho com parâmetros de exemplo](http://go.microsoft.com/fwlink/?LinkID=157403)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary<string,object> namedArgumentValues, Guid instanceId);
    parameters:
    - id: workflowType
      type: System.Type
      description: "O <xref:System.Type>do fluxo de trabalho para criar.</xref:System.Type>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Um &lt;xref:System.Collections.Generic.Dictionary%602&gt; de objetos chaveados por uma cadeia de caracteres que representa os argumentos para o fluxo de trabalho."
    - id: instanceId
      type: System.Guid
      description: "O <xref:System.Guid>específico <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> criem.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "A instância de fluxo de trabalho criado."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Cria uma instância de fluxo de trabalho usando especificado <xref:System.Xml.XmlReader>objetos e os argumentos contidos em especificado &lt;xref:System.Collections.Generic.Dictionary%602&gt;.</xref:System.Xml.XmlReader>"
  remarks: "A instância de fluxo de trabalho é criada da definição de fluxo de trabalho referenciada pela <xref:System.Xml.XmlReader>e os argumentos fornecidos pelo `namedArgumentValues`.</xref:System.Xml.XmlReader>       Antes do <xref:System.Workflow.Runtime.WorkflowInstance>é criado, a validação é executada no proprietário.</xref:System.Workflow.Runtime.WorkflowInstance> Se ocorrerem erros de validação, o <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>é gerada.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Isso funciona bem para cenários simples, mas em um ambiente de servidor, revalidar um fluxo de trabalho para cada ativação pode ser sobrecarga desnecessária.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]desabilitar a validação, consulte <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       Para obter um exemplo de passar parâmetros para `CreateWorkflow`, consulte [fluxo de trabalho com parâmetros de exemplo](http://go.microsoft.com/fwlink/?LinkID=157403).       Para obter um exemplo de como usar as regras definidas no XML, consulte [IfElse com regras de exemplo](http://go.microsoft.com/fwlink/?LinkId=157404)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary<string,object> namedArgumentValues);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>que contém a definição de fluxo de trabalho.</xref:System.Xml.XmlReader>"
    - id: rulesReader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Um &lt;xref:System.Collections.Generic.Dictionary%602&gt; de objetos chaveados por uma cadeia de caracteres que representa os argumentos para o fluxo de trabalho."
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "A instância de fluxo de trabalho criado."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowDefinitionReader</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> é descartado."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  id: CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Cria uma instância de fluxo de trabalho usando os parâmetros especificados."
  remarks: "Antes do <xref:System.Workflow.Runtime.WorkflowInstance>é criado, a validação é executada no proprietário.</xref:System.Workflow.Runtime.WorkflowInstance> Se ocorrerem erros de validação, o <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>é gerada.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Isso funciona bem para cenários simples, mas em um ambiente de servidor, revalidar um fluxo de trabalho para cada ativação pode ser sobrecarga desnecessária.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]desabilitar a validação, consulte <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       O fluxo de trabalho `instanceId` para qualquer executando fluxos de trabalho carregados pelo <xref:System.Workflow.Runtime.WorkflowRuntime>devem ser exclusivos.</xref:System.Workflow.Runtime.WorkflowRuntime> Se você passar um `instanceId` criar um fluxo de trabalho e um fluxo de trabalho em execução já está usando que `instanceId`, uma <xref:System.InvalidOperationException>é gerada.</xref:System.InvalidOperationException>       Para obter um exemplo de passar parâmetros para `CreateWorkflow`, consulte [fluxo de trabalho com parâmetros de exemplo](http://go.microsoft.com/fwlink/?LinkID=157403).       Para obter um exemplo de como usar as regras definidas no XML, consulte [IfElse com regras de exemplo](http://go.microsoft.com/fwlink/?LinkID=157404)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary<string,object> namedArgumentValues, Guid instanceId);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>que contém a definição de fluxo de trabalho.</xref:System.Xml.XmlReader>"
    - id: rulesReader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Um &lt;xref:System.Collections.Generic.Dictionary%602&gt; de objetos chaveados por uma cadeia de caracteres que representa os argumentos para o fluxo de trabalho."
    - id: instanceId
      type: System.Guid
      description: "O <xref:System.Guid>específico <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> criem.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "A instância de fluxo de trabalho criado."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose
  id: Dispose
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Dispose()
  nameWithType: WorkflowRuntime.Dispose()
  fullName: System.Workflow.Runtime.WorkflowRuntime.Dispose()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Libera os recursos usados pelo <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  remarks: "Para desligar <xref:System.Workflow.Runtime.WorkflowRuntime>normalmente, você só deve chamar Dispose depois de ter chamado <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> </xref:System.Workflow.Runtime.WorkflowRuntime> Isso ocorre porque a chamar o método Dispose deixa somente o <xref:System.Workflow.Runtime.WorkflowRuntime>em um estado inutilizável.</xref:System.Workflow.Runtime.WorkflowRuntime> Dispose libera os recursos usados pelo tempo de execução pelo fechamento de identificadores de arquivos abertos, conexões de banco de dados e assim por diante, mas ele não descarregar instâncias de fluxo de trabalho, interromper serviços ou executar qualquer uma das outras ações que <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>does.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>       Dispose deve ser chamado apenas quando o aplicativo de host deve liberar os recursos usados pelo <xref:System.Workflow.Runtime.WorkflowRuntime>antes que eles serão liberados automaticamente pelo coletor de lixo.</xref:System.Workflow.Runtime.WorkflowRuntime> Para obter informações gerais sobre Dispose, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to call Dispose on a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this sample, the Dispose method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down. This sample is from the [Speech Application Sample](http://go.microsoft.com/fwlink/?LinkId=157405).  \n  \n [!code-cs[WF_Samples#108](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#108)]\n [!code-vb[WF_Samples#108](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#108)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  id: GetAllServices(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetAllServices(Type)
  nameWithType: WorkflowRuntime.GetAllServices(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Recupera todos os serviços que são adicionados ao mecanismo de tempo de execução de fluxo de trabalho que implementam ou derivam de <xref:System.Type>.</xref:System.Type> especificado"
  remarks: "Vazio <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>indica que não há serviços que implementam ou derivam especificado <xref:System.Type>foram adicionados ao mecanismo de tempo de execução de fluxo de trabalho.</xref:System.Type> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>"
  example:
  - "The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.  \n  \n [!code-cs[WF_Samples#19](~/add/codesnippet/csharp/wf_snippets/snippets.cs#19)]\n [!code-vb[WF_Samples#19](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#19)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<object> GetAllServices (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O <xref:System.Type>que serviços devem implementar a ser retornado.</xref:System.Type>"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
      description: "Serviços que implementam ou derivam de <xref:System.Type>.</xref:System.Type> especificado"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetAllServices*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> é descartado."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  id: GetAllServices``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetAllServices()
  nameWithType: WorkflowRuntime.GetAllServices()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<T> GetAllServices<T> ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{T}
      description: "A ser adicionado."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetAllServices<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  id: GetLoadedWorkflows
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetLoadedWorkflows()
  nameWithType: WorkflowRuntime.GetLoadedWorkflows()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Obtém uma coleção que contém todas as instâncias de fluxo de trabalho atualmente carregadas na memória."
  remarks: "Observe que, ao contrário de <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>, esse método não lança uma <xref:System.InvalidOperationException>se o tempo de execução não for iniciado.</xref:System.InvalidOperationException> </xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>"
  example:
  - "The following example demonstrates how to retrieve a collection of loaded workflows from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.  \n  \n [!code-cs[WF_Samples#18](~/add/codesnippet/csharp/wf_snippets/snippets.cs#18)]\n [!code-vb[WF_Samples#18](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#18)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance> GetLoadedWorkflows ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.Runtime.WorkflowInstance}
      description: "Um <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> objeto para cada instância de fluxo de trabalho atualmente carregados na memória."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> é descartado."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: WorkflowRuntime.GetService(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Recupera um serviço do <xref:System.Type>do mecanismo de tempo de execução de fluxo de trabalho.</xref:System.Type>"
  remarks: "GetService gerará um <xref:System.InvalidOperationException>se mais de um serviço existe para o <xref:System.Type>.</xref:System.Type> especificado</xref:System.InvalidOperationException> Portanto, você deve usar um dos métodos sobrecarregados do <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A>se é possível que vários serviços do tipo especificado estão presentes em <xref:System.Workflow.Runtime.WorkflowRuntime>.</xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> Por exemplo, o mecanismo de tempo de execução do fluxo de trabalho pode ter vários serviços de controle. Se você solicitar um serviço de controle, especificando o <xref:System.Workflow.Runtime.Tracking.TrackingService>classe base, é possível que uma exceção será lançada.</xref:System.Workflow.Runtime.Tracking.TrackingService>"
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O <xref:System.Type>do serviço para recuperar.</xref:System.Type>"
    return:
      type: System.Object
      description: "O serviço de <xref:System.Type>.</xref:System.Type> especificado"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> já é descartado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Mais de um serviço do tipo <code> serviceType </code> foi encontrado."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService``1
  id: GetService``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetService()
  nameWithType: WorkflowRuntime.GetService()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  syntax:
    content: public T GetService<T> ();
    parameters: []
    return:
      type: T
      description: "A ser adicionado."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetService<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  id: GetWorkflow(System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetWorkflow(Guid)
  nameWithType: WorkflowRuntime.GetWorkflow(Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Recupera a instância de fluxo de trabalho que tem o <xref:System.Guid>.</xref:System.Guid> especificado"
  remarks: "Se `instanceId` Especifica uma instância de fluxo de trabalho que não está na memória, a instância de fluxo de trabalho está carregada na memória e agendada para execução. Por exemplo, depois que uma instância de fluxo de trabalho é interrompida, você pode chamar GetWorkflow para carregar a instância de fluxo de trabalho para a memória. Nesse caso, o último estado persistente da instância do fluxo de trabalho é carregado na memória pelo serviço de persistência."
  example:
  - "The following code example demonstrates a `ReloadWorkflow` method that calls the GetWorkflow method. The `ReloadWorkflow` method is part of a larger class that has a `Runtime` property to access all of the methods, properties, and events of the <xref:System.Workflow.Runtime.WorkflowRuntime> class.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkId=157351) sample.  \n  \n> [!NOTE]\n>  In the example, the call to <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is redundant because both the GetWorkflow and <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> methods use the same internal helper method to load the workflow instance into memory.  \n  \n [!code-cs[WF_Samples#265](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#265)]\n [!code-vb[WF_Samples#265](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#265)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance GetWorkflow (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "O <xref:System.Guid>de uma instância de fluxo de trabalho.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "O <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> que tem o <xref:System.Guid>.</xref:System.Guid> especificado"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O tempo de execução do fluxo de trabalho não foi iniciado."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  id: IsStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Obtém um valor que indica se o mecanismo de tempo de execução do fluxo de trabalho foi iniciado."
  remarks: "IsStarted indica que os serviços do mecanismo de tempo de execução de fluxo de trabalho são executados. É IsStarted `false` até que as chamadas de host <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> Ele permanece `true` até que as chamadas de host <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>      > [!NOTE] > Não é possível adicionar serviços principais para o mecanismo de tempo de execução do fluxo de trabalho enquanto ele está em execução. Serviços de núcleo são serviços que derivam de <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>classe, a <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>classe, a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>classe e a <xref:System.Workflow.Runtime.Tracking.TrackingService>classe.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>"
  example:
  - "The following example demonstrates how to access the IsStarted property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this example, if the runtime is started, a message is printed to the console.  \n  \n [!code-cs[WF_Samples#21](~/add/codesnippet/csharp/wf_snippets/snippets.cs#21)]\n [!code-vb[WF_Samples#21](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#21)]"
  syntax:
    content: public bool IsStarted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o mecanismo de tempo de execução do fluxo de trabalho foi iniciado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Runtime.WorkflowRuntime.IsStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Name
  id: Name
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Name
  nameWithType: WorkflowRuntime.Name
  fullName: System.Workflow.Runtime.WorkflowRuntime.Name
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Obtém ou define o nome associado a <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  remarks: "Não é possível definir o nome enquanto o mecanismo de tempo de execução do fluxo de trabalho está em execução (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> é `true`).</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>"
  example:
  - "The following example demonstrates how to access the Name property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this example, the name of the runtime is set to \"Main Runtime\".  \n  \n [!code-cs[WF_Samples#20](~/add/codesnippet/csharp/wf_snippets/snippets.cs#20)]\n [!code-vb[WF_Samples#20](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#20)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome associado a esta <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  overload: System.Workflow.Runtime.WorkflowRuntime.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Tentativa de definir o nome em um <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> que é descartado ocorre."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorre uma tentativa de definir nome enquanto o mecanismo de tempo de execução do fluxo de trabalho está em execução."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  id: RemoveService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: RemoveService(Object)
  nameWithType: WorkflowRuntime.RemoveService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.RemoveService(Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Remove o serviço especificado do mecanismo de tempo de execução de fluxo de trabalho."
  remarks: "Você não pode remover um serviço principal, enquanto o mecanismo de tempo de execução do fluxo de trabalho está em execução (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> é `true`).</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> Serviços de núcleo são serviços que derivam de <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>classe, a <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>classe, a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>classe, ou a <xref:System.Workflow.Runtime.Tracking.TrackingService>classe.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>  Se `service` deriva o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe RemoveService chama o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>método implementado por `service`.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>"
  example:
  - "In the following example, a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> is added and removed from the <xref:System.Workflow.Runtime.WorkflowRuntime>.  \n  \n [!code-cs[WF_Samples#16](~/add/codesnippet/csharp/wf_snippets/snippets.cs#16)]\n [!code-vb[WF_Samples#16](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#16)]"
  syntax:
    content: public void RemoveService (object service);
    parameters:
    - id: service
      type: System.Object
      description: "Um objeto que representa o serviço a ser removido."
  overload: System.Workflow.Runtime.WorkflowRuntime.RemoveService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>service</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> já é descartado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The workflow run-time engine has started (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>) and <code>service</code> is a core service.  \n  \n \\- or -  \n  \n <code>service</code> is not registered with the workflow run-time engine."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  id: ServicesExceptionNotHandled
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: ServicesExceptionNotHandled
  nameWithType: WorkflowRuntime.ServicesExceptionNotHandled
  fullName: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando um serviço que é derivado de <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref> classe chamadas <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*>"
  remarks: "Um serviço que é derivado do <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe pode chamar o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>método para informar os assinantes do evento ServicesExceptionNotHandled que ocorreu uma exceção que não foi possível manipular durante sua execução.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Você pode assinar a esse evento para implementar um mecanismo de recuperação.       Esse evento é gerado quando uma instância de fluxo de trabalho ainda não foi criada pelo mecanismo de tempo de execução de fluxo de trabalho e ocorrerá uma exceção. Nesse cenário, a única maneira de informar um aplicativo host que ocorreu uma exceção é gerar este evento. No entanto, o mecanismo de tempo de execução do fluxo de trabalho não chamar isso diretamente. Em vez disso, o mecanismo de tempo de execução do fluxo de trabalho seja oferece uma exceção para a instância de fluxo de trabalho ou, se não houver nenhuma instância lança novamente para o chamador, que nesse caso é realmente o serviço que dispara este evento. Se você criar sua própria persistência ou o serviço do Agendador, você deve implementar esse evento por conta própria por meio da base de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>método.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>       O evento ServicesExceptionNotHandled, contém o remetente a <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contém o <xref:System.Guid>da instância de fluxo de trabalho que estava usando o serviço e o <xref:System.Exception>que não pôde ser tratada.</xref:System.Exception> </xref:System.Guid> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [consumindo eventos](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates ServicesExceptionNotHandled with an event handler, a method named `OnExceptionNotHandled`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs> ServicesExceptionNotHandled;
    return:
      type: System.EventHandler{System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Started
  id: Started
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Started
  nameWithType: WorkflowRuntime.Started
  fullName: System.Workflow.Runtime.WorkflowRuntime.Started
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando o mecanismo de tempo de execução do fluxo de trabalho é iniciado."
  remarks: "O <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>método dispara o evento iniciado foi invocado depois que ela foi validada a configuração do serviço principal do mecanismo de tempo de execução do fluxo de trabalho, o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>método implementado por cada um dos seus serviços que derivam de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe e tiver definido <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>para `true`.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> Não há nenhuma garantia sobre a ordem na qual os serviços que derivam de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe são iniciadas pelo mecanismo de tempo de execução de fluxo de trabalho, e alguns desses serviços de mecanismo de tempo de execução do fluxo de trabalho podem dependem da funcionalidade fornecida por outros desses serviços para concluir suas tarefas de inicialização.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Serviços de mecanismo de tempo de execução do fluxo de trabalho podem substituir o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName>método para executar as tarefas de inicialização final que exigem suporte de outros serviços de mecanismo de tempo de execução do fluxo de trabalho quando o evento iniciado é gerado.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [consumindo eventos](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "In the following example, an event handler is added to the Started event of the <xref:System.Workflow.Runtime.WorkflowRuntime>. In this example, the handler is an anonymous method that prints a simple message to the console.  \n  \n [!code-cs[WF_Samples#15](~/add/codesnippet/csharp/wf_snippets/snippets.cs#15)]\n [!code-vb[WF_Samples#15](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#15)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs> Started;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  id: StartRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: StartRuntime()
  nameWithType: WorkflowRuntime.StartRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StartRuntime()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inicia o mecanismo de tempo de execução do fluxo de trabalho e os serviços do mecanismo de tempo de execução de fluxo de trabalho."
  remarks: "Esse método verifica se um conjunto válido de serviços principais existe e, em seguida, inicia todos os serviços que derivam da <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> de  Deve haver apenas um de cada um dos seguintes serviços principais: um fluxo de trabalho `CommitWorkBatch` serviço derivado da <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>classe base e um serviço de Agendador derivado de <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>classe base.</xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>  Se um ou ambos esses serviços centrais estiverem ausentes, o mecanismo de tempo de execução do fluxo de trabalho fornece o serviço padrão apropriado: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>do fluxo de trabalho `CommitWorkBatch` service e <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>para o serviço do Agendador.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> Um serviço de persistência é opcional, mas pode haver no máximo um serviço de persistência presente. Depois que ela foi validada a configuração do serviço, StartRuntime chama <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>em todos os serviços que são derivados da <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> de</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>  Por fim, o mecanismo de tempo de execução do fluxo de trabalho define <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>e gera o <xref:System.Workflow.Runtime.WorkflowRuntime.Started>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Started> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       Você não pode adicionar ou remover serviços principais, depois que o mecanismo de tempo de execução do fluxo de trabalho é iniciado. Serviços de núcleo são serviços que derivam de <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>classe, a <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>classe, a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>classe, ou a <xref:System.Workflow.Runtime.Tracking.TrackingService>classe.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>  Se você chamar StartRuntime enquanto o mecanismo de tempo de execução do fluxo de trabalho está em execução, nenhuma ação será executada."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code calls the StartRuntime after the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> creates a <xref:System.Workflow.Runtime.WorkflowRuntime> instance and after it calls <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> to add services to the runtime. It also calls StartRuntime before any other processing occurs.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public void StartRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.StartRuntime*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> é descartado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não há mais de um fluxo de trabalho do serviço <xref uid=&quot;langword_csharp_CommitWorkBatch&quot; name=&quot;CommitWorkBatch&quot; href=&quot;&quot;> </xref> serviço registrado com esse <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>.       - ou - não há mais de um serviço de Agendador registrado com esse <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>.       - ou - não há mais de um serviço de persistência registrado com esse <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Stopped
  id: Stopped
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Stopped
  nameWithType: WorkflowRuntime.Stopped
  fullName: System.Workflow.Runtime.WorkflowRuntime.Stopped
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando o mecanismo de tempo de execução do fluxo de trabalho é interrompido."
  remarks: "O <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>método dispara o evento interrompido depois que ele chamou o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>método implementado por cada um dos seus serviços que derivam de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>  Não há nenhuma garantia sobre a ordem na qual esses serviços de mecanismo de tempo de execução do fluxo de trabalho são interrompidos, e alguns desses serviços podem precisar preservar alguma funcionalidade que é usada por outros serviços até que eles também são interrompidos. Esses serviços podem substituir o <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=fullName>método para executar qualquer lógica de desligamento residual quando o evento de parada é gerado.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=fullName>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [consumindo eventos](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "In the following example, an event handler is added to the Stopped event of the <xref:System.Workflow.Runtime.WorkflowRuntime>. In this example, the handler is an anonymous method that prints a simple message to the console.  \n  \n [!code-cs[WF_Samples#14](~/add/codesnippet/csharp/wf_snippets/snippets.cs#14)]\n [!code-vb[WF_Samples#14](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#14)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs> Stopped;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  id: StopRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: StopRuntime()
  nameWithType: WorkflowRuntime.StopRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StopRuntime()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Interrompe o mecanismo de tempo de execução do fluxo de trabalho e os serviços de tempo de execução."
  remarks: "Este método faz com que o mecanismo de tempo de execução do fluxo de trabalho descarregar a cada uma de suas instâncias de fluxo de trabalho, interrompa todos os seus serviços que são derivados do <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe, defina <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>para `false`e gerar o <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>       Para desligar <xref:System.Workflow.Runtime.WorkflowRuntime>normalmente, chame StopRuntime antes de chamar <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]o <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>método.</xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>"
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. StopRuntime is called after the host has completed all other processing associated with the runtime.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#259](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#259)]\n [!code-vb[WF_Samples#259](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#259)]"
  syntax:
    content: public void StopRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.StopRuntime*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> já é descartado."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  id: WorkflowAborted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowAborted
  nameWithType: WorkflowRuntime.WorkflowAborted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando uma instância de fluxo de trabalho foi anulada."
  remarks: "WorkflowAborted ocorre depois que todos os trabalho do fluxo de trabalho pendente instância está desmarcada, mas antes do fluxo de trabalho de instância é invalidada em memória. Você pode anular uma instância de fluxo de trabalho chamando <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=fullName>       Para esse evento, o remetente contém o <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contém o <xref:System.Workflow.Runtime.WorkflowInstance>associado ao evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [consumindo eventos](http://go.microsoft.com/fwlink/?LinkId=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowAborted with an event handler, a method named `OnWorkflowAborted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#141](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#141)]\n [!code-vb[WF_Samples#141](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#141)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowAborted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  id: WorkflowCompleted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowCompleted
  nameWithType: WorkflowRuntime.WorkflowCompleted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando uma instância de fluxo de trabalho é concluído."
  remarks: "WorkflowCompleted é gerado depois que a instância de fluxo de trabalho foi concluída, mas antes da instância é invalidada em memória.       Para o <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>o remetente do evento, contém o <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs>contém o <xref:System.Workflow.Runtime.WorkflowInstance>e seus parâmetros de saída.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [consumindo eventos](http://go.microsoft.com/fwlink/?LinkId=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowCompleted with an event handler, a method named `OnWorkflowCompleted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs> WorkflowCompleted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowCompletedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  id: WorkflowCreated
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowCreated
  nameWithType: WorkflowRuntime.WorkflowCreated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando uma instância de fluxo de trabalho é criada."
  remarks: "O mecanismo de tempo de execução do fluxo de trabalho gera o evento WorkflowCreated depois que a instância de fluxo de trabalho é construída completamente, mas antes de atividades são processadas. Para esse evento, o remetente contém o <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contém o <xref:System.Workflow.Runtime.WorkflowInstance>associado ao evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [consumindo eventos](http://go.microsoft.com/fwlink/?LinkId=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowCreated with an event handler, a method named `OnWorkflowCreated`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowCreated;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  id: WorkflowIdled
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowIdled
  nameWithType: WorkflowRuntime.WorkflowIdled
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando uma instância de fluxo de trabalho entra no estado ocioso."
  remarks: "O mecanismo de tempo de execução do fluxo de trabalho gera o evento de WorkflowIdled quando a instância de fluxo de trabalho entra em um estado ocioso; Por exemplo, quando o fluxo de trabalho está aguardando um <xref:System.Workflow.Activities.DelayActivity>atividade para concluir.</xref:System.Workflow.Activities.DelayActivity>       Para esse evento, o remetente contém o <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contém o <xref:System.Workflow.Runtime.WorkflowInstance>associado ao evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowIdled with an event handler, a method named `OnWorkflowIdled`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowIdled;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  id: WorkflowLoaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowLoaded
  nameWithType: WorkflowRuntime.WorkflowLoaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando a instância de fluxo de trabalho é carregada na memória."
  remarks: "WorkflowLoaded ocorre depois que o serviço de persistência restaurou a instância de fluxo de trabalho, mas antes do fluxo de trabalho do mecanismo de tempo de execução começa a executar todas as atividades.       Para o evento WorkflowLoaded, contém o remetente a <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contém o <xref:System.Workflow.Runtime.WorkflowInstance>associado ao evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [consumindo eventos](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowLoaded with an event handler, a method named `OnWorkflowLoad`.  \n  \n This code example is part of the [Custom Persistence Service](http://go.microsoft.com/fwlink/?LinkID=157351) sample.  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowLoaded;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  id: WorkflowPersisted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowPersisted
  nameWithType: WorkflowRuntime.WorkflowPersisted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando o estado de uma instância de fluxo de trabalho é mantido."
  remarks: "A instância de fluxo de trabalho pode ser persistentes por vários motivos. Por exemplo, o host pode chamar <xref:System.Workflow.Runtime.WorkflowInstance.UnLoad%2A?displayProperty=fullName>em uma instância de fluxo de trabalho ou o fluxo de trabalho do mecanismo de tempo de execução pode persistir uma instância de fluxo de trabalho porque a instância estiver ociosa ou como um escopo atômico foi concluída.</xref:System.Workflow.Runtime.WorkflowInstance.UnLoad%2A?displayProperty=fullName> Se um serviço de persistência está presente no <xref:System.Workflow.Runtime.WorkflowRuntime>, WorkflowPersisted é gerado pelo tempo de execução depois que o estado da instância do fluxo de trabalho é salvo na memória.</xref:System.Workflow.Runtime.WorkflowRuntime> Se um serviço de persistência não estiver presente, o evento ainda é gerado, mas o estado da instância não é salva. Se o evento WorkflowPersisted ocorre porque a instância de fluxo de trabalho está sendo descarregada, ele é seguido por um <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>       Para o evento WorkflowPersisted, contém o remetente a <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contém o <xref:System.Workflow.Runtime.WorkflowInstance>associado ao evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [consumindo eventos](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowPersisted with an event handler, a method named `OnWorkflowPersisted`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).  \n  \n [!code-cs[WF_Samples#279](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#279)]\n [!code-vb[WF_Samples#279](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#279)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowPersisted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  id: WorkflowResumed
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowResumed
  nameWithType: WorkflowRuntime.WorkflowResumed
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando a execução de uma instância de fluxo de trabalho é retomada após uma suspensão."
  remarks: "O mecanismo de tempo de execução do fluxo de trabalho gera o evento de WorkflowResumed antes da instância de fluxo de trabalho é agendada. O evento WorkflowResumed normalmente é gerado por causa de uma chamada explícita para <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName> No entanto, o mecanismo de tempo de execução do fluxo de trabalho pode suspender temporariamente uma instância para executar uma operação, por exemplo, para aplicar uma alteração de fluxo de trabalho. Nesse caso, o evento WorkflowResumed é gerado quando o tempo de execução retoma a execução da instância do fluxo de trabalho após a operação.       Para o evento WorkflowResumed, contém o remetente a <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contém o <xref:System.Workflow.Runtime.WorkflowInstance>associado ao evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [consumindo eventos](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowResumed with an event handler, a method named `OnWorkflowResume`.  \n  \n This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkId=157402).  \n  \n [!code-cs[WF_Samples#171](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#171)]\n [!code-vb[WF_Samples#171](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#171)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowResumed;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  id: WorkflowStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowStarted
  nameWithType: WorkflowRuntime.WorkflowStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando uma instância de fluxo de trabalho foi iniciada."
  remarks: "O mecanismo de tempo de execução do fluxo de trabalho gera o evento de WorkflowStarted depois que a instância de fluxo de trabalho é iniciada pelo agendamento de atividade raiz para execução. Para esse evento, o remetente contém o <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contém o <xref:System.Workflow.Runtime.WorkflowInstance>associado ao evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [consumindo eventos](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowStarted with an event handler, a method named `OnWorkflowStarted`.  \n  \n This code example is part of the [Host Communication Sample](http://go.microsoft.com/fwlink/?LinkId=157406).  \n  \n [!code-cs[WF_Samples#297](~/add/codesnippet/csharp/wf_snippets/snippets38.cs#297)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowStarted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  id: WorkflowSuspended
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowSuspended
  nameWithType: WorkflowRuntime.WorkflowSuspended
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando uma instância de fluxo de trabalho é suspenso."
  remarks: "A instância de fluxo de trabalho pode ser suspenso pelo host por meio de uma chamada para o <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A>método, por um <xref:System.Workflow.ComponentModel.SuspendActivity>atividade, ou implicitamente pelo mecanismo de tempo de execução do fluxo de trabalho.</xref:System.Workflow.ComponentModel.SuspendActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> Por exemplo, o mecanismo de tempo de execução do fluxo de trabalho suspende temporariamente a instância ao aplicar alterações dinâmicas para a instância.       Para o evento WorkflowSuspended, contém o remetente a <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>contém o <xref:System.Workflow.Runtime.WorkflowInstance>e uma cadeia de caracteres que descreve o motivo pelo qual a instância foi suspenso.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [consumindo eventos](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowSuspended with an event handler, a method named `OnWorkflowSuspended`.  \n  \n This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkID=157402).  \n  \n [!code-cs[WF_Samples#170](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#170)]\n [!code-vb[WF_Samples#170](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#170)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs> WorkflowSuspended;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowSuspendedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  id: WorkflowTerminated
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowTerminated
  nameWithType: WorkflowRuntime.WorkflowTerminated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando uma instância de fluxo de trabalho é encerrada."
  remarks: "O fluxo de trabalho pode ser encerrado pelo host por meio de uma chamada para o <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A>método, por um <xref:System.Workflow.ComponentModel.TerminateActivity>atividade, ou pelo mecanismo de tempo de execução do fluxo de trabalho quando ocorre uma exceção sem tratamento.</xref:System.Workflow.ComponentModel.TerminateActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> O mecanismo de tempo de execução do fluxo de trabalho gera o evento WorkflowTerminated depois que a instância de fluxo de trabalho for encerrada, mas antes de ele é invalidado em memória.       Para o <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>o remetente do evento, contém o <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>contém o <xref:System.Workflow.Runtime.WorkflowInstance>e informações sobre o motivo pelo qual a instância foi encerrada no <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=fullName>propriedade.</xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=fullName> </xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [consumindo eventos](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#260](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#260)]\n [!code-vb[WF_Samples#260](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#260)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs> WorkflowTerminated;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowTerminatedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  id: WorkflowUnloaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowUnloaded
  nameWithType: WorkflowRuntime.WorkflowUnloaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ocorre quando a instância de fluxo de trabalho é descarregada da memória."
  remarks: "Uma instância de fluxo de trabalho pode ser descarregada da memória por uma chamada explícita para <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>, ou implicitamente pelo mecanismo de tempo de execução de fluxo de trabalho de acordo com a sua própria semântica.</xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> Por exemplo, o mecanismo de tempo de execução do fluxo de trabalho descarrega uma instância de fluxo de trabalho se a instância ficar ociosa e o tempo de execução tiver um <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>adicionado para o qual <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A>é `true`.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>       O mecanismo de tempo de execução do fluxo de trabalho gera o evento WorkflowUnloaded depois que o estado da instância do fluxo de trabalho foram persistentes com êxito, mas antes da instância é invalidada em memória. Portanto, um <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>evento precede o evento WorkflowUnloaded.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       Para o <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnLoaded>o remetente do evento, contém o <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contém o <xref:System.Workflow.Runtime.WorkflowInstance>associado ao evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnLoaded>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [consumindo eventos](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowUnloaded with an event handler, a method named `OnWorkflowUnload`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowUnloaded;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime()
  nameWithType: WorkflowRuntime.WorkflowRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime(String)
  nameWithType: WorkflowRuntime.WorkflowRuntime(String)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime(WorkflowRuntimeSection)
  nameWithType: WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
- uid: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
  parent: System.Workflow.Runtime.Configuration
  isExternal: false
  name: WorkflowRuntimeSection
  nameWithType: WorkflowRuntimeSection
  fullName: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: AddService(Object)
  nameWithType: WorkflowRuntime.AddService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.AddService(Object)
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type)
- uid: System.Workflow.Runtime.WorkflowInstance
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowInstance
  nameWithType: WorkflowInstance
  fullName: System.Workflow.Runtime.WorkflowInstance
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Dispose()
  nameWithType: WorkflowRuntime.Dispose()
  fullName: System.Workflow.Runtime.WorkflowRuntime.Dispose()
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices(Type)
  nameWithType: WorkflowRuntime.GetAllServices(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(Type)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Object>
  nameWithType: ReadOnlyCollection<Object>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Object>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices()
  nameWithType: WorkflowRuntime.GetAllServices()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{T}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetLoadedWorkflows()
  nameWithType: WorkflowRuntime.GetLoadedWorkflows()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.Runtime.WorkflowInstance}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<WorkflowInstance>
  nameWithType: ReadOnlyCollection<WorkflowInstance>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowInstance
    name: WorkflowInstance
    nameWithType: WorkflowInstance
    fullName: WorkflowInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService(Type)
  nameWithType: WorkflowRuntime.GetService(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService(Type)
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService()
  nameWithType: WorkflowRuntime.GetService()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetWorkflow(Guid)
  nameWithType: WorkflowRuntime.GetWorkflow(Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(Guid)
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.IsStarted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.WorkflowRuntime.Name
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Name
  nameWithType: WorkflowRuntime.Name
  fullName: System.Workflow.Runtime.WorkflowRuntime.Name
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: RemoveService(Object)
  nameWithType: WorkflowRuntime.RemoveService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.RemoveService(Object)
- uid: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: ServicesExceptionNotHandled
  nameWithType: WorkflowRuntime.ServicesExceptionNotHandled
  fullName: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
- uid: System.EventHandler{System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ServicesExceptionNotHandledEventArgs>
  nameWithType: EventHandler<ServicesExceptionNotHandledEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs
    name: ServicesExceptionNotHandledEventArgs
    nameWithType: ServicesExceptionNotHandledEventArgs
    fullName: ServicesExceptionNotHandledEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.Started
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Started
  nameWithType: WorkflowRuntime.Started
  fullName: System.Workflow.Runtime.WorkflowRuntime.Started
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowRuntimeEventArgs>
  nameWithType: EventHandler<WorkflowRuntimeEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowRuntimeEventArgs
    name: WorkflowRuntimeEventArgs
    nameWithType: WorkflowRuntimeEventArgs
    fullName: WorkflowRuntimeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StartRuntime()
  nameWithType: WorkflowRuntime.StartRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StartRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.Stopped
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Stopped
  nameWithType: WorkflowRuntime.Stopped
  fullName: System.Workflow.Runtime.WorkflowRuntime.Stopped
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StopRuntime()
  nameWithType: WorkflowRuntime.StopRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StopRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowAborted
  nameWithType: WorkflowRuntime.WorkflowAborted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowEventArgs>
  nameWithType: EventHandler<WorkflowEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowEventArgs
    name: WorkflowEventArgs
    nameWithType: WorkflowEventArgs
    fullName: WorkflowEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowCompleted
  nameWithType: WorkflowRuntime.WorkflowCompleted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowCompletedEventArgs>
  nameWithType: EventHandler<WorkflowCompletedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowCompletedEventArgs
    name: WorkflowCompletedEventArgs
    nameWithType: WorkflowCompletedEventArgs
    fullName: WorkflowCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowCreated
  nameWithType: WorkflowRuntime.WorkflowCreated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowIdled
  nameWithType: WorkflowRuntime.WorkflowIdled
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowLoaded
  nameWithType: WorkflowRuntime.WorkflowLoaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowPersisted
  nameWithType: WorkflowRuntime.WorkflowPersisted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowResumed
  nameWithType: WorkflowRuntime.WorkflowResumed
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowStarted
  nameWithType: WorkflowRuntime.WorkflowStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowSuspended
  nameWithType: WorkflowRuntime.WorkflowSuspended
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowSuspendedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowSuspendedEventArgs>
  nameWithType: EventHandler<WorkflowSuspendedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowSuspendedEventArgs
    name: WorkflowSuspendedEventArgs
    nameWithType: WorkflowSuspendedEventArgs
    fullName: WorkflowSuspendedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowTerminated
  nameWithType: WorkflowRuntime.WorkflowTerminated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowTerminatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowTerminatedEventArgs>
  nameWithType: EventHandler<WorkflowTerminatedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowTerminatedEventArgs
    name: WorkflowTerminatedEventArgs
    nameWithType: WorkflowTerminatedEventArgs
    fullName: WorkflowTerminatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowUnloaded
  nameWithType: WorkflowRuntime.WorkflowUnloaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime.WorkflowRuntime
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: AddService
  nameWithType: WorkflowRuntime.AddService
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow
  nameWithType: WorkflowRuntime.CreateWorkflow
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Dispose
  nameWithType: WorkflowRuntime.Dispose
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices
  nameWithType: WorkflowRuntime.GetAllServices
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices<T>*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices<T>
  nameWithType: WorkflowRuntime.GetAllServices<T>
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetLoadedWorkflows
  nameWithType: WorkflowRuntime.GetLoadedWorkflows
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService
  nameWithType: WorkflowRuntime.GetService
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService<T>*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService<T>
  nameWithType: WorkflowRuntime.GetService<T>
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetWorkflow
  nameWithType: WorkflowRuntime.GetWorkflow
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
- uid: System.Workflow.Runtime.WorkflowRuntime.Name*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Name
  nameWithType: WorkflowRuntime.Name
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: RemoveService
  nameWithType: WorkflowRuntime.RemoveService
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StartRuntime
  nameWithType: WorkflowRuntime.StartRuntime
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StopRuntime
  nameWithType: WorkflowRuntime.StopRuntime
