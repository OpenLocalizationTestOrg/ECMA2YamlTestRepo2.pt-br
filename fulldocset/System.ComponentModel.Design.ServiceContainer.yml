### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ServiceContainer
  id: ServiceContainer
  children:
  - System.ComponentModel.Design.ServiceContainer.#ctor
  - System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  - System.ComponentModel.Design.ServiceContainer.DefaultServices
  - System.ComponentModel.Design.ServiceContainer.Dispose
  - System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)
  - System.ComponentModel.Design.ServiceContainer.GetService(System.Type)
  - System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)
  - System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)
  langs:
  - csharp
  name: ServiceContainer
  nameWithType: ServiceContainer
  fullName: System.ComponentModel.Design.ServiceContainer
  type: Class
  summary: "Fornece uma implementação simple de <xref href=&quot;System.ComponentModel.Design.IServiceContainer&quot;> </xref> interface. Essa classe não pode ser herdada."
  remarks: "O objeto ServiceContainer pode ser usado para armazenar e fornecer serviços. ServiceContainer implementa o <xref:System.ComponentModel.Design.IServiceContainer>interface.</xref:System.ComponentModel.Design.IServiceContainer>       O objeto ServiceContainer pode ser criado usando um construtor que adiciona um pai <xref:System.ComponentModel.Design.IServiceContainer>por meio do qual os serviços podem ser opcionalmente adicionados ou removidos de todos os pai <xref:System.ComponentModel.Design.IServiceContainer>objetos, incluindo o pai imediato <xref:System.ComponentModel.Design.IServiceContainer>.</xref:System.ComponentModel.Design.IServiceContainer> </xref:System.ComponentModel.Design.IServiceContainer> </xref:System.ComponentModel.Design.IServiceContainer> Para adicionar ou remover um serviço de todos os <xref:System.ComponentModel.Design.IServiceContainer>implementações que estão vinculadas a este <xref:System.ComponentModel.Design.IServiceContainer>por meio de paternidade, chame o <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A>ou <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A>sobrecarga do método que aceita um valor booliano que indica se é promover a solicitação de serviço.</xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> </xref:System.ComponentModel.Design.ServiceContainer.AddService%2A> </xref:System.ComponentModel.Design.IServiceContainer> </xref:System.ComponentModel.Design.IServiceContainer>      > [!NOTE] > O <xref:System.Security.Permissions.HostProtectionAttribute>atributo aplicado a essa classe tem as seguintes <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A>valor da propriedade: <xref:System.Security.Permissions.HostProtectionResource>.</xref:System.Security.Permissions.HostProtectionResource> </xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> </xref:System.Security.Permissions.HostProtectionAttribute> O <xref:System.Security.Permissions.HostProtectionAttribute>não afeta os aplicativos de área de trabalho (que normalmente são iniciados por um ícone, digitando um comando ou inserir uma URL em um navegador).</xref:System.Security.Permissions.HostProtectionAttribute> Para obter mais informações, consulte o <xref:System.Security.Permissions.HostProtectionAttribute>classe ou [programação do SQL Server e atributos de proteção de Host](~/add/includes/ajax-current-ext-md.md).</xref:System.Security.Permissions.HostProtectionAttribute>"
  example:
  - "The following example program demonstrates service chaining and the resultant service availability of a chain of linked ServiceContainer objects. The program provides a user interface that allows you to see the availability of services within a chain of linked services, and uses the <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A>, <xref:System.ComponentModel.Design.ServiceContainer.GetService%2A>, and <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> methods as well as linked service containers.  \n  \n [!code-cpp[ServiceArchitectureExample#1](~/add/codesnippet/cpp/t-system.componentmodel._126_1.cpp)]\n [!code-vb[ServiceArchitectureExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._126_1.vb)]\n [!code-cs[ServiceArchitectureExample#1](~/add/codesnippet/csharp/t-system.componentmodel._126_1.cs)]"
  syntax:
    content: 'public class ServiceContainer : IDisposable, IServiceProvider, System.ComponentModel.Design.IServiceContainer'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.Design.IServiceContainer
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: ServiceContainer()
  nameWithType: ServiceContainer.ServiceContainer()
  fullName: System.ComponentModel.Design.ServiceContainer.ServiceContainer()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.ServiceContainer&quot;> </xref> classe."
  syntax:
    content: public ServiceContainer ();
    parameters: []
  overload: System.ComponentModel.Design.ServiceContainer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: ServiceContainer(IServiceProvider)
  nameWithType: ServiceContainer.ServiceContainer(IServiceProvider)
  fullName: System.ComponentModel.Design.ServiceContainer.ServiceContainer(IServiceProvider)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.ServiceContainer&quot;> </xref> classe usando o provedor de serviço pai especificado."
  remarks: "O contêiner de serviço usa esse provedor de objeto de serviço para recuperar os serviços, se eles não estão disponíveis localmente no contêiner."
  syntax:
    content: public ServiceContainer (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "Um provedor de serviço pai."
  overload: System.ComponentModel.Design.ServiceContainer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type,ServiceCreatorCallback)
  nameWithType: ServiceContainer.AddService(Type,ServiceCreatorCallback)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,ServiceCreatorCallback)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adiciona o serviço especificado ao contêiner de serviço."
  remarks: ''
  example:
  - "The following example illustrates how to add a service to a <xref:System.ComponentModel.Design.ServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#3](~/add/codesnippet/csharp/361e39aa-642e-4002-bd54-_1.cs)]\n [!code-vb[ServiceContainerExample#3](~/add/codesnippet/visualbasic/361e39aa-642e-4002-bd54-_1.vb)]\n [!code-cpp[ServiceContainerExample#3](~/add/codesnippet/cpp/361e39aa-642e-4002-bd54-_1.cpp)]"
  syntax:
    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O tipo de serviço a ser adicionado."
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: "Um objeto de retorno de chamada que pode criar o serviço. Isso permite que um serviço deve ser declarado como disponíveis, mas atrasa a criação do objeto até que o serviço seja solicitado."
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>callback</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um serviço do tipo <code> serviceType </code> já existe no contêiner."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)
  id: AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type,Object)
  nameWithType: ServiceContainer.AddService(Type,Object)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adiciona o serviço especificado ao contêiner de serviço."
  remarks: ''
  example:
  - "The following example illustrates how to add a service to a <xref:System.ComponentModel.Design.ServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#2](~/add/codesnippet/csharp/7d5e79e6-2750-48e2-b4e9-_1.cs)]\n [!code-vb[ServiceContainerExample#2](~/add/codesnippet/visualbasic/7d5e79e6-2750-48e2-b4e9-_1.vb)]\n [!code-cpp[ServiceContainerExample#2](~/add/codesnippet/cpp/7d5e79e6-2750-48e2-b4e9-_1.cpp)]"
  syntax:
    content: public void AddService (Type serviceType, object serviceInstance);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O tipo de serviço a ser adicionado."
    - id: serviceInstance
      type: System.Object
      description: "Uma instância de serviço a adicionar. Esse objeto deve implementar ou herdar do tipo indicado pelo `serviceType` parâmetro."
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>serviceInstance</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um serviço do tipo <code> serviceType </code> já existe no contêiner."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type,ServiceCreatorCallback,Boolean)
  nameWithType: ServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adiciona o serviço especificado ao contêiner de serviço."
  syntax:
    content: public virtual void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O tipo de serviço a ser adicionado."
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: "Um objeto de retorno de chamada que pode criar o serviço. Isso permite que um serviço deve ser declarado como disponíveis, mas atrasa a criação do objeto até que o serviço seja solicitado."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esse serviço deve ser adicionado para qualquer contêiner de serviço pai; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>callback</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um serviço do tipo <code> serviceType </code> já existe no contêiner."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  id: AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type,Object,Boolean)
  nameWithType: ServiceContainer.AddService(Type,Object,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adiciona o serviço especificado ao contêiner de serviço."
  syntax:
    content: public virtual void AddService (Type serviceType, object serviceInstance, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O tipo de serviço a ser adicionado."
    - id: serviceInstance
      type: System.Object
      description: "Uma instância do tipo de serviço para adicionar. Esse objeto deve implementar ou herdar do tipo indicado pelo `serviceType` parâmetro."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esse serviço deve ser adicionado para qualquer contêiner de serviço pai; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>serviceInstance</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um serviço do tipo <code> serviceType </code> já existe no contêiner."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices
  id: DefaultServices
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: DefaultServices
  nameWithType: ServiceContainer.DefaultServices
  fullName: System.ComponentModel.Design.ServiceContainer.DefaultServices
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Obtém os serviços padrão implementados diretamente pelo <xref href=&quot;System.ComponentModel.Design.ServiceContainer&quot;> </xref>."
  remarks: "Essa propriedade retorna os serviços padrão que são implementados diretamente nesta <xref:System.ComponentModel.Design.IServiceContainer>.</xref:System.ComponentModel.Design.IServiceContainer> a implementação padrão dessa propriedade é retornar o <xref:System.ComponentModel.Design.IServiceContainer>e <xref:System.ComponentModel.Design.ServiceContainer>tipos.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.IServiceContainer> Você pode substituir essa propriedade e retornar seus próprios tipos, modificando o comportamento padrão de <xref:System.ComponentModel.Component.GetService%2A>.</xref:System.ComponentModel.Component.GetService%2A>"
  syntax:
    content: protected virtual Type[] DefaultServices { get; }
    return:
      type: System.Type[]
      description: "Os serviços padrão."
  overload: System.ComponentModel.Design.ServiceContainer.DefaultServices*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: Dispose()
  nameWithType: ServiceContainer.Dispose()
  fullName: System.ComponentModel.Design.ServiceContainer.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Descarta a este contêiner de serviço."
  remarks: "Dispose orienta instanciados todos os serviços dentro do contêiner e descarta qualquer que implementam <xref:System.IDisposable>e limpa a lista de serviços.</xref:System.IDisposable>       Chamada <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>Quando terminar de usar o <xref:System.ComponentModel.Design.ServiceContainer>.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> O <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>método deixa o <xref:System.ComponentModel.Design.ServiceContainer>em um estado inutilizável.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> Depois de chamar <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>, você deve liberar todas as referências para o <xref:System.ComponentModel.Design.ServiceContainer>para o coletor de lixo possa recuperar a memória que o <xref:System.ComponentModel.Design.ServiceContainer>estava ocupando.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamar <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>antes de liberar sua última referência a <xref:System.ComponentModel.Design.ServiceContainer>.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.ComponentModel.Design.ServiceContainer>do objeto `Finalize` método.</xref:System.ComponentModel.Design.ServiceContainer>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.ServiceContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ServiceContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Descarta a este contêiner de serviço."
  remarks: "<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>orienta instanciados todos os serviços dentro do contêiner e descarta qualquer que implementam <xref:System.IDisposable>e limpa a lista de serviços.</xref:System.IDisposable></xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>       Este método é chamado pelo público `Dispose()`método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> `Dispose()`invoca o protegido `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro for true, este método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.ComponentModel.Design.ServiceContainer>referências.</xref:System.ComponentModel.Design.ServiceContainer> Este método chama o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.ComponentModel.Design.ServiceContainer&quot;> </xref> está sendo descartado de; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.ServiceContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: ServiceContainer.GetService(Type)
  fullName: System.ComponentModel.Design.ServiceContainer.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Obtém o serviço solicitado."
  syntax:
    content: public virtual object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O tipo de serviço para recuperar."
    return:
      type: System.Object
      description: "Uma instância do serviço se ele pode ser encontrado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se ele não pôde ser encontrado."
  overload: System.ComponentModel.Design.ServiceContainer.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)
  id: RemoveService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: RemoveService(Type)
  nameWithType: ServiceContainer.RemoveService(Type)
  fullName: System.ComponentModel.Design.ServiceContainer.RemoveService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Remove o tipo de serviço especificado do contêiner de serviços."
  remarks: ''
  example:
  - "The following example illustrates how to remove a service from a <xref:System.ComponentModel.Design.ServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#4](~/add/codesnippet/csharp/m-system.componentmodel._24_1.cs)]\n [!code-vb[ServiceContainerExample#4](~/add/codesnippet/visualbasic/m-system.componentmodel._24_1.vb)]\n [!code-cpp[ServiceContainerExample#4](~/add/codesnippet/cpp/m-system.componentmodel._24_1.cpp)]"
  syntax:
    content: public void RemoveService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O tipo de serviço a ser removido."
  overload: System.ComponentModel.Design.ServiceContainer.RemoveService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)
  id: RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: RemoveService(Type,Boolean)
  nameWithType: ServiceContainer.RemoveService(Type,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.RemoveService(Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Remove o tipo de serviço especificado do contêiner de serviços."
  syntax:
    content: public virtual void RemoveService (Type serviceType, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O tipo de serviço a ser removido."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esse serviço deve ser removido de qualquer contêiner de serviço pai; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.ServiceContainer.RemoveService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.ServiceContainer.#ctor
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: ServiceContainer()
  nameWithType: ServiceContainer.ServiceContainer()
  fullName: System.ComponentModel.Design.ServiceContainer.ServiceContainer()
- uid: System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: ServiceContainer(IServiceProvider)
  nameWithType: ServiceContainer.ServiceContainer(IServiceProvider)
  fullName: System.ComponentModel.Design.ServiceContainer.ServiceContainer(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type,ServiceCreatorCallback)
  nameWithType: ServiceContainer.AddService(Type,ServiceCreatorCallback)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,ServiceCreatorCallback)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.ServiceCreatorCallback
  parent: System.ComponentModel.Design
  isExternal: false
  name: ServiceCreatorCallback
  nameWithType: ServiceCreatorCallback
  fullName: System.ComponentModel.Design.ServiceCreatorCallback
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type,Object)
  nameWithType: ServiceContainer.AddService(Type,Object)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,Object)
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type,ServiceCreatorCallback,Boolean)
  nameWithType: ServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type,Object,Boolean)
  nameWithType: ServiceContainer.AddService(Type,Object,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,Object,Boolean)
- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: DefaultServices
  nameWithType: ServiceContainer.DefaultServices
  fullName: System.ComponentModel.Design.ServiceContainer.DefaultServices
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Design.ServiceContainer.Dispose
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: Dispose()
  nameWithType: ServiceContainer.Dispose()
  fullName: System.ComponentModel.Design.ServiceContainer.Dispose()
- uid: System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ServiceContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.Dispose(Boolean)
- uid: System.ComponentModel.Design.ServiceContainer.GetService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: GetService(Type)
  nameWithType: ServiceContainer.GetService(Type)
  fullName: System.ComponentModel.Design.ServiceContainer.GetService(Type)
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: RemoveService(Type)
  nameWithType: ServiceContainer.RemoveService(Type)
  fullName: System.ComponentModel.Design.ServiceContainer.RemoveService(Type)
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: RemoveService(Type,Boolean)
  nameWithType: ServiceContainer.RemoveService(Type,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.RemoveService(Type,Boolean)
- uid: System.ComponentModel.Design.ServiceContainer.#ctor*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: ServiceContainer
  nameWithType: ServiceContainer.ServiceContainer
- uid: System.ComponentModel.Design.ServiceContainer.AddService*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService
  nameWithType: ServiceContainer.AddService
- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: DefaultServices
  nameWithType: ServiceContainer.DefaultServices
- uid: System.ComponentModel.Design.ServiceContainer.Dispose*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: Dispose
  nameWithType: ServiceContainer.Dispose
- uid: System.ComponentModel.Design.ServiceContainer.GetService*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: GetService
  nameWithType: ServiceContainer.GetService
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: RemoveService
  nameWithType: ServiceContainer.RemoveService
