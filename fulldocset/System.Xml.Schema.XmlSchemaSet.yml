### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaSet
  id: XmlSchemaSet
  children:
  - System.Xml.Schema.XmlSchemaSet.#ctor
  - System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  - System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  - System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  - System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaSet.CompilationSettings
  - System.Xml.Schema.XmlSchemaSet.Compile
  - System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  - System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  - System.Xml.Schema.XmlSchemaSet.Count
  - System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  - System.Xml.Schema.XmlSchemaSet.GlobalElements
  - System.Xml.Schema.XmlSchemaSet.GlobalTypes
  - System.Xml.Schema.XmlSchemaSet.IsCompiled
  - System.Xml.Schema.XmlSchemaSet.NameTable
  - System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Schemas
  - System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  - System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  - System.Xml.Schema.XmlSchemaSet.XmlResolver
  langs:
  - csharp
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
  type: Class
  summary: "Contém um cache de esquemas de linguagem XSD de definição de esquema XML."
  remarks: "> [!IMPORTANT]>-Não use esquemas de fontes desconhecidas ou não confiáveis ou locais. Isso comprometerá a segurança do seu código.   >-Esquemas XML (incluindo esquemas embutidos) são inerentemente vulneráveis a ataques negação de serviço; não aceitá-los em cenários não confiáveis.   >-Mensagens de erro de validação de esquema e as exceções podem expor informações confidenciais sobre o modelo de conteúdo ou o caminho de URI para o arquivo de esquema. Tenha cuidado para não expor essas informações para chamadores não confiáveis.   >-Considerações de segurança adicionais são abordadas na seção &quot;Considerações sobre segurança&quot;.       XmlSchemaSet é um cache ou a biblioteca onde você pode armazenar os esquemas de linguagem XSD de definição de esquema XML. XmlSchemaSet melhora o desempenho armazenando em cache de esquemas na memória, em vez de acessá-los de um arquivo ou uma URL. Cada esquema é identificado pelo namespace URI e local que foi especificado quando o esquema foi adicionado ao conjunto. Você usa o <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName>propriedade para atribuir o objeto XmlSchemaSet um leitor de XML deve usar para validação de dados.</xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName>      ## Considerações de segurança - não use esquemas de fontes desconhecidas ou não confiáveis. Isso comprometerá a segurança do seu código. Incluem namespaces externos ou locais referenciados no, importar e elementos de redefinição de um esquema são resolvidos em relação ao URI de base do esquema que inclui ou importá-los. Por exemplo, se o URI de base do incluindo ou Importando esquema está vazio ou `null`, os locais externos são resolvidos em relação ao diretório atual. O <xref:System.Xml.XmlUrlResolver>classe é usada para resolver esquemas externos por padrão.</xref:System.Xml.XmlUrlResolver> Para desabilitar a resolução de inclusão, importar e redefinir a elementos de um esquema, defina o <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName>propriedade `null`.</xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName>      -Os usos de classe XmlSchemaSet o <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>classe para analisar e correspondem a expressões regulares em um esquema XML.</xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> Validação das facetas de padrão com expressões regulares em um esquema XML pode envolver um aumento no uso da CPU e deve ser evitada em cenários de alta disponibilidade.      -As exceções geradas como resultado do uso da classe XmlSchemaSet, como o <xref:System.Xml.Schema.XmlSchemaException>classe pode conter informações confidenciais que não devem ser expostas em cenários não confiáveis.</xref:System.Xml.Schema.XmlSchemaException> Por exemplo, o <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>propriedade de um <xref:System.Xml.Schema.XmlSchemaException>retorna o caminho URI para o arquivo de esquema que causou a exceção.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> O <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>propriedade não deve ser exposta em cenários não confiáveis.</xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Exceções devem ser tratadas corretamente para que informações confidenciais não são expostas em cenários não confiáveis."
  example:
  - "The following example validates an XML file using schemas stored in the XmlSchemaSet. The namespace in the XML file, `urn:bookstore-schema`, identifies which schema in the XmlSchemaSet to use for validation.  \n  \n [!code-cpp[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_0_1.cpp)]\n [!code-cs[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_0_1.cs)]\n [!code-vb[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_0_1.vb)]  \n  \n## Input  \n The sample uses the following two input files.  \n  \n **booksSchemaFail.xml:**  \n  \n [!code-xml[XmlReader_Validate_SchemaSet#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_0_2.xml)]  \n  \n **books.xsd:**  \n  \n [!code-xml[XmlReader_Validate_SchemaSet#3](~/add/codesnippet/xml/t-system.xml.schema.xmls_0_3.xsd)]  \n  \n## Output  \n Validation Error: The element 'book' in namespace 'urn:bookstore-schema' has invalid child element 'author' in namespace 'urn:bookstore-schema'. Expected 'title' in namespace 'urn:bookstore-schema'.  \n  \n Validation Error: The element 'author' in namespace 'urn:bookstore-schema' has invalid child element 'name' in namespace 'urn:bookstore-schema'. Expected 'first-name' in namespace 'urn:bookstore-schema'."
  syntax:
    content: public class XmlSchemaSet
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlSchemaSet()
  nameWithType: XmlSchemaSet.XmlSchemaSet()
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> classe."
  syntax:
    content: public XmlSchemaSet ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaSet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  id: '#ctor(System.Xml.XmlNameTable)'
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlSchemaSet(XmlNameTable)
  nameWithType: XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> classe com o <xref:System.Xml.XmlNameTable>.</xref:System.Xml.XmlNameTable> especificado"
  syntax:
    content: public XmlSchemaSet (System.Xml.XmlNameTable nameTable);
    parameters:
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "O <xref:System.Xml.XmlNameTable>objeto a ser usado.</xref:System.Xml.XmlNameTable>"
  overload: System.Xml.Schema.XmlSchemaSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref:System.Xml.XmlNameTable>objeto passado como um parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlNameTable>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  id: Add(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(XmlSchema)
  nameWithType: XmlSchemaSet.Add(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Adiciona o determinado <xref:System.Xml.Schema.XmlSchema>para o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  remarks: "Se o <xref:System.Xml.Schema.XmlSchema>já existe no objeto de <xref:System.Xml.Schema.XmlSchemaSet>, o método Add não faz nada.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchema>       A funcionalidade desse método é idêntica do <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>método.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "O <xref:System.Xml.Schema.XmlSchema>objeto a ser adicionado para o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "Um <xref:System.Xml.Schema.XmlSchema>objeto se o esquema é válido.</xref:System.Xml.Schema.XmlSchema> Se o esquema não é válido e um <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> for especificado, então <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> será retornado e a validação apropriado é gerado. Caso contrário, um <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> é gerada."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "O esquema não é válido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref:System.Xml.Schema.XmlSchema>objeto passado como um parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  id: Add(System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(XmlSchemaSet)
  nameWithType: XmlSchemaSet.Add(XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Adiciona todos os XML Schema definition linguagem XSD esquemas na determinado <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> para o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Antes de um esquema pode ser adicionado a um <xref:System.Xml.Schema.XmlSchemaSet>, ele deve ser processado com êxito.</xref:System.Xml.Schema.XmlSchemaSet> Pré-processamento executa as seguintes tarefas básicas.      1.  O esquema é verificado quanto à validade estrutural acordo com as regras do esquema de XML da W3C, mas o esquema não está completamente validado.      2.  Referências a componentes de esquema internos e externos são resolvidas. Qualquer esquema importada ou incluída que é recuperada com êxito também é adicionada a <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Esquemas importados são adicionadas como separado <xref:System.Xml.Schema.XmlSchema>objetos e esquemas incluídos são feitas uma parte de incluindo <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       Se o <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>propriedade do <xref:System.Xml.Schema.XmlSchemaSet>Adicionar é `true`, todos os esquemas a <xref:System.Xml.Schema.XmlSchemaSet>para adicionar são adicionados ao <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> Se o <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>propriedade o <xref:System.Xml.Schema.XmlSchemaSet>Adicionar é `false`, cada esquema adicionada é pré-processados antes de serem adicionados.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> Se qualquer um dos esquemas recém-adicionado <xref:System.Xml.Schema.XmlSchemaSet>falhar ser processado, nenhum esquemas são adicionados; em vez disso, um <xref:System.Xml.Schema.XmlSchemaException>é gerada.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaSet> Como resultado, o exemplo de código de dois a seguir não são equivalentes.      ```vb#   &quot; First example   schemaSet.Add(schemaSet1)      &quot; Second example   Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          schemaSet.Add(schema)      Next   ```      ```c#   // First example   schemaSet.Add(schemaSet1);      // Second example   foreach(XmlSchema schema in schemaSet.Schemas())   {       schemaSet.Add(schema);   }   ```Os exemplos de código de dois anterior não são equivalentes. No primeiro exemplo, se existir um esquema inválido no `schemaSet1` e sua <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>está definida como `false`, não há esquemas são adicionados ao `schemaSet`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> No segundo exemplo, um número de esquemas pode ser adicionado ao `schemaSet` antes de um esquema inválido é encontrado e uma exceção será lançada."
  example:
  - "The following code example illustrates adding schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then adding the <xref:System.Xml.Schema.XmlSchemaSet> to a new <xref:System.Xml.Schema.XmlSchemaSet> using the Add method.  \n  \n```vb#  \nDim schemaSet1 As XmlSchemaSet = New XmlSchemaSet  \nschemaSet1.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet1.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet1.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schemaSet2 As XmlSchemaSet = New XmlSchemaSet  \nschemaSet2.Add(schemaSet1)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet1 = new XmlSchemaSet();  \nschemaSet1.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet1.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet1.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nXmlSchemaSet schemaSet2 = new XmlSchemaSet();  \nschemaSet2.Add(schemaSet1);  \n```"
  syntax:
    content: public void Add (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "O <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objeto."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Um esquema de <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> não é válido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objeto passado como um parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: XmlSchemaSet.Add(String,String)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Adiciona o esquema de linguagem XSD de definição de esquema XML na URL especificada para o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Antes de um esquema pode ser adicionado a um <xref:System.Xml.Schema.XmlSchemaSet>, ele deve ser processado com êxito.</xref:System.Xml.Schema.XmlSchemaSet> Pré-processamento executa as seguintes tarefas básicas.      1.  O esquema é verificado quanto à validade estrutural acordo com as regras do esquema de XML da W3C, mas o esquema não está completamente validado.      2.  Referências a componentes de esquema internos e externos são resolvidas. Qualquer esquema importada ou incluída que é recuperada com êxito também é adicionada a <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Esquemas importados são adicionadas como separado <xref:System.Xml.Schema.XmlSchema>objetos e esquemas incluídos são feitas uma parte de incluindo <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       A seguir estão as observações importantes a considerar ao usar o método Add.      -Adicionar um esquema para o <xref:System.Xml.Schema.XmlSchemaSet>com o mesmo namespace e o esquema de URL de local de destino como um esquema já está contido dentro de <xref:System.Xml.Schema.XmlSchemaSet>retornará o objeto de esquema original.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>      -Quando um novo esquema foi adicionado com êxito para um <xref:System.Xml.Schema.XmlSchemaSet>, o <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>propriedade o <xref:System.Xml.Schema.XmlSchemaSet>é definido como `false`.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> </xref:System.Xml.Schema.XmlSchemaSet>      -Qualquer elemento de inclusão ou importação em um esquema XML é resolvido quando o método Add é chamado. Falha ao resolver incluir e importar resultados de elementos em um aviso de validação de esquema e se nenhum <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>foi especificado para o <xref:System.Xml.Schema.XmlSchemaSet>objeto, eles aviso não será reportado.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>      -Se um esquema com o mesmo namespace de destino como um esquema que já existe no <xref:System.Xml.Schema.XmlSchemaSet>é adicionada para o <xref:System.Xml.Schema.XmlSchemaSet>, ambos os esquemas são adicionados.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>          > [!NOTE] > Esse comportamento difere do obsoleto <xref:System.Xml.Schema.XmlSchemaCollection>objeto.</xref:System.Xml.Schema.XmlSchemaCollection>      -O método Add do <xref:System.Xml.Schema.XmlSchemaSet>tem a capacidade de usar o namespace de destino definidas em um esquema, em vez de exigir o namespace de destino ser especificado como um parâmetro quando o método Add é chamado.</xref:System.Xml.Schema.XmlSchemaSet> Especificando `null` no `targetNamespace` parâmetro do método Add instrui o <xref:System.Xml.Schema.XmlSchemaSet>para usar o namespace de destino definido no esquema, conforme ilustrado no exemplo de código a seguir.</xref:System.Xml.Schema.XmlSchemaSet>      ```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(Nothing, &quot;books.xsd&quot;)      Dim schema As XmlSchema   For Each schema In schemaSet.Schemas(&quot;http://www.contoso.com/books&quot;)       schema.Write(Console.Out)   Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, &quot;books.xsd&quot;);      foreach(XmlSchema schema in schemaSet.Schemas(&quot;http://www.contoso.com/books&quot;))   {       schema.Write(Console.Out);   }   ```No exemplo de código acima, `null` é especificado como o `targetNamespace` parâmetro para o método Add. Como resultado, o `targetNamespace` definido o Books arquivo é usado. Nesse caso, o resultado de chamar o método Add seria idêntico se http://www.contoso.com/books tivesse sido especificado como o `targetNamespace` parâmetro.      -Esquema de XML da W3C permite que os esquemas sem um namespace de destino devem ser incluídos em esquemas com um namespace de destino definido. Nesse caso, o esquema sem um namespace de destino definido é forçado para o namespace de destino do esquema de inclusão. O esquema incluído é tratado como se tivesse esse namespace de destino definido. Da mesma forma, os esquemas sem um namespace de destino podem ser adicionadas para o <xref:System.Xml.Schema.XmlSchemaSet>e forçado no namespace de destino especificado pelo método Add, conforme ilustrado no exemplo a seguir.</xref:System.Xml.Schema.XmlSchemaSet>      ```   <xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;>       <xs:element name=&quot;A&quot; type=&quot;xs:string&quot; />   </xs:schema>   ```Se o esquema anterior é adicionado a <xref:System.Xml.Schema.XmlSchemaSet>com o namespace do destino http://www.contoso.com/new/targetnamespace (conforme mostrado no código a seguir), ele será tratado como se fosse o namespace de destino declarado no esquema `http://www.contoso.com/new/targetnamespace`.</xref:System.Xml.Schema.XmlSchemaSet>      ```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(&quot;http://www.contoso.com/new/targetnamespace&quot;, &quot;http://www.contoso.com/targetnamespace.xsd&quot;)      Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          Console.WriteLine(schema.TargetNamespace)         Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(&quot;http://www.contoso.com/new/targetnamespace&quot;, &quot;http://www.contoso.com/targetnamespace.xsd&quot;);   foreach(XmlSchema schema in schemaSet.Schemas())   {       Console.WriteLine(schema.TargetNamespace);   }   ```"
  example:
  - "The following code example adds the http://www.contoso.com/books.xsd schema with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n```  \n  \n The example uses the `books.xsd` file as input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#3](~/add/codesnippet/xml/m-system.xml.schema.xmls_3_1.xsd)]"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (string targetNamespace, string schemaUri);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "O esquema `targetNamespace` propriedade, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar o `targetNamespace` especificado no esquema."
    - id: schemaUri
      type: System.String
      description: "A URL que especifica o esquema para carregar."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "Um <xref:System.Xml.Schema.XmlSchema>objeto se o esquema é válido.</xref:System.Xml.Schema.XmlSchema> Se o esquema não é válido e um <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> for especificado, então <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> será retornado e a validação apropriado é gerado. Caso contrário, um <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> é gerada."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "O esquema não é válido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "É a URL passada como um parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou <xref:System.String.Empty>.</xref:System.String.Empty>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  id: Add(System.String,System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(String,XmlReader)
  nameWithType: XmlSchemaSet.Add(String,XmlReader)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Adiciona o esquema de linguagem XSD de definição de esquema XML dentro de <xref:System.Xml.XmlReader>para o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.XmlReader>"
  remarks: "Antes de um esquema pode ser adicionado a um <xref:System.Xml.Schema.XmlSchemaSet>, ele deve ser processado com êxito.</xref:System.Xml.Schema.XmlSchemaSet> Pré-processamento executa as seguintes tarefas básicas.      1.  O esquema é verificado quanto à validade estrutural acordo com as regras do esquema de XML da W3C, mas o esquema não está completamente validado.      2.  Referências a componentes de esquema internos e externos são resolvidas. Qualquer esquema importada ou incluída que é recuperada com êxito também é adicionada a <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Esquemas importados são adicionadas como separado <xref:System.Xml.Schema.XmlSchema>objetos e esquemas incluídos são feitas uma parte de incluindo <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       A seguir estão as observações importantes a considerar ao usar o método Add.      -Esquemas importados ou incluídos pelos esquemas contidos em que <xref:System.Xml.XmlReader>também são adicionadas a <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader> êxito na recuperação      -Se a <xref:System.Xml.XmlReader>não está posicionado no elemento raiz, um <xref:System.Xml.Schema.XmlSchemaException>é gerada, a menos que o item atual é um elemento.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.XmlReader> Se o item atual for um `xs:schema` elemento, o documento de esquema é lidos a <xref:System.Xml.Schema.XmlSchemaSet>; caso contrário, um <xref:System.Xml.Schema.XmlSchemaException>foi lançado porque o esquema não é válido.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaSet>      -Se a <xref:System.Xml.XmlReader>está posicionado em uma sequência de nós XML, apenas o primeiro nó na sequência é adicionado.</xref:System.Xml.XmlReader>      -Se o esquema foi criado de um <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName>chamada de método, o valor da <xref:System.Xml.Schema.XmlSchemaValidationFlags>propriedade será ignorada porque o processamento do esquema embutido não é aplicado a documentos de esquema de XML da W3C.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName>      -A <xref:System.Xml.XmlResolver>propriedade o <xref:System.Xml.XmlReader>não é usado para resolver referências a namespaces ou esquema locais em incluem e importar elementos.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlResolver> Em vez disso, o <xref:System.Xml.XmlResolver>propriedade o <xref:System.Xml.Schema.XmlSchemaSet>é usado.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlResolver>      -O método Add do <xref:System.Xml.Schema.XmlSchemaSet>tem a capacidade de usar o namespace de destino definidas em um esquema, em vez de exigir o namespace de destino ser especificado como um parâmetro quando o método Add é chamado.</xref:System.Xml.Schema.XmlSchemaSet> Especificando `null` ou <xref:System.String.Empty?displayProperty=fullName>para adicionar o método instrui o <xref:System.Xml.Schema.XmlSchemaSet>para usar o namespace de destino definido no esquema.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.String.Empty?displayProperty=fullName> Para obter um exemplo desse comportamento, consulte o <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>método.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>       A funcionalidade restante deste método é idêntica do <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>método.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>"
  example:
  - "The following code example adds the books.xsd schema contained in the <xref:System.Xml.XmlTextReader> with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", New XmlTextReader(\"books.xsd\")  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", new XmlTextReader(\"books.xsd\");  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (string targetNamespace, System.Xml.XmlReader schemaDocument);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "O esquema `targetNamespace` propriedade, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar o `targetNamespace` especificado no esquema."
    - id: schemaDocument
      type: System.Xml.XmlReader
      description: "O <xref:System.Xml.XmlReader>objeto.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "Um <xref:System.Xml.Schema.XmlSchema>objeto se o esquema é válido.</xref:System.Xml.Schema.XmlSchema> Se o esquema não é válido e um <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> for especificado, então <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> será retornado e a validação apropriado é gerado. Caso contrário, um <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> é gerada."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "O esquema não é válido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref:System.Xml.XmlReader>objeto passado como um parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlReader>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  id: CompilationSettings
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
  fullName: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define o <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;> </xref> para o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "A <xref:System.Xml.Schema.XmlSchemaCompilationSettings>classe especifica as opções de validação de atribuição de partícula exclusiva (UPA) para <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaCompilationSettings> Para obter mais informações sobre como habilitar verificações de validação de UPA, consulte o <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A>propriedade.</xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaCompilationSettings
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;></xref> for the <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>. O padrão é um <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;> </xref> instância com o <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*>propriedade definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*>"
  overload: System.Xml.Schema.XmlSchemaSet.CompilationSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Compile
  id: Compile
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Compile()
  nameWithType: XmlSchemaSet.Compile()
  fullName: System.Xml.Schema.XmlSchemaSet.Compile()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Compila os esquemas de linguagem XSD de definição de esquema XML adicionados ao <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> em um esquema lógico."
  remarks: "Este método é chamado automaticamente quando a validação é necessária e o <xref:System.Xml.Schema.XmlSchemaSet>não tiver sido compilado anteriormente — por exemplo, quando um <xref:System.Xml.Schema.XmlSchemaSet>é usado como entrada para criar um <xref:System.Xml.XmlReader>objeto o <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>propriedade de um <xref:System.Xml.XmlReaderSettings>objeto.</xref:System.Xml.XmlReaderSettings> </xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> Se o <xref:System.Xml.Schema.XmlSchemaSet>é já em estado compilado, esse método não recompilará os esquemas.</xref:System.Xml.Schema.XmlSchemaSet> Se esse método é executado com êxito, o <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>está definida como `true`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>       Esquemas que tenham sido compilados anteriormente por uma <xref:System.Xml.Schema.XmlSchemaSet>não são recompilados.</xref:System.Xml.Schema.XmlSchemaSet> No entanto, os esquemas que foram compilados usando o método de compilação do <xref:System.Xml.Schema.XmlSchema>será recompilado.</xref:System.Xml.Schema.XmlSchema>      > [!NOTE] > Você precisa chamar o <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>método se você tiver alterado um esquema (ou uma de suas inclui/importações) após adicioná-lo a <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> O <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>método verificará o esquema para validade estrutural acordo com as regras de W3C XML Schema.</xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> No entanto, ele não executará uma verificação de validação completa. Ela também será resolvida referências a componentes de esquema internos e externos. Qualquer esquema importada ou incluída que é recuperada com êxito também é adicionada a <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Esquemas importados são adicionadas como separados <xref:System.Xml.Schema.XmlSchema>objetos enquanto esquemas incluídos são feitas parte de incluindo <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema> Se a chamada para reprocessar for bem-sucedida, o <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>está definida como false.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Compile()  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Compile();  \n```"
  syntax:
    content: public void Compile ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaSet.Compile*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Ocorreu um erro ao validar e compilar os esquemas no <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  id: Contains(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Contains(String)
  nameWithType: XmlSchemaSet.Contains(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Indica se um esquema de linguagem XSD de definição de esquema XML com o URI do namespace de destino especificado é o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Esquemas indiretamente são adicionados para o <xref:System.Xml.Schema.XmlSchemaSet>são detectados pelo método Contains; por exemplo, importado esquemas.</xref:System.Xml.Schema.XmlSchemaSet> Como resultado, se um esquema para o namespace http://www.contoso.com/retail que importa um esquema para o namespace http://www.contoso.com/books é adicionada para o <xref:System.Xml.Schema.XmlSchemaSet>, chamar Contains com `http://www.contoso.com/books` como um parâmetro, ele retorna `true`.</xref:System.Xml.Schema.XmlSchemaSet>"
  syntax:
    content: public bool Contains (string targetNamespace);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "O esquema `targetNamespace` propriedade."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um esquema com o URI do namespace de destino especificado está no <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  id: Contains(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Contains(XmlSchema)
  nameWithType: XmlSchemaSet.Contains(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Indica se a linguagem de definição de esquema XML (XSD) especificada <xref:System.Xml.Schema.XmlSchema>objeto está no <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  syntax:
    content: public bool Contains (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "O <xref:System.Xml.Schema.XmlSchema>objeto.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Xml.Schema.XmlSchema>objeto está no <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> passado como um parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  id: CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: CopyTo(XmlSchema[],Int32)
  nameWithType: XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  fullName: System.Xml.Schema.XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Copia todas as <xref:System.Xml.Schema.XmlSchema>objetos do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> como a matriz fornecida, iniciando no índice especificado.</xref:System.Xml.Schema.XmlSchema>"
  remarks: ''
  example:
  - "The following example copies all the <xref:System.Xml.Schema.XmlSchema> objects in the <xref:System.Xml.Schema.XmlSchemaSet> to an array of <xref:System.Xml.Schema.XmlSchema> objects.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schemas(schemaSet.Count) As XmlSchema  \nschemaSet.CopyTo(schemas, 0)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nXmlSchema[] schemas = new XmlSchema[schemaSet.Count];  \nschemaSet.CopyTo(schemas, 0);  \n```"
  syntax:
    content: public void CopyTo (System.Xml.Schema.XmlSchema[] schemas, int index);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchema[]
      description: "A matriz para copiar os objetos."
    - id: index
      type: System.Int32
      description: "O índice na matriz de onde a cópia será iniciada."
  overload: System.Xml.Schema.XmlSchemaSet.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Count
  id: Count
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Count
  nameWithType: XmlSchemaSet.Count
  fullName: System.Xml.Schema.XmlSchemaSet.Count
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém o número de definição de esquema XML lógica esquemas de linguagem XSD a <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Se houver dois esquemas para o namespace `http://www.contoso.com` no <xref:System.Xml.Schema.XmlSchemaSet>, a propriedade Count retorna 1 como os esquemas são tratados como um único esquema lógico para fins de validação.</xref:System.Xml.Schema.XmlSchemaSet> No entanto, se um esquema para o namespace `http://www.contoso.com/retail` importados de um esquema para o `http://www.contoso.com/books` namespace, o valor da propriedade Count seria 2."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de esquemas lógicos a <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  id: GlobalAttributes
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém todos os atributos globais na definição de esquema XML esquemas de linguagem XSD no <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "A coleção de atributos global."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements
  id: GlobalElements
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalElements
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém todos os elementos global na definição de esquema XML esquemas de linguagem XSD no <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalElements { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "A coleção de elementos globais."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalElements*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  id: GlobalTypes
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém todos os tipos simples e complexos global de esquemas de linguagem XSD na definição de esquema XML a <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "A propriedade GlobalTypes sempre retorna um tipo que representa o `xs:anyType` tipo complexo."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalTypes { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "A coleção de globais tipos simples e complexas."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled
  id: IsCompiled
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
  fullName: System.Xml.Schema.XmlSchemaSet.IsCompiled
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém um valor que indica se os esquemas de linguagem XSD de definição de esquema XML no <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> foram compiladas."
  remarks: "A propriedade IsCompiled não é afetada se os esquemas são editadas em <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> As atualizações dos esquemas individuais a <xref:System.Xml.Schema.XmlSchemaSet>não são rastreadas.</xref:System.Xml.Schema.XmlSchemaSet> Como resultado, a propriedade IsCompiled pode ser `true` mesmo que um dos esquemas contidos em que <xref:System.Xml.Schema.XmlSchemaSet>foi alterado, desde que nenhum esquema foram adicionada ou removida da <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - For an example of the IsCompiled property, see the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method.
  syntax:
    content: public bool IsCompiled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os esquemas no <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> foram compilados desde a última vez em que um esquema foi adicionado ou removido o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.IsCompiled*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.NameTable
  id: NameTable
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
  fullName: System.Xml.Schema.XmlSchemaSet.NameTable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém o padrão <xref:System.Xml.XmlNameTable>usado pelo <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> ao carregar novos esquemas de linguagem XSD de definição de esquema XML.</xref:System.Xml.XmlNameTable>"
  syntax:
    content: public System.Xml.XmlNameTable NameTable { get; }
    return:
      type: System.Xml.XmlNameTable
      description: "Uma tabela de objetos atomizados de cadeia de caracteres."
  overload: System.Xml.Schema.XmlSchemaSet.NameTable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  id: Remove(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Remove(XmlSchema)
  nameWithType: XmlSchemaSet.Remove(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Remove(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Remove o esquema especificado de linguagem XSD de definição de esquema XML do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Removendo um esquema do <xref:System.Xml.Schema.XmlSchemaSet>define o <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>propriedade `false`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - "The following example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas using the Remove method.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    If schema.TargetNamespace = \"http://www.contoso.com/music\" Then  \n        schemaSet.Remove(schema)  \n    End If  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    if (schema.TargetNamespace == \"http://www.contoso.com/music\")  \n    {  \n        schemaSet.Remove(schema);  \n    }  \n}  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Remove (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "O <xref:System.Xml.Schema.XmlSchema>objeto ser removido do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "O <xref:System.Xml.Schema.XmlSchema>objeto removido o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o esquema não foi encontrado no <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.Remove*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "O esquema não é um esquema válido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref:System.Xml.Schema.XmlSchema>passado como um parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  id: RemoveRecursive(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: RemoveRecursive(XmlSchema)
  nameWithType: XmlSchemaSet.RemoveRecursive(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Remove o esquema de linguagem XSD de definição de esquema XML especificado e todos os esquemas que importar o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "O método RemoveRecursive remove o esquema especificado e todos os esquemas que importar o <xref:System.Xml.Schema.XmlSchemaSet>, contanto que não há nenhuma dependência no esquema ou seus esquemas importados.</xref:System.Xml.Schema.XmlSchemaSet> Se houver dependências no esquema ou seus esquemas importados no <xref:System.Xml.Schema.XmlSchemaSet>, nada será removido e retorna RemoveRecursive `false`.</xref:System.Xml.Schema.XmlSchemaSet> Se `false` é retornado e um <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>é definido, um aviso é enviado ao manipulador de eventos que descreve as dependências.</xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>       Se o esquema especificado importa outros esquemas e o esquema especificado anteriormente foi removido com o <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A>método RemoveRecursive método não removerá os esquemas importados e retornará `false`.</xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> Por exemplo, se `parentSchema` importa `childSchema1` e `childSchema2` o código a seguir removerá apenas `parentSchema`, mas não importado `childSchema1` e `childSchema2` esquemas: ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(&quot;parentSchema.xsd&quot;), null);   ss.Add(xs);   ss.Compile();   ss.Remove(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ``` o código a seguir removerá o `parentSchema` e os esquemas importados: ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(&quot;parentSchema.xsd&quot;), null);   ss.Add(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ``` RemoveRecursive o método não tem nenhum efeito sobre o estado do <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>propriedade.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "The following code example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas and all the schemas it imports using the RemoveRecursive method.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    If schema.TargetNamespace = \"http://www.contoso.com/music\" Then  \n        schemaSet.RemoveRecursive(schema)  \n    End If  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    if (schema.TargetNamespace == \"http://www.contoso.com/music\")  \n    {  \n        schemaSet.RemoveRecursive(schema);  \n    }  \n}  \n```"
  syntax:
    content: public bool RemoveRecursive (System.Xml.Schema.XmlSchema schemaToRemove);
    parameters:
    - id: schemaToRemove
      type: System.Xml.Schema.XmlSchema
      description: "O <xref:System.Xml.Schema.XmlSchema>objeto ser removido do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Xml.Schema.XmlSchema>objeto e todos os seus importações foram removido com êxito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.RemoveRecursive*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref:System.Xml.Schema.XmlSchema>passado como um parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  id: Reprocess(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Reprocess(XmlSchema)
  nameWithType: XmlSchemaSet.Reprocess(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Reprocess(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Reprocessa um esquema de linguagem XSD de definição de esquema XML que já existe no <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Reprocessar um esquema executa todas as etapas de pré-processamento executadas em um esquema quando o <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>método é chamado.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A> Se a chamada para o reprocessamento for bem-sucedida, o <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>está definida como `false`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>       O método reprocessar deve ser usado depois de um esquema no <xref:System.Xml.Schema.XmlSchemaSet>tiver sido modificado, após o <xref:System.Xml.Schema.XmlSchemaSet>executou compilação.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > Você precisa chamar o método reprocessar se você tiver alterado um esquema (ou uma de suas inclui/importações) após adicioná-lo a <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> O método reprocessar verificará se o esquema para validade estrutural acordo com as regras do esquema de XML da W3C. No entanto, ele não executará uma verificação de validação completa. Ela também será resolvida referências a componentes de esquema internos e externos. Qualquer esquema importada ou incluída que é recuperada com êxito também é adicionada a <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Esquemas importados são adicionadas como separados <xref:System.Xml.Schema.XmlSchema>objetos enquanto esquemas incluídos são feitas parte de incluindo <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema> Se a chamada para reprocessar for bem-sucedida, o <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>está definida como false.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "The following example illustrates reprocessing a schema added to the <xref:System.Xml.Schema.XmlSchemaSet>. After the <xref:System.Xml.Schema.XmlSchemaSet> is compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method, and the schema added to the <xref:System.Xml.Schema.XmlSchemaSet> is modified, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property will be set to `true`, even though a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified. Calling the Reprocess method performs all the preprocessing performed by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method and sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nDim schema As XmlSchema = schemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Compile()  \n  \nDim element As XmlSchemaElement = New XmlSchemaElement()  \nschema.Items.Add(element)  \nelement.Name = \"book\"  \nelement.SchemaTypeName = New XmlQualifiedName(\"string\", \"http://www.w3.org/2001/XMLSchema\")  \n  \nschemaSet.Reprocess(schema)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nXmlSchema schema = schemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Compile();  \n  \nXmlSchemaElement element = new XmlSchemaElement();  \nschema.Items.Add(element);  \nelement.Name = \"book\";  \nelement.SchemaTypeName = new XmlQualifiedName(\"string\", \"http://www.w3.org/2001/XMLSchema\");  \n  \nschemaSet.Reprocess(schema);  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Reprocess (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "O esquema para processar novamente."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "Um <xref:System.Xml.Schema.XmlSchema>objeto se o esquema é um esquema válido.</xref:System.Xml.Schema.XmlSchema> Se o esquema não é válido e um <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> for especificado, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> será retornado e a validação apropriado é gerado. Caso contrário, um <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> é gerada."
  overload: System.Xml.Schema.XmlSchemaSet.Reprocess*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "O esquema não é válido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref:System.Xml.Schema.XmlSchema>objeto passado como um parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <xref:System.Xml.Schema.XmlSchema>objeto passado como um parâmetro ainda não existir no <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Schemas
  id: Schemas
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Schemas()
  nameWithType: XmlSchemaSet.Schemas()
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Retorna uma coleção de definição de esquema XML esquemas XSD (linguagem) a <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Este método retorna esquemas que foram adicionados ao indiretamente o <xref:System.Xml.Schema.XmlSchemaSet>porque eles foram importados.</xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > Método o esquemas é o equivalente do <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A>método de <xref:System.Xml.Schema.XmlSchemaCollection>.</xref:System.Xml.Schema.XmlSchemaCollection> obsoleto</xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A>"
  example:
  - "The following example illustrates how to iterate over all the schemas in the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    schema.Write(Console.Out)  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    schema.Write(Console.Out);  \n}  \n```"
  syntax:
    content: public System.Collections.ICollection Schemas ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>objeto que contém todos os esquemas que foram adicionados para o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Collections.ICollection> Se nenhum esquema foram adicionada para o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>, vazio <xref:System.Collections.ICollection>objeto é retornado.</xref:System.Collections.ICollection>"
  overload: System.Xml.Schema.XmlSchemaSet.Schemas*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  id: Schemas(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Schemas(String)
  nameWithType: XmlSchemaSet.Schemas(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Retorna uma coleção de definição de esquema XML esquemas XSD (linguagem) a <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> que pertencem ao namespace específico."
  remarks: "Se o `targetNamespace` parâmetro é `null` ou <xref:System.String.Empty>, todos os esquemas sem um namespace serão retornadas.</xref:System.String.Empty>       Este método retorna esquemas que foram adicionados ao indiretamente o <xref:System.Xml.Schema.XmlSchemaSet>porque eles foram importados.</xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > Método o esquemas é o equivalente do <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A>método de <xref:System.Xml.Schema.XmlSchemaCollection>.</xref:System.Xml.Schema.XmlSchemaCollection> obsoleto</xref:System.Xml.Schema.XmlSchemaCollection.Item%2A>"
  example:
  - "The following example illustrates how to iterate over all the schemas in the http://www.contoso.com/books namespace in the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas(\"http://www.contoso.com/books\")  \n  \n    schema.Write(Console.Out)  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas(\"http://www.contoso.com/books\"))  \n{  \n    schema.Write(Console.Out);  \n}  \n```"
  syntax:
    content: public System.Collections.ICollection Schemas (string targetNamespace);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "O esquema `targetNamespace` propriedade."
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>objeto que contém todos os esquemas que foram adicionados para o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> que pertencem ao namespace fornecido.</xref:System.Collections.ICollection> Se nenhum esquema foram adicionada para o <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>, vazio <xref:System.Collections.ICollection>objeto é retornado.</xref:System.Collections.ICollection>"
  overload: System.Xml.Schema.XmlSchemaSet.Schemas*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  id: ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: ValidationEventHandler
  nameWithType: XmlSchemaSet.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Especifica um manipulador de eventos para receber informações sobre erros de validação de esquema do esquema XML definition language (XSD)."
  remarks: "Define um manipulador de eventos para receber informações sobre erros de validação de esquema quando o <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>ou <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>métodos do <xref:System.Xml.Schema.XmlSchemaSet>são chamados.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> </xref:System.Xml.Schema.XmlSchemaSet.Add%2A>       Se um manipulador de eventos não está definido, um <xref:System.Xml.Schema.XmlSchemaException>é gerada em erros de validação em que a <xref:System.Xml.Schema.XmlSeverityType>é <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSchemaException> Não são lançadas exceções para erros de validação com uma <xref:System.Xml.Schema.XmlSeverityType>das <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType>"
  example:
  - "The following code example illustrates adding a ValidationEventHandler to capture errors and warnings when validating an XML document against a schema.  \n  \n [!code-cs[XmlSchemaSetOverall Example#1](~/add/codesnippet/csharp/e-system.xml.schema.xmls_2_1.cs)]\n [!code-cpp[XmlSchemaSetOverall Example#1](~/add/codesnippet/cpp/e-system.xml.schema.xmls_2_1.cpp)]\n [!code-vb[XmlSchemaSetOverall Example#1](~/add/codesnippet/visualbasic/e-system.xml.schema.xmls_2_1.vb)]  \n  \n The example uses the books.xml file as an input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#2](~/add/codesnippet/xml/e-system.xml.schema.xmls_2_2.xml)]  \n  \n The example uses the books.xsd file as an input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#3](~/add/codesnippet/xml/e-system.xml.schema.xmls_2_3.xsd)]"
  syntax:
    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;
    return:
      type: System.Xml.Schema.ValidationEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver
  id: XmlResolver
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaSet.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Conjuntos de <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> usado para resolver namespaces ou locais referenciados em incluem e importar elementos de um esquema."
  remarks: "O <xref:System.Xml.XmlResolver>de um <xref:System.Xml.Schema.XmlSchemaSet>é usado para resolver namespaces ou locais referenciados em incluem e importar elementos de um esquema, sempre um esquema é adicionado usando o <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>ou <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>métodos.</xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> </xref:System.Xml.Schema.XmlSchemaSet.Add%2A> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlResolver>      > [!IMPORTANT] > Incluem namespaces externos ou locais referenciados no, importar e elementos de redefinição de um esquema são resolvidos em relação ao URI de base do esquema que inclui ou importá-los. Por exemplo, se o URI de base do incluindo ou Importando esquema está vazio ou `null`, os locais externos são resolvidos em relação ao diretório atual. O <xref:System.Xml.XmlUrlResolver>classe é usada para resolver esquemas externos por padrão.</xref:System.Xml.XmlUrlResolver> Para desabilitar a resolução de inclusão, importar e elementos de redefinição de um esquema, defina a propriedade XmlResolver como `null`."
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> usado para resolver namespaces ou locais referenciados em incluem e importar elementos de um esquema."
  overload: System.Xml.Schema.XmlSchemaSet.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Schema.XmlSchemaException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaException
  nameWithType: XmlSchemaException
  fullName: System.Xml.Schema.XmlSchemaException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.Schema.XmlSchemaSet.#ctor
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet()
  nameWithType: XmlSchemaSet.XmlSchemaSet()
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet()
- uid: System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet(XmlNameTable)
  nameWithType: XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet(XmlNameTable)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(XmlSchema)
  nameWithType: XmlSchemaSet.Add(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchema)
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(XmlSchemaSet)
  nameWithType: XmlSchemaSet.Add(XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(String,String)
  nameWithType: XmlSchemaSet.Add(String,String)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(String,XmlReader)
  nameWithType: XmlSchemaSet.Add(String,XmlReader)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
  fullName: System.Xml.Schema.XmlSchemaSet.CompilationSettings
- uid: System.Xml.Schema.XmlSchemaCompilationSettings
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaCompilationSettings
  nameWithType: XmlSchemaCompilationSettings
  fullName: System.Xml.Schema.XmlSchemaCompilationSettings
- uid: System.Xml.Schema.XmlSchemaSet.Compile
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Compile()
  nameWithType: XmlSchemaSet.Compile()
  fullName: System.Xml.Schema.XmlSchemaSet.Compile()
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains(String)
  nameWithType: XmlSchemaSet.Contains(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains(XmlSchema)
  nameWithType: XmlSchemaSet.Contains(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CopyTo(XmlSchema[],Int32)
  nameWithType: XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  fullName: System.Xml.Schema.XmlSchemaSet.CopyTo(XmlSchema[],Int32)
- uid: System.Xml.Schema.XmlSchema[]
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchema
    name: XmlSchema
    nameWithType: XmlSchema
    fullName: XmlSchema[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Schema.XmlSchemaSet.Count
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Count
  nameWithType: XmlSchemaSet.Count
  fullName: System.Xml.Schema.XmlSchemaSet.Count
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
- uid: System.Xml.Schema.XmlSchemaObjectTable
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectTable
  nameWithType: XmlSchemaObjectTable
  fullName: System.Xml.Schema.XmlSchemaObjectTable
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalElements
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalTypes
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
  fullName: System.Xml.Schema.XmlSchemaSet.IsCompiled
- uid: System.Xml.Schema.XmlSchemaSet.NameTable
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
  fullName: System.Xml.Schema.XmlSchemaSet.NameTable
- uid: System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Remove(XmlSchema)
  nameWithType: XmlSchemaSet.Remove(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Remove(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: RemoveRecursive(XmlSchema)
  nameWithType: XmlSchemaSet.RemoveRecursive(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Reprocess(XmlSchema)
  nameWithType: XmlSchemaSet.Reprocess(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Reprocess(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.Schemas
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas()
  nameWithType: XmlSchemaSet.Schemas()
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas(String)
  nameWithType: XmlSchemaSet.Schemas(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas(String)
- uid: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: ValidationEventHandler
  nameWithType: XmlSchemaSet.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
- uid: System.Xml.Schema.ValidationEventHandler
  parent: System.Xml.Schema
  isExternal: false
  name: ValidationEventHandler
  nameWithType: ValidationEventHandler
  fullName: System.Xml.Schema.ValidationEventHandler
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaSet.XmlResolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Schema.XmlSchemaSet.#ctor*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet.XmlSchemaSet
- uid: System.Xml.Schema.XmlSchemaSet.Add*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add
  nameWithType: XmlSchemaSet.Add
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
- uid: System.Xml.Schema.XmlSchemaSet.Compile*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Compile
  nameWithType: XmlSchemaSet.Compile
- uid: System.Xml.Schema.XmlSchemaSet.Contains*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains
  nameWithType: XmlSchemaSet.Contains
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CopyTo
  nameWithType: XmlSchemaSet.CopyTo
- uid: System.Xml.Schema.XmlSchemaSet.Count*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Count
  nameWithType: XmlSchemaSet.Count
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
- uid: System.Xml.Schema.XmlSchemaSet.NameTable*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
- uid: System.Xml.Schema.XmlSchemaSet.Remove*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Remove
  nameWithType: XmlSchemaSet.Remove
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: RemoveRecursive
  nameWithType: XmlSchemaSet.RemoveRecursive
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Reprocess
  nameWithType: XmlSchemaSet.Reprocess
- uid: System.Xml.Schema.XmlSchemaSet.Schemas*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas
  nameWithType: XmlSchemaSet.Schemas
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
