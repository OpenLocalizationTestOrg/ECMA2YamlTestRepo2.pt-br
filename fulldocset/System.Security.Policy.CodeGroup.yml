### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.CodeGroup
  id: CodeGroup
  children:
  - System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)
  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.AttributeString
  - System.Security.Policy.CodeGroup.Children
  - System.Security.Policy.CodeGroup.Copy
  - System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.Description
  - System.Security.Policy.CodeGroup.Equals(System.Object)
  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.GetHashCode
  - System.Security.Policy.CodeGroup.MembershipCondition
  - System.Security.Policy.CodeGroup.MergeLogic
  - System.Security.Policy.CodeGroup.Name
  - System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.PermissionSetName
  - System.Security.Policy.CodeGroup.PolicyStatement
  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)
  - System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  - System.Security.Policy.CodeGroup.ToXml
  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)
  langs:
  - csharp
  name: CodeGroup
  nameWithType: CodeGroup
  fullName: System.Security.Policy.CodeGroup
  type: Class
  summary: "Representa a classe base abstrata da qual todas as implementações de código grupos devem derivar."
  remarks: "Grupos de código são blocos de construção de política de segurança de acesso do código. Cada nível de política consiste em um grupo de códigos de raiz que pode ter grupos de códigos filho. Cada grupo de códigos filho pode ter seus próprios grupos de códigos filho; Esse comportamento se estende para qualquer número de níveis, formando uma árvore. Cada grupo de código tem uma condição de associação que determina se um determinado assembly pertence a ele com base na evidência de assembly.       Somente os grupos de código cujas condições de associação correspondem a evidência de um determinado assembly serão aplicados. Se um grupo de código correspondente tiver grupos de códigos filho, os filhos cujas condições de associação também correspondem a evidência fornecida da mesma forma serão aplicados."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class CodeGroup
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)
  id: '#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)'
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: CodeGroup(IMembershipCondition,PolicyStatement)
  nameWithType: CodeGroup.CodeGroup(IMembershipCondition,PolicyStatement)
  fullName: System.Security.Policy.CodeGroup.CodeGroup(IMembershipCondition,PolicyStatement)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicializa uma nova instância da <xref href=&quot;System.Security.Policy.CodeGroup&quot;> </xref>."
  remarks: "Este construtor cria um grupo de código básico e deve ser chamado a partir de construtores de grupos de código personalizado. Você pode adicionar grupos de códigos filho usando o <xref:System.Security.Policy.CodeGroup.AddChild%2A>método.</xref:System.Security.Policy.CodeGroup.AddChild%2A>"
  syntax:
    content: protected CodeGroup (System.Security.Policy.IMembershipCondition membershipCondition, System.Security.Policy.PolicyStatement policy);
    parameters:
    - id: membershipCondition
      type: System.Security.Policy.IMembershipCondition
      description: "Uma condição de associação que testa a evidência para determinar se este grupo de códigos se aplica a política."
    - id: policy
      type: System.Security.Policy.PolicyStatement
      description: "A declaração de política para o grupo de códigos na forma de um conjunto de permissões e os atributos conceder ao código que corresponde à condição de associação."
  overload: System.Security.Policy.CodeGroup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>membershipCondition</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O tipo do <code> membershipCondition </code> parâmetro não é válido.       o tipo de - ou - o <code> policy </code> parâmetro não é válido."
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)
  id: AddChild(System.Security.Policy.CodeGroup)
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: AddChild(CodeGroup)
  nameWithType: CodeGroup.AddChild(CodeGroup)
  fullName: System.Security.Policy.CodeGroup.AddChild(CodeGroup)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Adiciona um grupo de códigos filho para o grupo de código atual."
  syntax:
    content: public void AddChild (System.Security.Policy.CodeGroup group);
    parameters:
    - id: group
      type: System.Security.Policy.CodeGroup
      description: "O grupo de código a ser adicionado como um filho. Esse novo grupo de códigos filho é adicionado ao final da lista."
  overload: System.Security.Policy.CodeGroup.AddChild*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>group</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> group </code> parâmetro não é um grupo de código válido."
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.AttributeString
  id: AttributeString
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: AttributeString
  nameWithType: CodeGroup.AttributeString
  fullName: System.Security.Policy.CodeGroup.AttributeString
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém uma representação de cadeia de caracteres dos atributos da declaração de política para o grupo de códigos."
  remarks: "A representação de cadeia de caracteres não está localizada."
  syntax:
    content: public virtual string AttributeString { get; }
    return:
      type: System.String
      description: "Uma representação de cadeia de caracteres dos atributos da declaração de política para o grupo de códigos."
  overload: System.Security.Policy.CodeGroup.AttributeString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.Children
  id: Children
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: Children
  nameWithType: CodeGroup.Children
  fullName: System.Security.Policy.CodeGroup.Children
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém ou define uma lista ordenada de grupos de código filho de um grupo de códigos."
  remarks: "A ordem dos grupos de códigos filho é significativa para determinados grupos de código.      > [!NOTE] > O valor de retorno é uma cópia da lista de código de filhos. Não use a lista retornada para adicionar um grupo de códigos filho; em vez disso, use o <xref:System.Security.Policy.CodeGroup.AddChild%2A>método.</xref:System.Security.Policy.CodeGroup.AddChild%2A>"
  syntax:
    content: public System.Collections.IList Children { get; set; }
    return:
      type: System.Collections.IList
      description: "Uma lista de grupos de códigos filho."
  overload: System.Security.Policy.CodeGroup.Children*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "É feita uma tentativa de definir essa propriedade como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "É feita uma tentativa de definir essa propriedade com uma lista de filhos que não são <xref href=&quot;System.Security.Policy.CodeGroup&quot;> </xref> objetos."
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.Copy
  id: Copy
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: Copy()
  nameWithType: CodeGroup.Copy()
  fullName: System.Security.Policy.CodeGroup.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Quando substituído em uma classe derivada, faz uma cópia em profundidade do grupo de código atual."
  remarks: "Este método faz uma cópia em profundidade do grupo de código, para que também são feitas cópias de todos os objetos que contém o grupo de códigos."
  syntax:
    content: public abstract System.Security.Policy.CodeGroup Copy ();
    parameters: []
    return:
      type: System.Security.Policy.CodeGroup
      description: "Uma cópia equivalente do grupo de código atual, incluindo suas condições de associação e os grupos de códigos filho."
  overload: System.Security.Policy.CodeGroup.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: CodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.CodeGroup.CreateXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Quando substituído em uma classe derivada, serializa as propriedades e o estado interno específico a um grupo de código derivado e adiciona a serialização especificado <xref href=&quot;System.Security.SecurityElement&quot;> </xref>."
  remarks: "<xref:System.Security.Policy.CodeGroup.ToXml%2A>não pode ser substituído.</xref:System.Security.Policy.CodeGroup.ToXml%2A> Se você precisa serializar membros específicos a uma implementação específica de <xref:System.Security.Policy.CodeGroup>, você deve substituir CreateXML chamado e serializar seus membros existe.</xref:System.Security.Policy.CodeGroup> Quando o grupo de códigos é serializado, <xref:System.Security.Policy.CodeGroup.ToXml%2A>chama CreateXML chamado e adiciona a serialização para o <xref:System.Security.SecurityElement>criado pelo <xref:System.Security.Policy.CodeGroup.ToXml%2A>.</xref:System.Security.Policy.CodeGroup.ToXml%2A> </xref:System.Security.SecurityElement> </xref:System.Security.Policy.CodeGroup.ToXml%2A>       O XML criado usando esse método é desserializado o <xref:System.Security.Policy.CodeGroup.ParseXml%2A>método.</xref:System.Security.Policy.CodeGroup.ParseXml%2A>"
  syntax:
    content: protected virtual void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: element
      type: System.Security.SecurityElement
      description: "A codificação XML ao qual adicionar a serialização."
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "O nível de política no qual existe o grupo de códigos."
  overload: System.Security.Policy.CodeGroup.CreateXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.Description
  id: Description
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: Description
  nameWithType: CodeGroup.Description
  fullName: System.Security.Policy.CodeGroup.Description
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém ou define a descrição do grupo de códigos."
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "A descrição do grupo de códigos."
  overload: System.Security.Policy.CodeGroup.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CodeGroup.Equals(Object)
  fullName: System.Security.Policy.CodeGroup.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Determina se o grupo de código especificado é equivalente ao grupo de código atual."
  remarks: "Dois grupos de código são equivalentes, se eles tiverem o mesmo <xref:System.Security.Policy.CodeGroup.Name%2A>, <xref:System.Security.Policy.CodeGroup.Description%2A>e <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>.</xref:System.Security.Policy.CodeGroup.MembershipCondition%2A> </xref:System.Security.Policy.CodeGroup.Description%2A> </xref:System.Security.Policy.CodeGroup.Name%2A>       Este método testa o grupo de códigos de nível superior, não seus grupos de códigos filho."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "O grupo de códigos para comparar com o grupo de código atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o grupo de código especificada for equivalente ao grupo de código atual; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.CodeGroup.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)
  id: Equals(System.Security.Policy.CodeGroup,System.Boolean)
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: Equals(CodeGroup,Boolean)
  nameWithType: CodeGroup.Equals(CodeGroup,Boolean)
  fullName: System.Security.Policy.CodeGroup.Equals(CodeGroup,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Determina se o grupo de código especificado é equivalente ao grupo de código atual, verificando os grupos de códigos filho, se especificado."
  remarks: "Dois grupos de código são equivalentes, se eles tiverem o mesmo <xref:System.Security.Policy.CodeGroup.Name%2A>, <xref:System.Security.Policy.CodeGroup.Description%2A>e <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>.</xref:System.Security.Policy.CodeGroup.MembershipCondition%2A> </xref:System.Security.Policy.CodeGroup.Description%2A> </xref:System.Security.Policy.CodeGroup.Name%2A>       Se o `compareChildren` parâmetro é `true`, esse método retornará apenas `true` se o grupo de código atual e todos os seus grupos de código filho são equivalentes ao grupo de código especificada e todos os seus grupos de código filho."
  syntax:
    content: public bool Equals (System.Security.Policy.CodeGroup cg, bool compareChildren);
    parameters:
    - id: cg
      type: System.Security.Policy.CodeGroup
      description: "O grupo de códigos para comparar com o grupo de código atual."
    - id: compareChildren
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para comparar os grupos de códigos filho, Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o grupo de código especificada for equivalente ao grupo de código atual; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.CodeGroup.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: CodeGroup.FromXml(SecurityElement)
  fullName: System.Security.Policy.CodeGroup.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Reconstrói um objeto de segurança com um determinado estado de uma codificação de XML."
  syntax:
    content: public void FromXml (System.Security.SecurityElement e);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "O XML de codificação a ser usada para reconstruir o objeto de segurança."
  overload: System.Security.Policy.CodeGroup.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>e</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: FromXml(SecurityElement,PolicyLevel)
  nameWithType: CodeGroup.FromXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.CodeGroup.FromXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Reconstrói um objeto de segurança com um determinado estado e o nível de política de uma codificação de XML."
  remarks: "O contexto do nível de política é fornecido para resolução de conjuntos de permissões nomeadas."
  syntax:
    content: public void FromXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "O XML de codificação a ser usada para reconstruir o objeto de segurança."
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "O nível de política no qual existe o grupo de códigos."
  overload: System.Security.Policy.CodeGroup.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>e</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CodeGroup.GetHashCode()
  fullName: System.Security.Policy.CodeGroup.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém o código hash do grupo de código atual."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código hash do grupo de código atual."
  overload: System.Security.Policy.CodeGroup.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.MembershipCondition
  id: MembershipCondition
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: MembershipCondition
  nameWithType: CodeGroup.MembershipCondition
  fullName: System.Security.Policy.CodeGroup.MembershipCondition
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém ou define a condição de associação do grupo de códigos."
  remarks: "Uma condição de associação testa evidência e retorna um valor booliano que indica se há uma correspondência."
  syntax:
    content: public System.Security.Policy.IMembershipCondition MembershipCondition { get; set; }
    return:
      type: System.Security.Policy.IMembershipCondition
      description: "A condição de associação que determina a evidência de que o grupo de códigos é aplicável."
  overload: System.Security.Policy.CodeGroup.MembershipCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "É feita uma tentativa de definir esse parâmetro como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.MergeLogic
  id: MergeLogic
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: MergeLogic
  nameWithType: CodeGroup.MergeLogic
  fullName: System.Security.Policy.CodeGroup.MergeLogic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Quando substituído em uma classe derivada, obtém a lógica de mesclagem para o grupo de códigos."
  syntax:
    content: public abstract string MergeLogic { get; }
    return:
      type: System.String
      description: "Uma descrição da lógica de mesclagem para o grupo de códigos."
  overload: System.Security.Policy.CodeGroup.MergeLogic*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.Name
  id: Name
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: Name
  nameWithType: CodeGroup.Name
  fullName: System.Security.Policy.CodeGroup.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém ou define o nome do grupo de códigos."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome do grupo de códigos."
  overload: System.Security.Policy.CodeGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: CodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.CodeGroup.ParseXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Quando substituído em uma classe derivada, reconstrói propriedades e o estado interno específico a um grupo de código derivado especificado <xref href=&quot;System.Security.SecurityElement&quot;> </xref>."
  remarks: "<xref:System.Security.Policy.CodeGroup.FromXml%2A>não pode ser substituído.</xref:System.Security.Policy.CodeGroup.FromXml%2A> Se você precisa desserializar membros específicos a uma implementação específica de <xref:System.Security.Policy.CodeGroup>, você deve substituir ParseXml e desserializar os membros existe.</xref:System.Security.Policy.CodeGroup> Quando o grupo de códigos é desserializado, <xref:System.Security.Policy.CodeGroup.FromXml%2A>chama ParseXml e reconstrói os membros de <xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement> </xref:System.Security.Policy.CodeGroup.FromXml%2A>       Esse método desserializa XML criado usando <xref:System.Security.Policy.CodeGroup.CreateXml%2A>.</xref:System.Security.Policy.CodeGroup.CreateXml%2A>"
  syntax:
    content: protected virtual void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "O XML de codificação a ser usada para reconstruir o objeto de segurança."
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "O nível de política no qual existe o grupo de códigos."
  overload: System.Security.Policy.CodeGroup.ParseXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.PermissionSetName
  id: PermissionSetName
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: PermissionSetName
  nameWithType: CodeGroup.PermissionSetName
  fullName: System.Security.Policy.CodeGroup.PermissionSetName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém o nome do conjunto de permissões nomeadas para o grupo de códigos."
  remarks: "Essa propriedade pode ser `null` se o grupo de códigos contém um conjunto de permissões sem nome."
  syntax:
    content: public virtual string PermissionSetName { get; }
    return:
      type: System.String
      description: "O nome de um conjunto de permissões nomeadas de nível de política."
  overload: System.Security.Policy.CodeGroup.PermissionSetName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.PolicyStatement
  id: PolicyStatement
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: PolicyStatement
  nameWithType: CodeGroup.PolicyStatement
  fullName: System.Security.Policy.CodeGroup.PolicyStatement
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém ou define a política associada ao grupo de código."
  remarks: "A declaração de política se aplica ao código em assemblies quando evidência corresponde a condição de associação.       Essa propriedade também pode ser definida passando uma declaração de diretiva para o construtor."
  example:
  - "The following example sets the <xref:System.Security.Policy.PolicyStatement> for a code group.  \n  \n [!code-cs[Classic CodeGroup.PolicyStatement Example#1](~/add/codesnippet/csharp/p-system.security.policy_7_1.cs)]\n [!code-cpp[Classic CodeGroup.PolicyStatement Example#1](~/add/codesnippet/cpp/p-system.security.policy_7_1.cpp)]\n [!code-vb[Classic CodeGroup.PolicyStatement Example#1](~/add/codesnippet/visualbasic/p-system.security.policy_7_1.vb)]"
  syntax:
    content: public System.Security.Policy.PolicyStatement PolicyStatement { get; set; }
    return:
      type: System.Security.Policy.PolicyStatement
      description: "A declaração de política para o grupo de códigos."
  overload: System.Security.Policy.CodeGroup.PolicyStatement*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)
  id: RemoveChild(System.Security.Policy.CodeGroup)
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: RemoveChild(CodeGroup)
  nameWithType: CodeGroup.RemoveChild(CodeGroup)
  fullName: System.Security.Policy.CodeGroup.RemoveChild(CodeGroup)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Remove o grupo de códigos filho especificado."
  remarks: "Somente os grupos de códigos filho imediato podem ser removidos com esse método."
  syntax:
    content: public void RemoveChild (System.Security.Policy.CodeGroup group);
    parameters:
    - id: group
      type: System.Security.Policy.CodeGroup
      description: "O grupo de código a ser removido como um filho."
  overload: System.Security.Policy.CodeGroup.RemoveChild*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> group </code> parâmetro não é um grupo de códigos filho imediato do grupo de código atual."
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)
  id: Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: Resolve(Evidence)
  nameWithType: CodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.CodeGroup.Resolve(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Quando substituído em uma classe derivada, resolve a política para o grupo de códigos e seus descendentes de um conjunto de evidência."
  remarks: "Dada a evidência para um assembly a ser carregado, esse método avalia o grupo de códigos, verificando a condição de associação em relação a evidência especificada. Se houver uma correspondência, esse método retorna uma instrução de política para o grupo de código, incluindo avaliação do filho de grupos de código.       Para um <xref:System.Security.Policy.UnionCodeGroup>, todos os grupos de códigos filho cuja condição corresponde a evidência especificada são também resolvidos e todas as instruções de políticas resultante são combinadas com a declaração de política de grupo de códigos de união pai.</xref:System.Security.Policy.UnionCodeGroup> Cada tipo de grupo de códigos filho determina como todos os grupos filho abaixo dele são aplicados, dependendo de como funcionam os métodos de resolução desses grupos filho.       O sistema de segurança do .NET Framework usa resolver nos níveis de política para determinar quais permissões conceder ao código carregado das instruções de políticas resultante e a solicitação de código no assembly."
  syntax:
    content: public abstract System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "A evidência do assembly."
    return:
      type: System.Security.Policy.PolicyStatement
      description: "Uma instrução de política que consiste nas permissões concedidas pelo grupo de código com atributos opcionais, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o grupo de códigos não se aplica (a condição de associação não corresponde a evidência especificada)."
  overload: System.Security.Policy.CodeGroup.Resolve*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: CodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Quando substituído em uma classe derivada, resolve os grupos de código correspondentes."
  remarks: "Esse método tem as mesmas características de avaliação de <xref:System.Security.Policy.CodeGroup.Resolve%2A>.</xref:System.Security.Policy.CodeGroup.Resolve%2A> O grupo de códigos que é retornado contém grupos de códigos filho, que por sua vez, podem ter grupos de códigos filho conforme necessário para refletir o conjunto completo de grupos de códigos que corresponderam a evidência fornecida."
  syntax:
    content: public abstract System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "A evidência do assembly."
    return:
      type: System.Security.Policy.CodeGroup
      description: "Um <xref href=&quot;System.Security.Policy.CodeGroup&quot;> </xref> que é a raiz da árvore de grupos de código correspondentes."
  overload: System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.ToXml
  id: ToXml
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: ToXml()
  nameWithType: CodeGroup.ToXml()
  fullName: System.Security.Policy.CodeGroup.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Cria uma codificação de XML do objeto de segurança e seu estado atual."
  syntax:
    content: public System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Uma codificação de XML do objeto de segurança, incluindo quaisquer informações de estado."
  overload: System.Security.Policy.CodeGroup.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)
  id: ToXml(System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.CodeGroup
  langs:
  - csharp
  name: ToXml(PolicyLevel)
  nameWithType: CodeGroup.ToXml(PolicyLevel)
  fullName: System.Security.Policy.CodeGroup.ToXml(PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Cria uma codificação de XML do objeto de segurança, seu estado atual e o nível de política na qual o código existente."
  remarks: "O contexto do nível de política é fornecido para resolução de conjuntos de permissões nomeadas."
  syntax:
    content: public System.Security.SecurityElement ToXml (System.Security.Policy.PolicyLevel level);
    parameters:
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "O nível de política no qual existe o grupo de códigos."
    return:
      type: System.Security.SecurityElement
      description: "Uma codificação de XML do objeto de segurança, incluindo quaisquer informações de estado."
  overload: System.Security.Policy.CodeGroup.ToXml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: CodeGroup(IMembershipCondition,PolicyStatement)
  nameWithType: CodeGroup.CodeGroup(IMembershipCondition,PolicyStatement)
  fullName: System.Security.Policy.CodeGroup.CodeGroup(IMembershipCondition,PolicyStatement)
- uid: System.Security.Policy.IMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: IMembershipCondition
  nameWithType: IMembershipCondition
  fullName: System.Security.Policy.IMembershipCondition
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: AddChild(CodeGroup)
  nameWithType: CodeGroup.AddChild(CodeGroup)
  fullName: System.Security.Policy.CodeGroup.AddChild(CodeGroup)
- uid: System.Security.Policy.CodeGroup
  parent: System.Security.Policy
  isExternal: false
  name: CodeGroup
  nameWithType: CodeGroup
  fullName: System.Security.Policy.CodeGroup
- uid: System.Security.Policy.CodeGroup.AttributeString
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: CodeGroup.AttributeString
  fullName: System.Security.Policy.CodeGroup.AttributeString
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.CodeGroup.Children
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Children
  nameWithType: CodeGroup.Children
  fullName: System.Security.Policy.CodeGroup.Children
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Security.Policy.CodeGroup.Copy
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Copy()
  nameWithType: CodeGroup.Copy()
  fullName: System.Security.Policy.CodeGroup.Copy()
- uid: System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: CodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.CodeGroup.CreateXml(SecurityElement,PolicyLevel)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.CodeGroup.Description
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Description
  nameWithType: CodeGroup.Description
  fullName: System.Security.Policy.CodeGroup.Description
- uid: System.Security.Policy.CodeGroup.Equals(System.Object)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Equals(Object)
  nameWithType: CodeGroup.Equals(Object)
  fullName: System.Security.Policy.CodeGroup.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Equals(CodeGroup,Boolean)
  nameWithType: CodeGroup.Equals(CodeGroup,Boolean)
  fullName: System.Security.Policy.CodeGroup.Equals(CodeGroup,Boolean)
- uid: System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: CodeGroup.FromXml(SecurityElement)
  fullName: System.Security.Policy.CodeGroup.FromXml(SecurityElement)
- uid: System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: FromXml(SecurityElement,PolicyLevel)
  nameWithType: CodeGroup.FromXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.CodeGroup.FromXml(SecurityElement,PolicyLevel)
- uid: System.Security.Policy.CodeGroup.GetHashCode
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: GetHashCode()
  nameWithType: CodeGroup.GetHashCode()
  fullName: System.Security.Policy.CodeGroup.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.CodeGroup.MembershipCondition
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: MembershipCondition
  nameWithType: CodeGroup.MembershipCondition
  fullName: System.Security.Policy.CodeGroup.MembershipCondition
- uid: System.Security.Policy.CodeGroup.MergeLogic
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: CodeGroup.MergeLogic
  fullName: System.Security.Policy.CodeGroup.MergeLogic
- uid: System.Security.Policy.CodeGroup.Name
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Name
  nameWithType: CodeGroup.Name
  fullName: System.Security.Policy.CodeGroup.Name
- uid: System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: CodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.CodeGroup.ParseXml(SecurityElement,PolicyLevel)
- uid: System.Security.Policy.CodeGroup.PermissionSetName
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: CodeGroup.PermissionSetName
  fullName: System.Security.Policy.CodeGroup.PermissionSetName
- uid: System.Security.Policy.CodeGroup.PolicyStatement
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: PolicyStatement
  nameWithType: CodeGroup.PolicyStatement
  fullName: System.Security.Policy.CodeGroup.PolicyStatement
- uid: System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: RemoveChild(CodeGroup)
  nameWithType: CodeGroup.RemoveChild(CodeGroup)
  fullName: System.Security.Policy.CodeGroup.RemoveChild(CodeGroup)
- uid: System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Resolve(Evidence)
  nameWithType: CodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.CodeGroup.Resolve(Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: CodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(Evidence)
- uid: System.Security.Policy.CodeGroup.ToXml
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: ToXml()
  nameWithType: CodeGroup.ToXml()
  fullName: System.Security.Policy.CodeGroup.ToXml()
- uid: System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: ToXml(PolicyLevel)
  nameWithType: CodeGroup.ToXml(PolicyLevel)
  fullName: System.Security.Policy.CodeGroup.ToXml(PolicyLevel)
- uid: System.Security.Policy.CodeGroup.#ctor*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: CodeGroup
  nameWithType: CodeGroup.CodeGroup
- uid: System.Security.Policy.CodeGroup.AddChild*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: AddChild
  nameWithType: CodeGroup.AddChild
- uid: System.Security.Policy.CodeGroup.AttributeString*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: CodeGroup.AttributeString
- uid: System.Security.Policy.CodeGroup.Children*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Children
  nameWithType: CodeGroup.Children
- uid: System.Security.Policy.CodeGroup.Copy*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Copy
  nameWithType: CodeGroup.Copy
- uid: System.Security.Policy.CodeGroup.CreateXml*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: CreateXml
  nameWithType: CodeGroup.CreateXml
- uid: System.Security.Policy.CodeGroup.Description*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Description
  nameWithType: CodeGroup.Description
- uid: System.Security.Policy.CodeGroup.Equals*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Equals
  nameWithType: CodeGroup.Equals
- uid: System.Security.Policy.CodeGroup.FromXml*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: FromXml
  nameWithType: CodeGroup.FromXml
- uid: System.Security.Policy.CodeGroup.GetHashCode*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: GetHashCode
  nameWithType: CodeGroup.GetHashCode
- uid: System.Security.Policy.CodeGroup.MembershipCondition*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: MembershipCondition
  nameWithType: CodeGroup.MembershipCondition
- uid: System.Security.Policy.CodeGroup.MergeLogic*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: CodeGroup.MergeLogic
- uid: System.Security.Policy.CodeGroup.Name*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Name
  nameWithType: CodeGroup.Name
- uid: System.Security.Policy.CodeGroup.ParseXml*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: ParseXml
  nameWithType: CodeGroup.ParseXml
- uid: System.Security.Policy.CodeGroup.PermissionSetName*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: CodeGroup.PermissionSetName
- uid: System.Security.Policy.CodeGroup.PolicyStatement*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: PolicyStatement
  nameWithType: CodeGroup.PolicyStatement
- uid: System.Security.Policy.CodeGroup.RemoveChild*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: RemoveChild
  nameWithType: CodeGroup.RemoveChild
- uid: System.Security.Policy.CodeGroup.Resolve*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Resolve
  nameWithType: CodeGroup.Resolve
- uid: System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups
  nameWithType: CodeGroup.ResolveMatchingCodeGroups
- uid: System.Security.Policy.CodeGroup.ToXml*
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: ToXml
  nameWithType: CodeGroup.ToXml
