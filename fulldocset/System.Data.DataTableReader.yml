### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableReader
  id: DataTableReader
  children:
  - System.Data.DataTableReader.#ctor(System.Data.DataTable)
  - System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  - System.Data.DataTableReader.Close
  - System.Data.DataTableReader.Depth
  - System.Data.DataTableReader.FieldCount
  - System.Data.DataTableReader.GetBoolean(System.Int32)
  - System.Data.DataTableReader.GetByte(System.Int32)
  - System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.DataTableReader.GetChar(System.Int32)
  - System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.DataTableReader.GetDataTypeName(System.Int32)
  - System.Data.DataTableReader.GetDateTime(System.Int32)
  - System.Data.DataTableReader.GetDecimal(System.Int32)
  - System.Data.DataTableReader.GetDouble(System.Int32)
  - System.Data.DataTableReader.GetEnumerator
  - System.Data.DataTableReader.GetFieldType(System.Int32)
  - System.Data.DataTableReader.GetFloat(System.Int32)
  - System.Data.DataTableReader.GetGuid(System.Int32)
  - System.Data.DataTableReader.GetInt16(System.Int32)
  - System.Data.DataTableReader.GetInt32(System.Int32)
  - System.Data.DataTableReader.GetInt64(System.Int32)
  - System.Data.DataTableReader.GetName(System.Int32)
  - System.Data.DataTableReader.GetOrdinal(System.String)
  - System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  - System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  - System.Data.DataTableReader.GetSchemaTable
  - System.Data.DataTableReader.GetString(System.Int32)
  - System.Data.DataTableReader.GetValue(System.Int32)
  - System.Data.DataTableReader.GetValues(System.Object[])
  - System.Data.DataTableReader.HasRows
  - System.Data.DataTableReader.IsClosed
  - System.Data.DataTableReader.IsDBNull(System.Int32)
  - System.Data.DataTableReader.Item(System.Int32)
  - System.Data.DataTableReader.Item(System.String)
  - System.Data.DataTableReader.NextResult
  - System.Data.DataTableReader.Read
  - System.Data.DataTableReader.RecordsAffected
  langs:
  - csharp
  name: DataTableReader
  nameWithType: DataTableReader
  fullName: System.Data.DataTableReader
  type: Class
  summary: "O DataTableReader obtém o conteúdo de um ou mais <xref href=&quot;System.Data.DataTable&quot;> </xref> objetos na forma de um ou mais conjuntos de resultados somente leitura, somente encaminhamento."
  remarks: "O DataTableReader funciona como qualquer outro leitor de dados, como o <xref:System.Data.SqlClient.SqlDataReader>exceto pelo fato do DataTableReader fornece para iteração por linhas em <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.SqlClient.SqlDataReader> Em outras palavras, ele fornece para iteração por linhas em um cache. Os dados em cache podem ser modificados enquanto o DataTableReader está ativo e o leitor mantém automaticamente sua posição.       Quando você cria um DataTableReader de um <xref:System.Data.DataTable>, o objeto DataTableReader resultante contém um conjunto de resultados com os mesmos dados que o <xref:System.Data.DataTable>do qual ele foi criado, exceto para todas as linhas que foram marcadas como excluídas.</xref:System.Data.DataTable> </xref:System.Data.DataTable> As colunas aparecem na mesma ordem que o original <xref:System.Data.DataTable>.</xref:System.Data.DataTable> A estrutura do resultado retornado é idêntica no esquema e os dados ao valor original <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Um DataTableReader criado chamando o <xref:System.Data.DataSet.GetDataReader%2A>método de um <xref:System.Data.DataSet>objeto contém vários conjuntos de resultados se o <xref:System.Data.DataSet>contém mais de uma tabela.</xref:System.Data.DataSet> </xref:System.Data.DataSet> </xref:System.Data.DataSet.GetDataReader%2A> Os resultados estão na mesma sequência como o <xref:System.Data.DataTable>objetos no <xref:System.Data.DataTableCollection>do <xref:System.Data.DataSet>objeto.</xref:System.Data.DataSet> </xref:System.Data.DataTableCollection> </xref:System.Data.DataTable>       O conjunto de resultados retornado contém apenas a versão atual de cada <xref:System.Data.DataRow>; são ignoradas linhas que são marcadas para exclusão.</xref:System.Data.DataRow>       O `DataTableReader` fornece um estável iterador, ou seja, o conteúdo do `DataTableReader` não são invalidados se o tamanho da coleção subjacente é modificado durante a iteração. Por exemplo, se um ou mais linhas no <xref:System.Data.DataTable.Rows%2A>coleta são excluídos ou removidos durante a iteração, a posição atual dentro de `DataTableReader` é mantida adequadamente e não invalida o iterador.</xref:System.Data.DataTable.Rows%2A>"
  syntax:
    content: 'public sealed class DataTableReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)
  id: '#ctor(System.Data.DataTable)'
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: DataTableReader(DataTable)
  nameWithType: DataTableReader.DataTableReader(DataTable)
  fullName: System.Data.DataTableReader.DataTableReader(DataTable)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.DataTableReader&quot;> </xref> classe usando dados de fornecido <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  syntax:
    content: public DataTableReader (System.Data.DataTable dataTable);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "O <xref href=&quot;System.Data.DataTable&quot;> </xref> do qual o novo <xref href=&quot;System.Data.DataTableReader&quot;> </xref> obtém seu conjunto de resultados."
  overload: System.Data.DataTableReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  id: '#ctor(System.Data.DataTable[])'
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: DataTableReader(DataTable[])
  nameWithType: DataTableReader.DataTableReader(DataTable[])
  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.DataTableReader&quot;> </xref> classe usando a matriz fornecida de <xref href=&quot;System.Data.DataTable&quot;> </xref> objetos."
  remarks: "Se for necessário criar um <xref:System.Data.DataTableReader>com base em todos ou um subconjunto das tabelas dentro de um determinado <xref:System.Data.Dataset>, chame o `DataSet`do <xref:System.Data.DataSet.GetDataReader%2A>método.</xref:System.Data.DataSet.GetDataReader%2A> </xref:System.Data.Dataset> </xref:System.Data.DataTableReader> Se você quiser criar um novo <xref:System.Data.DataTableReader>instância com base em um grupo de `DataTable` instâncias que não seriam relacionadas, use este construtor.</xref:System.Data.DataTableReader> Você também pode tirar proveito desse construtor para reorganizar a ordem do `DataTables` dentro de `DataTableReader`, se sua ordem dentro de sua origem `DataSet` não atender às suas necessidades."
  example:
  - "In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \n  \n [!code-vb[DataWorks DataTableReader.ctor#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_20_1.vb)]\n [!code-cs[DataWorks DataTableReader.ctor#1](~/add/codesnippet/csharp/m-system.data.datatabler_20_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \n1 Mary  \n2 Andy  \n3 Peter  \n4 Russ  \n1 Wireless Network Card  \n2 Hard Drive  \n3 Monitor  \n4 CPU  \n```"
  syntax:
    content: public DataTableReader (System.Data.DataTable[] dataTables);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: "A matriz de <xref href=&quot;System.Data.DataTable&quot;> </xref> objetos que fornece os resultados para o novo <xref href=&quot;System.Data.DataTableReader&quot;> </xref> objeto."
  overload: System.Data.DataTableReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.Close
  id: Close
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Close()
  nameWithType: DataTableReader.Close()
  fullName: System.Data.DataTableReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Fecha o atual <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "Chamando `Close()` em um fechado `DataTableReader` objeto não gera um erro."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.DataTableReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.Depth
  id: Depth
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Depth
  nameWithType: DataTableReader.Depth
  fullName: System.Data.DataTableReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A profundidade de aninhamento da linha atual do <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: '`DataTableReader`não oferece suporte a aninhamento. O `Depth` propriedade sempre retorna zero.'
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "A profundidade de aninhamento da linha atual; sempre zero."
  overload: System.Data.DataTableReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.FieldCount
  id: FieldCount
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
  fullName: System.Data.DataTableReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Retorna o número de colunas na linha atual."
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "Quando não posicionado em um conjunto de resultados válido, 0; Caso contrário, o número de colunas na linha atual."
  overload: System.Data.DataTableReader.FieldCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para recuperar a contagem de campo em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: DataTableReader.GetBoolean(Int32)
  fullName: System.Data.DataTableReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada como <xref:System.Boolean>.</xref:System.Boolean>"
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados devem já ser um booliano ou conversível para um valor booleano ou será gerada uma exceção.       Chamar <xref:System.Data.DataTableReader.IsDBNull%2A>para verificar se há valores nulos antes de chamar esse método.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_0_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/csharp/m-system.data.datatabler_0_1.cs)]"
  syntax:
    content: public override bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Boolean
      description: "O valor da coluna especificada."
  overload: System.Data.DataTableReader.GetBoolean*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A coluna especificada não contém um <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: DataTableReader.GetByte(Int32)
  fullName: System.Data.DataTableReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada como um byte."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um byte ou conversível para um byte.       Chamar <xref:System.Data.DataTableReader.IsDBNull%2A>para verificar se há valores nulos antes de chamar esse método.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_8_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/csharp/m-system.data.datatabler_8_1.cs)]"
  syntax:
    content: public override byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Byte
      description: "O valor da coluna especificada."
  overload: System.Data.DataTableReader.GetByte*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A coluna especificada não contém um byte."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lê um fluxo de bytes, começando no deslocamento de coluna especificado no buffer como uma matriz que inicia no deslocamento de buffer especificado."
  remarks: "`GetBytes`Retorna o número de bytes disponíveis no campo. Na maioria das vezes, isso é o comprimento exato do campo. No entanto, o número retornado pode ser menor que o comprimento real do campo se `GetBytes` já foi usado para obter os bytes do campo. Isso pode ser o caso, por exemplo, quando o <xref:System.Data.DataTableReader>está lendo uma estrutura de dados grande em um buffer, se você passar um buffer que está `null` (`Nothing` no Visual Basic), `GetBytes` retorna o comprimento do campo inteiro em bytes, não o tamanho restante com base no parâmetro de deslocamento de buffer.</xref:System.Data.DataTableReader>       Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser uma matriz de bytes ou conversível para uma matriz de bytes."
  example:
  - "The following example creates a <xref:System.Data.DataTableReader> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\\ folder. In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.  \n  \n [!code-cs[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/csharp/ff921727-bdbe-4741-b853-_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/visualbasic/ff921727-bdbe-4741-b853-_1.vb)]"
  syntax:
    content: public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    - id: dataIndex
      type: System.Int64
      description: "O índice dentro do campo no qual iniciar a operação de leitura."
    - id: buffer
      type: System.Byte[]
      description: "O buffer no qual ler o fluxo de bytes."
    - id: bufferIndex
      type: System.Int32
      description: "O índice dentro do buffer no qual começar a colocar os dados."
    - id: length
      type: System.Int32
      description: "O comprimento máximo para copiar para o buffer."
    return:
      type: System.Int64
      description: "O número real de bytes lidos."
  overload: System.Data.DataTableReader.GetBytes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A coluna especificada não contém uma matriz de bytes."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: DataTableReader.GetChar(Int32)
  fullName: System.Data.DataTableReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada como um caractere."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um caractere ou conversível para um caractere.       Chamar <xref:System.Data.DataTableReader.IsDBNull%2A>para verificar se há valores nulos antes de chamar esse método.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_16_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/csharp/m-system.data.datatabler_16_1.cs)]"
  syntax:
    content: public override char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Char
      description: "O valor da coluna."
  overload: System.Data.DataTableReader.GetChar*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O campo especificado não contém um caractere."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Retorna o valor da coluna especificada como uma matriz de caracteres."
  remarks: "`GetChars`Retorna o número de caracteres disponíveis no campo. Na maioria das vezes, isso é o comprimento exato do campo. No entanto, o número retornado pode ser menor que o comprimento real do campo se `GetChars` já foi usado para obter caracteres do campo.       O número real de caracteres lidos pode ser menor que o tamanho solicitado, se o final do campo é atingido. Se você passar um buffer que é nulo (`Nothing` no Visual Basic), `GetChars` retorna o comprimento do campo inteiro em caracteres, não o tamanho restante com base no parâmetro de deslocamento de buffer.       Nenhuma conversão é executada; Portanto, os dados a serem recuperados já devem ser uma matriz de caracteres ou conversível para uma matriz de caracteres."
  example:
  - "The following example demonstrates the `GetChars` method. The `TestGetChars` method expects to be passed a `DataTableReader` filled with two columns of data: a file name in the first column, and an array of characters in the second. In addition, `TestGetChars` lets you specify the buffer size to be used as it reads the data from the character array in the `DataTableReader`. `TestGetChars` creates a file corresponding to each row of data in the `DataTableReader`, using the supplied data in the first column of the `DataTableReader` as the file name.  \n  \n This procedure demonstrates the use of the `GetChars` method reading data that was stored in the `DataTable` as a character array. Any other type of data causes the `GetChars` method to throw an `InvalidCastException`.  \n  \n [!code-cs[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/csharp/299b411e-96a3-40b6-89fc-_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/visualbasic/299b411e-96a3-40b6-89fc-_1.vb)]"
  syntax:
    content: public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    - id: dataIndex
      type: System.Int64
      description: "O índice dentro do campo no qual iniciar a operação de leitura."
    - id: buffer
      type: System.Char[]
      description: "O buffer no qual ler o fluxo de caracteres."
    - id: bufferIndex
      type: System.Int32
      description: "O índice dentro do buffer no qual começar a colocar os dados."
    - id: length
      type: System.Int32
      description: "O comprimento máximo para copiar para o buffer."
    return:
      type: System.Int64
      description: "O número real de caracteres lidos."
  overload: System.Data.DataTableReader.GetChars*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A coluna especificada não contém uma matriz de caracteres."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: DataTableReader.GetDataTypeName(Int32)
  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém uma cadeia de caracteres que representa o tipo de dados da coluna especificada."
  remarks: "O método GetDataTypeName sempre retorna o tipo de base <xref:System.Data.DataColumn>em vez de um tipo específico de provedor.</xref:System.Data.DataColumn>"
  example:
  - "The following console application displays a list of fields and their type names from a simple <xref:System.Data.DataTable>:  \n  \n [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_10_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/csharp/m-system.data.datatabler_10_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \nID: Int32  \nName: String  \n```"
  syntax:
    content: public override string GetDataTypeName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o tipo de dados da coluna."
  overload: System.Data.DataTableReader.GetDataTypeName*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: DataTableReader.GetDateTime(Int32)
  fullName: System.Data.DataTableReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada como uma <xref:System.DateTime>objeto.</xref:System.DateTime>"
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um <xref:System.DateTime>ou conversível para um `DataTime`.</xref:System.DateTime>       Chamar <xref:System.Data.DataTableReader.IsDBNull%2A>para verificar se há valores nulos antes de chamar esse método.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_23_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/csharp/m-system.data.datatabler_23_1.cs)]"
  syntax:
    content: public override DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.DateTime
      description: "O valor da coluna especificada."
  overload: System.Data.DataTableReader.GetDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A coluna especificada não contém um valor de data e hora."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: DataTableReader.GetDecimal(Int32)
  fullName: System.Data.DataTableReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada como <xref:System.Decimal>.</xref:System.Decimal>"
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um <xref:System.Decimal>ou conversível para um `Decimal`.</xref:System.Decimal>       Chamar <xref:System.Data.DataTableReader.IsDBNull%2A>para verificar se há valores nulos antes de chamar esse método.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/csharp/m-system.data.datatabler_4_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_4_1.vb)]"
  syntax:
    content: public override decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Decimal
      description: "O valor da coluna especificada."
  overload: System.Data.DataTableReader.GetDecimal*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A coluna especificada não contém um <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;> </xref> valor."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: DataTableReader.GetDouble(Int32)
  fullName: System.Data.DataTableReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna como um número de ponto flutuante de precisão dupla."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um número de ponto flutuante de precisão dupla ou devem ser conversível para um número de ponto flutuante de precisão dupla.       Chamar <xref:System.Data.DataTableReader.IsDBNull%2A>para verificar se há valores nulos antes de chamar esse método.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/csharp/m-system.data.datatabler_19_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_19_1.vb)]"
  syntax:
    content: public override double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O ordinal baseado em zero da coluna."
    return:
      type: System.Double
      description: "O valor da coluna especificada."
  overload: System.Data.DataTableReader.GetDouble*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A coluna especificada não contém um número de ponto flutuante de precisão dupla."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataTableReader.GetEnumerator()
  fullName: System.Data.DataTableReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Retorna um enumerador que pode ser usado para iterar pela coleção de itens."
  remarks: "Enumeradores permitem somente para leitura dos dados em <xref:System.Data.DataTableReader>.</xref:System.Data.DataTableReader> Enumeradores não podem ser usados para modificar a coleção subjacente.       Inicialmente, o enumerador está posicionado antes do primeiro elemento na coleção. AT isso posicionar, chamando <xref:System.Collections.IEnumerator.Current%2A>lança uma exceção.</xref:System.Collections.IEnumerator.Current%2A> Portanto, você deve chamar `MoveNext` para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de `Current`.       `Current`Retorna um <xref:System.Data.Common.DbDataRecord>e retorna o mesmo objeto até que o <xref:System.Collections.IEnumerator.MoveNext%2A>ou <xref:System.Collections.IEnumerator.Reset%2A>é chamado.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Data.Common.DbDataRecord> `MoveNext`define `Current` para o próximo elemento.       Após o final da coleção for passado, o enumerador está posicionado após o último elemento da coleção e chamada `MoveNext` retorna false. Se a última chamada `MoveNext` retornou `false`, chamar `Current` lança uma exceção. Além disso, porque o <xref:System.Data.DataTableReader>fornece acesso somente de encaminhamento para seus dados, chamando o <xref:System.Collections.IEnumerator.Reset%2A>método de IEnumerator lança <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Data.DataTableReader>       O <xref:System.Data.DataTableReader>fornece um enumerador estável.</xref:System.Data.DataTableReader> Isso significa que mesmo se adições ou exclusões de linha ocorrerem nos dados subjacentes, o enumerador retornado por uma chamada para GetEnumerator ainda é válido."
  example:
  - "The following example demonstrates the use of the GetEnumerator method. This includes the behavior of the enumerator when rows are deleted from the underlying <xref:System.Data.DataTable> while the enumerator is active.  \n  \n [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_7_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/csharp/m-system.data.datatabler_7_1.cs)]  \n  \n The procedure displays the following text in the Console window:  \n  \n```  \nPeter  \nMary  \nRuss  \n```"
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>objeto que representa a coleção de itens.</xref:System.Collections.IEnumerator>"
  overload: System.Data.DataTableReader.GetEnumerator*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: DataTableReader.GetFieldType(Int32)
  fullName: System.Data.DataTableReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o <xref:System.Type>que é o tipo de dados do objeto.</xref:System.Type>"
  remarks: ''
  example:
  - "Call the following procedure, passing in a <xref:System.Data.DataTableReader> instance in order to display a list of all the fields and the full name for each type in the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/csharp/m-system.data.datatabler_13_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_13_1.vb)]"
  syntax:
    content: public override Type GetFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Type
      description: "O <xref:System.Type>que é o tipo de dados do objeto.</xref:System.Type>"
  overload: System.Data.DataTableReader.GetFieldType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: DataTableReader.GetFloat(Int32)
  fullName: System.Data.DataTableReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada como um número de ponto flutuante de precisão simples."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um número de ponto flutuante de precisão simples ou devem ser conversível para um número de ponto flutuante de precisão simples.       Chamar <xref:System.Data.DataTableReader.IsDBNull%2A>para verificar se há valores nulos antes de chamar esse método.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/csharp/m-system.data.datatabler_11_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_11_1.vb)]"
  syntax:
    content: public override float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Single
      description: "O valor da coluna."
  overload: System.Data.DataTableReader.GetFloat*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A coluna especificada não contém um número de ponto flutuante de precisão simples."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: DataTableReader.GetGuid(Int32)
  fullName: System.Data.DataTableReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada como um identificador global exclusivo (GUID)."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um <xref:System.Guid>ou conversível para um `Guid`.</xref:System.Guid>       Chamar <xref:System.Data.DataTableReader.IsDBNull%2A>para verificar se há valores nulos antes de chamar esse método.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_2_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/csharp/m-system.data.datatabler_2_1.cs)]"
  syntax:
    content: public override Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Guid
      description: "O valor da coluna especificada."
  overload: System.Data.DataTableReader.GetGuid*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A coluna especificada não contém um GUID."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: DataTableReader.GetInt16(Int32)
  fullName: System.Data.DataTableReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada como um inteiro assinado de 16 bits."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um <xref:System.Int16>ou conversível para um `Int16`.</xref:System.Int16>       Chamar <xref:System.Data.DataTableReader.IsDBNull%2A>para verificar se há valores nulos antes de chamar esse método.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_1_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/csharp/m-system.data.datatabler_1_1.cs)]"
  syntax:
    content: public override short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O ordinal da coluna com base em zero"
    return:
      type: System.Int16
      description: "O valor da coluna especificada."
  overload: System.Data.DataTableReader.GetInt16*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A coluna especificada não contém um inteiro assinado de 16 bits."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: DataTableReader.GetInt32(Int32)
  fullName: System.Data.DataTableReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada como um inteiro assinado de 32 bits."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um <xref:System.Int32>ou conversível para um `Int32`.</xref:System.Int32>       Chamar <xref:System.Data.DataTableReader.IsDBNull%2A>para verificar se há valores nulos antes de chamar esse método.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/csharp/m-system.data.datatabler_15_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_15_1.vb)]"
  syntax:
    content: public override int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O ordinal da coluna com base em zero"
    return:
      type: System.Int32
      description: "O valor da coluna especificada."
  overload: System.Data.DataTableReader.GetInt32*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A coluna especificada não contém um valor inteiro assinado de 32 bits."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: DataTableReader.GetInt64(Int32)
  fullName: System.Data.DataTableReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada como um inteiro assinado de 64 bits."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um <xref:System.Int64>ou conversível para um `Int64`.</xref:System.Int64>       Chamar <xref:System.Data.DataTableReader.IsDBNull%2A>para verificar se há valores nulos antes de chamar esse método.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_5_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/csharp/m-system.data.datatabler_5_1.cs)]"
  syntax:
    content: public override long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O ordinal da coluna com base em zero"
    return:
      type: System.Int64
      description: "O valor da coluna especificada."
  overload: System.Data.DataTableReader.GetInt64*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A coluna especificada não contém um valor inteiro assinado de 64 bits."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: DataTableReader.GetName(Int32)
  fullName: System.Data.DataTableReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada como <xref:System.String>.</xref:System.String>"
  remarks: "O `GetName` e <xref:System.Data.DataTableReader.GetOrdinal%2A>métodos fornecem funcionalidade inversa.</xref:System.Data.DataTableReader.GetOrdinal%2A> Ou seja, chamando `GetOrdinal` no valor de retorno de chamada `GetName` deve retornar o parâmetro original passado para `GetName`; o mesmo se aplica para chamar os procedimentos na ordem oposta."
  example:
  - "The following simple example includes a procedure that lists the names of all the columns within the specified `DataTableReader`, and the column's ordinal position, to the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetName#1](~/add/codesnippet/csharp/m-system.data.datatabler_6_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_6_1.vb)]"
  syntax:
    content: public override string GetName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O ordinal da coluna com base em zero"
    return:
      type: System.String
      description: "O nome da coluna especificada."
  overload: System.Data.DataTableReader.GetName*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: DataTableReader.GetOrdinal(String)
  fullName: System.Data.DataTableReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém a coluna ordinal, considerando o nome da coluna."
  remarks: "Como a maioria dos métodos fornecidos pelo <xref:System.Data.DataTableReader>classe deve ser fornecido com um número ordinal de coluna, você pode usar o `GetOrdinal` método para recuperar o número da coluna, considerando o nome da coluna.</xref:System.Data.DataTableReader>       `GetOrdinal`executa uma pesquisa diferencia maiusculas de minúsculas primeiro. Se ele falhar, é feita uma segunda pesquisa diferencia maiusculas de minúsculas. Se o número da coluna não for encontrado um `IndexOutOfRangeException` é gerada.       `GetOrdinal`é a largura de kana diferenciação.       Como pesquisas baseadas em ordinais são mais eficientes do que pesquisas por nome, é ineficiente chamar `GetOrdinal` dentro de um loop. Economize tempo chamando `GetOrdinal` uma vez e atribuindo os resultados para uma variável de inteiro para uso dentro do loop"
  example:
  - "If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information. In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <xref:System.Data.DataTableReader> :  \n  \n [!code-cs[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.datatabler_3_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_3_1.vb)]"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome da coluna."
    return:
      type: System.Int32
      description: "A coluna com base em zero ordinal."
  overload: System.Data.DataTableReader.GetOrdinal*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome especificado não é um nome de coluna válido."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o tipo da coluna especificada no formato específico do provedor."
  remarks: "Porque o <xref:System.Data.DataTableReader>sempre retorna o tipo armazenado dentro a subjacente <xref:System.Data.DataColumn>o valor retornado ao chamar o método GetProviderSpecificFieldType sempre retorna o mesmo tipo que o tipo armazenado no <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Quando você trabalha com o <xref:System.Data.DataTableReader>classe, chamando o método GetProviderSpecificFieldType retorna o mesmo tipo que chamar o <xref:System.Type.GetType%2A>método.</xref:System.Type.GetType%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override Type GetProviderSpecificFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Type
      description: "O <xref:System.Type>que é o tipo de dados do objeto.</xref:System.Type>"
  overload: System.Data.DataTableReader.GetProviderSpecificFieldType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada no formato específico do provedor."
  remarks: "Porque o <xref:System.Data.DataTableReader>sempre retorna o tipo armazenado dentro a subjacente <xref:System.Data.DataColumn>o valor retornado ao chamar o método GetProviderSpecificValue sempre retorna dados do mesmo tipo de dados armazenados em <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Quando você trabalha com o <xref:System.Data.DataTableReader>classe, chamando o método GetProviderSpecificValue retorna o mesmo valor e digite como chamar o <xref:System.Data.DataTableReader.GetValue%2A>método.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override object GetProviderSpecificValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O número com base em zero da coluna cujo valor é recuperado."
    return:
      type: System.Object
      description: "O valor da coluna especificada no formato específico do provedor."
  overload: System.Data.DataTableReader.GetProviderSpecificValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado<xref href=&quot;System.Data.DataTableReader&quot;></xref>"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Preenche a matriz fornecida com informações de tipo específico do provedor para todas as colunas de <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "Porque o <xref:System.Data.DataTableReader>sempre retorna os dados do tipo armazenados dentro de base <xref:System.Data.DataColumn>os valores retornados chamando o método é sempre os mesmos tipos de dados armazenados em <xref:System.Data.DataTable>.</xref:System.Data.DataTable> de GetProviderSpecificValues</xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Quando você trabalha com o <xref:System.Data.DataTableReader>classe, chamando o método GetProviderSpecificValues retorna os mesmos valores e tipos de como chamar o <xref:System.Data.DataTableReader.GetValues%2A>método.</xref:System.Data.DataTableReader.GetValues%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Uma matriz de objetos a ser preenchido com as informações de tipo para as colunas de <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
    return:
      type: System.Int32
      description: "O número de valores de coluna são copiadas na matriz."
  overload: System.Data.DataTableReader.GetProviderSpecificValues*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: DataTableReader.GetSchemaTable()
  fullName: System.Data.DataTableReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Retorna um <xref href=&quot;System.Data.DataTable&quot;> </xref> que descreve os metadados da coluna de <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "O método GetSchemaTable retorna metadados sobre cada coluna na seguinte ordem: | Coluna de DataReader | Descrição |   |-----------------------|-----------------|   | ColumnName | O nome da coluna como ele aparece no <xref:System.Data.DataTable>. |   | ColumnOrdinal | O ordinal da coluna |   | ColumnSize |-1 se o <xref:System.Data.Common.SchemaTableColumn.ColumnSize>(ou <xref:System.Data.DataColumn.MaxLength%2A>) propriedade o <xref:System.Data.DataColumn>não pode ser determinada ou não é relevante; caso contrário, 0 ou um número inteiro positivo que contém o `MaxLength` valor. |   | NumericPrecision | Se o tipo de coluna for um tipo numérico, essa é a precisão máxima da coluna.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.MaxLength%2A> </xref:System.Data.Common.SchemaTableColumn.ColumnSize> </xref:System.Data.DataTable> Se o tipo de coluna não é um tipo de dados numérico, esse é um valor nulo. |   | NumericScale | Se o tipo de dados de coluna tem um componente de escala, retorna o número de dígitos à direita da vírgula decimal. Caso contrário, retornará um valor nulo. |   | Tipo de dados | O tipo subjacente da coluna. |   | ProviderType | O indicador de tipo de dados da coluna. Se o tipo de dados da coluna varia de uma linha para outra, esse valor é <xref:System.Object>.</xref:System.Object> Esta coluna não pode conter um valor nulo. |   | IsLong | `true` se o tipo de dados da coluna for <xref:System.String>e sua <xref:System.Data.DataColumn.MaxLength%2A>propriedade é -1.</xref:System.Data.DataColumn.MaxLength%2A> </xref:System.String> Caso contrário, `false`. |   | AllowDBNull | `true` se a restrição AllowDbNull é definida como true para a coluna; caso contrário, `false`. |   | IsReadOnly | `true` se a coluna não pode ser modificada; caso contrário `false`. |   | IsRowVersion | `false`, para cada coluna. |   | IsUnique | `true`: Duas linhas na <xref:System.Data.DataTable>pode ter o mesmo valor nesta coluna.</xref:System.Data.DataTable> `IsUnique`é garantido como true se a coluna representa uma chave por si só ou se houver uma restrição de tipo UNIQUE que se aplica somente a esta coluna. `false`: A coluna pode conter valores duplicados no `DataTable`. O padrão desta coluna é `false`. |   | IsKey | `true`: A coluna for de um conjunto de colunas que, juntas, identificam exclusivamente a linha em <xref:System.Data.DataTable>.</xref:System.Data.DataTable> O conjunto de colunas com `IsKey` definida como `true` deve identificar exclusivamente uma linha de `DataTable`. Não há nenhum requisito de que esse conjunto de colunas é um conjunto mínimo de colunas. Esse conjunto de colunas pode ser gerado por um `DataTable` chave primária, uma restrição exclusiva ou um índice exclusivo. `false`: A coluna não é necessário para identificar exclusivamente a linha. Esse valor é `true` se a coluna participa de uma chave primária única ou composta. Caso contrário, seu valor é `false`. |   | IsAutoIncrement | `true`: A coluna atribui valores a novas linhas em incrementos fixos. `false`: A coluna não atribui valores a novas linhas em incrementos fixos. O padrão desta coluna é `false`. |   | BaseCatalogName | O nome do catálogo no repositório de dados que contém a coluna. `Null`Se o nome do catálogo de base não pode ser determinado. O valor padrão para essa coluna é uma `null` valor. |   | BaseSchemaName | Esse valor é sempre `Null`. |   | BaseTableName | O nome do <xref:System.Data.DataTable>. |   | BaseColumnName | O nome da coluna de <xref:System.Data.DataTable>. |   | AutoIncrementSeed | O valor da propriedade do <xref:System.Data.DataTable> <xref:System.Data.DataColumn.AutoIncrementSeed%2A>. |   | AutoIncrementStep | O valor da propriedade do <xref:System.Data.DataTable> <xref:System.Data.DataColumn.AutoIncrementStep%2A>. |   | DefaultValue | O valor da propriedade do <xref:System.Data.DataColumn> <xref:System.Data.DataColumn.DefaultValue%2A>. |   | Expressão | A cadeia de caracteres de expressão, se a coluna atual for uma coluna de expressão e todas as colunas usadas na expressão pertencem ao mesmo `T:System.Data.DataTable` que contém a coluna de expressão; caso contrário `null`. |   | ColumnMapping | O <xref:System.Data.MappingType>valor associado com o <xref:System.Data.DataColumn>.</xref:System.Data.DataColumn> </xref:System.Data.MappingType> </xref:System.Data.DataColumn.DefaultValue%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataColumn.AutoIncrementStep%2A> </xref:System.Data.DataTable> </xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataTable> O tipo pode ser um dos `Attribute`, `Element`, `Hidden`, ou `SimpleContent`. O valor padrão é `Element`. |   | BaseTableNamespace | O valor da propriedade do <xref:System.Data.DataTable> <xref:System.Data.DataTable.Namespace%2A>. |   | BaseColumnNamespace | O valor de <xref:System.Data.DataColumn>do <xref:System.Data.DataColumn.Namespace%2A>propriedade. |</xref:System.Data.DataColumn.Namespace%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable.Namespace%2A> </xref:System.Data.DataTable>"
  example:
  - "The following console application example retrieves schema information about the specified column. Pass the `DisplaySchemaTableInfo` procedure a <xref:System.Data.DataTableReader> and an integer representing the ordinal position of a column within the `DataTableReader`, and the procedure outputs schema information to the console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/csharp/m-system.data.datatabler_14_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_14_1.vb)]"
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Um <xref href=&quot;System.Data.DataTable&quot;> </xref> que descreve os metadados da coluna."
  overload: System.Data.DataTableReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Data.DataTableReader&quot;> </xref> está fechado."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: DataTableReader.GetString(Int32)
  fullName: System.Data.DataTableReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada como uma cadeia de caracteres."
  remarks: "Chamar <xref:System.Data.DataTableReader.IsDBNull%2A>para verificar se há valores nulos antes de chamar esse método.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetString#1](~/add/codesnippet/csharp/m-system.data.datatabler_17_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetString#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_17_1.vb)]"
  syntax:
    content: public override string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O ordinal da coluna com base em zero"
    return:
      type: System.String
      description: "O valor da coluna especificada."
  overload: System.Data.DataTableReader.GetString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A coluna especificada não contém uma cadeia de caracteres."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: DataTableReader.GetValue(Int32)
  fullName: System.Data.DataTableReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada em seu formato nativo."
  remarks: "Embora você possa chamar <xref:System.Data.DataTableReader.IsDBNull%2A>para ver se há valores nulos antes de chamar esse método, você não precisa fazer isso.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example iterates through all the columns within the current row in a <xref:System.Data.DataTableReader>, displaying the contents of each column and the column name. Generally, if your intent is to work with all the columns within a row retrieved by a <xref:System.Data.DataTableReader>, consider using the <xref:System.Data.DataTableReader.GetValues%2A> method instead, because it is more efficient.  \n  \n [!code-cs[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/csharp/m-system.data.datatabler_22_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_22_1.vb)]"
  syntax:
    content: public override object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O ordinal da coluna com base em zero"
    return:
      type: System.Object
      description: "O valor da coluna especificada. Este método retorna <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> para colunas null."
  overload: System.Data.DataTableReader.GetValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar colunas em uma fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: DataTableReader.GetValues(Object[])
  fullName: System.Data.DataTableReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Preenche uma matriz de objetos com os valores da coluna da linha atual."
  remarks: "Para a maioria dos aplicativos, esse método fornece uma forma eficiente para recuperar todas as colunas, em vez de recuperar cada coluna individualmente. Se sua intenção é recuperar todos os valores de coluna de uma linha dentro de <xref:System.Data.DataTableReader>, o `GetValues` método fornece a solução mais eficiente.</xref:System.Data.DataTableReader>       Você pode passar um <xref:System.Object>matriz que contém menos do que o número de colunas que estão contidos na linha resultante.</xref:System.Object> Somente a quantidade de dados a `Object` matriz pode conter é copiado para a matriz. Você também pode passar um `Object` matriz cujo tamanho é maior que o número de colunas que estão contidos na linha resultante, nesse caso dos elementos da matriz adicionais permanece inalterado pela chamada de método.       Esse método insere `DBNull` na matriz de saída para colunas null."
  example:
  - "The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <xref:System.Data.DataTableReader>. In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.  \n  \n [!code-cs[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/csharp/m-system.data.datatabler_21_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_21_1.vb)]"
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Uma matriz de <xref:System.Object>na qual copiar os valores da coluna do <xref href=&quot;System.Data.DataTableReader&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "O número de valores de coluna são copiadas na matriz."
  overload: System.Data.DataTableReader.GetValues*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.HasRows
  id: HasRows
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: HasRows
  nameWithType: DataTableReader.HasRows
  fullName: System.Data.DataTableReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Data.DataTableReader&quot;> </xref> contém uma ou mais linhas."
  remarks: "O `HasRows` propriedade retorna informações sobre o conjunto de resultados atual. Se o <xref:System.Data.DataTableReader>contém resultados múltiplos conjuntos, você pode examinar o valor da `HasRows` propriedade imediatamente depois de chamar o <xref:System.Data.DataTableReader.NextResult%2A>método para determinar se o novo conjunto de resultados contém linhas.</xref:System.Data.DataTableReader.NextResult%2A> </xref:System.Data.DataTableReader>       Use o `HasRows` propriedade para evitar a necessidade de chamar o <xref:System.Data.DataTableReader.Read%2A>método o <xref:System.Data.DataTableReader>se não existem linhas no conjunto de resultados atual.</xref:System.Data.DataTableReader> </xref:System.Data.DataTableReader.Read%2A>"
  example:
  - "The following example fills two <xref:System.Data.DataTable> instances with data. The first <xref:System.Data.DataTable> contains one row, and the second contains no rows. The example then creates a <xref:System.Data.DataTableReader> that contains both <xref:System.Data.DataTable> objects, and calls the PrintData method to display the contents of each, checking the value of the HasRows property of each before it makes the call to PrintData.  \n  \n [!code-cs[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/csharp/p-system.data.datatabler_1_1.cs)]\n [!code-vb[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_1_1.vb)]"
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Data.DataTableReader&quot;> </xref> contém uma ou mais linhas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.HasRows*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para recuperar informações sobre um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.IsClosed
  id: IsClosed
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
  fullName: System.Data.DataTableReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Data.DataTableReader&quot;> </xref> está fechado."
  remarks: "<xref:System.Data.DataTableReader.Close%2A>é o único método e `IsClosed` e <xref:System.Data.DataTableReader.RecordsAffected%2A>são as únicas propriedades que podem ser acessadas após o <xref:System.Data.DataTableReader>foi fechado.</xref:System.Data.DataTableReader> </xref:System.Data.DataTableReader.RecordsAffected%2A></xref:System.Data.DataTableReader.Close%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "Retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o <xref href=&quot;System.Data.DataTableReader&quot;> </xref> estiver fechado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: DataTableReader.IsDBNull(Int32)
  fullName: System.Data.DataTableReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém um valor que indica se a coluna contém valores não existentes ou ausentes."
  remarks: "Chame esse método para verificar se há valores de coluna nulos antes de chamar os métodos get tipado (por exemplo, <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>e assim por diante) para evitar gerar um erro.</xref:System.Data.DataTableReader.GetChar%2A> </xref:System.Data.DataTableReader.GetByte%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_18_1.vb)]\n [!code-cs[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/csharp/m-system.data.datatabler_18_1.cs)]"
  syntax:
    content: public override bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "O ordinal da coluna com base em zero"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor da coluna especificada for equivalente a <xref href=&quot;System.DBNull&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.IsDBNull*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataTableReader.Item(Int32)
  fullName: System.Data.DataTableReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada em seu formato nativo, dado o ordinal da coluna."
  remarks: "Essa sobrecarga para <xref:System.Data.DataTableReader.Item%2A>se comporta de forma idêntica ao <xref:System.Data.DataTableReader.GetValue%2A>método.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader.Item%2A>"
  example:
  - "The following example displays the contents of all the columns, in all the rows from the supplied <xref:System.Data.DataTableReader>. The code uses the <xref:System.Data.DataTableReader.Item%2A> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.  \n  \n [!code-vb[DataWorks DataTableReader.Item#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_0_1.vb)]\n [!code-cs[DataWorks DataTableReader.Item#1](~/add/codesnippet/csharp/p-system.data.datatabler_0_1.cs)]"
  syntax:
    content: public override object this[int ordinal] { get; }
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Object
      description: "O valor da coluna especificada em seu formato nativo."
  overload: System.Data.DataTableReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  platform:
  - net462
- uid: System.Data.DataTableReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataTableReader.Item(String)
  fullName: System.Data.DataTableReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o valor da coluna especificada em seu formato nativo, considerando o nome da coluna."
  remarks: "Uma pesquisa diferencia maiusculas de minúsculas é executada pela primeira vez. Se ele falhar, é feita uma segunda pesquisa diferencia maiusculas de minúsculas.       Esse método é não diferencia caracteres kana-largura.       Esta versão sobrecarregada de <xref:System.Data.DataTableReader.Item%2A>corresponde ao chamar o <xref:System.Data.DataTableReader.GetOrdinal%2A>método e, em seguida, chamar subsequentemente o <xref:System.Data.DataTableReader.GetValue%2A>método.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader.GetOrdinal%2A> </xref:System.Data.DataTableReader.Item%2A>"
  example:
  - "Given a <xref:System.Data.DataTableReader> and a column name, the GetValueByName procedure returns the value of the specified column. Before calling this procedure, you must create a new <xref:System.Data.DataTableReader> instance and call its Read method at least one time to position the row pointer on a row of data.  \n  \n [!code-vb[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_2_1.vb)]\n [!code-cs[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/csharp/p-system.data.datatabler_2_1.cs)]"
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "O nome da coluna."
    return:
      type: System.Object
      description: "O valor da coluna especificada em seu formato nativo."
  overload: System.Data.DataTableReader.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome especificado não é um nome de coluna válido."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Foi feita uma tentativa para recuperar dados de uma linha excluída."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.NextResult
  id: NextResult
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: DataTableReader.NextResult()
  fullName: System.Data.DataTableReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Avança o <xref href=&quot;System.Data.DataTableReader&quot;> </xref> para o próximo conjunto de resultados, se houver."
  remarks: "Usado para processar vários resultados que podem ser gerados, criando um <xref:System.Data.DataTableReader>em um <xref:System.Data.DataSet>que contém duas ou mais tabelas ou uma matriz que contém duas ou mais <xref:System.Data.DataTable>instâncias.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTableReader>       Um novo <xref:System.Data.DataTableReader>é posicionado no primeiro resultado.</xref:System.Data.DataTableReader>"
  example:
  - "In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \n  \n [!code-vb[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_9_1.vb)]\n [!code-cs[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/csharp/m-system.data.datatabler_9_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \n1 Mary  \n2 Andy  \n3 Peter  \n4 Russ  \n1 Wireless Network Card  \n2 Hard Drive  \n3 Monitor  \n4 CPU  \n```"
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não houver outro conjunto de resultados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.NextResult*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para navegar dentro de um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.Read
  id: Read
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Read()
  nameWithType: DataTableReader.Read()
  fullName: System.Data.DataTableReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Avança o <xref href=&quot;System.Data.DataTableReader&quot;> </xref> para o próximo registro."
  remarks: "A posição padrão da <xref:System.Data.DataTableReader>é antes do primeiro registro.</xref:System.Data.DataTableReader> Portanto, você deve chamar `Read` para começar a acessar os dados."
  example:
  - "The PrintColumns procedure loops through all the rows in the <xref:System.Data.DataTableReader>, displaying the contents of each column in the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.Read#1](~/add/codesnippet/csharp/m-system.data.datatabler_12_1.cs)]\n [!code-vb[DataWorks DataTableReader.Read#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_12_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não houver outra linha para ler. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para ler ou acessar uma coluna em um fechado <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
  fullName: System.Data.DataTableReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o número de linhas inseridas, alteradas ou excluídas pela execução da instrução SQL."
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "O <xref href=&quot;System.Data.DataTableReader&quot;> </xref> não oferece suporte a essa propriedade e sempre retorna 0."
  overload: System.Data.DataTableReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader(DataTable)
  nameWithType: DataTableReader.DataTableReader(DataTable)
  fullName: System.Data.DataTableReader.DataTableReader(DataTable)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader(DataTable[])
  nameWithType: DataTableReader.DataTableReader(DataTable[])
  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.Close
  parent: System.Data.DataTableReader
  isExternal: false
  name: Close()
  nameWithType: DataTableReader.Close()
  fullName: System.Data.DataTableReader.Close()
- uid: System.Data.DataTableReader.Depth
  parent: System.Data.DataTableReader
  isExternal: false
  name: Depth
  nameWithType: DataTableReader.Depth
  fullName: System.Data.DataTableReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTableReader.FieldCount
  parent: System.Data.DataTableReader
  isExternal: false
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
  fullName: System.Data.DataTableReader.FieldCount
- uid: System.Data.DataTableReader.GetBoolean(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: DataTableReader.GetBoolean(Int32)
  fullName: System.Data.DataTableReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataTableReader.GetByte(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: DataTableReader.GetByte(Int32)
  fullName: System.Data.DataTableReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetChar(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: DataTableReader.GetChar(Int32)
  fullName: System.Data.DataTableReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: DataTableReader.GetDataTypeName(Int32)
  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataTableReader.GetDateTime(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: DataTableReader.GetDateTime(Int32)
  fullName: System.Data.DataTableReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.DataTableReader.GetDecimal(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: DataTableReader.GetDecimal(Int32)
  fullName: System.Data.DataTableReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.DataTableReader.GetDouble(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: DataTableReader.GetDouble(Int32)
  fullName: System.Data.DataTableReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.DataTableReader.GetEnumerator
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataTableReader.GetEnumerator()
  fullName: System.Data.DataTableReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.DataTableReader.GetFieldType(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: DataTableReader.GetFieldType(Int32)
  fullName: System.Data.DataTableReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.DataTableReader.GetFloat(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: DataTableReader.GetFloat(Int32)
  fullName: System.Data.DataTableReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.DataTableReader.GetGuid(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: DataTableReader.GetGuid(Int32)
  fullName: System.Data.DataTableReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.DataTableReader.GetInt16(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: DataTableReader.GetInt16(Int32)
  fullName: System.Data.DataTableReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.DataTableReader.GetInt32(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: DataTableReader.GetInt32(Int32)
  fullName: System.Data.DataTableReader.GetInt32(Int32)
- uid: System.Data.DataTableReader.GetInt64(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: DataTableReader.GetInt64(Int32)
  fullName: System.Data.DataTableReader.GetInt64(Int32)
- uid: System.Data.DataTableReader.GetName(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: DataTableReader.GetName(Int32)
  fullName: System.Data.DataTableReader.GetName(Int32)
- uid: System.Data.DataTableReader.GetOrdinal(System.String)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: DataTableReader.GetOrdinal(String)
  fullName: System.Data.DataTableReader.GetOrdinal(String)
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetSchemaTable
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: DataTableReader.GetSchemaTable()
  fullName: System.Data.DataTableReader.GetSchemaTable()
- uid: System.Data.DataTableReader.GetString(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: DataTableReader.GetString(Int32)
  fullName: System.Data.DataTableReader.GetString(Int32)
- uid: System.Data.DataTableReader.GetValue(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: DataTableReader.GetValue(Int32)
  fullName: System.Data.DataTableReader.GetValue(Int32)
- uid: System.Data.DataTableReader.GetValues(System.Object[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: DataTableReader.GetValues(Object[])
  fullName: System.Data.DataTableReader.GetValues(Object[])
- uid: System.Data.DataTableReader.HasRows
  parent: System.Data.DataTableReader
  isExternal: false
  name: HasRows
  nameWithType: DataTableReader.HasRows
  fullName: System.Data.DataTableReader.HasRows
- uid: System.Data.DataTableReader.IsClosed
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
  fullName: System.Data.DataTableReader.IsClosed
- uid: System.Data.DataTableReader.IsDBNull(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: DataTableReader.IsDBNull(Int32)
  fullName: System.Data.DataTableReader.IsDBNull(Int32)
- uid: System.Data.DataTableReader.Item(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item(Int32)
  nameWithType: DataTableReader.Item(Int32)
  fullName: System.Data.DataTableReader.Item(Int32)
- uid: System.Data.DataTableReader.Item(System.String)
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item(String)
  nameWithType: DataTableReader.Item(String)
  fullName: System.Data.DataTableReader.Item(String)
- uid: System.Data.DataTableReader.NextResult
  parent: System.Data.DataTableReader
  isExternal: false
  name: NextResult()
  nameWithType: DataTableReader.NextResult()
  fullName: System.Data.DataTableReader.NextResult()
- uid: System.Data.DataTableReader.Read
  parent: System.Data.DataTableReader
  isExternal: false
  name: Read()
  nameWithType: DataTableReader.Read()
  fullName: System.Data.DataTableReader.Read()
- uid: System.Data.DataTableReader.RecordsAffected
  parent: System.Data.DataTableReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
  fullName: System.Data.DataTableReader.RecordsAffected
- uid: System.Data.DataTableReader.#ctor*
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader
  nameWithType: DataTableReader.DataTableReader
- uid: System.Data.DataTableReader.Close*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Close
  nameWithType: DataTableReader.Close
- uid: System.Data.DataTableReader.Depth*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Depth
  nameWithType: DataTableReader.Depth
- uid: System.Data.DataTableReader.FieldCount*
  parent: System.Data.DataTableReader
  isExternal: false
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
- uid: System.Data.DataTableReader.GetBoolean*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBoolean
  nameWithType: DataTableReader.GetBoolean
- uid: System.Data.DataTableReader.GetByte*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetByte
  nameWithType: DataTableReader.GetByte
- uid: System.Data.DataTableReader.GetBytes*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBytes
  nameWithType: DataTableReader.GetBytes
- uid: System.Data.DataTableReader.GetChar*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChar
  nameWithType: DataTableReader.GetChar
- uid: System.Data.DataTableReader.GetChars*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChars
  nameWithType: DataTableReader.GetChars
- uid: System.Data.DataTableReader.GetDataTypeName*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: DataTableReader.GetDataTypeName
- uid: System.Data.DataTableReader.GetDateTime*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDateTime
  nameWithType: DataTableReader.GetDateTime
- uid: System.Data.DataTableReader.GetDecimal*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDecimal
  nameWithType: DataTableReader.GetDecimal
- uid: System.Data.DataTableReader.GetDouble*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDouble
  nameWithType: DataTableReader.GetDouble
- uid: System.Data.DataTableReader.GetEnumerator*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetEnumerator
  nameWithType: DataTableReader.GetEnumerator
- uid: System.Data.DataTableReader.GetFieldType*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFieldType
  nameWithType: DataTableReader.GetFieldType
- uid: System.Data.DataTableReader.GetFloat*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFloat
  nameWithType: DataTableReader.GetFloat
- uid: System.Data.DataTableReader.GetGuid*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetGuid
  nameWithType: DataTableReader.GetGuid
- uid: System.Data.DataTableReader.GetInt16*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt16
  nameWithType: DataTableReader.GetInt16
- uid: System.Data.DataTableReader.GetInt32*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt32
  nameWithType: DataTableReader.GetInt32
- uid: System.Data.DataTableReader.GetInt64*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt64
  nameWithType: DataTableReader.GetInt64
- uid: System.Data.DataTableReader.GetName*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetName
  nameWithType: DataTableReader.GetName
- uid: System.Data.DataTableReader.GetOrdinal*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetOrdinal
  nameWithType: DataTableReader.GetOrdinal
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: DataTableReader.GetProviderSpecificFieldType
- uid: System.Data.DataTableReader.GetProviderSpecificValue*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: DataTableReader.GetProviderSpecificValue
- uid: System.Data.DataTableReader.GetProviderSpecificValues*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: DataTableReader.GetProviderSpecificValues
- uid: System.Data.DataTableReader.GetSchemaTable*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: DataTableReader.GetSchemaTable
- uid: System.Data.DataTableReader.GetString*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetString
  nameWithType: DataTableReader.GetString
- uid: System.Data.DataTableReader.GetValue*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValue
  nameWithType: DataTableReader.GetValue
- uid: System.Data.DataTableReader.GetValues*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValues
  nameWithType: DataTableReader.GetValues
- uid: System.Data.DataTableReader.HasRows*
  parent: System.Data.DataTableReader
  isExternal: false
  name: HasRows
  nameWithType: DataTableReader.HasRows
- uid: System.Data.DataTableReader.IsClosed*
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
- uid: System.Data.DataTableReader.IsDBNull*
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsDBNull
  nameWithType: DataTableReader.IsDBNull
- uid: System.Data.DataTableReader.Item*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item
  nameWithType: DataTableReader.Item
- uid: System.Data.DataTableReader.NextResult*
  parent: System.Data.DataTableReader
  isExternal: false
  name: NextResult
  nameWithType: DataTableReader.NextResult
- uid: System.Data.DataTableReader.Read*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Read
  nameWithType: DataTableReader.Read
- uid: System.Data.DataTableReader.RecordsAffected*
  parent: System.Data.DataTableReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
