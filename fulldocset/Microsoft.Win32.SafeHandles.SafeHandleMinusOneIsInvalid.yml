### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  id: SafeHandleMinusOneIsInvalid
  children:
  - Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)
  - Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
  langs:
  - csharp
  name: SafeHandleMinusOneIsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  type: Class
  summary: "Fornece uma classe base para implementações de SafeHandle Win32 no qual o valor de -1 indica um identificador inválido."
  remarks: "Essa classe é derivada da <xref:System.Runtime.InteropServices.SafeHandle?displayProperty=fullName>classe</xref:System.Runtime.InteropServices.SafeHandle?displayProperty=fullName> de Descreve o formato de um identificador inválido que usa um valor de -1. Isso podem especializar derivações adicionais dessa classe (para identificadores de exemplo, arquivo ou registro) ainda mais. Consulte o <xref:Microsoft.Win32.SafeHandles.SafeFileHandle>classe para obter um exemplo de uma classe que deriva de SafeHandleMinusOneIsInvalid.</xref:Microsoft.Win32.SafeHandles.SafeFileHandle>      > [!WARNING] > Este tipo implementa o <xref:System.IDisposable>interface.</xref:System.IDisposable> Quando você terminar de usar o tipo, descarte-direta ou indiretamente. Para descartar o tipo diretamente, chame seu <xref:System.IDisposable.Dispose%2A>método em um `try``catch` bloco.</xref:System.IDisposable.Dispose%2A> Para descartar indiretamente dele, use uma construção de linguagem, como `using` (em c#) ou `Using` (no Visual Basic). Para obter mais informações, consulte a seção &quot;Usando um objeto que implementa IDisposable&quot; o <xref:System.IDisposable>tópico da interface.</xref:System.IDisposable>"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class SafeHandleMinusOneIsInvalid : System.Runtime.InteropServices.SafeHandle
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  langs:
  - csharp
  name: SafeHandleMinusOneIsInvalid(Boolean)
  nameWithType: SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid(Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Inicializa uma nova instância do <xref href=&quot;Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid&quot;> </xref> classe, especificando se o identificador é confiável seja liberado."
  syntax:
    content: protected SafeHandleMinusOneIsInvalid (bool ownsHandle);
    parameters:
    - id: ownsHandle
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para o identificador de versão confiável durante a fase de finalização. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para impedir que a versão confiável (não recomendado)."
  overload: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
  id: IsInvalid
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  langs:
  - csharp
  name: IsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Obtém um valor que indica se o identificador é inválido."
  remarks: "O common language runtime usa essa propriedade para determinar se a finalização crítica é necessária."
  syntax:
    content: public override bool IsInvalid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o identificador não é válido. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: System.Runtime.InteropServices.SafeHandle
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  isExternal: false
  name: SafeHandleMinusOneIsInvalid(Boolean)
  nameWithType: SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid(Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor*
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  isExternal: false
  name: SafeHandleMinusOneIsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid*
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid.IsInvalid
