### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleConnection
  id: OracleConnection
  children:
  - System.Data.OracleClient.OracleConnection.#ctor
  - System.Data.OracleClient.OracleConnection.#ctor(System.String)
  - System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.OracleClient.OracleConnection.BeginTransaction
  - System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  - System.Data.OracleClient.OracleConnection.ClearAllPools
  - System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  - System.Data.OracleClient.OracleConnection.Close
  - System.Data.OracleClient.OracleConnection.ConnectionString
  - System.Data.OracleClient.OracleConnection.ConnectionTimeout
  - System.Data.OracleClient.OracleConnection.CreateCommand
  - System.Data.OracleClient.OracleConnection.CreateDbCommand
  - System.Data.OracleClient.OracleConnection.Database
  - System.Data.OracleClient.OracleConnection.DataSource
  - System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.OracleClient.OracleConnection.GetSchema
  - System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  - System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  - System.Data.OracleClient.OracleConnection.InfoMessage
  - System.Data.OracleClient.OracleConnection.Open
  - System.Data.OracleClient.OracleConnection.ServerVersion
  - System.Data.OracleClient.OracleConnection.State
  - System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  langs:
  - csharp
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
  type: Class
  summary: "Representa uma conexão aberta para um banco de dados. Essa classe não pode ser herdada."
  remarks: "Esse tipo foi substituído e será removido em uma versão futura do .NET Framework. Para obter mais informações, consulte [Oracle e ADO.NET](~/add/includes/ajax-current-ext-md.md).       Um objeto OracleConnection representa uma conexão exclusiva para um banco de dados Oracle. No caso de um sistema de banco de dados cliente/servidor, é equivalente a uma conexão de rede para o servidor.       Um aplicativo que cria uma instância do objeto OracleConnection pode definir as demandas de segurança declarativa ou imperativa que requerem que todos os chamadores diretos e indiretos ter as permissões adequadas para o código. OracleConnection cria demandas de segurança usando o <xref:System.Data.OracleClient.OraclePermission>objeto.</xref:System.Data.OracleClient.OraclePermission> Os usuários podem verificar se o seu código tem as permissões adequadas usando o <xref:System.Data.OracleClient.OraclePermissionAttribute>objeto.</xref:System.Data.OracleClient.OraclePermissionAttribute> Os usuários e administradores também podem usar a ferramenta de política de segurança de acesso de código (Caspol.exe) para modificar a política de segurança no computador, usuário e os níveis de empresa. Para obter mais informações, consulte [segurança](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Diferentemente o **Conexão** objeto em outros provedores do .NET Framework dados (SQL Server, OLE DB e ODBC), OracleConnection não dá suporte uma <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>propriedade.</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> Definir um tempo limite de conexão como uma propriedade ou na cadeia de conexão não tem nenhum efeito e o valor retornado é sempre zero. OracleConnection também não dá suporte uma <xref:System.Data.OracleClient.OracleConnection.Database%2A>propriedade ou um <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>método.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> </xref:System.Data.OracleClient.OracleConnection.Database%2A>       Se o objeto OracleConnection sai do escopo, ela permanecerá aberta. Portanto, você sempre deve fechar objetos OracleConnection chamando <xref:System.Data.OracleClient.OracleConnection.Close%2A>ou **Dispose**, ou usando o objeto OracleConnection dentro de um `Using` instrução.</xref:System.Data.OracleClient.OracleConnection.Close%2A> Caso contrário, a coleta de lixo pode não liberá-las imediatamente. Tais atrasos podem causar erros se o número máximo de conexões for alcançado enquanto um número de conexões está aguardando para ser excluída pelo coletor de lixo. Por outro lado, fechar as conexões chamando <xref:System.Data.OracleClient.OracleConnection.Close%2A>usa recursos nativos com mais eficiência, melhorando a escalabilidade e melhorar o desempenho geral do aplicativo.</xref:System.Data.OracleClient.OracleConnection.Close%2A> Para garantir que as conexões sempre são fechadas, abra a conexão dentro de um `Using` bloco.      > [!NOTE] > Para implantar aplicativos de alto desempenho, muitas vezes é preciso usar o pool de conexão. No entanto, quando você usa o provedor de dados .NET Framework para Oracle, você não precisa habilitar o pooling de conexão porque o provedor gerencia isso automaticamente."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and an OracleConnection. The OracleConnection is opened and set as the <xref:System.Data.OracleClient.OracleCommand.Connection%2A?displayProperty=fullName> property. The example then calls <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>, and closes the connection. To accomplish this, the <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \n  \n [!code-vb[Classic WebData OracleConnection#1](~/add/codesnippet/visualbasic/t-system.data.oracleclie_5_1.vb)]\n [!code-cs[Classic WebData OracleConnection#1](~/add/codesnippet/csharp/t-system.data.oracleclie_5_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      [System.Obsolete("OracleConnection has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]

      public sealed class OracleConnection : System.Data.Common.DbConnection, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.#ctor
  id: '#ctor'
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: OracleConnection()
  nameWithType: OracleConnection.OracleConnection()
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection()
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>."
  remarks: ''
  example:
  - "The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_0_1.vb)]\n [!code-cs[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_0_1.cs)]"
  syntax:
    content: public OracleConnection ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: OracleConnection(String)
  nameWithType: OracleConnection.OracleConnection(String)
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection(String)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> classe com a cadeia de caracteres de conexão especificada."
  remarks: ''
  example:
  - "The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_9_1.vb)]\n [!code-cs[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_9_1.cs)]"
  syntax:
    content: public OracleConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "A conexão usada para abrir o banco de dados."
  overload: System.Data.OracleClient.OracleConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "A ser adicionado."
    return:
      type: System.Data.Common.DbTransaction
      description: "A ser adicionado."
  overload: System.Data.OracleClient.OracleConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: OracleConnection.BeginTransaction()
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inicia uma transação no banco de dados."
  remarks: "Para confirmar ou reverter a transação, você deve usar explicitamente o <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>ou <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>métodos.</xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> </xref:System.Data.OracleClient.OracleTransaction.Commit%2A>       Para garantir que o provedor de dados .NET Framework para o modelo de gerenciamento de transação do Oracle executa corretamente, evite o uso de outros modelos de gerenciamento de transações, como aqueles fornecidos pelo banco de dados.      > [!NOTE] > Se você não especificar um nível de isolamento, o nível de isolamento padrão será usado. Para especificar um nível de isolamento com o método BeginTransaction, use o <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>sobrecarregar.</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_11_1.vb)]\n [!code-cs[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/csharp/m-system.data.oracleclie_11_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "Um objeto que representa a nova transação."
  overload: System.Data.OracleClient.OracleConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não há suporte para transações paralelas."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inicia uma transação no banco de dados com especificado <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> valor."
  remarks: "Para confirmar ou reverter a transação, você deve usar explicitamente o <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>ou <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>métodos.</xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> </xref:System.Data.OracleClient.OracleTransaction.Commit%2A>       Para garantir que o provedor de dados .NET Framework para o modelo de gerenciamento de transação do Oracle executa corretamente, evite o uso de outros modelos de gerenciamento de transações, como aqueles fornecidos pelo banco de dados."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>. It also demonstrates how to use the <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/visualbasic/12fabef6-623c-46b8-b1c3-_1.vb)]\n [!code-cs[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/csharp/12fabef6-623c-46b8-b1c3-_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleTransaction BeginTransaction (System.Data.IsolationLevel il);
    parameters:
    - id: il
      type: System.Data.IsolationLevel
      description: "O nível de isolamento de transação para esta conexão."
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "Um objeto que representa a nova transação."
  overload: System.Data.OracleClient.OracleConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não há suporte para transações paralelas."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: OracleConnection.ChangeDatabase(String)
  fullName: System.Data.OracleClient.OracleConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Altera o banco de dados atual para um aberto <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>."
  remarks: "O `value` parâmetro deve conter um nome de banco de dados válido e não pode conter um valor nulo, uma cadeia de caracteres vazia (&quot;&quot;), ou uma cadeia de caracteres com apenas os caracteres em branco.      > [!NOTE] > Diferentemente o **Conexão** objeto os outros provedores de dados de .NET Framework (SQL Server, OLE DB e ODBC), <xref:System.Data.OracleClient.OracleConnection>não oferece suporte a um <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>propriedade.</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> </xref:System.Data.OracleClient.OracleConnection> Definir um tempo limite de conexão como uma propriedade ou na cadeia de conexão não tem nenhum efeito e o valor retornado é sempre zero. <xref:System.Data.OracleClient.OracleConnection>também não dá suporte para um <xref:System.Data.OracleClient.OracleConnection.Database%2A>propriedade ou um método ChangeDatabase.</xref:System.Data.OracleClient.OracleConnection.Database%2A></xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override void ChangeDatabase (string value);
    parameters:
    - id: value
      type: System.String
      description: "O nome do banco de dados para usar em vez do banco de dados atual."
  overload: System.Data.OracleClient.OracleConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome do banco de dados não é válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão não está aberta."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Não é possível alterar o banco de dados."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools
  id: ClearAllPools
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ClearAllPools()
  nameWithType: OracleConnection.ClearAllPools()
  fullName: System.Data.OracleClient.OracleConnection.ClearAllPools()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Esvazia o pool de conexão."
  remarks: "ClearAllPools redefine ou esvazia o pool de conexão. Se as conexões estão em uso no momento da chamada, elas são marcadas apropriadamente e são descartados quando <xref:System.Data.OracleClient.OracleConnection.Close%2A>é chamado neles.</xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  syntax:
    content: public static void ClearAllPools ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.ClearAllPools*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  id: ClearPool(System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ClearPool(OracleConnection)
  nameWithType: OracleConnection.ClearPool(OracleConnection)
  fullName: System.Data.OracleClient.OracleConnection.ClearPool(OracleConnection)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Esvazia o pool de conexão associado com a conexão especificada."
  remarks: "Método ClearPool limpa o pool de conexão que está associado com `connection`. Se as conexões adicionais associados ao `connection` estão em uso no momento da chamada, elas são marcadas apropriadamente e são descartados quando <xref:System.Data.OracleClient.OracleConnection.Close%2A>é chamado neles.</xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  syntax:
    content: public static void ClearPool (System.Data.OracleClient.OracleConnection connection);
    parameters:
    - id: connection
      type: System.Data.OracleClient.OracleConnection
      description: "O <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> a serem limpos do pool."
  overload: System.Data.OracleClient.OracleConnection.ClearPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Close
  id: Close
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Close()
  nameWithType: OracleConnection.Close()
  fullName: System.Data.OracleClient.OracleConnection.Close()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Fecha a conexão ao banco de dados."
  remarks: "O método Close reverte qualquer transação pendente. Ele libera a conexão ao pool de conexão ou fecha a conexão se o pool de conexão está desabilitado.       Um aplicativo pode chamar fechar mais de uma vez sem gerar uma exceção.      > [!NOTE] > Quando você usa o provedor de dados .NET Framework para Oracle, você não precisa habilitar o pool de conexão porque o provedor gerencia isso automaticamente.      > [!CAUTION] > Não chamar fechar em um <xref:System.Data.OracleClient.OracleConnection>, um <xref:System.Data.OracleClient.OracleDataReader>, ou qualquer outro objeto gerenciado no `Finalize` método de sua classe</xref:System.Data.OracleClient.OracleDataReader> </xref:System.Data.OracleClient.OracleConnection> Em um finalizador, você só deve liberar recursos não gerenciados que sua classe possui diretamente. Se sua classe não possui todos os recursos não gerenciados, não inclua um `Finalize` método em sua definição de classe. Para obter mais informações, consulte [coleta de lixo](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
  fullName: System.Data.OracleClient.OracleConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém ou define a cadeia de caracteres usada para abrir um banco de dados Oracle."
  remarks: "ConnectionString pode ser definido apenas quando a conexão é fechada.       Você pode usar a propriedade ConnectionString para se conectar a um banco de dados. O exemplo a seguir ilustra uma cadeia de caracteres de conexão típica.      ```   &quot;Data Source=Oracle8i;Integrated Security=yes&quot;   ```Muitas das configurações especificadas na cadeia de caracteres têm propriedades correspondentes de somente leitura (por exemplo, `Data Source=MyServer`, que corresponde do <xref:System.Data.OracleClient.OracleConnection.DataSource%2A>propriedade).</xref:System.Data.OracleClient.OracleConnection.DataSource%2A> Quando a cadeia de caracteres de conexão é definida, todas essas propriedades são atualizadas, a menos que um erro for detectado, caso em que nenhuma das propriedades são atualizadas. <xref:System.Data.OracleClient.OracleConnection>propriedades retornam apenas as configurações padrão ou as configurações especificadas em ConnectionString.</xref:System.Data.OracleClient.OracleConnection>       Redefinir o ConnectionString em uma conexão fechada redefine todos os conexão cadeia valores (e as propriedades relacionadas), incluindo a senha.       A cadeia de caracteres de conexão é analisada imediatamente depois que está sendo definido. Se a análise revela erros de sintaxe, uma exceção de tempo de execução, como <xref:System.ArgumentException>, será gerado.</xref:System.ArgumentException> Outros erros podem ser encontrados somente quando é feita uma tentativa de abrir a conexão.       O formato básico de uma cadeia de caracteres de conexão é uma série de pares de palavra-chave/valor separados por ponto e vírgula. O sinal de igual (=) conecta-se a cada palavra-chave e seu valor. Para incluir valores que contêm um ponto e vírgula, caractere de aspas simples ou caractere de aspas duplas, o valor deve estar entre aspas duplas. Se o valor contiver um ponto e vírgula e um caractere de aspas duplas, o valor pode ser colocado entre aspas simples. A aspa simples também é útil se o valor começar com um caractere de aspas duplas. Por outro lado, as aspas duplas podem ser usada se o valor começar com uma aspa simples. Se o valor contiver caracteres de aspas simples e aspas duplas, o caractere de aspas usado para colocar o valor deve ser dupla toda vez que ocorrer dentro do valor.       Para incluir anterior ou espaços à direita no valor de cadeia de caracteres, o valor deve ser colocado entre aspas simples ou aspas duplas. Espaços à esquerda ou à direita em torno de inteiro, booliano ou valores enumerados são ignorados, mesmo se o entre aspas. No entanto, os espaços dentro de uma palavra-chave literal de cadeia de caracteres ou valor são preservados. Aspas simples ou duplas podem ser usadas em uma cadeia de conexão sem o uso de delimitadores, a menos que um caractere de aspas é o primeiro ou último caractere no valor, por exemplo, `Data Source= my&quot;Server` ou `Data Source= my&quot;Server`.       Para incluir um sinal de igual (=) em uma palavra-chave ou um valor, ele deve ser precedido por outro sinal de igual. Por exemplo, na cadeia de conexão hipotético ```   &quot;key==word=value&quot;   ``` a palavra-chave é &quot;chave = word&quot; e o valor é &quot;valor&quot;.       Se uma palavra-chave específica em um par de palavra-chave/valor ocorre mais de uma vez em uma cadeia de caracteres de conexão, a última ocorrência será usada no conjunto de valor.       Palavras-chave diferenciam maiusculas de minúsculas.       A tabela a seguir lista os nomes válidos de valores em ConnectionString.      | Nome | Padrão | Descrição |   |----------|-------------|-----------------|   | Fonte de dados<br /><br /> -ou-<br /><br /> Servidor | | O nome ou endereço de rede da instância do Oracle ao qual se conectar. |   | Segurança integrada |&quot; False&quot;| Se a conexão for uma conexão segura ou não.<br /><br /> Valores reconhecidos são `true` (recomendado), `false`, `yes`, e `no`. |   | Senha | | A senha para a conta de Oracle logon. Para manter um alto nível de segurança, é altamente recomendável que você use a palavra-chave de segurança integrada. |   | Persistência de segurança |&quot; False&quot;| Quando definido como `false` ou `no` (recomendado), informações de segurança como a senha não são retornadas como parte da conexão se a conexão for aberta ou já tenha sido aberto <xref:System.Data.OracleClient.OracleConnection.State%2A>.</xref:System.Data.OracleClient.OracleConnection.State%2A> Redefinir a cadeia de caracteres de conexão redefine todos os valores de cadeia de caracteres de conexão, inclusive a senha.<br /><br /> Valores reconhecidos são `true`, `false`, `yes`, e `no`. |   | Unicode |&quot; False&quot;| Especifica se o provedor de dados .NET Framework para Oracle usa chamadas de API de modo UTF16. Esta palavra-chave é ignorada exceto ao usar o software de cliente Oracle9i. |   | ID de usuário | | A conta de logon do Oracle. Para manter um alto nível de segurança, é altamente recomendável que você use a palavra-chave de segurança integrada. |       A tabela a seguir lista os nomes válidos para conexão ao pool de valores em ConnectionString.      | Nome | Padrão | Descrição |   |----------|-------------|-----------------|   | Tempo de vida de Conexão |&0; | Quando uma conexão é retornado para o pool, sua hora de criação é comparada com a hora atual e a conexão é destruído se esse período de tempo (em segundos) excede o valor especificado pelo `Connection Lifetime`. Isso é útil em configurações de cluster para forçar o balanceamento de carga entre um servidor em execução e um servidor apenas colocado online.<br /><br /> Um valor de zero faz com que as conexões em pool com o tempo limite de conexão máximo. |   | Inscrever-se |&quot; True&quot;| Quando `true` ou `yes`, pooler de inscreve automaticamente a conexão no contexto de transação atual do thread de criação.<br /><br /> Valores reconhecidos são `true`, `false`, `yes`, e `no`. |   | Tamanho máximo do Pool |&100; | O número máximo de conexões permitidas no pool. Definindo o `Max Pool Size` valor ConnectionString pode afetar o desempenho. Se você pretende criar e ativamente usa mais de 100 conexões, você deve aumentar `Max Pool Size` para um valor que aproxima o uso de conexão de estado estacionário para o aplicativo. |   | Tamanho mínimo do Pool | 0 | O número mínimo de conexões permitidas no pool. |   | Pooling |&quot; True&quot;| Quando `true` ou `yes`, o <xref:System.Data.OracleClient.OracleConnection>objeto é obtido do pool apropriado, ou se for necessário, é criado e adicionado ao pool apropriado.</xref:System.Data.OracleClient.OracleConnection><br /><br /> Valores reconhecidos são `true`, `false`, `yes`, e `no`. |       Ao definir a palavra-chave ou valores que exigem um valor booliano de pooling de conexão, você pode usar &quot;Sim&quot;, em vez de &quot;true&quot; e &quot;não&quot;, em vez de &quot;false&quot;. Valores inteiros são representados como cadeias de caracteres."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and sets some of its properties in the connection string.  \n  \n [!code-vb[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_15_1.vb)]\n [!code-cs[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.oracleclie_15_1.cs)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "A cadeia de caracteres de conexão de Oracle que inclui configurações, como o nome do servidor, necessário para estabelecer a conexão inicial. O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Data.OracleClient.OracleConnection.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
  fullName: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém o tempo de espera para estabelecer uma conexão antes de encerrar a tentativa e gerar um erro."
  remarks: "Você pode definir a quantidade de tempo de espera de uma conexão de tempo limite usando o `Connect Timeout` ou `Connection Timeout` palavras-chave na cadeia de conexão. Um valor de 0 não indica nenhum limite e deve ser evitado em um <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>porque a tentativa de conexão aguardará indefinidamente.</xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>      > [!NOTE] > Diferentemente o `Connection` objeto os outros provedores de dados de .NET Framework (SQL Server, OLE DB e ODBC), <xref:System.Data.OracleClient.OracleConnection>não oferece suporte a uma propriedade ConnectionTimeout.</xref:System.Data.OracleClient.OracleConnection> Definindo um tempo limite de conexão com uma propriedade ou na cadeia de conexão não tem nenhum efeito e o valor retornado é sempre zero. <xref:System.Data.OracleClient.OracleConnection>também não dá suporte para um <xref:System.Data.OracleClient.OracleConnection.Database%2A>propriedade ou um <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>método.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> </xref:System.Data.OracleClient.OracleConnection.Database%2A></xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "O tempo (em segundos) de espera para uma conexão abrir. O valor padrão é 15 segundos."
  overload: System.Data.OracleClient.OracleConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor especificado é menor que 0."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: OracleConnection.CreateCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cria e retorna um <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> objeto associado a <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "Um <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> objeto."
  overload: System.Data.OracleClient.OracleConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: OracleConnection.CreateDbCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "A ser adicionado."
  overload: System.Data.OracleClient.OracleConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Database
  id: Database
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Database
  nameWithType: OracleConnection.Database
  fullName: System.Data.OracleClient.OracleConnection.Database
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém o nome do banco de dados atual ou o banco de dados a ser usado depois que uma conexão é aberta."
  remarks: "A propriedade de banco de dados atualiza dinamicamente. Se você alterar o banco de dados atual usando uma instrução SQL ou o <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>método, uma mensagem informativa será enviada e a propriedade é atualizada automaticamente.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>      > [!NOTE] > Diferentemente o `Connection` objeto os outros provedores de dados de .NET Framework (SQL Server, OLE DB e ODBC), <xref:System.Data.OracleClient.OracleConnection>não oferece suporte a um <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>propriedade.</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> </xref:System.Data.OracleClient.OracleConnection> Definindo um tempo limite de conexão com uma propriedade ou na cadeia de conexão não tem nenhum efeito e o valor retornado é sempre zero. <xref:System.Data.OracleClient.OracleConnection>também não suporta uma propriedade de banco de dados ou um <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>método.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A></xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "O nome do banco de dados atual ou o nome do banco de dados a ser usado depois que uma conexão é aberta. O valor padrão é uma cadeia de caracteres vazia."
  overload: System.Data.OracleClient.OracleConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.DataSource
  id: DataSource
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: OracleConnection.DataSource
  fullName: System.Data.OracleClient.OracleConnection.DataSource
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém o nome do servidor Oracle ao qual se conectar."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_7_1.vb)]\n [!code-cs[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.oracleclie_7_1.cs)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "O nome do servidor Oracle ao qual se conectar. O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Data.OracleClient.OracleConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleConnection.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Data.OracleClient.OracleConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OracleConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inscrever-se na transação especificada como uma transação distribuída."
  remarks: "Novo no ADO.NET 2.0 é suporte para usar o <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>método para se inscrever em uma transação distribuída.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Porque ele pede uma conexão em um <xref:System.Transactions.Transaction>instância, **EnlistTransaction** aproveita a funcionalidade disponível a <xref:System.Transactions>distribuídas de namespace para o gerenciamento de transações, tornando-o melhor **EnlistDistributedTransaction** para essa finalidade.</xref:System.Transactions> </xref:System.Transactions.Transaction> Para obter mais informações, consulte [transações distribuídas](~/add/includes/ajax-current-ext-md.md).       Você pode continuar a inscrever-se em uma transação distribuída existente usando o método EnlistDistributedTransaction se a inscrição automática está desabilitada. Inscrição em uma transação distribuída existente garante que, se a transação é confirmada ou revertida, as modificações feitas pelo código na fonte de dados são também confirmadas ou revertidas.       EnlistDistributedTransaction retornará uma exceção se o <xref:System.Data.OracleClient.OracleConnection>já iniciou uma transação usando <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> </xref:System.Data.OracleClient.OracleConnection> No entanto, se a transação é uma transação local iniciada na fonte de dados (por exemplo, executando explicitamente a instrução BEGIN TRANSACTION usando um <xref:System.Data.OracleClient.OracleCommand>objeto), EnlistDistributedTransaction reverte a transação local e se inscrever na transação distribuída existente conforme solicitado.</xref:System.Data.OracleClient.OracleCommand> Você não receberá o aviso que a transação local foi revertida e responsável por gerenciar todas as transações locais não é iniciadas usando <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction distributedTransaction);
    parameters:
    - id: distributedTransaction
      type: System.EnterpriseServices.ITransaction
      description: "Uma referência a um existente <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> em que a inscrição."
  overload: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: OracleConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inscrever-se na transação especificada como uma transação distribuída."
  remarks: "Novo no ADO.NET 2.0 é suporte para usar o <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>método para se inscrever em uma transação distribuída.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Porque ele pede uma conexão em um <xref:System.Transactions.Transaction>instância, **EnlistTransaction** tira proveito da funcionalidade disponível no <xref:System.Transactions>distribuídas de namespace para o gerenciamento de transações, tornando-o melhor **EnlistDistributedTransaction**, que usa um **System.EnterpriseServices.ITransaction** objeto.</xref:System.Transactions> </xref:System.Transactions.Transaction> Ele também tem semânticas ligeiramente diferentes: quando uma conexão é explicitamente inscrito em uma transação, ele não pode ser unenlisted ou inscrito em outra transação até que a primeira transação seja concluída. Para obter mais informações sobre transações distribuídas, consulte [transações distribuídas](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Uma referência a um existente <xref href=&quot;System.Transactions.Transaction&quot;> </xref> em que a inscrição."
  overload: System.Data.OracleClient.OracleConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema
  id: GetSchema
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: OracleConnection.GetSchema()
  fullName: System.Data.OracleClient.OracleConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Retorna informações de esquema para a fonte de dados deste <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Um <xref href=&quot;System.Data.DataTable&quot;> </xref> que contém informações de esquema."
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: OracleConnection.GetSchema(String)
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Retorna informações de esquema para a fonte de dados deste <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> usando a cadeia de caracteres especificada para o nome do esquema."
  remarks: "Consultas que usam GetSchema diferenciam maiusculas de minúsculas. Devido ao tratamento da Oracle de casos quando um esquema é criado pela primeira vez, isso pode levar a resultados inesperados.       Se o esquema foi criado sem aspas`,` Oracle armazena o nome do objeto em letras maiusculas. Se o esquema foi criado com aspas, o Oracle armazena o nome do objeto em maiusculas e minúsculas que fornecido.       Por exemplo, suponha que você crie uma tabela chamada MyTable, usando uma das duas instruções a seguir: `CREATE TABLE MyTable ...` `CREATE TABLE &quot;MyTable&quot; ...` para recuperar informações sobre essa tabela por meio de **GetSchema** método no primeiro caso, você precisa passar &quot;MYTABLE&quot; como um argumento.        No segundo caso, você precisa passar &quot;MyTable&quot; como um argumento."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Especifica o nome do esquema para retornar."
    return:
      type: System.Data.DataTable
      description: "Um <xref href=&quot;System.Data.DataTable&quot;> </xref> que contém informações de esquema."
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>é especificado como nulo."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: OracleConnection.GetSchema(String,String[])
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Retorna informações de esquema para a fonte de dados deste <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> usando a cadeia de caracteres especificada para o nome do esquema e a matriz de cadeia de caracteres especificada para os valores de restrição."
  remarks: "O `restrictionValues` parâmetro pode fornecer n profundidade de valores que são especificadas na coleção de restrições para uma coleção específica. Para definir valores em uma restrição de determinado e não definir os valores das outras restrições, você precisa definir as restrições anteriores para nulo e, em seguida, coloque o valor apropriado para a restrição que você deseja especificar um valor para.       Um exemplo disso é a coleção de &quot;Tabelas&quot;. Se a coleção &quot;Tabelas&quot; tem restrições de 3: banco de dados, o proprietário e o nome da tabela; e você quiser obter somente as tabelas associadas com o proprietário &quot;Carl&quot;, você precisa passar os valores a seguir (no mínimo): null, &quot;Carl&quot;. Se um valor de restrição não for passado, os valores padrão são usados para essa restrição. Isso é o mesmo mapeamento como passar null, que é diferente de passar uma cadeia de caracteres vazia para o valor do parâmetro. Nesse caso, a cadeia de caracteres vazia (&quot;&quot;) é considerado o valor para o parâmetro especificado.       As consultas que usam <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A>diferenciam maiusculas de minúsculas.</xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> Devido ao tratamento da Oracle de casos quando um esquema é criado pela primeira vez, isso pode levar a resultados inesperados.       Se o esquema foi criado sem aspas`,` Oracle armazena o nome do objeto em letras maiusculas. Se o esquema foi criado com aspas, o Oracle armazena o nome do objeto em maiusculas e minúsculas que fornecido.       Por exemplo, suponha que você crie uma tabela chamada MyTable, usando uma das duas instruções a seguir: `CREATE TABLE MyTable ...` `CREATE TABLE &quot;MyTable&quot; ...` para recuperar informações sobre essa tabela por meio de **GetSchema** método no primeiro caso, você precisa passar &quot;MYTABLE&quot; como um argumento.        No segundo caso, você precisa passar &quot;MyTable&quot; como um argumento."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Especifica o nome do esquema para retornar."
    - id: restrictionValues
      type: System.String[]
      description: "Um conjunto de valores de restrição do esquema solicitado."
    return:
      type: System.Data.DataTable
      description: "Um <xref href=&quot;System.Data.DataTable&quot;> </xref> que contém informações de esquema."
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>é especificado como nulo."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: OracleConnection.InfoMessage
  fullName: System.Data.OracleClient.OracleConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ocorre quando o Oracle envia um aviso ou uma mensagem informativa."
  remarks: "Como o provedor de dados .NET Framework para Oracle usa o Oracle Call Interface (OCI), sempre que o provedor de dados recebe uma mensagem de êxito com informações, é gerado um evento do InfoMessage. Um exemplo seria criar um procedimento armazenado que contém um erro de sintaxe. A chamada para o <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>método teria êxito.</xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> No entanto um evento do InfoMessage será gerado informam sobre o erro de sintaxe.       Os clientes que desejam processar avisos ou mensagens informativas enviadas pelo servidor devem criar um <xref:System.Data.OracleClient.OracleInfoMessageEventHandler>delegado para escutar esse evento.</xref:System.Data.OracleClient.OracleInfoMessageEventHandler>"
  syntax:
    content: public event System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.OracleClient.OracleInfoMessageEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Open
  id: Open
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Open()
  nameWithType: OracleConnection.Open()
  fullName: System.Data.OracleClient.OracleConnection.Open()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Abre uma conexão para um banco de dados com as configurações de propriedade especificadas por <xref:System.Data.OracleClient.OracleConnection.ConnectionString*>.</xref:System.Data.OracleClient.OracleConnection.ConnectionString*>"
  remarks: "O <xref:System.Data.OracleClient.OracleConnection>desenha uma conexão aberta do pool de conexão, se houver um disponível.</xref:System.Data.OracleClient.OracleConnection> Caso contrário, ele estabelece uma nova conexão para o banco de dados.      > [!NOTE] > Se o <xref:System.Data.OracleClient.OracleConnection>sai do escopo, a conexão representa não será fechado automaticamente.</xref:System.Data.OracleClient.OracleConnection> Portanto, você deve fechar explicitamente a conexão chamando <xref:System.Data.OracleClient.OracleConnection.Close%2A>.</xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão não está aberta."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Não é possível alterar o banco de dados."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
  fullName: System.Data.OracleClient.OracleConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém uma cadeia de caracteres que contém a versão do servidor ao qual o cliente está conectado."
  remarks: "A propriedade ServerVersion está no formato de versão do Oracle. Por exemplo, o formato para uma versão Oracle8 é uma cadeia de caracteres no formato &quot;8.1.7.0.0 Oracle8 versão 8.1.7.0.0 - produção.&quot;"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OracleConnection.ServerVersion#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_3_1.vb)]\n [!code-cs[Classic WebData OracleConnection.ServerVersion#1](~/add/codesnippet/csharp/p-system.data.oracleclie_3_1.cs)]"
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "A versão do servidor conectado."
  overload: System.Data.OracleClient.OracleConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A conexão é fechada."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.State
  id: State
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: State
  nameWithType: OracleConnection.State
  fullName: System.Data.OracleClient.OracleConnection.State
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém o estado atual da conexão."
  remarks: "As alterações de estado permitidos são: - na `Closed` para `Open`, usando o `Open` método o <xref:System.Data.OracleClient.OracleConnection>objeto.</xref:System.Data.OracleClient.OracleConnection>      -From `Open` para `Closed`, usando o <xref:System.Data.OracleClient.OracleConnection.Close%2A>método o <xref:System.Data.OracleClient.OracleConnection>objeto.</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  example:
  - "The following example creates an instance of a derived class, <xref:System.Data.OracleClient.OracleConnection>, sets its <xref:System.Data.IDbConnection.ConnectionString%2A>, and displays its State.  \n  \n [!code-cs[Classic WebData OracleConnection.State#1](~/add/codesnippet/csharp/p-system.data.oracleclie_9_1.cs)]\n [!code-vb[Classic WebData OracleConnection.State#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_9_1.vb)]"
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "Uma combinação bit a bit do <xref href=&quot;System.Data.ConnectionState&quot;> </xref> valores. O padrão é <xref uid=&quot;langword_csharp_Closed&quot; name=&quot;Closed&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OracleConnection.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cria um novo objeto que é uma cópia da instância atual."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Data.OracleClient.OracleConnection>instância é convertida em um <xref:System.ICloneable>interface.</xref:System.ICloneable> </xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um novo objeto que é uma cópia desta instância."
  overload: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.Data.OracleClient.OracleConnection.#ctor
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection()
  nameWithType: OracleConnection.OracleConnection()
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection()
- uid: System.Data.OracleClient.OracleConnection.#ctor(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection(String)
  nameWithType: OracleConnection.OracleConnection(String)
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: OracleConnection.BeginTransaction()
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction()
- uid: System.Data.OracleClient.OracleTransaction
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleTransaction
  nameWithType: OracleTransaction
  fullName: System.Data.OracleClient.OracleTransaction
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: OracleConnection.ChangeDatabase(String)
  fullName: System.Data.OracleClient.OracleConnection.ChangeDatabase(String)
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearAllPools()
  nameWithType: OracleConnection.ClearAllPools()
  fullName: System.Data.OracleClient.OracleConnection.ClearAllPools()
- uid: System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearPool(OracleConnection)
  nameWithType: OracleConnection.ClearPool(OracleConnection)
  fullName: System.Data.OracleClient.OracleConnection.ClearPool(OracleConnection)
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleConnection.Close
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Close()
  nameWithType: OracleConnection.Close()
  fullName: System.Data.OracleClient.OracleConnection.Close()
- uid: System.Data.OracleClient.OracleConnection.ConnectionString
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
  fullName: System.Data.OracleClient.OracleConnection.ConnectionString
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
  fullName: System.Data.OracleClient.OracleConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleConnection.CreateCommand
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: OracleConnection.CreateCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateCommand()
- uid: System.Data.OracleClient.OracleCommand
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleCommand
  nameWithType: OracleCommand
  fullName: System.Data.OracleClient.OracleCommand
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: OracleConnection.CreateDbCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.OracleClient.OracleConnection.Database
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Database
  nameWithType: OracleConnection.Database
  fullName: System.Data.OracleClient.OracleConnection.Database
- uid: System.Data.OracleClient.OracleConnection.DataSource
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: DataSource
  nameWithType: OracleConnection.DataSource
  fullName: System.Data.OracleClient.OracleConnection.DataSource
- uid: System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleConnection.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OracleConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: OracleConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.OracleClient.OracleConnection.GetSchema
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema()
  nameWithType: OracleConnection.GetSchema()
  fullName: System.Data.OracleClient.OracleConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: OracleConnection.GetSchema(String)
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String)
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: OracleConnection.GetSchema(String,String[])
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleConnection.InfoMessage
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: InfoMessage
  nameWithType: OracleConnection.InfoMessage
  fullName: System.Data.OracleClient.OracleConnection.InfoMessage
- uid: System.Data.OracleClient.OracleInfoMessageEventHandler
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleInfoMessageEventHandler
  nameWithType: OracleInfoMessageEventHandler
  fullName: System.Data.OracleClient.OracleInfoMessageEventHandler
- uid: System.Data.OracleClient.OracleConnection.Open
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Open()
  nameWithType: OracleConnection.Open()
  fullName: System.Data.OracleClient.OracleConnection.Open()
- uid: System.Data.OracleClient.OracleConnection.ServerVersion
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
  fullName: System.Data.OracleClient.OracleConnection.ServerVersion
- uid: System.Data.OracleClient.OracleConnection.State
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: State
  nameWithType: OracleConnection.State
  fullName: System.Data.OracleClient.OracleConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OracleConnection.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleConnection.#ctor*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection.OracleConnection
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: OracleConnection.BeginDbTransaction
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: OracleConnection.BeginTransaction
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: OracleConnection.ChangeDatabase
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearAllPools
  nameWithType: OracleConnection.ClearAllPools
- uid: System.Data.OracleClient.OracleConnection.ClearPool*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearPool
  nameWithType: OracleConnection.ClearPool
- uid: System.Data.OracleClient.OracleConnection.Close*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Close
  nameWithType: OracleConnection.Close
- uid: System.Data.OracleClient.OracleConnection.ConnectionString*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
- uid: System.Data.OracleClient.OracleConnection.CreateCommand*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateCommand
  nameWithType: OracleConnection.CreateCommand
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: OracleConnection.CreateDbCommand
- uid: System.Data.OracleClient.OracleConnection.Database*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Database
  nameWithType: OracleConnection.Database
- uid: System.Data.OracleClient.OracleConnection.DataSource*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: DataSource
  nameWithType: OracleConnection.DataSource
- uid: System.Data.OracleClient.OracleConnection.Dispose*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Dispose
  nameWithType: OracleConnection.Dispose
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: OracleConnection.EnlistDistributedTransaction
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: OracleConnection.EnlistTransaction
- uid: System.Data.OracleClient.OracleConnection.GetSchema*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema
  nameWithType: OracleConnection.GetSchema
- uid: System.Data.OracleClient.OracleConnection.Open*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Open
  nameWithType: OracleConnection.Open
- uid: System.Data.OracleClient.OracleConnection.ServerVersion*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
- uid: System.Data.OracleClient.OracleConnection.State*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: State
  nameWithType: OracleConnection.State
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OracleConnection.System.ICloneable.Clone
