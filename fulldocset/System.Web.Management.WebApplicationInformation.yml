### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebApplicationInformation
  id: WebApplicationInformation
  children:
  - System.Web.Management.WebApplicationInformation.ApplicationDomain
  - System.Web.Management.WebApplicationInformation.ApplicationPath
  - System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
  - System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebApplicationInformation.MachineName
  - System.Web.Management.WebApplicationInformation.ToString
  - System.Web.Management.WebApplicationInformation.TrustLevel
  langs:
  - csharp
  name: WebApplicationInformation
  nameWithType: WebApplicationInformation
  fullName: System.Web.Management.WebApplicationInformation
  type: Class
  summary: "Fornece informações associadas a eventos de integridade."
  remarks: "Monitoramento de integridade do ASP.NET permite que a equipe de produção e operações gerenciar a implantação de aplicativos da Web. O <xref:System.Web.Management?displayProperty=fullName>namespace contém os tipos de eventos responsáveis pela compactação de dados de status de integridade do aplicativo e os tipos de provedor responsáveis pelo processamento de dados.</xref:System.Web.Management?displayProperty=fullName> Ele também contém tipos de suporte para ajudá-lo durante o gerenciamento de eventos de integridade.       Instâncias da classe WebApplicationInformation contêm informações que são obtidas usando qualquer um dos tipos que derivam de <xref:System.Web.Management.WebManagementEvent>tipo.</xref:System.Web.Management.WebManagementEvent>       Seu aplicativo precisa as permissões apropriadas para acessar informações protegidas fornecidas por este tipo.       A seguir está um trecho de um arquivo de configuração que você pode usar para habilitar o ASP.NET para eventos de erro de log que contêm informações do aplicativo.      ```   <healthMonitoring      enabled=&quot;true&quot; heartBeatInterval=&quot;0&quot;>          <rules>        <add           name=&quot;All Errors Default&quot;          eventName=&quot;All Errors&quot;          provider=&quot;EventLogProvider&quot;          profile=&quot;Default&quot;          minInterval=&quot;00:01:00&quot; />       </rules>      </healthMonitoring>   ```      > [!NOTE]> Na maioria dos casos, você será capaz de usar os tipos de monitoramento de integridade do ASP.NET, conforme implementado e controlará o sistema de monitoramento de integridade, especificando valores a `healthMonitoring` seção de configuração. Você também pode derivar dos tipos de monitoramento de integridade para criar seus próprios eventos personalizados e provedores. Para obter um exemplo de criação de uma classe de evento personalizado, consulte o exemplo fornecido neste tópico."
  example:
  - "The following code example has two parts. The first part is an excerpt of the configuration file that enables ASP.NET to use a custom event. The second shows how to create that custom event by using the WebApplicationInformation class.  \n  \n Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartBeatInterval=\"0\">  \n  \n  <eventMappings>   \n    <add name=\"SampleApplicationInformation\"   \n        type=\"SamplesAspNet.SampleWebApplicationInformation, webapplicationinformation, Version=1.0.1585.27289, Culture=neutral, PublicKeyToken=3648e5c763a8239f, processorArchitecture=MSIL\"/>   \n  </eventMappings>  \n  \n  <rules>   \n    <add name=\"Custom Application Information\"  \n      eventName=\"SampleApplicationInformation\"   \n      provider=\"EventLogProvider\"    \n      profile=\"Default\"/>   \n</rules>  \n  \n</healthMonitoring>  \n```  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#1](~/add/codesnippet/visualbasic/t-system.web.management._26_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#1](~/add/codesnippet/csharp/t-system.web.management._26_1.cs)]"
  syntax:
    content: public sealed class WebApplicationInformation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.ApplicationDomain
  id: ApplicationDomain
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: ApplicationDomain
  nameWithType: WebApplicationInformation.ApplicationDomain
  fullName: System.Web.Management.WebApplicationInformation.ApplicationDomain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Obtém o nome de domínio de aplicativo atual."
  remarks: ''
  example:
  - "The following code example shows how to obtain the application domain name.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#4](~/add/codesnippet/visualbasic/p-system.web.management._46_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#4](~/add/codesnippet/csharp/p-system.web.management._46_1.cs)]"
  syntax:
    content: public string ApplicationDomain { get; }
    return:
      type: System.String
      description: "Obtém o nome de domínio de aplicativo."
  overload: System.Web.Management.WebApplicationInformation.ApplicationDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.ApplicationPath
  id: ApplicationPath
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: ApplicationPath
  nameWithType: WebApplicationInformation.ApplicationPath
  fullName: System.Web.Management.WebApplicationInformation.ApplicationPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Obtém o caminho físico do aplicativo."
  remarks: "Esta propriedade requer permissões apropriadas para ser acessado. Consulte a seção de permissões."
  example:
  - "The following code example shows how to obtain the application physical path.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#5](~/add/codesnippet/visualbasic/p-system.web.management._44_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#5](~/add/codesnippet/csharp/p-system.web.management._44_1.cs)]"
  syntax:
    content: public string ApplicationPath { get; }
    return:
      type: System.String
      description: "O caminho físico do aplicativo."
  overload: System.Web.Management.WebApplicationInformation.ApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
  id: ApplicationVirtualPath
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: ApplicationVirtualPath
  nameWithType: WebApplicationInformation.ApplicationVirtualPath
  fullName: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Obtém o caminho lógico do aplicativo."
  remarks: ''
  example:
  - "The following code example shows how to obtain the application logical path.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#6](~/add/codesnippet/visualbasic/p-system.web.management._36_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#6](~/add/codesnippet/csharp/p-system.web.management._36_1.cs)]"
  syntax:
    content: public string ApplicationVirtualPath { get; }
    return:
      type: System.String
      description: "O caminho lógico do aplicativo."
  overload: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)
  id: FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: FormatToString(WebEventFormatter)
  nameWithType: WebApplicationInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebApplicationInformation.FormatToString(WebEventFormatter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Formata as informações do aplicativo."
  remarks: "O método FormatToString fornece um formato uniforme para obter informações de evento, que é útil se os dados do evento devem ser registrados e posteriormente apresentados ao usuário. Ele é chamado internamente quando o provedor chama uma da <xref:System.Web.Management.WebBaseEvent.ToString%2A>métodos.</xref:System.Web.Management.WebBaseEvent.ToString%2A>      > [!NOTE] > Ao formatar suas informações de evento personalizados para exibição, substitua o método de FormatToString em vez de <xref:System.Web.Management.WebApplicationInformation.ToString%2A>método.</xref:System.Web.Management.WebApplicationInformation.ToString%2A> Isso pode evitar a substituição ou violação com informações confidenciais."
  example:
  - "The following code example shows how to format custom information.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#9](~/add/codesnippet/visualbasic/e7244ae1-98b8-46f8-b4c6-_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#9](~/add/codesnippet/csharp/e7244ae1-98b8-46f8-b4c6-_1.cs)]"
  syntax:
    content: public void FormatToString (System.Web.Management.WebEventFormatter formatter);
    parameters:
    - id: formatter
      type: System.Web.Management.WebEventFormatter
      description: "O <xref href=&quot;System.Web.Management.WebEventFormatter&quot;> </xref> que contém as configurações de recuo e tabulação usadas para formatar as informações de evento de integridade da Web."
  overload: System.Web.Management.WebApplicationInformation.FormatToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.MachineName
  id: MachineName
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: MachineName
  nameWithType: WebApplicationInformation.MachineName
  fullName: System.Web.Management.WebApplicationInformation.MachineName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Obtém o nome de máquina do aplicativo."
  remarks: ''
  example:
  - "The following code example shows how to obtain the machine name.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#7](~/add/codesnippet/visualbasic/p-system.web.management._25_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#7](~/add/codesnippet/csharp/p-system.web.management._25_1.cs)]"
  syntax:
    content: public string MachineName { get; }
    return:
      type: System.String
      description: "O nome do computador onde o aplicativo está sendo executado."
  overload: System.Web.Management.WebApplicationInformation.MachineName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.ToString
  id: ToString
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: ToString()
  nameWithType: WebApplicationInformation.ToString()
  fullName: System.Web.Management.WebApplicationInformation.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Formata as informações de evento para fins de exibição."
  remarks: "O <xref:System.Web.Management.WebBaseEvent.ToString%2A>método formata as informações de evento chamando o <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A>método.</xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> </xref:System.Web.Management.WebBaseEvent.ToString%2A>      > [!NOTE] > Ao formatar suas informações de evento personalizados para exibição, substitua o <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A>método em vez desse método ToString.</xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> Isso pode evitar a substituição ou violação com informações confidenciais."
  example:
  - For an example of using the ToString method, see <xref:System.Web.Management.WebEventProvider>.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "As informações do evento."
  overload: System.Web.Management.WebApplicationInformation.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.TrustLevel
  id: TrustLevel
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: TrustLevel
  nameWithType: WebApplicationInformation.TrustLevel
  fullName: System.Web.Management.WebApplicationInformation.TrustLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Obtém o nível de confiança do aplicativo."
  remarks: "Esta propriedade requer permissões apropriadas para ser acessado. Consulte a seção de permissões."
  example:
  - "The following example shows how to obtain the application-trust-level information.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#8](~/add/codesnippet/visualbasic/p-system.web.management._2_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#8](~/add/codesnippet/csharp/p-system.web.management._2_1.cs)]"
  syntax:
    content: public string TrustLevel { get; }
    return:
      type: System.String
      description: "O nível de confiança do aplicativo."
  overload: System.Web.Management.WebApplicationInformation.TrustLevel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Management.WebApplicationInformation.ApplicationDomain
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationDomain
  nameWithType: WebApplicationInformation.ApplicationDomain
  fullName: System.Web.Management.WebApplicationInformation.ApplicationDomain
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Management.WebApplicationInformation.ApplicationPath
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationPath
  nameWithType: WebApplicationInformation.ApplicationPath
  fullName: System.Web.Management.WebApplicationInformation.ApplicationPath
- uid: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationVirtualPath
  nameWithType: WebApplicationInformation.ApplicationVirtualPath
  fullName: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
- uid: System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: FormatToString(WebEventFormatter)
  nameWithType: WebApplicationInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebApplicationInformation.FormatToString(WebEventFormatter)
- uid: System.Web.Management.WebEventFormatter
  parent: System.Web.Management
  isExternal: false
  name: WebEventFormatter
  nameWithType: WebEventFormatter
  fullName: System.Web.Management.WebEventFormatter
- uid: System.Web.Management.WebApplicationInformation.MachineName
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: MachineName
  nameWithType: WebApplicationInformation.MachineName
  fullName: System.Web.Management.WebApplicationInformation.MachineName
- uid: System.Web.Management.WebApplicationInformation.ToString
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ToString()
  nameWithType: WebApplicationInformation.ToString()
  fullName: System.Web.Management.WebApplicationInformation.ToString()
- uid: System.Web.Management.WebApplicationInformation.TrustLevel
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: TrustLevel
  nameWithType: WebApplicationInformation.TrustLevel
  fullName: System.Web.Management.WebApplicationInformation.TrustLevel
- uid: System.Web.Management.WebApplicationInformation.ApplicationDomain*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationDomain
  nameWithType: WebApplicationInformation.ApplicationDomain
- uid: System.Web.Management.WebApplicationInformation.ApplicationPath*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationPath
  nameWithType: WebApplicationInformation.ApplicationPath
- uid: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationVirtualPath
  nameWithType: WebApplicationInformation.ApplicationVirtualPath
- uid: System.Web.Management.WebApplicationInformation.FormatToString*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: FormatToString
  nameWithType: WebApplicationInformation.FormatToString
- uid: System.Web.Management.WebApplicationInformation.MachineName*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: MachineName
  nameWithType: WebApplicationInformation.MachineName
- uid: System.Web.Management.WebApplicationInformation.ToString*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ToString
  nameWithType: WebApplicationInformation.ToString
- uid: System.Web.Management.WebApplicationInformation.TrustLevel*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: TrustLevel
  nameWithType: WebApplicationInformation.TrustLevel
