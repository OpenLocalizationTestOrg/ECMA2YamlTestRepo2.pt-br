### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SHA1Managed
  id: SHA1Managed
  children:
  - System.Security.Cryptography.SHA1Managed.#ctor
  - System.Security.Cryptography.SHA1Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA1Managed.HashFinal
  - System.Security.Cryptography.SHA1Managed.Initialize
  langs:
  - csharp
  name: SHA1Managed
  nameWithType: SHA1Managed
  fullName: System.Security.Cryptography.SHA1Managed
  type: Class
  summary: "Calcula o <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref> hash para os dados de entrada usando a biblioteca gerenciada."
  remarks: "O hash é usado como um valor exclusivo de tamanho fixo que representa uma grande quantidade de dados. Hashes de dois conjuntos de dados devem corresponder somente se os dados correspondentes também correspondem. Pequenas alterações aos dados resultar em grandes alterações imprevisíveis no hash.       Isso é uma implementação totalmente gerenciada de <xref:System.Security.Cryptography.SHA1>que não quebra CAPI.</xref:System.Security.Cryptography.SHA1>       O tamanho de hash para o algoritmo de SHA1Managed é de 160 bits."
  example:
  - "The following example computes the SHA1Managed hash for `data` and stores it in `result`. This example assumes that there is a predefined constant `DATA_SIZE`.  \n  \n [!code-cpp[Classic SHA1Managed Example#1](~/add/codesnippet/cpp/t-system.security.crypto_56_1.cpp)]\n [!code-cs[Classic SHA1Managed Example#1](~/add/codesnippet/csharp/t-system.security.crypto_56_1.cs)]\n [!code-vb[Classic SHA1Managed Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_56_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SHA1Managed : System.Security.Cryptography.SHA1
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.SHA1
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA1.Create
  - System.Security.Cryptography.SHA1.Create(System.String)
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1Managed.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SHA1Managed
  langs:
  - csharp
  name: SHA1Managed()
  nameWithType: SHA1Managed.SHA1Managed()
  fullName: System.Security.Cryptography.SHA1Managed.SHA1Managed()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.SHA1Managed&quot;> </xref> classe."
  syntax:
    content: public SHA1Managed ();
    parameters: []
  overload: System.Security.Cryptography.SHA1Managed.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Esta classe não é compatível com o algoritmo FIPS."
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA1Managed
  langs:
  - csharp
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA1Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA1Managed.HashCore(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Encaminha os dados gravados para o objeto de <xref href=&quot;System.Security.Cryptography.SHA1Managed&quot;> </xref> algoritmo de hash para computar o hash."
  syntax:
    content: protected override void HashCore (byte[] rgb, int ibStart, int cbSize);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "Os dados de entrada."
    - id: ibStart
      type: System.Int32
      description: "O deslocamento para a matriz de bytes da qual começar a usar os dados."
    - id: cbSize
      type: System.Int32
      description: "O número de bytes na matriz para usar como dados."
  overload: System.Security.Cryptography.SHA1Managed.HashCore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1Managed.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.SHA1Managed
  langs:
  - csharp
  name: HashFinal()
  nameWithType: SHA1Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA1Managed.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Retorna o computada <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref> o valor de hash depois que todos os dados foram gravado para o objeto."
  syntax:
    content: protected override byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: "O código de hash computado."
  overload: System.Security.Cryptography.SHA1Managed.HashFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1Managed.Initialize
  id: Initialize
  parent: System.Security.Cryptography.SHA1Managed
  langs:
  - csharp
  name: Initialize()
  nameWithType: SHA1Managed.Initialize()
  fullName: System.Security.Cryptography.SHA1Managed.Initialize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicializa uma instância de <xref href=&quot;System.Security.Cryptography.SHA1Managed&quot;> </xref>."
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.SHA1Managed.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.SHA1
  isExternal: false
  name: System.Security.Cryptography.SHA1
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.SHA1Managed.#ctor
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: SHA1Managed()
  nameWithType: SHA1Managed.SHA1Managed()
  fullName: System.Security.Cryptography.SHA1Managed.SHA1Managed()
- uid: System.Security.Cryptography.SHA1Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA1Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA1Managed.HashCore(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.SHA1Managed.HashFinal
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: HashFinal()
  nameWithType: SHA1Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA1Managed.HashFinal()
- uid: System.Security.Cryptography.SHA1Managed.Initialize
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: Initialize()
  nameWithType: SHA1Managed.Initialize()
  fullName: System.Security.Cryptography.SHA1Managed.Initialize()
- uid: System.Security.Cryptography.SHA1Managed.#ctor*
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: SHA1Managed
  nameWithType: SHA1Managed.SHA1Managed
- uid: System.Security.Cryptography.SHA1Managed.HashCore*
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: HashCore
  nameWithType: SHA1Managed.HashCore
- uid: System.Security.Cryptography.SHA1Managed.HashFinal*
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: HashFinal
  nameWithType: SHA1Managed.HashFinal
- uid: System.Security.Cryptography.SHA1Managed.Initialize*
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: Initialize
  nameWithType: SHA1Managed.Initialize
