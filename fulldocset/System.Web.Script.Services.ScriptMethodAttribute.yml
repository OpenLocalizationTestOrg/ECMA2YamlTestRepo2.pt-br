### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Services.ScriptMethodAttribute
  id: ScriptMethodAttribute
  children:
  - System.Web.Script.Services.ScriptMethodAttribute.#ctor
  - System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  - System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  - System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  langs:
  - csharp
  name: ScriptMethodAttribute
  nameWithType: ScriptMethodAttribute
  fullName: System.Web.Script.Services.ScriptMethodAttribute
  type: Class
  summary: "Especifica o verbo HTTP usado para invocar um método e o formato da resposta. Essa classe não pode ser herdada."
  remarks: "Este atributo é usado para especificar informações de métodos que podem ser chamados de script de cliente. O atributo permite que você especifique quais verbo HTTP (GET ou POST) pode ser usado para invocar um método. Ele também permite especificar se a resposta é formatada usando a notação JSON (JavaScript Object) ou XML.       O atributo ScriptMethodAttribute é opcional. (No entanto, os métodos que podem ser chamados de script de cliente devem ter o <xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName>atributo aplicado.).</xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName> Se um método não está marcado com ScriptMethodAttribute, o método será chamado usando o comando HTTP POST e a resposta será serializada como JSON. Você não pode substituir essa configuração de script.       ScriptMethodAttribute usa apenas os parâmetros nomeados. A seguir estão as propriedades da classe ScriptMethodAttribute que podem ser usados como parâmetros nomeados:- <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>Especifica se o método será chamado usando o comando HTTP GET.</xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> O padrão é `false`.          > [!IMPORTANT] > Configuração o <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>propriedade `true` pode representar um risco de segurança para seu aplicativo, se você estiver trabalhando com dados confidenciais ou transações.</xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> Em solicitações GET, a mensagem é codificada pelo navegador para a URL e, portanto, é um alvo fácil para violação. Para solicitações GET e POST, você deve seguir as diretrizes de segurança para proteger dados confidenciais.      - <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>Especifica se a resposta será serializada como JSON ou XML.</xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> O padrão é `Json`. O <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>propriedade é útil para especificar o XML como o tipo de retorno quando o método retorna um <xref:System.Xml.XmlDocument>ou um <xref:System.Xml.XmlElement>objeto.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlDocument> </xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>      - <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>Especifica se todos os tipos de retorno, incluindo tipos de cadeia de caracteres, são serializados como XML.</xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A> O valor de <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>propriedade será ignorada quando a resposta é serializada como JSON.</xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>       Para obter mais informações sobre como usar atributos, consulte [atributos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to apply ScriptMethodAttribute to the `GetXmlDocument` and `EchoStringAndDate` methods to specify which HTTP verb to use and to specify the response format.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class ScriptMethodAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor
  id: '#ctor'
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: ScriptMethodAttribute()
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute()
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ScriptMethodAttribute()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Script.Services.ScriptMethodAttribute&quot;> </xref> classe."
  syntax:
    content: public ScriptMethodAttribute ();
    parameters: []
  overload: System.Web.Script.Services.ScriptMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  id: ResponseFormat
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Obtém ou define o formato da resposta de método."
  remarks: "Use a propriedade ResponseFormat quando você deseja especificar o XML como o formato para o tipo de retorno. Isso é útil quando o método retorna um <xref:System.Xml.XmlDocument>ou um <xref:System.Xml.XmlElement>objeto.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlDocument>       Quando a propriedade ResponseFormat é definida como `Xml`, os campos públicos e as propriedades do tipo de retorno que têm o <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>atributo aplicado não será ignorado.</xref:System.Web.Script.Serialization.ScriptIgnoreAttribute> Isso ocorre porque serão serializados usando o <xref:System.Xml.Serialization.XmlSerializer>do objeto, em vez do <xref:System.Web.Script.Serialization.JavaScriptSerializer>objeto.</xref:System.Web.Script.Serialization.JavaScriptSerializer> </xref:System.Xml.Serialization.XmlSerializer> Você deve aplicar o <xref:System.Xml.Serialization.XmlIgnoreAttribute>atributo fazer <xref:System.Xml.Serialization.XmlSerializer>Ignorar ou ignorar, esses campos públicos e as propriedades do tipo de retorno.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlIgnoreAttribute>"
  example:
  - "The following example shows how to apply the <xref:System.Web.Script.Services.ScriptMethodAttribute> attribute to a Web method with the ResponseFormat property set to `Xml`. The return value of the method will be serialized as XML and sent to the succeeded callback function as an object of type <xref:System.Xml.XmlDocument>. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.Script.Services.ResponseFormat ResponseFormat { get; set; }
    return:
      type: System.Web.Script.Services.ResponseFormat
      description: "Uma da <xref href=&quot;System.Web.Script.Services.ResponseFormat&quot;> </xref> valores. O padrão é <xref uid=&quot;langword_csharp_Json&quot; name=&quot;Json&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  id: UseHttpGet
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
  fullName: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Obtém ou define um valor que indica se deve chamar o método usando HTTP GET."
  remarks: "Você não pode substituir essa propriedade do ECMAScript (JavaScript) no cliente. Se essa propriedade é definida como `true`, chamar o método de script sempre usará HTTP GET.       Quando essa propriedade é definida como `true`, o código de proxy do cliente usa HTTP GET para chamar o serviço Web. Cada parâmetro de entrada para o método aparece como um parâmetro de consulta na URL que é usado para chamar o método da Web. O valor do parâmetro é obtido por meio de serialização (JSON JavaScript Object Notation) e a codificação de URL do valor do parâmetro.       O uso de HTTP GET para chamar o método de serviço Web segue as mesmas diretrizes de qualquer interação do Web. HTTP GET deve ser usado apenas para operações em que não há dados confidenciais são expostos e quando a ação do servidor não tem efeitos colaterais.      > [!IMPORTANT] > Definindo a propriedade UseHttpGet como `true` pode representar um risco de segurança para seu aplicativo, se você estiver trabalhando com dados confidenciais ou transações. Em solicitações GET, a mensagem é codificada pelo navegador para a URL e, portanto, é um alvo fácil para violação."
  example:
  - "The following example shows how to apply <xref:System.Web.Script.Services.ScriptMethodAttribute> to a Web method with the UseHttpGet property set to `true`. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool UseHttpGet { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o método é chamado usando o comando HTTP GET. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o método é invocado, usando o comando HTTP POST. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  id: XmlSerializeString
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
  fullName: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Obtém ou define um valor que indica se todos retornam tipos são serializados como XML, que inclui os tipos de cadeia de caracteres."
  remarks: "Quando essa propriedade é definida como `false`, todos retornam tipos são serializados como XML, exceto a cadeia de caracteres, que é interpretada como marcação XML. Se o valor for `false`, e se o tipo de retorno é uma cadeia de caracteres, e se a cadeia de caracteres não contém marcação XML que corresponde a um documento XML bem formado, a função de retorno de chamada bem-sucedida será invocada mas resultante será uma cadeia de caracteres serializada `null`.       O valor de XmlSerializeString é ignorado quando o <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>estiver definida como `Json`.</xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>"
  example:
  - "The following example shows how to apply <xref:System.Web.Script.Services.ScriptMethodAttribute> to a Web method with the XmlSerializeString property set to `true`. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool XmlSerializeString { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se todos os tipos de retorno são serializados como XML; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ScriptMethodAttribute()
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute()
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ScriptMethodAttribute()
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
- uid: System.Web.Script.Services.ResponseFormat
  parent: System.Web.Script.Services
  isExternal: false
  name: ResponseFormat
  nameWithType: ResponseFormat
  fullName: System.Web.Script.Services.ResponseFormat
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
  fullName: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
  fullName: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ScriptMethodAttribute
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
