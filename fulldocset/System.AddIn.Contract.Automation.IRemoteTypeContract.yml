### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract
  id: IRemoteTypeContract
  children:
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  - System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  langs:
  - csharp
  name: IRemoteTypeContract
  nameWithType: IRemoteTypeContract
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract
  type: Interface
  summary: "Define um contrato que componentes podem usar para acessar informações de tipo e chamar membros entre limites de domínio e o processo do aplicativo."
  remarks: "Para obter um IRemoteTypeContract, componentes podem chamar o <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>método de um objeto que implementa o <xref:System.AddIn.Contract.Automation.IRemoteObjectContract>interface.</xref:System.AddIn.Contract.Automation.IRemoteObjectContract> </xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>       Para obter informações sobre o tipo de um objeto, componentes de chamar o <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A>método.</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A>       Para obter informações sobre os membros de um objeto, componentes de chamam um dos métodos que retorna informações sobre um determinado tipo de membro. Por exemplo, para obter informações sobre os eventos de um objeto, componentes podem usar o <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A>ou <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A>método.</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A> </xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A>       Para chamar um membro de um objeto, os componentes usam o <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A>método.</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A>"
  syntax:
    content: 'public interface IRemoteTypeContract : System.AddIn.Contract.IContract'
  implements:
  - System.AddIn.Contract.IContract
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  id: GetCanonicalName
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetCanonicalName()
  nameWithType: IRemoteTypeContract.GetCanonicalName()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna o nome canônico do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  remarks: "The canonical name is a globally unique name, such as a fully qualified type name. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended for managed types. Strings in the format \\<*type library name*>, \\<*type name*> are recommended for COM types.  \n  \n Do not change the canonical name for a type after the type is published. Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type."
  syntax:
    content: public string GetCanonicalName ();
    parameters: []
    return:
      type: System.String
      description: "O nome canônico do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetEvent(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvent(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(String,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna um <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> que fornece acesso a um evento especificado do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent (string name, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "O nome de um evento do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valores que especifica como procurar o evento."
    return:
      type: System.AddIn.Contract.Automation.IRemoteEventInfoContract
      description: "Um <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> que fornece acesso para o evento especificado, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvents(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna uma coleção de <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> objetos que fornece acesso para os eventos especificados do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract> GetEvents (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valores que especifica como procurar os eventos."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteEventInfoContract}
      description: "Um &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; de <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> objetos que fornece acesso para os eventos que correspondam às restrições de associação especificada; caso contrário, vazio &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetField(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna um <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> que fornece acesso a um campo especificado do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField (string name, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "O nome de um campo do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valores que especifica como o campo de pesquisa."
    return:
      type: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
      description: "Um <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> que fornece acesso ao campo especificado, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: IRemoteTypeContract.GetFields(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna uma coleção de <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> objetos que fornece acesso para os campos especificados do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract> GetFields (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valores que especifica como procurar os campos."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteFieldInfoContract}
      description: "Um &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; de <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> objetos que fornece acesso para os campos que correspondam às restrições de associação especificada; caso contrário, vazio &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  id: GetInterface(System.String)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetInterface(String)
  nameWithType: IRemoteTypeContract.GetInterface(String)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(String)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna uma interface implementada por atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  remarks: "A canonical name is a globally unique name, such as a GUID. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended for managed types. Strings in the format \\<*type library name*>, \\<*type name*> are recommended for COM types.  \n  \n Do not change the canonical name for a type after the type is published. Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface (string canonicalName);
    parameters:
    - id: canonicalName
      type: System.String
      description: "O nome canônico de uma interface implementada por atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    return:
      type: System.AddIn.Contract.Automation.IRemoteTypeContract
      description: "Um <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> que representa a interface com especificado canônica nome desse <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> implementa. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Se este <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> não implementa uma interface com o nome canônico especificado."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  id: GetInterfaces
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: IRemoteTypeContract.GetInterfaces()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna as interfaces implementadas por atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> GetInterfaces ();
    parameters: []
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "Um &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; de <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> objetos que representam todas as interfaces implementadas por atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna uma coleção de <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> objetos que fornece acesso a todos os membros especificados do tipo de membro especificado no atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>, usando as restrições de associação especificada."
  remarks: "Esse método pode ser usado para obter um único membro, ou para obter vários membros que têm o mesmo nome, como as sobrecargas de construtor ou método."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract> GetMember (string name, System.Reflection.MemberTypes memberTypes, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "O nome do membro atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>. O nome pode representar vários membros que têm o mesmo nome."
    - id: memberTypes
      type: System.Reflection.MemberTypes
      description: "Uma combinação bit a bit do <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> valores que especificam os membros a procurar."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valores que especifica como procurar os membros."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
      description: "Um &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; de <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> objetos que representam os membros do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> que têm o nome especificado e que atendem aos critérios especificados o <code> memberTypes </code> e <code> bindingFlags </code> parâmetros."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMembers(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna uma coleção de <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> objetos que fornece acesso a todos os membros no atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> que correspondam às restrições de associação especificada."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract> GetMembers (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valores que especifica como procurar os membros."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
      description: "Um &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; de <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> objetos que fornece acesso aos membros do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> que atenda às restrições de associação especificado."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna um <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> que fornece acesso a um método especificado do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> remoteTypes);
    parameters:
    - id: name
      type: System.String
      description: "O nome de um método do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valores que especifica como o método de pesquisa."
    - id: remoteTypes
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "Um &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; de <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> objetos que representam o número, ordem e tipo dos parâmetros para o método para obter."
    return:
      type: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
      description: "Um <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> que fornece acesso para o método especificado, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMethods(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna uma coleção de <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> objetos que fornece acesso aos métodos especificados do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract> GetMethods (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valores que especifica como procurar os métodos."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteMethodInfoContract}
      description: "Um &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; de <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> objetos que fornece acesso aos métodos que correspondam às restrições de associação especificada."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: IRemoteTypeContract.GetProperties(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna uma coleção de <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> objetos que fornece acesso às propriedades especificadas do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract> GetProperties (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valores que especifica como para as propriedades de pesquisa."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemotePropertyInfoContract}
      description: "Um &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; de <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> objetos que fornece acesso às propriedades que correspondam às restrições de associação especificada."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna um <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> que fornece acesso a uma propriedade especificada do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> remoteTypes);
    parameters:
    - id: name
      type: System.String
      description: "O nome de uma propriedade do atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valores que especifica como o método de pesquisa."
    - id: remoteReturnType
      type: System.AddIn.Contract.Automation.IRemoteTypeContract
      description: "Um <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> que especifica o tipo de retorno da propriedade."
    - id: remoteTypes
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "Um &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; de <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> objetos que representam os parâmetros para a propriedade especificada."
    return:
      type: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
      description: "Um <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> que fornece acesso para a propriedade especificada, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  id: GetTypeData
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetTypeData()
  nameWithType: IRemoteTypeContract.GetTypeData()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Retorna informações sobre o objeto de tipo que atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> identifica."
  syntax:
    content: public System.AddIn.Contract.Automation.RemoteTypeData GetTypeData ();
    parameters: []
    return:
      type: System.AddIn.Contract.Automation.RemoteTypeData
      description: "Um <xref href=&quot;System.AddIn.Contract.Automation.RemoteTypeData&quot;> </xref> que contém informações sobre o objeto que atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> identifica."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  nameWithType: IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Invoca o membro especificado da atual <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  remarks: "O `remoteArgModifiers` parâmetro é usado apenas para componentes que são escritos usando COM. Cada valor de `remoteArgModifiers` parâmetro indica se o valor correspondente no `remoteArgs` parâmetro é passado por referência. O comprimento de `remoteArgModifiers` deve ser o mesmo que o comprimento de `remoteArgs`.       Se você passar `null` para `remoteArgModifiers`, esse método usa a lógica padrão para determinar se um argumento é passado por referência."
  syntax:
    content: public System.AddIn.Contract.RemoteArgument InvokeMember (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteObjectContract target, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int localeId);
    parameters:
    - id: name
      type: System.String
      description: "O nome do membro para invocar."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Uma combinação bit a bit do <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valores que especifica como procurar o membro."
    - id: target
      type: System.AddIn.Contract.Automation.IRemoteObjectContract
      description: "O <xref href=&quot;System.AddIn.Contract.Automation.IRemoteObjectContract&quot;> </xref> que invocar o membro especificado."
    - id: remoteArgs
      type: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
      description: "Um <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayContract&quot;> </xref> que contém os argumentos para passar para o membro para invocar."
    - id: remoteArgModifiers
      type: System.Boolean[]
      description: "Uma matriz de valores boolianos que indicam se cada o `remoteArgs` valores é passada por referência."
    - id: localeId
      type: System.Int32
      description: "Uma ID de localidade a ser usada para conversões específicas de localidade que podem ser executadas pelo membro que está sendo invocado."
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "Um <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> que representa o valor de retorno do membro chamado."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember*
  exceptions: []
  platform:
  - net462
references:
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetCanonicalName()
  nameWithType: IRemoteTypeContract.GetCanonicalName()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvent(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvent(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(String,BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteEventInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteEventInfoContract
  nameWithType: IRemoteEventInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteEventInfoContract
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvents(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteEventInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteEventInfoContract>
  nameWithType: IArrayContract<IRemoteEventInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteEventInfoContract
    name: IRemoteEventInfoContract
    nameWithType: IRemoteEventInfoContract
    fullName: IRemoteEventInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetField(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(String,BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteFieldInfoContract
  nameWithType: IRemoteFieldInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: IRemoteTypeContract.GetFields(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteFieldInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteFieldInfoContract>
  nameWithType: IArrayContract<IRemoteFieldInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
    name: IRemoteFieldInfoContract
    nameWithType: IRemoteFieldInfoContract
    fullName: IRemoteFieldInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterface(String)
  nameWithType: IRemoteTypeContract.GetInterface(String)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(String)
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteTypeContract
  nameWithType: IRemoteTypeContract
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterfaces()
  nameWithType: IRemoteTypeContract.GetInterfaces()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces()
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteTypeContract>
  nameWithType: IArrayContract<IRemoteTypeContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteTypeContract
    name: IRemoteTypeContract
    nameWithType: IRemoteTypeContract
    fullName: IRemoteTypeContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IContract>
  nameWithType: IArrayContract<IContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.IContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.IContract
    name: IContract
    nameWithType: IContract
    fullName: IContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMembers(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteMethodInfoContract
  nameWithType: IRemoteMethodInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMethods(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteMethodInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteMethodInfoContract>
  nameWithType: IArrayContract<IRemoteMethodInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
    name: IRemoteMethodInfoContract
    nameWithType: IRemoteMethodInfoContract
    fullName: IRemoteMethodInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: IRemoteTypeContract.GetProperties(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemotePropertyInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemotePropertyInfoContract>
  nameWithType: IArrayContract<IRemotePropertyInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
    name: IRemotePropertyInfoContract
    nameWithType: IRemotePropertyInfoContract
    fullName: IRemotePropertyInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
- uid: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemotePropertyInfoContract
  nameWithType: IRemotePropertyInfoContract
  fullName: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetTypeData()
  nameWithType: IRemoteTypeContract.GetTypeData()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData()
- uid: System.AddIn.Contract.Automation.RemoteTypeData
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: RemoteTypeData
  nameWithType: RemoteTypeData
  fullName: System.AddIn.Contract.Automation.RemoteTypeData
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  nameWithType: IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.AddIn.Contract.Automation.IRemoteObjectContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteObjectContract
  nameWithType: IRemoteObjectContract
  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IRemoteArgumentArrayContract
  nameWithType: IRemoteArgumentArrayContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
- uid: System.Boolean[]
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean[]
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetCanonicalName
  nameWithType: IRemoteTypeContract.GetCanonicalName
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvent
  nameWithType: IRemoteTypeContract.GetEvent
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvents
  nameWithType: IRemoteTypeContract.GetEvents
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetField
  nameWithType: IRemoteTypeContract.GetField
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetFields
  nameWithType: IRemoteTypeContract.GetFields
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterface
  nameWithType: IRemoteTypeContract.GetInterface
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterfaces
  nameWithType: IRemoteTypeContract.GetInterfaces
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMember
  nameWithType: IRemoteTypeContract.GetMember
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMembers
  nameWithType: IRemoteTypeContract.GetMembers
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethod
  nameWithType: IRemoteTypeContract.GetMethod
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethods
  nameWithType: IRemoteTypeContract.GetMethods
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperties
  nameWithType: IRemoteTypeContract.GetProperties
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperty
  nameWithType: IRemoteTypeContract.GetProperty
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetTypeData
  nameWithType: IRemoteTypeContract.GetTypeData
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: InvokeMember
  nameWithType: IRemoteTypeContract.InvokeMember
