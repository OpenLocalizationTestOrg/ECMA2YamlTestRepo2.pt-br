### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  id: ManualWorkflowSchedulerService
  children:
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop
  langs:
  - csharp
  name: ManualWorkflowSchedulerService
  nameWithType: ManualWorkflowSchedulerService
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  type: Class
  summary: "Fornece um serviço de threading que permite que o aplicativo host criando uma instância de fluxo de trabalho Doe o <xref href=&quot;System.Threading.Thread&quot;> </xref> no qual a instância de fluxo de trabalho é executada. Usando esse serviço de threading, hospedar aplicativos podem executar uma instância de fluxo de trabalho em um único <xref href=&quot;System.Threading.Thread&quot;> </xref> no modo síncrono (embora se o fluxo de trabalho contém uma atividade de atraso, o trabalho é adiado até depois que a atividade de atraso é executada em um thread separado gerado pelo [System.Threading.Timer](~/add/includes/ajax-current-ext-md.md)). Esse modo bloqueia a execução do aplicativo host até que a instância de fluxo de trabalho ficar ociosa. Em seguida, a instância de fluxo de trabalho só pode ser executada usando o <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow*>método deste serviço.</xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow*>"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]ManualWorkflowSchedulerService não executa automaticamente uma instância de fluxo de trabalho que está na fila. O host deve chamar <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A>para executar um fluxo de trabalho especificado.</xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class ManualWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: ManualWorkflowSchedulerService()
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;> </xref> classe."
  syntax:
    content: public ManualWorkflowSchedulerService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: ManualWorkflowSchedulerService(Boolean)
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(Boolean)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(Boolean)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;> </xref> classe."
  syntax:
    content: public ManualWorkflowSchedulerService (bool useActiveTimers);
    parameters:
    - id: useActiveTimers
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>que determina como são tratadas os atividades de atraso. Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, o serviço do Agendador retoma automaticamente fluxos de trabalho depois que as atividades de atraso expirarem (por meio de um timer na memória). Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, o host deve retomar manualmente o fluxo de trabalho depois que as atividades de atraso expirarem."
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: ManualWorkflowSchedulerService(NameValueCollection)
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(NameValueCollection)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;> </xref> classe."
  syntax:
    content: public ManualWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: "Um <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> que contém parâmetros para `useActiveTimers`. Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, o serviço do Agendador retoma automaticamente fluxos de trabalho depois que as atividades de atraso expirarem (por meio de um timer na memória). Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, o host deve retomar manualmente o fluxo de trabalho depois que as atividades de atraso expirarem."
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)
  id: Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: Cancel(Guid)
  nameWithType: ManualWorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Cancela o item especificado de trabalho de instância de fluxo de trabalho existente."
  syntax:
    content: protected override void Cancel (Guid timerId);
    parameters:
    - id: timerId
      type: System.Guid
      description: "O <xref:System.Guid>associado ao item de trabalho agendado existente para cancelar.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted
  id: OnStarted
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: OnStarted()
  nameWithType: ManualWorkflowSchedulerService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Sobrecarga de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName&gt;. Este método é chamado sempre que &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A?displayProperty=fullName&gt; é chamado e é usado pelo <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;> </xref> para o trabalho necessário quando o <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> inicia."
  syntax:
    content: protected override void OnStarted ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)
  id: RunWorkflow(System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: RunWorkflow(Guid)
  nameWithType: ManualWorkflowSchedulerService.RunWorkflow(Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Executa a instância de fluxo de trabalho especificado."
  remarks: "Isso é uma chamada síncrona que usa o thread atual para executar o fluxo de trabalho. Ele não retorna até que o fluxo de trabalho ocioso, suspende, concluído, termina ou anulada."
  syntax:
    content: public bool RunWorkflow (Guid workflowInstanceId);
    parameters:
    - id: workflowInstanceId
      type: System.Guid
      description: "O <xref:System.Guid>para a instância de fluxo de trabalho seja executada.</xref:System.Guid>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o fluxo de trabalho começa a ser executado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>workflowInstanceId</code>é um GUID vazio."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid)
  nameWithType: ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Adiciona uma instância de fluxo de trabalho para a fila de itens de trabalho pendentes usando a instância de fluxo de trabalho especificado usando o delegado multicast especificado."
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "Um <xref href=&quot;System.Threading.WaitCallback&quot;> </xref> delegado multicast que representa o método a ser executado."
    - id: workflowInstanceId
      type: System.Guid
      description: "Um <xref:System.Guid>que representa a instância de fluxo de trabalho.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>contém uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Adiciona a instância de fluxo de trabalho especificado para a fila de itens de trabalho pendente usando o delegado multicast especificado, <xref:System.DateTime>e GUIDs.</xref:System.DateTime>"
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "Um <xref href=&quot;System.Threading.WaitCallback&quot;> </xref> delegado multicast que representa o método a ser executado."
    - id: workflowInstanceId
      type: System.Guid
      description: "Um <xref:System.Guid>que representa a instância de fluxo de trabalho.</xref:System.Guid>"
    - id: whenUtc
      type: System.DateTime
      description: "O <xref:System.DateTime>que indica a hora para começar a executar o thread.</xref:System.DateTime>"
    - id: timerId
      type: System.Guid
      description: "Um <xref:System.Guid>que representa o thread agendado.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>contém uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>workflowInstanceId</code>ou <code>timerId</code> é um GUID vazio."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop
  id: Stop
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: Stop()
  nameWithType: ManualWorkflowSchedulerService.Stop()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Sobrecarga de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A?displayProperty=fullName&gt;. O <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;> </xref> usa esse método para o trabalho necessário quando o <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> para."
  syntax:
    content: protected override void Stop ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: ManualWorkflowSchedulerService()
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService()
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: ManualWorkflowSchedulerService(Boolean)
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(Boolean)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: ManualWorkflowSchedulerService(NameValueCollection)
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Cancel(Guid)
  nameWithType: ManualWorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: OnStarted()
  nameWithType: ManualWorkflowSchedulerService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted()
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: RunWorkflow(Guid)
  nameWithType: ManualWorkflowSchedulerService.RunWorkflow(Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(Guid)
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid)
  nameWithType: ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid)
- uid: System.Threading.WaitCallback
  parent: System.Threading
  isExternal: false
  name: WaitCallback
  nameWithType: WaitCallback
  fullName: System.Threading.WaitCallback
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Stop()
  nameWithType: ManualWorkflowSchedulerService.Stop()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop()
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: ManualWorkflowSchedulerService
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Cancel
  nameWithType: ManualWorkflowSchedulerService.Cancel
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: OnStarted
  nameWithType: ManualWorkflowSchedulerService.OnStarted
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: RunWorkflow
  nameWithType: ManualWorkflowSchedulerService.RunWorkflow
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Schedule
  nameWithType: ManualWorkflowSchedulerService.Schedule
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Stop
  nameWithType: ManualWorkflowSchedulerService.Stop
