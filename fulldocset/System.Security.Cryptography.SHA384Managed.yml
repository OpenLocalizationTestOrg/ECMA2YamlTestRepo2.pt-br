### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SHA384Managed
  id: SHA384Managed
  children:
  - System.Security.Cryptography.SHA384Managed.#ctor
  - System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA384Managed.HashFinal
  - System.Security.Cryptography.SHA384Managed.Initialize
  langs:
  - csharp
  name: SHA384Managed
  nameWithType: SHA384Managed
  fullName: System.Security.Cryptography.SHA384Managed
  type: Class
  summary: "Calcula o <xref href=&quot;System.Security.Cryptography.SHA384&quot;> </xref> hash para os dados de entrada usando a biblioteca gerenciada."
  remarks: "O hash é usado como um valor exclusivo de tamanho fixo que representa uma grande quantidade de dados. Hashes de dois conjuntos de dados devem corresponder somente se os dados correspondentes também correspondem. Pequenas alterações aos dados resultar em grandes alterações imprevisíveis no hash.       O tamanho de hash para o algoritmo SHA384Managed é 384 bits."
  example:
  - "The following example computes the SHA384Managed hash for `data` and stores it in `result`. This example assumes that there is a predefined constant `DATA_SIZE`.  \n  \n [!code-cpp[Classic SHA384Managed Example#1](~/add/codesnippet/cpp/t-system.security.crypto_104_1.cpp)]\n [!code-cs[Classic SHA384Managed Example#1](~/add/codesnippet/csharp/t-system.security.crypto_104_1.cs)]\n [!code-vb[Classic SHA384Managed Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_104_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SHA384Managed : System.Security.Cryptography.SHA384
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.SHA384
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA384.Create
  - System.Security.Cryptography.SHA384.Create(System.String)
  platform:
  - net462
- uid: System.Security.Cryptography.SHA384Managed.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: SHA384Managed()
  nameWithType: SHA384Managed.SHA384Managed()
  fullName: System.Security.Cryptography.SHA384Managed.SHA384Managed()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;> </xref> classe."
  remarks: "O hash é usado como um valor exclusivo de tamanho fixo que representa uma grande quantidade de dados. Hashes de dois conjuntos de dados devem corresponder somente se os dados correspondentes também correspondem. Pequenas alterações aos dados resultar em grandes alterações imprevisíveis no hash.       Tamanho de hash para o <xref:System.Security.Cryptography.SHA384Managed>algoritmo é 384 bits.</xref:System.Security.Cryptography.SHA384Managed>       **Importante** se você habilitar a configuração na diretiva de segurança Local de segurança a seguir ou como parte da política de grupo que você obterá um <xref:System.InvalidOperationException>quando você tentar usar esse construtor: **criptografia do sistema: a algoritmos compatíveis com FIPS Use para criptografia, hash e assinatura** </xref:System.InvalidOperationException>"
  syntax:
    content: public SHA384Managed ();
    parameters: []
  overload: System.Security.Cryptography.SHA384Managed.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A configuração de segurança de padrões de processamento de informações Federal (FIPS) está habilitada. Esta implementação não faz parte dos algoritmos criptográficos validados por Windows Platform FIPS."
  platform:
  - net462
- uid: System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA384Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA384Managed.HashCore(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Quando substituído em uma classe derivada, encaminha os dados gravados para o objeto de <xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;> </xref> algoritmo de hash para computar o hash."
  remarks: "Este método não é chamado pelo código do aplicativo.       Esse método abstrato executa o cálculo de hash. Cada gravação no objeto de fluxo de criptografia transmite os dados este método. Para cada bloco de dados, este método atualizará o estado do objeto hash para que um valor de hash correto é retornado no final do fluxo de dados."
  syntax:
    content: protected override void HashCore (byte[] rgb, int ibStart, int cbSize);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "Os dados de entrada."
    - id: ibStart
      type: System.Int32
      description: "O deslocamento para a matriz de bytes da qual começar a usar os dados."
    - id: cbSize
      type: System.Int32
      description: "O número de bytes na matriz para usar como dados."
  overload: System.Security.Cryptography.SHA384Managed.HashCore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA384Managed.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: HashFinal()
  nameWithType: SHA384Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA384Managed.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Quando substituído em uma classe derivada, finaliza o cálculo de hash depois que os últimos dados são processados pelo objeto de fluxo de criptografia."
  remarks: "Este método não é chamado pelo código do aplicativo. Esse método finaliza qualquer computação parcial e retorna o valor de hash correto do fluxo de dados."
  syntax:
    content: protected override byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: "O código de hash computado."
  overload: System.Security.Cryptography.SHA384Managed.HashFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA384Managed.Initialize
  id: Initialize
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: Initialize()
  nameWithType: SHA384Managed.Initialize()
  fullName: System.Security.Cryptography.SHA384Managed.Initialize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicializa uma instância de <xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;> </xref>."
  remarks: "O hash é usado como um valor exclusivo de tamanho fixo que representa uma grande quantidade de dados. Hashes de dois conjuntos de dados devem corresponder somente se os dados correspondentes também correspondem. Pequenas alterações aos dados resultar em grandes alterações imprevisíveis no hash.       Tamanho de hash para o <xref:System.Security.Cryptography.SHA384Managed>algoritmo é 384 bits.</xref:System.Security.Cryptography.SHA384Managed>"
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.SHA384Managed.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.SHA384
  isExternal: false
  name: System.Security.Cryptography.SHA384
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.SHA384Managed.#ctor
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: SHA384Managed()
  nameWithType: SHA384Managed.SHA384Managed()
  fullName: System.Security.Cryptography.SHA384Managed.SHA384Managed()
- uid: System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA384Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA384Managed.HashCore(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.SHA384Managed.HashFinal
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashFinal()
  nameWithType: SHA384Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA384Managed.HashFinal()
- uid: System.Security.Cryptography.SHA384Managed.Initialize
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: Initialize()
  nameWithType: SHA384Managed.Initialize()
  fullName: System.Security.Cryptography.SHA384Managed.Initialize()
- uid: System.Security.Cryptography.SHA384Managed.#ctor*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: SHA384Managed
  nameWithType: SHA384Managed.SHA384Managed
- uid: System.Security.Cryptography.SHA384Managed.HashCore*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashCore
  nameWithType: SHA384Managed.HashCore
- uid: System.Security.Cryptography.SHA384Managed.HashFinal*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashFinal
  nameWithType: SHA384Managed.HashFinal
- uid: System.Security.Cryptography.SHA384Managed.Initialize*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: Initialize
  nameWithType: SHA384Managed.Initialize
