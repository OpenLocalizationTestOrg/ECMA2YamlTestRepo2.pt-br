### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlEntityReference
  id: XmlEntityReference
  children:
  - System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)
  - System.Xml.XmlEntityReference.BaseURI
  - System.Xml.XmlEntityReference.CloneNode(System.Boolean)
  - System.Xml.XmlEntityReference.IsReadOnly
  - System.Xml.XmlEntityReference.LocalName
  - System.Xml.XmlEntityReference.Name
  - System.Xml.XmlEntityReference.NodeType
  - System.Xml.XmlEntityReference.Value
  - System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlEntityReference
  nameWithType: XmlEntityReference
  fullName: System.Xml.XmlEntityReference
  type: Class
  summary: "Representa um nó de referência de entidade."
  syntax:
    content: 'public class XmlEntityReference : System.Xml.XmlLinkedNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  - System.Xml.XmlLinkedNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlLinkedNode.NextSibling
  - System.Xml.XmlLinkedNode.PreviousSibling
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InnerText
  - System.Xml.XmlNode.InnerXml
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.OwnerDocument
  - System.Xml.XmlNode.ParentNode
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SchemaInfo
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  platform:
  - net462
- uid: System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlEntityReference
  langs:
  - csharp
  name: XmlEntityReference(String,XmlDocument)
  nameWithType: XmlEntityReference.XmlEntityReference(String,XmlDocument)
  fullName: System.Xml.XmlEntityReference.XmlEntityReference(String,XmlDocument)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.XmlEntityReference&quot;> </xref> classe."
  remarks: "Não criar uma instância de um <xref:System.Xml.XmlEntityReference>diretamente; em vez disso, use os métodos como <xref:System.Xml.XmlDocument.CreateEntityReference%2A>.</xref:System.Xml.XmlDocument.CreateEntityReference%2A> </xref:System.Xml.XmlEntityReference>"
  syntax:
    content: protected XmlEntityReference (string name, System.Xml.XmlDocument doc);
    parameters:
    - id: name
      type: System.String
      description: "O nome da referência de entidade; Consulte o <xref:System.Xml.XmlEntityReference.Name*>propriedade.</xref:System.Xml.XmlEntityReference.Name*>"
    - id: doc
      type: System.Xml.XmlDocument
      description: "O documento XML do pai."
  overload: System.Xml.XmlEntityReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntityReference.BaseURI
  id: BaseURI
  parent: System.Xml.XmlEntityReference
  langs:
  - csharp
  name: BaseURI
  nameWithType: XmlEntityReference.BaseURI
  fullName: System.Xml.XmlEntityReference.BaseURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém a base identificador URI (Uniform Resource) do nó atual."
  remarks: "Um documento XML em rede é composto de partes de dados agregados usando vários mecanismos de inclusão padrão do World Wide Web Consortium (W3C) e, portanto, contém nós que vêm de diferentes locais. O `BaseURI` informa onde veio esses nós. Se não houver nenhum URI de base para os nós que estão sendo retornados (talvez eles foram analisados a partir de uma cadeia de caracteres na memória), <xref:System.String>será retornado.</xref:System.String>       `BaseURI`aborda a árvore de nós procurando limites de referência de entidade, portanto se entidades são expandidas, essas informações não são preservadas e essa propriedade retorna o local do XmlDocument em todos os casos.       Para obter informações adicionais sobre `BaseURI` e como ele se comporta com outros tipos de nó, consulte <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName>.</xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName>       Esta propriedade é uma extensão da Microsoft para modelo de objeto de documento (DOM)."
  example:
  - "The following example displays information on entity reference node, including its base URI.  \n  \n [!code-cpp[Classic WebData XmlEntityReference.BaseURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlentityre_0_1.cpp)]\n [!code-vb[Classic WebData XmlEntityReference.BaseURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlentityre_0_1.vb)]\n [!code-cs[Classic WebData XmlEntityReference.BaseURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlentityre_0_1.cs)]  \n  \n The sample uses the file, `uri.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlEntityReference.BaseURI Example#2](~/add/codesnippet/xml/p-system.xml.xmlentityre_0_2.xml)]  \n  \n The `style.xml` file contains the XML string `<style>hardcover</style>`."
  syntax:
    content: public override string BaseURI { get; }
    return:
      type: System.String
      description: "O local do qual o nó foi carregado."
  overload: System.Xml.XmlEntityReference.BaseURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntityReference.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlEntityReference
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlEntityReference.CloneNode(Boolean)
  fullName: System.Xml.XmlEntityReference.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Cria uma cópia deste nó."
  remarks: "Esse método funciona como um construtor de cópia para nós. O nó clonado não tem nenhum pai (<xref:System.Xml.XmlNode.ParentNode%2A> retorna `null`).</xref:System.Xml.XmlNode.ParentNode%2A>"
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>recursivamente clonar a subárvore abaixo do nó especificado; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> clonar apenas o próprio nó. Para <xref uid=&quot;langword_csharp_XmlEntityReference&quot; name=&quot;XmlEntityReference&quot; href=&quot;&quot;> </xref> nós, este método sempre retorna um nó de referência de entidade sem filhos. O texto de substituição é definido quando o nó é inserido em um pai."
    return:
      type: System.Xml.XmlNode
      description: "O nó clonado."
  overload: System.Xml.XmlEntityReference.CloneNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntityReference.IsReadOnly
  id: IsReadOnly
  parent: System.Xml.XmlEntityReference
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: XmlEntityReference.IsReadOnly
  fullName: System.Xml.XmlEntityReference.IsReadOnly
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém um valor que indica se o nó é somente leitura."
  remarks: "Um nó somente leitura é um cujas propriedades, atributos ou filhos não pode ser alterado. No entanto, você pode remover um nó somente leitura da árvore e inseri-lo em outro lugar.       Esta propriedade é uma extensão da Microsoft para modelo de objeto de documento (DOM)."
  example:
  - "The following example shows how to use the `IsReadOnly` property.  \n  \n [!code-cpp[Classic WebData XmlEntityReference.IsReadOnly Example#1](~/add/codesnippet/cpp/p-system.xml.xmlentityre_2_1.cpp)]\n [!code-cs[Classic WebData XmlEntityReference.IsReadOnly Example#1](~/add/codesnippet/csharp/p-system.xml.xmlentityre_2_1.cs)]\n [!code-vb[Classic WebData XmlEntityReference.IsReadOnly Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlentityre_2_1.vb)]"
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nó for somente leitura; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Porque <xref uid=&quot;langword_csharp_XmlEntityReference&quot; name=&quot;XmlEntityReference&quot; href=&quot;&quot;> </xref> nós são somente leitura, essa propriedade sempre retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlEntityReference.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntityReference.LocalName
  id: LocalName
  parent: System.Xml.XmlEntityReference
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlEntityReference.LocalName
  fullName: System.Xml.XmlEntityReference.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o nome local do nó."
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "Para <xref uid=&quot;langword_csharp_XmlEntityReference&quot; name=&quot;XmlEntityReference&quot; href=&quot;&quot;> </xref> nós, essa propriedade retorna o nome da entidade referenciada."
  overload: System.Xml.XmlEntityReference.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntityReference.Name
  id: Name
  parent: System.Xml.XmlEntityReference
  langs:
  - csharp
  name: Name
  nameWithType: XmlEntityReference.Name
  fullName: System.Xml.XmlEntityReference.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o nome do nó."
  remarks: ''
  example:
  - "The following example displays information on the entity reference node.  \n  \n [!code-cpp[Classic WebData XmlEntityReference.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmlentityre_1_1.cpp)]\n [!code-cs[Classic WebData XmlEntityReference.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmlentityre_1_1.cs)]\n [!code-vb[Classic WebData XmlEntityReference.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlentityre_1_1.vb)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "O nome da entidade referenciada."
  overload: System.Xml.XmlEntityReference.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntityReference.NodeType
  id: NodeType
  parent: System.Xml.XmlEntityReference
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlEntityReference.NodeType
  fullName: System.Xml.XmlEntityReference.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o tipo do nó."
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "O tipo de nó. Para <xref uid=&quot;langword_csharp_XmlEntityReference&quot; name=&quot;XmlEntityReference&quot; href=&quot;&quot;> </xref> nós, o valor é XmlNodeType.EntityReference."
  overload: System.Xml.XmlEntityReference.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntityReference.Value
  id: Value
  parent: System.Xml.XmlEntityReference
  langs:
  - csharp
  name: Value
  nameWithType: XmlEntityReference.Value
  fullName: System.Xml.XmlEntityReference.Value
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém ou define o valor do nó."
  syntax:
    content: public override string Value { get; set; }
    return:
      type: System.String
      description: "O valor do nó. Para <xref uid=&quot;langword_csharp_XmlEntityReference&quot; name=&quot;XmlEntityReference&quot; href=&quot;&quot;> </xref> nós, essa propriedade retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlEntityReference.Value*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nó é somente leitura."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Definindo a propriedade."
  platform:
  - net462
- uid: System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlEntityReference
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlEntityReference.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlEntityReference.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Salva todos os filhos do nó especificado <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "Esse método é uma extensão da Microsoft para modelo de objeto de documento (DOM)."
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "O <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> à qual você deseja salvar."
  overload: System.Xml.XmlEntityReference.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlEntityReference
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlEntityReference.WriteTo(XmlWriter)
  fullName: System.Xml.XmlEntityReference.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Salva o nó especificado <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "Esse método é uma extensão da Microsoft para modelo de objeto de documento (DOM)."
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "O <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> à qual você deseja salvar."
  overload: System.Xml.XmlEntityReference.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlLinkedNode
  isExternal: false
  name: System.Xml.XmlLinkedNode
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: XmlEntityReference(String,XmlDocument)
  nameWithType: XmlEntityReference.XmlEntityReference(String,XmlDocument)
  fullName: System.Xml.XmlEntityReference.XmlEntityReference(String,XmlDocument)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlEntityReference.BaseURI
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: BaseURI
  nameWithType: XmlEntityReference.BaseURI
  fullName: System.Xml.XmlEntityReference.BaseURI
- uid: System.Xml.XmlEntityReference.CloneNode(System.Boolean)
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlEntityReference.CloneNode(Boolean)
  fullName: System.Xml.XmlEntityReference.CloneNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlEntityReference.IsReadOnly
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlEntityReference.IsReadOnly
  fullName: System.Xml.XmlEntityReference.IsReadOnly
- uid: System.Xml.XmlEntityReference.LocalName
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: LocalName
  nameWithType: XmlEntityReference.LocalName
  fullName: System.Xml.XmlEntityReference.LocalName
- uid: System.Xml.XmlEntityReference.Name
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: Name
  nameWithType: XmlEntityReference.Name
  fullName: System.Xml.XmlEntityReference.Name
- uid: System.Xml.XmlEntityReference.NodeType
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: NodeType
  nameWithType: XmlEntityReference.NodeType
  fullName: System.Xml.XmlEntityReference.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlEntityReference.Value
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: Value
  nameWithType: XmlEntityReference.Value
  fullName: System.Xml.XmlEntityReference.Value
- uid: System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlEntityReference.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlEntityReference.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlEntityReference.WriteTo(XmlWriter)
  fullName: System.Xml.XmlEntityReference.WriteTo(XmlWriter)
- uid: System.Xml.XmlEntityReference.#ctor*
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: XmlEntityReference
  nameWithType: XmlEntityReference.XmlEntityReference
- uid: System.Xml.XmlEntityReference.BaseURI*
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: BaseURI
  nameWithType: XmlEntityReference.BaseURI
- uid: System.Xml.XmlEntityReference.CloneNode*
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: CloneNode
  nameWithType: XmlEntityReference.CloneNode
- uid: System.Xml.XmlEntityReference.IsReadOnly*
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlEntityReference.IsReadOnly
- uid: System.Xml.XmlEntityReference.LocalName*
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: LocalName
  nameWithType: XmlEntityReference.LocalName
- uid: System.Xml.XmlEntityReference.Name*
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: Name
  nameWithType: XmlEntityReference.Name
- uid: System.Xml.XmlEntityReference.NodeType*
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: NodeType
  nameWithType: XmlEntityReference.NodeType
- uid: System.Xml.XmlEntityReference.Value*
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: Value
  nameWithType: XmlEntityReference.Value
- uid: System.Xml.XmlEntityReference.WriteContentTo*
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlEntityReference.WriteContentTo
- uid: System.Xml.XmlEntityReference.WriteTo*
  parent: System.Xml.XmlEntityReference
  isExternal: false
  name: WriteTo
  nameWithType: XmlEntityReference.WriteTo
