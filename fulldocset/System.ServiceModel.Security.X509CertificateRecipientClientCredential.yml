### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  id: X509CertificateRecipientClientCredential
  children:
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  langs:
  - csharp
  name: X509CertificateRecipientClientCredential
  nameWithType: X509CertificateRecipientClientCredential
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  type: Class
  summary: "Representa as configurações usadas pelo cliente para validar o certificado apresentado pelo serviço usando a autenticação SSL. Ele também contém um certificado para o serviço que é explicitamente configurado no cliente a ser usado para criptografar mensagens para o serviço usando a segurança de mensagem."
  remarks: "Essa classe é usada pela <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A>propriedade de <xref:System.ServiceModel.Description.ClientCredentials>classe.</xref:System.ServiceModel.Description.ClientCredentials> </xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A>"
  example:
  - "This code shows one way to create an instance of this class.  \n  \n [!code-vb[c_CreateSTS#18](~/add/codesnippet/visualbasic/t-system.servicemodel.se_15_1.vb)]\n [!code-cs[c_CreateSTS#18](~/add/codesnippet/csharp/t-system.servicemodel.se_15_1.cs)]"
  syntax:
    content: public sealed class X509CertificateRecipientClientCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  id: Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém as configurações usadas para validar o certificado de serviço obtido usando autenticação SSL."
  remarks: "O <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication>classe representa as configurações usadas pelo proxy do cliente para autenticar certificados de serviço que são obtidos usando negociação SSL/TLS.</xref:System.ServiceModel.Security.X509ClientCertificateAuthentication>"
  example:
  - "This code shows how to access this property.  \n  \n [!code-cs[c_CreateSTS#21](~/add/codesnippet/csharp/d04fd5a9-6333-4d5a-92f2-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: "As configurações usadas para validar o certificado de serviço obtido usando autenticação SSL."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  id: DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém ou define o certificado padrão a ser usado para o serviço."
  remarks: "Para associações que usam a segurança de mensagens baseada em certificado, esse certificado é usado para criptografar mensagens para o serviço e deve ser usada pelo serviço para assinar respostas ao cliente."
  example:
  - "This code shows how to access this property.  \n  \n [!code-cs[c_CreateSTS#24](~/add/codesnippet/csharp/3f3eeba7-32c2-4573-9477-_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "O certificado padrão a ser usado para o serviço."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tentativa de definir quando a credencial é somente leitura."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  id: ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém um certificado com escopo definido para usar para representar o serviço que o cliente está se comunicando."
  remarks: "Essa propriedade permite que o cliente configurar o certificado de serviço para usar com base na URL do serviço, que ele se comunica. Isso é especialmente útil em cenários de token emitidos onde um cliente pode se comunicar a vários serviços (o serviço end bem como serviços de token de segurança intermediário). Para associações que usam a segurança de mensagens baseada em certificado, esse certificado é usado para criptografar mensagens para o serviço e deve ser usada pelo serviço para assinar respostas ao cliente.       Se uma associação requer um certificado para o serviço e nenhum certificado específico para a URL do serviço é encontrado na `ScopedCertificates`, o certificado padrão é usado."
  example:
  - "This code shows how to set this property.  \n  \n [!code-cs[c_CreateSTS#33](~/add/codesnippet/csharp/bcde5385-8f2b-4da9-a779-_1.cs)]"
  syntax:
    content: public System.Collections.Generic.Dictionary<Uri,System.Security.Cryptography.X509Certificates.X509Certificate2> ScopedCertificates { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
      description: "Um certificado no escopo a ser usado para representar o serviço que o cliente está se comunicando."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tentativa de definir quando a credencial é somente leitura."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Especifica o certificado padrão a ser usado para o serviço. Para associações que usam a segurança de mensagens baseada em certificado, esse certificado é usado para criptografar mensagens para o serviço e deve ser usada pelo serviço para assinar respostas ao cliente."
  remarks: "Esse método obtém um certificado do repositório no local especificado que corresponde a `subjectName` parâmetro.       Os valores para `storeLocation` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation>enumeração:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: o repositório de certificados atribuído ao computador local.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: o repositório de certificados usado pelo usuário atual (padrão).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Se o aplicativo é executado sob uma conta do sistema, em seguida, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Se o aplicativo é executado sob uma conta de usuário, em seguida, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Os valores para `storeName` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName>enumeração.</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-cs[c_CreateSTS#23](~/add/codesnippet/csharp/1bf14924-d231-4bf6-a178-_1.cs)]"
  syntax:
    content: public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: "O nome diferenciado do assunto."
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "O local do repositório de certificados que o serviço usa para obter o certificado de serviço."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "O nome do certificado x.&509; repositório para abrir."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subjectName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tentativa de definir quando a credencial é somente leitura."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Especifica o certificado padrão a ser usado para o serviço. Para associações que usam a segurança de mensagens baseada em certificado, esse certificado é usado para criptografar mensagens para o serviço e deve ser usada pelo serviço para assinar respostas ao cliente."
  remarks: "Esse método obtém um certificado do repositório no local especificado que corresponde a `findType` e `findValue` parâmetros.       Os valores para `storeLocation` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation>enumeração:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: o repositório de certificados atribuído ao computador local.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: o repositório de certificados usado pelo usuário atual (padrão).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Se o aplicativo é executado sob uma conta do sistema, em seguida, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Se o aplicativo é executado sob uma conta de usuário, em seguida, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Os valores para `storeName` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName>enumeração.</xref:System.Security.Cryptography.X509Certificates.StoreName>       Os valores para `findType` são incluídos no <xref:System.Security.Cryptography.X509Certificates.X509FindType>enumeração.</xref:System.Security.Cryptography.X509Certificates.X509FindType>       A enumeração mais comumente usada é <xref:System.Security.Cryptography.X509Certificates.X509FindType>, que faz uma pesquisa diferencia maiusculas de minúsculas no nome do assunto de certificados no armazenamento especificado.</xref:System.Security.Cryptography.X509Certificates.X509FindType> Isso pode ser uma pesquisa imprecisa. Se nenhum certificado ou vários certificados que correspondem aos critérios forem encontrados, um <xref:System.InvalidOperationException>é gerada.</xref:System.InvalidOperationException>"
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-cs[c_CreateSTS#22](~/add/codesnippet/csharp/7f0910fb-b496-4487-b49c-_1.cs)]"
  syntax:
    content: public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "O local do repositório de certificados de serviço usa para obter o certificado de serviço."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "O nome do certificado x.&509; repositório para abrir."
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "O tipo de pesquisa x.&509; a ser executado."
    - id: findValue
      type: System.Object
      description: "O valor para pesquisar no repositório de certificados x.&509;."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>findValue</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tentativa de definir quando a credencial é somente leitura."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  id: SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Define um certificado pelo nome da entidade, o repositório de certificados local e nome do repositório de certificados e o armazena em uma coleção a ser usado para a URL que define o escopo."
  remarks: "Os valores para `storeLocation` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation>enumeração:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: o repositório de certificados atribuído ao computador local.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: o repositório de certificados usado pelo usuário atual (padrão).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Se o aplicativo é executado sob uma conta do sistema, em seguida, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Se o aplicativo é executado sob uma conta de usuário, em seguida, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Os valores para `storeName` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName>enumeração.</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "This code shows how to call this method.  \n  \n [!code-cs[c_CreateSTS#25](~/add/codesnippet/csharp/7ddc79f9-f97b-42fb-ab5a-_1.cs)]"
  syntax:
    content: public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);
    parameters:
    - id: subjectName
      type: System.String
      description: "O nome totalmente qualificado."
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "O local do repositório de certificados que o serviço usa para obter o certificado de serviço."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "O nome do certificado x.&509; repositório para abrir."
    - id: targetService
      type: System.Uri
      description: "A URL que define o escopo."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetService</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tentativa de definir quando a credencial é somente leitura."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  id: SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Define um local de repositório de certificado por certificado, o nome do repositório de certificados, o tipo de pesquisa x.&509; e o valor de pesquisa e o armazena em uma coleção a ser usado para a URL que define o escopo."
  remarks: "Os valores para `storeLocation` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation>enumeração:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: o repositório de certificados atribuído ao computador local.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: o repositório de certificados usado pelo usuário atual (padrão).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Se o aplicativo é executado sob uma conta do sistema, em seguida, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Se o aplicativo é executado sob uma conta de usuário, em seguida, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Os valores para `storeName` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName>enumeração.</xref:System.Security.Cryptography.X509Certificates.StoreName>       Os valores para `findType` são incluídos no <xref:System.Security.Cryptography.X509Certificates.X509FindType>enumeração.</xref:System.Security.Cryptography.X509Certificates.X509FindType>       A enumeração mais comumente usada é <xref:System.Security.Cryptography.X509Certificates.X509FindType>, que faz uma pesquisa diferencia maiusculas de minúsculas no nome do assunto de certificados no armazenamento especificado.</xref:System.Security.Cryptography.X509Certificates.X509FindType> Isso pode ser uma pesquisa imprecisa. Se nenhum certificado ou vários certificados que correspondem aos critérios forem encontrados, um <xref:System.InvalidOperationException>será lançada.</xref:System.InvalidOperationException>"
  example:
  - "This code shows how to call this method.  \n  \n [!code-vb[c_CreateSTS#20](~/add/codesnippet/visualbasic/75f932c5-822c-4f8b-9c16-_1.vb)]\n [!code-cs[c_CreateSTS#20](~/add/codesnippet/csharp/75f932c5-822c-4f8b-9c16-_1.cs)]"
  syntax:
    content: public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "O local do repositório de certificados que o serviço usa para obter o certificado de serviço."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "O nome do certificado x.&509; repositório para abrir."
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "O tipo de pesquisa x.&509; a ser executado."
    - id: findValue
      type: System.Object
      description: "O valor para pesquisar no repositório de certificados x.&509;."
    - id: targetService
      type: System.Uri
      description: "A URL que define o escopo."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetService</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tentativa de definir quando a credencial é somente leitura."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  id: SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém ou define o validador de certificado SSL para usar."
  remarks: "Essa propriedade permite que você use o WCF X509CertificateValidator para validar um certificado de servidor em um cliente do WCF."
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: "Um <xref href=&quot;System.ServiceModel.Security.X509ServiceCertificateAuthentication&quot;> </xref> instância."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
- uid: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509ServiceCertificateAuthentication
  nameWithType: X509ServiceCertificateAuthentication
  fullName: System.ServiceModel.Security.X509ServiceCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
- uid: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<Uri,X509Certificate2>
  nameWithType: Dictionary<Uri,X509Certificate2>
  fullName: System.Collections.Generic.Dictionary<System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: X509Certificate2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
