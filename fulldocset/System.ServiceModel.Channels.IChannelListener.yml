### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IChannelListener
  id: IChannelListener
  children:
  - System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.IChannelListener.GetProperty``1
  - System.ServiceModel.Channels.IChannelListener.Uri
  - System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)
  langs:
  - csharp
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
  type: Interface
  summary: "Define a interface que deve ser implementada por um ouvinte de canal para aceitar canais."
  remarks: "A interface IChannelListener representa a interface base para ouvintes de canais.       Ouvintes de canais e seus canais associados são geralmente usados por serviços que recebem comunicações iniciadas por clientes. Canal fábricas que implementam o <xref:System.ServiceModel.Channels.IChannelFactory>interface, por outro lado, fornece os mecanismos usados para criar os canais por meio do qual a comunicação com um serviço é iniciada.</xref:System.ServiceModel.Channels.IChannelFactory>"
  syntax:
    content: 'public interface IChannelListener : System.ServiceModel.ICommunicationObject'
  implements:
  - System.ServiceModel.ICommunicationObject
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicia uma operação assíncrona para aguardar um canal chegar que deve ser concluído dentro de um intervalo de tempo especificado."
  syntax:
    content: public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>que especifica quanto tempo a aguardar uma operação de canal tem para concluir antes do tempo limite.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "O <xref:System.AsyncCallback>delegate que recebe a notificação de conclusão assíncrona da espera por uma operação de canal.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Um objeto, especificado pelo aplicativo, que contém informações de estado associadas a espera assíncrona para uma operação de canal."
    return:
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que faz referência a espera assíncrona para uma operação de canal.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)
  id: EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: IChannelListener.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Conclui uma operação assíncrona para aguardar canais chegar."
  syntax:
    content: public bool EndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>retornado por uma chamada ao método EndWaitForChannel.</xref:System.IAsyncResult>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma mensagem foi recebida; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.GetProperty``1
  id: GetProperty``1
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: GetProperty()
  nameWithType: IChannelListener.GetProperty()
  fullName: System.ServiceModel.Channels.IChannelListener.GetProperty()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public T GetProperty<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "A ser adicionado."
  overload: System.ServiceModel.Channels.IChannelListener.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.Uri
  id: Uri
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: Uri
  nameWithType: IChannelListener.Uri
  fullName: System.ServiceModel.Channels.IChannelListener.Uri
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém o URI no qual os ouvintes que são gerados pela fábrica de escutam."
  remarks: "Esse URI representa o endereço de transporte no qual o <xref:System.ServiceModel.Channels.IChannelListener>está escutando para mensagens.</xref:System.ServiceModel.Channels.IChannelListener>"
  syntax:
    content: public Uri Uri { get; }
    return:
      type: System.Uri
      description: "O <xref:System.Uri>em que os ouvintes que são gerados pela fábrica de escutam.</xref:System.Uri>"
  overload: System.ServiceModel.Channels.IChannelListener.Uri*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)
  id: WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: WaitForChannel(TimeSpan)
  nameWithType: IChannelListener.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.IChannelListener.WaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Espera por um canal chegar."
  syntax:
    content: public bool WaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>que especifica quanto tempo a aguardar uma operação de canal tem para concluir antes do tempo limite.</xref:System.TimeSpan>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um canal foi recebido antes do intervalo de tempo especificado pelo <code> timeout </code>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.IChannelListener.WaitForChannel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: IChannelListener.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(IAsyncResult)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.IChannelListener.GetProperty``1
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: GetProperty()
  nameWithType: IChannelListener.GetProperty()
  fullName: System.ServiceModel.Channels.IChannelListener.GetProperty()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.IChannelListener.Uri
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: Uri
  nameWithType: IChannelListener.Uri
  fullName: System.ServiceModel.Channels.IChannelListener.Uri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: WaitForChannel(TimeSpan)
  nameWithType: IChannelListener.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.IChannelListener.WaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: BeginWaitForChannel
  nameWithType: IChannelListener.BeginWaitForChannel
- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: EndWaitForChannel
  nameWithType: IChannelListener.EndWaitForChannel
- uid: System.ServiceModel.Channels.IChannelListener.GetProperty<T>*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: GetProperty<T>
  nameWithType: IChannelListener.GetProperty<T>
- uid: System.ServiceModel.Channels.IChannelListener.Uri*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: Uri
  nameWithType: IChannelListener.Uri
- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: WaitForChannel
  nameWithType: IChannelListener.WaitForChannel
