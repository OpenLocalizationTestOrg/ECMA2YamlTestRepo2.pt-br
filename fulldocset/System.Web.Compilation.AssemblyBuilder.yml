### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.AssemblyBuilder
  id: AssemblyBuilder
  children:
  - System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)
  - System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  - System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  - System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)
  - System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  - System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)
  - System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)
  langs:
  - csharp
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Web.Compilation.AssemblyBuilder
  type: Class
  summary: "Fornece um contêiner para a criação de um assembly de um ou mais caminhos virtuais dentro de um projeto ASP.NET."
  remarks: "Instâncias da classe AssemblyBuilder são usadas com <xref:System.Web.Compilation.BuildProvider>classe métodos para criar um ou mais arquivos em um assembly compilado.</xref:System.Web.Compilation.BuildProvider>       O <xref:System.Web.Compilation.BuildProvider>classe define a funcionalidade de compilação para arquivos individuais, e a classe AssemblyBuilder combina o código-fonte contribuído por cada <xref:System.Web.Compilation.BuildProvider>instância em um único assembly.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider> O ASP.NET criar ambiente passa um objeto AssemblyBuilder o <xref:System.Web.Compilation.BuildProvider>métodos ao criar um assembly de um ou mais arquivos, para que cada <xref:System.Web.Compilation.BuildProvider>instância pode contribuir código-fonte para o seu arquivo de assembly global.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider>       O ambiente de compilação do ASP.NET determina o idioma e o compilador necessário pelos arquivos dentro do projeto, com base no <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName>propriedade.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> Os arquivos de grupos do ambiente de compilação com base nas suas configurações de compilador e cria um conjunto de arquivos que exigem o mesmo compilador.       O <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>propriedade indica a <xref:System.CodeDom.Compiler.CodeDomProvider>contribuiu com implementação que usa o ambiente de compilação do ASP.NET para compilar um assembly do código-fonte por cada <xref:System.Web.Compilation.BuildProvider>implementação.</xref:System.Web.Compilation.BuildProvider> </xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>       Um <xref:System.Web.Compilation.BuildProvider>objeto contribui com o código-fonte na forma de um gráfico de CodeDOM usando o <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>método.</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> </xref:System.Web.Compilation.BuildProvider> Um <xref:System.Web.Compilation.BuildProvider>objeto contribui com o código-fonte armazenado em um arquivo físico usando o <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>método.</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> </xref:System.Web.Compilation.BuildProvider>       Depois de cada <xref:System.Web.Compilation.BuildProvider>objeto contribui com o código-fonte usando os métodos AssemblyBuilder apropriados, o ambiente de compilação do ASP.NET usa a classe AssemblyBuilder para compilar o código-fonte coletados em um assembly.</xref:System.Web.Compilation.BuildProvider>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see <xref:System.CodeDom.CodeCompileUnit>.  \n  \n [!code-cs[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/csharp/t-system.web.compilation_10_1.cs)]\n [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/visualbasic/t-system.web.compilation_10_1.vb)]"
  syntax:
    content: public class AssemblyBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)
  id: AddAssemblyReference(System.Reflection.Assembly)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: AddAssemblyReference(Assembly)
  nameWithType: AssemblyBuilder.AddAssemblyReference(Assembly)
  fullName: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(Assembly)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Adiciona um assembly que é referenciado por código-fonte gerado para um arquivo."
  remarks: "Um <xref:System.Web.Compilation.BuildProvider>implementação usa o método AddAssemblyReference ao gerar código-fonte que faz referência a tipos de dentro do assembly de entrada.</xref:System.Web.Compilation.BuildProvider>       O ASP.NET criar ambiente inicializa a coleção padrão de assemblies disponíveis para consulta por meio do provedor de compilação no <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=fullName>propriedade.</xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=fullName> Se o provedor de compilação gera o código-fonte que faz referência a assemblies adicionais, o provedor de compilação adiciona os assemblies adicionais usando o método AddAssemblyReference. O ambiente de compilação do ASP.NET resolve tipos externos durante a compilação do assembly usando ambos os assemblies referenciados adicionados por criar provedores e a coleção padrão de assemblies disponíveis para referência.       Normalmente, um <xref:System.Web.Compilation.BuildProvider>objeto adiciona o código-fonte para o <xref:System.Web.Compilation.AssemblyBuilder>objeto o <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>método.</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> </xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider> Se um provedor de compilação gera um código de origem que usa um tipo externo, o provedor de compilação adiciona o assembly do tipo usando o método AddAssemblyReference.       Use o método AddAssemblyReference para adicionar um assembly referenciado necessário no código-fonte gerado por um <xref:System.Web.Compilation.BuildProvider>instância de um tipo de arquivo específico.</xref:System.Web.Compilation.BuildProvider> Use o [assemblies elemento de compilação (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/3811c448-af1c-498d-be2b-6ed2634c51e9) elemento de configuração para configurar um assembly de referência em vários tipos de arquivo em um projeto."
  syntax:
    content: public void AddAssemblyReference (System.Reflection.Assembly a);
    parameters:
    - id: a
      type: System.Reflection.Assembly
      description: "Um assembly referenciado por um compilação unidade ou fonte de arquivo de código incluído na compilação do assembly."
  overload: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  id: AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  nameWithType: AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  fullName: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Adiciona o código-fonte para o assembly na forma de um gráfico CodeDOM."
  remarks: "Uma <xref:System.Web.Compilation.BuildProvider>implementação chama o método AddCodeCompileUnit ao gerar um gráfico CodeDOM para um caminho virtual.</xref:System.Web.Compilation.BuildProvider> Código-fonte adicionado com AddCodeCompileUnit está incluído na compilação do assembly.       Do normalmente, um provedor de compilação <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>Leituras de implementação de método de <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>propriedade, analisa o conteúdo e, em seguida, adiciona o código-fonte gerado especificado <xref:System.Web.Compilation.AssemblyBuilder>objeto.</xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> </xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> O provedor de compilação usa o método de AddCodeCompileUnit para adicionar o código-fonte como um gráfico CodeDOM ao assembly. Como alternativa, o provedor de compilação pode usar o <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>para adicionar o código-fonte como um arquivo físico para o assembly.</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>"
  syntax:
    content: public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);
    parameters:
    - id: buildProvider
      type: System.Web.Compilation.BuildProvider
      description: "Gerando o provedor de compilação `compileUnit`."
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "A unidade de compilação de código para incluir na compilação do assembly."
  overload: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  id: CodeDomProvider
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: CodeDomProvider
  nameWithType: AssemblyBuilder.CodeDomProvider
  fullName: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Obtém o compilador usado para compilar o código-fonte em um assembly."
  remarks: "A propriedade CodeDomProvider indica o <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName>contribuiu com implementação que usa o ambiente de compilação do ASP.NET para compilar um assembly do código-fonte por cada <xref:System.Web.Compilation.BuildProvider>implementação.</xref:System.Web.Compilation.BuildProvider> </xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName>       O ambiente de compilação do ASP.NET determina o idioma e o compilador necessário pelos arquivos dentro do projeto, com base no <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName>propriedade.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> Os arquivos de grupos do ambiente de compilação com base nas suas configurações de compilador e cria um conjunto de arquivos que exigem o mesmo compilador."
  syntax:
    content: public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }
    return:
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "Somente leitura <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref> implementação usada para compilar o código-fonte contribuíram por cada provedor de compilação em um assembly."
  overload: System.Web.Compilation.AssemblyBuilder.CodeDomProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)
  id: CreateCodeFile(System.Web.Compilation.BuildProvider)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: CreateCodeFile(BuildProvider)
  nameWithType: AssemblyBuilder.CreateCodeFile(BuildProvider)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(BuildProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Permite que um provedor de compilação criar um arquivo de origem temporário e incluir o arquivo de origem na compilação do assembly."
  remarks: "Uma <xref:System.Web.Compilation.BuildProvider>implementação chama o método CreateCodeFile ao gerar um arquivo de origem para um caminho virtual.</xref:System.Web.Compilation.BuildProvider> Código-fonte adicionado com CreateCodeFile está incluído na compilação do assembly.       Normalmente, um provedor de compilação <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>Leituras de implementação de método de <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>propriedade, analisa o conteúdo e, em seguida, adiciona o código-fonte gerado especificado <xref:System.Web.Compilation.AssemblyBuilder>objeto.</xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> </xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> O provedor de compilação usa o método CreateCodeFile para adicionar o código-fonte como um arquivo físico para o assembly. Como alternativa, o provedor de compilação pode usar o <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>para adicionar o código-fonte como um gráfico CodeDOM ao assembly.</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>       Depois de chamar CreateCodeFile, o provedor de compilação grava a fonte de conteúdo do arquivo usando retornado <xref:System.IO.TextWriter>objeto.</xref:System.IO.TextWriter> Após gravar o arquivo de origem, o <xref:System.Web.Compilation.BuildProvider>objeto deve usar o <xref:System.IO.TextWriter.Close%2A>método para fechar o <xref:System.IO.TextWriter>de objeto e liberar recursos do sistema associados.</xref:System.IO.TextWriter> </xref:System.IO.TextWriter.Close%2A> </xref:System.Web.Compilation.BuildProvider>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the CreateCodeFile method. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see <xref:System.CodeDom.CodeCompileUnit>.  \n  \n [!code-cs[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/csharp/3ed51741-a65c-4f55-993c-_1.cs)]\n [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/visualbasic/3ed51741-a65c-4f55-993c-_1.vb)]"
  syntax:
    content: public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);
    parameters:
    - id: buildProvider
      type: System.Web.Compilation.BuildProvider
      description: "O provedor de compilação de gerar o arquivo de origem do código."
    return:
      type: System.IO.TextWriter
      description: "Um open <xref:System.IO.TextWriter>que pode ser usado para gravar o código-fonte em um arquivo temporário.</xref:System.IO.TextWriter>"
  overload: System.Web.Compilation.AssemblyBuilder.CreateCodeFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  id: CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: CreateEmbeddedResource(BuildProvider,String)
  nameWithType: AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Permite que um provedor de compilação criar um arquivo de recurso para incluir na compilação do assembly."
  remarks: "Depois de chamar o método CreateEmbeddedResource, um <xref:System.Web.Compilation.BuildProvider>objeto grava o recurso de conteúdo do arquivo usando retornado <xref:System.IO.Stream>objeto.</xref:System.IO.Stream> </xref:System.Web.Compilation.BuildProvider> Por exemplo, o provedor de compilação pode gravar os recursos usando um <xref:System.Resources.ResourceWriter>objeto.</xref:System.Resources.ResourceWriter> Depois de gravar o arquivo de recurso, o provedor de compilação deve usar o <xref:System.IO.Stream.Close%2A>método para fechar o <xref:System.IO.Stream>de objeto e liberar recursos do sistema associados.</xref:System.IO.Stream> </xref:System.IO.Stream.Close%2A>"
  syntax:
    content: public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);
    parameters:
    - id: buildProvider
      type: System.Web.Compilation.BuildProvider
      description: "O provedor de compilação gera o recurso."
    - id: name
      type: System.String
      description: "O nome do arquivo de recurso a ser criado."
    return:
      type: System.IO.Stream
      description: "Um open <xref:System.IO.Stream>que pode ser usado para gravar os recursos, que são incluídos na compilação do assembly.</xref:System.IO.Stream>"
  overload: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>não é um nome de arquivo válido."
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)
  id: GenerateTypeFactory(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: GenerateTypeFactory(String)
  nameWithType: AssemblyBuilder.GenerateTypeFactory(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Insere um modelo de fábrica rápida de objeto para um tipo no assembly compilado."
  remarks: "Um <xref:System.Web.Compilation.BuildProvider>implementação chama o método GenerateTypeFactory para otimizar o desempenho para criações frequentes de instâncias do tipo.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public void GenerateTypeFactory (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "O nome do tipo para gerar."
  overload: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)
  id: GetTempFilePhysicalPath(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: GetTempFilePhysicalPath(String)
  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Gera um caminho de arquivo temporário."
  remarks: "Um <xref:System.Web.Compilation.BuildProvider>implementação chama o método GetTempFilePhysicalPath para obter um caminho de arquivo temporário é excluído automaticamente depois que o assembly é compilado.</xref:System.Web.Compilation.BuildProvider>       O método GetTempFilePhysicalPath gera um caminho de arquivo temporário exclusivo, mas não cria o arquivo."
  syntax:
    content: public string GetTempFilePhysicalPath (string extension);
    parameters:
    - id: extension
      type: System.String
      description: "A extensão de arquivo a ser usado para o arquivo temporário."
    return:
      type: System.String
      description: "Um caminho para um arquivo temporário, com a extensão de arquivo especificado."
  overload: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddAssemblyReference(Assembly)
  nameWithType: AssemblyBuilder.AddAssemblyReference(Assembly)
  fullName: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  nameWithType: AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  fullName: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
- uid: System.Web.Compilation.BuildProvider
  parent: System.Web.Compilation
  isExternal: false
  name: BuildProvider
  nameWithType: BuildProvider
  fullName: System.Web.Compilation.BuildProvider
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CodeDomProvider
  nameWithType: AssemblyBuilder.CodeDomProvider
  fullName: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
- uid: System.CodeDom.Compiler.CodeDomProvider
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeDomProvider
  nameWithType: CodeDomProvider
  fullName: System.CodeDom.Compiler.CodeDomProvider
- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateCodeFile(BuildProvider)
  nameWithType: AssemblyBuilder.CreateCodeFile(BuildProvider)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(BuildProvider)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateEmbeddedResource(BuildProvider,String)
  nameWithType: AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GenerateTypeFactory(String)
  nameWithType: AssemblyBuilder.GenerateTypeFactory(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(String)
- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GetTempFilePhysicalPath(String)
  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(String)
- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddAssemblyReference
  nameWithType: AssemblyBuilder.AddAssemblyReference
- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddCodeCompileUnit
  nameWithType: AssemblyBuilder.AddCodeCompileUnit
- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CodeDomProvider
  nameWithType: AssemblyBuilder.CodeDomProvider
- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateCodeFile
  nameWithType: AssemblyBuilder.CreateCodeFile
- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateEmbeddedResource
  nameWithType: AssemblyBuilder.CreateEmbeddedResource
- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GenerateTypeFactory
  nameWithType: AssemblyBuilder.GenerateTypeFactory
- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GetTempFilePhysicalPath
  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath
