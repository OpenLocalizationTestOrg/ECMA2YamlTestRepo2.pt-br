### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IBindingRuntimePreferences
  id: IBindingRuntimePreferences
  children:
  - System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  langs:
  - csharp
  name: IBindingRuntimePreferences
  nameWithType: IBindingRuntimePreferences
  fullName: System.ServiceModel.Channels.IBindingRuntimePreferences
  type: Interface
  summary: "Define o contrato opcional que pode implementar uma associação para especificar se as solicitações de entrada são manipuladas forma síncrona ou assíncrona pelo serviço."
  remarks: "Em alguns casos pode ser mais eficiente para uma associação para processar mensagens com síncronos <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>ou <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>métodos.</xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> </xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> Um <xref:System.ServiceModel.Channels.Binding>classe pode implementar IBindingRuntimePreferences para indicar a chamadores que isso é preferencial.</xref:System.ServiceModel.Channels.Binding>       Se uma associação não implementa IBindingRuntimePreferences, o [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] camada de tempo de execução do serviço modelo padronizado para usar as versões assíncronas de `Receive` e `Request` métodos. Se uma associação de implementar IBindingRuntimePreferences, o [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] camada de tempo de execução de modelo de serviço verifica o valor de <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>e a usa para determinar se deve chamar as versões síncronas desses métodos (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> ou <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) ou as versões assíncronas (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> e <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29>ou <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A>e <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.</xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> </xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> </xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> </xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> </xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> </xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> </xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> Se IBindingRuntimePreferences é implementado por meio da associação e retorna `true` do <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>propriedade, é recomendável que você use síncronos <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>e <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>métodos para receber mensagens do canal.</xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> </xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> </xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> Se a associação não implementa IBindingRuntimePreferences ou retorna `false` do <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>propriedade, é recomendável que você use o assíncrona <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A>e <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29>ou <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A>e <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>métodos.</xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> </xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> </xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> </xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> </xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>       Independentemente do valor retornado pelo <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>propriedade, todas as associações ainda deverá fornecer implementações válidas de ambas as versões síncronas e assíncronas do `Receive` métodos para os tipos de canal específico implementados.</xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> Para obter mais informações sobre a implementação de canais personalizados, consulte [canais de desenvolvimento](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows the implementation of a binding that implements the IBindingRuntimePreferences interface. This code is taken from the [Chunking Channel](~/add/includes/ajax-current-ext-md.md) sample:  \n  \n [!code-cs[S_UE_ChunkingChannel#0](~/add/codesnippet/csharp/t-system.servicemodel.ch_5_1.cs)]"
  syntax:
    content: public interface IBindingRuntimePreferences
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  id: ReceiveSynchronously
  parent: System.ServiceModel.Channels.IBindingRuntimePreferences
  langs:
  - csharp
  name: ReceiveSynchronously
  nameWithType: IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém um valor que indica se as solicitações de entrada podem ser tratadas mais eficientemente forma síncrona ou assíncrona."
  remarks: "As ligações (fornecido pelo sistema) padrão fornecidas pelo [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] implementar essa interface e em alguns casos, substituir o valor padrão para processar mensagens de entrada de forma síncrona."
  example:
  - '[!code-cs[S_UE_ChunkingChannel#1](~/add/codesnippet/csharp/p-system.servicemodel.ch_0_1.cs)]'
  syntax:
    content: public bool ReceiveSynchronously { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as solicitações podem ser tratadas com mais eficiência de forma síncrona; Caso contrário,<xref uid=&quot;langword_csharp_ false&quot; name=&quot; false&quot; href=&quot;&quot;></xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, para manipular solicitações de forma assíncrona."
  overload: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  parent: System.ServiceModel.Channels.IBindingRuntimePreferences
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously*
  parent: System.ServiceModel.Channels.IBindingRuntimePreferences
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: IBindingRuntimePreferences.ReceiveSynchronously
