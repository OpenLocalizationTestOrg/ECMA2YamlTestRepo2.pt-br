### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  id: WorkflowMarkupSerializer
  children:
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.Xml.XmlReader)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlReader)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type,System.String)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlWriter,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty
  - System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty
  langs:
  - csharp
  name: WorkflowMarkupSerializer
  nameWithType: WorkflowMarkupSerializer
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  type: Class
  summary: "Fornece os serviços de serialização extensible Application Markup Language (XAML) para fluxos de trabalho em tempo de design."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]WorkflowMarkupSerializer fornece métodos que serializa o fluxo de trabalho e <xref:System.Workflow.ComponentModel.Activity>classes em XAML de formato e desserializar o conteúdo XAML em objetos de classe de fluxo de trabalho e atividades.</xref:System.Workflow.ComponentModel.Activity> Esses serviços são usados principalmente por designers de fluxo de trabalho para manter as classes na superfície de design de fluxo de trabalho.       WorkflowMarkupSerializer é a classe base para todos os serializadores de marcação incluídos no <xref:System.Workflow.ComponentModel.Serialization>namespace.</xref:System.Workflow.ComponentModel.Serialization>       Para obter mais informações, consulte [serialização](~/add/includes/ajax-current-ext-md.md).       WorkflowMarkupSerializer não oferece suporte à serialização de tipos aninhados.       A funcionalidade de WorkflowMarkupSerializer depende da funcionalidade de outros tipos de fora do Windows Workflow Foundation. Com base nas limitações desses outros tipos, nem todos os tipos de dados podem ser serializados por meio de WorkflowMarkupSerializer. A seguir está que uma lista é um exemplo de alguns tipos sem suporte.      > [!NOTE] > Isso não é uma lista exaustiva e completa de tipos incompatíveis.       Matrizes (com suporte apenas se a propriedade não é decorada com `DesignerSerializationVisibility.Content` valor do atributo) tipos sem construtores sem parâmetros tipos genéricos de matrizes multidimensionais (genérico `List` e `Dictionary` tipos com suporte apenas se a propriedade é decorada com `DesignerSerializationVisibility.Content` valor do atributo) `Hashtable` `Queue` `Stack` `XmlDocument` `MailMessage` `Bitmap` enumerações de matrizes de enumeração decorados com o FlagsAttribute além dessa lista, qualquer propriedade decorada com ambos o `ContentPropertyAttibute` e o `DesignerSerializationVisibilityAttribute` não pode ser serializado por `WorkflowMarkupSerializer`.                                   "
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationProvider))]

      public class WorkflowMarkupSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: WorkflowMarkupSerializer()
  nameWithType: WorkflowMarkupSerializer.WorkflowMarkupSerializer()
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.WorkflowMarkupSerializer()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example demonstrates how to create a new instance of the <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> class.  This code example is part of the OutlookWorkflowWizard SDK Sample from the Loader.cs file. For more information, see [Outlook Workflow Wizard](http://msdn.microsoft.com/en-us/7b2ba92b-8456-43f3-87fc-184ffdec4408).  \n  \n [!code-cs[WF_Samples#97](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#97)]\n [!code-vb[WF_Samples#97](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#97)]"
  syntax:
    content: public WorkflowMarkupSerializer ();
    parameters: []
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object,System.Object)
  id: AddChild(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: AddChild(WorkflowMarkupSerializationManager,Object,Object)
  nameWithType: WorkflowMarkupSerializer.AddChild(WorkflowMarkupSerializationManager,Object,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(WorkflowMarkupSerializationManager,Object,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Adiciona um objeto filho para o objeto especificado."
  remarks: "Diferente de comportamento de exceção AddChild não fornece nenhum comportamento padrão. Você deve substituir <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>para fornecer a lógica para este método em um serializador de herança.</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>"
  syntax:
    content: protected virtual void AddChild (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object parentObject, object childObj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> a ser usado nesta operação."
    - id: parentObject
      type: System.Object
      description: "O <xref:System.Object>ao qual adicionar o objeto filho.</xref:System.Object>"
    - id: childObj
      type: System.Object
      description: "A <xref:System.Object>ser adicionado.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parentObject</code>ou<code> childObj</code> contém uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: CanSerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: CanSerializeToString(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.CanSerializeToString(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Retorna um valor booleano que indica se o objeto especificado pode ser serializado em uma cadeia de caracteres."
  syntax:
    content: protected virtual bool CanSerializeToString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> usado para serializar a este objeto."
    - id: value
      type: System.Object
      description: "<xref:System.Object>.</xref:System.Object> Especificado"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto especificado pode ser serializado em uma cadeia de caracteres; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: ClearChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: ClearChildren(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.ClearChildren(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Remove todos os objetos filho do objeto especificado."
  remarks: "Diferente de comportamento de exceção ClearChildren não fornece nenhum comportamento padrão. Você deve substituir <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>para fornecer a lógica para este método em um serializador de herança.</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>"
  syntax:
    content: protected virtual void ClearChildren (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> suporte a esta operação."
    - id: obj
      type: System.Object
      description: "O <xref:System.Object>do qual remover todos os objetos filho.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>obj</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty
  id: ClrNamespacesProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: ClrNamespacesProperty
  nameWithType: WorkflowMarkupSerializer.ClrNamespacesProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Representa um anexado <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> que é usado para definir quais assemblies de referência para atividades personalizadas."
  remarks: "Para obter mais informações sobre essa propriedade de dependência, consulte [marcação de fluxo de trabalho usando](http://msdn.microsoft.com/en-us/e2693a12-640b-4ccb-8fb0-db3075e94aa4).       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ClrNamespacesProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)
  id: CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: CreateInstance(WorkflowMarkupSerializationManager,Type)
  nameWithType: WorkflowMarkupSerializer.CreateInstance(WorkflowMarkupSerializationManager,Type)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(WorkflowMarkupSerializationManager,Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Cria uma instância especificada <xref:System.Type>usando especificado <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref>.</xref:System.Type>"
  remarks: "CreateInstance usa o construtor de tipo que melhor descreva o parâmetro especificado."
  syntax:
    content: protected virtual object CreateInstance (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, Type type);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> suporte a esta operação."
    - id: type
      type: System.Type
      description: "Especificado<xref:System.Type></xref:System.Type>"
    return:
      type: System.Object
      description: "Uma instância de <xref:System.Type>.</xref:System.Type> especificado"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.Xml.XmlReader)
  id: Deserialize(System.Xml.XmlReader)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: Deserialize(XmlReader)
  nameWithType: WorkflowMarkupSerializer.Deserialize(XmlReader)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(XmlReader)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Desserializa a marcação de fluxo de trabalho em um <xref:System.Object>.</xref:System.Object>"
  remarks: "Para obter mais informações sobre a marcação de fluxo de trabalho, consulte [marcação de fluxo de trabalho usando](http://msdn.microsoft.com/en-us/e2693a12-640b-4ccb-8fb0-db3075e94aa4)."
  syntax:
    content: public object Deserialize (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>que contém a definição de fluxo de trabalho.</xref:System.Xml.XmlReader>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém a definição do fluxo de trabalho definida no arquivo de marcação de fluxo de trabalho ou fluxo.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlReader)
  id: Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlReader)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: Deserialize(IDesignerSerializationManager,XmlReader)
  nameWithType: WorkflowMarkupSerializer.Deserialize(IDesignerSerializationManager,XmlReader)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(IDesignerSerializationManager,XmlReader)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Desserializa a marcação de fluxo de trabalho em um <xref:System.Object>usando o Gerenciador de serialização especificada.</xref:System.Object>"
  remarks: "Para obter mais informações sobre a marcação de fluxo de trabalho, consulte [marcação de fluxo de trabalho usando](http://msdn.microsoft.com/en-us/e2693a12-640b-4ccb-8fb0-db3075e94aa4)."
  syntax:
    content: public object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, System.Xml.XmlReader reader);
    parameters:
    - id: serializationManager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Um objeto que implementa o <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> interface, como <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref>."
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>que contém a definição de fluxo de trabalho.</xref:System.Xml.XmlReader>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém a definição do fluxo de trabalho definida no arquivo de marcação de fluxo de trabalho ou fluxo.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type,System.String)
  id: DeserializeFromString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type,System.String)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: DeserializeFromString(WorkflowMarkupSerializationManager,Type,String)
  nameWithType: WorkflowMarkupSerializer.DeserializeFromString(WorkflowMarkupSerializationManager,Type,String)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(WorkflowMarkupSerializationManager,Type,String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Desserializa o conteúdo de extensible Application Markup Language (XAML) da cadeia de caracteres especificada, conforme o tipo de dado da propriedade a ser desserializado."
  remarks: "`value`deve atender a um dos seguintes critérios:-é um tipo primitivo, uma cadeia de caracteres, uma enumeração ou <xref:System.TimeSpan>.</xref:System.TimeSpan>      -ele pode ser atribuído do <xref:System.IConvertible>interface ou a <xref:System.Delegate>ou <xref:System.Type>classes.</xref:System.Type> </xref:System.Delegate> </xref:System.IConvertible>"
  syntax:
    content: protected virtual object DeserializeFromString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, Type propertyType, string value);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> que gerencia o processo de desserialização."
    - id: propertyType
      type: System.Type
      description: "O <xref:System.Type>associado à propriedade a ser desserializado.</xref:System.Type>"
    - id: value
      type: System.String
      description: "Uma cadeia de caracteres que contém o XAML para desserializar."
    return:
      type: System.Object
      description: "Desserializado <xref:System.Object>.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serializationManager</code>, <code>propertyType</code>, ou <code>value</code>, contém uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty
  id: EventsProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: EventsProperty
  nameWithType: WorkflowMarkupSerializer.EventsProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Representa um anexado <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> que define os nomes de propriedades do manipulador de eventos."
  remarks: "Esta propriedade é usada somente em tempo de design, ao emitir programaticamente uma instância de fluxo de trabalho usando o modelo de objeto. Representa o XAML que referencia o manipulador de eventos, que ainda não foi compilado. Esta propriedade contém um `Hashtable`, com o nome do evento e pares de nome-valor do manipulador de eventos. Após a compilação, a propriedade de evento é associada diretamente o manipulador.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  example:
  - "The following example shows how to set the value of the EventsProperty dependency property.  \n  \n```c#  \nCodeActivity code1 = new CodeActivity();  \nHashtable eventsHashtable = new Hashtable();  \neventsHashtable.Add(\"ExecuteCode\", \"methodName1\");  \ncode1.SetValue(WorkflowMarkupSerializer.EventsProperty, eventsHashtable);  \n```"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty EventsProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: GetChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: GetChildren(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.GetChildren(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Recupera uma lista de objetos filho para o objeto especificado"
  remarks: "A menos que substituída em uma classe que herda de GetChildren sempre retorna `null` (`Nothing`)."
  syntax:
    content: protected virtual System.Collections.IList GetChildren (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> que oferece suporte a esta operação."
    - id: obj
      type: System.Object
      description: "O <xref:System.Object>da qual recuperar os objetos filho.</xref:System.Object>"
    return:
      type: System.Collections.IList
      description: "Um <xref:System.Collections.IList>que contém os objetos filho de <code> obj </code>.</xref:System.Collections.IList>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>obj</code>ou <code>serializationManager</code> contém uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: GetEvents(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: GetEvents(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.GetEvents(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Recupera informações sobre todos os eventos associados a <xref:System.Object>.</xref:System.Object> especificado"
  syntax:
    content: protected virtual System.Reflection.EventInfo[] GetEvents (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> que gerencia o processo de desserialização."
    - id: obj
      type: System.Object
      description: "O <xref:System.Object>para procurar objetos de evento.</xref:System.Object>"
    return:
      type: System.Reflection.EventInfo[]
      description: "Um <xref:System.Reflection.EventInfo>matriz que contém informações sobre os eventos associados ao <code> obj </code>.</xref:System.Reflection.EventInfo>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serializationManager</code>ou <code>obj</code> contém uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: GetProperties(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.GetProperties(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Recupera informações sobre todas as propriedades associadas ao objeto especificado."
  syntax:
    content: protected virtual System.Reflection.PropertyInfo[] GetProperties (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> que gerencia o processo de serialização."
    - id: obj
      type: System.Object
      description: "O <xref:System.Object>para pesquisar propriedades.</xref:System.Object>"
    return:
      type: System.Reflection.PropertyInfo[]
      description: "A <xref:System.Reflection.PropertyInfo>matriz que contém informações sobre as propriedades associadas ao <code> obj </code>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serializationManager</code>ou <code>obj</code> contém uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: OnAfterDeserialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnAfterDeserialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Substituído. Notifica o <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&quot;> </xref> que um objeto apenas tiver sido desserializado."
  remarks: "OnAfterDeserialize é chamado imediatamente após o <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A>execuções do método.</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A> Você pode substituir OnAfterDeserialize em uma classe que herda <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>para executar qualquer processamento necessário `obj` depois que ele foi serializado para XAML extensible Application Markup Language ().</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>       <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A>fornece o comportamento não padrão.</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A> Você deve substituí-la em uma classe derivada para adicionar qualquer lógica de processamento."
  syntax:
    content: protected virtual void OnAfterDeserialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> que gerencia o processo de serialização."
    - id: obj
      type: System.Object
      description: "O <xref:System.Object>que foi desserializado.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: OnAfterSerialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnAfterSerialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Notifica o <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&quot;> </xref> que tem um objeto apenas foi serializado."
  remarks: "OnAfterSerialize é chamado imediatamente após o <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A>execuções do método.</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A> Você pode substituir OnAfterSerialize em uma classe que herda <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>para executar qualquer processamento necessário `obj` depois que ele foi serializado para XAML extensible Application Markup Language ().</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>       OnAfterSerialize fornece um comportamento não padrão. Você deve substituí-la em uma classe derivada para adicionar qualquer lógica de processamento."
  syntax:
    content: protected virtual void OnAfterSerialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> que gerencia o processo de serialização."
    - id: obj
      type: System.Object
      description: "O <xref:System.Object>que foi serializado.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: OnBeforeDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: OnBeforeDeserialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnBeforeDeserialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Substituído. Notifica o <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&quot;> </xref> que um objeto está prestes a ser desserializado."
  remarks: "OnBeforeDeserialize é chamado imediatamente antes do <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A>execuções do método.</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A> Você pode substituir <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A>em uma classe que herda <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>para executar o processamento necessário em `obj` antes que ele é serializado para XAML extensible Application Markup Language ().</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> </xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A>       OnBeforeDeserialize fornece um comportamento não padrão. Você deve substituí-la em uma classe derivada para adicionar qualquer lógica de processamento."
  syntax:
    content: protected virtual void OnBeforeDeserialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> que gerencia o processo de desserialização."
    - id: obj
      type: System.Object
      description: "O <xref:System.Object>que foi desserializado.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: OnBeforeSerialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnBeforeSerialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Notifica o <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&quot;> </xref> que <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize*>está prestes a ser executado.</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize*>"
  remarks: "OnBeforeSerialize é chamado imediatamente antes do <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A>execuções do método.</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A> Você pode substituir OnBeforeSerialize em uma classe que herda <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>para executar o processamento necessário em `obj` antes de <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A>começou a etapa no processo de serialização.</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A> </xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>       OnBeforeSerialize fornece um comportamento não padrão. Você deve substituí-la em uma classe derivada para adicionar qualquer lógica de processamento."
  syntax:
    content: protected virtual void OnBeforeSerialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> que gerencia o processo de serialização."
    - id: obj
      type: System.Object
      description: "O <xref:System.Object>a ser serializado.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)
  id: Serialize(System.Xml.XmlWriter,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: Serialize(XmlWriter,Object)
  nameWithType: WorkflowMarkupSerializer.Serialize(XmlWriter,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(XmlWriter,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Serializa especificado <xref:System.Object>em um arquivo de marcação de fluxo de trabalho ou fluxo.</xref:System.Object>"
  remarks: "Você precisa serializar a uma nova instância de um tipo de fluxo de trabalho ou da atividade de raiz em um fluxo de trabalho criado por meio de programação para criar marcação de fluxo de trabalho que pode ser usada para <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>criar um <xref:System.Workflow.Runtime.WorkflowInstance>.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>       Para obter mais informações sobre a marcação de fluxo de trabalho, consulte [marcação de fluxo de trabalho usando](http://msdn.microsoft.com/en-us/e2693a12-640b-4ccb-8fb0-db3075e94aa4)."
  syntax:
    content: public void Serialize (System.Xml.XmlWriter writer, object obj);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Um <xref:System.Xml.XmlWriter>que contém o fluxo ou um arquivo usado ao serializar.</xref:System.Xml.XmlWriter>"
    - id: obj
      type: System.Object
      description: "O objeto a ser serializado."
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>obj</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlWriter,System.Object)
  id: Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlWriter,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: Serialize(IDesignerSerializationManager,XmlWriter,Object)
  nameWithType: WorkflowMarkupSerializer.Serialize(IDesignerSerializationManager,XmlWriter,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(IDesignerSerializationManager,XmlWriter,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Serializa especificado <xref:System.Object>em um arquivo de marcação de fluxo de trabalho ou fluxo usando o Gerenciador de serialização especificada.</xref:System.Object>"
  remarks: "Você precisa serializar a uma nova instância de um tipo de fluxo de trabalho ou da atividade de raiz em um fluxo de trabalho criado por meio de programação para criar marcação de fluxo de trabalho que pode ser usada para <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>criar um <xref:System.Workflow.Runtime.WorkflowInstance>.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>       Para obter mais informações sobre a marcação de fluxo de trabalho, consulte [marcação de fluxo de trabalho usando](http://msdn.microsoft.com/en-us/e2693a12-640b-4ccb-8fb0-db3075e94aa4)."
  syntax:
    content: public void Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, System.Xml.XmlWriter writer, object obj);
    parameters:
    - id: serializationManager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Um objeto que implementa o <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> interface, como <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref>."
    - id: writer
      type: System.Xml.XmlWriter
      description: "Um <xref:System.Xml.XmlWriter>que contém o fluxo ou um arquivo usado ao serializar.</xref:System.Xml.XmlWriter>"
    - id: obj
      type: System.Object
      description: "O objeto a ser serializado."
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>obj</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: SerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: SerializeToString(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.SerializeToString(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Serializa especificado <xref:System.Object>para uma cadeia de caracteres.</xref:System.Object>"
  remarks: "Se um <xref:System.Delegate>instância é atribuível da `value`, SerializeToString grava o nome do método associado `value` para uma cadeia de caracteres.</xref:System.Delegate> Se um <xref:System.Type>instância é atribuível da `value`, SerializeToString grava o nome totalmente qualificado do tipo associado `value` para uma cadeia de caracteres.</xref:System.Type> Se nenhuma dessas condições existirem, converte SerializeToString `value` para uma cadeia de caracteres e grava o resultado."
  syntax:
    content: protected virtual string SerializeToString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> que gerencia o processo de serialização."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para serializar uma cadeia de caracteres.</xref:System.Object>"
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém o <xref:System.Object>.</xref:System.Object> serializado"
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serializationManager</code>ou <code>value</code> contém uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  id: ShouldSerializeValue(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: ShouldSerializeValue(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.ShouldSerializeValue(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(WorkflowMarkupSerializationManager,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Retorna um valor que indica se o <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&quot;> </xref> devem serializar especificado <xref:System.Object>.</xref:System.Object>"
  remarks: "ShouldSerializeValue é chamado pelo <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>antes de ele serializa o objeto especificado.</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> O método retorna `false` se `value` contém uma referência nula (`Nothing`) ou se `value` e <xref:System.ComponentModel.DefaultValueAttribute>do atual contexto de serialização são iguais.</xref:System.ComponentModel.DefaultValueAttribute>       Você pode substituir ShouldSerializeValue em uma classe que herda de <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>para personalizar como determinar se o objeto especificado deve ser serializado.</xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>"
  syntax:
    content: protected virtual bool ShouldSerializeValue (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);
    parameters:
    - id: serializationManager
      type: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager&quot;> </xref> que gerencia o processo de serialização."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para verificar.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar <code> value </code> deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serializationManager</code>contém uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty
  id: XClassProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: XClassProperty
  nameWithType: WorkflowMarkupSerializer.XClassProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Representa um anexado <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> que define o nome do tipo, que será criado durante a compilação."
  remarks: "Esse valor corresponde à `x:Class` atributo em XAML. Para obter mais informações, consulte [marcação de fluxo de trabalho usando](http://msdn.microsoft.com/en-us/e2693a12-640b-4ccb-8fb0-db3075e94aa4).       Esta propriedade é usada somente em tempo de design. Após a compilação, ele se torna o nome do tipo compilado.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty XClassProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty
  id: XCodeProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  langs:
  - csharp
  name: XCodeProperty
  nameWithType: WorkflowMarkupSerializer.XCodeProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Serialization
  summary: "Representa um exemplo de código inserido em XAML <xref uid=&quot;langword_csharp_x:Code&quot; name=&quot;x:Code&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "Esta propriedade é usada somente em tempo de design, ao mesmo tempo, por meio de programação emitindo um fluxo de trabalho usando o modelo de objeto. A propriedade contém um `CodeTypeMemberCollection` coleção é preenchida com `CodeSnippetTypeMember` elementos. Após a compilação, o código é compilado como parte do tipo gerado.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  example:
  - "The following example is XAML code that contains a code example that would be compiled during workflow compilation.  \n  \n```  \n<CodeActivity x:Name=\"codeActivity1\" ExecuteCode=\"methodName1\">  \n  <x:Code><![CDATA[  \n      void methodName1(object sender, EventArgs e)   \n      {  \n      }  \n  ]]></x:Code>  \n</CodeActivity>  \n```  \n  \n The following example shows how to set the same value for the XCodeProperty dependency property programmatically.  \n  \n```c#  \nCodeActivity code1 = new CodeActivity();  \n  \ncode1.SetValue(WorkflowMarkupSerializer.XCodeProperty,   \n                    new CodeTypeMemberCollection(  \n                        new CodeTypeMember[] {  \n                            new CodeSnippetTypeMember(\"void methodName1(object sender, EventArgs e) { }\")  \n                        }));  \n  \n```"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty XCodeProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: WorkflowMarkupSerializer()
  nameWithType: WorkflowMarkupSerializer.WorkflowMarkupSerializer()
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.WorkflowMarkupSerializer()
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: AddChild(WorkflowMarkupSerializationManager,Object,Object)
  nameWithType: WorkflowMarkupSerializer.AddChild(WorkflowMarkupSerializationManager,Object,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(WorkflowMarkupSerializationManager,Object,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
  parent: System.Workflow.ComponentModel.Serialization
  isExternal: false
  name: WorkflowMarkupSerializationManager
  nameWithType: WorkflowMarkupSerializationManager
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: CanSerializeToString(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.CanSerializeToString(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(WorkflowMarkupSerializationManager,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: ClearChildren(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.ClearChildren(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: ClrNamespacesProperty
  nameWithType: WorkflowMarkupSerializer.ClrNamespacesProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: CreateInstance(WorkflowMarkupSerializationManager,Type)
  nameWithType: WorkflowMarkupSerializer.CreateInstance(WorkflowMarkupSerializationManager,Type)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(WorkflowMarkupSerializationManager,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.Xml.XmlReader)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: Deserialize(XmlReader)
  nameWithType: WorkflowMarkupSerializer.Deserialize(XmlReader)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlReader)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: Deserialize(IDesignerSerializationManager,XmlReader)
  nameWithType: WorkflowMarkupSerializer.Deserialize(IDesignerSerializationManager,XmlReader)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(IDesignerSerializationManager,XmlReader)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationManager
  nameWithType: IDesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type,System.String)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: DeserializeFromString(WorkflowMarkupSerializationManager,Type,String)
  nameWithType: WorkflowMarkupSerializer.DeserializeFromString(WorkflowMarkupSerializationManager,Type,String)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(WorkflowMarkupSerializationManager,Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: EventsProperty
  nameWithType: WorkflowMarkupSerializer.EventsProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: GetChildren(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.GetChildren(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(WorkflowMarkupSerializationManager,Object)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: GetEvents(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.GetEvents(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(WorkflowMarkupSerializationManager,Object)
- uid: System.Reflection.EventInfo[]
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo[]
  spec.csharp:
  - uid: System.Reflection.EventInfo
    name: EventInfo
    nameWithType: EventInfo
    fullName: EventInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: GetProperties(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.GetProperties(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(WorkflowMarkupSerializationManager,Object)
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnAfterDeserialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnAfterDeserialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnAfterSerialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnAfterSerialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnBeforeDeserialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnBeforeDeserialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnBeforeSerialize(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.OnBeforeSerialize(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: Serialize(XmlWriter,Object)
  nameWithType: WorkflowMarkupSerializer.Serialize(XmlWriter,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(XmlWriter,Object)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlWriter,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: Serialize(IDesignerSerializationManager,XmlWriter,Object)
  nameWithType: WorkflowMarkupSerializer.Serialize(IDesignerSerializationManager,XmlWriter,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(IDesignerSerializationManager,XmlWriter,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: SerializeToString(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.SerializeToString(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: ShouldSerializeValue(WorkflowMarkupSerializationManager,Object)
  nameWithType: WorkflowMarkupSerializer.ShouldSerializeValue(WorkflowMarkupSerializationManager,Object)
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(WorkflowMarkupSerializationManager,Object)
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: XClassProperty
  nameWithType: WorkflowMarkupSerializer.XClassProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: XCodeProperty
  nameWithType: WorkflowMarkupSerializer.XCodeProperty
  fullName: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: WorkflowMarkupSerializer
  nameWithType: WorkflowMarkupSerializer.WorkflowMarkupSerializer
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: AddChild
  nameWithType: WorkflowMarkupSerializer.AddChild
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: CanSerializeToString
  nameWithType: WorkflowMarkupSerializer.CanSerializeToString
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: ClearChildren
  nameWithType: WorkflowMarkupSerializer.ClearChildren
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: CreateInstance
  nameWithType: WorkflowMarkupSerializer.CreateInstance
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: Deserialize
  nameWithType: WorkflowMarkupSerializer.Deserialize
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: DeserializeFromString
  nameWithType: WorkflowMarkupSerializer.DeserializeFromString
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: GetChildren
  nameWithType: WorkflowMarkupSerializer.GetChildren
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: GetEvents
  nameWithType: WorkflowMarkupSerializer.GetEvents
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: GetProperties
  nameWithType: WorkflowMarkupSerializer.GetProperties
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnAfterDeserialize
  nameWithType: WorkflowMarkupSerializer.OnAfterDeserialize
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnAfterSerialize
  nameWithType: WorkflowMarkupSerializer.OnAfterSerialize
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnBeforeDeserialize
  nameWithType: WorkflowMarkupSerializer.OnBeforeDeserialize
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: OnBeforeSerialize
  nameWithType: WorkflowMarkupSerializer.OnBeforeSerialize
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: Serialize
  nameWithType: WorkflowMarkupSerializer.Serialize
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: SerializeToString
  nameWithType: WorkflowMarkupSerializer.SerializeToString
- uid: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue*
  parent: System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer
  isExternal: false
  name: ShouldSerializeValue
  nameWithType: WorkflowMarkupSerializer.ShouldSerializeValue
