### YamlMime:ManagedReference
items:
- uid: System.Web.Security.MachineKey
  id: MachineKey
  children:
  - System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)
  - System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)
  - System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])
  - System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])
  langs:
  - csharp
  name: MachineKey
  nameWithType: MachineKey
  fullName: System.Web.Security.MachineKey
  type: Class
  summary: "Fornece uma maneira de criptografar ou hash dados (ou ambos), usando os mesmos algoritmos e valores de chave que são usados para autenticação de formulários do ASP.NET e o estado de exibição."
  remarks: "A classe de MachineKey fornece métodos que expõem a lógica de hash e de criptografia que o ASP.NET fornece. Para obter informações sobre quais criptografia e algoritmos de hash usa ASP.NET e os valores de chave que ele utiliza com eles, consulte [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).      > [!WARNING] > As APIs MachineKey só deve ser usada em um aplicativo ASP.NET. O comportamento das APIs MachineKey fora do contexto de um aplicativo ASP.NET é indefinido"
  syntax:
    content: public static class MachineKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)
  id: Decode(System.String,System.Web.Security.MachineKeyProtection)
  parent: System.Web.Security.MachineKey
  langs:
  - csharp
  name: Decode(String,MachineKeyProtection)
  nameWithType: MachineKey.Decode(String,MachineKeyProtection)
  fullName: System.Web.Security.MachineKey.Decode(String,MachineKeyProtection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Decodifica e/ou valida os dados que foram criptografados ou fornecidos com um código de autenticação de mensagem baseado em hash (HMAC)."
  remarks: "Para obter informações sobre quais criptografia e algoritmos de hash ASP.NET usa para descriptografar e validar os dados que são transmitidos, consulte [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)."
  example:
  - For a code example, see the <xref:System.Web.Security.MachineKey> class overview.
  syntax:
    content: public static byte[] Decode (string encodedData, System.Web.Security.MachineKeyProtection protectionOption);
    parameters:
    - id: encodedData
      type: System.String
      description: "Os dados criptografados para descriptografar e/ou validar."
    - id: protectionOption
      type: System.Web.Security.MachineKeyProtection
      description: "Indica se o `encodedData` parâmetro deve ser criptografado e/ou hash."
    return:
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que representa os dados descriptografados.</xref:System.Byte>"
  overload: System.Web.Security.MachineKey.Decode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)
  id: Encode(System.Byte[],System.Web.Security.MachineKeyProtection)
  parent: System.Web.Security.MachineKey
  langs:
  - csharp
  name: Encode(Byte[],MachineKeyProtection)
  nameWithType: MachineKey.Encode(Byte[],MachineKeyProtection)
  fullName: System.Web.Security.MachineKey.Encode(Byte[],MachineKeyProtection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Criptografa os dados e/ou anexa um código de autenticação de mensagem baseado em hash (HMAC)."
  remarks: "Para obter informações sobre quais criptografia e algoritmos de hash ASP.NET usa para descriptografar e validar os dados que são transmitidos, consulte [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)."
  example:
  - For a code example, see the <xref:System.Web.Security.MachineKey> class overview.
  syntax:
    content: public static string Encode (byte[] data, System.Web.Security.MachineKeyProtection protectionOption);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Os dados a criptografar."
    - id: protectionOption
      type: System.Web.Security.MachineKeyProtection
      description: "Indica se o `data` parâmetro deve ser criptografado e/ou hash."
    return:
      type: System.String
      description: "O valor criptografado, o valor de entrada com um HMAC anexado ou o resultado de criptografar o valor de entrada com um HMAC anexado."
  overload: System.Web.Security.MachineKey.Encode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])
  id: Protect(System.Byte[],System.String[])
  parent: System.Web.Security.MachineKey
  langs:
  - csharp
  name: Protect(Byte[],String[])
  nameWithType: MachineKey.Protect(Byte[],String[])
  fullName: System.Web.Security.MachineKey.Protect(Byte[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Protege os dados especificados por criptografar ou assiná-lo."
  remarks: "Esse método substitui o <xref:System.Web.Security.MachineKey.Encode%2A>método, que exige que o chamador especificar se os dados de texto sem formatação devem ser criptografados, assinado, ou ambos.</xref:System.Web.Security.MachineKey.Encode%2A> O método de proteção executa a operação apropriada e com segurança protege os dados. Dados de texto cifrado produzidos por esse método só podem ser decifrados pelo <xref:System.Web.Security.MachineKey.Unprotect%2A>método.</xref:System.Web.Security.MachineKey.Unprotect%2A>       O `purposes` parâmetro é uma lista opcional de razões que podem bloquear o texto cifrado para um propósito específico. Esse parâmetro permite isolar as operações de criptografia executadas pelo subsistemas diferentes dentro de um aplicativo. Um cliente mal-intencionado não deve ser capaz de obter o resultado do método de proteção de um subsistema e inseri-la como entrada para outra do subsistema <xref:System.Web.Security.MachineKey.Unprotect%2A>método, que pode comprometer a segurança do aplicativo.</xref:System.Web.Security.MachineKey.Unprotect%2A> O `purposes` parâmetro ajuda a garantir que os dados protegidos só podem ser usados pelo componente que originalmente gerou. Aplicativos devem garantir que cada subsistema usa uma única `purposes` lista.       Por exemplo, para proteger ou desproteger um token de autenticação, você poderia chamar o método usando código semelhante ao seguinte exemplo: ```c#   MachineKey.Protect(..., &quot;Authentication token&quot;);   MachineKey.Unprotect(..., &quot;Authentication token&quot;);   ``` ```vb   MachineKey.Protect(..., &quot;Authentication token&quot;)   MachineKey.Unprotect(..., &quot;Authentication token&quot;)   ``` dinamicamente os aplicativos podem gerar o `purposes` parâmetro.       Nesse caso, os valores fornecidos pelo usuário com um valor fixo de prefixo (como &quot;`Username:` &quot; + *username*) para minimizar o risco de um cliente mal-intencionado criação de entrada que corresponde a um token que é usado por alguma outra parte do sistema. Cadeias de caracteres gerados dinamicamente devem vir após cadeias de caracteres fixas. Por exemplo, para proteger ou desproteger uma mensagem privada que está associada a um usuário específico, use um código como o exemplo a seguir: ```c#   MachineKey.Protect(..., &quot;Private message&quot;, &quot;Recipient: &quot; + username);   MachineKey.Unprotect(..., &quot;Private message&quot;, &quot;Recipient: &quot; + username);   ``` ```vb   MachineKey.Protect(..., &quot;Private message&quot;, &quot;Recipient: &quot; + username)   MachineKey.Unprotect(..., &quot;Private message&quot;, &quot;Recipient: &quot; + username)   ``` quando o <xref:System.Web.Security.MachineKey.Unprotect%2A>método é chamado, o valor fornecido para o `purposes` parâmetro deve ser o mesmo valor que foi fornecido para o método de proteção.</xref:System.Web.Security.MachineKey.Unprotect%2A>       Caso contrário, a operação falhará com um <xref:System.Security.Cryptography.CryptographicException>exceção.</xref:System.Security.Cryptography.CryptographicException>       As definições de configuração que são necessárias para o <xref:System.Web.Configuration.MachineKeyCompatibilityMode?displayProperty=fullName>opção são necessários para este se até mesmo método de <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=fullName>propriedade não é definida como o <xref:System.Web.Configuration.MachineKeyCompatibilityMode>opção.</xref:System.Web.Configuration.MachineKeyCompatibilityMode> </xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=fullName> </xref:System.Web.Configuration.MachineKeyCompatibilityMode?displayProperty=fullName>"
  syntax:
    content: public static byte[] Protect (byte[] userData, string[] purposes);
    parameters:
    - id: userData
      type: System.Byte[]
      description: "Os dados a serem protegidos. Esses dados são passados como texto sem formatação."
    - id: purposes
      type: System.String[]
      description: "Uma lista de propósitos para os dados. Se esse valor for especificado, a mesma lista deve ser passada para o <xref:System.Web.Security.MachineKey.Unprotect*>método para decifrar o texto cifrado retornado.</xref:System.Web.Security.MachineKey.Unprotect*>"
    return:
      type: System.Byte[]
      description: "Os dados de texto cifrado."
  overload: System.Web.Security.MachineKey.Protect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> userData </code> parâmetro é nulo."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A matriz de fins contém uma ou mais entradas de somente espaço em branco."
  platform:
  - net462
- uid: System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])
  id: Unprotect(System.Byte[],System.String[])
  parent: System.Web.Security.MachineKey
  langs:
  - csharp
  name: Unprotect(Byte[],String[])
  nameWithType: MachineKey.Unprotect(Byte[],String[])
  fullName: System.Web.Security.MachineKey.Unprotect(Byte[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Desprotege os dados especificados, o que foi protegidos pelo <xref:System.Web.Security.MachineKey.Protect*>método.</xref:System.Web.Security.MachineKey.Protect*>"
  remarks: "Para obter informações sobre esse método, consulte o <xref:System.Web.Security.MachineKey.Protect%2A>método.</xref:System.Web.Security.MachineKey.Protect%2A>"
  syntax:
    content: public static byte[] Unprotect (byte[] protectedData, string[] purposes);
    parameters:
    - id: protectedData
      type: System.Byte[]
      description: "Os dados de texto cifrado para desproteger."
    - id: purposes
      type: System.String[]
      description: "Uma lista de propósitos que descrevem o que os dados se destina. Isso deve ser o mesmo valor que foi passado para o <xref:System.Web.Security.MachineKey.Protect*>método quando os dados foram protegidos.</xref:System.Web.Security.MachineKey.Protect*>"
    return:
      type: System.Byte[]
      description: "Os dados de texto sem formatação."
  overload: System.Web.Security.MachineKey.Unprotect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> protectedData </code> parâmetro é nulo."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A matriz de fins contém uma ou mais entradas de somente espaço em branco."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Possíveis causas incluem o seguinte:-os dados protegidos foi violados.      -O valor de <code> purposes </code> parâmetro não é o mesmo que o valor que foi especificado quando os dados foram protegidos.      -O aplicativo é implantado em mais de um servidor e está usando chaves de criptografia geradas automaticamente."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Decode(String,MachineKeyProtection)
  nameWithType: MachineKey.Decode(String,MachineKeyProtection)
  fullName: System.Web.Security.MachineKey.Decode(String,MachineKeyProtection)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.MachineKeyProtection
  parent: System.Web.Security
  isExternal: false
  name: MachineKeyProtection
  nameWithType: MachineKeyProtection
  fullName: System.Web.Security.MachineKeyProtection
- uid: System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Encode(Byte[],MachineKeyProtection)
  nameWithType: MachineKey.Encode(Byte[],MachineKeyProtection)
  fullName: System.Web.Security.MachineKey.Encode(Byte[],MachineKeyProtection)
- uid: System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Protect(Byte[],String[])
  nameWithType: MachineKey.Protect(Byte[],String[])
  fullName: System.Web.Security.MachineKey.Protect(Byte[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Unprotect(Byte[],String[])
  nameWithType: MachineKey.Unprotect(Byte[],String[])
  fullName: System.Web.Security.MachineKey.Unprotect(Byte[],String[])
- uid: System.Web.Security.MachineKey.Decode*
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Decode
  nameWithType: MachineKey.Decode
- uid: System.Web.Security.MachineKey.Encode*
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Encode
  nameWithType: MachineKey.Encode
- uid: System.Web.Security.MachineKey.Protect*
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Protect
  nameWithType: MachineKey.Protect
- uid: System.Web.Security.MachineKey.Unprotect*
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Unprotect
  nameWithType: MachineKey.Unprotect
