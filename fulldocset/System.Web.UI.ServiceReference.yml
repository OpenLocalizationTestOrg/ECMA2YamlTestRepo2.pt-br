### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ServiceReference
  id: ServiceReference
  children:
  - System.Web.UI.ServiceReference.#ctor
  - System.Web.UI.ServiceReference.#ctor(System.String)
  - System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  - System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  - System.Web.UI.ServiceReference.InlineScript
  - System.Web.UI.ServiceReference.Path
  - System.Web.UI.ServiceReference.ToString
  langs:
  - csharp
  name: ServiceReference
  nameWithType: ServiceReference
  fullName: System.Web.UI.ServiceReference
  type: Class
  summary: "Registra um serviço da Web para uso em uma página da Web."
  remarks: "Para chamar métodos de serviço Web de ECMAScript (JavaScript), você deve incluir uma referência de serviço na página ASP.NET e aplicar o <xref:System.Web.Script.Services.ScriptServiceAttribute>atributo à definição de classe de serviço da Web.</xref:System.Web.Script.Services.ScriptServiceAttribute> Se você incluir uma referência de serviço a um serviço Web de <xref:System.Web.UI.ScriptManager>ou <xref:System.Web.UI.ScriptManagerProxy>controle dentro da página do ASP.NET, os objetos serão instanciados no navegador do JavaScript.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager>       Os objetos de proxy serão usados para fazer o seguinte: - Verifique solicitações assíncronas em JavaScript para métodos de serviço Web, - inicializar instâncias de proxies dos tipos de dados do servidor, em particular para usam como parâmetros de entrada para invocar métodos de Web.      > [!NOTE] > ServiceReference o controle só pode ser usado para serviços no mesmo domínio.       Você pode definir o local do serviço Web declarativamente adicionando um `<asp:ServiceReference>` elemento para o `<Services>` elemento dentro do `<asp:ScriptManager>` elemento na página e, em seguida, configuração seu <xref:System.Web.UI.ServiceReference.Path%2A>atributo, conforme mostrado no exemplo a seguir.</xref:System.Web.UI.ServiceReference.Path%2A>      ```   <asp:ScriptManager runat=&quot;server&quot; ID=&quot;scriptManager&quot;>     <Services>       <asp:ServiceReference Path=&quot;~/WebServices/SimpleWebService.asmx&quot; />     </Services>   </asp:ScriptManager>   ```Você pode usar o <xref:System.Web.UI.ServiceReference.InlineScript%2A>propriedade para indicar se o script de geração de proxy é incluído na página como um bloco de script embutido ou é obtido por uma solicitação separada.</xref:System.Web.UI.ServiceReference.InlineScript%2A>       Também por meio de programação, você pode adicionar um objeto ServiceReference por meio do <xref:System.Web.UI.ScriptManager.Services%2A?displayProperty=fullName>ou <xref:System.Web.UI.ScriptManagerProxy.Services%2A?displayProperty=fullName>coleção usando o <xref:System.Collections.ObjectModel.Collection%601.Add%2A>método de <xref:System.Web.UI.ServiceReferenceCollection>classe.</xref:System.Web.UI.ServiceReferenceCollection> </xref:System.Collections.ObjectModel.Collection%601.Add%2A> </xref:System.Web.UI.ScriptManagerProxy.Services%2A?displayProperty=fullName> </xref:System.Web.UI.ScriptManager.Services%2A?displayProperty=fullName>"
  example:
  - "The following example demonstrates how to add a reference to a Web service in the page markup to call the Web service methods from script.  \n  \n [!code-vb[System.Web.Script.Services.ScriptMethodAttribute#5](~/add/codesnippet/visualbasic/t-system.web.ui.servicer_1.aspx)]\n [!code-cs[System.Web.Script.Services.ScriptMethodAttribute#5](~/add/codesnippet/csharp/t-system.web.ui.servicer_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      public class ServiceReference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.#ctor
  id: '#ctor'
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: ServiceReference()
  nameWithType: ServiceReference.ServiceReference()
  fullName: System.Web.UI.ServiceReference.ServiceReference()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.ServiceReference&quot;> </xref> classe."
  syntax:
    content: public ServiceReference ();
    parameters: []
  overload: System.Web.UI.ServiceReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: ServiceReference(String)
  nameWithType: ServiceReference.ServiceReference(String)
  fullName: System.Web.UI.ServiceReference.ServiceReference(String)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.ServiceReference&quot;> </xref> classe com um caminho especificado."
  syntax:
    content: public ServiceReference (string path);
    parameters:
    - id: path
      type: System.String
      description: "O local do serviço Web."
  overload: System.Web.UI.ServiceReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  id: GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: GetProxyScript(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyScript(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyScript(ScriptManager,Control)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Fornece um script de proxy de um derivado <xref href=&quot;System.Web.UI.ServiceReference&quot;> </xref> objeto que pode ser substituído por uma personalização."
  remarks: "O `containingControl` parâmetro é o <xref:System.Web.UI.ScriptManager>objeto ou <xref:System.Web.UI.ScriptManagerProxy>objeto no qual o <xref:System.Web.UI.ServiceReference>objeto é definido.</xref:System.Web.UI.ServiceReference> </xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Ele deve ser usado como base para a resolução de URL relativa."
  syntax:
    content: protected virtual string GetProxyScript (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "O <xref href=&quot;System.Web.UI.ScriptManager&quot;> </xref> controle na página."
    - id: containingControl
      type: System.Web.UI.Control
      description: "A <xref href=&quot;System.Web.UI.Control&quot;></xref> object."
    return:
      type: System.String
      description: "O script de proxy."
  overload: System.Web.UI.ServiceReference.GetProxyScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  id: GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: GetProxyUrl(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyUrl(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyUrl(ScriptManager,Control)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Fornece um URL do proxy de um derivado <xref href=&quot;System.Web.UI.ServiceReference&quot;> </xref> objeto pode ser substituído por uma personalização."
  remarks: "O `containingControl` parâmetro é o <xref:System.Web.UI.ScriptManager>objeto ou <xref:System.Web.UI.ScriptManagerProxy>objeto no qual o <xref:System.Web.UI.ServiceReference>objeto é definido e deve ser usado como base para a resolução de URL relativa.</xref:System.Web.UI.ServiceReference> </xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager>"
  syntax:
    content: protected virtual string GetProxyUrl (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "O <xref href=&quot;System.Web.UI.ScriptManager&quot;> </xref> controle na página."
    - id: containingControl
      type: System.Web.UI.Control
      description: "A <xref href=&quot;System.Web.UI.Control&quot;></xref> object."
    return:
      type: System.String
      description: "Uma URL de proxy."
  overload: System.Web.UI.ServiceReference.GetProxyUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.InlineScript
  id: InlineScript
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: InlineScript
  nameWithType: ServiceReference.InlineScript
  fullName: System.Web.UI.ServiceReference.InlineScript
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se o script de geração de proxy é incluído na página como um bloco de script embutido ou é obtido por uma solicitação separada."
  remarks: "Quando a propriedade do InlineScript não é declarada, o valor padrão é `false`.       Quando InlineScript é definido como `false`, o script para gerar os proxies do ECMAScript (JavaScript) é baixado como um arquivo de script separado por uma solicitação adicional para o servidor. Se você usar o cache do navegador, essa opção é útil quando várias páginas da Web usa a mesma referência de serviço.       Quando InlineScript é definido como `true`, a script será incluído como um bloco de script embutido na página de geração de proxy. Isso pode melhorar o desempenho do servidor, reduzindo o número de solicitações de rede, especialmente se há muitas referências de serviço na página e outras páginas não referenciam os mesmos serviços. Além disso, o <xref:System.Web.UI.ServiceReference.Path%2A>propriedade deve ser definida como um caminho relativo Quando InlineScript é definido como `true`.</xref:System.Web.UI.ServiceReference.Path%2A>"
  syntax:
    content: public virtual bool InlineScript { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o script de geração de proxy é incluído como um bloco de script embutido na página. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o script de geração de proxy é obtido por uma solicitação separada. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ServiceReference.InlineScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.Path
  id: Path
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: Path
  nameWithType: ServiceReference.Path
  fullName: System.Web.UI.ServiceReference.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define o caminho do serviço Web referenciado."
  remarks: "A propriedade Path pode apontar somente para serviços da Web locais. Em outras palavras, essa propriedade só pode apontar para serviços Web no mesmo domínio que o aplicativo da Web habilitado para AJAX do ASP.NET. Caminho pode ser um caminho relativo, relativo ao aplicativo, relativo ao domínio ou absoluto.       Se o <xref:System.Web.UI.ServiceReference.InlineScript%2A>está definida como `true`, em seguida, você deve usar um caminho relativo que aponta para o mesmo aplicativo da Web como a página que contém o <xref:System.Web.UI.ServiceReference>instância.</xref:System.Web.UI.ServiceReference> </xref:System.Web.UI.ServiceReference.InlineScript%2A>"
  syntax:
    content: public virtual string Path { get; set; }
    return:
      type: System.String
      description: "O caminho do serviço Web referenciado."
  overload: System.Web.UI.ServiceReference.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.ToString
  id: ToString
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: ToString()
  nameWithType: ServiceReference.ToString()
  fullName: System.Web.UI.ServiceReference.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Retorna uma cadeia de caracteres que representa o valor da <xref:System.Web.UI.ServiceReference.Path*>propriedade ou o nome do tipo.</xref:System.Web.UI.ServiceReference.Path*>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "O valor da <> </> *> propriedade, se for definido; caso contrário, o valor da <> </> *> propriedade para a classe."
  overload: System.Web.UI.ServiceReference.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.ServiceReference.#ctor
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ServiceReference()
  nameWithType: ServiceReference.ServiceReference()
  fullName: System.Web.UI.ServiceReference.ServiceReference()
- uid: System.Web.UI.ServiceReference.#ctor(System.String)
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ServiceReference(String)
  nameWithType: ServiceReference.ServiceReference(String)
  fullName: System.Web.UI.ServiceReference.ServiceReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyScript(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyScript(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyScript(ScriptManager,Control)
- uid: System.Web.UI.ScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ScriptManager
  nameWithType: ScriptManager
  fullName: System.Web.UI.ScriptManager
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyUrl(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyUrl(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyUrl(ScriptManager,Control)
- uid: System.Web.UI.ServiceReference.InlineScript
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: InlineScript
  nameWithType: ServiceReference.InlineScript
  fullName: System.Web.UI.ServiceReference.InlineScript
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ServiceReference.Path
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: Path
  nameWithType: ServiceReference.Path
  fullName: System.Web.UI.ServiceReference.Path
- uid: System.Web.UI.ServiceReference.ToString
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ToString()
  nameWithType: ServiceReference.ToString()
  fullName: System.Web.UI.ServiceReference.ToString()
- uid: System.Web.UI.ServiceReference.#ctor*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ServiceReference
  nameWithType: ServiceReference.ServiceReference
- uid: System.Web.UI.ServiceReference.GetProxyScript*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyScript
  nameWithType: ServiceReference.GetProxyScript
- uid: System.Web.UI.ServiceReference.GetProxyUrl*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyUrl
  nameWithType: ServiceReference.GetProxyUrl
- uid: System.Web.UI.ServiceReference.InlineScript*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: InlineScript
  nameWithType: ServiceReference.InlineScript
- uid: System.Web.UI.ServiceReference.Path*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: Path
  nameWithType: ServiceReference.Path
- uid: System.Web.UI.ServiceReference.ToString*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ToString
  nameWithType: ServiceReference.ToString
