### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey
  id: ECDiffieHellmanPublicKey
  children:
  - System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])
  - System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose
  - System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)
  - System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray
  - System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString
  langs:
  - csharp
  name: ECDiffieHellmanPublicKey
  nameWithType: ECDiffieHellmanPublicKey
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey
  type: Class
  summary: "Fornece uma classe base abstrata da qual todas as <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCngPublicKey&quot;> </xref> implementações devem ser herdadas."
  syntax:
    content: 'public abstract class ECDiffieHellmanPublicKey : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  langs:
  - csharp
  name: ECDiffieHellmanPublicKey(Byte[])
  nameWithType: ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey(Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey(Byte[])
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;> </xref> classe."
  remarks: "Este construtor é chamado por classes que derivam de <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey>classe.</xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> O <xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey>classe é a única implementação com suporte no momento.</xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey>"
  syntax:
    content: protected ECDiffieHellmanPublicKey (byte[] keyBlob);
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: "Uma matriz de bytes que representa um <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;> </xref> objeto."
  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyBlob</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose
  id: Dispose
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  langs:
  - csharp
  name: Dispose()
  nameWithType: ECDiffieHellmanPublicKey.Dispose()
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Libera todos os recursos usados pela instância atual do <xref href=&quot;System.Security.Cryptography.ECDiffieHellman&quot;> </xref> classe."
  remarks: "Chamar Dispose quando terminar de usar o <xref:System.Security.Cryptography.ECDiffieHellman>.</xref:System.Security.Cryptography.ECDiffieHellman> O método Dispose deixa a <xref:System.Security.Cryptography.ECDiffieHellman>em um estado inutilizável.</xref:System.Security.Cryptography.ECDiffieHellman> Depois de chamar Dispose, você deve liberar todas as referências para o <xref:System.Security.Cryptography.ECDiffieHellman>para o coletor de lixo possa recuperar a memória que o <xref:System.Security.Cryptography.ECDiffieHellman>estava ocupando.</xref:System.Security.Cryptography.ECDiffieHellman> </xref:System.Security.Cryptography.ECDiffieHellman>       Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ECDiffieHellmanPublicKey.Dispose(Boolean)
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Libera os recursos não gerenciados usados pelo <xref href=&quot;System.Security.Cryptography.ECDiffieHellman&quot;> </xref> classe e, opcionalmente, libera os recursos gerenciados."
  remarks: "Esse método é executado em dois cenários diferentes: - se `disposing` é igual a `true`, o método foi chamado direta ou indiretamente pelo código do usuário. Gerenciados e os recursos não gerenciados podem ser descartados.      -Se `disposing` é igual a `false`, o método foi chamado pelo tempo de execução de dentro do finalizador e você não deve fazer referência a recursos gerenciados. Apenas recursos não gerenciados podem ser descartados.       Se você precisa fornecer o código de limpeza de recursos gerenciados e que um objeto é criado, você deve substituir esse método.       Este método é chamado pelo público `Dispose()`método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> `Dispose()`invoca o protegido `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro for true, este método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey>referências.</xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> Este método chama o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar recursos gerenciados e não gerenciados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para liberar apenas recursos não gerenciados."
  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray
  id: ToByteArray
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  langs:
  - csharp
  name: ToByteArray()
  nameWithType: ECDiffieHellmanPublicKey.ToByteArray()
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Serializa o <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;> </xref> BLOB da chave para uma matriz de bytes."
  syntax:
    content: public virtual byte[] ToByteArray ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que contém a chave pública de Diffie-Hellman de curva elíptica (ECDH) serializado."
  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString
  id: ToXmlString
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  langs:
  - csharp
  name: ToXmlString()
  nameWithType: ECDiffieHellmanPublicKey.ToXmlString()
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Serializa o <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;> </xref> chave pública para uma cadeia de caracteres XML."
  syntax:
    content: public virtual string ToXmlString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia de caracteres XML que contém a chave pública de Diffie-Hellman de curva elíptica (ECDH) serializado."
  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: ECDiffieHellmanPublicKey(Byte[])
  nameWithType: ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey(Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: Dispose()
  nameWithType: ECDiffieHellmanPublicKey.Dispose()
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose()
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ECDiffieHellmanPublicKey.Dispose(Boolean)
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: ToByteArray()
  nameWithType: ECDiffieHellmanPublicKey.ToByteArray()
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray()
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: ToXmlString()
  nameWithType: ECDiffieHellmanPublicKey.ToXmlString()
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor*
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: ECDiffieHellmanPublicKey
  nameWithType: ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose*
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: Dispose
  nameWithType: ECDiffieHellmanPublicKey.Dispose
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray*
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: ToByteArray
  nameWithType: ECDiffieHellmanPublicKey.ToByteArray
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString*
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: ToXmlString
  nameWithType: ECDiffieHellmanPublicKey.ToXmlString
