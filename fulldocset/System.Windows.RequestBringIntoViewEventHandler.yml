### YamlMime:ManagedReference
items:
- uid: System.Windows.RequestBringIntoViewEventHandler
  id: RequestBringIntoViewEventHandler
  langs:
  - csharp
  name: RequestBringIntoViewEventHandler
  nameWithType: RequestBringIntoViewEventHandler
  fullName: System.Windows.RequestBringIntoViewEventHandler
  type: Delegate
  summary: "Representa o método que manipulará o <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> eventos roteados."
  remarks: "O evento normalmente é feito somente em elementos que oferecem suporte a uma região de rolagem, ou caso contrário deliberadamente definir seu tamanho de renderização menor do que o tamanho desejado combinado de seu conteúdo de elemento filho e é feito apenas por deliberadamente manipular o evento depois que ele encaminhado para cima na árvore de elementos e atingiu o primeiro parente que oferece suporte de região de rolagem. Uma implementação que manipula as áreas de rolagem de uma maneira que é normalmente recomendado para controles de usuário é <xref:System.Windows.Controls.ScrollViewer>.</xref:System.Windows.Controls.ScrollViewer> Se você derivar de <xref:System.Windows.Controls.ScrollViewer>, você pode registrar um manipulador de classe para <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>e completar o tratamento de classe base do evento.</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer> Você também deve considerar o uso ou definido por classe de <xref:System.Windows.Controls.ScrollViewer.ScrollChanged>evento em vez de <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>.</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer.ScrollChanged> de tratamento de classe Como alternativa, se você criar uma classe totalmente personalizada que não derivam de <xref:System.Windows.Controls.ScrollViewer>, você ainda poderá adicionar classe tratamento chamando <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName>em sua instanciação de classe.</xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer>  Para obter detalhes sobre a manipulação de classe, consulte [marcar eventos roteados como Handled e tratamento de classe](~/add/includes/ajax-current-ext-md.md).       Elementos de conteúdo podem fazer com que o evento a ser gerado por seus hosts de conteúdo (chamando <xref:System.Windows.FrameworkContentElement.BringIntoView%2A>e gerando <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>do host de conteúdo).</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.BringIntoView%2A> Da mesma forma, você pode solicitar os elementos de árvore lógica para ser colocado em modo de exibição com o método auxiliar <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.</xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>       Um que <xref:System.Windows.Controls.ListBox>implementa um método relacionado, mas diferente <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</xref:System.Windows.Controls.ListBox.ScrollIntoView%2A> </xref:System.Windows.Controls.ListBox>"
  syntax:
    content: public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
