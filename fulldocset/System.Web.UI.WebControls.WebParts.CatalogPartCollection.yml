### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  id: CatalogPartCollection
  children:
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)
  langs:
  - csharp
  name: CatalogPartCollection
  nameWithType: CatalogPartCollection
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  type: Class
  summary: "Contém uma coleção de <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> controles usados para fornecer catálogos de controles de servidor Web que os usuários finais podem adicionar a uma página da Web. Essa classe não pode ser herdada."
  remarks: "A classe CatalogPartCollection é uma coleção somente leitura de <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controles, normalmente usados por um <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>zona para controlar o conjunto de <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controles contidos pela zona.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>       Quando uma página de Web Parts entra em modo de catálogo, a zona cria um novo objeto de CatalogPartCollection consiste de <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controles.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> Cada <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controle da coleção pode conter referências a zero ou mais controles de servidor de Web, que são exibidos na forma de um catálogo de controles de servidor disponível.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>       Você pode criar uma coleção de CatalogPartCollection de controles para seu próprio uso programático se, por exemplo, você precisa executar alguma operação em massa em um conjunto de <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controles.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> Mesmo que o objeto CatalogPartCollection é somente leitura, você pode fazer alterações programáticas aos controles subjacentes referenciados na coleção."
  example:
  - "The following code example demonstrates several uses of the CatalogPartCollection class. There are four parts to this code example:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A class for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, which is referenced in the Web page and is contained in one of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.  \n  \n-   A Web page that references the `TextDisplayWebPart` control, contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control with two of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls from the Web Parts control set declared in the zone, and contains event-driven code to create and manipulate a CatalogPartCollection object.  \n  \n-   An explanation of how the code example works when you load it in a browser.  \n  \n The first part of the code example is the user control. The source code for the user control comes from another topic. For this code example to work, you need to obtain the .ascx file for the user control from the [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md) topic, and place the file in the same folder as the .aspx page in this code example.  \n  \n The second part of the code example is the `TextDisplayWebPart` control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md). Note that the control has a property named `ContentText`; this property holds the value that the user enters in the text box.  \n  \n [!code-vb[WebParts_CatalogPartCollection_Overview#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_232_1.vb)]\n [!code-cs[WebParts_CatalogPartCollection_Overview#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_232_1.cs)]  \n  \n The third part of the code example is the Web page. Notice that the `<asp:catalogzone>` element for the page contains declarations for two <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. These controls become part of a custom CatalogPartCollection object that is created when the `Button1_Click` method executes. The <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control contains Web server controls that have been previously closed by a user at run time. Controls in the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control can be added back to a page. The <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control contains a declaration of the custom `TextDisplayWebPart` control. When the page is in catalog mode, a user can add the `TextDisplayWebPart` control to the page so that it can be used in normal browse mode.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_232_2.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_232_2.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. You can add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page by selecting the check box next to it and clicking **Add**. Click **Close** to return the page to browse mode. On the control you just added, if you click the verbs menu (the down arrow that appears in the title bar) and then click **Close**, the control is removed from the page and added to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Return the page to catalog mode, and click the **Page Catalog** link to view the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Notice that the control you closed now appears there. Clicking the **Display CatalogPart Properties** button accesses the CatalogPartCollection object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls."
  syntax:
    content: 'public sealed class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CatalogPartCollection()
  nameWithType: CatalogPartCollection.CatalogPartCollection()
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicializa uma nova instância vazia do <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref> classe."
  remarks: "O construtor de CatalogPartCollection inicializa uma instância vazia da <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>classe.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> Essa sobrecarga de construtor é usada internamente pelo <xref:System.Web.UI.WebControls.WebParts.CatalogZone>classe em seu <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A>método para criar um objeto de coleção vazia.</xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> </xref:System.Web.UI.WebControls.WebParts.CatalogZone> A zona, em seguida, cria instâncias de todos os <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controles declarados no modelo de zona filho e usa um método interno da coleção para adicioná-los.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>       Você não pode usar essa sobrecarga de construtor CatalogPartCollection para criar uma nova instância de um <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>e adicione <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controles ao proprietário.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> Você deve usar uma das outras sobrecargas do construtor CatalogPartCollection."
  syntax:
    content: public CatalogPartCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)
  id: '#ctor(System.Collections.ICollection)'
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CatalogPartCollection(ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(ICollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref> classe, passando um <xref:System.Collections.ICollection>coleção de <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> controles.</xref:System.Collections.ICollection>"
  remarks: "O construtor de CatalogPartCollection inicializa uma instância do <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>classe e passa em uma coleção de <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controles.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> Isso é uma sobrecarga de construtor CatalogPartCollection que você pode usar para criar um novo <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>objeto e adicionar <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controles ao proprietário.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>       Embora o <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>criada pelo construtor de instância é somente leitura, você ainda pode acessar o indivíduo <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controla na coleção por meio de programação e chamar seus métodos e propriedades.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>       Um cenário comum para usar esse construtor seria se você deseja executar alguma operação de lote em um conjunto inteiro de <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controles, como alterar o conteúdo, a aparência ou a posição de um grupo relacionado de itens.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can create a custom <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>, and perform a batch operation to change the individual <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the collection even though it is read-only. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates an <xref:System.Collections.ArrayList> object, adds the two <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the page to the object, and then creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using the CatalogPartCollection constructor. It also demonstrates how you can make batch changes to the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, even though the collection itself is read-only. The code loops through the collection, updating the <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> property of each control.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/49bc6c07-48e8-4d4b-abba-_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/49bc6c07-48e8-4d4b-abba-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Also, if you position your mouse pointer over the title text within the border of the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control, you can see the new description text that was added to the control when you clicked the button (the description appears in a ToolTip). If you click the **Page Catalog** link to display the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, you will find that it also has an updated description."
  syntax:
    content: public CatalogPartCollection (System.Collections.ICollection catalogParts);
    parameters:
    - id: catalogParts
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>de <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> controles.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)
  id: '#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)'
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CatalogPartCollection(CatalogPartCollection,ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref> classe, passando um <xref:System.Collections.ICollection>coleção de existente <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> controles em uma zona e um conjunto adicional de controles.</xref:System.Collections.ICollection>"
  syntax:
    content: public CatalogPartCollection (System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts);
    parameters:
    - id: existingCatalogParts
      type: System.Web.UI.WebControls.WebParts.CatalogPartCollection
      description: "Um <xref:System.Collections.ICollection>de existentes <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> controles em uma zona.</xref:System.Collections.ICollection>"
    - id: catalogParts
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>adicionais <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> controles.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  id: Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Contains(CatalogPart)
  nameWithType: CatalogPartCollection.Contains(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(CatalogPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Retorna um valor que indica se um determinado controle existe na coleção."
  remarks: "O método contém permite que você determine se um determinado <xref:System.Web.UI.WebControls.WebParts.CatalogPart>objeto faz parte de um <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>objeto.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can determine whether a particular <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control is a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the Contains method to determine whether the `PageCatalogPart1` control exists, and if so, retrieves the control and changes a property value.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/2369b958-e1bb-44dd-9619-_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/2369b958-e1bb-44dd-9619-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page by selecting the check box next to it and clicking **Add**. Click **Close** to return the page to browse mode. On the control you just added, if you click the verbs menu (the down arrow that appears in the title bar) and then click **Close**, the control is removed from the page and added to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Return the page to catalog mode, and click the **Page Catalog** link to view the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Notice that the control you closed has been added to it. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Select the check box next to the server control contained in the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, click **Add** to add it back to the page, and then click **Close** to return the page to browse mode. Click the verbs menu again on the control, and note that now the close verb is gone. It was removed by the code in the `Button1_Click` method, when it used the Contains method to check for `PageCatalogPart1`, and then set its <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> property to `false`."
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);
    parameters:
    - id: catalogPart
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "Um <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> que é verificada para determinar se ele está na coleção."
    return:
      type: System.Boolean
      description: "Um valor booliano que indica se um determinado controle está na coleção."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CopyTo(CatalogPart[],Int32)
  nameWithType: CatalogPartCollection.CopyTo(CatalogPart[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(CatalogPart[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Copia a coleção para uma matriz de <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> objetos."
  remarks: "O método CopyTo é útil quando você deseja montar uma matriz personalizada que contém o <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controla no <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>objeto ou um subconjunto desses controles.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.WebParts.CatalogPart[]
      description: "Uma matriz de <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> objetos para conter a coleção copiada."
    - id: index
      type: System.Int32
      description: "O ponto de partida na matriz na qual colocar o conteúdo da coleção."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  id: Empty
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Empty
  nameWithType: CatalogPartCollection.Empty
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Faz referência a uma instância somente leitura, estática vazia da coleção."
  remarks: "Uma instância estática somente leitura, vazia de <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>reduz o uso de memória em casos onde você deseja que uma instância de coleção vazia para retornar o tipo de objeto correto de um método ou comparar a instância com outro objeto, mas não é necessário adicionar membros à instância.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>"
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPartCollection
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  id: IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: IndexOf(CatalogPart)
  nameWithType: CatalogPartCollection.IndexOf(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(CatalogPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Retorna a posição de um membro específico da coleção."
  remarks: "O método IndexOf será útil se você tiver vários <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controles em uma página de Web Parts e você precisam localizar um controle específico na coleção.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can determine the position of a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> collection by using its IndexOf property. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the IndexOf property to retrieve the position of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, and then changes a property value on the control.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/5504f26f-74ee-431e-9601-_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/5504f26f-74ee-431e-9601-_1.aspx)]  \n  \n After you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Click the **Page Catalog** link to display the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Note that it has only a title and no border, because its <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> property value was changed to <xref:System.Web.UI.WebControls.WebParts.PartChromeType> in the code that used the IndexOf property to retrieve the control."
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);
    parameters:
    - id: catalogPart
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "Um <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> que é um membro da coleção."
    return:
      type: System.Int32
      description: "Um <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> que é um membro do <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: CatalogPartCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém ou define um membro da coleção, com base em sua posição na coleção."
  remarks: "O indexador de Item permite que você acesse subjacente <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controles em um <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>por índice, do objeto e alterar seus valores de propriedade ou chamar métodos.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can access a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using its index. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. Note that the method uses the Item indexer to retrieve information from the first member of the collection.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1308_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1308_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. The count of available server controls within the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control is obtained by using the Item indexer in the `Button1_Click` method."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice de um determinado <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> na coleção."
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "Um <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> no índice especificado na coleção."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: CatalogPartCollection.Item(String)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Retorna um membro da coleção com base em um identificador de cadeia de caracteres exclusiva."
  remarks: "O indexador de Item permite que você acesse subjacente <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controles em um <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>objeto usando um identificador de cadeia de caracteres.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart> Embora o <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>objeto é somente leitura, você pode alterar os valores de propriedade ou chamar métodos nos controles subjacentes acessados pelo indexador.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>"
  example:
  - "The following code example demonstrates how you can access a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using its string ID value. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the Item indexer to retrieve information about the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control, which is the second member of the collection.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1244_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1244_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. The count of available server controls within the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control is obtained by using the Item indexer in the `Button1_Click` method."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get; }
    parameters:
    - id: id
      type: System.String
      description: "O identificador exclusivo para um determinado <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> em uma coleção."
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "A primeira <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> na coleção cuja ID igual ao valor de <code> id </code>."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection()
  nameWithType: CatalogPartCollection.CatalogPartCollection()
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection()
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection(ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(ICollection)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection(CatalogPartCollection,ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPartCollection
  nameWithType: CatalogPartCollection
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Contains(CatalogPart)
  nameWithType: CatalogPartCollection.Contains(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(CatalogPart)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.CatalogPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPart
  nameWithType: CatalogPart
  fullName: System.Web.UI.WebControls.WebParts.CatalogPart
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CopyTo(CatalogPart[],Int32)
  nameWithType: CatalogPartCollection.CopyTo(CatalogPart[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(CatalogPart[],Int32)
- uid: System.Web.UI.WebControls.WebParts.CatalogPart[]
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPart
  nameWithType: CatalogPart
  fullName: System.Web.UI.WebControls.WebParts.CatalogPart[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.WebParts.CatalogPart
    name: CatalogPart
    nameWithType: CatalogPart
    fullName: CatalogPart[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Empty
  nameWithType: CatalogPartCollection.Empty
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: IndexOf(CatalogPart)
  nameWithType: CatalogPartCollection.IndexOf(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(CatalogPart)
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: CatalogPartCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(Int32)
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Item(String)
  nameWithType: CatalogPartCollection.Item(String)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection
  nameWithType: CatalogPartCollection.CatalogPartCollection
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Contains
  nameWithType: CatalogPartCollection.Contains
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CopyTo
  nameWithType: CatalogPartCollection.CopyTo
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: IndexOf
  nameWithType: CatalogPartCollection.IndexOf
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Item
  nameWithType: CatalogPartCollection.Item
