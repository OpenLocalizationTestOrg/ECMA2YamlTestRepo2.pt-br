### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.DataReceivedEventHandler
  id: DataReceivedEventHandler
  langs:
  - csharp
  name: DataReceivedEventHandler
  nameWithType: DataReceivedEventHandler
  fullName: System.Diagnostics.DataReceivedEventHandler
  type: Delegate
  summary: "Representa o método que manipulará o <xref href=&quot;System.Diagnostics.Process.OutputDataReceived&quot;> </xref> evento ou <xref href=&quot;System.Diagnostics.Process.ErrorDataReceived&quot;> </xref> eventos de um <xref href=&quot;System.Diagnostics.Process&quot;> </xref>."
  remarks: "Quando você cria um delegado DataReceivedEventHandler, identifica o método que manipulará o evento. Para associar o evento com o manipulador de eventos, adicione uma instância do representante ao evento. O manipulador de eventos é chamado sempre que o evento ocorre, a menos que você remova o delegado. Para obter mais informações sobre delegados de manipulador de eventos, consulte [eventos](~/add/includes/ajax-current-ext-md.md).       De forma assíncrona coletar o redirecionamento <xref:System.Diagnostics.Process.StandardOutput%2A>ou <xref:System.Diagnostics.Process.StandardError%2A>fluxo de saída de um processo, adicione o manipulador de eventos para o <xref:System.Diagnostics.Process.OutputDataReceived>ou <xref:System.Diagnostics.Process.ErrorDataReceived>evento.</xref:System.Diagnostics.Process.ErrorDataReceived> </xref:System.Diagnostics.Process.OutputDataReceived> </xref:System.Diagnostics.Process.StandardError%2A> </xref:System.Diagnostics.Process.StandardOutput%2A> Esses eventos são gerados sempre que o processo grava uma linha para o fluxo redirecionado correspondente. Quando o fluxo redirecionado é fechado, uma linha nulo é enviada ao manipulador de eventos. Certifique-se de que o manipulador de eventos procura por esta condição antes de acessar o <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>propriedade.</xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Por exemplo, você pode usar o `static` método <xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName>para validar o <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>propriedade em seu manipulador de eventos.</xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> </xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName>"
  example:
  - "The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the **sort** command. The **sort** command is a console application that reads and sorts text input.  \n  \n The example creates a DataReceivedEventHandler delegate for the `SortOutputHandler` event handler and associates the delegate with the <xref:System.Diagnostics.Process.OutputDataReceived> event. The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.  \n  \n [!code-cpp[Process_AsyncStreams#1](~/add/codesnippet/cpp/t-system.diagnostics.dat_1_1.cpp)]\n [!code-vb[Process_AsyncStreams#1](~/add/codesnippet/visualbasic/t-system.diagnostics.dat_1_1.vb)]\n [!code-cs[Process_AsyncStreams#1](~/add/codesnippet/csharp/t-system.diagnostics.dat_1_1.cs)]"
  syntax:
    content: public delegate void DataReceivedEventHandler(object sender, DataReceivedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
