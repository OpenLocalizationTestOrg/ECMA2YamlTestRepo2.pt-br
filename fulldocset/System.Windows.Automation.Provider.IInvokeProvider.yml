### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IInvokeProvider
  id: IInvokeProvider
  children:
  - System.Windows.Automation.Provider.IInvokeProvider.Invoke
  langs:
  - csharp
  name: IInvokeProvider
  nameWithType: IInvokeProvider
  fullName: System.Windows.Automation.Provider.IInvokeProvider
  type: Interface
  summary: "Expõe métodos e propriedades para oferecer suporte ao acesso de cliente de automação de interface do usuário para controles que iniciar ou executar uma ação única não ambígua e não manter o estado quando ativado."
  remarks: "Implementado em um provedor de automação de interface do usuário que deve dar suporte a <xref:System.Windows.Automation.InvokePattern>padrão de controle.</xref:System.Windows.Automation.InvokePattern>       Controles de implementam IInvokeProvider se o mesmo comportamento não é exposto por meio de outro provedor de padrão de controle. Por exemplo, se o <xref:System.Windows.Automation.InvokePattern.Invoke%2A>método em um controle executa a mesma ação que o <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A>ou <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A>método, o controle não deve implementar IInvokeProvider.</xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> </xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> </xref:System.Windows.Automation.InvokePattern.Invoke%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("54fcb24b-e18e-47a2-b4d3-eccbe77599a2")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IInvokeProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IInvokeProvider.Invoke
  id: Invoke
  parent: System.Windows.Automation.Provider.IInvokeProvider
  langs:
  - csharp
  name: Invoke()
  nameWithType: IInvokeProvider.Invoke()
  fullName: System.Windows.Automation.Provider.IInvokeProvider.Invoke()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Envia uma solicitação para ativar um controle e iniciar sua ação única não ambígua."
  remarks: "Chamar é uma chamada assíncrona e deve retornar imediatamente sem bloqueio.      > [!NOTE] > Esse comportamento é particularmente importante para controles que, direta ou indiretamente, iniciam uma caixa de diálogo modal quando invocado. Qualquer cliente de automação de interface do usuário que atraiu o evento permanecerá bloqueado até que a caixa de diálogo modal está fechada.       Invocar gera o <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent>evento.</xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> Se possível, o evento deve ser gerado após o controle a ação associada.       <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent>deve ser gerado antes de atender a solicitação Invoke nas seguintes situações: - não é possível ou práticos para aguardar até que a ação é concluído.</xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent>      -A ação requer interação do usuário.      -A ação é demorada e fará com que o cliente da chamada por um período de tempo significativo."
  example:
  - "The following example implements the Invoke method on the MouseDown event handler of a control. Assume that `providerControl` is a member variable that was initialized when the class was constructed.  \n  \n [!code-cs[UIAProvider_snip#106](~/add/codesnippet/csharp/UIAProvider/Invoker.cs#106)]"
  syntax:
    content: public void Invoke ();
    parameters: []
  overload: System.Windows.Automation.Provider.IInvokeProvider.Invoke*
  exceptions:
  - type: System.Windows.Automation.ElementNotEnabledException
    commentId: T:System.Windows.Automation.ElementNotEnabledException
    description: "Se o controle não está habilitado."
  platform:
  - net462
references:
- uid: System.Windows.Automation.ElementNotEnabledException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotEnabledException
  nameWithType: ElementNotEnabledException
  fullName: System.Windows.Automation.ElementNotEnabledException
- uid: System.Windows.Automation.Provider.IInvokeProvider.Invoke
  parent: System.Windows.Automation.Provider.IInvokeProvider
  isExternal: false
  name: Invoke()
  nameWithType: IInvokeProvider.Invoke()
  fullName: System.Windows.Automation.Provider.IInvokeProvider.Invoke()
- uid: System.Windows.Automation.Provider.IInvokeProvider.Invoke*
  parent: System.Windows.Automation.Provider.IInvokeProvider
  isExternal: false
  name: Invoke
  nameWithType: IInvokeProvider.Invoke
