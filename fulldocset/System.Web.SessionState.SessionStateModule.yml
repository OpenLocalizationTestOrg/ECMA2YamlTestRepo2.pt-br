### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateModule
  id: SessionStateModule
  children:
  - System.Web.SessionState.SessionStateModule.#ctor
  - System.Web.SessionState.SessionStateModule.Dispose
  - System.Web.SessionState.SessionStateModule.End
  - System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.Start
  langs:
  - csharp
  name: SessionStateModule
  nameWithType: SessionStateModule
  fullName: System.Web.SessionState.SessionStateModule
  type: Class
  summary: "Fornece serviços de estado da sessão para um aplicativo. Essa classe não pode ser herdada."
  remarks: "SessionStateModule é ASP. Manipulador de estado de sessão padrão do NET. Ele grava os dados da sessão e recupera o armazenamento de estado de sessão e gera o **Session_OnStart** e **Session_OnEnd** eventos. Para obter detalhes sobre como usar o estado da sessão ASP.NET para armazenar e recuperar valores para uma sessão de usuário, consulte [visão geral sobre o estado de sessão ASP.NET](~/add/includes/ajax-current-ext-md.md).       Você pode substituir SessionStateModule por uma implementação personalizada do <xref:System.Web.IHttpModule>interface que gerencia o estado da sessão.</xref:System.Web.IHttpModule> Para obter um exemplo de um módulo de estado de sessão personalizado, consulte o <xref:System.Web.SessionState.SessionStateUtility>Visão geral da classe.</xref:System.Web.SessionState.SessionStateUtility>"
  syntax:
    content: 'public sealed class SessionStateModule : System.Web.SessionState.ISessionStateModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.ISessionStateModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> classe."
  remarks: "Este construtor não se destina a ser chamado no código do aplicativo.       Um <xref:System.Web.HttpApplication>objeto é criado quando um aplicativo ASP.NET é iniciado.</xref:System.Web.HttpApplication> O <xref:System.Web.HttpApplication>objeto chama o <xref:System.Web.SessionState.SessionStateModule>construtor para criar o <xref:System.Web.SessionState.SessionStateModule>objeto para o aplicativo.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> O <xref:System.Web.SessionState.SessionStateModule>é especificado na configuração de um aplicativo.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public SessionStateModule ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Executa o código de limpeza final antes do <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> objeto seja liberado da memória."
  remarks: "Esse método não se destina a ser chamado no código do aplicativo.       Um <xref:System.Web.HttpApplication>objeto é criado quando um aplicativo ASP.NET é iniciado.</xref:System.Web.HttpApplication> O <xref:System.Web.HttpApplication>objeto cria e inicializa o <xref:System.Web.SessionState.SessionStateModule>objeto para o aplicativo e chama o método Dispose quando o objeto é liberado.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> O <xref:System.Web.SessionState.SessionStateModule>é especificado na configuração de um aplicativo.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.End
  id: End
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ocorre quando uma sessão termina."
  remarks: "O término do evento é gerado no final de uma solicitação quando o <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>método foi chamado ou quando a sessão expirou.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Uma sessão expira quando o número de minutos especificado pelo <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>propriedade passa sem uma solicitação ser feita para a sessão.</xref:System.Web.SessionState.HttpSessionState.Timeout%2A>       O **Session_OnEnd** eventos é usado para executar qualquer trabalho de limpeza para uma sessão, como descartar os recursos usados pela sessão.       Você pode especificar um manipulador para o evento final, adicionando uma sub-rotina pública denominada **Session_OnEnd** para o arquivo global. asax.      > [!NOTE] > O **Session_OnEnd** evento só é suportado quando o estado de sessão <xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName>é o valor da propriedade <xref:System.Web.SessionState.SessionStateMode>, que é o padrão.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName> Se o estado de sessão <xref:System.Web.SessionState.HttpSessionState.Mode%2A>é definido como <xref:System.Web.SessionState.SessionStateMode>ou <xref:System.Web.SessionState.SessionStateMode>, em seguida, o **Session_OnEnd** evento no arquivo global asax será ignorado.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> Se o estado da sessão <xref:System.Web.SessionState.HttpSessionState.Mode%2A>é o valor da propriedade <xref:System.Web.SessionState.SessionStateMode>, em seguida, suporte para o **Session_OnEnd** evento é determinado pelo provedor de armazenamento de estado de sessão personalizado.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       Embora o término do evento for público, você só pode tratá-lo adicionando um manipulador de eventos no arquivo global. asax. Essa restrição é implementada porque <xref:System.Web.HttpApplication>instâncias são reutilizadas para desempenho.</xref:System.Web.HttpApplication> Quando uma sessão expira, somente o **Session_OnEnd** evento especificado no arquivo global. asax é executado, para impedir que o código de um manipulador de eventos de término associado ao chamar um <xref:System.Web.HttpApplication>instância que está atualmente em uso.</xref:System.Web.HttpApplication>       Para obter mais informações sobre o arquivo global. asax, consulte [global. asax sintaxe](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler End;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Chama a inicialização de código quando um <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> objeto é criado."
  remarks: "Esse método não se destina a ser chamado no código do aplicativo.       Um <xref:System.Web.HttpApplication>é criado quando um aplicativo ASP.NET é iniciado.</xref:System.Web.HttpApplication> O <xref:System.Web.HttpApplication>objeto chama o método Init quando ele cria o <xref:System.Web.SessionState.SessionStateModule>objeto para o aplicativo.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> O <xref:System.Web.SessionState.SessionStateModule>classe for especificada na configuração de um aplicativo.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "O aplicativo atual."
  overload: System.Web.SessionState.SessionStateModule.Init*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> atributo no [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento de configuração é definido como <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> ou <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref>, e o aplicativo ASP.NET tiver menos de <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> confiança."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "O <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> atributo o [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento de configuração é definido como <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> e o <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> atributo está vazio ou não existe.       - ou - o <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> atributo no [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento de configuração é definido como <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> e o provedor identificado pelo nome o <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> atributo não foi adicionado para o [provedores de elemento para sessionState (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/219d6778-9fb8-48ac-810d-bec68cf7d6aa) subelemento."
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  id: ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Libera o estado da sessão especificado <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public void ReleaseSessionState (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para o qual a liberar o estado de sessão."
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  id: ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Assincronamente libera o estado da sessão especificado <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public System.Threading.Tasks.Task ReleaseSessionStateAsync (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para o qual a liberar o estado de sessão."
    return:
      type: System.Threading.Tasks.Task
      description: "Um <xref:System.Threading.Tasks.Task>para a operação assíncrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Start
  id: Start
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "O evento que ocorre quando uma sessão é criada."
  remarks: "O evento de inicialização é gerado no início de uma solicitação quando uma nova sessão é iniciada. Uma nova sessão é iniciada, se for feita uma solicitação que não contém um identificador de sessão, o identificador de sessão é inválido ou a sessão associada a um identificador de sessão expirou.       O **Session_OnStart** eventos é usado para executar qualquer trabalho de inicialização de uma sessão, como configurar valores padrão para variáveis de sessão.       Você pode especificar um manipulador para o evento de inicialização adicionando uma sub-rotina pública chamada **Session_OnStart** para o arquivo global. asax.       Para obter mais informações sobre o arquivo global. asax, consulte [global. asax sintaxe](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler Start;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.SessionState.SessionStateModule.#ctor
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
- uid: System.Web.SessionState.SessionStateModule.Dispose
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
- uid: System.Web.SessionState.SessionStateModule.End
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Web.SessionState.SessionStateModule.Start
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
- uid: System.Web.SessionState.SessionStateModule.#ctor*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule
  nameWithType: SessionStateModule.SessionStateModule
- uid: System.Web.SessionState.SessionStateModule.Dispose*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose
  nameWithType: SessionStateModule.Dispose
- uid: System.Web.SessionState.SessionStateModule.Init*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init
  nameWithType: SessionStateModule.Init
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState
  nameWithType: SessionStateModule.ReleaseSessionState
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync
  nameWithType: SessionStateModule.ReleaseSessionStateAsync
