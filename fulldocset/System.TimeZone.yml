### YamlMime:ManagedReference
items:
- uid: System.TimeZone
  id: TimeZone
  children:
  - System.TimeZone.#ctor
  - System.TimeZone.CurrentTimeZone
  - System.TimeZone.DaylightName
  - System.TimeZone.GetDaylightChanges(System.Int32)
  - System.TimeZone.GetUtcOffset(System.DateTime)
  - System.TimeZone.IsDaylightSavingTime(System.DateTime)
  - System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  - System.TimeZone.StandardName
  - System.TimeZone.ToLocalTime(System.DateTime)
  - System.TimeZone.ToUniversalTime(System.DateTime)
  langs:
  - csharp
  name: TimeZone
  nameWithType: TimeZone
  fullName: System.TimeZone
  type: Class
  summary: "Representa um fuso horário."
  remarks: "Um fuso horário é uma região geográfica em que a mesma hora padrão é usada.      > [!IMPORTANT] > Sempre que possível, use a <xref:System.TimeZoneInfo>classe em vez da classe de fuso horário.</xref:System.TimeZoneInfo>       Você pode usar a classe de fuso horário para recuperar informações sobre o fuso horário atual e converter horas da hora local para o tempo Universal Coordenado (UTC) ou vice-versa. No entanto, você não pode usar a classe de fuso horário para representar o fuso horário que não seja a zona local ou para lidar com conversões de data e hora de um fuso horário para outro. Para essa finalidade, use a <xref:System.TimeZoneInfo>classe.</xref:System.TimeZoneInfo> Você pode usar essa classe para recuperar informações sobre qualquer fuso horário definido no sistema local, para criar fusos horários personalizados e converter horas de um fuso horário para outro.       A classe de fuso horário dá suporte a apenas uma regra de ajuste do horário de verão único para o fuso horário local. Como resultado, a classe de fuso horário com precisão pode relatar informações de horário de verão ou converter entre o UTC e a hora local somente para o período no qual a regra de ajuste mais recente está em vigor. Por outro lado, a <xref:System.TimeZoneInfo>classe oferece suporte a várias regras de ajuste, que torna possível trabalhar com dados de fuso horário históricos.</xref:System.TimeZoneInfo>"
  example:
  - "The following example references and displays selected `TimeZone` class elements.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/t-system.timezone_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/t-system.timezone_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/t-system.timezone_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class TimeZone
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.TimeZone.#ctor
  id: '#ctor'
  parent: System.TimeZone
  langs:
  - csharp
  name: TimeZone()
  nameWithType: TimeZone.TimeZone()
  fullName: System.TimeZone.TimeZone()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.TimeZone&quot;> </xref> classe."
  syntax:
    content: protected TimeZone ();
    parameters: []
  overload: System.TimeZone.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.CurrentTimeZone
  id: CurrentTimeZone
  parent: System.TimeZone
  langs:
  - csharp
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
  fullName: System.TimeZone.CurrentTimeZone
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Obtém o fuso horário do computador atual."
  remarks: "A propriedade CurrentTimeZone corresponde do <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>propriedade.</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> Sempre que possível, use o <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>propriedade.</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>"
  example:
  - "The following example references the `CurrentTimeZone` property and displays the names for standard time and daylight saving time for the local time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.curren_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.curren_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.curren_1.cs)]"
  syntax:
    content: public static TimeZone CurrentTimeZone { get; }
    return:
      type: System.TimeZone
      description: "Um <xref href=&quot;System.TimeZone&quot;> </xref> objeto que representa o fuso horário local atual."
  overload: System.TimeZone.CurrentTimeZone*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.DaylightName
  id: DaylightName
  parent: System.TimeZone
  langs:
  - csharp
  name: DaylightName
  nameWithType: TimeZone.DaylightName
  fullName: System.TimeZone.DaylightName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Obtém o nome do fuso horário de verão."
  remarks: "Se não for usado o horário de verão no fuso horário, uma cadeia de caracteres vazia (&quot;&quot;) será retornado.       A propriedade StandardName corresponde do <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>propriedade.</xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> Sempre que possível, use o <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>propriedade.</xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>"
  example:
  - "The following example references and displays the `DaylightName` property of the current time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.daylig_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.daylig_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.daylig_1.cs)]"
  syntax:
    content: public abstract string DaylightName { get; }
    return:
      type: System.String
      description: "O nome do fuso horário de verão."
  overload: System.TimeZone.DaylightName*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.GetDaylightChanges(System.Int32)
  id: GetDaylightChanges(System.Int32)
  parent: System.TimeZone
  langs:
  - csharp
  name: GetDaylightChanges(Int32)
  nameWithType: TimeZone.GetDaylightChanges(Int32)
  fullName: System.TimeZone.GetDaylightChanges(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Retorna o período de horário de verão de um ano específico."
  remarks: "Há suporte para apenas um período de horário de verão por ano.       Se o horário de verão não é usado no fuso horário atual, o valor de retorno será uma <xref:System.Globalization.DaylightTime>objeto, onde o valor de <xref:System.Globalization.DaylightTime.Start%2A>e <xref:System.Globalization.DaylightTime.End%2A>é <xref:System.DateTime.MinValue?displayProperty=fullName>e o valor de <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName>é um <xref:System.TimeSpan>inicializada com 0 tiques.</xref:System.TimeSpan> </xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName> </xref:System.DateTime.MinValue?displayProperty=fullName> </xref:System.Globalization.DaylightTime.End%2A> </xref:System.Globalization.DaylightTime.Start%2A> </xref:System.Globalization.DaylightTime>"
  syntax:
    content: public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "O ano em que o período de horário de verão aplica-se a."
    return:
      type: System.Globalization.DaylightTime
      description: "Um <xref href=&quot;System.Globalization.DaylightTime&quot;> </xref> objeto que contém a data de início e término para o horário de verão em <code> year </code>."
  overload: System.TimeZone.GetDaylightChanges*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>é menor que 1 ou maior que 9999."
  platform:
  - net462
- uid: System.TimeZone.GetUtcOffset(System.DateTime)
  id: GetUtcOffset(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: GetUtcOffset(DateTime)
  nameWithType: TimeZone.GetUtcOffset(DateTime)
  fullName: System.TimeZone.GetUtcOffset(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Retorna a diferença de tempo Universal Coordenado (UTC) para a hora local especificada."
  remarks: "Esse método retorna o deslocamento ou diferença entre o `time` parâmetro e o tempo Universal Coordenado (UTC). Ou seja: `time` = UTC + deslocamento o método interpreta o fuso horário do `time` com base em seu <xref:System.DateTime.Kind%2A>propriedade.</xref:System.DateTime.Kind%2A> Se o valor de <xref:System.DateTime.Kind%2A>é de propriedade <xref:System.DateTimeKind?displayProperty=fullName>ou <xref:System.DateTimeKind?displayProperty=fullName>, o método retorna o deslocamento de fuso horário local.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A> Se o valor de <xref:System.DateTime.Kind%2A>propriedade é <xref:System.DateTimeKind?displayProperty=fullName>, o método retorna um deslocamento igual a <xref:System.TimeSpan.Zero?displayProperty=fullName>.</xref:System.TimeSpan.Zero?displayProperty=fullName> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       Se o fuso horário local observa o horário de verão, GetUtcOffset aplica-se a regra de ajuste atual para `time` ao determinar o deslocamento de fuso horário local. Isto é, o deslocamento retornado por GetUtcOffset reflete se `time` cairá em vez do padrão do fuso horário ou seu horário de verão.      > [!NOTE] > GetUtcOffset o método reconhece somente a horário de verão ajuste regra atual para o fuso horário local. Como resultado, é garantido que ele retornar com precisão o deslocamento UTC de uma hora local somente durante o período em que a regra de ajuste mais recente está em vigor. Pode retornar resultados imprecisos se `time` é um histórica valor de data e hora que foi sujeito a uma regra de ajuste anterior.       O método GetUtcOffset corresponde do <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>método.</xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> Sempre que possível, use o <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>método.</xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>       Porque o valor de data e hora representado pelo `time` e deslocamento deste valor de UTC não estejam firmemente acoplados, uma data local ou não especificada e o valor de tempo pode retornar um valor de deslocamento diferente quando executado em computadores diferentes, ou quando executado no mesmo computador em fusos horários diferentes. Se esse comportamento é desejável, use um <xref:System.DateTimeOffset>valor em vez disso.</xref:System.DateTimeOffset> O <xref:System.DateTimeOffset>tipo de dados totalmente associa um valor de data e hora com seu deslocamento do UTC.</xref:System.DateTimeOffset>"
  syntax:
    content: public abstract TimeSpan GetUtcOffset (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Um valor de data e hora."
    return:
      type: System.TimeSpan
      description: "O deslocamento de tempo Universal Coordenado (UTC) do <code> time </code>."
  overload: System.TimeZone.GetUtcOffset*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)
  id: IsDaylightSavingTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: IsDaylightSavingTime(DateTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Retorna um valor que indica se a data e hora especificadas em um período de horário de verão."
  remarks: "O ano para o qual se aplica o período de horário de verão é derivado de `time` parâmetro.       Porque o <xref:System.TimeZone>classe oferece suporte a uma regra de ajuste do horário de verão única, o método IsDaylightSavingTime se aplica a regra de ajuste atual para qualquer data, independentemente se a regra de ajuste estava em vigor em data.</xref:System.TimeZone> Supondo que o próprio sistema operacional tem dados precisos históricos do horário de verão, um resultado mais preciso está disponível por meio de <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>método.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> Sempre que possível, use o <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>método.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>"
  syntax:
    content: public virtual bool IsDaylightSavingTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Uma data e hora."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> time </code> está em um horário de verão tempo período; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.TimeZone.IsDaylightSavingTime*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  id: IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: IsDaylightSavingTime(DateTime,DaylightTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Retorna um valor que indica se a data e hora especificadas está dentro do período especificado horário de verão."
  remarks: "O <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>método fornece a mesma funcionalidade que essa sobrecarga do método IsDaylightSavingTime.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> Sempre que possível, use o <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>método.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>"
  syntax:
    content: public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);
    parameters:
    - id: time
      type: System.DateTime
      description: "Uma data e hora."
    - id: daylightTimes
      type: System.Globalization.DaylightTime
      description: "A ser adicionado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>time</code> is in <code>daylightTimes</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.TimeZone.IsDaylightSavingTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>daylightTimes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.TimeZone.StandardName
  id: StandardName
  parent: System.TimeZone
  langs:
  - csharp
  name: StandardName
  nameWithType: TimeZone.StandardName
  fullName: System.TimeZone.StandardName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Obtém o nome do fuso horário padrão."
  remarks: "A propriedade StandardName corresponde do <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>propriedade.</xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> Sempre que possível, use o <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>propriedade.</xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>"
  example:
  - "The following example references and displays the `StandardName` property of the current time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.standa_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.standa_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.standa_1.cs)]"
  syntax:
    content: public abstract string StandardName { get; }
    return:
      type: System.String
      description: "O nome do fuso horário padrão."
  overload: System.TimeZone.StandardName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Foi feita uma tentativa de definir esta propriedade <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.TimeZone.ToLocalTime(System.DateTime)
  id: ToLocalTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: ToLocalTime(DateTime)
  nameWithType: TimeZone.ToLocalTime(DateTime)
  fullName: System.TimeZone.ToLocalTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Retorna a hora local que corresponde a uma data especificada e o valor de tempo."
  remarks: "A tabela a seguir mostra a relação entre o `time` parâmetro e o <xref:System.DateTime>valor retornado por este método.</xref:System.DateTime>      | `time` parâmetro | Comportamento | Valor de retorno |   |----------------------|--------------|------------------|   | Uma hora de tempo Universal Coordenado (UTC) (<xref:System.DateTimeKind?displayProperty=fullName>). | Converte a hora de UTC para o horário local. | Um objeto <xref:System.DateTime>cujo valor é a hora local que corresponde ao `time`. |   | A hora local (<xref:System.DateTimeKind?displayProperty=fullName>). | Nenhuma conversão necessária. | O mesmo valor de <xref:System.DateTime>representado pelo `time` parâmetro. |   | Um tempo não especificado (<xref:System.DateTimeKind?displayProperty=fullName>). | Assume que o tempo é UTC e converte-o do UTC para o horário local. | Um objeto <xref:System.DateTime>cujo valor é a hora local que corresponde ao `time`. |       Se o fuso horário local observa o horário de verão, ToLocalTime aplica-se a regra de ajuste atual para `time` ao executar a conversão.</xref:System.DateTime> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTimeKind?displayProperty=fullName>      > [!NOTE] > ToLocalTime o método reconhece somente a horário de verão ajuste regra atual para o fuso horário local. Como resultado, é garantido que ele retornar com precisão a hora local correspondente a uma determinada hora de UTC somente durante o período em que a regra de ajuste mais recente está em vigor. Pode retornar resultados imprecisos se `time` é um histórica valor de data e hora que foi sujeito a uma regra de ajuste anterior.       O método ToLocalTime corresponde ao <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>método com seu `destinationTimeZone` parâmetro definido como <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> </xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName> Sempre que possível, use o <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>método.</xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>"
  syntax:
    content: public virtual DateTime ToLocalTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Uma hora de tempo Universal Coordenado (UTC)."
    return:
      type: System.DateTime
      description: "Um <xref:System.DateTime>objeto cujo valor é a hora local que corresponde à <code> time </code>.</xref:System.DateTime>"
  overload: System.TimeZone.ToLocalTime*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.ToUniversalTime(System.DateTime)
  id: ToUniversalTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: ToUniversalTime(DateTime)
  nameWithType: TimeZone.ToUniversalTime(DateTime)
  fullName: System.TimeZone.ToUniversalTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Retorna o tempo Universal Coordenado (UTC) que corresponde a um tempo especificado."
  remarks: "Se o fuso horário local observa o horário de verão, ToUniversalTime aplica-se a regra de ajuste atual para o `time` parâmetro ao executar a conversão.      > [!NOTE] > ToUniversalTime o método reconhece somente a horário de verão ajuste regra atual para o fuso horário local. Como resultado, é garantido que ele retornar com precisão o tempo Universal Coordenado (UTC) correspondente a um determinado momento local somente durante o período em que a regra de ajuste mais recente está em vigor. Pode retornar resultados imprecisos se `time` é um histórica valor de data e hora que foi sujeito a uma regra de ajuste anterior.       Se o `time` parâmetro é um horário ambíguo, o método pressupõe que se trata de um tempo padrão. (Um horário ambíguo é um que podem ser mapeados para um horário padrão ou um horário de verão no fuso horário local). Se `time` é uma hora inválida, o método simplesmente subtrai a hora local do UTC do fuso horário local de deslocamento para retornar o UTC. (Um horário inválido é aquele que não existe devido a aplicação de regras de ajuste de horário de verão).       Porque `time` é interpretado em relação ao fuso horário atual no sistema atual, a data e hora retornada por este método podem ser diferente se um aplicativo é executado em computadores diferentes ou no mesmo computador com fusos horários diferentes. Para casos em que um valor de data e hora deve representar um ponto único, não ambíguo no tempo, use um <xref:System.DateTimeOffset>valor para representar a hora local.</xref:System.DateTimeOffset>       O método ToUniversalTime corresponde do <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>sobrecarga de método com um <xref:System.DateTime>parâmetro cuja <xref:System.DateTime.Kind%2A>propriedade não é igual a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A> </xref:System.DateTime> </xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> Sempre que possível, use o <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>sobrecarga de método.</xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>"
  syntax:
    content: public virtual DateTime ToUniversalTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Uma data e hora."
    return:
      type: System.DateTime
      description: "Um <xref:System.DateTime>objeto cujo valor é o tempo Universal Coordenado (UTC) que corresponde à <code> time </code>.</xref:System.DateTime>"
  overload: System.TimeZone.ToUniversalTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.TimeZone.#ctor
  parent: System.TimeZone
  isExternal: false
  name: TimeZone()
  nameWithType: TimeZone.TimeZone()
  fullName: System.TimeZone.TimeZone()
- uid: System.TimeZone.CurrentTimeZone
  parent: System.TimeZone
  isExternal: false
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
  fullName: System.TimeZone.CurrentTimeZone
- uid: System.TimeZone
  parent: System
  isExternal: false
  name: TimeZone
  nameWithType: TimeZone
  fullName: System.TimeZone
- uid: System.TimeZone.DaylightName
  parent: System.TimeZone
  isExternal: false
  name: DaylightName
  nameWithType: TimeZone.DaylightName
  fullName: System.TimeZone.DaylightName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeZone.GetDaylightChanges(System.Int32)
  parent: System.TimeZone
  isExternal: false
  name: GetDaylightChanges(Int32)
  nameWithType: TimeZone.GetDaylightChanges(Int32)
  fullName: System.TimeZone.GetDaylightChanges(Int32)
- uid: System.Globalization.DaylightTime
  parent: System.Globalization
  isExternal: false
  name: DaylightTime
  nameWithType: DaylightTime
  fullName: System.Globalization.DaylightTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeZone.GetUtcOffset(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: GetUtcOffset(DateTime)
  nameWithType: TimeZone.GetUtcOffset(DateTime)
  fullName: System.TimeZone.GetUtcOffset(DateTime)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime(DateTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime(DateTime,DaylightTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
- uid: System.TimeZone.StandardName
  parent: System.TimeZone
  isExternal: false
  name: StandardName
  nameWithType: TimeZone.StandardName
  fullName: System.TimeZone.StandardName
- uid: System.TimeZone.ToLocalTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: ToLocalTime(DateTime)
  nameWithType: TimeZone.ToLocalTime(DateTime)
  fullName: System.TimeZone.ToLocalTime(DateTime)
- uid: System.TimeZone.ToUniversalTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: ToUniversalTime(DateTime)
  nameWithType: TimeZone.ToUniversalTime(DateTime)
  fullName: System.TimeZone.ToUniversalTime(DateTime)
- uid: System.TimeZone.#ctor*
  parent: System.TimeZone
  isExternal: false
  name: TimeZone
  nameWithType: TimeZone.TimeZone
- uid: System.TimeZone.CurrentTimeZone*
  parent: System.TimeZone
  isExternal: false
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
- uid: System.TimeZone.DaylightName*
  parent: System.TimeZone
  isExternal: false
  name: DaylightName
  nameWithType: TimeZone.DaylightName
- uid: System.TimeZone.GetDaylightChanges*
  parent: System.TimeZone
  isExternal: false
  name: GetDaylightChanges
  nameWithType: TimeZone.GetDaylightChanges
- uid: System.TimeZone.GetUtcOffset*
  parent: System.TimeZone
  isExternal: false
  name: GetUtcOffset
  nameWithType: TimeZone.GetUtcOffset
- uid: System.TimeZone.IsDaylightSavingTime*
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime
  nameWithType: TimeZone.IsDaylightSavingTime
- uid: System.TimeZone.StandardName*
  parent: System.TimeZone
  isExternal: false
  name: StandardName
  nameWithType: TimeZone.StandardName
- uid: System.TimeZone.ToLocalTime*
  parent: System.TimeZone
  isExternal: false
  name: ToLocalTime
  nameWithType: TimeZone.ToLocalTime
- uid: System.TimeZone.ToUniversalTime*
  parent: System.TimeZone
  isExternal: false
  name: ToUniversalTime
  nameWithType: TimeZone.ToUniversalTime
