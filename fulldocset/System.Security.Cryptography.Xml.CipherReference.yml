### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.CipherReference
  id: CipherReference
  children:
  - System.Security.Cryptography.Xml.CipherReference.#ctor
  - System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)
  - System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  - System.Security.Cryptography.Xml.CipherReference.GetXml
  - System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)
  langs:
  - csharp
  name: CipherReference
  nameWithType: CipherReference
  fullName: System.Security.Cryptography.Xml.CipherReference
  type: Class
  summary: "Representa o <xref uid=&quot;langword_csharp_&lt;CipherReference&gt;&quot; name=&quot;&lt;CipherReference&gt;&quot; href=&quot;&quot;> </xref> elemento na criptografia de XML. Essa classe não pode ser herdada."
  remarks: "Essa classe representa o `<CipherReference>` elemento na criptografia de XML. Ele identifica uma fonte que, quando processado, produz os dados criptografados.       Real criptografado dados referenciados pelo `<CipherReference>` é obtido pelo seguinte processo. O `<CipherReference> URI` propriedade contém um identificador de recurso uniforme (URI) que está referenciado. Se o `<CipherReference>` elemento também contém uma cadeia de transformação, os dados resultantes de URI de referência são transformados conforme especificado para produzir os dados criptografados. Por exemplo, se os dados criptografados forem codificado na base64 em um documento XML, as transformações deverá especificar uma expressão XPath seguida por uma decodificação de base64 para que os dados criptografados podem ser extraídos.       A sintaxe do URI e transformações é semelhante de assinaturas digitais XML.  No entanto, em assinaturas digitais XML, geração e processamento de validação começam com os mesmos dados de origem em realizar essa transformação na mesma ordem. Na criptografia de XML, o aplicativo de descriptografia tem apenas os dados criptografados e as transformações especificadas. As transformações são enumeradas na ordem necessária obter os dados criptografados.       **Observação** por padrão, você não pode cancelar as referências de codificação de documentos com fontes desconhecidas, como arquivos de um site, porque o <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A>é de propriedade **nulo**.</xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> Por exemplo, quando você tenta descriptografar um arquivo que contém um `<CipherReference>` elemento que faz referência a um arquivo na Web, um <xref:System.Security.SecurityException>é gerada, mesmo se a solicitação é feita por um assembly totalmente confiável.</xref:System.Security.SecurityException>       Se tiver certeza de que os documentos que são descriptografia podem ser confiáveis, você pode alterar esse comportamento para aplicativos totalmente confiáveis usando o código a seguir:```   Evidence ev = new Evidence();   ev.AddHost (new Zone(SecurityZone.MyComputer));   EncryptedXml exml = new EncryptedXml(doc, ev);   ```"
  example:
  - "The following code example creates a new instance of CipherReference.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/t-system.security.crypto_127_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/t-system.security.crypto_127_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/t-system.security.crypto_127_1.cpp)]"
  syntax:
    content: 'public sealed class CipherReference : System.Security.Cryptography.Xml.EncryptedReference'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.EncryptedReference
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Xml.EncryptedReference.AddTransform(System.Security.Cryptography.Xml.Transform)
  - System.Security.Cryptography.Xml.EncryptedReference.CacheValid
  - System.Security.Cryptography.Xml.EncryptedReference.ReferenceType
  - System.Security.Cryptography.Xml.EncryptedReference.TransformChain
  - System.Security.Cryptography.Xml.EncryptedReference.Uri
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: CipherReference()
  nameWithType: CipherReference.CipherReference()
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;> </xref> classe."
  remarks: "Este construtor cria um <xref:System.Security.Cryptography.Xml.CipherReference>objeto que fornece informações de referência para um <xref:System.Security.Cryptography.Xml.CipherData>objeto.</xref:System.Security.Cryptography.Xml.CipherData> </xref:System.Security.Cryptography.Xml.CipherReference>"
  example:
  - "The following code example creates a new instance of <xref:System.Security.Cryptography.Xml.CipherReference>.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/m-system.security.crypto_105_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/m-system.security.crypto_105_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/m-system.security.crypto_105_1.cpp)]"
  syntax:
    content: public CipherReference ();
    parameters: []
  overload: System.Security.Cryptography.Xml.CipherReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: CipherReference(String)
  nameWithType: CipherReference.CipherReference(String)
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;> </xref> classe usando o Uniform Resource identificador (URI especificado)."
  remarks: "Este construtor cria um <xref:System.Security.Cryptography.Xml.CipherReference>objeto usando um identificador de recurso uniforme (URI) que aponta para os dados criptografados.</xref:System.Security.Cryptography.Xml.CipherReference> O objeto é usado para fornecer informações de referência para um <xref:System.Security.Cryptography.Xml.CipherData>objeto.</xref:System.Security.Cryptography.Xml.CipherData>       Você pode usar um URI para designar um arquivo XML que contém dados criptografados. Por exemplo: `String uri = &quot;http://www.woodgrovebank.com/document.xml&quot;;` você também pode usar um URI parcial para designar que apenas uma parte de um documento XML é sejam criptografados. Por exemplo, suponha que um documento XML chamado Document contém duas `MyForm` elementos conforme mostrado no exemplo de código XML a seguir: `<MyForm Id=&quot;Form1&quot;>` `<! -- Form data here -->` `</MyForm>` `<MyForm Id=&quot;Form2&quot;>` `<! -- Form data here -->` `</MyForm>` você pode criptografar somente o conteúdo no `Form2` usando um URI, como o seguinte:                                   `String uri = &quot;http://www.woodgrovebank.com/document.xml#Form2&quot;;`"
  example:
  - "The following code example creates a new instance of <xref:System.Security.Cryptography.Xml.CipherReference>.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/m-system.security.crypto_103_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/m-system.security.crypto_103_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/m-system.security.crypto_103_1.cpp)]"
  syntax:
    content: public CipherReference (string uri);
    parameters:
    - id: uri
      type: System.String
      description: "Um URI Uniform Resource Identifier () apontando para os dados criptografados."
  overload: System.Security.Cryptography.Xml.CipherReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  id: '#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)'
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: CipherReference(String,TransformChain)
  nameWithType: CipherReference.CipherReference(String,TransformChain)
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String,TransformChain)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;> </xref> usando as informações de cadeia especificadas do identificador de recurso uniforme (URI) e a transformação de classe."
  remarks: "Este construtor cria um <xref:System.Security.Cryptography.Xml.CipherReference>objeto usando uma cadeia de identificador de recurso uniforme (URI) e a transformação para indicar os dados criptografados.</xref:System.Security.Cryptography.Xml.CipherReference> O objeto é usado para fornecer informações de referência para um <xref:System.Security.Cryptography.Xml.CipherData>objeto.</xref:System.Security.Cryptography.Xml.CipherData>"
  example:
  - "The following code example creates a new instance of <xref:System.Security.Cryptography.Xml.CipherReference>.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/b72a27e7-300b-421f-bbd3-_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/b72a27e7-300b-421f-bbd3-_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/b72a27e7-300b-421f-bbd3-_1.cpp)]"
  syntax:
    content: public CipherReference (string uri, System.Security.Cryptography.Xml.TransformChain transformChain);
    parameters:
    - id: uri
      type: System.String
      description: "Um URI Uniform Resource Identifier () apontando para os dados criptografados."
    - id: transformChain
      type: System.Security.Cryptography.Xml.TransformChain
      description: "Um <xref href=&quot;System.Security.Cryptography.Xml.TransformChain&quot;> </xref> objeto que descreve as transformações para fazer os dados criptografados."
  overload: System.Security.Cryptography.Xml.CipherReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: GetXml()
  nameWithType: CipherReference.GetXml()
  fullName: System.Security.Cryptography.Xml.CipherReference.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Retorna a representação XML de um <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;> </xref> objeto."
  remarks: "Use esse método para produzir o `<CipherReference>` elemento no XML."
  example:
  - "The following code example shows one way to use the GetXml method.  \n  \n [!code-vb[CipherReference2#1](~/add/codesnippet/visualbasic/m-system.security.crypto_115_1.vb)]\n [!code-cpp[CipherReference2#1](~/add/codesnippet/cpp/m-system.security.crypto_115_1.cpp)]\n [!code-cs[CipherReference2#1](~/add/codesnippet/csharp/m-system.security.crypto_115_1.cs)]"
  syntax:
    content: public override System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "Um <xref href=&quot;System.Xml.XmlElement&quot;> </xref> que representa o <xref uid=&quot;langword_csharp_&lt;CipherReference&gt;&quot; name=&quot;&lt;CipherReference&gt;&quot; href=&quot;&quot;> </xref> elemento na criptografia de XML."
  overload: System.Security.Cryptography.Xml.CipherReference.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;></xref> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: CipherReference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.CipherReference.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Carrega informações de XML no <xref uid=&quot;langword_csharp_&lt;CipherReference&gt;&quot; name=&quot;&lt;CipherReference&gt;&quot; href=&quot;&quot;> </xref> elemento na criptografia de XML."
  remarks: "Use esse método para carregar um elemento XML existente para o <xref:System.Security.Cryptography.Xml.CipherReference>objeto.</xref:System.Security.Cryptography.Xml.CipherReference>"
  syntax:
    content: public override void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "Um <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto que representa um elemento XML a ser usado como referência."
  overload: System.Security.Cryptography.Xml.CipherReference.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> provided is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: System.Security.Cryptography.Xml.EncryptedReference
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: CipherReference()
  nameWithType: CipherReference.CipherReference()
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference()
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: CipherReference(String)
  nameWithType: CipherReference.CipherReference(String)
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: CipherReference(String,TransformChain)
  nameWithType: CipherReference.CipherReference(String,TransformChain)
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String,TransformChain)
- uid: System.Security.Cryptography.Xml.TransformChain
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: TransformChain
  nameWithType: TransformChain
  fullName: System.Security.Cryptography.Xml.TransformChain
- uid: System.Security.Cryptography.Xml.CipherReference.GetXml
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: GetXml()
  nameWithType: CipherReference.GetXml()
  fullName: System.Security.Cryptography.Xml.CipherReference.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: CipherReference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.CipherReference.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor*
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: CipherReference
  nameWithType: CipherReference.CipherReference
- uid: System.Security.Cryptography.Xml.CipherReference.GetXml*
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: GetXml
  nameWithType: CipherReference.GetXml
- uid: System.Security.Cryptography.Xml.CipherReference.LoadXml*
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: LoadXml
  nameWithType: CipherReference.LoadXml
