### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row
  id: Row
  children:
  - System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)
  - System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression
  langs:
  - csharp
  name: Row
  nameWithType: Row
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row
  type: Class
  summary: "Fornece um construtor semelhante de chamar <xref:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*>.</xref:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*>"
  syntax:
    content: public sealed class Row
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])
  id: '#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])'
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row
  langs:
  - csharp
  name: Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)
  nameWithType: Row.Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Common.CommandTrees.ExpressionBuilder.Row&quot;> </xref> classe com o valor da primeira coluna e valores de coluna sucessivas opcional."
  syntax:
    content: public Row (System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression> columnValue, System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>[] columnValues);
    parameters:
    - id: columnValue
      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}
      description: "Um par chave-valor que fornece a primeira coluna na nova instância de linha. (obrigatório)"
    - id: columnValues
      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[]
      description: "Pares de chave-valor que fornecem todas as colunas subsequentes na nova instância de linha. (opcional)"
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)
  id: op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row
  langs:
  - csharp
  name: op_Implicit(Row)
  nameWithType: Row.op_Implicit(Row)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(Row)
  type: Operator
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (System.Data.Common.CommandTrees.ExpressionBuilder.Row row);
    parameters:
    - id: row
      type: System.Data.Common.CommandTrees.ExpressionBuilder.Row
      description: "A ser adicionado."
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A ser adicionado."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression
  id: ToExpression
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row
  langs:
  - csharp
  name: ToExpression()
  nameWithType: Row.ToExpression()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um novo <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref> que constrói uma nova linha com base nas colunas contidas nesta instância de linha."
  syntax:
    content: public System.Data.Common.CommandTrees.DbNewInstanceExpression ToExpression ();
    parameters: []
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "Um novo DbNewInstanceExpression que constrói uma linha com os mesmos nomes de coluna e valores de DbExpression que esta instância de linha."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row
  isExternal: false
  name: Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)
  nameWithType: Row.Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<String,DbExpression>
  nameWithType: KeyValuePair<String,DbExpression>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[]
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<String,DbExpression>
  nameWithType: KeyValuePair<String,DbExpression>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>[]
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>[]
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row
  isExternal: false
  name: op_Implicit(Row)
  nameWithType: Row.op_Implicit(Row)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(Row)
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row
  parent: System.Data.Common.CommandTrees.ExpressionBuilder
  isExternal: false
  name: Row
  nameWithType: Row
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row
  isExternal: false
  name: ToExpression()
  nameWithType: Row.ToExpression()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression()
- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNewInstanceExpression
  nameWithType: DbNewInstanceExpression
  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row
  isExternal: false
  name: Row
  nameWithType: Row.Row
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row
  isExternal: false
  name: op_Implicit
  nameWithType: Row.op_Implicit
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row
  isExternal: false
  name: ToExpression
  nameWithType: Row.ToExpression
