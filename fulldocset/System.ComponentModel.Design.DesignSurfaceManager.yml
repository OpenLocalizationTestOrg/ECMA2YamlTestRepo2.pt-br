### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignSurfaceManager
  id: DesignSurfaceManager
  children:
  - System.ComponentModel.Design.DesignSurfaceManager.#ctor
  - System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  - System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  - System.ComponentModel.Design.DesignSurfaceManager.Dispose
  - System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  - System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  - System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  langs:
  - csharp
  name: DesignSurfaceManager
  nameWithType: DesignSurfaceManager
  fullName: System.ComponentModel.Design.DesignSurfaceManager
  type: Class
  summary: "Gerencia uma coleção de <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> objetos."
  remarks: "A classe DesignSurfaceManager é projetada para ser um contêiner de <xref:System.ComponentModel.Design.DesignSurface>objetos.</xref:System.ComponentModel.Design.DesignSurface> Ele fornece serviços comuns esse identificador de evento roteamento entre designers, janelas de propriedade e outros objetos globais. Usar DesignSurfaceManager é opcional, mas é recomendável se você pretende ter várias janelas de designer.       A classe DesignSurfaceManager fornece vários serviços de tempo de design automaticamente. Você pode substituir cada um desses serviços, substituindo-os em protegido <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>propriedade.</xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> Para substituir um serviço, substituir o construtor, chamar base e faça as alterações por meio do método <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>propriedade.</xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> Todos os serviços adicionados ao contêiner de serviço que implementam o <xref:System.IDisposable>interface são descartados quando o Gerenciador de superfície de design é descartado.</xref:System.IDisposable> A classe DesignSurfaceManager fornece o <xref:System.ComponentModel.Design.IDesignerEventService>interface como o serviço padrão.</xref:System.ComponentModel.Design.IDesignerEventService> <xref:System.ComponentModel.Design.IDesignerEventService>Fornece um mecanismo de eventos globais para eventos de designer.</xref:System.ComponentModel.Design.IDesignerEventService> Com esse mecanismo, um aplicativo é informado quando um designer se torna ativo. O serviço fornece uma coleção de designers e um único local onde a objetos globais, como a janela de propriedades, podem monitorar a seleção de eventos de alteração."
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public class DesignSurfaceManager : IDisposable, IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceManager()
  nameWithType: DesignSurfaceManager.DesignSurfaceManager()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;> </xref> classe."
  syntax:
    content: public DesignSurfaceManager ();
    parameters: []
  overload: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceManager(IServiceProvider)
  nameWithType: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;> </xref> classe."
  syntax:
    content: public DesignSurfaceManager (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "Um provedor de serviço pai. Solicitações de serviço são encaminhadas para esse provedor se eles não podem ser resolvidos pelo Gerenciador de superfície de design."
  overload: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  id: ActiveDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Obtém ou define o designer ativo."
  remarks: "A propriedade ActiveDesignSurface deve ser definida pela interface de usuário do designer sempre que um designer torna-se a janela ativa. A implementação padrão dessa propriedade funciona com a implementação padrão da <xref:System.ComponentModel.Design.IDesignerEventService>interface notificar partes interessadas que um novo designer está ativo agora.</xref:System.ComponentModel.Design.IDesignerEventService> Se você fornecer sua própria implementação de <xref:System.ComponentModel.Design.IDesignerEventService>, você deve substituir essa propriedade para notificar o serviço adequadamente.</xref:System.ComponentModel.Design.IDesignerEventService> Essa propriedade pode ser definida como `null`, indicando que nenhum designer está ativa."
  syntax:
    content: public virtual System.ComponentModel.Design.DesignSurface ActiveDesignSurface { get; set; }
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "O designer ativo."
  overload: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  id: ActiveDesignSurfaceChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ActiveDesignSurfaceChanged
  nameWithType: DesignSurfaceManager.ActiveDesignSurfaceChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Ocorre quando o designer ativo no momento é alterado."
  syntax:
    content: public event System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged;
    return:
      type: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  id: CreateDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurface()
  nameWithType: DesignSurfaceManager.CreateDesignSurface()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Cria uma instância de uma superfície de design."
  syntax:
    content: public System.ComponentModel.Design.DesignSurface CreateDesignSurface ();
    parameters: []
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "Uma nova instância superfície de design."
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  id: CreateDesignSurface(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurface(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Cria uma instância de uma superfície de design."
  remarks: "Se você deseja adicionar convenientemente serviços por designer adicionais, use o `parentProvider` parâmetro para fornecer um provedor de serviços para essa superfície de design. O método CreateDesignSurface cria um provedor de serviço mesclado que pode atender a solicitações de serviço do provedor de serviço em questão, bem como a <xref:System.ComponentModel.Design.DesignSurfaceManager>em si.</xref:System.ComponentModel.Design.DesignSurfaceManager> O método CreateDesignSurface, em seguida, passa esse provedor de serviços para o <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>método.</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>       Depois <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>retorna a superfície de design, o método tenta obter <xref:System.ComponentModel.Design.IDesignerEventService>.</xref:System.ComponentModel.Design.IDesignerEventService> de CreateDesignSurface</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> Se estiver presente, e se for a instância do serviço que <xref:System.ComponentModel.Design.DesignSurfaceManager>fornecido por padrão, o método CreateDesignSurface dispara o <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated>evento.</xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> </xref:System.ComponentModel.Design.DesignSurfaceManager>"
  syntax:
    content: public System.ComponentModel.Design.DesignSurface CreateDesignSurface (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "Um provedor de serviço pai. Um novo provedor de serviço mesclado será criado e será primeiro solicitar esse provedor para um serviço e, em seguida, delegado falhas para o objeto do Gerenciador de superfície de design. Este provedor mesclada será passado para o <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*>método.</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*>"
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "Uma nova instância superfície de design."
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parentProvider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  id: CreateDesignSurfaceCore(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurfaceCore(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Implementação que cria a superfície de design."
  remarks: "O método CreateDesignSurfaceCore é chamado por ambos <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>métodos.</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> É a implementação que cria, na verdade, a superfície de design. A implementação padrão retorna apenas um novo <xref:System.ComponentModel.Design.DesignSurface>.</xref:System.ComponentModel.Design.DesignSurface> Você pode substituir esse método para fornecer um objeto personalizado que deriva da <xref:System.ComponentModel.Design.DesignSurface>classe</xref:System.ComponentModel.Design.DesignSurface> de"
  syntax:
    content: protected virtual System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "Um provedor de serviços para passar para a superfície de design. Isso é uma instância de <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;> </xref> ou um objeto que implementa <xref:System.IServiceProvider>e representa uma mesclagem entre o provedor de serviços do <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;> </xref> classe e um provedor externamente passado.</xref:System.IServiceProvider>"
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "Uma nova instância superfície de design."
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  id: DesignSurfaceCreated
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceCreated
  nameWithType: DesignSurfaceManager.DesignSurfaceCreated
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Ocorre quando é criado um designer."
  syntax:
    content: public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated;
    return:
      type: System.ComponentModel.Design.DesignSurfaceEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  id: DesignSurfaceDisposed
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceDisposed
  nameWithType: DesignSurfaceManager.DesignSurfaceDisposed
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Ocorre quando um designer é descartado."
  syntax:
    content: public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed;
    return:
      type: System.ComponentModel.Design.DesignSurfaceEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  id: DesignSurfaces
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Obtém uma coleção de superfícies de design."
  remarks: "A propriedade DesignSurfaces é implementada diretamente na parte superior do <xref:System.ComponentModel.Design.IDesignerEventService>, portanto, se você fornecer sua própria implementação do serviço, esta propriedade usa sua implementação.</xref:System.ComponentModel.Design.IDesignerEventService>"
  syntax:
    content: public System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces { get; }
    return:
      type: System.ComponentModel.Design.DesignSurfaceCollection
      description: "Uma coleção de superfícies de design que são hospedadas no momento pelo Gerenciador de superfície de design."
  overload: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignSurfaceManager.Dispose()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Libera os recursos usados pelo <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;> </xref>."
  remarks: "O método Dispose público segue o padrão <xref:System.IDisposable>padrão.</xref:System.IDisposable> Chamar este método destrói o Gerenciador de superfície de design. Ele também libera o contêiner de serviço, que faz com que todos os serviços que implementam <xref:System.IDisposable>também seja descartado.</xref:System.IDisposable> A versão protegida desse método é `virtual` e segue o normal <xref:System.IDisposable>padrão.</xref:System.IDisposable>      > [!NOTE] > Porque <xref:System.ComponentModel.Design.DesignSurfaceManager>não tem qualquer código nativo para limpar, ele não tem um finalizador que chama <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> </xref:System.ComponentModel.Design.DesignSurfaceManager> Se você precisar chamar <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, você deve adicionar um finalizador.</xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignSurfaceManager.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Libera os recursos não gerenciados usados pelo <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;> </xref> e, opcionalmente, libera os recursos gerenciados."
  remarks: "O público <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>método segue o padrão <xref:System.IDisposable>padrão.</xref:System.IDisposable> </xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> Chamar este método destrói o Gerenciador de superfície de design. Ele também libera o contêiner de serviço, que faz com que todos os serviços que implementam <xref:System.IDisposable>também seja descartado.</xref:System.IDisposable> A versão protegida desse método é `virtual` e segue o normal <xref:System.IDisposable>padrão.</xref:System.IDisposable>      > [!NOTE] > Porque <xref:System.ComponentModel.Design.DesignSurfaceManager>não tem qualquer código nativo para limpar, ele não tem um finalizador que chama Dispose.</xref:System.ComponentModel.Design.DesignSurfaceManager> Se você precisar chamar Dispose, você deve adicionar um finalizador por conta própria.       Este método é chamado pelo público `Dispose()`método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> `Dispose()`invoca o protegido `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro for true, este método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.ComponentModel.Design.DesignSurfaceManager>referências.</xref:System.ComponentModel.Design.DesignSurfaceManager> Este método chama o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar recursos gerenciados e não gerenciados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para liberar apenas recursos não gerenciados."
  overload: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: DesignSurfaceManager.GetService(Type)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Obtém um serviço no contêiner de serviço do Gerenciador de superfície de design."
  remarks: "O método GetService encaminha em qualquer provedor de serviço que foi fornecida ao Gerenciador de superfície de design em tempo de construção."
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O tipo de serviço para recuperar."
    return:
      type: System.Object
      description: "Um objeto que implementa ou é uma classe derivada do tipo de serviço; Caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o serviço não existe no contêiner de serviço."
  overload: System.ComponentModel.Design.DesignSurfaceManager.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  id: SelectionChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: SelectionChanged
  nameWithType: DesignSurfaceManager.SelectionChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Ocorre quando a seleção global é alterada."
  remarks: "Esse evento é gerado quando a seleção ativa do designer do componente de conjunto de alterações. Isso é mapeado por meio de <xref:System.ComponentModel.Design.IDesignerEventService>interface.</xref:System.ComponentModel.Design.IDesignerEventService>"
  syntax:
    content: public event EventHandler SelectionChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  id: ServiceContainer
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Obtém o ServiceContainer do Gerenciador de superfície de design."
  syntax:
    content: protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }
    return:
      type: System.ComponentModel.Design.ServiceContainer
      description: "ServiceContainer do Gerenciador de superfície de design."
  overload: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager()
  nameWithType: DesignSurfaceManager.DesignSurfaceManager()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager()
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager(IServiceProvider)
  nameWithType: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
- uid: System.ComponentModel.Design.DesignSurface
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurface
  nameWithType: DesignSurface
  fullName: System.ComponentModel.Design.DesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurfaceChanged
  nameWithType: DesignSurfaceManager.ActiveDesignSurfaceChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
- uid: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: ActiveDesignSurfaceChangedEventHandler
  nameWithType: ActiveDesignSurfaceChangedEventHandler
  fullName: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface()
  nameWithType: DesignSurfaceManager.CreateDesignSurface()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface()
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurfaceCore(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceCreated
  nameWithType: DesignSurfaceManager.DesignSurfaceCreated
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
- uid: System.ComponentModel.Design.DesignSurfaceEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurfaceEventHandler
  nameWithType: DesignSurfaceEventHandler
  fullName: System.ComponentModel.Design.DesignSurfaceEventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceDisposed
  nameWithType: DesignSurfaceManager.DesignSurfaceDisposed
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
- uid: System.ComponentModel.Design.DesignSurfaceCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurfaceCollection
  nameWithType: DesignSurfaceCollection
  fullName: System.ComponentModel.Design.DesignSurfaceCollection
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose()
  nameWithType: DesignSurfaceManager.Dispose()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose()
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignSurfaceManager.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: GetService(Type)
  nameWithType: DesignSurfaceManager.GetService(Type)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: SelectionChanged
  nameWithType: DesignSurfaceManager.SelectionChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
- uid: System.ComponentModel.Design.ServiceContainer
  parent: System.ComponentModel.Design
  isExternal: false
  name: ServiceContainer
  nameWithType: ServiceContainer
  fullName: System.ComponentModel.Design.ServiceContainer
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager
  nameWithType: DesignSurfaceManager.DesignSurfaceManager
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface
  nameWithType: DesignSurfaceManager.CreateDesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurfaceCore
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose
  nameWithType: DesignSurfaceManager.Dispose
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: GetService
  nameWithType: DesignSurfaceManager.GetService
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
